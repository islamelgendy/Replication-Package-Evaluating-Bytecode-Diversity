Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 36
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        double[] doubleArray21 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray22 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray21, doubleArray22, true);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray25 = gaussianFitter12.fit((int) (byte) 100, parametricUnivariateRealFunction14, doubleArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aconst_null
86: astore        6
88: bipush        6
90: newarray       double
92: dup
93: iconst_0
94: ldc2_w        #27
97: dastore
98: dup
99: iconst_1
100: ldc2_w        #9
103: dastore
104: dup
105: iconst_2
106: ldc2_w        #13
109: dastore
110: dup
111: iconst_3
112: ldc2_w        #29
115: dastore
116: dup
117: iconst_4
118: ldc2_w        #17
121: dastore
122: dup
123: iconst_5
124: ldc2_w        #31
127: dastore
128: astore        7
130: aconst_null
131: astore        8
133: new           #33
136: dup
137: aload         7
139: aload         8
141: iconst_1
142: invokespecial #34
145: astore        9
147: aload         5
149: bipush        100
151: aload         6
153: aload         8
155: invokevirtual #35
158: astore        10
160: ldc           #36
162: invokestatic  #37
165: goto          170
168: astore        10
170: new           #39
173: dup
174: invokespecial #40
177: ldc           #41
179: invokevirtual #42
182: iload_3
183: invokevirtual #43
186: ldc           #44
188: invokevirtual #42
191: iconst_0
192: invokevirtual #43
195: ldc           #41
197: invokevirtual #42
200: invokevirtual #45
203: iload_3
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #46
215: new           #39
218: dup
219: invokespecial #40
222: ldc           #41
224: invokevirtual #42
227: iload         4
229: invokevirtual #43
232: ldc           #44
234: invokevirtual #42
237: iconst_0
238: invokevirtual #43
241: ldc           #41
243: invokevirtual #42
246: invokevirtual #45
249: iload         4
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #46
262: aload         7
264: invokestatic  #47
267: aload         7
269: invokestatic  #48
272: ldc           #49
274: invokestatic  #50
277: return
Exception table:
from    to  target type
147   165   168   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 39
End line: 101
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction7 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer13 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer13.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker16);
        int int18 = levenbergMarquardtOptimizer13.getMaxEvaluations();
        int int19 = levenbergMarquardtOptimizer13.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter20 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer13);
        gaussianFitter20.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction22 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker31 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer28.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker31);
        int int33 = levenbergMarquardtOptimizer28.getMaxEvaluations();
        int int34 = levenbergMarquardtOptimizer28.getMaxEvaluations();
        int int35 = levenbergMarquardtOptimizer28.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter36 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer28);
        double[] doubleArray43 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray44 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair46 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray44, true);
        double[] doubleArray47 = gaussianFitter36.fit(doubleArray43);
        double[] doubleArray48 = gaussianFitter20.fit(parametricUnivariateRealFunction22, doubleArray47);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer54 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker57 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer54.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker57);
        int int59 = levenbergMarquardtOptimizer54.getMaxEvaluations();
        int int60 = levenbergMarquardtOptimizer54.getMaxEvaluations();
        int int61 = levenbergMarquardtOptimizer54.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter62 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer54);
        double[] doubleArray69 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray70 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray69, doubleArray70, true);
        double[] doubleArray73 = gaussianFitter62.fit(doubleArray69);
        double[] doubleArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair75 = levenbergMarquardtOptimizer5.optimize((int) (byte) -1, differentiableMultivariateVectorialFunction7, doubleArray47, doubleArray69, doubleArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #51
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: aconst_null
46: astore_2
47: new           #8
50: dup
51: ldc2_w        #9
54: ldc2_w        #11
57: ldc2_w        #13
60: dconst_1
61: ldc2_w        #13
64: invokespecial #15
67: astore_3
68: new           #16
71: dup
72: ldc2_w        #17
75: ldc2_w        #19
78: invokespecial #21
81: astore        4
83: aload_3
84: aload         4
86: invokevirtual #22
89: aload_3
90: invokevirtual #23
93: istore        5
95: aload_3
96: invokevirtual #23
99: istore        6
101: new           #24
104: dup
105: aload_3
106: invokespecial #25
109: astore        7
111: aload         7
113: invokevirtual #52
116: aconst_null
117: astore        8
119: new           #8
122: dup
123: ldc2_w        #9
126: ldc2_w        #11
129: ldc2_w        #13
132: dconst_1
133: ldc2_w        #13
136: invokespecial #15
139: astore        9
141: new           #16
144: dup
145: ldc2_w        #17
148: ldc2_w        #19
151: invokespecial #21
154: astore        10
156: aload         9
158: aload         10
160: invokevirtual #22
163: aload         9
165: invokevirtual #23
168: istore        11
170: aload         9
172: invokevirtual #23
175: istore        12
177: aload         9
179: invokevirtual #53
182: istore        13
184: new           #24
187: dup
188: aload         9
190: invokespecial #25
193: astore        14
195: bipush        6
197: newarray       double
199: dup
200: iconst_0
201: ldc2_w        #27
204: dastore
205: dup
206: iconst_1
207: ldc2_w        #9
210: dastore
211: dup
212: iconst_2
213: ldc2_w        #13
216: dastore
217: dup
218: iconst_3
219: ldc2_w        #29
222: dastore
223: dup
224: iconst_4
225: ldc2_w        #17
228: dastore
229: dup
230: iconst_5
231: ldc2_w        #31
234: dastore
235: astore        15
237: aconst_null
238: astore        16
240: new           #33
243: dup
244: aload         15
246: aload         16
248: iconst_1
249: invokespecial #34
252: astore        17
254: aload         14
256: aload         15
258: invokevirtual #54
261: astore        18
263: aload         7
265: aload         8
267: aload         18
269: invokevirtual #55
272: astore        19
274: new           #8
277: dup
278: ldc2_w        #9
281: ldc2_w        #11
284: ldc2_w        #13
287: dconst_1
288: ldc2_w        #13
291: invokespecial #15
294: astore        20
296: new           #16
299: dup
300: ldc2_w        #17
303: ldc2_w        #19
306: invokespecial #21
309: astore        21
311: aload         20
313: aload         21
315: invokevirtual #22
318: aload         20
320: invokevirtual #23
323: istore        22
325: aload         20
327: invokevirtual #23
330: istore        23
332: aload         20
334: invokevirtual #53
337: istore        24
339: new           #24
342: dup
343: aload         20
345: invokespecial #25
348: astore        25
350: bipush        6
352: newarray       double
354: dup
355: iconst_0
356: ldc2_w        #27
359: dastore
360: dup
361: iconst_1
362: ldc2_w        #9
365: dastore
366: dup
367: iconst_2
368: ldc2_w        #13
371: dastore
372: dup
373: iconst_3
374: ldc2_w        #29
377: dastore
378: dup
379: iconst_4
380: ldc2_w        #17
383: dastore
384: dup
385: iconst_5
386: ldc2_w        #31
389: dastore
390: astore        26
392: aconst_null
393: astore        27
395: new           #33
398: dup
399: aload         26
401: aload         27
403: iconst_1
404: invokespecial #34
407: astore        28
409: aload         25
411: aload         26
413: invokevirtual #54
416: astore        29
418: aconst_null
419: astore        30
421: aload_1
422: iconst_m1
423: aload_2
424: aload         18
426: aload         26
428: aload         30
430: invokevirtual #56
433: astore        31
435: ldc           #36
437: invokestatic  #37
440: goto          445
443: astore        31
445: new           #39
448: dup
449: invokespecial #40
452: ldc           #41
454: invokevirtual #42
457: iload         5
459: invokevirtual #43
462: ldc           #44
464: invokevirtual #42
467: iconst_0
468: invokevirtual #43
471: ldc           #41
473: invokevirtual #42
476: invokevirtual #45
479: iload         5
481: ifne          488
484: iconst_1
485: goto          489
488: iconst_0
489: invokestatic  #46
492: new           #39
495: dup
496: invokespecial #40
499: ldc           #41
501: invokevirtual #42
504: iload         6
506: invokevirtual #43
509: ldc           #44
511: invokevirtual #42
514: iconst_0
515: invokevirtual #43
518: ldc           #41
520: invokevirtual #42
523: invokevirtual #45
526: iload         6
528: ifne          535
531: iconst_1
532: goto          536
535: iconst_0
536: invokestatic  #46
539: new           #39
542: dup
543: invokespecial #40
546: ldc           #41
548: invokevirtual #42
551: iload         11
553: invokevirtual #43
556: ldc           #44
558: invokevirtual #42
561: iconst_0
562: invokevirtual #43
565: ldc           #41
567: invokevirtual #42
570: invokevirtual #45
573: iload         11
575: ifne          582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #46
586: new           #39
589: dup
590: invokespecial #40
593: ldc           #41
595: invokevirtual #42
598: iload         12
600: invokevirtual #43
603: ldc           #44
605: invokevirtual #42
608: iconst_0
609: invokevirtual #43
612: ldc           #41
614: invokevirtual #42
617: invokevirtual #45
620: iload         12
622: ifne          629
625: iconst_1
626: goto          630
629: iconst_0
630: invokestatic  #46
633: new           #39
636: dup
637: invokespecial #40
640: ldc           #41
642: invokevirtual #42
645: iload         13
647: invokevirtual #43
650: ldc           #44
652: invokevirtual #42
655: iconst_0
656: invokevirtual #43
659: ldc           #41
661: invokevirtual #42
664: invokevirtual #45
667: iload         13
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #46
680: aload         15
682: invokestatic  #47
685: aload         15
687: invokestatic  #48
690: ldc           #49
692: invokestatic  #50
695: aload         18
697: invokestatic  #47
700: aload         18
702: invokestatic  #48
705: ldc           #49
707: invokestatic  #50
710: aload         19
712: invokestatic  #47
715: aload         19
717: invokestatic  #48
720: ldc           #49
722: invokestatic  #50
725: new           #39
728: dup
729: invokespecial #40
732: ldc           #41
734: invokevirtual #42
737: iload         22
739: invokevirtual #43
742: ldc           #44
744: invokevirtual #42
747: iconst_0
748: invokevirtual #43
751: ldc           #41
753: invokevirtual #42
756: invokevirtual #45
759: iload         22
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #46
772: new           #39
775: dup
776: invokespecial #40
779: ldc           #41
781: invokevirtual #42
784: iload         23
786: invokevirtual #43
789: ldc           #44
791: invokevirtual #42
794: iconst_0
795: invokevirtual #43
798: ldc           #41
800: invokevirtual #42
803: invokevirtual #45
806: iload         23
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #46
819: new           #39
822: dup
823: invokespecial #40
826: ldc           #41
828: invokevirtual #42
831: iload         24
833: invokevirtual #43
836: ldc           #44
838: invokevirtual #42
841: iconst_0
842: invokevirtual #43
845: ldc           #41
847: invokevirtual #42
850: invokevirtual #45
853: iload         24
855: ifne          862
858: iconst_1
859: goto          863
862: iconst_0
863: invokestatic  #46
866: aload         26
868: invokestatic  #47
871: aload         26
873: invokestatic  #48
876: ldc           #49
878: invokestatic  #50
881: aload         29
883: invokestatic  #47
886: aload         29
888: invokestatic  #48
891: ldc           #49
893: invokestatic  #50
896: return
Exception table:
from    to  target type
421   440   443   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 104
End line: 150
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction14 = null;
        double[] doubleArray21 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray22 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray21, doubleArray22, true);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer30 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker33 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer30.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker33);
        int int35 = levenbergMarquardtOptimizer30.getMaxEvaluations();
        int int36 = levenbergMarquardtOptimizer30.getMaxEvaluations();
        int int37 = levenbergMarquardtOptimizer30.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter38 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer30);
        double[] doubleArray45 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray46 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray46, true);
        double[] doubleArray49 = gaussianFitter38.fit(doubleArray45);
        double[] doubleArray52 = new double[] { 100.0f, (short) 1 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = levenbergMarquardtOptimizer5.optimize((int) (short) 0, differentiableMultivariateVectorialFunction14, doubleArray22, doubleArray45, doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #57
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aconst_null
82: astore        7
84: bipush        6
86: newarray       double
88: dup
89: iconst_0
90: ldc2_w        #27
93: dastore
94: dup
95: iconst_1
96: ldc2_w        #9
99: dastore
100: dup
101: iconst_2
102: ldc2_w        #13
105: dastore
106: dup
107: iconst_3
108: ldc2_w        #29
111: dastore
112: dup
113: iconst_4
114: ldc2_w        #17
117: dastore
118: dup
119: iconst_5
120: ldc2_w        #31
123: dastore
124: astore        8
126: aconst_null
127: astore        9
129: new           #33
132: dup
133: aload         8
135: aload         9
137: iconst_1
138: invokespecial #34
141: astore        10
143: new           #8
146: dup
147: ldc2_w        #9
150: ldc2_w        #11
153: ldc2_w        #13
156: dconst_1
157: ldc2_w        #13
160: invokespecial #15
163: astore        11
165: new           #16
168: dup
169: ldc2_w        #17
172: ldc2_w        #19
175: invokespecial #21
178: astore        12
180: aload         11
182: aload         12
184: invokevirtual #22
187: aload         11
189: invokevirtual #23
192: istore        13
194: aload         11
196: invokevirtual #23
199: istore        14
201: aload         11
203: invokevirtual #53
206: istore        15
208: new           #24
211: dup
212: aload         11
214: invokespecial #25
217: astore        16
219: bipush        6
221: newarray       double
223: dup
224: iconst_0
225: ldc2_w        #27
228: dastore
229: dup
230: iconst_1
231: ldc2_w        #9
234: dastore
235: dup
236: iconst_2
237: ldc2_w        #13
240: dastore
241: dup
242: iconst_3
243: ldc2_w        #29
246: dastore
247: dup
248: iconst_4
249: ldc2_w        #17
252: dastore
253: dup
254: iconst_5
255: ldc2_w        #31
258: dastore
259: astore        17
261: aconst_null
262: astore        18
264: new           #33
267: dup
268: aload         17
270: aload         18
272: iconst_1
273: invokespecial #34
276: astore        19
278: aload         16
280: aload         17
282: invokevirtual #54
285: astore        20
287: iconst_2
288: newarray       double
290: dup
291: iconst_0
292: ldc2_w        #13
295: dastore
296: dup
297: iconst_1
298: dconst_1
299: dastore
300: astore        21
302: aload_1
303: iconst_0
304: aload         7
306: aload         9
308: aload         17
310: aload         21
312: invokevirtual #56
315: astore        22
317: ldc           #36
319: invokestatic  #37
322: goto          327
325: astore        22
327: new           #39
330: dup
331: invokespecial #40
334: ldc           #41
336: invokevirtual #42
339: iload_3
340: invokevirtual #43
343: ldc           #44
345: invokevirtual #42
348: iconst_0
349: invokevirtual #43
352: ldc           #41
354: invokevirtual #42
357: invokevirtual #45
360: iload_3
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #46
372: new           #39
375: dup
376: invokespecial #40
379: ldc           #41
381: invokevirtual #42
384: iload         4
386: invokevirtual #43
389: ldc           #44
391: invokevirtual #42
394: iconst_0
395: invokevirtual #43
398: ldc           #41
400: invokevirtual #42
403: invokevirtual #45
406: iload         4
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #46
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: dload         5
433: invokevirtual #59
436: ldc           #44
438: invokevirtual #42
441: dconst_0
442: invokevirtual #59
445: ldc           #41
447: invokevirtual #42
450: invokevirtual #45
453: dload         5
455: dconst_0
456: dcmpl
457: ifne          464
460: iconst_1
461: goto          465
464: iconst_0
465: invokestatic  #46
468: aload         8
470: invokestatic  #47
473: aload         8
475: invokestatic  #48
478: ldc           #49
480: invokestatic  #50
483: new           #39
486: dup
487: invokespecial #40
490: ldc           #41
492: invokevirtual #42
495: iload         13
497: invokevirtual #43
500: ldc           #44
502: invokevirtual #42
505: iconst_0
506: invokevirtual #43
509: ldc           #41
511: invokevirtual #42
514: invokevirtual #45
517: iload         13
519: ifne          526
522: iconst_1
523: goto          527
526: iconst_0
527: invokestatic  #46
530: new           #39
533: dup
534: invokespecial #40
537: ldc           #41
539: invokevirtual #42
542: iload         14
544: invokevirtual #43
547: ldc           #44
549: invokevirtual #42
552: iconst_0
553: invokevirtual #43
556: ldc           #41
558: invokevirtual #42
561: invokevirtual #45
564: iload         14
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #46
577: new           #39
580: dup
581: invokespecial #40
584: ldc           #41
586: invokevirtual #42
589: iload         15
591: invokevirtual #43
594: ldc           #44
596: invokevirtual #42
599: iconst_0
600: invokevirtual #43
603: ldc           #41
605: invokevirtual #42
608: invokevirtual #45
611: iload         15
613: ifne          620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #46
624: aload         17
626: invokestatic  #47
629: aload         17
631: invokestatic  #48
634: ldc           #49
636: invokestatic  #50
639: aload         20
641: invokestatic  #47
644: aload         20
646: invokestatic  #48
649: ldc           #49
651: invokestatic  #50
654: aload         21
656: invokestatic  #47
659: aload         21
661: invokestatic  #48
664: ldc           #60
666: invokestatic  #50
669: return
Exception table:
from    to  target type
302   322   325   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 153
End line: 173
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray14 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #61
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: aload         5
94: invokevirtual #63
97: astore        7
99: ldc           #64
101: invokestatic  #37
104: goto          109
107: astore        7
109: new           #39
112: dup
113: invokespecial #40
116: ldc           #41
118: invokevirtual #42
121: iload_3
122: invokevirtual #43
125: ldc           #44
127: invokevirtual #42
130: iconst_0
131: invokevirtual #43
134: ldc           #41
136: invokevirtual #42
139: invokevirtual #45
142: iload_3
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #46
154: new           #39
157: dup
158: invokespecial #40
161: ldc           #41
163: invokevirtual #42
166: iload         4
168: invokevirtual #43
171: ldc           #44
173: invokevirtual #42
176: iconst_0
177: invokevirtual #43
180: ldc           #41
182: invokevirtual #42
185: invokevirtual #45
188: iload         4
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #46
201: aload         6
203: invokestatic  #47
206: return
Exception table:
from    to  target type
92   104   107   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 176
End line: 197
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray15 = levenbergMarquardtOptimizer5.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than, or equal to, the minimum (0): no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #66
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: new           #24
94: dup
95: aload_1
96: invokespecial #25
99: astore        7
101: aload_1
102: invokevirtual #69
105: astore        8
107: ldc           #70
109: invokestatic  #37
112: goto          117
115: astore        8
117: new           #39
120: dup
121: invokespecial #40
124: ldc           #41
126: invokevirtual #42
129: iload_3
130: invokevirtual #43
133: ldc           #44
135: invokevirtual #42
138: iconst_0
139: invokevirtual #43
142: ldc           #41
144: invokevirtual #42
147: invokevirtual #45
150: iload_3
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #46
162: new           #39
165: dup
166: invokespecial #40
169: ldc           #41
171: invokevirtual #42
174: iload         4
176: invokevirtual #43
179: ldc           #44
181: invokevirtual #42
184: iconst_0
185: invokevirtual #43
188: ldc           #41
190: invokevirtual #42
193: invokevirtual #45
196: iload         4
198: ifne          205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #46
209: new           #39
212: dup
213: invokespecial #40
216: ldc           #41
218: invokevirtual #42
221: iload         5
223: invokevirtual #43
226: ldc           #44
228: invokevirtual #42
231: iconst_0
232: invokevirtual #43
235: ldc           #41
237: invokevirtual #42
240: invokevirtual #45
243: iload         5
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #46
256: return
Exception table:
from    to  target type
101   112   115   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 200
End line: 252
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray55 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #71
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: new           #8
88: dup
89: ldc2_w        #9
92: ldc2_w        #11
95: ldc2_w        #13
98: dconst_1
99: ldc2_w        #13
102: invokespecial #15
105: astore        6
107: new           #16
110: dup
111: ldc2_w        #17
114: ldc2_w        #19
117: invokespecial #21
120: astore        7
122: aload         6
124: aload         7
126: invokevirtual #22
129: aload         6
131: invokevirtual #23
134: istore        8
136: aload         6
138: invokevirtual #23
141: istore        9
143: new           #24
146: dup
147: aload         6
149: invokespecial #25
152: astore        10
154: aload         10
156: invokevirtual #52
159: aconst_null
160: astore        11
162: new           #8
165: dup
166: ldc2_w        #9
169: ldc2_w        #11
172: ldc2_w        #13
175: dconst_1
176: ldc2_w        #13
179: invokespecial #15
182: astore        12
184: new           #16
187: dup
188: ldc2_w        #17
191: ldc2_w        #19
194: invokespecial #21
197: astore        13
199: aload         12
201: aload         13
203: invokevirtual #22
206: aload         12
208: invokevirtual #23
211: istore        14
213: aload         12
215: invokevirtual #23
218: istore        15
220: aload         12
222: invokevirtual #53
225: istore        16
227: new           #24
230: dup
231: aload         12
233: invokespecial #25
236: astore        17
238: bipush        6
240: newarray       double
242: dup
243: iconst_0
244: ldc2_w        #27
247: dastore
248: dup
249: iconst_1
250: ldc2_w        #9
253: dastore
254: dup
255: iconst_2
256: ldc2_w        #13
259: dastore
260: dup
261: iconst_3
262: ldc2_w        #29
265: dastore
266: dup
267: iconst_4
268: ldc2_w        #17
271: dastore
272: dup
273: iconst_5
274: ldc2_w        #31
277: dastore
278: astore        18
280: aconst_null
281: astore        19
283: new           #33
286: dup
287: aload         18
289: aload         19
291: iconst_1
292: invokespecial #34
295: astore        20
297: aload         17
299: aload         18
301: invokevirtual #54
304: astore        21
306: aload         10
308: aload         11
310: aload         21
312: invokevirtual #55
315: astore        22
317: aload         5
319: aload         21
321: invokevirtual #54
324: astore        23
326: aload         5
328: invokevirtual #63
331: astore        24
333: ldc           #64
335: invokestatic  #37
338: goto          343
341: astore        24
343: new           #39
346: dup
347: invokespecial #40
350: ldc           #41
352: invokevirtual #42
355: iload_3
356: invokevirtual #43
359: ldc           #44
361: invokevirtual #42
364: iconst_0
365: invokevirtual #43
368: ldc           #41
370: invokevirtual #42
373: invokevirtual #45
376: iload_3
377: ifne          384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #46
388: new           #39
391: dup
392: invokespecial #40
395: ldc           #41
397: invokevirtual #42
400: iload         4
402: invokevirtual #43
405: ldc           #44
407: invokevirtual #42
410: iconst_0
411: invokevirtual #43
414: ldc           #41
416: invokevirtual #42
419: invokevirtual #45
422: iload         4
424: ifne          431
427: iconst_1
428: goto          432
431: iconst_0
432: invokestatic  #46
435: new           #39
438: dup
439: invokespecial #40
442: ldc           #41
444: invokevirtual #42
447: iload         8
449: invokevirtual #43
452: ldc           #44
454: invokevirtual #42
457: iconst_0
458: invokevirtual #43
461: ldc           #41
463: invokevirtual #42
466: invokevirtual #45
469: iload         8
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #46
482: new           #39
485: dup
486: invokespecial #40
489: ldc           #41
491: invokevirtual #42
494: iload         9
496: invokevirtual #43
499: ldc           #44
501: invokevirtual #42
504: iconst_0
505: invokevirtual #43
508: ldc           #41
510: invokevirtual #42
513: invokevirtual #45
516: iload         9
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #46
529: new           #39
532: dup
533: invokespecial #40
536: ldc           #41
538: invokevirtual #42
541: iload         14
543: invokevirtual #43
546: ldc           #44
548: invokevirtual #42
551: iconst_0
552: invokevirtual #43
555: ldc           #41
557: invokevirtual #42
560: invokevirtual #45
563: iload         14
565: ifne          572
568: iconst_1
569: goto          573
572: iconst_0
573: invokestatic  #46
576: new           #39
579: dup
580: invokespecial #40
583: ldc           #41
585: invokevirtual #42
588: iload         15
590: invokevirtual #43
593: ldc           #44
595: invokevirtual #42
598: iconst_0
599: invokevirtual #43
602: ldc           #41
604: invokevirtual #42
607: invokevirtual #45
610: iload         15
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #46
623: new           #39
626: dup
627: invokespecial #40
630: ldc           #41
632: invokevirtual #42
635: iload         16
637: invokevirtual #43
640: ldc           #44
642: invokevirtual #42
645: iconst_0
646: invokevirtual #43
649: ldc           #41
651: invokevirtual #42
654: invokevirtual #45
657: iload         16
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #46
670: aload         18
672: invokestatic  #47
675: aload         18
677: invokestatic  #48
680: ldc           #49
682: invokestatic  #50
685: aload         21
687: invokestatic  #47
690: aload         21
692: invokestatic  #48
695: ldc           #49
697: invokestatic  #50
700: aload         22
702: invokestatic  #47
705: aload         22
707: invokestatic  #48
710: ldc           #49
712: invokestatic  #50
715: aload         23
717: invokestatic  #47
720: aload         23
722: invokestatic  #48
725: ldc           #49
727: invokestatic  #50
730: return
Exception table:
from    to  target type
326   338   341   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 255
End line: 325
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker13 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction15 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer46.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker49);
        int int51 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int52 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer46.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter54 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer46);
        double[] doubleArray61 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray62 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray62, true);
        double[] doubleArray65 = gaussianFitter54.fit(doubleArray61);
        double[] doubleArray72 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray73 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair75 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray72, doubleArray73, true);
        double[] doubleArray76 = vectorialPointValuePair75.getValue();
        double[] doubleArray77 = vectorialPointValuePair75.getValue();
        double[] doubleArray78 = vectorialPointValuePair75.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair79 = levenbergMarquardtOptimizer5.optimize(1, differentiableMultivariateVectorialFunction15, doubleArray40, doubleArray61, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker13);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray76);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #72
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #73
85: astore        7
87: aconst_null
88: astore        8
90: new           #8
93: dup
94: ldc2_w        #9
97: ldc2_w        #11
100: ldc2_w        #13
103: dconst_1
104: ldc2_w        #13
107: invokespecial #15
110: astore        9
112: new           #16
115: dup
116: ldc2_w        #17
119: ldc2_w        #19
122: invokespecial #21
125: astore        10
127: aload         9
129: aload         10
131: invokevirtual #22
134: aload         9
136: invokevirtual #23
139: istore        11
141: aload         9
143: invokevirtual #23
146: istore        12
148: aload         9
150: invokevirtual #53
153: istore        13
155: new           #24
158: dup
159: aload         9
161: invokespecial #25
164: astore        14
166: bipush        6
168: newarray       double
170: dup
171: iconst_0
172: ldc2_w        #27
175: dastore
176: dup
177: iconst_1
178: ldc2_w        #9
181: dastore
182: dup
183: iconst_2
184: ldc2_w        #13
187: dastore
188: dup
189: iconst_3
190: ldc2_w        #29
193: dastore
194: dup
195: iconst_4
196: ldc2_w        #17
199: dastore
200: dup
201: iconst_5
202: ldc2_w        #31
205: dastore
206: astore        15
208: aconst_null
209: astore        16
211: new           #33
214: dup
215: aload         15
217: aload         16
219: iconst_1
220: invokespecial #34
223: astore        17
225: aload         14
227: aload         15
229: invokevirtual #54
232: astore        18
234: new           #8
237: dup
238: ldc2_w        #9
241: ldc2_w        #11
244: ldc2_w        #13
247: dconst_1
248: ldc2_w        #13
251: invokespecial #15
254: astore        19
256: new           #16
259: dup
260: ldc2_w        #17
263: ldc2_w        #19
266: invokespecial #21
269: astore        20
271: aload         19
273: aload         20
275: invokevirtual #22
278: aload         19
280: invokevirtual #23
283: istore        21
285: aload         19
287: invokevirtual #23
290: istore        22
292: aload         19
294: invokevirtual #53
297: istore        23
299: new           #24
302: dup
303: aload         19
305: invokespecial #25
308: astore        24
310: bipush        6
312: newarray       double
314: dup
315: iconst_0
316: ldc2_w        #27
319: dastore
320: dup
321: iconst_1
322: ldc2_w        #9
325: dastore
326: dup
327: iconst_2
328: ldc2_w        #13
331: dastore
332: dup
333: iconst_3
334: ldc2_w        #29
337: dastore
338: dup
339: iconst_4
340: ldc2_w        #17
343: dastore
344: dup
345: iconst_5
346: ldc2_w        #31
349: dastore
350: astore        25
352: aconst_null
353: astore        26
355: new           #33
358: dup
359: aload         25
361: aload         26
363: iconst_1
364: invokespecial #34
367: astore        27
369: aload         24
371: aload         25
373: invokevirtual #54
376: astore        28
378: bipush        6
380: newarray       double
382: dup
383: iconst_0
384: ldc2_w        #27
387: dastore
388: dup
389: iconst_1
390: ldc2_w        #9
393: dastore
394: dup
395: iconst_2
396: ldc2_w        #13
399: dastore
400: dup
401: iconst_3
402: ldc2_w        #29
405: dastore
406: dup
407: iconst_4
408: ldc2_w        #17
411: dastore
412: dup
413: iconst_5
414: ldc2_w        #31
417: dastore
418: astore        29
420: aconst_null
421: astore        30
423: new           #33
426: dup
427: aload         29
429: aload         30
431: iconst_1
432: invokespecial #34
435: astore        31
437: aload         31
439: invokevirtual #74
442: astore        32
444: aload         31
446: invokevirtual #74
449: astore        33
451: aload         31
453: invokevirtual #75
456: astore        34
458: aload_1
459: iconst_1
460: aload         8
462: aload         18
464: aload         25
466: aload         34
468: invokevirtual #56
471: astore        35
473: ldc           #36
475: invokestatic  #37
478: goto          483
481: astore        35
483: new           #39
486: dup
487: invokespecial #40
490: ldc           #41
492: invokevirtual #42
495: iload_3
496: invokevirtual #43
499: ldc           #44
501: invokevirtual #42
504: iconst_0
505: invokevirtual #43
508: ldc           #41
510: invokevirtual #42
513: invokevirtual #45
516: iload_3
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #46
528: new           #39
531: dup
532: invokespecial #40
535: ldc           #41
537: invokevirtual #42
540: iload         4
542: invokevirtual #43
545: ldc           #44
547: invokevirtual #42
550: iconst_0
551: invokevirtual #43
554: ldc           #41
556: invokevirtual #42
559: invokevirtual #45
562: iload         4
564: ifne          571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #46
575: new           #39
578: dup
579: invokespecial #40
582: ldc           #41
584: invokevirtual #42
587: dload         5
589: invokevirtual #59
592: ldc           #44
594: invokevirtual #42
597: dconst_0
598: invokevirtual #59
601: ldc           #41
603: invokevirtual #42
606: invokevirtual #45
609: dload         5
611: dconst_0
612: dcmpl
613: ifne          620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #46
624: aload         7
626: invokestatic  #47
629: new           #39
632: dup
633: invokespecial #40
636: ldc           #41
638: invokevirtual #42
641: iload         11
643: invokevirtual #43
646: ldc           #44
648: invokevirtual #42
651: iconst_0
652: invokevirtual #43
655: ldc           #41
657: invokevirtual #42
660: invokevirtual #45
663: iload         11
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #46
676: new           #39
679: dup
680: invokespecial #40
683: ldc           #41
685: invokevirtual #42
688: iload         12
690: invokevirtual #43
693: ldc           #44
695: invokevirtual #42
698: iconst_0
699: invokevirtual #43
702: ldc           #41
704: invokevirtual #42
707: invokevirtual #45
710: iload         12
712: ifne          719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #46
723: new           #39
726: dup
727: invokespecial #40
730: ldc           #41
732: invokevirtual #42
735: iload         13
737: invokevirtual #43
740: ldc           #44
742: invokevirtual #42
745: iconst_0
746: invokevirtual #43
749: ldc           #41
751: invokevirtual #42
754: invokevirtual #45
757: iload         13
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #46
770: aload         15
772: invokestatic  #47
775: aload         15
777: invokestatic  #48
780: ldc           #49
782: invokestatic  #50
785: aload         18
787: invokestatic  #47
790: aload         18
792: invokestatic  #48
795: ldc           #49
797: invokestatic  #50
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         21
814: invokevirtual #43
817: ldc           #44
819: invokevirtual #42
822: iconst_0
823: invokevirtual #43
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         21
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #46
847: new           #39
850: dup
851: invokespecial #40
854: ldc           #41
856: invokevirtual #42
859: iload         22
861: invokevirtual #43
864: ldc           #44
866: invokevirtual #42
869: iconst_0
870: invokevirtual #43
873: ldc           #41
875: invokevirtual #42
878: invokevirtual #45
881: iload         22
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #46
894: new           #39
897: dup
898: invokespecial #40
901: ldc           #41
903: invokevirtual #42
906: iload         23
908: invokevirtual #43
911: ldc           #44
913: invokevirtual #42
916: iconst_0
917: invokevirtual #43
920: ldc           #41
922: invokevirtual #42
925: invokevirtual #45
928: iload         23
930: ifne          937
933: iconst_1
934: goto          938
937: iconst_0
938: invokestatic  #46
941: aload         25
943: invokestatic  #47
946: aload         25
948: invokestatic  #48
951: ldc           #49
953: invokestatic  #50
956: aload         28
958: invokestatic  #47
961: aload         28
963: invokestatic  #48
966: ldc           #49
968: invokestatic  #50
971: aload         29
973: invokestatic  #47
976: aload         29
978: invokestatic  #48
981: ldc           #49
983: invokestatic  #50
986: aload         32
988: invokestatic  #76
991: aload         33
993: invokestatic  #76
996: aload         34
998: invokestatic  #47
1001: aload         34
1003: invokestatic  #48
1006: ldc           #49
1008: invokestatic  #50
1011: return
Exception table:
from    to  target type
458   478   481   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 328
End line: 347
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray14 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #77
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #52
90: aload         5
92: invokevirtual #63
95: astore        6
97: ldc           #64
99: invokestatic  #37
102: goto          107
105: astore        6
107: new           #39
110: dup
111: invokespecial #40
114: ldc           #41
116: invokevirtual #42
119: iload_3
120: invokevirtual #43
123: ldc           #44
125: invokevirtual #42
128: iconst_0
129: invokevirtual #43
132: ldc           #41
134: invokevirtual #42
137: invokevirtual #45
140: iload_3
141: ifne          148
144: iconst_1
145: goto          149
148: iconst_0
149: invokestatic  #46
152: new           #39
155: dup
156: invokespecial #40
159: ldc           #41
161: invokevirtual #42
164: iload         4
166: invokevirtual #43
169: ldc           #44
171: invokevirtual #42
174: iconst_0
175: invokevirtual #43
178: ldc           #41
180: invokevirtual #42
183: invokevirtual #45
186: iload         4
188: ifne          195
191: iconst_1
192: goto          196
195: iconst_0
196: invokestatic  #46
199: return
Exception table:
from    to  target type
90   102   105   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 350
End line: 416
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction14 = null;
        double[] doubleArray17 = new double[] { 35.0d, (-1023) };
        double[] doubleArray18 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker27 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer24.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        int int29 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int30 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter31 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer24);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer37 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker40 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer37.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker40);
        int int42 = levenbergMarquardtOptimizer37.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer37.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter44 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer37);
        gaussianFitter44.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction46 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer52 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker55 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer52.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker55);
        int int57 = levenbergMarquardtOptimizer52.getMaxEvaluations();
        int int58 = levenbergMarquardtOptimizer52.getMaxEvaluations();
        int int59 = levenbergMarquardtOptimizer52.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter60 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer52);
        double[] doubleArray67 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray68 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair70 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray67, doubleArray68, true);
        double[] doubleArray71 = gaussianFitter60.fit(doubleArray67);
        double[] doubleArray72 = gaussianFitter44.fit(parametricUnivariateRealFunction46, doubleArray71);
        double[] doubleArray73 = gaussianFitter31.fit(doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair74 = levenbergMarquardtOptimizer5.optimize(10, differentiableMultivariateVectorialFunction14, doubleArray17, doubleArray18, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[35.0, -1023.0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #78
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: aconst_null
82: astore        6
84: iconst_2
85: newarray       double
87: dup
88: iconst_0
89: ldc2_w        #17
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #79
98: dastore
99: astore        7
101: aconst_null
102: astore        8
104: new           #8
107: dup
108: ldc2_w        #9
111: ldc2_w        #11
114: ldc2_w        #13
117: dconst_1
118: ldc2_w        #13
121: invokespecial #15
124: astore        9
126: new           #16
129: dup
130: ldc2_w        #17
133: ldc2_w        #19
136: invokespecial #21
139: astore        10
141: aload         9
143: aload         10
145: invokevirtual #22
148: aload         9
150: invokevirtual #23
153: istore        11
155: aload         9
157: invokevirtual #23
160: istore        12
162: new           #24
165: dup
166: aload         9
168: invokespecial #25
171: astore        13
173: new           #8
176: dup
177: ldc2_w        #9
180: ldc2_w        #11
183: ldc2_w        #13
186: dconst_1
187: ldc2_w        #13
190: invokespecial #15
193: astore        14
195: new           #16
198: dup
199: ldc2_w        #17
202: ldc2_w        #19
205: invokespecial #21
208: astore        15
210: aload         14
212: aload         15
214: invokevirtual #22
217: aload         14
219: invokevirtual #23
222: istore        16
224: aload         14
226: invokevirtual #23
229: istore        17
231: new           #24
234: dup
235: aload         14
237: invokespecial #25
240: astore        18
242: aload         18
244: invokevirtual #52
247: aconst_null
248: astore        19
250: new           #8
253: dup
254: ldc2_w        #9
257: ldc2_w        #11
260: ldc2_w        #13
263: dconst_1
264: ldc2_w        #13
267: invokespecial #15
270: astore        20
272: new           #16
275: dup
276: ldc2_w        #17
279: ldc2_w        #19
282: invokespecial #21
285: astore        21
287: aload         20
289: aload         21
291: invokevirtual #22
294: aload         20
296: invokevirtual #23
299: istore        22
301: aload         20
303: invokevirtual #23
306: istore        23
308: aload         20
310: invokevirtual #53
313: istore        24
315: new           #24
318: dup
319: aload         20
321: invokespecial #25
324: astore        25
326: bipush        6
328: newarray       double
330: dup
331: iconst_0
332: ldc2_w        #27
335: dastore
336: dup
337: iconst_1
338: ldc2_w        #9
341: dastore
342: dup
343: iconst_2
344: ldc2_w        #13
347: dastore
348: dup
349: iconst_3
350: ldc2_w        #29
353: dastore
354: dup
355: iconst_4
356: ldc2_w        #17
359: dastore
360: dup
361: iconst_5
362: ldc2_w        #31
365: dastore
366: astore        26
368: aconst_null
369: astore        27
371: new           #33
374: dup
375: aload         26
377: aload         27
379: iconst_1
380: invokespecial #34
383: astore        28
385: aload         25
387: aload         26
389: invokevirtual #54
392: astore        29
394: aload         18
396: aload         19
398: aload         29
400: invokevirtual #55
403: astore        30
405: aload         13
407: aload         29
409: invokevirtual #54
412: astore        31
414: aload_1
415: bipush        10
417: aload         6
419: aload         7
421: aload         8
423: aload         29
425: invokevirtual #56
428: astore        32
430: ldc           #36
432: invokestatic  #37
435: goto          440
438: astore        32
440: new           #39
443: dup
444: invokespecial #40
447: ldc           #41
449: invokevirtual #42
452: iload_3
453: invokevirtual #43
456: ldc           #44
458: invokevirtual #42
461: iconst_0
462: invokevirtual #43
465: ldc           #41
467: invokevirtual #42
470: invokevirtual #45
473: iload_3
474: ifne          481
477: iconst_1
478: goto          482
481: iconst_0
482: invokestatic  #46
485: new           #39
488: dup
489: invokespecial #40
492: ldc           #41
494: invokevirtual #42
497: iload         4
499: invokevirtual #43
502: ldc           #44
504: invokevirtual #42
507: iconst_0
508: invokevirtual #43
511: ldc           #41
513: invokevirtual #42
516: invokevirtual #45
519: iload         4
521: ifne          528
524: iconst_1
525: goto          529
528: iconst_0
529: invokestatic  #46
532: new           #39
535: dup
536: invokespecial #40
539: ldc           #41
541: invokevirtual #42
544: iload         5
546: invokevirtual #43
549: ldc           #44
551: invokevirtual #42
554: iconst_0
555: invokevirtual #43
558: ldc           #41
560: invokevirtual #42
563: invokevirtual #45
566: iload         5
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #46
579: aload         7
581: invokestatic  #47
584: aload         7
586: invokestatic  #48
589: ldc           #81
591: invokestatic  #50
594: new           #39
597: dup
598: invokespecial #40
601: ldc           #41
603: invokevirtual #42
606: iload         11
608: invokevirtual #43
611: ldc           #44
613: invokevirtual #42
616: iconst_0
617: invokevirtual #43
620: ldc           #41
622: invokevirtual #42
625: invokevirtual #45
628: iload         11
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #46
641: new           #39
644: dup
645: invokespecial #40
648: ldc           #41
650: invokevirtual #42
653: iload         12
655: invokevirtual #43
658: ldc           #44
660: invokevirtual #42
663: iconst_0
664: invokevirtual #43
667: ldc           #41
669: invokevirtual #42
672: invokevirtual #45
675: iload         12
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #46
688: new           #39
691: dup
692: invokespecial #40
695: ldc           #41
697: invokevirtual #42
700: iload         16
702: invokevirtual #43
705: ldc           #44
707: invokevirtual #42
710: iconst_0
711: invokevirtual #43
714: ldc           #41
716: invokevirtual #42
719: invokevirtual #45
722: iload         16
724: ifne          731
727: iconst_1
728: goto          732
731: iconst_0
732: invokestatic  #46
735: new           #39
738: dup
739: invokespecial #40
742: ldc           #41
744: invokevirtual #42
747: iload         17
749: invokevirtual #43
752: ldc           #44
754: invokevirtual #42
757: iconst_0
758: invokevirtual #43
761: ldc           #41
763: invokevirtual #42
766: invokevirtual #45
769: iload         17
771: ifne          778
774: iconst_1
775: goto          779
778: iconst_0
779: invokestatic  #46
782: new           #39
785: dup
786: invokespecial #40
789: ldc           #41
791: invokevirtual #42
794: iload         22
796: invokevirtual #43
799: ldc           #44
801: invokevirtual #42
804: iconst_0
805: invokevirtual #43
808: ldc           #41
810: invokevirtual #42
813: invokevirtual #45
816: iload         22
818: ifne          825
821: iconst_1
822: goto          826
825: iconst_0
826: invokestatic  #46
829: new           #39
832: dup
833: invokespecial #40
836: ldc           #41
838: invokevirtual #42
841: iload         23
843: invokevirtual #43
846: ldc           #44
848: invokevirtual #42
851: iconst_0
852: invokevirtual #43
855: ldc           #41
857: invokevirtual #42
860: invokevirtual #45
863: iload         23
865: ifne          872
868: iconst_1
869: goto          873
872: iconst_0
873: invokestatic  #46
876: new           #39
879: dup
880: invokespecial #40
883: ldc           #41
885: invokevirtual #42
888: iload         24
890: invokevirtual #43
893: ldc           #44
895: invokevirtual #42
898: iconst_0
899: invokevirtual #43
902: ldc           #41
904: invokevirtual #42
907: invokevirtual #45
910: iload         24
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #46
923: aload         26
925: invokestatic  #47
928: aload         26
930: invokestatic  #48
933: ldc           #49
935: invokestatic  #50
938: aload         29
940: invokestatic  #47
943: aload         29
945: invokestatic  #48
948: ldc           #49
950: invokestatic  #50
953: aload         30
955: invokestatic  #47
958: aload         30
960: invokestatic  #48
963: ldc           #49
965: invokestatic  #50
968: aload         31
970: invokestatic  #47
973: aload         31
975: invokestatic  #48
978: ldc           #49
980: invokestatic  #50
983: return
Exception table:
from    to  target type
414   435   438   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 419
End line: 439
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser parameterGuesser14 = new org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser(weightedObservedPointArray13);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #82
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: new           #83
95: dup
96: aload         6
98: invokespecial #84
101: astore        7
103: ldc           #64
105: invokestatic  #37
108: goto          113
111: astore        7
113: new           #39
116: dup
117: invokespecial #40
120: ldc           #41
122: invokevirtual #42
125: iload_3
126: invokevirtual #43
129: ldc           #44
131: invokevirtual #42
134: iconst_0
135: invokevirtual #43
138: ldc           #41
140: invokevirtual #42
143: invokevirtual #45
146: iload_3
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #46
158: new           #39
161: dup
162: invokespecial #40
165: ldc           #41
167: invokevirtual #42
170: iload         4
172: invokevirtual #43
175: ldc           #44
177: invokevirtual #42
180: iconst_0
181: invokevirtual #43
184: ldc           #41
186: invokevirtual #42
189: invokevirtual #45
192: iload         4
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #46
205: aload         6
207: invokestatic  #47
210: return
Exception table:
from    to  target type
92   108   111   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 442
End line: 527
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker14 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        double[] doubleArray22 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray23 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray22, doubleArray23, true);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        double[] doubleArray33 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray34 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray34, true);
        double[] doubleArray37 = vectorialPointValuePair36.getValue();
        double[] doubleArray38 = vectorialPointValuePair36.getValue();
        double[] doubleArray39 = vectorialPointValuePair36.getPoint();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer45 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker48 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer45.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker48);
        int int50 = levenbergMarquardtOptimizer45.getMaxEvaluations();
        int int51 = levenbergMarquardtOptimizer45.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter52 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer45);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer58 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker61 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer58.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker61);
        int int63 = levenbergMarquardtOptimizer58.getMaxEvaluations();
        int int64 = levenbergMarquardtOptimizer58.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter65 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer58);
        gaussianFitter65.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction67 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer73 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker76 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer73.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker76);
        int int78 = levenbergMarquardtOptimizer73.getMaxEvaluations();
        int int79 = levenbergMarquardtOptimizer73.getMaxEvaluations();
        int int80 = levenbergMarquardtOptimizer73.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter81 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer73);
        double[] doubleArray88 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray89 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair91 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray88, doubleArray89, true);
        double[] doubleArray92 = gaussianFitter81.fit(doubleArray88);
        double[] doubleArray93 = gaussianFitter65.fit(parametricUnivariateRealFunction67, doubleArray92);
        double[] doubleArray94 = gaussianFitter52.fit(doubleArray92);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair96 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray92, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = vectorialPointValuePairConvergenceChecker14.converged((-1), vectorialPointValuePair25, vectorialPointValuePair96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker14);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #85
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: aload_1
88: invokevirtual #73
91: astore        8
93: bipush        6
95: newarray       double
97: dup
98: iconst_0
99: ldc2_w        #27
102: dastore
103: dup
104: iconst_1
105: ldc2_w        #9
108: dastore
109: dup
110: iconst_2
111: ldc2_w        #13
114: dastore
115: dup
116: iconst_3
117: ldc2_w        #29
120: dastore
121: dup
122: iconst_4
123: ldc2_w        #17
126: dastore
127: dup
128: iconst_5
129: ldc2_w        #31
132: dastore
133: astore        9
135: aconst_null
136: astore        10
138: new           #33
141: dup
142: aload         9
144: aload         10
146: iconst_1
147: invokespecial #34
150: astore        11
152: aload         11
154: invokevirtual #74
157: astore        12
159: bipush        6
161: newarray       double
163: dup
164: iconst_0
165: ldc2_w        #27
168: dastore
169: dup
170: iconst_1
171: ldc2_w        #9
174: dastore
175: dup
176: iconst_2
177: ldc2_w        #13
180: dastore
181: dup
182: iconst_3
183: ldc2_w        #29
186: dastore
187: dup
188: iconst_4
189: ldc2_w        #17
192: dastore
193: dup
194: iconst_5
195: ldc2_w        #31
198: dastore
199: astore        13
201: aconst_null
202: astore        14
204: new           #33
207: dup
208: aload         13
210: aload         14
212: iconst_1
213: invokespecial #34
216: astore        15
218: aload         15
220: invokevirtual #74
223: astore        16
225: aload         15
227: invokevirtual #74
230: astore        17
232: aload         15
234: invokevirtual #75
237: astore        18
239: new           #8
242: dup
243: ldc2_w        #9
246: ldc2_w        #11
249: ldc2_w        #13
252: dconst_1
253: ldc2_w        #13
256: invokespecial #15
259: astore        19
261: new           #16
264: dup
265: ldc2_w        #17
268: ldc2_w        #19
271: invokespecial #21
274: astore        20
276: aload         19
278: aload         20
280: invokevirtual #22
283: aload         19
285: invokevirtual #23
288: istore        21
290: aload         19
292: invokevirtual #23
295: istore        22
297: new           #24
300: dup
301: aload         19
303: invokespecial #25
306: astore        23
308: new           #8
311: dup
312: ldc2_w        #9
315: ldc2_w        #11
318: ldc2_w        #13
321: dconst_1
322: ldc2_w        #13
325: invokespecial #15
328: astore        24
330: new           #16
333: dup
334: ldc2_w        #17
337: ldc2_w        #19
340: invokespecial #21
343: astore        25
345: aload         24
347: aload         25
349: invokevirtual #22
352: aload         24
354: invokevirtual #23
357: istore        26
359: aload         24
361: invokevirtual #23
364: istore        27
366: new           #24
369: dup
370: aload         24
372: invokespecial #25
375: astore        28
377: aload         28
379: invokevirtual #52
382: aconst_null
383: astore        29
385: new           #8
388: dup
389: ldc2_w        #9
392: ldc2_w        #11
395: ldc2_w        #13
398: dconst_1
399: ldc2_w        #13
402: invokespecial #15
405: astore        30
407: new           #16
410: dup
411: ldc2_w        #17
414: ldc2_w        #19
417: invokespecial #21
420: astore        31
422: aload         30
424: aload         31
426: invokevirtual #22
429: aload         30
431: invokevirtual #23
434: istore        32
436: aload         30
438: invokevirtual #23
441: istore        33
443: aload         30
445: invokevirtual #53
448: istore        34
450: new           #24
453: dup
454: aload         30
456: invokespecial #25
459: astore        35
461: bipush        6
463: newarray       double
465: dup
466: iconst_0
467: ldc2_w        #27
470: dastore
471: dup
472: iconst_1
473: ldc2_w        #9
476: dastore
477: dup
478: iconst_2
479: ldc2_w        #13
482: dastore
483: dup
484: iconst_3
485: ldc2_w        #29
488: dastore
489: dup
490: iconst_4
491: ldc2_w        #17
494: dastore
495: dup
496: iconst_5
497: ldc2_w        #31
500: dastore
501: astore        36
503: aconst_null
504: astore        37
506: new           #33
509: dup
510: aload         36
512: aload         37
514: iconst_1
515: invokespecial #34
518: astore        38
520: aload         35
522: aload         36
524: invokevirtual #54
527: astore        39
529: aload         28
531: aload         29
533: aload         39
535: invokevirtual #55
538: astore        40
540: aload         23
542: aload         39
544: invokevirtual #54
547: astore        41
549: new           #33
552: dup
553: aload         18
555: aload         39
557: iconst_0
558: invokespecial #34
561: astore        42
563: aload         8
565: iconst_m1
566: aload         11
568: aload         42
570: invokeinterface #86,  4
575: istore        43
577: ldc           #36
579: invokestatic  #37
582: goto          587
585: astore        43
587: new           #39
590: dup
591: invokespecial #40
594: ldc           #41
596: invokevirtual #42
599: iload_3
600: invokevirtual #43
603: ldc           #44
605: invokevirtual #42
608: iconst_0
609: invokevirtual #43
612: ldc           #41
614: invokevirtual #42
617: invokevirtual #45
620: iload_3
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #46
632: new           #39
635: dup
636: invokespecial #40
639: ldc           #41
641: invokevirtual #42
644: iload         4
646: invokevirtual #43
649: ldc           #44
651: invokevirtual #42
654: iconst_0
655: invokevirtual #43
658: ldc           #41
660: invokevirtual #42
663: invokevirtual #45
666: iload         4
668: ifne          675
671: iconst_1
672: goto          676
675: iconst_0
676: invokestatic  #46
679: new           #39
682: dup
683: invokespecial #40
686: ldc           #41
688: invokevirtual #42
691: dload         5
693: invokevirtual #59
696: ldc           #44
698: invokevirtual #42
701: dconst_0
702: invokevirtual #59
705: ldc           #41
707: invokevirtual #42
710: invokevirtual #45
713: dload         5
715: dconst_0
716: dcmpl
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #46
728: new           #39
731: dup
732: invokespecial #40
735: ldc           #41
737: invokevirtual #42
740: iload         7
742: invokevirtual #43
745: ldc           #44
747: invokevirtual #42
750: iconst_0
751: invokevirtual #43
754: ldc           #41
756: invokevirtual #42
759: invokevirtual #45
762: iload         7
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #46
775: aload         8
777: invokestatic  #47
780: aload         9
782: invokestatic  #47
785: aload         9
787: invokestatic  #48
790: ldc           #49
792: invokestatic  #50
795: aload         12
797: invokestatic  #76
800: aload         13
802: invokestatic  #47
805: aload         13
807: invokestatic  #48
810: ldc           #49
812: invokestatic  #50
815: aload         16
817: invokestatic  #76
820: aload         17
822: invokestatic  #76
825: aload         18
827: invokestatic  #47
830: aload         18
832: invokestatic  #48
835: ldc           #49
837: invokestatic  #50
840: new           #39
843: dup
844: invokespecial #40
847: ldc           #41
849: invokevirtual #42
852: iload         21
854: invokevirtual #43
857: ldc           #44
859: invokevirtual #42
862: iconst_0
863: invokevirtual #43
866: ldc           #41
868: invokevirtual #42
871: invokevirtual #45
874: iload         21
876: ifne          883
879: iconst_1
880: goto          884
883: iconst_0
884: invokestatic  #46
887: new           #39
890: dup
891: invokespecial #40
894: ldc           #41
896: invokevirtual #42
899: iload         22
901: invokevirtual #43
904: ldc           #44
906: invokevirtual #42
909: iconst_0
910: invokevirtual #43
913: ldc           #41
915: invokevirtual #42
918: invokevirtual #45
921: iload         22
923: ifne          930
926: iconst_1
927: goto          931
930: iconst_0
931: invokestatic  #46
934: new           #39
937: dup
938: invokespecial #40
941: ldc           #41
943: invokevirtual #42
946: iload         26
948: invokevirtual #43
951: ldc           #44
953: invokevirtual #42
956: iconst_0
957: invokevirtual #43
960: ldc           #41
962: invokevirtual #42
965: invokevirtual #45
968: iload         26
970: ifne          977
973: iconst_1
974: goto          978
977: iconst_0
978: invokestatic  #46
981: new           #39
984: dup
985: invokespecial #40
988: ldc           #41
990: invokevirtual #42
993: iload         27
995: invokevirtual #43
998: ldc           #44
1000: invokevirtual #42
1003: iconst_0
1004: invokevirtual #43
1007: ldc           #41
1009: invokevirtual #42
1012: invokevirtual #45
1015: iload         27
1017: ifne          1024
1020: iconst_1
1021: goto          1025
1024: iconst_0
1025: invokestatic  #46
1028: new           #39
1031: dup
1032: invokespecial #40
1035: ldc           #41
1037: invokevirtual #42
1040: iload         32
1042: invokevirtual #43
1045: ldc           #44
1047: invokevirtual #42
1050: iconst_0
1051: invokevirtual #43
1054: ldc           #41
1056: invokevirtual #42
1059: invokevirtual #45
1062: iload         32
1064: ifne          1071
1067: iconst_1
1068: goto          1072
1071: iconst_0
1072: invokestatic  #46
1075: new           #39
1078: dup
1079: invokespecial #40
1082: ldc           #41
1084: invokevirtual #42
1087: iload         33
1089: invokevirtual #43
1092: ldc           #44
1094: invokevirtual #42
1097: iconst_0
1098: invokevirtual #43
1101: ldc           #41
1103: invokevirtual #42
1106: invokevirtual #45
1109: iload         33
1111: ifne          1118
1114: iconst_1
1115: goto          1119
1118: iconst_0
1119: invokestatic  #46
1122: new           #39
1125: dup
1126: invokespecial #40
1129: ldc           #41
1131: invokevirtual #42
1134: iload         34
1136: invokevirtual #43
1139: ldc           #44
1141: invokevirtual #42
1144: iconst_0
1145: invokevirtual #43
1148: ldc           #41
1150: invokevirtual #42
1153: invokevirtual #45
1156: iload         34
1158: ifne          1165
1161: iconst_1
1162: goto          1166
1165: iconst_0
1166: invokestatic  #46
1169: aload         36
1171: invokestatic  #47
1174: aload         36
1176: invokestatic  #48
1179: ldc           #49
1181: invokestatic  #50
1184: aload         39
1186: invokestatic  #47
1189: aload         39
1191: invokestatic  #48
1194: ldc           #49
1196: invokestatic  #50
1199: aload         40
1201: invokestatic  #47
1204: aload         40
1206: invokestatic  #48
1209: ldc           #49
1211: invokestatic  #50
1214: aload         41
1216: invokestatic  #47
1219: aload         41
1221: invokestatic  #48
1224: ldc           #49
1226: invokestatic  #50
1229: return
Exception table:
from    to  target type
563   582   585   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 530
End line: 612
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker2 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double3 = simpleVectorialValueChecker2.getRelativeThreshold();
        double double4 = simpleVectorialValueChecker2.getRelativeThreshold();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair6 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer12 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker15 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer12.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker15);
        int int17 = levenbergMarquardtOptimizer12.getMaxEvaluations();
        int int18 = levenbergMarquardtOptimizer12.getMaxEvaluations();
        int int19 = levenbergMarquardtOptimizer12.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter20 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer12);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction21 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer27 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker30 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer27.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker30);
        int int32 = levenbergMarquardtOptimizer27.getMaxEvaluations();
        int int33 = levenbergMarquardtOptimizer27.getMaxEvaluations();
        int int34 = levenbergMarquardtOptimizer27.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter35 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer27);
        double[] doubleArray42 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray43 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair45 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray42, doubleArray43, true);
        double[] doubleArray46 = gaussianFitter35.fit(doubleArray42);
        double[] doubleArray47 = curveFitter20.fit(parametricUnivariateRealFunction21, doubleArray42);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer53 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker56 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer53.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker56);
        int int58 = levenbergMarquardtOptimizer53.getMaxEvaluations();
        int int59 = levenbergMarquardtOptimizer53.getMaxEvaluations();
        int int60 = levenbergMarquardtOptimizer53.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter61 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer53);
        double[] doubleArray68 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray69 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair71 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray68, doubleArray69, true);
        double[] doubleArray72 = gaussianFitter61.fit(doubleArray68);
        double[] doubleArray79 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray80 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray79, doubleArray80, true);
        double[] doubleArray83 = vectorialPointValuePair82.getValue();
        double[] doubleArray84 = vectorialPointValuePair82.getValue();
        double[] doubleArray85 = vectorialPointValuePair82.getPoint();
        double[] doubleArray86 = gaussianFitter61.fit(doubleArray85);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair88 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray42, doubleArray86, false);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = simpleVectorialValueChecker2.converged((int) (short) 10, vectorialPointValuePair6, vectorialPointValuePair88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.0d + "'", double3 == 35.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 35.0d + "'", double4 == 35.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray83);
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #87
19: aastore
20: invokevirtual #7
23: pop
24: new           #16
27: dup
28: ldc2_w        #17
31: ldc2_w        #19
34: invokespecial #21
37: astore_1
38: aload_1
39: invokevirtual #88
42: dstore_2
43: aload_1
44: invokevirtual #88
47: dstore        4
49: aconst_null
50: astore        6
52: new           #8
55: dup
56: ldc2_w        #9
59: ldc2_w        #11
62: ldc2_w        #13
65: dconst_1
66: ldc2_w        #13
69: invokespecial #15
72: astore        7
74: new           #16
77: dup
78: ldc2_w        #17
81: ldc2_w        #19
84: invokespecial #21
87: astore        8
89: aload         7
91: aload         8
93: invokevirtual #22
96: aload         7
98: invokevirtual #23
101: istore        9
103: aload         7
105: invokevirtual #23
108: istore        10
110: aload         7
112: invokevirtual #53
115: istore        11
117: new           #67
120: dup
121: aload         7
123: invokespecial #68
126: astore        12
128: aconst_null
129: astore        13
131: new           #8
134: dup
135: ldc2_w        #9
138: ldc2_w        #11
141: ldc2_w        #13
144: dconst_1
145: ldc2_w        #13
148: invokespecial #15
151: astore        14
153: new           #16
156: dup
157: ldc2_w        #17
160: ldc2_w        #19
163: invokespecial #21
166: astore        15
168: aload         14
170: aload         15
172: invokevirtual #22
175: aload         14
177: invokevirtual #23
180: istore        16
182: aload         14
184: invokevirtual #23
187: istore        17
189: aload         14
191: invokevirtual #53
194: istore        18
196: new           #24
199: dup
200: aload         14
202: invokespecial #25
205: astore        19
207: bipush        6
209: newarray       double
211: dup
212: iconst_0
213: ldc2_w        #27
216: dastore
217: dup
218: iconst_1
219: ldc2_w        #9
222: dastore
223: dup
224: iconst_2
225: ldc2_w        #13
228: dastore
229: dup
230: iconst_3
231: ldc2_w        #29
234: dastore
235: dup
236: iconst_4
237: ldc2_w        #17
240: dastore
241: dup
242: iconst_5
243: ldc2_w        #31
246: dastore
247: astore        20
249: aconst_null
250: astore        21
252: new           #33
255: dup
256: aload         20
258: aload         21
260: iconst_1
261: invokespecial #34
264: astore        22
266: aload         19
268: aload         20
270: invokevirtual #54
273: astore        23
275: aload         12
277: aload         13
279: aload         20
281: invokevirtual #89
284: astore        24
286: new           #8
289: dup
290: ldc2_w        #9
293: ldc2_w        #11
296: ldc2_w        #13
299: dconst_1
300: ldc2_w        #13
303: invokespecial #15
306: astore        25
308: new           #16
311: dup
312: ldc2_w        #17
315: ldc2_w        #19
318: invokespecial #21
321: astore        26
323: aload         25
325: aload         26
327: invokevirtual #22
330: aload         25
332: invokevirtual #23
335: istore        27
337: aload         25
339: invokevirtual #23
342: istore        28
344: aload         25
346: invokevirtual #53
349: istore        29
351: new           #24
354: dup
355: aload         25
357: invokespecial #25
360: astore        30
362: bipush        6
364: newarray       double
366: dup
367: iconst_0
368: ldc2_w        #27
371: dastore
372: dup
373: iconst_1
374: ldc2_w        #9
377: dastore
378: dup
379: iconst_2
380: ldc2_w        #13
383: dastore
384: dup
385: iconst_3
386: ldc2_w        #29
389: dastore
390: dup
391: iconst_4
392: ldc2_w        #17
395: dastore
396: dup
397: iconst_5
398: ldc2_w        #31
401: dastore
402: astore        31
404: aconst_null
405: astore        32
407: new           #33
410: dup
411: aload         31
413: aload         32
415: iconst_1
416: invokespecial #34
419: astore        33
421: aload         30
423: aload         31
425: invokevirtual #54
428: astore        34
430: bipush        6
432: newarray       double
434: dup
435: iconst_0
436: ldc2_w        #27
439: dastore
440: dup
441: iconst_1
442: ldc2_w        #9
445: dastore
446: dup
447: iconst_2
448: ldc2_w        #13
451: dastore
452: dup
453: iconst_3
454: ldc2_w        #29
457: dastore
458: dup
459: iconst_4
460: ldc2_w        #17
463: dastore
464: dup
465: iconst_5
466: ldc2_w        #31
469: dastore
470: astore        35
472: aconst_null
473: astore        36
475: new           #33
478: dup
479: aload         35
481: aload         36
483: iconst_1
484: invokespecial #34
487: astore        37
489: aload         37
491: invokevirtual #74
494: astore        38
496: aload         37
498: invokevirtual #74
501: astore        39
503: aload         37
505: invokevirtual #75
508: astore        40
510: aload         30
512: aload         40
514: invokevirtual #54
517: astore        41
519: new           #33
522: dup
523: aload         20
525: aload         41
527: iconst_0
528: invokespecial #34
531: astore        42
533: aload_1
534: bipush        10
536: aload         6
538: aload         42
540: invokevirtual #90
543: istore        43
545: ldc           #36
547: invokestatic  #37
550: goto          555
553: astore        43
555: new           #39
558: dup
559: invokespecial #40
562: ldc           #41
564: invokevirtual #42
567: dload_2
568: invokevirtual #59
571: ldc           #44
573: invokevirtual #42
576: ldc2_w        #17
579: invokevirtual #59
582: ldc           #41
584: invokevirtual #42
587: invokevirtual #45
590: dload_2
591: ldc2_w        #17
594: dcmpl
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #46
606: new           #39
609: dup
610: invokespecial #40
613: ldc           #41
615: invokevirtual #42
618: dload         4
620: invokevirtual #59
623: ldc           #44
625: invokevirtual #42
628: ldc2_w        #17
631: invokevirtual #59
634: ldc           #41
636: invokevirtual #42
639: invokevirtual #45
642: dload         4
644: ldc2_w        #17
647: dcmpl
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #46
659: new           #39
662: dup
663: invokespecial #40
666: ldc           #41
668: invokevirtual #42
671: iload         9
673: invokevirtual #43
676: ldc           #44
678: invokevirtual #42
681: iconst_0
682: invokevirtual #43
685: ldc           #41
687: invokevirtual #42
690: invokevirtual #45
693: iload         9
695: ifne          702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #46
706: new           #39
709: dup
710: invokespecial #40
713: ldc           #41
715: invokevirtual #42
718: iload         10
720: invokevirtual #43
723: ldc           #44
725: invokevirtual #42
728: iconst_0
729: invokevirtual #43
732: ldc           #41
734: invokevirtual #42
737: invokevirtual #45
740: iload         10
742: ifne          749
745: iconst_1
746: goto          750
749: iconst_0
750: invokestatic  #46
753: new           #39
756: dup
757: invokespecial #40
760: ldc           #41
762: invokevirtual #42
765: iload         11
767: invokevirtual #43
770: ldc           #44
772: invokevirtual #42
775: iconst_0
776: invokevirtual #43
779: ldc           #41
781: invokevirtual #42
784: invokevirtual #45
787: iload         11
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #46
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         16
814: invokevirtual #43
817: ldc           #44
819: invokevirtual #42
822: iconst_0
823: invokevirtual #43
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         16
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #46
847: new           #39
850: dup
851: invokespecial #40
854: ldc           #41
856: invokevirtual #42
859: iload         17
861: invokevirtual #43
864: ldc           #44
866: invokevirtual #42
869: iconst_0
870: invokevirtual #43
873: ldc           #41
875: invokevirtual #42
878: invokevirtual #45
881: iload         17
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #46
894: new           #39
897: dup
898: invokespecial #40
901: ldc           #41
903: invokevirtual #42
906: iload         18
908: invokevirtual #43
911: ldc           #44
913: invokevirtual #42
916: iconst_0
917: invokevirtual #43
920: ldc           #41
922: invokevirtual #42
925: invokevirtual #45
928: iload         18
930: ifne          937
933: iconst_1
934: goto          938
937: iconst_0
938: invokestatic  #46
941: aload         20
943: invokestatic  #47
946: aload         20
948: invokestatic  #48
951: ldc           #49
953: invokestatic  #50
956: aload         23
958: invokestatic  #47
961: aload         23
963: invokestatic  #48
966: ldc           #49
968: invokestatic  #50
971: aload         24
973: invokestatic  #47
976: aload         24
978: invokestatic  #48
981: ldc           #49
983: invokestatic  #50
986: new           #39
989: dup
990: invokespecial #40
993: ldc           #41
995: invokevirtual #42
998: iload         27
1000: invokevirtual #43
1003: ldc           #44
1005: invokevirtual #42
1008: iconst_0
1009: invokevirtual #43
1012: ldc           #41
1014: invokevirtual #42
1017: invokevirtual #45
1020: iload         27
1022: ifne          1029
1025: iconst_1
1026: goto          1030
1029: iconst_0
1030: invokestatic  #46
1033: new           #39
1036: dup
1037: invokespecial #40
1040: ldc           #41
1042: invokevirtual #42
1045: iload         28
1047: invokevirtual #43
1050: ldc           #44
1052: invokevirtual #42
1055: iconst_0
1056: invokevirtual #43
1059: ldc           #41
1061: invokevirtual #42
1064: invokevirtual #45
1067: iload         28
1069: ifne          1076
1072: iconst_1
1073: goto          1077
1076: iconst_0
1077: invokestatic  #46
1080: new           #39
1083: dup
1084: invokespecial #40
1087: ldc           #41
1089: invokevirtual #42
1092: iload         29
1094: invokevirtual #43
1097: ldc           #44
1099: invokevirtual #42
1102: iconst_0
1103: invokevirtual #43
1106: ldc           #41
1108: invokevirtual #42
1111: invokevirtual #45
1114: iload         29
1116: ifne          1123
1119: iconst_1
1120: goto          1124
1123: iconst_0
1124: invokestatic  #46
1127: aload         31
1129: invokestatic  #47
1132: aload         31
1134: invokestatic  #48
1137: ldc           #49
1139: invokestatic  #50
1142: aload         34
1144: invokestatic  #47
1147: aload         34
1149: invokestatic  #48
1152: ldc           #49
1154: invokestatic  #50
1157: aload         35
1159: invokestatic  #47
1162: aload         35
1164: invokestatic  #48
1167: ldc           #49
1169: invokestatic  #50
1172: aload         38
1174: invokestatic  #76
1177: aload         39
1179: invokestatic  #76
1182: aload         40
1184: invokestatic  #47
1187: aload         40
1189: invokestatic  #48
1192: ldc           #49
1194: invokestatic  #50
1197: aload         41
1199: invokestatic  #47
1202: aload         41
1204: invokestatic  #48
1207: ldc           #49
1209: invokestatic  #50
1212: return
Exception table:
from    to  target type
533   550   553   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 615
End line: 640
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter13.addObservedPoint((double) 1.4E-45f, (-0.9923172082775625d), (-1.1752011936438014d));
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction19 = null;
        double[] doubleArray25 = new double[] { 11013.232920103323d, 0.6931471805599453d, 2.2227587494850775E-162d, 5.5459714E30f, 0.24197072451914337d };
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray26 = gaussianFitter13.fit(1, parametricUnivariateRealFunction19, doubleArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[11013.232920103323, 0.6931471805599453, 2.2227587494850775E-162, 5.545971375998504E30, 0.24197072451914337]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #91
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: aload         6
93: ldc2_w        #92
96: ldc2_w        #94
99: ldc2_w        #96
102: invokevirtual #98
105: aconst_null
106: astore        7
108: iconst_5
109: newarray       double
111: dup
112: iconst_0
113: ldc2_w        #99
116: dastore
117: dup
118: iconst_1
119: ldc2_w        #101
122: dastore
123: dup
124: iconst_2
125: ldc2_w        #103
128: dastore
129: dup
130: iconst_3
131: ldc2_w        #11
134: dastore
135: dup
136: iconst_4
137: ldc2_w        #105
140: dastore
141: astore        8
143: aload         6
145: iconst_1
146: aload         7
148: aload         8
150: invokevirtual #35
153: astore        9
155: ldc           #36
157: invokestatic  #37
160: goto          165
163: astore        9
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload_3
178: invokevirtual #43
181: ldc           #44
183: invokevirtual #42
186: iconst_0
187: invokevirtual #43
190: ldc           #41
192: invokevirtual #42
195: invokevirtual #45
198: iload_3
199: ifne          206
202: iconst_1
203: goto          207
206: iconst_0
207: invokestatic  #46
210: new           #39
213: dup
214: invokespecial #40
217: ldc           #41
219: invokevirtual #42
222: iload         4
224: invokevirtual #43
227: ldc           #44
229: invokevirtual #42
232: iconst_0
233: invokevirtual #43
236: ldc           #41
238: invokevirtual #42
241: invokevirtual #45
244: iload         4
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #46
257: new           #39
260: dup
261: invokespecial #40
264: ldc           #41
266: invokevirtual #42
269: iload         5
271: invokevirtual #43
274: ldc           #44
276: invokevirtual #42
279: iconst_0
280: invokevirtual #43
283: ldc           #41
285: invokevirtual #42
288: invokevirtual #45
291: iload         5
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #46
304: aload         8
306: invokestatic  #47
309: aload         8
311: invokestatic  #48
314: ldc           #107
316: invokestatic  #50
319: return
Exception table:
from    to  target type
143   160   163   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 643
End line: 720
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer19 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker22 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer19.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker22);
        int int24 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        int int25 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer19.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter27 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer19);
        double[] doubleArray34 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray35 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray35, true);
        double[] doubleArray38 = gaussianFitter27.fit(doubleArray34);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer44 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker47 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer44.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker47);
        int int49 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int50 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int51 = levenbergMarquardtOptimizer44.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter52 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer44);
        double[] doubleArray59 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray60 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray60, true);
        double[] doubleArray63 = gaussianFitter52.fit(doubleArray59);
        double[] doubleArray70 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray71 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair73 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray70, doubleArray71, true);
        double[] doubleArray74 = vectorialPointValuePair73.getValue();
        double[] doubleArray75 = vectorialPointValuePair73.getValue();
        double[] doubleArray76 = vectorialPointValuePair73.getPoint();
        double[] doubleArray77 = gaussianFitter52.fit(doubleArray76);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray77);
        double[] doubleArray79 = gaussianFitter13.fit(doubleArray38);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction81 = null;
        double[] doubleArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray83 = gaussianFitter13.fit((int) ' ', parametricUnivariateRealFunction81, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #108
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: new           #8
94: dup
95: ldc2_w        #9
98: ldc2_w        #11
101: ldc2_w        #13
104: dconst_1
105: ldc2_w        #13
108: invokespecial #15
111: astore        7
113: new           #16
116: dup
117: ldc2_w        #17
120: ldc2_w        #19
123: invokespecial #21
126: astore        8
128: aload         7
130: aload         8
132: invokevirtual #22
135: aload         7
137: invokevirtual #23
140: istore        9
142: aload         7
144: invokevirtual #23
147: istore        10
149: aload         7
151: invokevirtual #53
154: istore        11
156: new           #24
159: dup
160: aload         7
162: invokespecial #25
165: astore        12
167: bipush        6
169: newarray       double
171: dup
172: iconst_0
173: ldc2_w        #27
176: dastore
177: dup
178: iconst_1
179: ldc2_w        #9
182: dastore
183: dup
184: iconst_2
185: ldc2_w        #13
188: dastore
189: dup
190: iconst_3
191: ldc2_w        #29
194: dastore
195: dup
196: iconst_4
197: ldc2_w        #17
200: dastore
201: dup
202: iconst_5
203: ldc2_w        #31
206: dastore
207: astore        13
209: aconst_null
210: astore        14
212: new           #33
215: dup
216: aload         13
218: aload         14
220: iconst_1
221: invokespecial #34
224: astore        15
226: aload         12
228: aload         13
230: invokevirtual #54
233: astore        16
235: new           #8
238: dup
239: ldc2_w        #9
242: ldc2_w        #11
245: ldc2_w        #13
248: dconst_1
249: ldc2_w        #13
252: invokespecial #15
255: astore        17
257: new           #16
260: dup
261: ldc2_w        #17
264: ldc2_w        #19
267: invokespecial #21
270: astore        18
272: aload         17
274: aload         18
276: invokevirtual #22
279: aload         17
281: invokevirtual #23
284: istore        19
286: aload         17
288: invokevirtual #23
291: istore        20
293: aload         17
295: invokevirtual #53
298: istore        21
300: new           #24
303: dup
304: aload         17
306: invokespecial #25
309: astore        22
311: bipush        6
313: newarray       double
315: dup
316: iconst_0
317: ldc2_w        #27
320: dastore
321: dup
322: iconst_1
323: ldc2_w        #9
326: dastore
327: dup
328: iconst_2
329: ldc2_w        #13
332: dastore
333: dup
334: iconst_3
335: ldc2_w        #29
338: dastore
339: dup
340: iconst_4
341: ldc2_w        #17
344: dastore
345: dup
346: iconst_5
347: ldc2_w        #31
350: dastore
351: astore        23
353: aconst_null
354: astore        24
356: new           #33
359: dup
360: aload         23
362: aload         24
364: iconst_1
365: invokespecial #34
368: astore        25
370: aload         22
372: aload         23
374: invokevirtual #54
377: astore        26
379: bipush        6
381: newarray       double
383: dup
384: iconst_0
385: ldc2_w        #27
388: dastore
389: dup
390: iconst_1
391: ldc2_w        #9
394: dastore
395: dup
396: iconst_2
397: ldc2_w        #13
400: dastore
401: dup
402: iconst_3
403: ldc2_w        #29
406: dastore
407: dup
408: iconst_4
409: ldc2_w        #17
412: dastore
413: dup
414: iconst_5
415: ldc2_w        #31
418: dastore
419: astore        27
421: aconst_null
422: astore        28
424: new           #33
427: dup
428: aload         27
430: aload         28
432: iconst_1
433: invokespecial #34
436: astore        29
438: aload         29
440: invokevirtual #74
443: astore        30
445: aload         29
447: invokevirtual #74
450: astore        31
452: aload         29
454: invokevirtual #75
457: astore        32
459: aload         22
461: aload         32
463: invokevirtual #54
466: astore        33
468: new           #33
471: dup
472: aload         16
474: aload         33
476: invokespecial #109
479: astore        34
481: aload         6
483: aload         16
485: invokevirtual #54
488: astore        35
490: aconst_null
491: astore        36
493: aconst_null
494: astore        37
496: aload         6
498: bipush        32
500: aload         36
502: aload         37
504: invokevirtual #35
507: astore        38
509: ldc           #36
511: invokestatic  #37
514: goto          519
517: astore        38
519: new           #39
522: dup
523: invokespecial #40
526: ldc           #41
528: invokevirtual #42
531: iload_3
532: invokevirtual #43
535: ldc           #44
537: invokevirtual #42
540: iconst_0
541: invokevirtual #43
544: ldc           #41
546: invokevirtual #42
549: invokevirtual #45
552: iload_3
553: ifne          560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #46
564: new           #39
567: dup
568: invokespecial #40
571: ldc           #41
573: invokevirtual #42
576: iload         4
578: invokevirtual #43
581: ldc           #44
583: invokevirtual #42
586: iconst_0
587: invokevirtual #43
590: ldc           #41
592: invokevirtual #42
595: invokevirtual #45
598: iload         4
600: ifne          607
603: iconst_1
604: goto          608
607: iconst_0
608: invokestatic  #46
611: new           #39
614: dup
615: invokespecial #40
618: ldc           #41
620: invokevirtual #42
623: iload         5
625: invokevirtual #43
628: ldc           #44
630: invokevirtual #42
633: iconst_0
634: invokevirtual #43
637: ldc           #41
639: invokevirtual #42
642: invokevirtual #45
645: iload         5
647: ifne          654
650: iconst_1
651: goto          655
654: iconst_0
655: invokestatic  #46
658: new           #39
661: dup
662: invokespecial #40
665: ldc           #41
667: invokevirtual #42
670: iload         9
672: invokevirtual #43
675: ldc           #44
677: invokevirtual #42
680: iconst_0
681: invokevirtual #43
684: ldc           #41
686: invokevirtual #42
689: invokevirtual #45
692: iload         9
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #46
705: new           #39
708: dup
709: invokespecial #40
712: ldc           #41
714: invokevirtual #42
717: iload         10
719: invokevirtual #43
722: ldc           #44
724: invokevirtual #42
727: iconst_0
728: invokevirtual #43
731: ldc           #41
733: invokevirtual #42
736: invokevirtual #45
739: iload         10
741: ifne          748
744: iconst_1
745: goto          749
748: iconst_0
749: invokestatic  #46
752: new           #39
755: dup
756: invokespecial #40
759: ldc           #41
761: invokevirtual #42
764: iload         11
766: invokevirtual #43
769: ldc           #44
771: invokevirtual #42
774: iconst_0
775: invokevirtual #43
778: ldc           #41
780: invokevirtual #42
783: invokevirtual #45
786: iload         11
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #46
799: aload         13
801: invokestatic  #47
804: aload         13
806: invokestatic  #48
809: ldc           #49
811: invokestatic  #50
814: aload         16
816: invokestatic  #47
819: aload         16
821: invokestatic  #48
824: ldc           #49
826: invokestatic  #50
829: new           #39
832: dup
833: invokespecial #40
836: ldc           #41
838: invokevirtual #42
841: iload         19
843: invokevirtual #43
846: ldc           #44
848: invokevirtual #42
851: iconst_0
852: invokevirtual #43
855: ldc           #41
857: invokevirtual #42
860: invokevirtual #45
863: iload         19
865: ifne          872
868: iconst_1
869: goto          873
872: iconst_0
873: invokestatic  #46
876: new           #39
879: dup
880: invokespecial #40
883: ldc           #41
885: invokevirtual #42
888: iload         20
890: invokevirtual #43
893: ldc           #44
895: invokevirtual #42
898: iconst_0
899: invokevirtual #43
902: ldc           #41
904: invokevirtual #42
907: invokevirtual #45
910: iload         20
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #46
923: new           #39
926: dup
927: invokespecial #40
930: ldc           #41
932: invokevirtual #42
935: iload         21
937: invokevirtual #43
940: ldc           #44
942: invokevirtual #42
945: iconst_0
946: invokevirtual #43
949: ldc           #41
951: invokevirtual #42
954: invokevirtual #45
957: iload         21
959: ifne          966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #46
970: aload         23
972: invokestatic  #47
975: aload         23
977: invokestatic  #48
980: ldc           #49
982: invokestatic  #50
985: aload         26
987: invokestatic  #47
990: aload         26
992: invokestatic  #48
995: ldc           #49
997: invokestatic  #50
1000: aload         27
1002: invokestatic  #47
1005: aload         27
1007: invokestatic  #48
1010: ldc           #49
1012: invokestatic  #50
1015: aload         30
1017: invokestatic  #76
1020: aload         31
1022: invokestatic  #76
1025: aload         32
1027: invokestatic  #47
1030: aload         32
1032: invokestatic  #48
1035: ldc           #49
1037: invokestatic  #50
1040: aload         33
1042: invokestatic  #47
1045: aload         33
1047: invokestatic  #48
1050: ldc           #49
1052: invokestatic  #50
1055: aload         35
1057: invokestatic  #47
1060: aload         35
1062: invokestatic  #48
1065: ldc           #49
1067: invokestatic  #50
1070: return
Exception table:
from    to  target type
496   514   517   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 723
End line: 807
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter28 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction29 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer35 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker38 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer35.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker38);
        int int40 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int41 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer35.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter43 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer35);
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = gaussianFitter43.fit(doubleArray50);
        double[] doubleArray55 = curveFitter28.fit(parametricUnivariateRealFunction29, doubleArray50);
        double[] doubleArray56 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray50);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction57 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker66 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer63.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker66);
        int int68 = levenbergMarquardtOptimizer63.getMaxEvaluations();
        int int69 = levenbergMarquardtOptimizer63.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter70 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer63);
        gaussianFitter70.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction72 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer78 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker81 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer78.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker81);
        int int83 = levenbergMarquardtOptimizer78.getMaxEvaluations();
        int int84 = levenbergMarquardtOptimizer78.getMaxEvaluations();
        int int85 = levenbergMarquardtOptimizer78.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter86 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer78);
        double[] doubleArray93 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray94 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair96 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray93, doubleArray94, true);
        double[] doubleArray97 = gaussianFitter86.fit(doubleArray93);
        double[] doubleArray98 = gaussianFitter70.fit(parametricUnivariateRealFunction72, doubleArray97);
        double[] doubleArray99 = gaussianFitter12.fit(parametricUnivariateRealFunction57, doubleArray98);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray99), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #110
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: aconst_null
93: astore        7
95: new           #8
98: dup
99: ldc2_w        #9
102: ldc2_w        #11
105: ldc2_w        #13
108: dconst_1
109: ldc2_w        #13
112: invokespecial #15
115: astore        8
117: new           #16
120: dup
121: ldc2_w        #17
124: ldc2_w        #19
127: invokespecial #21
130: astore        9
132: aload         8
134: aload         9
136: invokevirtual #22
139: aload         8
141: invokevirtual #23
144: istore        10
146: aload         8
148: invokevirtual #23
151: istore        11
153: aload         8
155: invokevirtual #53
158: istore        12
160: new           #67
163: dup
164: aload         8
166: invokespecial #68
169: astore        13
171: aconst_null
172: astore        14
174: new           #8
177: dup
178: ldc2_w        #9
181: ldc2_w        #11
184: ldc2_w        #13
187: dconst_1
188: ldc2_w        #13
191: invokespecial #15
194: astore        15
196: new           #16
199: dup
200: ldc2_w        #17
203: ldc2_w        #19
206: invokespecial #21
209: astore        16
211: aload         15
213: aload         16
215: invokevirtual #22
218: aload         15
220: invokevirtual #23
223: istore        17
225: aload         15
227: invokevirtual #23
230: istore        18
232: aload         15
234: invokevirtual #53
237: istore        19
239: new           #24
242: dup
243: aload         15
245: invokespecial #25
248: astore        20
250: bipush        6
252: newarray       double
254: dup
255: iconst_0
256: ldc2_w        #27
259: dastore
260: dup
261: iconst_1
262: ldc2_w        #9
265: dastore
266: dup
267: iconst_2
268: ldc2_w        #13
271: dastore
272: dup
273: iconst_3
274: ldc2_w        #29
277: dastore
278: dup
279: iconst_4
280: ldc2_w        #17
283: dastore
284: dup
285: iconst_5
286: ldc2_w        #31
289: dastore
290: astore        21
292: aconst_null
293: astore        22
295: new           #33
298: dup
299: aload         21
301: aload         22
303: iconst_1
304: invokespecial #34
307: astore        23
309: aload         20
311: aload         21
313: invokevirtual #54
316: astore        24
318: aload         13
320: aload         14
322: aload         21
324: invokevirtual #89
327: astore        25
329: aload         5
331: aload         7
333: aload         21
335: invokevirtual #55
338: astore        26
340: aconst_null
341: astore        27
343: new           #8
346: dup
347: ldc2_w        #9
350: ldc2_w        #11
353: ldc2_w        #13
356: dconst_1
357: ldc2_w        #13
360: invokespecial #15
363: astore        28
365: new           #16
368: dup
369: ldc2_w        #17
372: ldc2_w        #19
375: invokespecial #21
378: astore        29
380: aload         28
382: aload         29
384: invokevirtual #22
387: aload         28
389: invokevirtual #23
392: istore        30
394: aload         28
396: invokevirtual #23
399: istore        31
401: new           #24
404: dup
405: aload         28
407: invokespecial #25
410: astore        32
412: aload         32
414: invokevirtual #52
417: aconst_null
418: astore        33
420: new           #8
423: dup
424: ldc2_w        #9
427: ldc2_w        #11
430: ldc2_w        #13
433: dconst_1
434: ldc2_w        #13
437: invokespecial #15
440: astore        34
442: new           #16
445: dup
446: ldc2_w        #17
449: ldc2_w        #19
452: invokespecial #21
455: astore        35
457: aload         34
459: aload         35
461: invokevirtual #22
464: aload         34
466: invokevirtual #23
469: istore        36
471: aload         34
473: invokevirtual #23
476: istore        37
478: aload         34
480: invokevirtual #53
483: istore        38
485: new           #24
488: dup
489: aload         34
491: invokespecial #25
494: astore        39
496: bipush        6
498: newarray       double
500: dup
501: iconst_0
502: ldc2_w        #27
505: dastore
506: dup
507: iconst_1
508: ldc2_w        #9
511: dastore
512: dup
513: iconst_2
514: ldc2_w        #13
517: dastore
518: dup
519: iconst_3
520: ldc2_w        #29
523: dastore
524: dup
525: iconst_4
526: ldc2_w        #17
529: dastore
530: dup
531: iconst_5
532: ldc2_w        #31
535: dastore
536: astore        40
538: aconst_null
539: astore        41
541: new           #33
544: dup
545: aload         40
547: aload         41
549: iconst_1
550: invokespecial #34
553: astore        42
555: aload         39
557: aload         40
559: invokevirtual #54
562: astore        43
564: aload         32
566: aload         33
568: aload         43
570: invokevirtual #55
573: astore        44
575: aload         5
577: aload         27
579: aload         44
581: invokevirtual #55
584: astore        45
586: new           #39
589: dup
590: invokespecial #40
593: ldc           #41
595: invokevirtual #42
598: iload_3
599: invokevirtual #43
602: ldc           #44
604: invokevirtual #42
607: iconst_0
608: invokevirtual #43
611: ldc           #41
613: invokevirtual #42
616: invokevirtual #45
619: iload_3
620: ifne          627
623: iconst_1
624: goto          628
627: iconst_0
628: invokestatic  #46
631: new           #39
634: dup
635: invokespecial #40
638: ldc           #41
640: invokevirtual #42
643: iload         4
645: invokevirtual #43
648: ldc           #44
650: invokevirtual #42
653: iconst_0
654: invokevirtual #43
657: ldc           #41
659: invokevirtual #42
662: invokevirtual #45
665: iload         4
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #46
678: aload         6
680: invokestatic  #47
683: new           #39
686: dup
687: invokespecial #40
690: ldc           #41
692: invokevirtual #42
695: iload         10
697: invokevirtual #43
700: ldc           #44
702: invokevirtual #42
705: iconst_0
706: invokevirtual #43
709: ldc           #41
711: invokevirtual #42
714: invokevirtual #45
717: iload         10
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #46
730: new           #39
733: dup
734: invokespecial #40
737: ldc           #41
739: invokevirtual #42
742: iload         11
744: invokevirtual #43
747: ldc           #44
749: invokevirtual #42
752: iconst_0
753: invokevirtual #43
756: ldc           #41
758: invokevirtual #42
761: invokevirtual #45
764: iload         11
766: ifne          773
769: iconst_1
770: goto          774
773: iconst_0
774: invokestatic  #46
777: new           #39
780: dup
781: invokespecial #40
784: ldc           #41
786: invokevirtual #42
789: iload         12
791: invokevirtual #43
794: ldc           #44
796: invokevirtual #42
799: iconst_0
800: invokevirtual #43
803: ldc           #41
805: invokevirtual #42
808: invokevirtual #45
811: iload         12
813: ifne          820
816: iconst_1
817: goto          821
820: iconst_0
821: invokestatic  #46
824: new           #39
827: dup
828: invokespecial #40
831: ldc           #41
833: invokevirtual #42
836: iload         17
838: invokevirtual #43
841: ldc           #44
843: invokevirtual #42
846: iconst_0
847: invokevirtual #43
850: ldc           #41
852: invokevirtual #42
855: invokevirtual #45
858: iload         17
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #46
871: new           #39
874: dup
875: invokespecial #40
878: ldc           #41
880: invokevirtual #42
883: iload         18
885: invokevirtual #43
888: ldc           #44
890: invokevirtual #42
893: iconst_0
894: invokevirtual #43
897: ldc           #41
899: invokevirtual #42
902: invokevirtual #45
905: iload         18
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #46
918: new           #39
921: dup
922: invokespecial #40
925: ldc           #41
927: invokevirtual #42
930: iload         19
932: invokevirtual #43
935: ldc           #44
937: invokevirtual #42
940: iconst_0
941: invokevirtual #43
944: ldc           #41
946: invokevirtual #42
949: invokevirtual #45
952: iload         19
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #46
965: aload         21
967: invokestatic  #47
970: aload         21
972: invokestatic  #48
975: ldc           #49
977: invokestatic  #50
980: aload         24
982: invokestatic  #47
985: aload         24
987: invokestatic  #48
990: ldc           #49
992: invokestatic  #50
995: aload         25
997: invokestatic  #47
1000: aload         25
1002: invokestatic  #48
1005: ldc           #49
1007: invokestatic  #50
1010: aload         26
1012: invokestatic  #47
1015: aload         26
1017: invokestatic  #48
1020: ldc           #49
1022: invokestatic  #50
1025: new           #39
1028: dup
1029: invokespecial #40
1032: ldc           #41
1034: invokevirtual #42
1037: iload         30
1039: invokevirtual #43
1042: ldc           #44
1044: invokevirtual #42
1047: iconst_0
1048: invokevirtual #43
1051: ldc           #41
1053: invokevirtual #42
1056: invokevirtual #45
1059: iload         30
1061: ifne          1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #46
1072: new           #39
1075: dup
1076: invokespecial #40
1079: ldc           #41
1081: invokevirtual #42
1084: iload         31
1086: invokevirtual #43
1089: ldc           #44
1091: invokevirtual #42
1094: iconst_0
1095: invokevirtual #43
1098: ldc           #41
1100: invokevirtual #42
1103: invokevirtual #45
1106: iload         31
1108: ifne          1115
1111: iconst_1
1112: goto          1116
1115: iconst_0
1116: invokestatic  #46
1119: new           #39
1122: dup
1123: invokespecial #40
1126: ldc           #41
1128: invokevirtual #42
1131: iload         36
1133: invokevirtual #43
1136: ldc           #44
1138: invokevirtual #42
1141: iconst_0
1142: invokevirtual #43
1145: ldc           #41
1147: invokevirtual #42
1150: invokevirtual #45
1153: iload         36
1155: ifne          1162
1158: iconst_1
1159: goto          1163
1162: iconst_0
1163: invokestatic  #46
1166: new           #39
1169: dup
1170: invokespecial #40
1173: ldc           #41
1175: invokevirtual #42
1178: iload         37
1180: invokevirtual #43
1183: ldc           #44
1185: invokevirtual #42
1188: iconst_0
1189: invokevirtual #43
1192: ldc           #41
1194: invokevirtual #42
1197: invokevirtual #45
1200: iload         37
1202: ifne          1209
1205: iconst_1
1206: goto          1210
1209: iconst_0
1210: invokestatic  #46
1213: new           #39
1216: dup
1217: invokespecial #40
1220: ldc           #41
1222: invokevirtual #42
1225: iload         38
1227: invokevirtual #43
1230: ldc           #44
1232: invokevirtual #42
1235: iconst_0
1236: invokevirtual #43
1239: ldc           #41
1241: invokevirtual #42
1244: invokevirtual #45
1247: iload         38
1249: ifne          1256
1252: iconst_1
1253: goto          1257
1256: iconst_0
1257: invokestatic  #46
1260: aload         40
1262: invokestatic  #47
1265: aload         40
1267: invokestatic  #48
1270: ldc           #49
1272: invokestatic  #50
1275: aload         43
1277: invokestatic  #47
1280: aload         43
1282: invokestatic  #48
1285: ldc           #49
1287: invokestatic  #50
1290: aload         44
1292: invokestatic  #47
1295: aload         44
1297: invokestatic  #48
1300: ldc           #49
1302: invokestatic  #50
1305: aload         45
1307: invokestatic  #47
1310: aload         45
1312: invokestatic  #48
1315: ldc           #49
1317: invokestatic  #50
1320: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 810
End line: 880
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer19 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker22 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer19.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker22);
        int int24 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        int int25 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer19.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter27 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer19);
        double[] doubleArray34 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray35 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray35, true);
        double[] doubleArray38 = gaussianFitter27.fit(doubleArray34);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer44 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker47 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer44.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker47);
        int int49 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int50 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int51 = levenbergMarquardtOptimizer44.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter52 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer44);
        double[] doubleArray59 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray60 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray60, true);
        double[] doubleArray63 = gaussianFitter52.fit(doubleArray59);
        double[] doubleArray70 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray71 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair73 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray70, doubleArray71, true);
        double[] doubleArray74 = vectorialPointValuePair73.getValue();
        double[] doubleArray75 = vectorialPointValuePair73.getValue();
        double[] doubleArray76 = vectorialPointValuePair73.getPoint();
        double[] doubleArray77 = gaussianFitter52.fit(doubleArray76);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray77);
        double[] doubleArray79 = gaussianFitter13.fit(doubleArray38);
        java.lang.Class<?> wildcardClass80 = doubleArray79.getClass();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #111
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: new           #8
94: dup
95: ldc2_w        #9
98: ldc2_w        #11
101: ldc2_w        #13
104: dconst_1
105: ldc2_w        #13
108: invokespecial #15
111: astore        7
113: new           #16
116: dup
117: ldc2_w        #17
120: ldc2_w        #19
123: invokespecial #21
126: astore        8
128: aload         7
130: aload         8
132: invokevirtual #22
135: aload         7
137: invokevirtual #23
140: istore        9
142: aload         7
144: invokevirtual #23
147: istore        10
149: aload         7
151: invokevirtual #53
154: istore        11
156: new           #24
159: dup
160: aload         7
162: invokespecial #25
165: astore        12
167: bipush        6
169: newarray       double
171: dup
172: iconst_0
173: ldc2_w        #27
176: dastore
177: dup
178: iconst_1
179: ldc2_w        #9
182: dastore
183: dup
184: iconst_2
185: ldc2_w        #13
188: dastore
189: dup
190: iconst_3
191: ldc2_w        #29
194: dastore
195: dup
196: iconst_4
197: ldc2_w        #17
200: dastore
201: dup
202: iconst_5
203: ldc2_w        #31
206: dastore
207: astore        13
209: aconst_null
210: astore        14
212: new           #33
215: dup
216: aload         13
218: aload         14
220: iconst_1
221: invokespecial #34
224: astore        15
226: aload         12
228: aload         13
230: invokevirtual #54
233: astore        16
235: new           #8
238: dup
239: ldc2_w        #9
242: ldc2_w        #11
245: ldc2_w        #13
248: dconst_1
249: ldc2_w        #13
252: invokespecial #15
255: astore        17
257: new           #16
260: dup
261: ldc2_w        #17
264: ldc2_w        #19
267: invokespecial #21
270: astore        18
272: aload         17
274: aload         18
276: invokevirtual #22
279: aload         17
281: invokevirtual #23
284: istore        19
286: aload         17
288: invokevirtual #23
291: istore        20
293: aload         17
295: invokevirtual #53
298: istore        21
300: new           #24
303: dup
304: aload         17
306: invokespecial #25
309: astore        22
311: bipush        6
313: newarray       double
315: dup
316: iconst_0
317: ldc2_w        #27
320: dastore
321: dup
322: iconst_1
323: ldc2_w        #9
326: dastore
327: dup
328: iconst_2
329: ldc2_w        #13
332: dastore
333: dup
334: iconst_3
335: ldc2_w        #29
338: dastore
339: dup
340: iconst_4
341: ldc2_w        #17
344: dastore
345: dup
346: iconst_5
347: ldc2_w        #31
350: dastore
351: astore        23
353: aconst_null
354: astore        24
356: new           #33
359: dup
360: aload         23
362: aload         24
364: iconst_1
365: invokespecial #34
368: astore        25
370: aload         22
372: aload         23
374: invokevirtual #54
377: astore        26
379: bipush        6
381: newarray       double
383: dup
384: iconst_0
385: ldc2_w        #27
388: dastore
389: dup
390: iconst_1
391: ldc2_w        #9
394: dastore
395: dup
396: iconst_2
397: ldc2_w        #13
400: dastore
401: dup
402: iconst_3
403: ldc2_w        #29
406: dastore
407: dup
408: iconst_4
409: ldc2_w        #17
412: dastore
413: dup
414: iconst_5
415: ldc2_w        #31
418: dastore
419: astore        27
421: aconst_null
422: astore        28
424: new           #33
427: dup
428: aload         27
430: aload         28
432: iconst_1
433: invokespecial #34
436: astore        29
438: aload         29
440: invokevirtual #74
443: astore        30
445: aload         29
447: invokevirtual #74
450: astore        31
452: aload         29
454: invokevirtual #75
457: astore        32
459: aload         22
461: aload         32
463: invokevirtual #54
466: astore        33
468: new           #33
471: dup
472: aload         16
474: aload         33
476: invokespecial #109
479: astore        34
481: aload         6
483: aload         16
485: invokevirtual #54
488: astore        35
490: aload         35
492: invokevirtual #112
495: astore        36
497: new           #39
500: dup
501: invokespecial #40
504: ldc           #41
506: invokevirtual #42
509: iload_3
510: invokevirtual #43
513: ldc           #44
515: invokevirtual #42
518: iconst_0
519: invokevirtual #43
522: ldc           #41
524: invokevirtual #42
527: invokevirtual #45
530: iload_3
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #46
542: new           #39
545: dup
546: invokespecial #40
549: ldc           #41
551: invokevirtual #42
554: iload         4
556: invokevirtual #43
559: ldc           #44
561: invokevirtual #42
564: iconst_0
565: invokevirtual #43
568: ldc           #41
570: invokevirtual #42
573: invokevirtual #45
576: iload         4
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #46
589: new           #39
592: dup
593: invokespecial #40
596: ldc           #41
598: invokevirtual #42
601: iload         5
603: invokevirtual #43
606: ldc           #44
608: invokevirtual #42
611: iconst_0
612: invokevirtual #43
615: ldc           #41
617: invokevirtual #42
620: invokevirtual #45
623: iload         5
625: ifne          632
628: iconst_1
629: goto          633
632: iconst_0
633: invokestatic  #46
636: new           #39
639: dup
640: invokespecial #40
643: ldc           #41
645: invokevirtual #42
648: iload         9
650: invokevirtual #43
653: ldc           #44
655: invokevirtual #42
658: iconst_0
659: invokevirtual #43
662: ldc           #41
664: invokevirtual #42
667: invokevirtual #45
670: iload         9
672: ifne          679
675: iconst_1
676: goto          680
679: iconst_0
680: invokestatic  #46
683: new           #39
686: dup
687: invokespecial #40
690: ldc           #41
692: invokevirtual #42
695: iload         10
697: invokevirtual #43
700: ldc           #44
702: invokevirtual #42
705: iconst_0
706: invokevirtual #43
709: ldc           #41
711: invokevirtual #42
714: invokevirtual #45
717: iload         10
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #46
730: new           #39
733: dup
734: invokespecial #40
737: ldc           #41
739: invokevirtual #42
742: iload         11
744: invokevirtual #43
747: ldc           #44
749: invokevirtual #42
752: iconst_0
753: invokevirtual #43
756: ldc           #41
758: invokevirtual #42
761: invokevirtual #45
764: iload         11
766: ifne          773
769: iconst_1
770: goto          774
773: iconst_0
774: invokestatic  #46
777: aload         13
779: invokestatic  #47
782: aload         13
784: invokestatic  #48
787: ldc           #49
789: invokestatic  #50
792: aload         16
794: invokestatic  #47
797: aload         16
799: invokestatic  #48
802: ldc           #49
804: invokestatic  #50
807: new           #39
810: dup
811: invokespecial #40
814: ldc           #41
816: invokevirtual #42
819: iload         19
821: invokevirtual #43
824: ldc           #44
826: invokevirtual #42
829: iconst_0
830: invokevirtual #43
833: ldc           #41
835: invokevirtual #42
838: invokevirtual #45
841: iload         19
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #46
854: new           #39
857: dup
858: invokespecial #40
861: ldc           #41
863: invokevirtual #42
866: iload         20
868: invokevirtual #43
871: ldc           #44
873: invokevirtual #42
876: iconst_0
877: invokevirtual #43
880: ldc           #41
882: invokevirtual #42
885: invokevirtual #45
888: iload         20
890: ifne          897
893: iconst_1
894: goto          898
897: iconst_0
898: invokestatic  #46
901: new           #39
904: dup
905: invokespecial #40
908: ldc           #41
910: invokevirtual #42
913: iload         21
915: invokevirtual #43
918: ldc           #44
920: invokevirtual #42
923: iconst_0
924: invokevirtual #43
927: ldc           #41
929: invokevirtual #42
932: invokevirtual #45
935: iload         21
937: ifne          944
940: iconst_1
941: goto          945
944: iconst_0
945: invokestatic  #46
948: aload         23
950: invokestatic  #47
953: aload         23
955: invokestatic  #48
958: ldc           #49
960: invokestatic  #50
963: aload         26
965: invokestatic  #47
968: aload         26
970: invokestatic  #48
973: ldc           #49
975: invokestatic  #50
978: aload         27
980: invokestatic  #47
983: aload         27
985: invokestatic  #48
988: ldc           #49
990: invokestatic  #50
993: aload         30
995: invokestatic  #76
998: aload         31
1000: invokestatic  #76
1003: aload         32
1005: invokestatic  #47
1008: aload         32
1010: invokestatic  #48
1013: ldc           #49
1015: invokestatic  #50
1018: aload         33
1020: invokestatic  #47
1023: aload         33
1025: invokestatic  #48
1028: ldc           #49
1030: invokestatic  #50
1033: aload         35
1035: invokestatic  #47
1038: aload         35
1040: invokestatic  #48
1043: ldc           #49
1045: invokestatic  #50
1048: aload         36
1050: invokestatic  #47
1053: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 883
End line: 919
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        curveFitter13.clearObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #113
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: aconst_null
92: astore        7
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        8
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        9
131: aload         8
133: aload         9
135: invokevirtual #22
138: aload         8
140: invokevirtual #23
143: istore        10
145: aload         8
147: invokevirtual #23
150: istore        11
152: aload         8
154: invokevirtual #53
157: istore        12
159: new           #24
162: dup
163: aload         8
165: invokespecial #25
168: astore        13
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        14
212: aconst_null
213: astore        15
215: new           #33
218: dup
219: aload         14
221: aload         15
223: iconst_1
224: invokespecial #34
227: astore        16
229: aload         13
231: aload         14
233: invokevirtual #54
236: astore        17
238: aload         6
240: aload         7
242: aload         14
244: invokevirtual #89
247: astore        18
249: aload         6
251: invokevirtual #114
254: new           #39
257: dup
258: invokespecial #40
261: ldc           #41
263: invokevirtual #42
266: iload_3
267: invokevirtual #43
270: ldc           #44
272: invokevirtual #42
275: iconst_0
276: invokevirtual #43
279: ldc           #41
281: invokevirtual #42
284: invokevirtual #45
287: iload_3
288: ifne          295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #46
299: new           #39
302: dup
303: invokespecial #40
306: ldc           #41
308: invokevirtual #42
311: iload         4
313: invokevirtual #43
316: ldc           #44
318: invokevirtual #42
321: iconst_0
322: invokevirtual #43
325: ldc           #41
327: invokevirtual #42
330: invokevirtual #45
333: iload         4
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #46
346: new           #39
349: dup
350: invokespecial #40
353: ldc           #41
355: invokevirtual #42
358: iload         5
360: invokevirtual #43
363: ldc           #44
365: invokevirtual #42
368: iconst_0
369: invokevirtual #43
372: ldc           #41
374: invokevirtual #42
377: invokevirtual #45
380: iload         5
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #46
393: new           #39
396: dup
397: invokespecial #40
400: ldc           #41
402: invokevirtual #42
405: iload         10
407: invokevirtual #43
410: ldc           #44
412: invokevirtual #42
415: iconst_0
416: invokevirtual #43
419: ldc           #41
421: invokevirtual #42
424: invokevirtual #45
427: iload         10
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #46
440: new           #39
443: dup
444: invokespecial #40
447: ldc           #41
449: invokevirtual #42
452: iload         11
454: invokevirtual #43
457: ldc           #44
459: invokevirtual #42
462: iconst_0
463: invokevirtual #43
466: ldc           #41
468: invokevirtual #42
471: invokevirtual #45
474: iload         11
476: ifne          483
479: iconst_1
480: goto          484
483: iconst_0
484: invokestatic  #46
487: new           #39
490: dup
491: invokespecial #40
494: ldc           #41
496: invokevirtual #42
499: iload         12
501: invokevirtual #43
504: ldc           #44
506: invokevirtual #42
509: iconst_0
510: invokevirtual #43
513: ldc           #41
515: invokevirtual #42
518: invokevirtual #45
521: iload         12
523: ifne          530
526: iconst_1
527: goto          531
530: iconst_0
531: invokestatic  #46
534: aload         14
536: invokestatic  #47
539: aload         14
541: invokestatic  #48
544: ldc           #49
546: invokestatic  #50
549: aload         17
551: invokestatic  #47
554: aload         17
556: invokestatic  #48
559: ldc           #49
561: invokestatic  #50
564: aload         18
566: invokestatic  #47
569: aload         18
571: invokestatic  #48
574: ldc           #49
576: invokestatic  #50
579: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 922
End line: 966
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction41 = null;
        double[] doubleArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray43 = curveFitter13.fit(parametricUnivariateRealFunction41, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #115
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: aconst_null
92: astore        7
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        8
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        9
131: aload         8
133: aload         9
135: invokevirtual #22
138: aload         8
140: invokevirtual #23
143: istore        10
145: aload         8
147: invokevirtual #23
150: istore        11
152: aload         8
154: invokevirtual #53
157: istore        12
159: new           #24
162: dup
163: aload         8
165: invokespecial #25
168: astore        13
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        14
212: aconst_null
213: astore        15
215: new           #33
218: dup
219: aload         14
221: aload         15
223: iconst_1
224: invokespecial #34
227: astore        16
229: aload         13
231: aload         14
233: invokevirtual #54
236: astore        17
238: aload         6
240: aload         7
242: aload         14
244: invokevirtual #89
247: astore        18
249: aconst_null
250: astore        19
252: aconst_null
253: astore        20
255: aload         6
257: aload         19
259: aload         20
261: invokevirtual #89
264: astore        21
266: ldc           #36
268: invokestatic  #37
271: goto          276
274: astore        21
276: new           #39
279: dup
280: invokespecial #40
283: ldc           #41
285: invokevirtual #42
288: iload_3
289: invokevirtual #43
292: ldc           #44
294: invokevirtual #42
297: iconst_0
298: invokevirtual #43
301: ldc           #41
303: invokevirtual #42
306: invokevirtual #45
309: iload_3
310: ifne          317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #46
321: new           #39
324: dup
325: invokespecial #40
328: ldc           #41
330: invokevirtual #42
333: iload         4
335: invokevirtual #43
338: ldc           #44
340: invokevirtual #42
343: iconst_0
344: invokevirtual #43
347: ldc           #41
349: invokevirtual #42
352: invokevirtual #45
355: iload         4
357: ifne          364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #46
368: new           #39
371: dup
372: invokespecial #40
375: ldc           #41
377: invokevirtual #42
380: iload         5
382: invokevirtual #43
385: ldc           #44
387: invokevirtual #42
390: iconst_0
391: invokevirtual #43
394: ldc           #41
396: invokevirtual #42
399: invokevirtual #45
402: iload         5
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #46
415: new           #39
418: dup
419: invokespecial #40
422: ldc           #41
424: invokevirtual #42
427: iload         10
429: invokevirtual #43
432: ldc           #44
434: invokevirtual #42
437: iconst_0
438: invokevirtual #43
441: ldc           #41
443: invokevirtual #42
446: invokevirtual #45
449: iload         10
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #46
462: new           #39
465: dup
466: invokespecial #40
469: ldc           #41
471: invokevirtual #42
474: iload         11
476: invokevirtual #43
479: ldc           #44
481: invokevirtual #42
484: iconst_0
485: invokevirtual #43
488: ldc           #41
490: invokevirtual #42
493: invokevirtual #45
496: iload         11
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #46
509: new           #39
512: dup
513: invokespecial #40
516: ldc           #41
518: invokevirtual #42
521: iload         12
523: invokevirtual #43
526: ldc           #44
528: invokevirtual #42
531: iconst_0
532: invokevirtual #43
535: ldc           #41
537: invokevirtual #42
540: invokevirtual #45
543: iload         12
545: ifne          552
548: iconst_1
549: goto          553
552: iconst_0
553: invokestatic  #46
556: aload         14
558: invokestatic  #47
561: aload         14
563: invokestatic  #48
566: ldc           #49
568: invokestatic  #50
571: aload         17
573: invokestatic  #47
576: aload         17
578: invokestatic  #48
581: ldc           #49
583: invokestatic  #50
586: aload         18
588: invokestatic  #47
591: aload         18
593: invokestatic  #48
596: ldc           #49
598: invokestatic  #50
601: return
Exception table:
from    to  target type
255   271   274   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 969
End line: 1000
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        double[] doubleArray2 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer8 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker11 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer8.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker11);
        int int13 = levenbergMarquardtOptimizer8.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer8.getMaxEvaluations();
        int int15 = levenbergMarquardtOptimizer8.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter16 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer8);
        double[] doubleArray23 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray24 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray23, doubleArray24, true);
        double[] doubleArray27 = gaussianFitter16.fit(doubleArray23);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair28 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray2, doubleArray23);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray29 = parametric0.gradient((double) 0, doubleArray2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #116
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: aconst_null
33: astore_2
34: new           #8
37: dup
38: ldc2_w        #9
41: ldc2_w        #11
44: ldc2_w        #13
47: dconst_1
48: ldc2_w        #13
51: invokespecial #15
54: astore_3
55: new           #16
58: dup
59: ldc2_w        #17
62: ldc2_w        #19
65: invokespecial #21
68: astore        4
70: aload_3
71: aload         4
73: invokevirtual #22
76: aload_3
77: invokevirtual #23
80: istore        5
82: aload_3
83: invokevirtual #23
86: istore        6
88: aload_3
89: invokevirtual #53
92: istore        7
94: new           #24
97: dup
98: aload_3
99: invokespecial #25
102: astore        8
104: bipush        6
106: newarray       double
108: dup
109: iconst_0
110: ldc2_w        #27
113: dastore
114: dup
115: iconst_1
116: ldc2_w        #9
119: dastore
120: dup
121: iconst_2
122: ldc2_w        #13
125: dastore
126: dup
127: iconst_3
128: ldc2_w        #29
131: dastore
132: dup
133: iconst_4
134: ldc2_w        #17
137: dastore
138: dup
139: iconst_5
140: ldc2_w        #31
143: dastore
144: astore        9
146: aconst_null
147: astore        10
149: new           #33
152: dup
153: aload         9
155: aload         10
157: iconst_1
158: invokespecial #34
161: astore        11
163: aload         8
165: aload         9
167: invokevirtual #54
170: astore        12
172: new           #33
175: dup
176: aload_2
177: aload         9
179: invokespecial #109
182: astore        13
184: aload_1
185: dconst_0
186: aload_2
187: invokevirtual #119
190: astore        14
192: ldc           #120
194: invokestatic  #37
197: goto          202
200: astore        14
202: new           #39
205: dup
206: invokespecial #40
209: ldc           #41
211: invokevirtual #42
214: iload         5
216: invokevirtual #43
219: ldc           #44
221: invokevirtual #42
224: iconst_0
225: invokevirtual #43
228: ldc           #41
230: invokevirtual #42
233: invokevirtual #45
236: iload         5
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #46
249: new           #39
252: dup
253: invokespecial #40
256: ldc           #41
258: invokevirtual #42
261: iload         6
263: invokevirtual #43
266: ldc           #44
268: invokevirtual #42
271: iconst_0
272: invokevirtual #43
275: ldc           #41
277: invokevirtual #42
280: invokevirtual #45
283: iload         6
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #46
296: new           #39
299: dup
300: invokespecial #40
303: ldc           #41
305: invokevirtual #42
308: iload         7
310: invokevirtual #43
313: ldc           #44
315: invokevirtual #42
318: iconst_0
319: invokevirtual #43
322: ldc           #41
324: invokevirtual #42
327: invokevirtual #45
330: iload         7
332: ifne          339
335: iconst_1
336: goto          340
339: iconst_0
340: invokestatic  #46
343: aload         9
345: invokestatic  #47
348: aload         9
350: invokestatic  #48
353: ldc           #49
355: invokestatic  #50
358: aload         12
360: invokestatic  #47
363: aload         12
365: invokestatic  #48
368: ldc           #49
370: invokestatic  #50
373: return
Exception table:
from    to  target type
184   197   200   Class org/apache/commons/math/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 1003
End line: 1032
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        double[] doubleArray22 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray23 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray22, doubleArray23, true);
        double[] doubleArray26 = gaussianFitter15.fit(doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = parametric0.value((double) 0L, doubleArray22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #122
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: aload_2
85: invokevirtual #53
88: istore        6
90: new           #24
93: dup
94: aload_2
95: invokespecial #25
98: astore        7
100: bipush        6
102: newarray       double
104: dup
105: iconst_0
106: ldc2_w        #27
109: dastore
110: dup
111: iconst_1
112: ldc2_w        #9
115: dastore
116: dup
117: iconst_2
118: ldc2_w        #13
121: dastore
122: dup
123: iconst_3
124: ldc2_w        #29
127: dastore
128: dup
129: iconst_4
130: ldc2_w        #17
133: dastore
134: dup
135: iconst_5
136: ldc2_w        #31
139: dastore
140: astore        8
142: aconst_null
143: astore        9
145: new           #33
148: dup
149: aload         8
151: aload         9
153: iconst_1
154: invokespecial #34
157: astore        10
159: aload         7
161: aload         8
163: invokevirtual #54
166: astore        11
168: aload_1
169: dconst_0
170: aload         8
172: invokevirtual #123
175: dstore        12
177: ldc           #124
179: invokestatic  #37
182: goto          187
185: astore        12
187: new           #39
190: dup
191: invokespecial #40
194: ldc           #41
196: invokevirtual #42
199: iload         4
201: invokevirtual #43
204: ldc           #44
206: invokevirtual #42
209: iconst_0
210: invokevirtual #43
213: ldc           #41
215: invokevirtual #42
218: invokevirtual #45
221: iload         4
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #46
234: new           #39
237: dup
238: invokespecial #40
241: ldc           #41
243: invokevirtual #42
246: iload         5
248: invokevirtual #43
251: ldc           #44
253: invokevirtual #42
256: iconst_0
257: invokevirtual #43
260: ldc           #41
262: invokevirtual #42
265: invokevirtual #45
268: iload         5
270: ifne          277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #46
281: new           #39
284: dup
285: invokespecial #40
288: ldc           #41
290: invokevirtual #42
293: iload         6
295: invokevirtual #43
298: ldc           #44
300: invokevirtual #42
303: iconst_0
304: invokevirtual #43
307: ldc           #41
309: invokevirtual #42
312: invokevirtual #45
315: iload         6
317: ifne          324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #46
328: aload         8
330: invokestatic  #47
333: aload         8
335: invokestatic  #48
338: ldc           #49
340: invokestatic  #50
343: aload         11
345: invokestatic  #47
348: aload         11
350: invokestatic  #48
353: ldc           #49
355: invokestatic  #50
358: return
Exception table:
from    to  target type
168   182   185   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 1035
End line: 1112
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        curveFitter13.addObservedPoint((double) (byte) -1, 0.2419707245191434d, 98.00000000000001d);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric45 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer51 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker54 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer51.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker54);
        int int56 = levenbergMarquardtOptimizer51.getMaxEvaluations();
        int int57 = levenbergMarquardtOptimizer51.getMaxEvaluations();
        int int58 = levenbergMarquardtOptimizer51.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter59 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer51);
        double[] doubleArray66 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray67 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray66, doubleArray67, true);
        double[] doubleArray70 = gaussianFitter59.fit(doubleArray66);
        double[] doubleArray77 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray78 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray77, doubleArray78, true);
        double[] doubleArray81 = vectorialPointValuePair80.getValue();
        double[] doubleArray82 = vectorialPointValuePair80.getValue();
        double[] doubleArray83 = vectorialPointValuePair80.getPoint();
        double[] doubleArray84 = gaussianFitter59.fit(doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray85 = curveFitter13.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric45, doubleArray84);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #126
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: aconst_null
92: astore        7
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        8
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        9
131: aload         8
133: aload         9
135: invokevirtual #22
138: aload         8
140: invokevirtual #23
143: istore        10
145: aload         8
147: invokevirtual #23
150: istore        11
152: aload         8
154: invokevirtual #53
157: istore        12
159: new           #24
162: dup
163: aload         8
165: invokespecial #25
168: astore        13
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        14
212: aconst_null
213: astore        15
215: new           #33
218: dup
219: aload         14
221: aload         15
223: iconst_1
224: invokespecial #34
227: astore        16
229: aload         13
231: aload         14
233: invokevirtual #54
236: astore        17
238: aload         6
240: aload         7
242: aload         14
244: invokevirtual #89
247: astore        18
249: aload         6
251: ldc2_w        #9
254: ldc2_w        #127
257: ldc2_w        #129
260: invokevirtual #131
263: new           #117
266: dup
267: invokespecial #118
270: astore        19
272: new           #8
275: dup
276: ldc2_w        #9
279: ldc2_w        #11
282: ldc2_w        #13
285: dconst_1
286: ldc2_w        #13
289: invokespecial #15
292: astore        20
294: new           #16
297: dup
298: ldc2_w        #17
301: ldc2_w        #19
304: invokespecial #21
307: astore        21
309: aload         20
311: aload         21
313: invokevirtual #22
316: aload         20
318: invokevirtual #23
321: istore        22
323: aload         20
325: invokevirtual #23
328: istore        23
330: aload         20
332: invokevirtual #53
335: istore        24
337: new           #24
340: dup
341: aload         20
343: invokespecial #25
346: astore        25
348: bipush        6
350: newarray       double
352: dup
353: iconst_0
354: ldc2_w        #27
357: dastore
358: dup
359: iconst_1
360: ldc2_w        #9
363: dastore
364: dup
365: iconst_2
366: ldc2_w        #13
369: dastore
370: dup
371: iconst_3
372: ldc2_w        #29
375: dastore
376: dup
377: iconst_4
378: ldc2_w        #17
381: dastore
382: dup
383: iconst_5
384: ldc2_w        #31
387: dastore
388: astore        26
390: aconst_null
391: astore        27
393: new           #33
396: dup
397: aload         26
399: aload         27
401: iconst_1
402: invokespecial #34
405: astore        28
407: aload         25
409: aload         26
411: invokevirtual #54
414: astore        29
416: bipush        6
418: newarray       double
420: dup
421: iconst_0
422: ldc2_w        #27
425: dastore
426: dup
427: iconst_1
428: ldc2_w        #9
431: dastore
432: dup
433: iconst_2
434: ldc2_w        #13
437: dastore
438: dup
439: iconst_3
440: ldc2_w        #29
443: dastore
444: dup
445: iconst_4
446: ldc2_w        #17
449: dastore
450: dup
451: iconst_5
452: ldc2_w        #31
455: dastore
456: astore        30
458: aconst_null
459: astore        31
461: new           #33
464: dup
465: aload         30
467: aload         31
469: iconst_1
470: invokespecial #34
473: astore        32
475: aload         32
477: invokevirtual #74
480: astore        33
482: aload         32
484: invokevirtual #74
487: astore        34
489: aload         32
491: invokevirtual #75
494: astore        35
496: aload         25
498: aload         35
500: invokevirtual #54
503: astore        36
505: aload         6
507: aload         19
509: aload         36
511: invokevirtual #89
514: astore        37
516: ldc           #124
518: invokestatic  #37
521: goto          526
524: astore        37
526: new           #39
529: dup
530: invokespecial #40
533: ldc           #41
535: invokevirtual #42
538: iload_3
539: invokevirtual #43
542: ldc           #44
544: invokevirtual #42
547: iconst_0
548: invokevirtual #43
551: ldc           #41
553: invokevirtual #42
556: invokevirtual #45
559: iload_3
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #46
571: new           #39
574: dup
575: invokespecial #40
578: ldc           #41
580: invokevirtual #42
583: iload         4
585: invokevirtual #43
588: ldc           #44
590: invokevirtual #42
593: iconst_0
594: invokevirtual #43
597: ldc           #41
599: invokevirtual #42
602: invokevirtual #45
605: iload         4
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #46
618: new           #39
621: dup
622: invokespecial #40
625: ldc           #41
627: invokevirtual #42
630: iload         5
632: invokevirtual #43
635: ldc           #44
637: invokevirtual #42
640: iconst_0
641: invokevirtual #43
644: ldc           #41
646: invokevirtual #42
649: invokevirtual #45
652: iload         5
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #46
665: new           #39
668: dup
669: invokespecial #40
672: ldc           #41
674: invokevirtual #42
677: iload         10
679: invokevirtual #43
682: ldc           #44
684: invokevirtual #42
687: iconst_0
688: invokevirtual #43
691: ldc           #41
693: invokevirtual #42
696: invokevirtual #45
699: iload         10
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #46
712: new           #39
715: dup
716: invokespecial #40
719: ldc           #41
721: invokevirtual #42
724: iload         11
726: invokevirtual #43
729: ldc           #44
731: invokevirtual #42
734: iconst_0
735: invokevirtual #43
738: ldc           #41
740: invokevirtual #42
743: invokevirtual #45
746: iload         11
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #46
759: new           #39
762: dup
763: invokespecial #40
766: ldc           #41
768: invokevirtual #42
771: iload         12
773: invokevirtual #43
776: ldc           #44
778: invokevirtual #42
781: iconst_0
782: invokevirtual #43
785: ldc           #41
787: invokevirtual #42
790: invokevirtual #45
793: iload         12
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #46
806: aload         14
808: invokestatic  #47
811: aload         14
813: invokestatic  #48
816: ldc           #49
818: invokestatic  #50
821: aload         17
823: invokestatic  #47
826: aload         17
828: invokestatic  #48
831: ldc           #49
833: invokestatic  #50
836: aload         18
838: invokestatic  #47
841: aload         18
843: invokestatic  #48
846: ldc           #49
848: invokestatic  #50
851: new           #39
854: dup
855: invokespecial #40
858: ldc           #41
860: invokevirtual #42
863: iload         22
865: invokevirtual #43
868: ldc           #44
870: invokevirtual #42
873: iconst_0
874: invokevirtual #43
877: ldc           #41
879: invokevirtual #42
882: invokevirtual #45
885: iload         22
887: ifne          894
890: iconst_1
891: goto          895
894: iconst_0
895: invokestatic  #46
898: new           #39
901: dup
902: invokespecial #40
905: ldc           #41
907: invokevirtual #42
910: iload         23
912: invokevirtual #43
915: ldc           #44
917: invokevirtual #42
920: iconst_0
921: invokevirtual #43
924: ldc           #41
926: invokevirtual #42
929: invokevirtual #45
932: iload         23
934: ifne          941
937: iconst_1
938: goto          942
941: iconst_0
942: invokestatic  #46
945: new           #39
948: dup
949: invokespecial #40
952: ldc           #41
954: invokevirtual #42
957: iload         24
959: invokevirtual #43
962: ldc           #44
964: invokevirtual #42
967: iconst_0
968: invokevirtual #43
971: ldc           #41
973: invokevirtual #42
976: invokevirtual #45
979: iload         24
981: ifne          988
984: iconst_1
985: goto          989
988: iconst_0
989: invokestatic  #46
992: aload         26
994: invokestatic  #47
997: aload         26
999: invokestatic  #48
1002: ldc           #49
1004: invokestatic  #50
1007: aload         29
1009: invokestatic  #47
1012: aload         29
1014: invokestatic  #48
1017: ldc           #49
1019: invokestatic  #50
1022: aload         30
1024: invokestatic  #47
1027: aload         30
1029: invokestatic  #48
1032: ldc           #49
1034: invokestatic  #50
1037: aload         33
1039: invokestatic  #76
1042: aload         34
1044: invokestatic  #76
1047: aload         35
1049: invokestatic  #47
1052: aload         35
1054: invokestatic  #48
1057: ldc           #49
1059: invokestatic  #50
1062: aload         36
1064: invokestatic  #47
1067: aload         36
1069: invokestatic  #48
1072: ldc           #49
1074: invokestatic  #50
1077: return
Exception table:
from    to  target type
505   521   524   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 1115
End line: 1157
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        gaussianFitter14.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = gaussianFitter30.fit(doubleArray37);
        double[] doubleArray42 = gaussianFitter14.fit(parametricUnivariateRealFunction16, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double double43 = parametric0.value((-0.5872139151569291d), doubleArray41);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #132
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: new           #24
87: dup
88: aload_2
89: invokespecial #25
92: astore        6
94: aload         6
96: invokevirtual #52
99: aconst_null
100: astore        7
102: new           #8
105: dup
106: ldc2_w        #9
109: ldc2_w        #11
112: ldc2_w        #13
115: dconst_1
116: ldc2_w        #13
119: invokespecial #15
122: astore        8
124: new           #16
127: dup
128: ldc2_w        #17
131: ldc2_w        #19
134: invokespecial #21
137: astore        9
139: aload         8
141: aload         9
143: invokevirtual #22
146: aload         8
148: invokevirtual #23
151: istore        10
153: aload         8
155: invokevirtual #23
158: istore        11
160: aload         8
162: invokevirtual #53
165: istore        12
167: new           #24
170: dup
171: aload         8
173: invokespecial #25
176: astore        13
178: bipush        6
180: newarray       double
182: dup
183: iconst_0
184: ldc2_w        #27
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #9
193: dastore
194: dup
195: iconst_2
196: ldc2_w        #13
199: dastore
200: dup
201: iconst_3
202: ldc2_w        #29
205: dastore
206: dup
207: iconst_4
208: ldc2_w        #17
211: dastore
212: dup
213: iconst_5
214: ldc2_w        #31
217: dastore
218: astore        14
220: aconst_null
221: astore        15
223: new           #33
226: dup
227: aload         14
229: aload         15
231: iconst_1
232: invokespecial #34
235: astore        16
237: aload         13
239: aload         14
241: invokevirtual #54
244: astore        17
246: aload         6
248: aload         7
250: aload         17
252: invokevirtual #55
255: astore        18
257: aload_1
258: ldc2_w        #133
261: aload         17
263: invokevirtual #123
266: dstore        19
268: ldc           #124
270: invokestatic  #37
273: goto          278
276: astore        19
278: new           #39
281: dup
282: invokespecial #40
285: ldc           #41
287: invokevirtual #42
290: iload         4
292: invokevirtual #43
295: ldc           #44
297: invokevirtual #42
300: iconst_0
301: invokevirtual #43
304: ldc           #41
306: invokevirtual #42
309: invokevirtual #45
312: iload         4
314: ifne          321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #46
325: new           #39
328: dup
329: invokespecial #40
332: ldc           #41
334: invokevirtual #42
337: iload         5
339: invokevirtual #43
342: ldc           #44
344: invokevirtual #42
347: iconst_0
348: invokevirtual #43
351: ldc           #41
353: invokevirtual #42
356: invokevirtual #45
359: iload         5
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #46
372: new           #39
375: dup
376: invokespecial #40
379: ldc           #41
381: invokevirtual #42
384: iload         10
386: invokevirtual #43
389: ldc           #44
391: invokevirtual #42
394: iconst_0
395: invokevirtual #43
398: ldc           #41
400: invokevirtual #42
403: invokevirtual #45
406: iload         10
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #46
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: iload         11
433: invokevirtual #43
436: ldc           #44
438: invokevirtual #42
441: iconst_0
442: invokevirtual #43
445: ldc           #41
447: invokevirtual #42
450: invokevirtual #45
453: iload         11
455: ifne          462
458: iconst_1
459: goto          463
462: iconst_0
463: invokestatic  #46
466: new           #39
469: dup
470: invokespecial #40
473: ldc           #41
475: invokevirtual #42
478: iload         12
480: invokevirtual #43
483: ldc           #44
485: invokevirtual #42
488: iconst_0
489: invokevirtual #43
492: ldc           #41
494: invokevirtual #42
497: invokevirtual #45
500: iload         12
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #46
513: aload         14
515: invokestatic  #47
518: aload         14
520: invokestatic  #48
523: ldc           #49
525: invokestatic  #50
528: aload         17
530: invokestatic  #47
533: aload         17
535: invokestatic  #48
538: ldc           #49
540: invokestatic  #50
543: aload         18
545: invokestatic  #47
548: aload         18
550: invokestatic  #48
553: ldc           #49
555: invokestatic  #50
558: return
Exception table:
from    to  target type
257   273   276   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 1160
End line: 1237
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter15 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = gaussianFitter30.fit(doubleArray37);
        double[] doubleArray42 = curveFitter15.fit(parametricUnivariateRealFunction16, doubleArray37);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer48 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker51 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer48.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker51);
        int int53 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int55 = levenbergMarquardtOptimizer48.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter56 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer48);
        double[] doubleArray63 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray64 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray64, true);
        double[] doubleArray67 = gaussianFitter56.fit(doubleArray63);
        double[] doubleArray74 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray75 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray75, true);
        double[] doubleArray78 = vectorialPointValuePair77.getValue();
        double[] doubleArray79 = vectorialPointValuePair77.getValue();
        double[] doubleArray80 = vectorialPointValuePair77.getPoint();
        double[] doubleArray81 = gaussianFitter56.fit(doubleArray80);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray81, false);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray84 = parametric0.gradient(4.248699152289463d, doubleArray37);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray78);
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #135
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: aload_2
85: invokevirtual #53
88: istore        6
90: new           #67
93: dup
94: aload_2
95: invokespecial #68
98: astore        7
100: aconst_null
101: astore        8
103: new           #8
106: dup
107: ldc2_w        #9
110: ldc2_w        #11
113: ldc2_w        #13
116: dconst_1
117: ldc2_w        #13
120: invokespecial #15
123: astore        9
125: new           #16
128: dup
129: ldc2_w        #17
132: ldc2_w        #19
135: invokespecial #21
138: astore        10
140: aload         9
142: aload         10
144: invokevirtual #22
147: aload         9
149: invokevirtual #23
152: istore        11
154: aload         9
156: invokevirtual #23
159: istore        12
161: aload         9
163: invokevirtual #53
166: istore        13
168: new           #24
171: dup
172: aload         9
174: invokespecial #25
177: astore        14
179: bipush        6
181: newarray       double
183: dup
184: iconst_0
185: ldc2_w        #27
188: dastore
189: dup
190: iconst_1
191: ldc2_w        #9
194: dastore
195: dup
196: iconst_2
197: ldc2_w        #13
200: dastore
201: dup
202: iconst_3
203: ldc2_w        #29
206: dastore
207: dup
208: iconst_4
209: ldc2_w        #17
212: dastore
213: dup
214: iconst_5
215: ldc2_w        #31
218: dastore
219: astore        15
221: aconst_null
222: astore        16
224: new           #33
227: dup
228: aload         15
230: aload         16
232: iconst_1
233: invokespecial #34
236: astore        17
238: aload         14
240: aload         15
242: invokevirtual #54
245: astore        18
247: aload         7
249: aload         8
251: aload         15
253: invokevirtual #89
256: astore        19
258: new           #8
261: dup
262: ldc2_w        #9
265: ldc2_w        #11
268: ldc2_w        #13
271: dconst_1
272: ldc2_w        #13
275: invokespecial #15
278: astore        20
280: new           #16
283: dup
284: ldc2_w        #17
287: ldc2_w        #19
290: invokespecial #21
293: astore        21
295: aload         20
297: aload         21
299: invokevirtual #22
302: aload         20
304: invokevirtual #23
307: istore        22
309: aload         20
311: invokevirtual #23
314: istore        23
316: aload         20
318: invokevirtual #53
321: istore        24
323: new           #24
326: dup
327: aload         20
329: invokespecial #25
332: astore        25
334: bipush        6
336: newarray       double
338: dup
339: iconst_0
340: ldc2_w        #27
343: dastore
344: dup
345: iconst_1
346: ldc2_w        #9
349: dastore
350: dup
351: iconst_2
352: ldc2_w        #13
355: dastore
356: dup
357: iconst_3
358: ldc2_w        #29
361: dastore
362: dup
363: iconst_4
364: ldc2_w        #17
367: dastore
368: dup
369: iconst_5
370: ldc2_w        #31
373: dastore
374: astore        26
376: aconst_null
377: astore        27
379: new           #33
382: dup
383: aload         26
385: aload         27
387: iconst_1
388: invokespecial #34
391: astore        28
393: aload         25
395: aload         26
397: invokevirtual #54
400: astore        29
402: bipush        6
404: newarray       double
406: dup
407: iconst_0
408: ldc2_w        #27
411: dastore
412: dup
413: iconst_1
414: ldc2_w        #9
417: dastore
418: dup
419: iconst_2
420: ldc2_w        #13
423: dastore
424: dup
425: iconst_3
426: ldc2_w        #29
429: dastore
430: dup
431: iconst_4
432: ldc2_w        #17
435: dastore
436: dup
437: iconst_5
438: ldc2_w        #31
441: dastore
442: astore        30
444: aconst_null
445: astore        31
447: new           #33
450: dup
451: aload         30
453: aload         31
455: iconst_1
456: invokespecial #34
459: astore        32
461: aload         32
463: invokevirtual #74
466: astore        33
468: aload         32
470: invokevirtual #74
473: astore        34
475: aload         32
477: invokevirtual #75
480: astore        35
482: aload         25
484: aload         35
486: invokevirtual #54
489: astore        36
491: new           #33
494: dup
495: aload         15
497: aload         36
499: iconst_0
500: invokespecial #34
503: astore        37
505: aload_1
506: ldc2_w        #136
509: aload         15
511: invokevirtual #119
514: astore        38
516: ldc           #124
518: invokestatic  #37
521: goto          526
524: astore        38
526: new           #39
529: dup
530: invokespecial #40
533: ldc           #41
535: invokevirtual #42
538: iload         4
540: invokevirtual #43
543: ldc           #44
545: invokevirtual #42
548: iconst_0
549: invokevirtual #43
552: ldc           #41
554: invokevirtual #42
557: invokevirtual #45
560: iload         4
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #46
573: new           #39
576: dup
577: invokespecial #40
580: ldc           #41
582: invokevirtual #42
585: iload         5
587: invokevirtual #43
590: ldc           #44
592: invokevirtual #42
595: iconst_0
596: invokevirtual #43
599: ldc           #41
601: invokevirtual #42
604: invokevirtual #45
607: iload         5
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #46
620: new           #39
623: dup
624: invokespecial #40
627: ldc           #41
629: invokevirtual #42
632: iload         6
634: invokevirtual #43
637: ldc           #44
639: invokevirtual #42
642: iconst_0
643: invokevirtual #43
646: ldc           #41
648: invokevirtual #42
651: invokevirtual #45
654: iload         6
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #46
667: new           #39
670: dup
671: invokespecial #40
674: ldc           #41
676: invokevirtual #42
679: iload         11
681: invokevirtual #43
684: ldc           #44
686: invokevirtual #42
689: iconst_0
690: invokevirtual #43
693: ldc           #41
695: invokevirtual #42
698: invokevirtual #45
701: iload         11
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #46
714: new           #39
717: dup
718: invokespecial #40
721: ldc           #41
723: invokevirtual #42
726: iload         12
728: invokevirtual #43
731: ldc           #44
733: invokevirtual #42
736: iconst_0
737: invokevirtual #43
740: ldc           #41
742: invokevirtual #42
745: invokevirtual #45
748: iload         12
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #46
761: new           #39
764: dup
765: invokespecial #40
768: ldc           #41
770: invokevirtual #42
773: iload         13
775: invokevirtual #43
778: ldc           #44
780: invokevirtual #42
783: iconst_0
784: invokevirtual #43
787: ldc           #41
789: invokevirtual #42
792: invokevirtual #45
795: iload         13
797: ifne          804
800: iconst_1
801: goto          805
804: iconst_0
805: invokestatic  #46
808: aload         15
810: invokestatic  #47
813: aload         15
815: invokestatic  #48
818: ldc           #49
820: invokestatic  #50
823: aload         18
825: invokestatic  #47
828: aload         18
830: invokestatic  #48
833: ldc           #49
835: invokestatic  #50
838: aload         19
840: invokestatic  #47
843: aload         19
845: invokestatic  #48
848: ldc           #49
850: invokestatic  #50
853: new           #39
856: dup
857: invokespecial #40
860: ldc           #41
862: invokevirtual #42
865: iload         22
867: invokevirtual #43
870: ldc           #44
872: invokevirtual #42
875: iconst_0
876: invokevirtual #43
879: ldc           #41
881: invokevirtual #42
884: invokevirtual #45
887: iload         22
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #46
900: new           #39
903: dup
904: invokespecial #40
907: ldc           #41
909: invokevirtual #42
912: iload         23
914: invokevirtual #43
917: ldc           #44
919: invokevirtual #42
922: iconst_0
923: invokevirtual #43
926: ldc           #41
928: invokevirtual #42
931: invokevirtual #45
934: iload         23
936: ifne          943
939: iconst_1
940: goto          944
943: iconst_0
944: invokestatic  #46
947: new           #39
950: dup
951: invokespecial #40
954: ldc           #41
956: invokevirtual #42
959: iload         24
961: invokevirtual #43
964: ldc           #44
966: invokevirtual #42
969: iconst_0
970: invokevirtual #43
973: ldc           #41
975: invokevirtual #42
978: invokevirtual #45
981: iload         24
983: ifne          990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #46
994: aload         26
996: invokestatic  #47
999: aload         26
1001: invokestatic  #48
1004: ldc           #49
1006: invokestatic  #50
1009: aload         29
1011: invokestatic  #47
1014: aload         29
1016: invokestatic  #48
1019: ldc           #49
1021: invokestatic  #50
1024: aload         30
1026: invokestatic  #47
1029: aload         30
1031: invokestatic  #48
1034: ldc           #49
1036: invokestatic  #50
1039: aload         33
1041: invokestatic  #76
1044: aload         34
1046: invokestatic  #76
1049: aload         35
1051: invokestatic  #47
1054: aload         35
1056: invokestatic  #48
1059: ldc           #49
1061: invokestatic  #50
1064: aload         36
1066: invokestatic  #47
1069: aload         36
1071: invokestatic  #48
1074: ldc           #49
1076: invokestatic  #50
1079: return
Exception table:
from    to  target type
505   521   524   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 1240
End line: 1269
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        double[] doubleArray22 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray23 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray22, doubleArray23, true);
        double[] doubleArray26 = gaussianFitter15.fit(doubleArray22);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray27 = parametric0.gradient(0.0d, doubleArray26);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #138
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: aload_2
85: invokevirtual #53
88: istore        6
90: new           #24
93: dup
94: aload_2
95: invokespecial #25
98: astore        7
100: bipush        6
102: newarray       double
104: dup
105: iconst_0
106: ldc2_w        #27
109: dastore
110: dup
111: iconst_1
112: ldc2_w        #9
115: dastore
116: dup
117: iconst_2
118: ldc2_w        #13
121: dastore
122: dup
123: iconst_3
124: ldc2_w        #29
127: dastore
128: dup
129: iconst_4
130: ldc2_w        #17
133: dastore
134: dup
135: iconst_5
136: ldc2_w        #31
139: dastore
140: astore        8
142: aconst_null
143: astore        9
145: new           #33
148: dup
149: aload         8
151: aload         9
153: iconst_1
154: invokespecial #34
157: astore        10
159: aload         7
161: aload         8
163: invokevirtual #54
166: astore        11
168: aload_1
169: dconst_0
170: aload         11
172: invokevirtual #119
175: astore        12
177: ldc           #124
179: invokestatic  #37
182: goto          187
185: astore        12
187: new           #39
190: dup
191: invokespecial #40
194: ldc           #41
196: invokevirtual #42
199: iload         4
201: invokevirtual #43
204: ldc           #44
206: invokevirtual #42
209: iconst_0
210: invokevirtual #43
213: ldc           #41
215: invokevirtual #42
218: invokevirtual #45
221: iload         4
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #46
234: new           #39
237: dup
238: invokespecial #40
241: ldc           #41
243: invokevirtual #42
246: iload         5
248: invokevirtual #43
251: ldc           #44
253: invokevirtual #42
256: iconst_0
257: invokevirtual #43
260: ldc           #41
262: invokevirtual #42
265: invokevirtual #45
268: iload         5
270: ifne          277
273: iconst_1
274: goto          278
277: iconst_0
278: invokestatic  #46
281: new           #39
284: dup
285: invokespecial #40
288: ldc           #41
290: invokevirtual #42
293: iload         6
295: invokevirtual #43
298: ldc           #44
300: invokevirtual #42
303: iconst_0
304: invokevirtual #43
307: ldc           #41
309: invokevirtual #42
312: invokevirtual #45
315: iload         6
317: ifne          324
320: iconst_1
321: goto          325
324: iconst_0
325: invokestatic  #46
328: aload         8
330: invokestatic  #47
333: aload         8
335: invokestatic  #48
338: ldc           #49
340: invokestatic  #50
343: aload         11
345: invokestatic  #47
348: aload         11
350: invokestatic  #48
353: ldc           #49
355: invokestatic  #50
358: return
Exception table:
from    to  target type
168   182   185   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 1272
End line: 1335
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        double[] doubleArray22 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray23 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray22, doubleArray23, true);
        double[] doubleArray26 = gaussianFitter15.fit(doubleArray22);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer32 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker35 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer32.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker35);
        int int37 = levenbergMarquardtOptimizer32.getMaxEvaluations();
        int int38 = levenbergMarquardtOptimizer32.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer32.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter40 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer32);
        double[] doubleArray47 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray48 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair50 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray48, true);
        double[] doubleArray51 = gaussianFitter40.fit(doubleArray47);
        double[] doubleArray58 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray59 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray58, doubleArray59, true);
        double[] doubleArray62 = vectorialPointValuePair61.getValue();
        double[] doubleArray63 = vectorialPointValuePair61.getValue();
        double[] doubleArray64 = vectorialPointValuePair61.getPoint();
        double[] doubleArray65 = gaussianFitter40.fit(doubleArray64);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray26, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double double67 = parametric0.value(9.53674316406539E-7d, doubleArray65);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray62);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #139
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: aload_2
85: invokevirtual #53
88: istore        6
90: new           #24
93: dup
94: aload_2
95: invokespecial #25
98: astore        7
100: bipush        6
102: newarray       double
104: dup
105: iconst_0
106: ldc2_w        #27
109: dastore
110: dup
111: iconst_1
112: ldc2_w        #9
115: dastore
116: dup
117: iconst_2
118: ldc2_w        #13
121: dastore
122: dup
123: iconst_3
124: ldc2_w        #29
127: dastore
128: dup
129: iconst_4
130: ldc2_w        #17
133: dastore
134: dup
135: iconst_5
136: ldc2_w        #31
139: dastore
140: astore        8
142: aconst_null
143: astore        9
145: new           #33
148: dup
149: aload         8
151: aload         9
153: iconst_1
154: invokespecial #34
157: astore        10
159: aload         7
161: aload         8
163: invokevirtual #54
166: astore        11
168: new           #8
171: dup
172: ldc2_w        #9
175: ldc2_w        #11
178: ldc2_w        #13
181: dconst_1
182: ldc2_w        #13
185: invokespecial #15
188: astore        12
190: new           #16
193: dup
194: ldc2_w        #17
197: ldc2_w        #19
200: invokespecial #21
203: astore        13
205: aload         12
207: aload         13
209: invokevirtual #22
212: aload         12
214: invokevirtual #23
217: istore        14
219: aload         12
221: invokevirtual #23
224: istore        15
226: aload         12
228: invokevirtual #53
231: istore        16
233: new           #24
236: dup
237: aload         12
239: invokespecial #25
242: astore        17
244: bipush        6
246: newarray       double
248: dup
249: iconst_0
250: ldc2_w        #27
253: dastore
254: dup
255: iconst_1
256: ldc2_w        #9
259: dastore
260: dup
261: iconst_2
262: ldc2_w        #13
265: dastore
266: dup
267: iconst_3
268: ldc2_w        #29
271: dastore
272: dup
273: iconst_4
274: ldc2_w        #17
277: dastore
278: dup
279: iconst_5
280: ldc2_w        #31
283: dastore
284: astore        18
286: aconst_null
287: astore        19
289: new           #33
292: dup
293: aload         18
295: aload         19
297: iconst_1
298: invokespecial #34
301: astore        20
303: aload         17
305: aload         18
307: invokevirtual #54
310: astore        21
312: bipush        6
314: newarray       double
316: dup
317: iconst_0
318: ldc2_w        #27
321: dastore
322: dup
323: iconst_1
324: ldc2_w        #9
327: dastore
328: dup
329: iconst_2
330: ldc2_w        #13
333: dastore
334: dup
335: iconst_3
336: ldc2_w        #29
339: dastore
340: dup
341: iconst_4
342: ldc2_w        #17
345: dastore
346: dup
347: iconst_5
348: ldc2_w        #31
351: dastore
352: astore        22
354: aconst_null
355: astore        23
357: new           #33
360: dup
361: aload         22
363: aload         23
365: iconst_1
366: invokespecial #34
369: astore        24
371: aload         24
373: invokevirtual #74
376: astore        25
378: aload         24
380: invokevirtual #74
383: astore        26
385: aload         24
387: invokevirtual #75
390: astore        27
392: aload         17
394: aload         27
396: invokevirtual #54
399: astore        28
401: new           #33
404: dup
405: aload         11
407: aload         28
409: invokespecial #109
412: astore        29
414: aload_1
415: ldc2_w        #140
418: aload         28
420: invokevirtual #123
423: dstore        30
425: ldc           #124
427: invokestatic  #37
430: goto          435
433: astore        30
435: new           #39
438: dup
439: invokespecial #40
442: ldc           #41
444: invokevirtual #42
447: iload         4
449: invokevirtual #43
452: ldc           #44
454: invokevirtual #42
457: iconst_0
458: invokevirtual #43
461: ldc           #41
463: invokevirtual #42
466: invokevirtual #45
469: iload         4
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #46
482: new           #39
485: dup
486: invokespecial #40
489: ldc           #41
491: invokevirtual #42
494: iload         5
496: invokevirtual #43
499: ldc           #44
501: invokevirtual #42
504: iconst_0
505: invokevirtual #43
508: ldc           #41
510: invokevirtual #42
513: invokevirtual #45
516: iload         5
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #46
529: new           #39
532: dup
533: invokespecial #40
536: ldc           #41
538: invokevirtual #42
541: iload         6
543: invokevirtual #43
546: ldc           #44
548: invokevirtual #42
551: iconst_0
552: invokevirtual #43
555: ldc           #41
557: invokevirtual #42
560: invokevirtual #45
563: iload         6
565: ifne          572
568: iconst_1
569: goto          573
572: iconst_0
573: invokestatic  #46
576: aload         8
578: invokestatic  #47
581: aload         8
583: invokestatic  #48
586: ldc           #49
588: invokestatic  #50
591: aload         11
593: invokestatic  #47
596: aload         11
598: invokestatic  #48
601: ldc           #49
603: invokestatic  #50
606: new           #39
609: dup
610: invokespecial #40
613: ldc           #41
615: invokevirtual #42
618: iload         14
620: invokevirtual #43
623: ldc           #44
625: invokevirtual #42
628: iconst_0
629: invokevirtual #43
632: ldc           #41
634: invokevirtual #42
637: invokevirtual #45
640: iload         14
642: ifne          649
645: iconst_1
646: goto          650
649: iconst_0
650: invokestatic  #46
653: new           #39
656: dup
657: invokespecial #40
660: ldc           #41
662: invokevirtual #42
665: iload         15
667: invokevirtual #43
670: ldc           #44
672: invokevirtual #42
675: iconst_0
676: invokevirtual #43
679: ldc           #41
681: invokevirtual #42
684: invokevirtual #45
687: iload         15
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #46
700: new           #39
703: dup
704: invokespecial #40
707: ldc           #41
709: invokevirtual #42
712: iload         16
714: invokevirtual #43
717: ldc           #44
719: invokevirtual #42
722: iconst_0
723: invokevirtual #43
726: ldc           #41
728: invokevirtual #42
731: invokevirtual #45
734: iload         16
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #46
747: aload         18
749: invokestatic  #47
752: aload         18
754: invokestatic  #48
757: ldc           #49
759: invokestatic  #50
762: aload         21
764: invokestatic  #47
767: aload         21
769: invokestatic  #48
772: ldc           #49
774: invokestatic  #50
777: aload         22
779: invokestatic  #47
782: aload         22
784: invokestatic  #48
787: ldc           #49
789: invokestatic  #50
792: aload         25
794: invokestatic  #76
797: aload         26
799: invokestatic  #76
802: aload         27
804: invokestatic  #47
807: aload         27
809: invokestatic  #48
812: ldc           #49
814: invokestatic  #50
817: aload         28
819: invokestatic  #47
822: aload         28
824: invokestatic  #48
827: ldc           #49
829: invokestatic  #50
832: return
Exception table:
from    to  target type
414   430   433   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 1338
End line: 1360
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter14.clearObservations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray16 = gaussianFitter14.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #142
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: new           #24
94: dup
95: aload_1
96: invokespecial #25
99: astore        7
101: aload         7
103: invokevirtual #52
106: aload         7
108: invokevirtual #63
111: astore        8
113: ldc           #64
115: invokestatic  #37
118: goto          123
121: astore        8
123: new           #39
126: dup
127: invokespecial #40
130: ldc           #41
132: invokevirtual #42
135: iload_3
136: invokevirtual #43
139: ldc           #44
141: invokevirtual #42
144: iconst_0
145: invokevirtual #43
148: ldc           #41
150: invokevirtual #42
153: invokevirtual #45
156: iload_3
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #46
168: new           #39
171: dup
172: invokespecial #40
175: ldc           #41
177: invokevirtual #42
180: iload         4
182: invokevirtual #43
185: ldc           #44
187: invokevirtual #42
190: iconst_0
191: invokevirtual #43
194: ldc           #41
196: invokevirtual #42
199: invokevirtual #45
202: iload         4
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #46
215: new           #39
218: dup
219: invokespecial #40
222: ldc           #41
224: invokevirtual #42
227: iload         5
229: invokevirtual #43
232: ldc           #44
234: invokevirtual #42
237: iconst_0
238: invokevirtual #43
241: ldc           #41
243: invokevirtual #42
246: invokevirtual #45
249: iload         5
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #46
262: return
Exception table:
from    to  target type
106   118   121   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 1363
End line: 1440
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter15 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = gaussianFitter30.fit(doubleArray37);
        double[] doubleArray42 = curveFitter15.fit(parametricUnivariateRealFunction16, doubleArray37);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer48 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker51 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer48.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker51);
        int int53 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int55 = levenbergMarquardtOptimizer48.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter56 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer48);
        double[] doubleArray63 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray64 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray64, true);
        double[] doubleArray67 = gaussianFitter56.fit(doubleArray63);
        double[] doubleArray74 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray75 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray75, true);
        double[] doubleArray78 = vectorialPointValuePair77.getValue();
        double[] doubleArray79 = vectorialPointValuePair77.getValue();
        double[] doubleArray80 = vectorialPointValuePair77.getPoint();
        double[] doubleArray81 = gaussianFitter56.fit(doubleArray80);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray81, false);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = parametric0.value(0.0d, doubleArray81);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray78);
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #143
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: aload_2
85: invokevirtual #53
88: istore        6
90: new           #67
93: dup
94: aload_2
95: invokespecial #68
98: astore        7
100: aconst_null
101: astore        8
103: new           #8
106: dup
107: ldc2_w        #9
110: ldc2_w        #11
113: ldc2_w        #13
116: dconst_1
117: ldc2_w        #13
120: invokespecial #15
123: astore        9
125: new           #16
128: dup
129: ldc2_w        #17
132: ldc2_w        #19
135: invokespecial #21
138: astore        10
140: aload         9
142: aload         10
144: invokevirtual #22
147: aload         9
149: invokevirtual #23
152: istore        11
154: aload         9
156: invokevirtual #23
159: istore        12
161: aload         9
163: invokevirtual #53
166: istore        13
168: new           #24
171: dup
172: aload         9
174: invokespecial #25
177: astore        14
179: bipush        6
181: newarray       double
183: dup
184: iconst_0
185: ldc2_w        #27
188: dastore
189: dup
190: iconst_1
191: ldc2_w        #9
194: dastore
195: dup
196: iconst_2
197: ldc2_w        #13
200: dastore
201: dup
202: iconst_3
203: ldc2_w        #29
206: dastore
207: dup
208: iconst_4
209: ldc2_w        #17
212: dastore
213: dup
214: iconst_5
215: ldc2_w        #31
218: dastore
219: astore        15
221: aconst_null
222: astore        16
224: new           #33
227: dup
228: aload         15
230: aload         16
232: iconst_1
233: invokespecial #34
236: astore        17
238: aload         14
240: aload         15
242: invokevirtual #54
245: astore        18
247: aload         7
249: aload         8
251: aload         15
253: invokevirtual #89
256: astore        19
258: new           #8
261: dup
262: ldc2_w        #9
265: ldc2_w        #11
268: ldc2_w        #13
271: dconst_1
272: ldc2_w        #13
275: invokespecial #15
278: astore        20
280: new           #16
283: dup
284: ldc2_w        #17
287: ldc2_w        #19
290: invokespecial #21
293: astore        21
295: aload         20
297: aload         21
299: invokevirtual #22
302: aload         20
304: invokevirtual #23
307: istore        22
309: aload         20
311: invokevirtual #23
314: istore        23
316: aload         20
318: invokevirtual #53
321: istore        24
323: new           #24
326: dup
327: aload         20
329: invokespecial #25
332: astore        25
334: bipush        6
336: newarray       double
338: dup
339: iconst_0
340: ldc2_w        #27
343: dastore
344: dup
345: iconst_1
346: ldc2_w        #9
349: dastore
350: dup
351: iconst_2
352: ldc2_w        #13
355: dastore
356: dup
357: iconst_3
358: ldc2_w        #29
361: dastore
362: dup
363: iconst_4
364: ldc2_w        #17
367: dastore
368: dup
369: iconst_5
370: ldc2_w        #31
373: dastore
374: astore        26
376: aconst_null
377: astore        27
379: new           #33
382: dup
383: aload         26
385: aload         27
387: iconst_1
388: invokespecial #34
391: astore        28
393: aload         25
395: aload         26
397: invokevirtual #54
400: astore        29
402: bipush        6
404: newarray       double
406: dup
407: iconst_0
408: ldc2_w        #27
411: dastore
412: dup
413: iconst_1
414: ldc2_w        #9
417: dastore
418: dup
419: iconst_2
420: ldc2_w        #13
423: dastore
424: dup
425: iconst_3
426: ldc2_w        #29
429: dastore
430: dup
431: iconst_4
432: ldc2_w        #17
435: dastore
436: dup
437: iconst_5
438: ldc2_w        #31
441: dastore
442: astore        30
444: aconst_null
445: astore        31
447: new           #33
450: dup
451: aload         30
453: aload         31
455: iconst_1
456: invokespecial #34
459: astore        32
461: aload         32
463: invokevirtual #74
466: astore        33
468: aload         32
470: invokevirtual #74
473: astore        34
475: aload         32
477: invokevirtual #75
480: astore        35
482: aload         25
484: aload         35
486: invokevirtual #54
489: astore        36
491: new           #33
494: dup
495: aload         15
497: aload         36
499: iconst_0
500: invokespecial #34
503: astore        37
505: aload_1
506: dconst_0
507: aload         36
509: invokevirtual #123
512: dstore        38
514: ldc           #124
516: invokestatic  #37
519: goto          524
522: astore        38
524: new           #39
527: dup
528: invokespecial #40
531: ldc           #41
533: invokevirtual #42
536: iload         4
538: invokevirtual #43
541: ldc           #44
543: invokevirtual #42
546: iconst_0
547: invokevirtual #43
550: ldc           #41
552: invokevirtual #42
555: invokevirtual #45
558: iload         4
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #46
571: new           #39
574: dup
575: invokespecial #40
578: ldc           #41
580: invokevirtual #42
583: iload         5
585: invokevirtual #43
588: ldc           #44
590: invokevirtual #42
593: iconst_0
594: invokevirtual #43
597: ldc           #41
599: invokevirtual #42
602: invokevirtual #45
605: iload         5
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #46
618: new           #39
621: dup
622: invokespecial #40
625: ldc           #41
627: invokevirtual #42
630: iload         6
632: invokevirtual #43
635: ldc           #44
637: invokevirtual #42
640: iconst_0
641: invokevirtual #43
644: ldc           #41
646: invokevirtual #42
649: invokevirtual #45
652: iload         6
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #46
665: new           #39
668: dup
669: invokespecial #40
672: ldc           #41
674: invokevirtual #42
677: iload         11
679: invokevirtual #43
682: ldc           #44
684: invokevirtual #42
687: iconst_0
688: invokevirtual #43
691: ldc           #41
693: invokevirtual #42
696: invokevirtual #45
699: iload         11
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #46
712: new           #39
715: dup
716: invokespecial #40
719: ldc           #41
721: invokevirtual #42
724: iload         12
726: invokevirtual #43
729: ldc           #44
731: invokevirtual #42
734: iconst_0
735: invokevirtual #43
738: ldc           #41
740: invokevirtual #42
743: invokevirtual #45
746: iload         12
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #46
759: new           #39
762: dup
763: invokespecial #40
766: ldc           #41
768: invokevirtual #42
771: iload         13
773: invokevirtual #43
776: ldc           #44
778: invokevirtual #42
781: iconst_0
782: invokevirtual #43
785: ldc           #41
787: invokevirtual #42
790: invokevirtual #45
793: iload         13
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #46
806: aload         15
808: invokestatic  #47
811: aload         15
813: invokestatic  #48
816: ldc           #49
818: invokestatic  #50
821: aload         18
823: invokestatic  #47
826: aload         18
828: invokestatic  #48
831: ldc           #49
833: invokestatic  #50
836: aload         19
838: invokestatic  #47
841: aload         19
843: invokestatic  #48
846: ldc           #49
848: invokestatic  #50
851: new           #39
854: dup
855: invokespecial #40
858: ldc           #41
860: invokevirtual #42
863: iload         22
865: invokevirtual #43
868: ldc           #44
870: invokevirtual #42
873: iconst_0
874: invokevirtual #43
877: ldc           #41
879: invokevirtual #42
882: invokevirtual #45
885: iload         22
887: ifne          894
890: iconst_1
891: goto          895
894: iconst_0
895: invokestatic  #46
898: new           #39
901: dup
902: invokespecial #40
905: ldc           #41
907: invokevirtual #42
910: iload         23
912: invokevirtual #43
915: ldc           #44
917: invokevirtual #42
920: iconst_0
921: invokevirtual #43
924: ldc           #41
926: invokevirtual #42
929: invokevirtual #45
932: iload         23
934: ifne          941
937: iconst_1
938: goto          942
941: iconst_0
942: invokestatic  #46
945: new           #39
948: dup
949: invokespecial #40
952: ldc           #41
954: invokevirtual #42
957: iload         24
959: invokevirtual #43
962: ldc           #44
964: invokevirtual #42
967: iconst_0
968: invokevirtual #43
971: ldc           #41
973: invokevirtual #42
976: invokevirtual #45
979: iload         24
981: ifne          988
984: iconst_1
985: goto          989
988: iconst_0
989: invokestatic  #46
992: aload         26
994: invokestatic  #47
997: aload         26
999: invokestatic  #48
1002: ldc           #49
1004: invokestatic  #50
1007: aload         29
1009: invokestatic  #47
1012: aload         29
1014: invokestatic  #48
1017: ldc           #49
1019: invokestatic  #50
1022: aload         30
1024: invokestatic  #47
1027: aload         30
1029: invokestatic  #48
1032: ldc           #49
1034: invokestatic  #50
1037: aload         33
1039: invokestatic  #76
1042: aload         34
1044: invokestatic  #76
1047: aload         35
1049: invokestatic  #47
1052: aload         35
1054: invokestatic  #48
1057: ldc           #49
1059: invokestatic  #50
1062: aload         36
1064: invokestatic  #47
1067: aload         36
1069: invokestatic  #48
1072: ldc           #49
1074: invokestatic  #50
1077: return
Exception table:
from    to  target type
505   519   522   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 1443
End line: 1511
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        double[] doubleArray8 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray9 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair11 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray8, doubleArray9, true);
        double[] doubleArray12 = vectorialPointValuePair11.getValue();
        double[] doubleArray13 = vectorialPointValuePair11.getValue();
        double[] doubleArray14 = vectorialPointValuePair11.getPoint();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter27 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter40 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        gaussianFitter40.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction42 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer48 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker51 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer48.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker51);
        int int53 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int55 = levenbergMarquardtOptimizer48.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter56 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer48);
        double[] doubleArray63 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray64 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray64, true);
        double[] doubleArray67 = gaussianFitter56.fit(doubleArray63);
        double[] doubleArray68 = gaussianFitter40.fit(parametricUnivariateRealFunction42, doubleArray67);
        double[] doubleArray69 = gaussianFitter27.fit(doubleArray67);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair71 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray14, doubleArray67, false);
        double[] doubleArray72 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair74 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray67, doubleArray72, false);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray75 = parametric0.gradient((-0.9950124791926823d), doubleArray67);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #144
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: bipush        6
34: newarray       double
36: dup
37: iconst_0
38: ldc2_w        #27
41: dastore
42: dup
43: iconst_1
44: ldc2_w        #9
47: dastore
48: dup
49: iconst_2
50: ldc2_w        #13
53: dastore
54: dup
55: iconst_3
56: ldc2_w        #29
59: dastore
60: dup
61: iconst_4
62: ldc2_w        #17
65: dastore
66: dup
67: iconst_5
68: ldc2_w        #31
71: dastore
72: astore_2
73: aconst_null
74: astore_3
75: new           #33
78: dup
79: aload_2
80: aload_3
81: iconst_1
82: invokespecial #34
85: astore        4
87: aload         4
89: invokevirtual #74
92: astore        5
94: aload         4
96: invokevirtual #74
99: astore        6
101: aload         4
103: invokevirtual #75
106: astore        7
108: new           #8
111: dup
112: ldc2_w        #9
115: ldc2_w        #11
118: ldc2_w        #13
121: dconst_1
122: ldc2_w        #13
125: invokespecial #15
128: astore        8
130: new           #16
133: dup
134: ldc2_w        #17
137: ldc2_w        #19
140: invokespecial #21
143: astore        9
145: aload         8
147: aload         9
149: invokevirtual #22
152: aload         8
154: invokevirtual #23
157: istore        10
159: aload         8
161: invokevirtual #23
164: istore        11
166: new           #24
169: dup
170: aload         8
172: invokespecial #25
175: astore        12
177: new           #8
180: dup
181: ldc2_w        #9
184: ldc2_w        #11
187: ldc2_w        #13
190: dconst_1
191: ldc2_w        #13
194: invokespecial #15
197: astore        13
199: new           #16
202: dup
203: ldc2_w        #17
206: ldc2_w        #19
209: invokespecial #21
212: astore        14
214: aload         13
216: aload         14
218: invokevirtual #22
221: aload         13
223: invokevirtual #23
226: istore        15
228: aload         13
230: invokevirtual #23
233: istore        16
235: new           #24
238: dup
239: aload         13
241: invokespecial #25
244: astore        17
246: aload         17
248: invokevirtual #52
251: aconst_null
252: astore        18
254: new           #8
257: dup
258: ldc2_w        #9
261: ldc2_w        #11
264: ldc2_w        #13
267: dconst_1
268: ldc2_w        #13
271: invokespecial #15
274: astore        19
276: new           #16
279: dup
280: ldc2_w        #17
283: ldc2_w        #19
286: invokespecial #21
289: astore        20
291: aload         19
293: aload         20
295: invokevirtual #22
298: aload         19
300: invokevirtual #23
303: istore        21
305: aload         19
307: invokevirtual #23
310: istore        22
312: aload         19
314: invokevirtual #53
317: istore        23
319: new           #24
322: dup
323: aload         19
325: invokespecial #25
328: astore        24
330: bipush        6
332: newarray       double
334: dup
335: iconst_0
336: ldc2_w        #27
339: dastore
340: dup
341: iconst_1
342: ldc2_w        #9
345: dastore
346: dup
347: iconst_2
348: ldc2_w        #13
351: dastore
352: dup
353: iconst_3
354: ldc2_w        #29
357: dastore
358: dup
359: iconst_4
360: ldc2_w        #17
363: dastore
364: dup
365: iconst_5
366: ldc2_w        #31
369: dastore
370: astore        25
372: aconst_null
373: astore        26
375: new           #33
378: dup
379: aload         25
381: aload         26
383: iconst_1
384: invokespecial #34
387: astore        27
389: aload         24
391: aload         25
393: invokevirtual #54
396: astore        28
398: aload         17
400: aload         18
402: aload         28
404: invokevirtual #55
407: astore        29
409: aload         12
411: aload         28
413: invokevirtual #54
416: astore        30
418: new           #33
421: dup
422: aload         7
424: aload         28
426: iconst_0
427: invokespecial #34
430: astore        31
432: aconst_null
433: astore        32
435: new           #33
438: dup
439: aload         28
441: aload         32
443: iconst_0
444: invokespecial #34
447: astore        33
449: aload_1
450: ldc2_w        #145
453: aload         28
455: invokevirtual #119
458: astore        34
460: ldc           #124
462: invokestatic  #37
465: goto          470
468: astore        34
470: aload_2
471: invokestatic  #47
474: aload_2
475: invokestatic  #48
478: ldc           #49
480: invokestatic  #50
483: aload         5
485: invokestatic  #76
488: aload         6
490: invokestatic  #76
493: aload         7
495: invokestatic  #47
498: aload         7
500: invokestatic  #48
503: ldc           #49
505: invokestatic  #50
508: new           #39
511: dup
512: invokespecial #40
515: ldc           #41
517: invokevirtual #42
520: iload         10
522: invokevirtual #43
525: ldc           #44
527: invokevirtual #42
530: iconst_0
531: invokevirtual #43
534: ldc           #41
536: invokevirtual #42
539: invokevirtual #45
542: iload         10
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #46
555: new           #39
558: dup
559: invokespecial #40
562: ldc           #41
564: invokevirtual #42
567: iload         11
569: invokevirtual #43
572: ldc           #44
574: invokevirtual #42
577: iconst_0
578: invokevirtual #43
581: ldc           #41
583: invokevirtual #42
586: invokevirtual #45
589: iload         11
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #46
602: new           #39
605: dup
606: invokespecial #40
609: ldc           #41
611: invokevirtual #42
614: iload         15
616: invokevirtual #43
619: ldc           #44
621: invokevirtual #42
624: iconst_0
625: invokevirtual #43
628: ldc           #41
630: invokevirtual #42
633: invokevirtual #45
636: iload         15
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #46
649: new           #39
652: dup
653: invokespecial #40
656: ldc           #41
658: invokevirtual #42
661: iload         16
663: invokevirtual #43
666: ldc           #44
668: invokevirtual #42
671: iconst_0
672: invokevirtual #43
675: ldc           #41
677: invokevirtual #42
680: invokevirtual #45
683: iload         16
685: ifne          692
688: iconst_1
689: goto          693
692: iconst_0
693: invokestatic  #46
696: new           #39
699: dup
700: invokespecial #40
703: ldc           #41
705: invokevirtual #42
708: iload         21
710: invokevirtual #43
713: ldc           #44
715: invokevirtual #42
718: iconst_0
719: invokevirtual #43
722: ldc           #41
724: invokevirtual #42
727: invokevirtual #45
730: iload         21
732: ifne          739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #46
743: new           #39
746: dup
747: invokespecial #40
750: ldc           #41
752: invokevirtual #42
755: iload         22
757: invokevirtual #43
760: ldc           #44
762: invokevirtual #42
765: iconst_0
766: invokevirtual #43
769: ldc           #41
771: invokevirtual #42
774: invokevirtual #45
777: iload         22
779: ifne          786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #46
790: new           #39
793: dup
794: invokespecial #40
797: ldc           #41
799: invokevirtual #42
802: iload         23
804: invokevirtual #43
807: ldc           #44
809: invokevirtual #42
812: iconst_0
813: invokevirtual #43
816: ldc           #41
818: invokevirtual #42
821: invokevirtual #45
824: iload         23
826: ifne          833
829: iconst_1
830: goto          834
833: iconst_0
834: invokestatic  #46
837: aload         25
839: invokestatic  #47
842: aload         25
844: invokestatic  #48
847: ldc           #49
849: invokestatic  #50
852: aload         28
854: invokestatic  #47
857: aload         28
859: invokestatic  #48
862: ldc           #49
864: invokestatic  #50
867: aload         29
869: invokestatic  #47
872: aload         29
874: invokestatic  #48
877: ldc           #49
879: invokestatic  #50
882: aload         30
884: invokestatic  #47
887: aload         30
889: invokestatic  #48
892: ldc           #49
894: invokestatic  #50
897: return
Exception table:
from    to  target type
449   465   468   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 1514
End line: 1534
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray14 = gaussianFitter13.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: aload         6
93: invokevirtual #63
96: astore        7
98: ldc           #64
100: invokestatic  #37
103: goto          108
106: astore        7
108: new           #39
111: dup
112: invokespecial #40
115: ldc           #41
117: invokevirtual #42
120: iload_3
121: invokevirtual #43
124: ldc           #44
126: invokevirtual #42
129: iconst_0
130: invokevirtual #43
133: ldc           #41
135: invokevirtual #42
138: invokevirtual #45
141: iload_3
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #46
153: new           #39
156: dup
157: invokespecial #40
160: ldc           #41
162: invokevirtual #42
165: iload         4
167: invokevirtual #43
170: ldc           #44
172: invokevirtual #42
175: iconst_0
176: invokevirtual #43
179: ldc           #41
181: invokevirtual #42
184: invokevirtual #45
187: iload         4
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #46
200: new           #39
203: dup
204: invokespecial #40
207: ldc           #41
209: invokevirtual #42
212: iload         5
214: invokevirtual #43
217: ldc           #44
219: invokevirtual #42
222: iconst_0
223: invokevirtual #43
226: ldc           #41
228: invokevirtual #42
231: invokevirtual #45
234: iload         5
236: ifne          243
239: iconst_1
240: goto          244
243: iconst_0
244: invokestatic  #46
247: return
Exception table:
from    to  target type
91   103   106   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 1537
End line: 1565
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = gaussianFitter13.fit(doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray25 = gaussianFitter13.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #148
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: bipush        6
93: newarray       double
95: dup
96: iconst_0
97: ldc2_w        #27
100: dastore
101: dup
102: iconst_1
103: ldc2_w        #9
106: dastore
107: dup
108: iconst_2
109: ldc2_w        #13
112: dastore
113: dup
114: iconst_3
115: ldc2_w        #29
118: dastore
119: dup
120: iconst_4
121: ldc2_w        #17
124: dastore
125: dup
126: iconst_5
127: ldc2_w        #31
130: dastore
131: astore        7
133: aconst_null
134: astore        8
136: new           #33
139: dup
140: aload         7
142: aload         8
144: iconst_1
145: invokespecial #34
148: astore        9
150: aload         6
152: aload         7
154: invokevirtual #54
157: astore        10
159: aload         6
161: invokevirtual #63
164: astore        11
166: ldc           #64
168: invokestatic  #37
171: goto          176
174: astore        11
176: new           #39
179: dup
180: invokespecial #40
183: ldc           #41
185: invokevirtual #42
188: iload_3
189: invokevirtual #43
192: ldc           #44
194: invokevirtual #42
197: iconst_0
198: invokevirtual #43
201: ldc           #41
203: invokevirtual #42
206: invokevirtual #45
209: iload_3
210: ifne          217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #46
221: new           #39
224: dup
225: invokespecial #40
228: ldc           #41
230: invokevirtual #42
233: iload         4
235: invokevirtual #43
238: ldc           #44
240: invokevirtual #42
243: iconst_0
244: invokevirtual #43
247: ldc           #41
249: invokevirtual #42
252: invokevirtual #45
255: iload         4
257: ifne          264
260: iconst_1
261: goto          265
264: iconst_0
265: invokestatic  #46
268: new           #39
271: dup
272: invokespecial #40
275: ldc           #41
277: invokevirtual #42
280: iload         5
282: invokevirtual #43
285: ldc           #44
287: invokevirtual #42
290: iconst_0
291: invokevirtual #43
294: ldc           #41
296: invokevirtual #42
299: invokevirtual #45
302: iload         5
304: ifne          311
307: iconst_1
308: goto          312
311: iconst_0
312: invokestatic  #46
315: aload         7
317: invokestatic  #47
320: aload         7
322: invokestatic  #48
325: ldc           #49
327: invokestatic  #50
330: aload         10
332: invokestatic  #47
335: aload         10
337: invokestatic  #48
340: ldc           #49
342: invokestatic  #50
345: return
Exception table:
from    to  target type
159   171   174   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 1568
End line: 1636
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker15 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double16 = simpleVectorialValueChecker15.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker15);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker27 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer24.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        int int29 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int30 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int31 = levenbergMarquardtOptimizer24.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter32 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer24);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction33 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker42 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer39.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker42);
        int int44 = levenbergMarquardtOptimizer39.getMaxEvaluations();
        int int45 = levenbergMarquardtOptimizer39.getMaxEvaluations();
        int int46 = levenbergMarquardtOptimizer39.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter47 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer39);
        double[] doubleArray54 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray55 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray55, true);
        double[] doubleArray58 = gaussianFitter47.fit(doubleArray54);
        double[] doubleArray59 = curveFitter32.fit(parametricUnivariateRealFunction33, doubleArray54);
        double[] doubleArray60 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray60);
        double[] doubleArray62 = vectorialPointValuePair61.getPointRef();
        double[] doubleArray63 = null;
        double[] doubleArray64 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray64, false);
        double[] doubleArray67 = vectorialPointValuePair66.getValue();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = simpleVectorialValueChecker15.converged((int) (byte) 100, vectorialPointValuePair61, vectorialPointValuePair66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.1102230246251565E-14d + "'", double16 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray67);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #149
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: new           #67
90: dup
91: aload_1
92: invokespecial #68
95: astore        8
97: new           #16
100: dup
101: invokespecial #150
104: astore        9
106: aload         9
108: invokevirtual #88
111: dstore        10
113: aload_1
114: aload         9
116: invokevirtual #22
119: new           #8
122: dup
123: ldc2_w        #9
126: ldc2_w        #11
129: ldc2_w        #13
132: dconst_1
133: ldc2_w        #13
136: invokespecial #15
139: astore        12
141: new           #16
144: dup
145: ldc2_w        #17
148: ldc2_w        #19
151: invokespecial #21
154: astore        13
156: aload         12
158: aload         13
160: invokevirtual #22
163: aload         12
165: invokevirtual #23
168: istore        14
170: aload         12
172: invokevirtual #23
175: istore        15
177: aload         12
179: invokevirtual #53
182: istore        16
184: new           #67
187: dup
188: aload         12
190: invokespecial #68
193: astore        17
195: aconst_null
196: astore        18
198: new           #8
201: dup
202: ldc2_w        #9
205: ldc2_w        #11
208: ldc2_w        #13
211: dconst_1
212: ldc2_w        #13
215: invokespecial #15
218: astore        19
220: new           #16
223: dup
224: ldc2_w        #17
227: ldc2_w        #19
230: invokespecial #21
233: astore        20
235: aload         19
237: aload         20
239: invokevirtual #22
242: aload         19
244: invokevirtual #23
247: istore        21
249: aload         19
251: invokevirtual #23
254: istore        22
256: aload         19
258: invokevirtual #53
261: istore        23
263: new           #24
266: dup
267: aload         19
269: invokespecial #25
272: astore        24
274: bipush        6
276: newarray       double
278: dup
279: iconst_0
280: ldc2_w        #27
283: dastore
284: dup
285: iconst_1
286: ldc2_w        #9
289: dastore
290: dup
291: iconst_2
292: ldc2_w        #13
295: dastore
296: dup
297: iconst_3
298: ldc2_w        #29
301: dastore
302: dup
303: iconst_4
304: ldc2_w        #17
307: dastore
308: dup
309: iconst_5
310: ldc2_w        #31
313: dastore
314: astore        25
316: aconst_null
317: astore        26
319: new           #33
322: dup
323: aload         25
325: aload         26
327: iconst_1
328: invokespecial #34
331: astore        27
333: aload         24
335: aload         25
337: invokevirtual #54
340: astore        28
342: aload         17
344: aload         18
346: aload         25
348: invokevirtual #89
351: astore        29
353: aconst_null
354: astore        30
356: new           #33
359: dup
360: aload         25
362: aload         30
364: invokespecial #109
367: astore        31
369: aload         31
371: invokevirtual #151
374: astore        32
376: aconst_null
377: astore        33
379: aconst_null
380: astore        34
382: new           #33
385: dup
386: aload         33
388: aload         34
390: iconst_0
391: invokespecial #34
394: astore        35
396: aload         35
398: invokevirtual #74
401: astore        36
403: aload         9
405: bipush        100
407: aload         31
409: aload         35
411: invokevirtual #90
414: istore        37
416: ldc           #36
418: invokestatic  #37
421: goto          426
424: astore        37
426: new           #39
429: dup
430: invokespecial #40
433: ldc           #41
435: invokevirtual #42
438: iload_3
439: invokevirtual #43
442: ldc           #44
444: invokevirtual #42
447: iconst_0
448: invokevirtual #43
451: ldc           #41
453: invokevirtual #42
456: invokevirtual #45
459: iload_3
460: ifne          467
463: iconst_1
464: goto          468
467: iconst_0
468: invokestatic  #46
471: new           #39
474: dup
475: invokespecial #40
478: ldc           #41
480: invokevirtual #42
483: iload         4
485: invokevirtual #43
488: ldc           #44
490: invokevirtual #42
493: iconst_0
494: invokevirtual #43
497: ldc           #41
499: invokevirtual #42
502: invokevirtual #45
505: iload         4
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #46
518: new           #39
521: dup
522: invokespecial #40
525: ldc           #41
527: invokevirtual #42
530: dload         5
532: invokevirtual #59
535: ldc           #44
537: invokevirtual #42
540: dconst_0
541: invokevirtual #59
544: ldc           #41
546: invokevirtual #42
549: invokevirtual #45
552: dload         5
554: dconst_0
555: dcmpl
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #46
567: new           #39
570: dup
571: invokespecial #40
574: ldc           #41
576: invokevirtual #42
579: iload         7
581: invokevirtual #43
584: ldc           #44
586: invokevirtual #42
589: iconst_0
590: invokevirtual #43
593: ldc           #41
595: invokevirtual #42
598: invokevirtual #45
601: iload         7
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #46
614: new           #39
617: dup
618: invokespecial #40
621: ldc           #41
623: invokevirtual #42
626: dload         10
628: invokevirtual #59
631: ldc           #44
633: invokevirtual #42
636: ldc2_w        #152
639: invokevirtual #59
642: ldc           #41
644: invokevirtual #42
647: invokevirtual #45
650: dload         10
652: ldc2_w        #152
655: dcmpl
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #46
667: new           #39
670: dup
671: invokespecial #40
674: ldc           #41
676: invokevirtual #42
679: iload         14
681: invokevirtual #43
684: ldc           #44
686: invokevirtual #42
689: iconst_0
690: invokevirtual #43
693: ldc           #41
695: invokevirtual #42
698: invokevirtual #45
701: iload         14
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #46
714: new           #39
717: dup
718: invokespecial #40
721: ldc           #41
723: invokevirtual #42
726: iload         15
728: invokevirtual #43
731: ldc           #44
733: invokevirtual #42
736: iconst_0
737: invokevirtual #43
740: ldc           #41
742: invokevirtual #42
745: invokevirtual #45
748: iload         15
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #46
761: new           #39
764: dup
765: invokespecial #40
768: ldc           #41
770: invokevirtual #42
773: iload         16
775: invokevirtual #43
778: ldc           #44
780: invokevirtual #42
783: iconst_0
784: invokevirtual #43
787: ldc           #41
789: invokevirtual #42
792: invokevirtual #45
795: iload         16
797: ifne          804
800: iconst_1
801: goto          805
804: iconst_0
805: invokestatic  #46
808: new           #39
811: dup
812: invokespecial #40
815: ldc           #41
817: invokevirtual #42
820: iload         21
822: invokevirtual #43
825: ldc           #44
827: invokevirtual #42
830: iconst_0
831: invokevirtual #43
834: ldc           #41
836: invokevirtual #42
839: invokevirtual #45
842: iload         21
844: ifne          851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #46
855: new           #39
858: dup
859: invokespecial #40
862: ldc           #41
864: invokevirtual #42
867: iload         22
869: invokevirtual #43
872: ldc           #44
874: invokevirtual #42
877: iconst_0
878: invokevirtual #43
881: ldc           #41
883: invokevirtual #42
886: invokevirtual #45
889: iload         22
891: ifne          898
894: iconst_1
895: goto          899
898: iconst_0
899: invokestatic  #46
902: new           #39
905: dup
906: invokespecial #40
909: ldc           #41
911: invokevirtual #42
914: iload         23
916: invokevirtual #43
919: ldc           #44
921: invokevirtual #42
924: iconst_0
925: invokevirtual #43
928: ldc           #41
930: invokevirtual #42
933: invokevirtual #45
936: iload         23
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #46
949: aload         25
951: invokestatic  #47
954: aload         25
956: invokestatic  #48
959: ldc           #49
961: invokestatic  #50
964: aload         28
966: invokestatic  #47
969: aload         28
971: invokestatic  #48
974: ldc           #49
976: invokestatic  #50
979: aload         29
981: invokestatic  #47
984: aload         29
986: invokestatic  #48
989: ldc           #49
991: invokestatic  #50
994: aload         32
996: invokestatic  #47
999: aload         32
1001: invokestatic  #48
1004: ldc           #49
1006: invokestatic  #50
1009: aload         36
1011: invokestatic  #76
1014: return
Exception table:
from    to  target type
403   421   424   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1639
End line: 1710
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter13.addObservedPoint((double) 1.4E-45f, (-0.9923172082775625d), (-1.1752011936438014d));
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric18 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker27 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer24.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        int int29 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int30 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int31 = levenbergMarquardtOptimizer24.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter32 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer24);
        double[] doubleArray39 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray40 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray40, true);
        double[] doubleArray43 = gaussianFitter32.fit(doubleArray39);
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = vectorialPointValuePair53.getValue();
        double[] doubleArray55 = vectorialPointValuePair53.getValue();
        double[] doubleArray56 = vectorialPointValuePair53.getPoint();
        double[] doubleArray57 = gaussianFitter32.fit(doubleArray56);
        double[] doubleArray64 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray65 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair67 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray64, doubleArray65, true);
        double[] doubleArray68 = vectorialPointValuePair67.getValue();
        double[] doubleArray69 = vectorialPointValuePair67.getValue();
        double[] doubleArray70 = vectorialPointValuePair67.getPoint();
        double[] doubleArray71 = vectorialPointValuePair67.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray73 = gaussianFitter13.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric18, doubleArray56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #154
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: aload         6
93: ldc2_w        #92
96: ldc2_w        #94
99: ldc2_w        #96
102: invokevirtual #98
105: new           #117
108: dup
109: invokespecial #118
112: astore        7
114: new           #8
117: dup
118: ldc2_w        #9
121: ldc2_w        #11
124: ldc2_w        #13
127: dconst_1
128: ldc2_w        #13
131: invokespecial #15
134: astore        8
136: new           #16
139: dup
140: ldc2_w        #17
143: ldc2_w        #19
146: invokespecial #21
149: astore        9
151: aload         8
153: aload         9
155: invokevirtual #22
158: aload         8
160: invokevirtual #23
163: istore        10
165: aload         8
167: invokevirtual #23
170: istore        11
172: aload         8
174: invokevirtual #53
177: istore        12
179: new           #24
182: dup
183: aload         8
185: invokespecial #25
188: astore        13
190: bipush        6
192: newarray       double
194: dup
195: iconst_0
196: ldc2_w        #27
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #9
205: dastore
206: dup
207: iconst_2
208: ldc2_w        #13
211: dastore
212: dup
213: iconst_3
214: ldc2_w        #29
217: dastore
218: dup
219: iconst_4
220: ldc2_w        #17
223: dastore
224: dup
225: iconst_5
226: ldc2_w        #31
229: dastore
230: astore        14
232: aconst_null
233: astore        15
235: new           #33
238: dup
239: aload         14
241: aload         15
243: iconst_1
244: invokespecial #34
247: astore        16
249: aload         13
251: aload         14
253: invokevirtual #54
256: astore        17
258: bipush        6
260: newarray       double
262: dup
263: iconst_0
264: ldc2_w        #27
267: dastore
268: dup
269: iconst_1
270: ldc2_w        #9
273: dastore
274: dup
275: iconst_2
276: ldc2_w        #13
279: dastore
280: dup
281: iconst_3
282: ldc2_w        #29
285: dastore
286: dup
287: iconst_4
288: ldc2_w        #17
291: dastore
292: dup
293: iconst_5
294: ldc2_w        #31
297: dastore
298: astore        18
300: aconst_null
301: astore        19
303: new           #33
306: dup
307: aload         18
309: aload         19
311: iconst_1
312: invokespecial #34
315: astore        20
317: aload         20
319: invokevirtual #74
322: astore        21
324: aload         20
326: invokevirtual #74
329: astore        22
331: aload         20
333: invokevirtual #75
336: astore        23
338: aload         13
340: aload         23
342: invokevirtual #54
345: astore        24
347: bipush        6
349: newarray       double
351: dup
352: iconst_0
353: ldc2_w        #27
356: dastore
357: dup
358: iconst_1
359: ldc2_w        #9
362: dastore
363: dup
364: iconst_2
365: ldc2_w        #13
368: dastore
369: dup
370: iconst_3
371: ldc2_w        #29
374: dastore
375: dup
376: iconst_4
377: ldc2_w        #17
380: dastore
381: dup
382: iconst_5
383: ldc2_w        #31
386: dastore
387: astore        25
389: aconst_null
390: astore        26
392: new           #33
395: dup
396: aload         25
398: aload         26
400: iconst_1
401: invokespecial #34
404: astore        27
406: aload         27
408: invokevirtual #74
411: astore        28
413: aload         27
415: invokevirtual #74
418: astore        29
420: aload         27
422: invokevirtual #75
425: astore        30
427: aload         27
429: invokevirtual #151
432: astore        31
434: new           #33
437: dup
438: aload         23
440: aload         31
442: invokespecial #109
445: astore        32
447: aload         6
449: aload         7
451: aload         23
453: invokevirtual #55
456: astore        33
458: ldc           #124
460: invokestatic  #37
463: goto          468
466: astore        33
468: new           #39
471: dup
472: invokespecial #40
475: ldc           #41
477: invokevirtual #42
480: iload_3
481: invokevirtual #43
484: ldc           #44
486: invokevirtual #42
489: iconst_0
490: invokevirtual #43
493: ldc           #41
495: invokevirtual #42
498: invokevirtual #45
501: iload_3
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #46
513: new           #39
516: dup
517: invokespecial #40
520: ldc           #41
522: invokevirtual #42
525: iload         4
527: invokevirtual #43
530: ldc           #44
532: invokevirtual #42
535: iconst_0
536: invokevirtual #43
539: ldc           #41
541: invokevirtual #42
544: invokevirtual #45
547: iload         4
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #46
560: new           #39
563: dup
564: invokespecial #40
567: ldc           #41
569: invokevirtual #42
572: iload         5
574: invokevirtual #43
577: ldc           #44
579: invokevirtual #42
582: iconst_0
583: invokevirtual #43
586: ldc           #41
588: invokevirtual #42
591: invokevirtual #45
594: iload         5
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #46
607: new           #39
610: dup
611: invokespecial #40
614: ldc           #41
616: invokevirtual #42
619: iload         10
621: invokevirtual #43
624: ldc           #44
626: invokevirtual #42
629: iconst_0
630: invokevirtual #43
633: ldc           #41
635: invokevirtual #42
638: invokevirtual #45
641: iload         10
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #46
654: new           #39
657: dup
658: invokespecial #40
661: ldc           #41
663: invokevirtual #42
666: iload         11
668: invokevirtual #43
671: ldc           #44
673: invokevirtual #42
676: iconst_0
677: invokevirtual #43
680: ldc           #41
682: invokevirtual #42
685: invokevirtual #45
688: iload         11
690: ifne          697
693: iconst_1
694: goto          698
697: iconst_0
698: invokestatic  #46
701: new           #39
704: dup
705: invokespecial #40
708: ldc           #41
710: invokevirtual #42
713: iload         12
715: invokevirtual #43
718: ldc           #44
720: invokevirtual #42
723: iconst_0
724: invokevirtual #43
727: ldc           #41
729: invokevirtual #42
732: invokevirtual #45
735: iload         12
737: ifne          744
740: iconst_1
741: goto          745
744: iconst_0
745: invokestatic  #46
748: aload         14
750: invokestatic  #47
753: aload         14
755: invokestatic  #48
758: ldc           #49
760: invokestatic  #50
763: aload         17
765: invokestatic  #47
768: aload         17
770: invokestatic  #48
773: ldc           #49
775: invokestatic  #50
778: aload         18
780: invokestatic  #47
783: aload         18
785: invokestatic  #48
788: ldc           #49
790: invokestatic  #50
793: aload         21
795: invokestatic  #76
798: aload         22
800: invokestatic  #76
803: aload         23
805: invokestatic  #47
808: aload         23
810: invokestatic  #48
813: ldc           #49
815: invokestatic  #50
818: aload         24
820: invokestatic  #47
823: aload         24
825: invokestatic  #48
828: ldc           #49
830: invokestatic  #50
833: aload         25
835: invokestatic  #47
838: aload         25
840: invokestatic  #48
843: ldc           #49
845: invokestatic  #50
848: aload         28
850: invokestatic  #76
853: aload         29
855: invokestatic  #76
858: aload         30
860: invokestatic  #47
863: aload         30
865: invokestatic  #48
868: ldc           #49
870: invokestatic  #50
873: aload         31
875: invokestatic  #47
878: aload         31
880: invokestatic  #48
883: ldc           #49
885: invokestatic  #50
888: return
Exception table:
from    to  target type
447   463   466   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1713
End line: 1728
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter14.addObservedPoint((double) 3, 100.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #155
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: new           #24
94: dup
95: aload_1
96: invokespecial #25
99: astore        7
101: aload         7
103: ldc2_w        #156
106: ldc2_w        #13
109: invokevirtual #158
112: new           #39
115: dup
116: invokespecial #40
119: ldc           #41
121: invokevirtual #42
124: iload_3
125: invokevirtual #43
128: ldc           #44
130: invokevirtual #42
133: iconst_0
134: invokevirtual #43
137: ldc           #41
139: invokevirtual #42
142: invokevirtual #45
145: iload_3
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #46
157: new           #39
160: dup
161: invokespecial #40
164: ldc           #41
166: invokevirtual #42
169: iload         4
171: invokevirtual #43
174: ldc           #44
176: invokevirtual #42
179: iconst_0
180: invokevirtual #43
183: ldc           #41
185: invokevirtual #42
188: invokevirtual #45
191: iload         4
193: ifne          200
196: iconst_1
197: goto          201
200: iconst_0
201: invokestatic  #46
204: new           #39
207: dup
208: invokespecial #40
211: ldc           #41
213: invokevirtual #42
216: iload         5
218: invokevirtual #43
221: ldc           #44
223: invokevirtual #42
226: iconst_0
227: invokevirtual #43
230: ldc           #41
232: invokevirtual #42
235: invokevirtual #45
238: iload         5
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #46
251: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1731
End line: 1755
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray16 = levenbergMarquardtOptimizer5.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than, or equal to, the minimum (0): no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #160
85: istore        7
87: aload_1
88: invokevirtual #58
91: dstore        8
93: new           #24
96: dup
97: aload_1
98: invokespecial #25
101: astore        10
103: aload_1
104: invokevirtual #69
107: astore        11
109: ldc           #70
111: invokestatic  #37
114: goto          119
117: astore        11
119: new           #39
122: dup
123: invokespecial #40
126: ldc           #41
128: invokevirtual #42
131: iload_3
132: invokevirtual #43
135: ldc           #44
137: invokevirtual #42
140: iconst_0
141: invokevirtual #43
144: ldc           #41
146: invokevirtual #42
149: invokevirtual #45
152: iload_3
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #46
164: new           #39
167: dup
168: invokespecial #40
171: ldc           #41
173: invokevirtual #42
176: iload         4
178: invokevirtual #43
181: ldc           #44
183: invokevirtual #42
186: iconst_0
187: invokevirtual #43
190: ldc           #41
192: invokevirtual #42
195: invokevirtual #45
198: iload         4
200: ifne          207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #46
211: new           #39
214: dup
215: invokespecial #40
218: ldc           #41
220: invokevirtual #42
223: dload         5
225: invokevirtual #59
228: ldc           #44
230: invokevirtual #42
233: dconst_0
234: invokevirtual #59
237: ldc           #41
239: invokevirtual #42
242: invokevirtual #45
245: dload         5
247: dconst_0
248: dcmpl
249: ifne          256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #46
260: new           #39
263: dup
264: invokespecial #40
267: ldc           #41
269: invokevirtual #42
272: iload         7
274: invokevirtual #43
277: ldc           #44
279: invokevirtual #42
282: iconst_0
283: invokevirtual #43
286: ldc           #41
288: invokevirtual #42
291: invokevirtual #45
294: iload         7
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #46
307: new           #39
310: dup
311: invokespecial #40
314: ldc           #41
316: invokevirtual #42
319: dload         8
321: invokevirtual #59
324: ldc           #44
326: invokevirtual #42
329: dconst_0
330: invokevirtual #59
333: ldc           #41
335: invokevirtual #42
338: invokevirtual #45
341: dload         8
343: dconst_0
344: dcmpl
345: ifne          352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #46
356: return
Exception table:
from    to  target type
103   114   117   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1758
End line: 1819
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        double double27 = levenbergMarquardtOptimizer20.getChiSquare();
        int int28 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter29 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric30 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer36 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker39 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer36.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker39);
        int int41 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer36.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter44 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer36);
        double[] doubleArray51 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray52 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray52, true);
        double[] doubleArray55 = gaussianFitter44.fit(doubleArray51);
        double[] doubleArray56 = curveFitter29.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray55);
        double[] doubleArray63 = new double[] { 3.1415926535897936d, (-0.9923172082775625d), 0.207879576290261d, 0.49321676688550387d, 4.248699152289463d, 3.4741259760439713d };
        double[] doubleArray64 = gaussianFitter12.fit(97, (org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray63);
        double[] doubleArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray67 = parametric30.gradient(3.141592653589793d, doubleArray66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #161
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: new           #8
95: dup
96: ldc2_w        #9
99: ldc2_w        #11
102: ldc2_w        #13
105: dconst_1
106: ldc2_w        #13
109: invokespecial #15
112: astore        7
114: new           #16
117: dup
118: ldc2_w        #17
121: ldc2_w        #19
124: invokespecial #21
127: astore        8
129: aload         7
131: aload         8
133: invokevirtual #22
136: aload         7
138: invokevirtual #23
141: istore        9
143: aload         7
145: invokevirtual #23
148: istore        10
150: aload         7
152: invokevirtual #58
155: dstore        11
157: aload         7
159: invokevirtual #23
162: istore        13
164: new           #67
167: dup
168: aload         7
170: invokespecial #68
173: astore        14
175: new           #117
178: dup
179: invokespecial #118
182: astore        15
184: new           #8
187: dup
188: ldc2_w        #9
191: ldc2_w        #11
194: ldc2_w        #13
197: dconst_1
198: ldc2_w        #13
201: invokespecial #15
204: astore        16
206: new           #16
209: dup
210: ldc2_w        #17
213: ldc2_w        #19
216: invokespecial #21
219: astore        17
221: aload         16
223: aload         17
225: invokevirtual #22
228: aload         16
230: invokevirtual #23
233: istore        18
235: aload         16
237: invokevirtual #23
240: istore        19
242: aload         16
244: invokevirtual #53
247: istore        20
249: new           #24
252: dup
253: aload         16
255: invokespecial #25
258: astore        21
260: bipush        6
262: newarray       double
264: dup
265: iconst_0
266: ldc2_w        #27
269: dastore
270: dup
271: iconst_1
272: ldc2_w        #9
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #13
281: dastore
282: dup
283: iconst_3
284: ldc2_w        #29
287: dastore
288: dup
289: iconst_4
290: ldc2_w        #17
293: dastore
294: dup
295: iconst_5
296: ldc2_w        #31
299: dastore
300: astore        22
302: aconst_null
303: astore        23
305: new           #33
308: dup
309: aload         22
311: aload         23
313: iconst_1
314: invokespecial #34
317: astore        24
319: aload         21
321: aload         22
323: invokevirtual #54
326: astore        25
328: aload         14
330: aload         15
332: aload         25
334: invokevirtual #89
337: astore        26
339: bipush        6
341: newarray       double
343: dup
344: iconst_0
345: ldc2_w        #162
348: dastore
349: dup
350: iconst_1
351: ldc2_w        #94
354: dastore
355: dup
356: iconst_2
357: ldc2_w        #164
360: dastore
361: dup
362: iconst_3
363: ldc2_w        #166
366: dastore
367: dup
368: iconst_4
369: ldc2_w        #136
372: dastore
373: dup
374: iconst_5
375: ldc2_w        #168
378: dastore
379: astore        27
381: aload         5
383: bipush        97
385: aload         15
387: aload         27
389: invokevirtual #35
392: astore        28
394: aconst_null
395: astore        29
397: aload         15
399: ldc2_w        #170
402: aload         29
404: invokevirtual #119
407: astore        30
409: ldc           #120
411: invokestatic  #37
414: goto          419
417: astore        30
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: iload_3
432: invokevirtual #43
435: ldc           #44
437: invokevirtual #42
440: iconst_0
441: invokevirtual #43
444: ldc           #41
446: invokevirtual #42
449: invokevirtual #45
452: iload_3
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #46
464: new           #39
467: dup
468: invokespecial #40
471: ldc           #41
473: invokevirtual #42
476: iload         4
478: invokevirtual #43
481: ldc           #44
483: invokevirtual #42
486: iconst_0
487: invokevirtual #43
490: ldc           #41
492: invokevirtual #42
495: invokevirtual #45
498: iload         4
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #46
511: aload         6
513: invokestatic  #47
516: new           #39
519: dup
520: invokespecial #40
523: ldc           #41
525: invokevirtual #42
528: iload         9
530: invokevirtual #43
533: ldc           #44
535: invokevirtual #42
538: iconst_0
539: invokevirtual #43
542: ldc           #41
544: invokevirtual #42
547: invokevirtual #45
550: iload         9
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #46
563: new           #39
566: dup
567: invokespecial #40
570: ldc           #41
572: invokevirtual #42
575: iload         10
577: invokevirtual #43
580: ldc           #44
582: invokevirtual #42
585: iconst_0
586: invokevirtual #43
589: ldc           #41
591: invokevirtual #42
594: invokevirtual #45
597: iload         10
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #46
610: new           #39
613: dup
614: invokespecial #40
617: ldc           #41
619: invokevirtual #42
622: dload         11
624: invokevirtual #59
627: ldc           #44
629: invokevirtual #42
632: dconst_0
633: invokevirtual #59
636: ldc           #41
638: invokevirtual #42
641: invokevirtual #45
644: dload         11
646: dconst_0
647: dcmpl
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #46
659: new           #39
662: dup
663: invokespecial #40
666: ldc           #41
668: invokevirtual #42
671: iload         13
673: invokevirtual #43
676: ldc           #44
678: invokevirtual #42
681: iconst_0
682: invokevirtual #43
685: ldc           #41
687: invokevirtual #42
690: invokevirtual #45
693: iload         13
695: ifne          702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #46
706: new           #39
709: dup
710: invokespecial #40
713: ldc           #41
715: invokevirtual #42
718: iload         18
720: invokevirtual #43
723: ldc           #44
725: invokevirtual #42
728: iconst_0
729: invokevirtual #43
732: ldc           #41
734: invokevirtual #42
737: invokevirtual #45
740: iload         18
742: ifne          749
745: iconst_1
746: goto          750
749: iconst_0
750: invokestatic  #46
753: new           #39
756: dup
757: invokespecial #40
760: ldc           #41
762: invokevirtual #42
765: iload         19
767: invokevirtual #43
770: ldc           #44
772: invokevirtual #42
775: iconst_0
776: invokevirtual #43
779: ldc           #41
781: invokevirtual #42
784: invokevirtual #45
787: iload         19
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #46
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         20
814: invokevirtual #43
817: ldc           #44
819: invokevirtual #42
822: iconst_0
823: invokevirtual #43
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         20
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #46
847: aload         22
849: invokestatic  #47
852: aload         22
854: invokestatic  #48
857: ldc           #49
859: invokestatic  #50
862: aload         25
864: invokestatic  #47
867: aload         25
869: invokestatic  #48
872: ldc           #49
874: invokestatic  #50
877: aload         26
879: invokestatic  #47
882: aload         26
884: invokestatic  #48
887: ldc           #49
889: invokestatic  #50
892: aload         27
894: invokestatic  #47
897: aload         27
899: invokestatic  #48
902: ldc           #172
904: invokestatic  #50
907: aload         28
909: invokestatic  #47
912: aload         28
914: invokestatic  #48
917: ldc           #172
919: invokestatic  #50
922: return
Exception table:
from    to  target type
397   414   417   Class org/apache/commons/math/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1822
End line: 1898
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter14.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint16 = null;
        gaussianFitter14.addObservedPoint(weightedObservedPoint16);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker27 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer24.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        int int29 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int30 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        double double31 = levenbergMarquardtOptimizer24.getChiSquare();
        int int32 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter33 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer24);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric34 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer40 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker43 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer40.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker43);
        int int45 = levenbergMarquardtOptimizer40.getMaxEvaluations();
        int int46 = levenbergMarquardtOptimizer40.getMaxEvaluations();
        int int47 = levenbergMarquardtOptimizer40.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter48 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer40);
        double[] doubleArray55 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray56 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray55, doubleArray56, true);
        double[] doubleArray59 = gaussianFitter48.fit(doubleArray55);
        double[] doubleArray60 = curveFitter33.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric34, doubleArray59);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer66 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker69 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer66.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker69);
        int int71 = levenbergMarquardtOptimizer66.getMaxEvaluations();
        int int72 = levenbergMarquardtOptimizer66.getMaxEvaluations();
        int int73 = levenbergMarquardtOptimizer66.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter74 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer66);
        double[] doubleArray81 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray82 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray81, doubleArray82, true);
        double[] doubleArray85 = gaussianFitter74.fit(doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray86 = gaussianFitter14.fit(0, (org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric34, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #173
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: new           #24
94: dup
95: aload_1
96: invokespecial #25
99: astore        7
101: aload         7
103: invokevirtual #52
106: aconst_null
107: astore        8
109: aload         7
111: aload         8
113: invokevirtual #174
116: new           #8
119: dup
120: ldc2_w        #9
123: ldc2_w        #11
126: ldc2_w        #13
129: dconst_1
130: ldc2_w        #13
133: invokespecial #15
136: astore        9
138: new           #16
141: dup
142: ldc2_w        #17
145: ldc2_w        #19
148: invokespecial #21
151: astore        10
153: aload         9
155: aload         10
157: invokevirtual #22
160: aload         9
162: invokevirtual #23
165: istore        11
167: aload         9
169: invokevirtual #23
172: istore        12
174: aload         9
176: invokevirtual #58
179: dstore        13
181: aload         9
183: invokevirtual #23
186: istore        15
188: new           #67
191: dup
192: aload         9
194: invokespecial #68
197: astore        16
199: new           #117
202: dup
203: invokespecial #118
206: astore        17
208: new           #8
211: dup
212: ldc2_w        #9
215: ldc2_w        #11
218: ldc2_w        #13
221: dconst_1
222: ldc2_w        #13
225: invokespecial #15
228: astore        18
230: new           #16
233: dup
234: ldc2_w        #17
237: ldc2_w        #19
240: invokespecial #21
243: astore        19
245: aload         18
247: aload         19
249: invokevirtual #22
252: aload         18
254: invokevirtual #23
257: istore        20
259: aload         18
261: invokevirtual #23
264: istore        21
266: aload         18
268: invokevirtual #53
271: istore        22
273: new           #24
276: dup
277: aload         18
279: invokespecial #25
282: astore        23
284: bipush        6
286: newarray       double
288: dup
289: iconst_0
290: ldc2_w        #27
293: dastore
294: dup
295: iconst_1
296: ldc2_w        #9
299: dastore
300: dup
301: iconst_2
302: ldc2_w        #13
305: dastore
306: dup
307: iconst_3
308: ldc2_w        #29
311: dastore
312: dup
313: iconst_4
314: ldc2_w        #17
317: dastore
318: dup
319: iconst_5
320: ldc2_w        #31
323: dastore
324: astore        24
326: aconst_null
327: astore        25
329: new           #33
332: dup
333: aload         24
335: aload         25
337: iconst_1
338: invokespecial #34
341: astore        26
343: aload         23
345: aload         24
347: invokevirtual #54
350: astore        27
352: aload         16
354: aload         17
356: aload         27
358: invokevirtual #89
361: astore        28
363: new           #8
366: dup
367: ldc2_w        #9
370: ldc2_w        #11
373: ldc2_w        #13
376: dconst_1
377: ldc2_w        #13
380: invokespecial #15
383: astore        29
385: new           #16
388: dup
389: ldc2_w        #17
392: ldc2_w        #19
395: invokespecial #21
398: astore        30
400: aload         29
402: aload         30
404: invokevirtual #22
407: aload         29
409: invokevirtual #23
412: istore        31
414: aload         29
416: invokevirtual #23
419: istore        32
421: aload         29
423: invokevirtual #53
426: istore        33
428: new           #24
431: dup
432: aload         29
434: invokespecial #25
437: astore        34
439: bipush        6
441: newarray       double
443: dup
444: iconst_0
445: ldc2_w        #27
448: dastore
449: dup
450: iconst_1
451: ldc2_w        #9
454: dastore
455: dup
456: iconst_2
457: ldc2_w        #13
460: dastore
461: dup
462: iconst_3
463: ldc2_w        #29
466: dastore
467: dup
468: iconst_4
469: ldc2_w        #17
472: dastore
473: dup
474: iconst_5
475: ldc2_w        #31
478: dastore
479: astore        35
481: aconst_null
482: astore        36
484: new           #33
487: dup
488: aload         35
490: aload         36
492: iconst_1
493: invokespecial #34
496: astore        37
498: aload         34
500: aload         35
502: invokevirtual #54
505: astore        38
507: aload         7
509: iconst_0
510: aload         17
512: aload         35
514: invokevirtual #35
517: astore        39
519: ldc           #36
521: invokestatic  #37
524: goto          529
527: astore        39
529: new           #39
532: dup
533: invokespecial #40
536: ldc           #41
538: invokevirtual #42
541: iload_3
542: invokevirtual #43
545: ldc           #44
547: invokevirtual #42
550: iconst_0
551: invokevirtual #43
554: ldc           #41
556: invokevirtual #42
559: invokevirtual #45
562: iload_3
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #46
574: new           #39
577: dup
578: invokespecial #40
581: ldc           #41
583: invokevirtual #42
586: iload         4
588: invokevirtual #43
591: ldc           #44
593: invokevirtual #42
596: iconst_0
597: invokevirtual #43
600: ldc           #41
602: invokevirtual #42
605: invokevirtual #45
608: iload         4
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #46
621: new           #39
624: dup
625: invokespecial #40
628: ldc           #41
630: invokevirtual #42
633: iload         5
635: invokevirtual #43
638: ldc           #44
640: invokevirtual #42
643: iconst_0
644: invokevirtual #43
647: ldc           #41
649: invokevirtual #42
652: invokevirtual #45
655: iload         5
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #46
668: new           #39
671: dup
672: invokespecial #40
675: ldc           #41
677: invokevirtual #42
680: iload         11
682: invokevirtual #43
685: ldc           #44
687: invokevirtual #42
690: iconst_0
691: invokevirtual #43
694: ldc           #41
696: invokevirtual #42
699: invokevirtual #45
702: iload         11
704: ifne          711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #46
715: new           #39
718: dup
719: invokespecial #40
722: ldc           #41
724: invokevirtual #42
727: iload         12
729: invokevirtual #43
732: ldc           #44
734: invokevirtual #42
737: iconst_0
738: invokevirtual #43
741: ldc           #41
743: invokevirtual #42
746: invokevirtual #45
749: iload         12
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #46
762: new           #39
765: dup
766: invokespecial #40
769: ldc           #41
771: invokevirtual #42
774: dload         13
776: invokevirtual #59
779: ldc           #44
781: invokevirtual #42
784: dconst_0
785: invokevirtual #59
788: ldc           #41
790: invokevirtual #42
793: invokevirtual #45
796: dload         13
798: dconst_0
799: dcmpl
800: ifne          807
803: iconst_1
804: goto          808
807: iconst_0
808: invokestatic  #46
811: new           #39
814: dup
815: invokespecial #40
818: ldc           #41
820: invokevirtual #42
823: iload         15
825: invokevirtual #43
828: ldc           #44
830: invokevirtual #42
833: iconst_0
834: invokevirtual #43
837: ldc           #41
839: invokevirtual #42
842: invokevirtual #45
845: iload         15
847: ifne          854
850: iconst_1
851: goto          855
854: iconst_0
855: invokestatic  #46
858: new           #39
861: dup
862: invokespecial #40
865: ldc           #41
867: invokevirtual #42
870: iload         20
872: invokevirtual #43
875: ldc           #44
877: invokevirtual #42
880: iconst_0
881: invokevirtual #43
884: ldc           #41
886: invokevirtual #42
889: invokevirtual #45
892: iload         20
894: ifne          901
897: iconst_1
898: goto          902
901: iconst_0
902: invokestatic  #46
905: new           #39
908: dup
909: invokespecial #40
912: ldc           #41
914: invokevirtual #42
917: iload         21
919: invokevirtual #43
922: ldc           #44
924: invokevirtual #42
927: iconst_0
928: invokevirtual #43
931: ldc           #41
933: invokevirtual #42
936: invokevirtual #45
939: iload         21
941: ifne          948
944: iconst_1
945: goto          949
948: iconst_0
949: invokestatic  #46
952: new           #39
955: dup
956: invokespecial #40
959: ldc           #41
961: invokevirtual #42
964: iload         22
966: invokevirtual #43
969: ldc           #44
971: invokevirtual #42
974: iconst_0
975: invokevirtual #43
978: ldc           #41
980: invokevirtual #42
983: invokevirtual #45
986: iload         22
988: ifne          995
991: iconst_1
992: goto          996
995: iconst_0
996: invokestatic  #46
999: aload         24
1001: invokestatic  #47
1004: aload         24
1006: invokestatic  #48
1009: ldc           #49
1011: invokestatic  #50
1014: aload         27
1016: invokestatic  #47
1019: aload         27
1021: invokestatic  #48
1024: ldc           #49
1026: invokestatic  #50
1029: aload         28
1031: invokestatic  #47
1034: aload         28
1036: invokestatic  #48
1039: ldc           #49
1041: invokestatic  #50
1044: new           #39
1047: dup
1048: invokespecial #40
1051: ldc           #41
1053: invokevirtual #42
1056: iload         31
1058: invokevirtual #43
1061: ldc           #44
1063: invokevirtual #42
1066: iconst_0
1067: invokevirtual #43
1070: ldc           #41
1072: invokevirtual #42
1075: invokevirtual #45
1078: iload         31
1080: ifne          1087
1083: iconst_1
1084: goto          1088
1087: iconst_0
1088: invokestatic  #46
1091: new           #39
1094: dup
1095: invokespecial #40
1098: ldc           #41
1100: invokevirtual #42
1103: iload         32
1105: invokevirtual #43
1108: ldc           #44
1110: invokevirtual #42
1113: iconst_0
1114: invokevirtual #43
1117: ldc           #41
1119: invokevirtual #42
1122: invokevirtual #45
1125: iload         32
1127: ifne          1134
1130: iconst_1
1131: goto          1135
1134: iconst_0
1135: invokestatic  #46
1138: new           #39
1141: dup
1142: invokespecial #40
1145: ldc           #41
1147: invokevirtual #42
1150: iload         33
1152: invokevirtual #43
1155: ldc           #44
1157: invokevirtual #42
1160: iconst_0
1161: invokevirtual #43
1164: ldc           #41
1166: invokevirtual #42
1169: invokevirtual #45
1172: iload         33
1174: ifne          1181
1177: iconst_1
1178: goto          1182
1181: iconst_0
1182: invokestatic  #46
1185: aload         35
1187: invokestatic  #47
1190: aload         35
1192: invokestatic  #48
1195: ldc           #49
1197: invokestatic  #50
1200: aload         38
1202: invokestatic  #47
1205: aload         38
1207: invokestatic  #48
1210: ldc           #49
1212: invokestatic  #50
1215: return
Exception table:
from    to  target type
507   524   527   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1901
End line: 1979
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric15 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = curveFitter14.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric15, doubleArray40);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer48 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker51 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer48.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker51);
        int int53 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int55 = levenbergMarquardtOptimizer48.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter56 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer48);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction57 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker66 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer63.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker66);
        int int68 = levenbergMarquardtOptimizer63.getMaxEvaluations();
        int int69 = levenbergMarquardtOptimizer63.getMaxEvaluations();
        int int70 = levenbergMarquardtOptimizer63.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter71 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer63);
        double[] doubleArray78 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray79 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray79, true);
        double[] doubleArray82 = gaussianFitter71.fit(doubleArray78);
        double[] doubleArray83 = curveFitter56.fit(parametricUnivariateRealFunction57, doubleArray78);
        double[] doubleArray84 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = parametric15.value(5.267858159063328d, doubleArray84);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #175
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: new           #67
90: dup
91: aload_1
92: invokespecial #68
95: astore        8
97: new           #117
100: dup
101: invokespecial #118
104: astore        9
106: new           #8
109: dup
110: ldc2_w        #9
113: ldc2_w        #11
116: ldc2_w        #13
119: dconst_1
120: ldc2_w        #13
123: invokespecial #15
126: astore        10
128: new           #16
131: dup
132: ldc2_w        #17
135: ldc2_w        #19
138: invokespecial #21
141: astore        11
143: aload         10
145: aload         11
147: invokevirtual #22
150: aload         10
152: invokevirtual #23
155: istore        12
157: aload         10
159: invokevirtual #23
162: istore        13
164: aload         10
166: invokevirtual #53
169: istore        14
171: new           #24
174: dup
175: aload         10
177: invokespecial #25
180: astore        15
182: bipush        6
184: newarray       double
186: dup
187: iconst_0
188: ldc2_w        #27
191: dastore
192: dup
193: iconst_1
194: ldc2_w        #9
197: dastore
198: dup
199: iconst_2
200: ldc2_w        #13
203: dastore
204: dup
205: iconst_3
206: ldc2_w        #29
209: dastore
210: dup
211: iconst_4
212: ldc2_w        #17
215: dastore
216: dup
217: iconst_5
218: ldc2_w        #31
221: dastore
222: astore        16
224: aconst_null
225: astore        17
227: new           #33
230: dup
231: aload         16
233: aload         17
235: iconst_1
236: invokespecial #34
239: astore        18
241: aload         15
243: aload         16
245: invokevirtual #54
248: astore        19
250: aload         8
252: aload         9
254: aload         19
256: invokevirtual #89
259: astore        20
261: new           #8
264: dup
265: ldc2_w        #9
268: ldc2_w        #11
271: ldc2_w        #13
274: dconst_1
275: ldc2_w        #13
278: invokespecial #15
281: astore        21
283: new           #16
286: dup
287: ldc2_w        #17
290: ldc2_w        #19
293: invokespecial #21
296: astore        22
298: aload         21
300: aload         22
302: invokevirtual #22
305: aload         21
307: invokevirtual #23
310: istore        23
312: aload         21
314: invokevirtual #23
317: istore        24
319: aload         21
321: invokevirtual #53
324: istore        25
326: new           #67
329: dup
330: aload         21
332: invokespecial #68
335: astore        26
337: aconst_null
338: astore        27
340: new           #8
343: dup
344: ldc2_w        #9
347: ldc2_w        #11
350: ldc2_w        #13
353: dconst_1
354: ldc2_w        #13
357: invokespecial #15
360: astore        28
362: new           #16
365: dup
366: ldc2_w        #17
369: ldc2_w        #19
372: invokespecial #21
375: astore        29
377: aload         28
379: aload         29
381: invokevirtual #22
384: aload         28
386: invokevirtual #23
389: istore        30
391: aload         28
393: invokevirtual #23
396: istore        31
398: aload         28
400: invokevirtual #53
403: istore        32
405: new           #24
408: dup
409: aload         28
411: invokespecial #25
414: astore        33
416: bipush        6
418: newarray       double
420: dup
421: iconst_0
422: ldc2_w        #27
425: dastore
426: dup
427: iconst_1
428: ldc2_w        #9
431: dastore
432: dup
433: iconst_2
434: ldc2_w        #13
437: dastore
438: dup
439: iconst_3
440: ldc2_w        #29
443: dastore
444: dup
445: iconst_4
446: ldc2_w        #17
449: dastore
450: dup
451: iconst_5
452: ldc2_w        #31
455: dastore
456: astore        34
458: aconst_null
459: astore        35
461: new           #33
464: dup
465: aload         34
467: aload         35
469: iconst_1
470: invokespecial #34
473: astore        36
475: aload         33
477: aload         34
479: invokevirtual #54
482: astore        37
484: aload         26
486: aload         27
488: aload         34
490: invokevirtual #89
493: astore        38
495: aconst_null
496: astore        39
498: new           #33
501: dup
502: aload         34
504: aload         39
506: invokespecial #109
509: astore        40
511: aload         9
513: ldc2_w        #176
516: aload         39
518: invokevirtual #123
521: dstore        41
523: ldc           #120
525: invokestatic  #37
528: goto          533
531: astore        41
533: new           #39
536: dup
537: invokespecial #40
540: ldc           #41
542: invokevirtual #42
545: iload_3
546: invokevirtual #43
549: ldc           #44
551: invokevirtual #42
554: iconst_0
555: invokevirtual #43
558: ldc           #41
560: invokevirtual #42
563: invokevirtual #45
566: iload_3
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #46
578: new           #39
581: dup
582: invokespecial #40
585: ldc           #41
587: invokevirtual #42
590: iload         4
592: invokevirtual #43
595: ldc           #44
597: invokevirtual #42
600: iconst_0
601: invokevirtual #43
604: ldc           #41
606: invokevirtual #42
609: invokevirtual #45
612: iload         4
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #46
625: new           #39
628: dup
629: invokespecial #40
632: ldc           #41
634: invokevirtual #42
637: dload         5
639: invokevirtual #59
642: ldc           #44
644: invokevirtual #42
647: dconst_0
648: invokevirtual #59
651: ldc           #41
653: invokevirtual #42
656: invokevirtual #45
659: dload         5
661: dconst_0
662: dcmpl
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #46
674: new           #39
677: dup
678: invokespecial #40
681: ldc           #41
683: invokevirtual #42
686: iload         7
688: invokevirtual #43
691: ldc           #44
693: invokevirtual #42
696: iconst_0
697: invokevirtual #43
700: ldc           #41
702: invokevirtual #42
705: invokevirtual #45
708: iload         7
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #46
721: new           #39
724: dup
725: invokespecial #40
728: ldc           #41
730: invokevirtual #42
733: iload         12
735: invokevirtual #43
738: ldc           #44
740: invokevirtual #42
743: iconst_0
744: invokevirtual #43
747: ldc           #41
749: invokevirtual #42
752: invokevirtual #45
755: iload         12
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #46
768: new           #39
771: dup
772: invokespecial #40
775: ldc           #41
777: invokevirtual #42
780: iload         13
782: invokevirtual #43
785: ldc           #44
787: invokevirtual #42
790: iconst_0
791: invokevirtual #43
794: ldc           #41
796: invokevirtual #42
799: invokevirtual #45
802: iload         13
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #46
815: new           #39
818: dup
819: invokespecial #40
822: ldc           #41
824: invokevirtual #42
827: iload         14
829: invokevirtual #43
832: ldc           #44
834: invokevirtual #42
837: iconst_0
838: invokevirtual #43
841: ldc           #41
843: invokevirtual #42
846: invokevirtual #45
849: iload         14
851: ifne          858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #46
862: aload         16
864: invokestatic  #47
867: aload         16
869: invokestatic  #48
872: ldc           #49
874: invokestatic  #50
877: aload         19
879: invokestatic  #47
882: aload         19
884: invokestatic  #48
887: ldc           #49
889: invokestatic  #50
892: aload         20
894: invokestatic  #47
897: aload         20
899: invokestatic  #48
902: ldc           #49
904: invokestatic  #50
907: new           #39
910: dup
911: invokespecial #40
914: ldc           #41
916: invokevirtual #42
919: iload         23
921: invokevirtual #43
924: ldc           #44
926: invokevirtual #42
929: iconst_0
930: invokevirtual #43
933: ldc           #41
935: invokevirtual #42
938: invokevirtual #45
941: iload         23
943: ifne          950
946: iconst_1
947: goto          951
950: iconst_0
951: invokestatic  #46
954: new           #39
957: dup
958: invokespecial #40
961: ldc           #41
963: invokevirtual #42
966: iload         24
968: invokevirtual #43
971: ldc           #44
973: invokevirtual #42
976: iconst_0
977: invokevirtual #43
980: ldc           #41
982: invokevirtual #42
985: invokevirtual #45
988: iload         24
990: ifne          997
993: iconst_1
994: goto          998
997: iconst_0
998: invokestatic  #46
1001: new           #39
1004: dup
1005: invokespecial #40
1008: ldc           #41
1010: invokevirtual #42
1013: iload         25
1015: invokevirtual #43
1018: ldc           #44
1020: invokevirtual #42
1023: iconst_0
1024: invokevirtual #43
1027: ldc           #41
1029: invokevirtual #42
1032: invokevirtual #45
1035: iload         25
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #46
1048: new           #39
1051: dup
1052: invokespecial #40
1055: ldc           #41
1057: invokevirtual #42
1060: iload         30
1062: invokevirtual #43
1065: ldc           #44
1067: invokevirtual #42
1070: iconst_0
1071: invokevirtual #43
1074: ldc           #41
1076: invokevirtual #42
1079: invokevirtual #45
1082: iload         30
1084: ifne          1091
1087: iconst_1
1088: goto          1092
1091: iconst_0
1092: invokestatic  #46
1095: new           #39
1098: dup
1099: invokespecial #40
1102: ldc           #41
1104: invokevirtual #42
1107: iload         31
1109: invokevirtual #43
1112: ldc           #44
1114: invokevirtual #42
1117: iconst_0
1118: invokevirtual #43
1121: ldc           #41
1123: invokevirtual #42
1126: invokevirtual #45
1129: iload         31
1131: ifne          1138
1134: iconst_1
1135: goto          1139
1138: iconst_0
1139: invokestatic  #46
1142: new           #39
1145: dup
1146: invokespecial #40
1149: ldc           #41
1151: invokevirtual #42
1154: iload         32
1156: invokevirtual #43
1159: ldc           #44
1161: invokevirtual #42
1164: iconst_0
1165: invokevirtual #43
1168: ldc           #41
1170: invokevirtual #42
1173: invokevirtual #45
1176: iload         32
1178: ifne          1185
1181: iconst_1
1182: goto          1186
1185: iconst_0
1186: invokestatic  #46
1189: aload         34
1191: invokestatic  #47
1194: aload         34
1196: invokestatic  #48
1199: ldc           #49
1201: invokestatic  #50
1204: aload         37
1206: invokestatic  #47
1209: aload         37
1211: invokestatic  #48
1214: ldc           #49
1216: invokestatic  #50
1219: aload         38
1221: invokestatic  #47
1224: aload         38
1226: invokestatic  #48
1229: ldc           #49
1231: invokestatic  #50
1234: return
Exception table:
from    to  target type
511   528   531   Class org/apache/commons/math/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1982
End line: 2061
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker2 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(11013.232874703393d, (-0.5540437953657898d));
        double[] doubleArray10 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray11 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair13 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray10, doubleArray11, true);
        double[] doubleArray14 = vectorialPointValuePair13.getValue();
        double[] doubleArray15 = vectorialPointValuePair13.getValue();
        double[] doubleArray16 = vectorialPointValuePair13.getValueRef();
        double[] doubleArray17 = vectorialPointValuePair13.getValue();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer23 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker26 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer23.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker26);
        int int28 = levenbergMarquardtOptimizer23.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer23.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer23);
        gaussianFitter30.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction32 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer38 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker41 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer38.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker41);
        int int43 = levenbergMarquardtOptimizer38.getMaxEvaluations();
        int int44 = levenbergMarquardtOptimizer38.getMaxEvaluations();
        int int45 = levenbergMarquardtOptimizer38.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter46 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer38);
        double[] doubleArray53 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray54 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair56 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray53, doubleArray54, true);
        double[] doubleArray57 = gaussianFitter46.fit(doubleArray53);
        double[] doubleArray58 = gaussianFitter30.fit(parametricUnivariateRealFunction32, doubleArray57);
        double[] doubleArray59 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer65 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker68 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer65.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker68);
        int int70 = levenbergMarquardtOptimizer65.getMaxEvaluations();
        int int71 = levenbergMarquardtOptimizer65.getMaxEvaluations();
        int int72 = levenbergMarquardtOptimizer65.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter73 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer65);
        double[] doubleArray80 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray81 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray80, doubleArray81, true);
        double[] doubleArray84 = gaussianFitter73.fit(doubleArray80);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray80);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair86 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray58, doubleArray80);
        double[] doubleArray87 = vectorialPointValuePair86.getPointRef();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = simpleVectorialValueChecker2.converged(0, vectorialPointValuePair13, vectorialPointValuePair86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #178
19: aastore
20: invokevirtual #7
23: pop
24: new           #16
27: dup
28: ldc2_w        #179
31: ldc2_w        #181
34: invokespecial #21
37: astore_1
38: bipush        6
40: newarray       double
42: dup
43: iconst_0
44: ldc2_w        #27
47: dastore
48: dup
49: iconst_1
50: ldc2_w        #9
53: dastore
54: dup
55: iconst_2
56: ldc2_w        #13
59: dastore
60: dup
61: iconst_3
62: ldc2_w        #29
65: dastore
66: dup
67: iconst_4
68: ldc2_w        #17
71: dastore
72: dup
73: iconst_5
74: ldc2_w        #31
77: dastore
78: astore_2
79: aconst_null
80: astore_3
81: new           #33
84: dup
85: aload_2
86: aload_3
87: iconst_1
88: invokespecial #34
91: astore        4
93: aload         4
95: invokevirtual #74
98: astore        5
100: aload         4
102: invokevirtual #74
105: astore        6
107: aload         4
109: invokevirtual #183
112: astore        7
114: aload         4
116: invokevirtual #74
119: astore        8
121: new           #8
124: dup
125: ldc2_w        #9
128: ldc2_w        #11
131: ldc2_w        #13
134: dconst_1
135: ldc2_w        #13
138: invokespecial #15
141: astore        9
143: new           #16
146: dup
147: ldc2_w        #17
150: ldc2_w        #19
153: invokespecial #21
156: astore        10
158: aload         9
160: aload         10
162: invokevirtual #22
165: aload         9
167: invokevirtual #23
170: istore        11
172: aload         9
174: invokevirtual #23
177: istore        12
179: new           #24
182: dup
183: aload         9
185: invokespecial #25
188: astore        13
190: aload         13
192: invokevirtual #52
195: aconst_null
196: astore        14
198: new           #8
201: dup
202: ldc2_w        #9
205: ldc2_w        #11
208: ldc2_w        #13
211: dconst_1
212: ldc2_w        #13
215: invokespecial #15
218: astore        15
220: new           #16
223: dup
224: ldc2_w        #17
227: ldc2_w        #19
230: invokespecial #21
233: astore        16
235: aload         15
237: aload         16
239: invokevirtual #22
242: aload         15
244: invokevirtual #23
247: istore        17
249: aload         15
251: invokevirtual #23
254: istore        18
256: aload         15
258: invokevirtual #53
261: istore        19
263: new           #24
266: dup
267: aload         15
269: invokespecial #25
272: astore        20
274: bipush        6
276: newarray       double
278: dup
279: iconst_0
280: ldc2_w        #27
283: dastore
284: dup
285: iconst_1
286: ldc2_w        #9
289: dastore
290: dup
291: iconst_2
292: ldc2_w        #13
295: dastore
296: dup
297: iconst_3
298: ldc2_w        #29
301: dastore
302: dup
303: iconst_4
304: ldc2_w        #17
307: dastore
308: dup
309: iconst_5
310: ldc2_w        #31
313: dastore
314: astore        21
316: aconst_null
317: astore        22
319: new           #33
322: dup
323: aload         21
325: aload         22
327: iconst_1
328: invokespecial #34
331: astore        23
333: aload         20
335: aload         21
337: invokevirtual #54
340: astore        24
342: aload         13
344: aload         14
346: aload         24
348: invokevirtual #55
351: astore        25
353: aconst_null
354: astore        26
356: new           #8
359: dup
360: ldc2_w        #9
363: ldc2_w        #11
366: ldc2_w        #13
369: dconst_1
370: ldc2_w        #13
373: invokespecial #15
376: astore        27
378: new           #16
381: dup
382: ldc2_w        #17
385: ldc2_w        #19
388: invokespecial #21
391: astore        28
393: aload         27
395: aload         28
397: invokevirtual #22
400: aload         27
402: invokevirtual #23
405: istore        29
407: aload         27
409: invokevirtual #23
412: istore        30
414: aload         27
416: invokevirtual #53
419: istore        31
421: new           #24
424: dup
425: aload         27
427: invokespecial #25
430: astore        32
432: bipush        6
434: newarray       double
436: dup
437: iconst_0
438: ldc2_w        #27
441: dastore
442: dup
443: iconst_1
444: ldc2_w        #9
447: dastore
448: dup
449: iconst_2
450: ldc2_w        #13
453: dastore
454: dup
455: iconst_3
456: ldc2_w        #29
459: dastore
460: dup
461: iconst_4
462: ldc2_w        #17
465: dastore
466: dup
467: iconst_5
468: ldc2_w        #31
471: dastore
472: astore        33
474: aconst_null
475: astore        34
477: new           #33
480: dup
481: aload         33
483: aload         34
485: iconst_1
486: invokespecial #34
489: astore        35
491: aload         32
493: aload         33
495: invokevirtual #54
498: astore        36
500: new           #33
503: dup
504: aload         26
506: aload         33
508: invokespecial #109
511: astore        37
513: new           #33
516: dup
517: aload         25
519: aload         33
521: invokespecial #109
524: astore        38
526: aload         38
528: invokevirtual #151
531: astore        39
533: aload_1
534: iconst_0
535: aload         4
537: aload         38
539: invokevirtual #90
542: istore        40
544: ldc           #36
546: invokestatic  #37
549: goto          554
552: astore        40
554: aload_2
555: invokestatic  #47
558: aload_2
559: invokestatic  #48
562: ldc           #49
564: invokestatic  #50
567: aload         5
569: invokestatic  #76
572: aload         6
574: invokestatic  #76
577: aload         7
579: invokestatic  #76
582: aload         8
584: invokestatic  #76
587: new           #39
590: dup
591: invokespecial #40
594: ldc           #41
596: invokevirtual #42
599: iload         11
601: invokevirtual #43
604: ldc           #44
606: invokevirtual #42
609: iconst_0
610: invokevirtual #43
613: ldc           #41
615: invokevirtual #42
618: invokevirtual #45
621: iload         11
623: ifne          630
626: iconst_1
627: goto          631
630: iconst_0
631: invokestatic  #46
634: new           #39
637: dup
638: invokespecial #40
641: ldc           #41
643: invokevirtual #42
646: iload         12
648: invokevirtual #43
651: ldc           #44
653: invokevirtual #42
656: iconst_0
657: invokevirtual #43
660: ldc           #41
662: invokevirtual #42
665: invokevirtual #45
668: iload         12
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #46
681: new           #39
684: dup
685: invokespecial #40
688: ldc           #41
690: invokevirtual #42
693: iload         17
695: invokevirtual #43
698: ldc           #44
700: invokevirtual #42
703: iconst_0
704: invokevirtual #43
707: ldc           #41
709: invokevirtual #42
712: invokevirtual #45
715: iload         17
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #46
728: new           #39
731: dup
732: invokespecial #40
735: ldc           #41
737: invokevirtual #42
740: iload         18
742: invokevirtual #43
745: ldc           #44
747: invokevirtual #42
750: iconst_0
751: invokevirtual #43
754: ldc           #41
756: invokevirtual #42
759: invokevirtual #45
762: iload         18
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #46
775: new           #39
778: dup
779: invokespecial #40
782: ldc           #41
784: invokevirtual #42
787: iload         19
789: invokevirtual #43
792: ldc           #44
794: invokevirtual #42
797: iconst_0
798: invokevirtual #43
801: ldc           #41
803: invokevirtual #42
806: invokevirtual #45
809: iload         19
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #46
822: aload         21
824: invokestatic  #47
827: aload         21
829: invokestatic  #48
832: ldc           #49
834: invokestatic  #50
837: aload         24
839: invokestatic  #47
842: aload         24
844: invokestatic  #48
847: ldc           #49
849: invokestatic  #50
852: aload         25
854: invokestatic  #47
857: aload         25
859: invokestatic  #48
862: ldc           #49
864: invokestatic  #50
867: new           #39
870: dup
871: invokespecial #40
874: ldc           #41
876: invokevirtual #42
879: iload         29
881: invokevirtual #43
884: ldc           #44
886: invokevirtual #42
889: iconst_0
890: invokevirtual #43
893: ldc           #41
895: invokevirtual #42
898: invokevirtual #45
901: iload         29
903: ifne          910
906: iconst_1
907: goto          911
910: iconst_0
911: invokestatic  #46
914: new           #39
917: dup
918: invokespecial #40
921: ldc           #41
923: invokevirtual #42
926: iload         30
928: invokevirtual #43
931: ldc           #44
933: invokevirtual #42
936: iconst_0
937: invokevirtual #43
940: ldc           #41
942: invokevirtual #42
945: invokevirtual #45
948: iload         30
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #46
961: new           #39
964: dup
965: invokespecial #40
968: ldc           #41
970: invokevirtual #42
973: iload         31
975: invokevirtual #43
978: ldc           #44
980: invokevirtual #42
983: iconst_0
984: invokevirtual #43
987: ldc           #41
989: invokevirtual #42
992: invokevirtual #45
995: iload         31
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #46
1008: aload         33
1010: invokestatic  #47
1013: aload         33
1015: invokestatic  #48
1018: ldc           #49
1020: invokestatic  #50
1023: aload         36
1025: invokestatic  #47
1028: aload         36
1030: invokestatic  #48
1033: ldc           #49
1035: invokestatic  #50
1038: aload         39
1040: invokestatic  #47
1043: aload         39
1045: invokestatic  #48
1048: ldc           #49
1050: invokestatic  #50
1053: return
Exception table:
from    to  target type
533   549   552   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 2064
End line: 2138
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        double[] doubleArray41 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer47 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker50 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer47.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker50);
        int int52 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer47.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter55 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer47);
        double[] doubleArray62 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray63 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray63, true);
        double[] doubleArray66 = gaussianFitter55.fit(doubleArray62);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair67 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray62);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair68 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray62);
        double[] doubleArray75 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray76 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray75, doubleArray76, true);
        double[] doubleArray79 = vectorialPointValuePair78.getValue();
        double[] doubleArray80 = vectorialPointValuePair78.getValue();
        double[] doubleArray81 = vectorialPointValuePair78.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray81);
        double[] doubleArray89 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray90 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair92 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray89, doubleArray90, true);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair93 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray81, doubleArray90);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #184
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #52
90: aconst_null
91: astore        6
93: new           #8
96: dup
97: ldc2_w        #9
100: ldc2_w        #11
103: ldc2_w        #13
106: dconst_1
107: ldc2_w        #13
110: invokespecial #15
113: astore        7
115: new           #16
118: dup
119: ldc2_w        #17
122: ldc2_w        #19
125: invokespecial #21
128: astore        8
130: aload         7
132: aload         8
134: invokevirtual #22
137: aload         7
139: invokevirtual #23
142: istore        9
144: aload         7
146: invokevirtual #23
149: istore        10
151: aload         7
153: invokevirtual #53
156: istore        11
158: new           #24
161: dup
162: aload         7
164: invokespecial #25
167: astore        12
169: bipush        6
171: newarray       double
173: dup
174: iconst_0
175: ldc2_w        #27
178: dastore
179: dup
180: iconst_1
181: ldc2_w        #9
184: dastore
185: dup
186: iconst_2
187: ldc2_w        #13
190: dastore
191: dup
192: iconst_3
193: ldc2_w        #29
196: dastore
197: dup
198: iconst_4
199: ldc2_w        #17
202: dastore
203: dup
204: iconst_5
205: ldc2_w        #31
208: dastore
209: astore        13
211: aconst_null
212: astore        14
214: new           #33
217: dup
218: aload         13
220: aload         14
222: iconst_1
223: invokespecial #34
226: astore        15
228: aload         12
230: aload         13
232: invokevirtual #54
235: astore        16
237: aload         5
239: aload         6
241: aload         16
243: invokevirtual #55
246: astore        17
248: aconst_null
249: astore        18
251: new           #8
254: dup
255: ldc2_w        #9
258: ldc2_w        #11
261: ldc2_w        #13
264: dconst_1
265: ldc2_w        #13
268: invokespecial #15
271: astore        19
273: new           #16
276: dup
277: ldc2_w        #17
280: ldc2_w        #19
283: invokespecial #21
286: astore        20
288: aload         19
290: aload         20
292: invokevirtual #22
295: aload         19
297: invokevirtual #23
300: istore        21
302: aload         19
304: invokevirtual #23
307: istore        22
309: aload         19
311: invokevirtual #53
314: istore        23
316: new           #24
319: dup
320: aload         19
322: invokespecial #25
325: astore        24
327: bipush        6
329: newarray       double
331: dup
332: iconst_0
333: ldc2_w        #27
336: dastore
337: dup
338: iconst_1
339: ldc2_w        #9
342: dastore
343: dup
344: iconst_2
345: ldc2_w        #13
348: dastore
349: dup
350: iconst_3
351: ldc2_w        #29
354: dastore
355: dup
356: iconst_4
357: ldc2_w        #17
360: dastore
361: dup
362: iconst_5
363: ldc2_w        #31
366: dastore
367: astore        25
369: aconst_null
370: astore        26
372: new           #33
375: dup
376: aload         25
378: aload         26
380: iconst_1
381: invokespecial #34
384: astore        27
386: aload         24
388: aload         25
390: invokevirtual #54
393: astore        28
395: new           #33
398: dup
399: aload         18
401: aload         25
403: invokespecial #109
406: astore        29
408: new           #33
411: dup
412: aload         17
414: aload         25
416: invokespecial #109
419: astore        30
421: bipush        6
423: newarray       double
425: dup
426: iconst_0
427: ldc2_w        #27
430: dastore
431: dup
432: iconst_1
433: ldc2_w        #9
436: dastore
437: dup
438: iconst_2
439: ldc2_w        #13
442: dastore
443: dup
444: iconst_3
445: ldc2_w        #29
448: dastore
449: dup
450: iconst_4
451: ldc2_w        #17
454: dastore
455: dup
456: iconst_5
457: ldc2_w        #31
460: dastore
461: astore        31
463: aconst_null
464: astore        32
466: new           #33
469: dup
470: aload         31
472: aload         32
474: iconst_1
475: invokespecial #34
478: astore        33
480: aload         33
482: invokevirtual #74
485: astore        34
487: aload         33
489: invokevirtual #74
492: astore        35
494: aload         33
496: invokevirtual #75
499: astore        36
501: new           #33
504: dup
505: aload         17
507: aload         36
509: invokespecial #109
512: astore        37
514: bipush        6
516: newarray       double
518: dup
519: iconst_0
520: ldc2_w        #27
523: dastore
524: dup
525: iconst_1
526: ldc2_w        #9
529: dastore
530: dup
531: iconst_2
532: ldc2_w        #13
535: dastore
536: dup
537: iconst_3
538: ldc2_w        #29
541: dastore
542: dup
543: iconst_4
544: ldc2_w        #17
547: dastore
548: dup
549: iconst_5
550: ldc2_w        #31
553: dastore
554: astore        38
556: aconst_null
557: astore        39
559: new           #33
562: dup
563: aload         38
565: aload         39
567: iconst_1
568: invokespecial #34
571: astore        40
573: new           #33
576: dup
577: aload         36
579: aload         39
581: invokespecial #109
584: astore        41
586: new           #39
589: dup
590: invokespecial #40
593: ldc           #41
595: invokevirtual #42
598: iload_3
599: invokevirtual #43
602: ldc           #44
604: invokevirtual #42
607: iconst_0
608: invokevirtual #43
611: ldc           #41
613: invokevirtual #42
616: invokevirtual #45
619: iload_3
620: ifne          627
623: iconst_1
624: goto          628
627: iconst_0
628: invokestatic  #46
631: new           #39
634: dup
635: invokespecial #40
638: ldc           #41
640: invokevirtual #42
643: iload         4
645: invokevirtual #43
648: ldc           #44
650: invokevirtual #42
653: iconst_0
654: invokevirtual #43
657: ldc           #41
659: invokevirtual #42
662: invokevirtual #45
665: iload         4
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #46
678: new           #39
681: dup
682: invokespecial #40
685: ldc           #41
687: invokevirtual #42
690: iload         9
692: invokevirtual #43
695: ldc           #44
697: invokevirtual #42
700: iconst_0
701: invokevirtual #43
704: ldc           #41
706: invokevirtual #42
709: invokevirtual #45
712: iload         9
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #46
725: new           #39
728: dup
729: invokespecial #40
732: ldc           #41
734: invokevirtual #42
737: iload         10
739: invokevirtual #43
742: ldc           #44
744: invokevirtual #42
747: iconst_0
748: invokevirtual #43
751: ldc           #41
753: invokevirtual #42
756: invokevirtual #45
759: iload         10
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #46
772: new           #39
775: dup
776: invokespecial #40
779: ldc           #41
781: invokevirtual #42
784: iload         11
786: invokevirtual #43
789: ldc           #44
791: invokevirtual #42
794: iconst_0
795: invokevirtual #43
798: ldc           #41
800: invokevirtual #42
803: invokevirtual #45
806: iload         11
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #46
819: aload         13
821: invokestatic  #47
824: aload         13
826: invokestatic  #48
829: ldc           #49
831: invokestatic  #50
834: aload         16
836: invokestatic  #47
839: aload         16
841: invokestatic  #48
844: ldc           #49
846: invokestatic  #50
849: aload         17
851: invokestatic  #47
854: aload         17
856: invokestatic  #48
859: ldc           #49
861: invokestatic  #50
864: new           #39
867: dup
868: invokespecial #40
871: ldc           #41
873: invokevirtual #42
876: iload         21
878: invokevirtual #43
881: ldc           #44
883: invokevirtual #42
886: iconst_0
887: invokevirtual #43
890: ldc           #41
892: invokevirtual #42
895: invokevirtual #45
898: iload         21
900: ifne          907
903: iconst_1
904: goto          908
907: iconst_0
908: invokestatic  #46
911: new           #39
914: dup
915: invokespecial #40
918: ldc           #41
920: invokevirtual #42
923: iload         22
925: invokevirtual #43
928: ldc           #44
930: invokevirtual #42
933: iconst_0
934: invokevirtual #43
937: ldc           #41
939: invokevirtual #42
942: invokevirtual #45
945: iload         22
947: ifne          954
950: iconst_1
951: goto          955
954: iconst_0
955: invokestatic  #46
958: new           #39
961: dup
962: invokespecial #40
965: ldc           #41
967: invokevirtual #42
970: iload         23
972: invokevirtual #43
975: ldc           #44
977: invokevirtual #42
980: iconst_0
981: invokevirtual #43
984: ldc           #41
986: invokevirtual #42
989: invokevirtual #45
992: iload         23
994: ifne          1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #46
1005: aload         25
1007: invokestatic  #47
1010: aload         25
1012: invokestatic  #48
1015: ldc           #49
1017: invokestatic  #50
1020: aload         28
1022: invokestatic  #47
1025: aload         28
1027: invokestatic  #48
1030: ldc           #49
1032: invokestatic  #50
1035: aload         31
1037: invokestatic  #47
1040: aload         31
1042: invokestatic  #48
1045: ldc           #49
1047: invokestatic  #50
1050: aload         34
1052: invokestatic  #76
1055: aload         35
1057: invokestatic  #76
1060: aload         36
1062: invokestatic  #47
1065: aload         36
1067: invokestatic  #48
1070: ldc           #49
1072: invokestatic  #50
1075: aload         38
1077: invokestatic  #47
1080: aload         38
1082: invokestatic  #48
1085: ldc           #49
1087: invokestatic  #50
1090: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 2141
End line: 2184
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray41 = gaussianFitter12.getObservations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser parameterGuesser42 = new org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser(weightedObservedPointArray41);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #185
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #52
90: aconst_null
91: astore        6
93: new           #8
96: dup
97: ldc2_w        #9
100: ldc2_w        #11
103: ldc2_w        #13
106: dconst_1
107: ldc2_w        #13
110: invokespecial #15
113: astore        7
115: new           #16
118: dup
119: ldc2_w        #17
122: ldc2_w        #19
125: invokespecial #21
128: astore        8
130: aload         7
132: aload         8
134: invokevirtual #22
137: aload         7
139: invokevirtual #23
142: istore        9
144: aload         7
146: invokevirtual #23
149: istore        10
151: aload         7
153: invokevirtual #53
156: istore        11
158: new           #24
161: dup
162: aload         7
164: invokespecial #25
167: astore        12
169: bipush        6
171: newarray       double
173: dup
174: iconst_0
175: ldc2_w        #27
178: dastore
179: dup
180: iconst_1
181: ldc2_w        #9
184: dastore
185: dup
186: iconst_2
187: ldc2_w        #13
190: dastore
191: dup
192: iconst_3
193: ldc2_w        #29
196: dastore
197: dup
198: iconst_4
199: ldc2_w        #17
202: dastore
203: dup
204: iconst_5
205: ldc2_w        #31
208: dastore
209: astore        13
211: aconst_null
212: astore        14
214: new           #33
217: dup
218: aload         13
220: aload         14
222: iconst_1
223: invokespecial #34
226: astore        15
228: aload         12
230: aload         13
232: invokevirtual #54
235: astore        16
237: aload         5
239: aload         6
241: aload         16
243: invokevirtual #55
246: astore        17
248: aload         5
250: invokevirtual #62
253: astore        18
255: new           #83
258: dup
259: aload         18
261: invokespecial #84
264: astore        19
266: ldc           #64
268: invokestatic  #37
271: goto          276
274: astore        19
276: new           #39
279: dup
280: invokespecial #40
283: ldc           #41
285: invokevirtual #42
288: iload_3
289: invokevirtual #43
292: ldc           #44
294: invokevirtual #42
297: iconst_0
298: invokevirtual #43
301: ldc           #41
303: invokevirtual #42
306: invokevirtual #45
309: iload_3
310: ifne          317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #46
321: new           #39
324: dup
325: invokespecial #40
328: ldc           #41
330: invokevirtual #42
333: iload         4
335: invokevirtual #43
338: ldc           #44
340: invokevirtual #42
343: iconst_0
344: invokevirtual #43
347: ldc           #41
349: invokevirtual #42
352: invokevirtual #45
355: iload         4
357: ifne          364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #46
368: new           #39
371: dup
372: invokespecial #40
375: ldc           #41
377: invokevirtual #42
380: iload         9
382: invokevirtual #43
385: ldc           #44
387: invokevirtual #42
390: iconst_0
391: invokevirtual #43
394: ldc           #41
396: invokevirtual #42
399: invokevirtual #45
402: iload         9
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #46
415: new           #39
418: dup
419: invokespecial #40
422: ldc           #41
424: invokevirtual #42
427: iload         10
429: invokevirtual #43
432: ldc           #44
434: invokevirtual #42
437: iconst_0
438: invokevirtual #43
441: ldc           #41
443: invokevirtual #42
446: invokevirtual #45
449: iload         10
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #46
462: new           #39
465: dup
466: invokespecial #40
469: ldc           #41
471: invokevirtual #42
474: iload         11
476: invokevirtual #43
479: ldc           #44
481: invokevirtual #42
484: iconst_0
485: invokevirtual #43
488: ldc           #41
490: invokevirtual #42
493: invokevirtual #45
496: iload         11
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #46
509: aload         13
511: invokestatic  #47
514: aload         13
516: invokestatic  #48
519: ldc           #49
521: invokestatic  #50
524: aload         16
526: invokestatic  #47
529: aload         16
531: invokestatic  #48
534: ldc           #49
536: invokestatic  #50
539: aload         17
541: invokestatic  #47
544: aload         17
546: invokestatic  #48
549: ldc           #49
551: invokestatic  #50
554: aload         18
556: invokestatic  #47
559: return
Exception table:
from    to  target type
255   271   274   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 2187
End line: 2225
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric15 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = curveFitter14.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric15, doubleArray40);
        curveFitter14.clearObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: new           #67
90: dup
91: aload_1
92: invokespecial #68
95: astore        8
97: new           #117
100: dup
101: invokespecial #118
104: astore        9
106: new           #8
109: dup
110: ldc2_w        #9
113: ldc2_w        #11
116: ldc2_w        #13
119: dconst_1
120: ldc2_w        #13
123: invokespecial #15
126: astore        10
128: new           #16
131: dup
132: ldc2_w        #17
135: ldc2_w        #19
138: invokespecial #21
141: astore        11
143: aload         10
145: aload         11
147: invokevirtual #22
150: aload         10
152: invokevirtual #23
155: istore        12
157: aload         10
159: invokevirtual #23
162: istore        13
164: aload         10
166: invokevirtual #53
169: istore        14
171: new           #24
174: dup
175: aload         10
177: invokespecial #25
180: astore        15
182: bipush        6
184: newarray       double
186: dup
187: iconst_0
188: ldc2_w        #27
191: dastore
192: dup
193: iconst_1
194: ldc2_w        #9
197: dastore
198: dup
199: iconst_2
200: ldc2_w        #13
203: dastore
204: dup
205: iconst_3
206: ldc2_w        #29
209: dastore
210: dup
211: iconst_4
212: ldc2_w        #17
215: dastore
216: dup
217: iconst_5
218: ldc2_w        #31
221: dastore
222: astore        16
224: aconst_null
225: astore        17
227: new           #33
230: dup
231: aload         16
233: aload         17
235: iconst_1
236: invokespecial #34
239: astore        18
241: aload         15
243: aload         16
245: invokevirtual #54
248: astore        19
250: aload         8
252: aload         9
254: aload         19
256: invokevirtual #89
259: astore        20
261: aload         8
263: invokevirtual #114
266: new           #39
269: dup
270: invokespecial #40
273: ldc           #41
275: invokevirtual #42
278: iload_3
279: invokevirtual #43
282: ldc           #44
284: invokevirtual #42
287: iconst_0
288: invokevirtual #43
291: ldc           #41
293: invokevirtual #42
296: invokevirtual #45
299: iload_3
300: ifne          307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #46
311: new           #39
314: dup
315: invokespecial #40
318: ldc           #41
320: invokevirtual #42
323: iload         4
325: invokevirtual #43
328: ldc           #44
330: invokevirtual #42
333: iconst_0
334: invokevirtual #43
337: ldc           #41
339: invokevirtual #42
342: invokevirtual #45
345: iload         4
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #46
358: new           #39
361: dup
362: invokespecial #40
365: ldc           #41
367: invokevirtual #42
370: dload         5
372: invokevirtual #59
375: ldc           #44
377: invokevirtual #42
380: dconst_0
381: invokevirtual #59
384: ldc           #41
386: invokevirtual #42
389: invokevirtual #45
392: dload         5
394: dconst_0
395: dcmpl
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #46
407: new           #39
410: dup
411: invokespecial #40
414: ldc           #41
416: invokevirtual #42
419: iload         7
421: invokevirtual #43
424: ldc           #44
426: invokevirtual #42
429: iconst_0
430: invokevirtual #43
433: ldc           #41
435: invokevirtual #42
438: invokevirtual #45
441: iload         7
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #46
454: new           #39
457: dup
458: invokespecial #40
461: ldc           #41
463: invokevirtual #42
466: iload         12
468: invokevirtual #43
471: ldc           #44
473: invokevirtual #42
476: iconst_0
477: invokevirtual #43
480: ldc           #41
482: invokevirtual #42
485: invokevirtual #45
488: iload         12
490: ifne          497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #46
501: new           #39
504: dup
505: invokespecial #40
508: ldc           #41
510: invokevirtual #42
513: iload         13
515: invokevirtual #43
518: ldc           #44
520: invokevirtual #42
523: iconst_0
524: invokevirtual #43
527: ldc           #41
529: invokevirtual #42
532: invokevirtual #45
535: iload         13
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #46
548: new           #39
551: dup
552: invokespecial #40
555: ldc           #41
557: invokevirtual #42
560: iload         14
562: invokevirtual #43
565: ldc           #44
567: invokevirtual #42
570: iconst_0
571: invokevirtual #43
574: ldc           #41
576: invokevirtual #42
579: invokevirtual #45
582: iload         14
584: ifne          591
587: iconst_1
588: goto          592
591: iconst_0
592: invokestatic  #46
595: aload         16
597: invokestatic  #47
600: aload         16
602: invokestatic  #48
605: ldc           #49
607: invokestatic  #50
610: aload         19
612: invokestatic  #47
615: aload         19
617: invokestatic  #48
620: ldc           #49
622: invokestatic  #50
625: aload         20
627: invokestatic  #47
630: aload         20
632: invokestatic  #48
635: ldc           #49
637: invokestatic  #50
640: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 2228
End line: 2304
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker2 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double3 = simpleVectorialValueChecker2.getRelativeThreshold();
        double[] doubleArray11 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray12 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair14 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray11, doubleArray12, true);
        double[] doubleArray15 = vectorialPointValuePair14.getValue();
        double[] doubleArray16 = vectorialPointValuePair14.getValue();
        double[] doubleArray17 = vectorialPointValuePair14.getValueRef();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer23 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker26 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer23.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker26);
        int int28 = levenbergMarquardtOptimizer23.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer23.getMaxEvaluations();
        int int30 = levenbergMarquardtOptimizer23.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter31 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer23);
        double[] doubleArray38 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray39 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair41 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray39, true);
        double[] doubleArray42 = gaussianFitter31.fit(doubleArray38);
        double[] doubleArray49 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray50 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair52 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray50, true);
        double[] doubleArray53 = vectorialPointValuePair52.getValue();
        double[] doubleArray54 = vectorialPointValuePair52.getValue();
        double[] doubleArray55 = vectorialPointValuePair52.getPoint();
        double[] doubleArray56 = gaussianFitter31.fit(doubleArray55);
        double[] doubleArray63 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray64 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray64, true);
        double[] doubleArray67 = vectorialPointValuePair66.getValue();
        double[] doubleArray68 = vectorialPointValuePair66.getValue();
        double[] doubleArray69 = vectorialPointValuePair66.getPoint();
        double[] doubleArray70 = vectorialPointValuePair66.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair71 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray55, doubleArray70);
        double[] doubleArray72 = vectorialPointValuePair71.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = simpleVectorialValueChecker2.converged((int) (short) 100, vectorialPointValuePair14, vectorialPointValuePair71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.0d + "'", double3 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #187
19: aastore
20: invokevirtual #7
23: pop
24: new           #16
27: dup
28: ldc2_w        #17
31: ldc2_w        #19
34: invokespecial #21
37: astore_1
38: aload_1
39: invokevirtual #88
42: dstore_2
43: bipush        6
45: newarray       double
47: dup
48: iconst_0
49: ldc2_w        #27
52: dastore
53: dup
54: iconst_1
55: ldc2_w        #9
58: dastore
59: dup
60: iconst_2
61: ldc2_w        #13
64: dastore
65: dup
66: iconst_3
67: ldc2_w        #29
70: dastore
71: dup
72: iconst_4
73: ldc2_w        #17
76: dastore
77: dup
78: iconst_5
79: ldc2_w        #31
82: dastore
83: astore        4
85: aconst_null
86: astore        5
88: new           #33
91: dup
92: aload         4
94: aload         5
96: iconst_1
97: invokespecial #34
100: astore        6
102: aload         6
104: invokevirtual #74
107: astore        7
109: aload         6
111: invokevirtual #74
114: astore        8
116: aload         6
118: invokevirtual #183
121: astore        9
123: new           #8
126: dup
127: ldc2_w        #9
130: ldc2_w        #11
133: ldc2_w        #13
136: dconst_1
137: ldc2_w        #13
140: invokespecial #15
143: astore        10
145: new           #16
148: dup
149: ldc2_w        #17
152: ldc2_w        #19
155: invokespecial #21
158: astore        11
160: aload         10
162: aload         11
164: invokevirtual #22
167: aload         10
169: invokevirtual #23
172: istore        12
174: aload         10
176: invokevirtual #23
179: istore        13
181: aload         10
183: invokevirtual #53
186: istore        14
188: new           #24
191: dup
192: aload         10
194: invokespecial #25
197: astore        15
199: bipush        6
201: newarray       double
203: dup
204: iconst_0
205: ldc2_w        #27
208: dastore
209: dup
210: iconst_1
211: ldc2_w        #9
214: dastore
215: dup
216: iconst_2
217: ldc2_w        #13
220: dastore
221: dup
222: iconst_3
223: ldc2_w        #29
226: dastore
227: dup
228: iconst_4
229: ldc2_w        #17
232: dastore
233: dup
234: iconst_5
235: ldc2_w        #31
238: dastore
239: astore        16
241: aconst_null
242: astore        17
244: new           #33
247: dup
248: aload         16
250: aload         17
252: iconst_1
253: invokespecial #34
256: astore        18
258: aload         15
260: aload         16
262: invokevirtual #54
265: astore        19
267: bipush        6
269: newarray       double
271: dup
272: iconst_0
273: ldc2_w        #27
276: dastore
277: dup
278: iconst_1
279: ldc2_w        #9
282: dastore
283: dup
284: iconst_2
285: ldc2_w        #13
288: dastore
289: dup
290: iconst_3
291: ldc2_w        #29
294: dastore
295: dup
296: iconst_4
297: ldc2_w        #17
300: dastore
301: dup
302: iconst_5
303: ldc2_w        #31
306: dastore
307: astore        20
309: aconst_null
310: astore        21
312: new           #33
315: dup
316: aload         20
318: aload         21
320: iconst_1
321: invokespecial #34
324: astore        22
326: aload         22
328: invokevirtual #74
331: astore        23
333: aload         22
335: invokevirtual #74
338: astore        24
340: aload         22
342: invokevirtual #75
345: astore        25
347: aload         15
349: aload         25
351: invokevirtual #54
354: astore        26
356: bipush        6
358: newarray       double
360: dup
361: iconst_0
362: ldc2_w        #27
365: dastore
366: dup
367: iconst_1
368: ldc2_w        #9
371: dastore
372: dup
373: iconst_2
374: ldc2_w        #13
377: dastore
378: dup
379: iconst_3
380: ldc2_w        #29
383: dastore
384: dup
385: iconst_4
386: ldc2_w        #17
389: dastore
390: dup
391: iconst_5
392: ldc2_w        #31
395: dastore
396: astore        27
398: aconst_null
399: astore        28
401: new           #33
404: dup
405: aload         27
407: aload         28
409: iconst_1
410: invokespecial #34
413: astore        29
415: aload         29
417: invokevirtual #74
420: astore        30
422: aload         29
424: invokevirtual #74
427: astore        31
429: aload         29
431: invokevirtual #75
434: astore        32
436: aload         29
438: invokevirtual #151
441: astore        33
443: new           #33
446: dup
447: aload         25
449: aload         33
451: invokespecial #109
454: astore        34
456: aload         34
458: invokevirtual #75
461: astore        35
463: aload_1
464: bipush        100
466: aload         6
468: aload         34
470: invokevirtual #90
473: istore        36
475: ldc           #36
477: invokestatic  #37
480: goto          485
483: astore        36
485: new           #39
488: dup
489: invokespecial #40
492: ldc           #41
494: invokevirtual #42
497: dload_2
498: invokevirtual #59
501: ldc           #44
503: invokevirtual #42
506: ldc2_w        #17
509: invokevirtual #59
512: ldc           #41
514: invokevirtual #42
517: invokevirtual #45
520: dload_2
521: ldc2_w        #17
524: dcmpl
525: ifne          532
528: iconst_1
529: goto          533
532: iconst_0
533: invokestatic  #46
536: aload         4
538: invokestatic  #47
541: aload         4
543: invokestatic  #48
546: ldc           #49
548: invokestatic  #50
551: aload         7
553: invokestatic  #76
556: aload         8
558: invokestatic  #76
561: aload         9
563: invokestatic  #76
566: new           #39
569: dup
570: invokespecial #40
573: ldc           #41
575: invokevirtual #42
578: iload         12
580: invokevirtual #43
583: ldc           #44
585: invokevirtual #42
588: iconst_0
589: invokevirtual #43
592: ldc           #41
594: invokevirtual #42
597: invokevirtual #45
600: iload         12
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #46
613: new           #39
616: dup
617: invokespecial #40
620: ldc           #41
622: invokevirtual #42
625: iload         13
627: invokevirtual #43
630: ldc           #44
632: invokevirtual #42
635: iconst_0
636: invokevirtual #43
639: ldc           #41
641: invokevirtual #42
644: invokevirtual #45
647: iload         13
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #46
660: new           #39
663: dup
664: invokespecial #40
667: ldc           #41
669: invokevirtual #42
672: iload         14
674: invokevirtual #43
677: ldc           #44
679: invokevirtual #42
682: iconst_0
683: invokevirtual #43
686: ldc           #41
688: invokevirtual #42
691: invokevirtual #45
694: iload         14
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #46
707: aload         16
709: invokestatic  #47
712: aload         16
714: invokestatic  #48
717: ldc           #49
719: invokestatic  #50
722: aload         19
724: invokestatic  #47
727: aload         19
729: invokestatic  #48
732: ldc           #49
734: invokestatic  #50
737: aload         20
739: invokestatic  #47
742: aload         20
744: invokestatic  #48
747: ldc           #49
749: invokestatic  #50
752: aload         23
754: invokestatic  #76
757: aload         24
759: invokestatic  #76
762: aload         25
764: invokestatic  #47
767: aload         25
769: invokestatic  #48
772: ldc           #49
774: invokestatic  #50
777: aload         26
779: invokestatic  #47
782: aload         26
784: invokestatic  #48
787: ldc           #49
789: invokestatic  #50
792: aload         27
794: invokestatic  #47
797: aload         27
799: invokestatic  #48
802: ldc           #49
804: invokestatic  #50
807: aload         30
809: invokestatic  #76
812: aload         31
814: invokestatic  #76
817: aload         32
819: invokestatic  #47
822: aload         32
824: invokestatic  #48
827: ldc           #49
829: invokestatic  #50
832: aload         33
834: invokestatic  #47
837: aload         33
839: invokestatic  #48
842: ldc           #49
844: invokestatic  #50
847: aload         35
849: invokestatic  #47
852: aload         35
854: invokestatic  #48
857: ldc           #49
859: invokestatic  #50
862: return
Exception table:
from    to  target type
463   480   483   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 2307
End line: 2364
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray15 = gaussianFitter14.getObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter30 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction31 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer37 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker40 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer37.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker40);
        int int42 = levenbergMarquardtOptimizer37.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer37.getMaxEvaluations();
        int int44 = levenbergMarquardtOptimizer37.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter45 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer37);
        double[] doubleArray52 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray53 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray53, true);
        double[] doubleArray56 = gaussianFitter45.fit(doubleArray52);
        double[] doubleArray57 = curveFitter30.fit(parametricUnivariateRealFunction31, doubleArray52);
        double[] doubleArray58 = gaussianFitter14.fit(parametricUnivariateRealFunction16, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = parametric0.value(0.9999999958776927d, doubleArray58);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #188
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: new           #24
87: dup
88: aload_2
89: invokespecial #25
92: astore        6
94: aload         6
96: invokevirtual #62
99: astore        7
101: aconst_null
102: astore        8
104: new           #8
107: dup
108: ldc2_w        #9
111: ldc2_w        #11
114: ldc2_w        #13
117: dconst_1
118: ldc2_w        #13
121: invokespecial #15
124: astore        9
126: new           #16
129: dup
130: ldc2_w        #17
133: ldc2_w        #19
136: invokespecial #21
139: astore        10
141: aload         9
143: aload         10
145: invokevirtual #22
148: aload         9
150: invokevirtual #23
153: istore        11
155: aload         9
157: invokevirtual #23
160: istore        12
162: aload         9
164: invokevirtual #53
167: istore        13
169: new           #67
172: dup
173: aload         9
175: invokespecial #68
178: astore        14
180: aconst_null
181: astore        15
183: new           #8
186: dup
187: ldc2_w        #9
190: ldc2_w        #11
193: ldc2_w        #13
196: dconst_1
197: ldc2_w        #13
200: invokespecial #15
203: astore        16
205: new           #16
208: dup
209: ldc2_w        #17
212: ldc2_w        #19
215: invokespecial #21
218: astore        17
220: aload         16
222: aload         17
224: invokevirtual #22
227: aload         16
229: invokevirtual #23
232: istore        18
234: aload         16
236: invokevirtual #23
239: istore        19
241: aload         16
243: invokevirtual #53
246: istore        20
248: new           #24
251: dup
252: aload         16
254: invokespecial #25
257: astore        21
259: bipush        6
261: newarray       double
263: dup
264: iconst_0
265: ldc2_w        #27
268: dastore
269: dup
270: iconst_1
271: ldc2_w        #9
274: dastore
275: dup
276: iconst_2
277: ldc2_w        #13
280: dastore
281: dup
282: iconst_3
283: ldc2_w        #29
286: dastore
287: dup
288: iconst_4
289: ldc2_w        #17
292: dastore
293: dup
294: iconst_5
295: ldc2_w        #31
298: dastore
299: astore        22
301: aconst_null
302: astore        23
304: new           #33
307: dup
308: aload         22
310: aload         23
312: iconst_1
313: invokespecial #34
316: astore        24
318: aload         21
320: aload         22
322: invokevirtual #54
325: astore        25
327: aload         14
329: aload         15
331: aload         22
333: invokevirtual #89
336: astore        26
338: aload         6
340: aload         8
342: aload         22
344: invokevirtual #55
347: astore        27
349: aload_1
350: ldc2_w        #189
353: aload         27
355: invokevirtual #123
358: dstore        28
360: ldc           #124
362: invokestatic  #37
365: goto          370
368: astore        28
370: new           #39
373: dup
374: invokespecial #40
377: ldc           #41
379: invokevirtual #42
382: iload         4
384: invokevirtual #43
387: ldc           #44
389: invokevirtual #42
392: iconst_0
393: invokevirtual #43
396: ldc           #41
398: invokevirtual #42
401: invokevirtual #45
404: iload         4
406: ifne          413
409: iconst_1
410: goto          414
413: iconst_0
414: invokestatic  #46
417: new           #39
420: dup
421: invokespecial #40
424: ldc           #41
426: invokevirtual #42
429: iload         5
431: invokevirtual #43
434: ldc           #44
436: invokevirtual #42
439: iconst_0
440: invokevirtual #43
443: ldc           #41
445: invokevirtual #42
448: invokevirtual #45
451: iload         5
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #46
464: aload         7
466: invokestatic  #47
469: new           #39
472: dup
473: invokespecial #40
476: ldc           #41
478: invokevirtual #42
481: iload         11
483: invokevirtual #43
486: ldc           #44
488: invokevirtual #42
491: iconst_0
492: invokevirtual #43
495: ldc           #41
497: invokevirtual #42
500: invokevirtual #45
503: iload         11
505: ifne          512
508: iconst_1
509: goto          513
512: iconst_0
513: invokestatic  #46
516: new           #39
519: dup
520: invokespecial #40
523: ldc           #41
525: invokevirtual #42
528: iload         12
530: invokevirtual #43
533: ldc           #44
535: invokevirtual #42
538: iconst_0
539: invokevirtual #43
542: ldc           #41
544: invokevirtual #42
547: invokevirtual #45
550: iload         12
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #46
563: new           #39
566: dup
567: invokespecial #40
570: ldc           #41
572: invokevirtual #42
575: iload         13
577: invokevirtual #43
580: ldc           #44
582: invokevirtual #42
585: iconst_0
586: invokevirtual #43
589: ldc           #41
591: invokevirtual #42
594: invokevirtual #45
597: iload         13
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #46
610: new           #39
613: dup
614: invokespecial #40
617: ldc           #41
619: invokevirtual #42
622: iload         18
624: invokevirtual #43
627: ldc           #44
629: invokevirtual #42
632: iconst_0
633: invokevirtual #43
636: ldc           #41
638: invokevirtual #42
641: invokevirtual #45
644: iload         18
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #46
657: new           #39
660: dup
661: invokespecial #40
664: ldc           #41
666: invokevirtual #42
669: iload         19
671: invokevirtual #43
674: ldc           #44
676: invokevirtual #42
679: iconst_0
680: invokevirtual #43
683: ldc           #41
685: invokevirtual #42
688: invokevirtual #45
691: iload         19
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #46
704: new           #39
707: dup
708: invokespecial #40
711: ldc           #41
713: invokevirtual #42
716: iload         20
718: invokevirtual #43
721: ldc           #44
723: invokevirtual #42
726: iconst_0
727: invokevirtual #43
730: ldc           #41
732: invokevirtual #42
735: invokevirtual #45
738: iload         20
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #46
751: aload         22
753: invokestatic  #47
756: aload         22
758: invokestatic  #48
761: ldc           #49
763: invokestatic  #50
766: aload         25
768: invokestatic  #47
771: aload         25
773: invokestatic  #48
776: ldc           #49
778: invokestatic  #50
781: aload         26
783: invokestatic  #47
786: aload         26
788: invokestatic  #48
791: ldc           #49
793: invokestatic  #50
796: aload         27
798: invokestatic  #47
801: aload         27
803: invokestatic  #48
806: ldc           #49
808: invokestatic  #50
811: return
Exception table:
from    to  target type
349   365   368   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 2367
End line: 2430
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        double[] doubleArray22 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray23 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray22, doubleArray23, true);
        double[] doubleArray26 = gaussianFitter15.fit(doubleArray22);
        double[] doubleArray33 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray34 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray34, true);
        double[] doubleArray37 = vectorialPointValuePair36.getValue();
        double[] doubleArray38 = vectorialPointValuePair36.getValue();
        double[] doubleArray39 = vectorialPointValuePair36.getPoint();
        double[] doubleArray40 = gaussianFitter15.fit(doubleArray39);
        double[] doubleArray47 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray48 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair50 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray48, true);
        double[] doubleArray51 = vectorialPointValuePair50.getValue();
        double[] doubleArray52 = vectorialPointValuePair50.getValue();
        double[] doubleArray53 = vectorialPointValuePair50.getPoint();
        double[] doubleArray54 = vectorialPointValuePair50.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray54);
        double[] doubleArray56 = vectorialPointValuePair55.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray57 = parametric0.gradient(0.10913491056201963d, doubleArray56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray51);
        org.junit.Assert.assertNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #191
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: aload_2
85: invokevirtual #53
88: istore        6
90: new           #24
93: dup
94: aload_2
95: invokespecial #25
98: astore        7
100: bipush        6
102: newarray       double
104: dup
105: iconst_0
106: ldc2_w        #27
109: dastore
110: dup
111: iconst_1
112: ldc2_w        #9
115: dastore
116: dup
117: iconst_2
118: ldc2_w        #13
121: dastore
122: dup
123: iconst_3
124: ldc2_w        #29
127: dastore
128: dup
129: iconst_4
130: ldc2_w        #17
133: dastore
134: dup
135: iconst_5
136: ldc2_w        #31
139: dastore
140: astore        8
142: aconst_null
143: astore        9
145: new           #33
148: dup
149: aload         8
151: aload         9
153: iconst_1
154: invokespecial #34
157: astore        10
159: aload         7
161: aload         8
163: invokevirtual #54
166: astore        11
168: bipush        6
170: newarray       double
172: dup
173: iconst_0
174: ldc2_w        #27
177: dastore
178: dup
179: iconst_1
180: ldc2_w        #9
183: dastore
184: dup
185: iconst_2
186: ldc2_w        #13
189: dastore
190: dup
191: iconst_3
192: ldc2_w        #29
195: dastore
196: dup
197: iconst_4
198: ldc2_w        #17
201: dastore
202: dup
203: iconst_5
204: ldc2_w        #31
207: dastore
208: astore        12
210: aconst_null
211: astore        13
213: new           #33
216: dup
217: aload         12
219: aload         13
221: iconst_1
222: invokespecial #34
225: astore        14
227: aload         14
229: invokevirtual #74
232: astore        15
234: aload         14
236: invokevirtual #74
239: astore        16
241: aload         14
243: invokevirtual #75
246: astore        17
248: aload         7
250: aload         17
252: invokevirtual #54
255: astore        18
257: bipush        6
259: newarray       double
261: dup
262: iconst_0
263: ldc2_w        #27
266: dastore
267: dup
268: iconst_1
269: ldc2_w        #9
272: dastore
273: dup
274: iconst_2
275: ldc2_w        #13
278: dastore
279: dup
280: iconst_3
281: ldc2_w        #29
284: dastore
285: dup
286: iconst_4
287: ldc2_w        #17
290: dastore
291: dup
292: iconst_5
293: ldc2_w        #31
296: dastore
297: astore        19
299: aconst_null
300: astore        20
302: new           #33
305: dup
306: aload         19
308: aload         20
310: iconst_1
311: invokespecial #34
314: astore        21
316: aload         21
318: invokevirtual #74
321: astore        22
323: aload         21
325: invokevirtual #74
328: astore        23
330: aload         21
332: invokevirtual #75
335: astore        24
337: aload         21
339: invokevirtual #151
342: astore        25
344: new           #33
347: dup
348: aload         17
350: aload         25
352: invokespecial #109
355: astore        26
357: aload         26
359: invokevirtual #75
362: astore        27
364: aload_1
365: ldc2_w        #192
368: aload         27
370: invokevirtual #119
373: astore        28
375: ldc           #124
377: invokestatic  #37
380: goto          385
383: astore        28
385: new           #39
388: dup
389: invokespecial #40
392: ldc           #41
394: invokevirtual #42
397: iload         4
399: invokevirtual #43
402: ldc           #44
404: invokevirtual #42
407: iconst_0
408: invokevirtual #43
411: ldc           #41
413: invokevirtual #42
416: invokevirtual #45
419: iload         4
421: ifne          428
424: iconst_1
425: goto          429
428: iconst_0
429: invokestatic  #46
432: new           #39
435: dup
436: invokespecial #40
439: ldc           #41
441: invokevirtual #42
444: iload         5
446: invokevirtual #43
449: ldc           #44
451: invokevirtual #42
454: iconst_0
455: invokevirtual #43
458: ldc           #41
460: invokevirtual #42
463: invokevirtual #45
466: iload         5
468: ifne          475
471: iconst_1
472: goto          476
475: iconst_0
476: invokestatic  #46
479: new           #39
482: dup
483: invokespecial #40
486: ldc           #41
488: invokevirtual #42
491: iload         6
493: invokevirtual #43
496: ldc           #44
498: invokevirtual #42
501: iconst_0
502: invokevirtual #43
505: ldc           #41
507: invokevirtual #42
510: invokevirtual #45
513: iload         6
515: ifne          522
518: iconst_1
519: goto          523
522: iconst_0
523: invokestatic  #46
526: aload         8
528: invokestatic  #47
531: aload         8
533: invokestatic  #48
536: ldc           #49
538: invokestatic  #50
541: aload         11
543: invokestatic  #47
546: aload         11
548: invokestatic  #48
551: ldc           #49
553: invokestatic  #50
556: aload         12
558: invokestatic  #47
561: aload         12
563: invokestatic  #48
566: ldc           #49
568: invokestatic  #50
571: aload         15
573: invokestatic  #76
576: aload         16
578: invokestatic  #76
581: aload         17
583: invokestatic  #47
586: aload         17
588: invokestatic  #48
591: ldc           #49
593: invokestatic  #50
596: aload         18
598: invokestatic  #47
601: aload         18
603: invokestatic  #48
606: ldc           #49
608: invokestatic  #50
611: aload         19
613: invokestatic  #47
616: aload         19
618: invokestatic  #48
621: ldc           #49
623: invokestatic  #50
626: aload         22
628: invokestatic  #76
631: aload         23
633: invokestatic  #76
636: aload         24
638: invokestatic  #47
641: aload         24
643: invokestatic  #48
646: ldc           #49
648: invokestatic  #50
651: aload         25
653: invokestatic  #47
656: aload         25
658: invokestatic  #48
661: ldc           #49
663: invokestatic  #50
666: aload         27
668: invokestatic  #47
671: aload         27
673: invokestatic  #48
676: ldc           #49
678: invokestatic  #50
681: return
Exception table:
from    to  target type
364   380   383   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 2433
End line: 2455
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint((double) 1L, 0.6444303510232912d);
        gaussianFitter12.addObservedPoint(0.9366445920399754d, 3.1415926535897936d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray20 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 2 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #194
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: aload         5
94: dconst_1
95: ldc2_w        #195
98: invokevirtual #158
101: aload         5
103: ldc2_w        #197
106: ldc2_w        #162
109: invokevirtual #158
112: aload         5
114: invokevirtual #63
117: astore        7
119: ldc           #199
121: invokestatic  #37
124: goto          129
127: astore        7
129: new           #39
132: dup
133: invokespecial #40
136: ldc           #41
138: invokevirtual #42
141: iload_3
142: invokevirtual #43
145: ldc           #44
147: invokevirtual #42
150: iconst_0
151: invokevirtual #43
154: ldc           #41
156: invokevirtual #42
159: invokevirtual #45
162: iload_3
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #46
174: new           #39
177: dup
178: invokespecial #40
181: ldc           #41
183: invokevirtual #42
186: iload         4
188: invokevirtual #43
191: ldc           #44
193: invokevirtual #42
196: iconst_0
197: invokevirtual #43
200: ldc           #41
202: invokevirtual #42
205: invokevirtual #45
208: iload         4
210: ifne          217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #46
221: aload         6
223: invokestatic  #47
226: return
Exception table:
from    to  target type
112   124   127   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 2458
End line: 2485
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        double double15 = levenbergMarquardtOptimizer5.getRMS();
        int int16 = levenbergMarquardtOptimizer5.getEvaluations();
        int int17 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker18 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        int int19 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double20 = levenbergMarquardtOptimizer5.getRMS();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #200
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: aload_1
92: invokevirtual #53
95: istore        7
97: aload_1
98: invokevirtual #201
101: dstore        8
103: aload_1
104: invokevirtual #53
107: istore        10
109: aload_1
110: invokevirtual #160
113: istore        11
115: aload_1
116: invokevirtual #73
119: astore        12
121: aload_1
122: invokevirtual #23
125: istore        13
127: aload_1
128: invokevirtual #201
131: dstore        14
133: new           #39
136: dup
137: invokespecial #40
140: ldc           #41
142: invokevirtual #42
145: iload_3
146: invokevirtual #43
149: ldc           #44
151: invokevirtual #42
154: iconst_0
155: invokevirtual #43
158: ldc           #41
160: invokevirtual #42
163: invokevirtual #45
166: iload_3
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #46
178: new           #39
181: dup
182: invokespecial #40
185: ldc           #41
187: invokevirtual #42
190: iload         4
192: invokevirtual #43
195: ldc           #44
197: invokevirtual #42
200: iconst_0
201: invokevirtual #43
204: ldc           #41
206: invokevirtual #42
209: invokevirtual #45
212: iload         4
214: ifne          221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #46
225: new           #39
228: dup
229: invokespecial #40
232: ldc           #41
234: invokevirtual #42
237: iload         5
239: invokevirtual #43
242: ldc           #44
244: invokevirtual #42
247: iconst_0
248: invokevirtual #43
251: ldc           #41
253: invokevirtual #42
256: invokevirtual #45
259: iload         5
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #46
272: new           #39
275: dup
276: invokespecial #40
279: ldc           #41
281: invokevirtual #42
284: iload         7
286: invokevirtual #43
289: ldc           #44
291: invokevirtual #42
294: iconst_0
295: invokevirtual #43
298: ldc           #41
300: invokevirtual #42
303: invokevirtual #45
306: iload         7
308: ifne          315
311: iconst_1
312: goto          316
315: iconst_0
316: invokestatic  #46
319: dload         8
321: invokestatic  #202
324: invokestatic  #203
327: new           #39
330: dup
331: invokespecial #40
334: ldc           #41
336: invokevirtual #42
339: iload         10
341: invokevirtual #43
344: ldc           #44
346: invokevirtual #42
349: iconst_0
350: invokevirtual #43
353: ldc           #41
355: invokevirtual #42
358: invokevirtual #45
361: iload         10
363: ifne          370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #46
374: new           #39
377: dup
378: invokespecial #40
381: ldc           #41
383: invokevirtual #42
386: iload         11
388: invokevirtual #43
391: ldc           #44
393: invokevirtual #42
396: iconst_0
397: invokevirtual #43
400: ldc           #41
402: invokevirtual #42
405: invokevirtual #45
408: iload         11
410: ifne          417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #46
421: aload         12
423: invokestatic  #47
426: new           #39
429: dup
430: invokespecial #40
433: ldc           #41
435: invokevirtual #42
438: iload         13
440: invokevirtual #43
443: ldc           #44
445: invokevirtual #42
448: iconst_0
449: invokevirtual #43
452: ldc           #41
454: invokevirtual #42
457: invokevirtual #45
460: iload         13
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #46
473: dload         14
475: invokestatic  #202
478: invokestatic  #203
481: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 2488
End line: 2561
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double17 = simpleVectorialValueChecker16.getAbsoluteThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker16);
        double double19 = simpleVectorialValueChecker16.getRelativeThreshold();
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer27 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker30 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer27.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker30);
        int int32 = levenbergMarquardtOptimizer27.getMaxEvaluations();
        int int33 = levenbergMarquardtOptimizer27.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter34 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer27);
        gaussianFitter34.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction36 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer42 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker45 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer42.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker45);
        int int47 = levenbergMarquardtOptimizer42.getMaxEvaluations();
        int int48 = levenbergMarquardtOptimizer42.getMaxEvaluations();
        int int49 = levenbergMarquardtOptimizer42.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter50 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer42);
        double[] doubleArray57 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray58 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair60 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray57, doubleArray58, true);
        double[] doubleArray61 = gaussianFitter50.fit(doubleArray57);
        double[] doubleArray62 = gaussianFitter34.fit(parametricUnivariateRealFunction36, doubleArray61);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair63 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray21, doubleArray61);
        double[] doubleArray70 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray71 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair73 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray70, doubleArray71, true);
        double[] doubleArray74 = vectorialPointValuePair73.getValue();
        double[] doubleArray75 = vectorialPointValuePair73.getValue();
        double[] doubleArray76 = vectorialPointValuePair73.getValueRef();
        double[] doubleArray77 = vectorialPointValuePair73.getValueRef();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = simpleVectorialValueChecker16.converged(3, vectorialPointValuePair63, vectorialPointValuePair73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(doubleArray75);
        org.junit.Assert.assertNull(doubleArray76);
        org.junit.Assert.assertNull(doubleArray77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #204
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: new           #16
90: dup
91: ldc2_w        #17
94: ldc2_w        #19
97: invokespecial #21
100: astore        8
102: aload         8
104: invokevirtual #205
107: dstore        9
109: aload_1
110: aload         8
112: invokevirtual #22
115: aload         8
117: invokevirtual #88
120: dstore        11
122: aconst_null
123: astore        13
125: new           #8
128: dup
129: ldc2_w        #9
132: ldc2_w        #11
135: ldc2_w        #13
138: dconst_1
139: ldc2_w        #13
142: invokespecial #15
145: astore        14
147: new           #16
150: dup
151: ldc2_w        #17
154: ldc2_w        #19
157: invokespecial #21
160: astore        15
162: aload         14
164: aload         15
166: invokevirtual #22
169: aload         14
171: invokevirtual #23
174: istore        16
176: aload         14
178: invokevirtual #23
181: istore        17
183: new           #24
186: dup
187: aload         14
189: invokespecial #25
192: astore        18
194: aload         18
196: invokevirtual #52
199: aconst_null
200: astore        19
202: new           #8
205: dup
206: ldc2_w        #9
209: ldc2_w        #11
212: ldc2_w        #13
215: dconst_1
216: ldc2_w        #13
219: invokespecial #15
222: astore        20
224: new           #16
227: dup
228: ldc2_w        #17
231: ldc2_w        #19
234: invokespecial #21
237: astore        21
239: aload         20
241: aload         21
243: invokevirtual #22
246: aload         20
248: invokevirtual #23
251: istore        22
253: aload         20
255: invokevirtual #23
258: istore        23
260: aload         20
262: invokevirtual #53
265: istore        24
267: new           #24
270: dup
271: aload         20
273: invokespecial #25
276: astore        25
278: bipush        6
280: newarray       double
282: dup
283: iconst_0
284: ldc2_w        #27
287: dastore
288: dup
289: iconst_1
290: ldc2_w        #9
293: dastore
294: dup
295: iconst_2
296: ldc2_w        #13
299: dastore
300: dup
301: iconst_3
302: ldc2_w        #29
305: dastore
306: dup
307: iconst_4
308: ldc2_w        #17
311: dastore
312: dup
313: iconst_5
314: ldc2_w        #31
317: dastore
318: astore        26
320: aconst_null
321: astore        27
323: new           #33
326: dup
327: aload         26
329: aload         27
331: iconst_1
332: invokespecial #34
335: astore        28
337: aload         25
339: aload         26
341: invokevirtual #54
344: astore        29
346: aload         18
348: aload         19
350: aload         29
352: invokevirtual #55
355: astore        30
357: new           #33
360: dup
361: aload         13
363: aload         29
365: invokespecial #109
368: astore        31
370: bipush        6
372: newarray       double
374: dup
375: iconst_0
376: ldc2_w        #27
379: dastore
380: dup
381: iconst_1
382: ldc2_w        #9
385: dastore
386: dup
387: iconst_2
388: ldc2_w        #13
391: dastore
392: dup
393: iconst_3
394: ldc2_w        #29
397: dastore
398: dup
399: iconst_4
400: ldc2_w        #17
403: dastore
404: dup
405: iconst_5
406: ldc2_w        #31
409: dastore
410: astore        32
412: aconst_null
413: astore        33
415: new           #33
418: dup
419: aload         32
421: aload         33
423: iconst_1
424: invokespecial #34
427: astore        34
429: aload         34
431: invokevirtual #74
434: astore        35
436: aload         34
438: invokevirtual #74
441: astore        36
443: aload         34
445: invokevirtual #183
448: astore        37
450: aload         34
452: invokevirtual #183
455: astore        38
457: aload         8
459: iconst_3
460: aload         31
462: aload         34
464: invokevirtual #90
467: istore        39
469: ldc           #36
471: invokestatic  #37
474: goto          479
477: astore        39
479: new           #39
482: dup
483: invokespecial #40
486: ldc           #41
488: invokevirtual #42
491: iload_3
492: invokevirtual #43
495: ldc           #44
497: invokevirtual #42
500: iconst_0
501: invokevirtual #43
504: ldc           #41
506: invokevirtual #42
509: invokevirtual #45
512: iload_3
513: ifne          520
516: iconst_1
517: goto          521
520: iconst_0
521: invokestatic  #46
524: new           #39
527: dup
528: invokespecial #40
531: ldc           #41
533: invokevirtual #42
536: iload         4
538: invokevirtual #43
541: ldc           #44
543: invokevirtual #42
546: iconst_0
547: invokevirtual #43
550: ldc           #41
552: invokevirtual #42
555: invokevirtual #45
558: iload         4
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #46
571: new           #39
574: dup
575: invokespecial #40
578: ldc           #41
580: invokevirtual #42
583: dload         5
585: invokevirtual #59
588: ldc           #44
590: invokevirtual #42
593: dconst_0
594: invokevirtual #59
597: ldc           #41
599: invokevirtual #42
602: invokevirtual #45
605: dload         5
607: dconst_0
608: dcmpl
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #46
620: new           #39
623: dup
624: invokespecial #40
627: ldc           #41
629: invokevirtual #42
632: iload         7
634: invokevirtual #43
637: ldc           #44
639: invokevirtual #42
642: iconst_0
643: invokevirtual #43
646: ldc           #41
648: invokevirtual #42
651: invokevirtual #45
654: iload         7
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #46
667: new           #39
670: dup
671: invokespecial #40
674: ldc           #41
676: invokevirtual #42
679: dload         9
681: invokevirtual #59
684: ldc           #44
686: invokevirtual #42
689: ldc2_w        #19
692: invokevirtual #59
695: ldc           #41
697: invokevirtual #42
700: invokevirtual #45
703: dload         9
705: ldc2_w        #19
708: dcmpl
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #46
720: new           #39
723: dup
724: invokespecial #40
727: ldc           #41
729: invokevirtual #42
732: dload         11
734: invokevirtual #59
737: ldc           #44
739: invokevirtual #42
742: ldc2_w        #17
745: invokevirtual #59
748: ldc           #41
750: invokevirtual #42
753: invokevirtual #45
756: dload         11
758: ldc2_w        #17
761: dcmpl
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #46
773: new           #39
776: dup
777: invokespecial #40
780: ldc           #41
782: invokevirtual #42
785: iload         16
787: invokevirtual #43
790: ldc           #44
792: invokevirtual #42
795: iconst_0
796: invokevirtual #43
799: ldc           #41
801: invokevirtual #42
804: invokevirtual #45
807: iload         16
809: ifne          816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #46
820: new           #39
823: dup
824: invokespecial #40
827: ldc           #41
829: invokevirtual #42
832: iload         17
834: invokevirtual #43
837: ldc           #44
839: invokevirtual #42
842: iconst_0
843: invokevirtual #43
846: ldc           #41
848: invokevirtual #42
851: invokevirtual #45
854: iload         17
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #46
867: new           #39
870: dup
871: invokespecial #40
874: ldc           #41
876: invokevirtual #42
879: iload         22
881: invokevirtual #43
884: ldc           #44
886: invokevirtual #42
889: iconst_0
890: invokevirtual #43
893: ldc           #41
895: invokevirtual #42
898: invokevirtual #45
901: iload         22
903: ifne          910
906: iconst_1
907: goto          911
910: iconst_0
911: invokestatic  #46
914: new           #39
917: dup
918: invokespecial #40
921: ldc           #41
923: invokevirtual #42
926: iload         23
928: invokevirtual #43
931: ldc           #44
933: invokevirtual #42
936: iconst_0
937: invokevirtual #43
940: ldc           #41
942: invokevirtual #42
945: invokevirtual #45
948: iload         23
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #46
961: new           #39
964: dup
965: invokespecial #40
968: ldc           #41
970: invokevirtual #42
973: iload         24
975: invokevirtual #43
978: ldc           #44
980: invokevirtual #42
983: iconst_0
984: invokevirtual #43
987: ldc           #41
989: invokevirtual #42
992: invokevirtual #45
995: iload         24
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #46
1008: aload         26
1010: invokestatic  #47
1013: aload         26
1015: invokestatic  #48
1018: ldc           #49
1020: invokestatic  #50
1023: aload         29
1025: invokestatic  #47
1028: aload         29
1030: invokestatic  #48
1033: ldc           #49
1035: invokestatic  #50
1038: aload         30
1040: invokestatic  #47
1043: aload         30
1045: invokestatic  #48
1048: ldc           #49
1050: invokestatic  #50
1053: aload         32
1055: invokestatic  #47
1058: aload         32
1060: invokestatic  #48
1063: ldc           #49
1065: invokestatic  #50
1068: aload         35
1070: invokestatic  #76
1073: aload         36
1075: invokestatic  #76
1078: aload         37
1080: invokestatic  #76
1083: aload         38
1085: invokestatic  #76
1088: return
Exception table:
from    to  target type
457   474   477   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 2564
End line: 2622
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        double[] doubleArray41 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer47 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker50 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer47.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker50);
        int int52 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer47.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter55 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer47);
        double[] doubleArray62 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray63 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray63, true);
        double[] doubleArray66 = gaussianFitter55.fit(doubleArray62);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair67 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray62);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair68 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray62);
        double[] doubleArray69 = vectorialPointValuePair68.getValue();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #206
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #52
90: aconst_null
91: astore        6
93: new           #8
96: dup
97: ldc2_w        #9
100: ldc2_w        #11
103: ldc2_w        #13
106: dconst_1
107: ldc2_w        #13
110: invokespecial #15
113: astore        7
115: new           #16
118: dup
119: ldc2_w        #17
122: ldc2_w        #19
125: invokespecial #21
128: astore        8
130: aload         7
132: aload         8
134: invokevirtual #22
137: aload         7
139: invokevirtual #23
142: istore        9
144: aload         7
146: invokevirtual #23
149: istore        10
151: aload         7
153: invokevirtual #53
156: istore        11
158: new           #24
161: dup
162: aload         7
164: invokespecial #25
167: astore        12
169: bipush        6
171: newarray       double
173: dup
174: iconst_0
175: ldc2_w        #27
178: dastore
179: dup
180: iconst_1
181: ldc2_w        #9
184: dastore
185: dup
186: iconst_2
187: ldc2_w        #13
190: dastore
191: dup
192: iconst_3
193: ldc2_w        #29
196: dastore
197: dup
198: iconst_4
199: ldc2_w        #17
202: dastore
203: dup
204: iconst_5
205: ldc2_w        #31
208: dastore
209: astore        13
211: aconst_null
212: astore        14
214: new           #33
217: dup
218: aload         13
220: aload         14
222: iconst_1
223: invokespecial #34
226: astore        15
228: aload         12
230: aload         13
232: invokevirtual #54
235: astore        16
237: aload         5
239: aload         6
241: aload         16
243: invokevirtual #55
246: astore        17
248: aconst_null
249: astore        18
251: new           #8
254: dup
255: ldc2_w        #9
258: ldc2_w        #11
261: ldc2_w        #13
264: dconst_1
265: ldc2_w        #13
268: invokespecial #15
271: astore        19
273: new           #16
276: dup
277: ldc2_w        #17
280: ldc2_w        #19
283: invokespecial #21
286: astore        20
288: aload         19
290: aload         20
292: invokevirtual #22
295: aload         19
297: invokevirtual #23
300: istore        21
302: aload         19
304: invokevirtual #23
307: istore        22
309: aload         19
311: invokevirtual #53
314: istore        23
316: new           #24
319: dup
320: aload         19
322: invokespecial #25
325: astore        24
327: bipush        6
329: newarray       double
331: dup
332: iconst_0
333: ldc2_w        #27
336: dastore
337: dup
338: iconst_1
339: ldc2_w        #9
342: dastore
343: dup
344: iconst_2
345: ldc2_w        #13
348: dastore
349: dup
350: iconst_3
351: ldc2_w        #29
354: dastore
355: dup
356: iconst_4
357: ldc2_w        #17
360: dastore
361: dup
362: iconst_5
363: ldc2_w        #31
366: dastore
367: astore        25
369: aconst_null
370: astore        26
372: new           #33
375: dup
376: aload         25
378: aload         26
380: iconst_1
381: invokespecial #34
384: astore        27
386: aload         24
388: aload         25
390: invokevirtual #54
393: astore        28
395: new           #33
398: dup
399: aload         18
401: aload         25
403: invokespecial #109
406: astore        29
408: new           #33
411: dup
412: aload         17
414: aload         25
416: invokespecial #109
419: astore        30
421: aload         30
423: invokevirtual #74
426: astore        31
428: new           #39
431: dup
432: invokespecial #40
435: ldc           #41
437: invokevirtual #42
440: iload_3
441: invokevirtual #43
444: ldc           #44
446: invokevirtual #42
449: iconst_0
450: invokevirtual #43
453: ldc           #41
455: invokevirtual #42
458: invokevirtual #45
461: iload_3
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #46
473: new           #39
476: dup
477: invokespecial #40
480: ldc           #41
482: invokevirtual #42
485: iload         4
487: invokevirtual #43
490: ldc           #44
492: invokevirtual #42
495: iconst_0
496: invokevirtual #43
499: ldc           #41
501: invokevirtual #42
504: invokevirtual #45
507: iload         4
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #46
520: new           #39
523: dup
524: invokespecial #40
527: ldc           #41
529: invokevirtual #42
532: iload         9
534: invokevirtual #43
537: ldc           #44
539: invokevirtual #42
542: iconst_0
543: invokevirtual #43
546: ldc           #41
548: invokevirtual #42
551: invokevirtual #45
554: iload         9
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #46
567: new           #39
570: dup
571: invokespecial #40
574: ldc           #41
576: invokevirtual #42
579: iload         10
581: invokevirtual #43
584: ldc           #44
586: invokevirtual #42
589: iconst_0
590: invokevirtual #43
593: ldc           #41
595: invokevirtual #42
598: invokevirtual #45
601: iload         10
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #46
614: new           #39
617: dup
618: invokespecial #40
621: ldc           #41
623: invokevirtual #42
626: iload         11
628: invokevirtual #43
631: ldc           #44
633: invokevirtual #42
636: iconst_0
637: invokevirtual #43
640: ldc           #41
642: invokevirtual #42
645: invokevirtual #45
648: iload         11
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #46
661: aload         13
663: invokestatic  #47
666: aload         13
668: invokestatic  #48
671: ldc           #49
673: invokestatic  #50
676: aload         16
678: invokestatic  #47
681: aload         16
683: invokestatic  #48
686: ldc           #49
688: invokestatic  #50
691: aload         17
693: invokestatic  #47
696: aload         17
698: invokestatic  #48
701: ldc           #49
703: invokestatic  #50
706: new           #39
709: dup
710: invokespecial #40
713: ldc           #41
715: invokevirtual #42
718: iload         21
720: invokevirtual #43
723: ldc           #44
725: invokevirtual #42
728: iconst_0
729: invokevirtual #43
732: ldc           #41
734: invokevirtual #42
737: invokevirtual #45
740: iload         21
742: ifne          749
745: iconst_1
746: goto          750
749: iconst_0
750: invokestatic  #46
753: new           #39
756: dup
757: invokespecial #40
760: ldc           #41
762: invokevirtual #42
765: iload         22
767: invokevirtual #43
770: ldc           #44
772: invokevirtual #42
775: iconst_0
776: invokevirtual #43
779: ldc           #41
781: invokevirtual #42
784: invokevirtual #45
787: iload         22
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #46
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         23
814: invokevirtual #43
817: ldc           #44
819: invokevirtual #42
822: iconst_0
823: invokevirtual #43
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         23
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #46
847: aload         25
849: invokestatic  #47
852: aload         25
854: invokestatic  #48
857: ldc           #49
859: invokestatic  #50
862: aload         28
864: invokestatic  #47
867: aload         28
869: invokestatic  #48
872: ldc           #49
874: invokestatic  #50
877: aload         31
879: invokestatic  #47
882: aload         31
884: invokestatic  #48
887: ldc           #49
889: invokestatic  #50
892: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 2625
End line: 2711
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric15 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = curveFitter14.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric15, doubleArray40);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer48 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker51 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer48.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker51);
        int int53 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter55 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer48);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer61 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker64 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer61.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker64);
        int int66 = levenbergMarquardtOptimizer61.getMaxEvaluations();
        int int67 = levenbergMarquardtOptimizer61.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter68 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer61);
        gaussianFitter68.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction70 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer76 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker79 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer76.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker79);
        int int81 = levenbergMarquardtOptimizer76.getMaxEvaluations();
        int int82 = levenbergMarquardtOptimizer76.getMaxEvaluations();
        int int83 = levenbergMarquardtOptimizer76.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter84 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer76);
        double[] doubleArray91 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray92 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair94 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray91, doubleArray92, true);
        double[] doubleArray95 = gaussianFitter84.fit(doubleArray91);
        double[] doubleArray96 = gaussianFitter68.fit(parametricUnivariateRealFunction70, doubleArray95);
        double[] doubleArray97 = gaussianFitter55.fit(doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray98 = parametric15.gradient(32.000003814697266d, doubleArray97);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #207
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: new           #67
90: dup
91: aload_1
92: invokespecial #68
95: astore        8
97: new           #117
100: dup
101: invokespecial #118
104: astore        9
106: new           #8
109: dup
110: ldc2_w        #9
113: ldc2_w        #11
116: ldc2_w        #13
119: dconst_1
120: ldc2_w        #13
123: invokespecial #15
126: astore        10
128: new           #16
131: dup
132: ldc2_w        #17
135: ldc2_w        #19
138: invokespecial #21
141: astore        11
143: aload         10
145: aload         11
147: invokevirtual #22
150: aload         10
152: invokevirtual #23
155: istore        12
157: aload         10
159: invokevirtual #23
162: istore        13
164: aload         10
166: invokevirtual #53
169: istore        14
171: new           #24
174: dup
175: aload         10
177: invokespecial #25
180: astore        15
182: bipush        6
184: newarray       double
186: dup
187: iconst_0
188: ldc2_w        #27
191: dastore
192: dup
193: iconst_1
194: ldc2_w        #9
197: dastore
198: dup
199: iconst_2
200: ldc2_w        #13
203: dastore
204: dup
205: iconst_3
206: ldc2_w        #29
209: dastore
210: dup
211: iconst_4
212: ldc2_w        #17
215: dastore
216: dup
217: iconst_5
218: ldc2_w        #31
221: dastore
222: astore        16
224: aconst_null
225: astore        17
227: new           #33
230: dup
231: aload         16
233: aload         17
235: iconst_1
236: invokespecial #34
239: astore        18
241: aload         15
243: aload         16
245: invokevirtual #54
248: astore        19
250: aload         8
252: aload         9
254: aload         19
256: invokevirtual #89
259: astore        20
261: new           #8
264: dup
265: ldc2_w        #9
268: ldc2_w        #11
271: ldc2_w        #13
274: dconst_1
275: ldc2_w        #13
278: invokespecial #15
281: astore        21
283: new           #16
286: dup
287: ldc2_w        #17
290: ldc2_w        #19
293: invokespecial #21
296: astore        22
298: aload         21
300: aload         22
302: invokevirtual #22
305: aload         21
307: invokevirtual #23
310: istore        23
312: aload         21
314: invokevirtual #23
317: istore        24
319: new           #24
322: dup
323: aload         21
325: invokespecial #25
328: astore        25
330: new           #8
333: dup
334: ldc2_w        #9
337: ldc2_w        #11
340: ldc2_w        #13
343: dconst_1
344: ldc2_w        #13
347: invokespecial #15
350: astore        26
352: new           #16
355: dup
356: ldc2_w        #17
359: ldc2_w        #19
362: invokespecial #21
365: astore        27
367: aload         26
369: aload         27
371: invokevirtual #22
374: aload         26
376: invokevirtual #23
379: istore        28
381: aload         26
383: invokevirtual #23
386: istore        29
388: new           #24
391: dup
392: aload         26
394: invokespecial #25
397: astore        30
399: aload         30
401: invokevirtual #52
404: aconst_null
405: astore        31
407: new           #8
410: dup
411: ldc2_w        #9
414: ldc2_w        #11
417: ldc2_w        #13
420: dconst_1
421: ldc2_w        #13
424: invokespecial #15
427: astore        32
429: new           #16
432: dup
433: ldc2_w        #17
436: ldc2_w        #19
439: invokespecial #21
442: astore        33
444: aload         32
446: aload         33
448: invokevirtual #22
451: aload         32
453: invokevirtual #23
456: istore        34
458: aload         32
460: invokevirtual #23
463: istore        35
465: aload         32
467: invokevirtual #53
470: istore        36
472: new           #24
475: dup
476: aload         32
478: invokespecial #25
481: astore        37
483: bipush        6
485: newarray       double
487: dup
488: iconst_0
489: ldc2_w        #27
492: dastore
493: dup
494: iconst_1
495: ldc2_w        #9
498: dastore
499: dup
500: iconst_2
501: ldc2_w        #13
504: dastore
505: dup
506: iconst_3
507: ldc2_w        #29
510: dastore
511: dup
512: iconst_4
513: ldc2_w        #17
516: dastore
517: dup
518: iconst_5
519: ldc2_w        #31
522: dastore
523: astore        38
525: aconst_null
526: astore        39
528: new           #33
531: dup
532: aload         38
534: aload         39
536: iconst_1
537: invokespecial #34
540: astore        40
542: aload         37
544: aload         38
546: invokevirtual #54
549: astore        41
551: aload         30
553: aload         31
555: aload         41
557: invokevirtual #55
560: astore        42
562: aload         25
564: aload         41
566: invokevirtual #54
569: astore        43
571: aload         9
573: ldc2_w        #208
576: aload         43
578: invokevirtual #119
581: astore        44
583: ldc           #124
585: invokestatic  #37
588: goto          593
591: astore        44
593: new           #39
596: dup
597: invokespecial #40
600: ldc           #41
602: invokevirtual #42
605: iload_3
606: invokevirtual #43
609: ldc           #44
611: invokevirtual #42
614: iconst_0
615: invokevirtual #43
618: ldc           #41
620: invokevirtual #42
623: invokevirtual #45
626: iload_3
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #46
638: new           #39
641: dup
642: invokespecial #40
645: ldc           #41
647: invokevirtual #42
650: iload         4
652: invokevirtual #43
655: ldc           #44
657: invokevirtual #42
660: iconst_0
661: invokevirtual #43
664: ldc           #41
666: invokevirtual #42
669: invokevirtual #45
672: iload         4
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #46
685: new           #39
688: dup
689: invokespecial #40
692: ldc           #41
694: invokevirtual #42
697: dload         5
699: invokevirtual #59
702: ldc           #44
704: invokevirtual #42
707: dconst_0
708: invokevirtual #59
711: ldc           #41
713: invokevirtual #42
716: invokevirtual #45
719: dload         5
721: dconst_0
722: dcmpl
723: ifne          730
726: iconst_1
727: goto          731
730: iconst_0
731: invokestatic  #46
734: new           #39
737: dup
738: invokespecial #40
741: ldc           #41
743: invokevirtual #42
746: iload         7
748: invokevirtual #43
751: ldc           #44
753: invokevirtual #42
756: iconst_0
757: invokevirtual #43
760: ldc           #41
762: invokevirtual #42
765: invokevirtual #45
768: iload         7
770: ifne          777
773: iconst_1
774: goto          778
777: iconst_0
778: invokestatic  #46
781: new           #39
784: dup
785: invokespecial #40
788: ldc           #41
790: invokevirtual #42
793: iload         12
795: invokevirtual #43
798: ldc           #44
800: invokevirtual #42
803: iconst_0
804: invokevirtual #43
807: ldc           #41
809: invokevirtual #42
812: invokevirtual #45
815: iload         12
817: ifne          824
820: iconst_1
821: goto          825
824: iconst_0
825: invokestatic  #46
828: new           #39
831: dup
832: invokespecial #40
835: ldc           #41
837: invokevirtual #42
840: iload         13
842: invokevirtual #43
845: ldc           #44
847: invokevirtual #42
850: iconst_0
851: invokevirtual #43
854: ldc           #41
856: invokevirtual #42
859: invokevirtual #45
862: iload         13
864: ifne          871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #46
875: new           #39
878: dup
879: invokespecial #40
882: ldc           #41
884: invokevirtual #42
887: iload         14
889: invokevirtual #43
892: ldc           #44
894: invokevirtual #42
897: iconst_0
898: invokevirtual #43
901: ldc           #41
903: invokevirtual #42
906: invokevirtual #45
909: iload         14
911: ifne          918
914: iconst_1
915: goto          919
918: iconst_0
919: invokestatic  #46
922: aload         16
924: invokestatic  #47
927: aload         16
929: invokestatic  #48
932: ldc           #49
934: invokestatic  #50
937: aload         19
939: invokestatic  #47
942: aload         19
944: invokestatic  #48
947: ldc           #49
949: invokestatic  #50
952: aload         20
954: invokestatic  #47
957: aload         20
959: invokestatic  #48
962: ldc           #49
964: invokestatic  #50
967: new           #39
970: dup
971: invokespecial #40
974: ldc           #41
976: invokevirtual #42
979: iload         23
981: invokevirtual #43
984: ldc           #44
986: invokevirtual #42
989: iconst_0
990: invokevirtual #43
993: ldc           #41
995: invokevirtual #42
998: invokevirtual #45
1001: iload         23
1003: ifne          1010
1006: iconst_1
1007: goto          1011
1010: iconst_0
1011: invokestatic  #46
1014: new           #39
1017: dup
1018: invokespecial #40
1021: ldc           #41
1023: invokevirtual #42
1026: iload         24
1028: invokevirtual #43
1031: ldc           #44
1033: invokevirtual #42
1036: iconst_0
1037: invokevirtual #43
1040: ldc           #41
1042: invokevirtual #42
1045: invokevirtual #45
1048: iload         24
1050: ifne          1057
1053: iconst_1
1054: goto          1058
1057: iconst_0
1058: invokestatic  #46
1061: new           #39
1064: dup
1065: invokespecial #40
1068: ldc           #41
1070: invokevirtual #42
1073: iload         28
1075: invokevirtual #43
1078: ldc           #44
1080: invokevirtual #42
1083: iconst_0
1084: invokevirtual #43
1087: ldc           #41
1089: invokevirtual #42
1092: invokevirtual #45
1095: iload         28
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #46
1108: new           #39
1111: dup
1112: invokespecial #40
1115: ldc           #41
1117: invokevirtual #42
1120: iload         29
1122: invokevirtual #43
1125: ldc           #44
1127: invokevirtual #42
1130: iconst_0
1131: invokevirtual #43
1134: ldc           #41
1136: invokevirtual #42
1139: invokevirtual #45
1142: iload         29
1144: ifne          1151
1147: iconst_1
1148: goto          1152
1151: iconst_0
1152: invokestatic  #46
1155: new           #39
1158: dup
1159: invokespecial #40
1162: ldc           #41
1164: invokevirtual #42
1167: iload         34
1169: invokevirtual #43
1172: ldc           #44
1174: invokevirtual #42
1177: iconst_0
1178: invokevirtual #43
1181: ldc           #41
1183: invokevirtual #42
1186: invokevirtual #45
1189: iload         34
1191: ifne          1198
1194: iconst_1
1195: goto          1199
1198: iconst_0
1199: invokestatic  #46
1202: new           #39
1205: dup
1206: invokespecial #40
1209: ldc           #41
1211: invokevirtual #42
1214: iload         35
1216: invokevirtual #43
1219: ldc           #44
1221: invokevirtual #42
1224: iconst_0
1225: invokevirtual #43
1228: ldc           #41
1230: invokevirtual #42
1233: invokevirtual #45
1236: iload         35
1238: ifne          1245
1241: iconst_1
1242: goto          1246
1245: iconst_0
1246: invokestatic  #46
1249: new           #39
1252: dup
1253: invokespecial #40
1256: ldc           #41
1258: invokevirtual #42
1261: iload         36
1263: invokevirtual #43
1266: ldc           #44
1268: invokevirtual #42
1271: iconst_0
1272: invokevirtual #43
1275: ldc           #41
1277: invokevirtual #42
1280: invokevirtual #45
1283: iload         36
1285: ifne          1292
1288: iconst_1
1289: goto          1293
1292: iconst_0
1293: invokestatic  #46
1296: aload         38
1298: invokestatic  #47
1301: aload         38
1303: invokestatic  #48
1306: ldc           #49
1308: invokestatic  #50
1311: aload         41
1313: invokestatic  #47
1316: aload         41
1318: invokestatic  #48
1321: ldc           #49
1323: invokestatic  #50
1326: aload         42
1328: invokestatic  #47
1331: aload         42
1333: invokestatic  #48
1336: ldc           #49
1338: invokestatic  #50
1341: aload         43
1343: invokestatic  #47
1346: aload         43
1348: invokestatic  #48
1351: ldc           #49
1353: invokestatic  #50
1356: return
Exception table:
from    to  target type
571   588   591   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 2714
End line: 2767
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter27 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        gaussianFitter27.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction29 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer35 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker38 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer35.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker38);
        int int40 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int41 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer35.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter43 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer35);
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = gaussianFitter43.fit(doubleArray50);
        double[] doubleArray55 = gaussianFitter27.fit(parametricUnivariateRealFunction29, doubleArray54);
        double[] doubleArray56 = gaussianFitter14.fit(doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            double double57 = parametric0.value((double) 17.5f, doubleArray56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #210
19: aastore
20: invokevirtual #7
23: pop
24: new           #117
27: dup
28: invokespecial #118
31: astore_1
32: new           #8
35: dup
36: ldc2_w        #9
39: ldc2_w        #11
42: ldc2_w        #13
45: dconst_1
46: ldc2_w        #13
49: invokespecial #15
52: astore_2
53: new           #16
56: dup
57: ldc2_w        #17
60: ldc2_w        #19
63: invokespecial #21
66: astore_3
67: aload_2
68: aload_3
69: invokevirtual #22
72: aload_2
73: invokevirtual #23
76: istore        4
78: aload_2
79: invokevirtual #23
82: istore        5
84: new           #24
87: dup
88: aload_2
89: invokespecial #25
92: astore        6
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        7
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        8
131: aload         7
133: aload         8
135: invokevirtual #22
138: aload         7
140: invokevirtual #23
143: istore        9
145: aload         7
147: invokevirtual #23
150: istore        10
152: new           #24
155: dup
156: aload         7
158: invokespecial #25
161: astore        11
163: aload         11
165: invokevirtual #52
168: aconst_null
169: astore        12
171: new           #8
174: dup
175: ldc2_w        #9
178: ldc2_w        #11
181: ldc2_w        #13
184: dconst_1
185: ldc2_w        #13
188: invokespecial #15
191: astore        13
193: new           #16
196: dup
197: ldc2_w        #17
200: ldc2_w        #19
203: invokespecial #21
206: astore        14
208: aload         13
210: aload         14
212: invokevirtual #22
215: aload         13
217: invokevirtual #23
220: istore        15
222: aload         13
224: invokevirtual #23
227: istore        16
229: aload         13
231: invokevirtual #53
234: istore        17
236: new           #24
239: dup
240: aload         13
242: invokespecial #25
245: astore        18
247: bipush        6
249: newarray       double
251: dup
252: iconst_0
253: ldc2_w        #27
256: dastore
257: dup
258: iconst_1
259: ldc2_w        #9
262: dastore
263: dup
264: iconst_2
265: ldc2_w        #13
268: dastore
269: dup
270: iconst_3
271: ldc2_w        #29
274: dastore
275: dup
276: iconst_4
277: ldc2_w        #17
280: dastore
281: dup
282: iconst_5
283: ldc2_w        #31
286: dastore
287: astore        19
289: aconst_null
290: astore        20
292: new           #33
295: dup
296: aload         19
298: aload         20
300: iconst_1
301: invokespecial #34
304: astore        21
306: aload         18
308: aload         19
310: invokevirtual #54
313: astore        22
315: aload         11
317: aload         12
319: aload         22
321: invokevirtual #55
324: astore        23
326: aload         6
328: aload         22
330: invokevirtual #54
333: astore        24
335: aload_1
336: ldc2_w        #211
339: aload         24
341: invokevirtual #123
344: dstore        25
346: ldc           #124
348: invokestatic  #37
351: goto          356
354: astore        25
356: new           #39
359: dup
360: invokespecial #40
363: ldc           #41
365: invokevirtual #42
368: iload         4
370: invokevirtual #43
373: ldc           #44
375: invokevirtual #42
378: iconst_0
379: invokevirtual #43
382: ldc           #41
384: invokevirtual #42
387: invokevirtual #45
390: iload         4
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #46
403: new           #39
406: dup
407: invokespecial #40
410: ldc           #41
412: invokevirtual #42
415: iload         5
417: invokevirtual #43
420: ldc           #44
422: invokevirtual #42
425: iconst_0
426: invokevirtual #43
429: ldc           #41
431: invokevirtual #42
434: invokevirtual #45
437: iload         5
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #46
450: new           #39
453: dup
454: invokespecial #40
457: ldc           #41
459: invokevirtual #42
462: iload         9
464: invokevirtual #43
467: ldc           #44
469: invokevirtual #42
472: iconst_0
473: invokevirtual #43
476: ldc           #41
478: invokevirtual #42
481: invokevirtual #45
484: iload         9
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #46
497: new           #39
500: dup
501: invokespecial #40
504: ldc           #41
506: invokevirtual #42
509: iload         10
511: invokevirtual #43
514: ldc           #44
516: invokevirtual #42
519: iconst_0
520: invokevirtual #43
523: ldc           #41
525: invokevirtual #42
528: invokevirtual #45
531: iload         10
533: ifne          540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #46
544: new           #39
547: dup
548: invokespecial #40
551: ldc           #41
553: invokevirtual #42
556: iload         15
558: invokevirtual #43
561: ldc           #44
563: invokevirtual #42
566: iconst_0
567: invokevirtual #43
570: ldc           #41
572: invokevirtual #42
575: invokevirtual #45
578: iload         15
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #46
591: new           #39
594: dup
595: invokespecial #40
598: ldc           #41
600: invokevirtual #42
603: iload         16
605: invokevirtual #43
608: ldc           #44
610: invokevirtual #42
613: iconst_0
614: invokevirtual #43
617: ldc           #41
619: invokevirtual #42
622: invokevirtual #45
625: iload         16
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #46
638: new           #39
641: dup
642: invokespecial #40
645: ldc           #41
647: invokevirtual #42
650: iload         17
652: invokevirtual #43
655: ldc           #44
657: invokevirtual #42
660: iconst_0
661: invokevirtual #43
664: ldc           #41
666: invokevirtual #42
669: invokevirtual #45
672: iload         17
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #46
685: aload         19
687: invokestatic  #47
690: aload         19
692: invokestatic  #48
695: ldc           #49
697: invokestatic  #50
700: aload         22
702: invokestatic  #47
705: aload         22
707: invokestatic  #48
710: ldc           #49
712: invokestatic  #50
715: aload         23
717: invokestatic  #47
720: aload         23
722: invokestatic  #48
725: ldc           #49
727: invokestatic  #50
730: aload         24
732: invokestatic  #47
735: aload         24
737: invokestatic  #48
740: ldc           #49
742: invokestatic  #50
745: return
Exception table:
from    to  target type
335   351   354   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 2770
End line: 2807
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        java.lang.Class<?> wildcardClass41 = doubleArray35.getClass();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #213
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: aconst_null
92: astore        7
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        8
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        9
131: aload         8
133: aload         9
135: invokevirtual #22
138: aload         8
140: invokevirtual #23
143: istore        10
145: aload         8
147: invokevirtual #23
150: istore        11
152: aload         8
154: invokevirtual #53
157: istore        12
159: new           #24
162: dup
163: aload         8
165: invokespecial #25
168: astore        13
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        14
212: aconst_null
213: astore        15
215: new           #33
218: dup
219: aload         14
221: aload         15
223: iconst_1
224: invokespecial #34
227: astore        16
229: aload         13
231: aload         14
233: invokevirtual #54
236: astore        17
238: aload         6
240: aload         7
242: aload         14
244: invokevirtual #89
247: astore        18
249: aload         14
251: invokevirtual #112
254: astore        19
256: new           #39
259: dup
260: invokespecial #40
263: ldc           #41
265: invokevirtual #42
268: iload_3
269: invokevirtual #43
272: ldc           #44
274: invokevirtual #42
277: iconst_0
278: invokevirtual #43
281: ldc           #41
283: invokevirtual #42
286: invokevirtual #45
289: iload_3
290: ifne          297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #46
301: new           #39
304: dup
305: invokespecial #40
308: ldc           #41
310: invokevirtual #42
313: iload         4
315: invokevirtual #43
318: ldc           #44
320: invokevirtual #42
323: iconst_0
324: invokevirtual #43
327: ldc           #41
329: invokevirtual #42
332: invokevirtual #45
335: iload         4
337: ifne          344
340: iconst_1
341: goto          345
344: iconst_0
345: invokestatic  #46
348: new           #39
351: dup
352: invokespecial #40
355: ldc           #41
357: invokevirtual #42
360: iload         5
362: invokevirtual #43
365: ldc           #44
367: invokevirtual #42
370: iconst_0
371: invokevirtual #43
374: ldc           #41
376: invokevirtual #42
379: invokevirtual #45
382: iload         5
384: ifne          391
387: iconst_1
388: goto          392
391: iconst_0
392: invokestatic  #46
395: new           #39
398: dup
399: invokespecial #40
402: ldc           #41
404: invokevirtual #42
407: iload         10
409: invokevirtual #43
412: ldc           #44
414: invokevirtual #42
417: iconst_0
418: invokevirtual #43
421: ldc           #41
423: invokevirtual #42
426: invokevirtual #45
429: iload         10
431: ifne          438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #46
442: new           #39
445: dup
446: invokespecial #40
449: ldc           #41
451: invokevirtual #42
454: iload         11
456: invokevirtual #43
459: ldc           #44
461: invokevirtual #42
464: iconst_0
465: invokevirtual #43
468: ldc           #41
470: invokevirtual #42
473: invokevirtual #45
476: iload         11
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #46
489: new           #39
492: dup
493: invokespecial #40
496: ldc           #41
498: invokevirtual #42
501: iload         12
503: invokevirtual #43
506: ldc           #44
508: invokevirtual #42
511: iconst_0
512: invokevirtual #43
515: ldc           #41
517: invokevirtual #42
520: invokevirtual #45
523: iload         12
525: ifne          532
528: iconst_1
529: goto          533
532: iconst_0
533: invokestatic  #46
536: aload         14
538: invokestatic  #47
541: aload         14
543: invokestatic  #48
546: ldc           #49
548: invokestatic  #50
551: aload         17
553: invokestatic  #47
556: aload         17
558: invokestatic  #48
561: ldc           #49
563: invokestatic  #50
566: aload         18
568: invokestatic  #47
571: aload         18
573: invokestatic  #48
576: ldc           #49
578: invokestatic  #50
581: aload         19
583: invokestatic  #47
586: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 2810
End line: 2829
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint((double) 1L, 0.6444303510232912d);
        gaussianFitter12.addObservedPoint(11013.232920103323d, (double) 35);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray21 = gaussianFitter12.getObservations();
        gaussianFitter12.clearObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertNotNull(weightedObservedPointArray21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #214
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: aload         5
94: dconst_1
95: ldc2_w        #195
98: invokevirtual #158
101: aload         5
103: ldc2_w        #99
106: ldc2_w        #17
109: invokevirtual #158
112: aload         5
114: invokevirtual #52
117: aload         5
119: invokevirtual #62
122: astore        7
124: aload         5
126: invokevirtual #52
129: new           #39
132: dup
133: invokespecial #40
136: ldc           #41
138: invokevirtual #42
141: iload_3
142: invokevirtual #43
145: ldc           #44
147: invokevirtual #42
150: iconst_0
151: invokevirtual #43
154: ldc           #41
156: invokevirtual #42
159: invokevirtual #45
162: iload_3
163: ifne          170
166: iconst_1
167: goto          171
170: iconst_0
171: invokestatic  #46
174: new           #39
177: dup
178: invokespecial #40
181: ldc           #41
183: invokevirtual #42
186: iload         4
188: invokevirtual #43
191: ldc           #44
193: invokevirtual #42
196: iconst_0
197: invokevirtual #43
200: ldc           #41
202: invokevirtual #42
205: invokevirtual #45
208: iload         4
210: ifne          217
213: iconst_1
214: goto          218
217: iconst_0
218: invokestatic  #46
221: aload         6
223: invokestatic  #47
226: aload         7
228: invokestatic  #47
231: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 2832
End line: 2875
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = gaussianFitter13.fit(doubleArray20);
        double[] doubleArray31 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray32 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray32, true);
        double[] doubleArray35 = vectorialPointValuePair34.getValue();
        double[] doubleArray36 = vectorialPointValuePair34.getValue();
        double[] doubleArray37 = vectorialPointValuePair34.getPoint();
        double[] doubleArray38 = gaussianFitter13.fit(doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = gaussianFitter13.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #215
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: bipush        6
93: newarray       double
95: dup
96: iconst_0
97: ldc2_w        #27
100: dastore
101: dup
102: iconst_1
103: ldc2_w        #9
106: dastore
107: dup
108: iconst_2
109: ldc2_w        #13
112: dastore
113: dup
114: iconst_3
115: ldc2_w        #29
118: dastore
119: dup
120: iconst_4
121: ldc2_w        #17
124: dastore
125: dup
126: iconst_5
127: ldc2_w        #31
130: dastore
131: astore        7
133: aconst_null
134: astore        8
136: new           #33
139: dup
140: aload         7
142: aload         8
144: iconst_1
145: invokespecial #34
148: astore        9
150: aload         6
152: aload         7
154: invokevirtual #54
157: astore        10
159: bipush        6
161: newarray       double
163: dup
164: iconst_0
165: ldc2_w        #27
168: dastore
169: dup
170: iconst_1
171: ldc2_w        #9
174: dastore
175: dup
176: iconst_2
177: ldc2_w        #13
180: dastore
181: dup
182: iconst_3
183: ldc2_w        #29
186: dastore
187: dup
188: iconst_4
189: ldc2_w        #17
192: dastore
193: dup
194: iconst_5
195: ldc2_w        #31
198: dastore
199: astore        11
201: aconst_null
202: astore        12
204: new           #33
207: dup
208: aload         11
210: aload         12
212: iconst_1
213: invokespecial #34
216: astore        13
218: aload         13
220: invokevirtual #74
223: astore        14
225: aload         13
227: invokevirtual #74
230: astore        15
232: aload         13
234: invokevirtual #75
237: astore        16
239: aload         6
241: aload         16
243: invokevirtual #54
246: astore        17
248: aload         6
250: invokevirtual #63
253: astore        18
255: ldc           #64
257: invokestatic  #37
260: goto          265
263: astore        18
265: new           #39
268: dup
269: invokespecial #40
272: ldc           #41
274: invokevirtual #42
277: iload_3
278: invokevirtual #43
281: ldc           #44
283: invokevirtual #42
286: iconst_0
287: invokevirtual #43
290: ldc           #41
292: invokevirtual #42
295: invokevirtual #45
298: iload_3
299: ifne          306
302: iconst_1
303: goto          307
306: iconst_0
307: invokestatic  #46
310: new           #39
313: dup
314: invokespecial #40
317: ldc           #41
319: invokevirtual #42
322: iload         4
324: invokevirtual #43
327: ldc           #44
329: invokevirtual #42
332: iconst_0
333: invokevirtual #43
336: ldc           #41
338: invokevirtual #42
341: invokevirtual #45
344: iload         4
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #46
357: new           #39
360: dup
361: invokespecial #40
364: ldc           #41
366: invokevirtual #42
369: iload         5
371: invokevirtual #43
374: ldc           #44
376: invokevirtual #42
379: iconst_0
380: invokevirtual #43
383: ldc           #41
385: invokevirtual #42
388: invokevirtual #45
391: iload         5
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #46
404: aload         7
406: invokestatic  #47
409: aload         7
411: invokestatic  #48
414: ldc           #49
416: invokestatic  #50
419: aload         10
421: invokestatic  #47
424: aload         10
426: invokestatic  #48
429: ldc           #49
431: invokestatic  #50
434: aload         11
436: invokestatic  #47
439: aload         11
441: invokestatic  #48
444: ldc           #49
446: invokestatic  #50
449: aload         14
451: invokestatic  #76
454: aload         15
456: invokestatic  #76
459: aload         16
461: invokestatic  #47
464: aload         16
466: invokestatic  #48
469: ldc           #49
471: invokestatic  #50
474: aload         17
476: invokestatic  #47
479: aload         17
481: invokestatic  #48
484: ldc           #49
486: invokestatic  #50
489: return
Exception table:
from    to  target type
248   260   263   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 2878
End line: 2897
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint18 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, 4.9E-324d, 57.29577951308232d);
        double double19 = weightedObservedPoint18.getWeight();
        gaussianFitter14.addObservedPoint(weightedObservedPoint18);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #216
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: aload_1
82: invokevirtual #160
85: istore        6
87: new           #24
90: dup
91: aload_1
92: invokespecial #25
95: astore        7
97: new           #217
100: dup
101: dconst_0
102: ldc2_w        #218
105: ldc2_w        #220
108: invokespecial #222
111: astore        8
113: aload         8
115: invokevirtual #223
118: dstore        9
120: aload         7
122: aload         8
124: invokevirtual #174
127: new           #39
130: dup
131: invokespecial #40
134: ldc           #41
136: invokevirtual #42
139: iload_3
140: invokevirtual #43
143: ldc           #44
145: invokevirtual #42
148: iconst_0
149: invokevirtual #43
152: ldc           #41
154: invokevirtual #42
157: invokevirtual #45
160: iload_3
161: ifne          168
164: iconst_1
165: goto          169
168: iconst_0
169: invokestatic  #46
172: new           #39
175: dup
176: invokespecial #40
179: ldc           #41
181: invokevirtual #42
184: iload         4
186: invokevirtual #43
189: ldc           #44
191: invokevirtual #42
194: iconst_0
195: invokevirtual #43
198: ldc           #41
200: invokevirtual #42
203: invokevirtual #45
206: iload         4
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #46
219: new           #39
222: dup
223: invokespecial #40
226: ldc           #41
228: invokevirtual #42
231: iload         5
233: invokevirtual #43
236: ldc           #44
238: invokevirtual #42
241: iconst_0
242: invokevirtual #43
245: ldc           #41
247: invokevirtual #42
250: invokevirtual #45
253: iload         5
255: ifne          262
258: iconst_1
259: goto          263
262: iconst_0
263: invokestatic  #46
266: new           #39
269: dup
270: invokespecial #40
273: ldc           #41
275: invokevirtual #42
278: iload         6
280: invokevirtual #43
283: ldc           #44
285: invokevirtual #42
288: iconst_0
289: invokevirtual #43
292: ldc           #41
294: invokevirtual #42
297: invokevirtual #45
300: iload         6
302: ifne          309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #46
313: new           #39
316: dup
317: invokespecial #40
320: ldc           #41
322: invokevirtual #42
325: dload         9
327: invokevirtual #59
330: ldc           #44
332: invokevirtual #42
335: dconst_0
336: invokevirtual #59
339: ldc           #41
341: invokevirtual #42
344: invokevirtual #45
347: dload         9
349: dconst_0
350: dcmpl
351: ifne          358
354: iconst_1
355: goto          359
358: iconst_0
359: invokestatic  #46
362: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 2900
End line: 2984
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        double[] doubleArray6 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray7 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair9 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray6, doubleArray7, true);
        double[] doubleArray10 = vectorialPointValuePair9.getValue();
        double[] doubleArray11 = vectorialPointValuePair9.getValue();
        double[] doubleArray12 = vectorialPointValuePair9.getPoint();
        double[] doubleArray19 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray20 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair22 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray20, true);
        double[] doubleArray23 = vectorialPointValuePair22.getValue();
        double[] doubleArray24 = vectorialPointValuePair22.getValue();
        double[] doubleArray25 = vectorialPointValuePair22.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair27 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray25, false);
        double[] doubleArray34 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray35 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray35, true);
        double[] doubleArray38 = vectorialPointValuePair37.getValue();
        double[] doubleArray39 = vectorialPointValuePair37.getValue();
        double[] doubleArray40 = vectorialPointValuePair37.getPoint();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer46.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker49);
        int int51 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int52 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter53 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer46);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer59 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker62 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer59.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker62);
        int int64 = levenbergMarquardtOptimizer59.getMaxEvaluations();
        int int65 = levenbergMarquardtOptimizer59.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter66 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer59);
        gaussianFitter66.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction68 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer74 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker77 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer74.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker77);
        int int79 = levenbergMarquardtOptimizer74.getMaxEvaluations();
        int int80 = levenbergMarquardtOptimizer74.getMaxEvaluations();
        int int81 = levenbergMarquardtOptimizer74.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter82 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer74);
        double[] doubleArray89 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray90 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair92 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray89, doubleArray90, true);
        double[] doubleArray93 = gaussianFitter82.fit(doubleArray89);
        double[] doubleArray94 = gaussianFitter66.fit(parametricUnivariateRealFunction68, doubleArray93);
        double[] doubleArray95 = gaussianFitter53.fit(doubleArray93);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair97 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray93, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair99 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray40, false);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #224
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: newarray       double
28: dup
29: iconst_0
30: ldc2_w        #27
33: dastore
34: dup
35: iconst_1
36: ldc2_w        #9
39: dastore
40: dup
41: iconst_2
42: ldc2_w        #13
45: dastore
46: dup
47: iconst_3
48: ldc2_w        #29
51: dastore
52: dup
53: iconst_4
54: ldc2_w        #17
57: dastore
58: dup
59: iconst_5
60: ldc2_w        #31
63: dastore
64: astore_1
65: aconst_null
66: astore_2
67: new           #33
70: dup
71: aload_1
72: aload_2
73: iconst_1
74: invokespecial #34
77: astore_3
78: aload_3
79: invokevirtual #74
82: astore        4
84: aload_3
85: invokevirtual #74
88: astore        5
90: aload_3
91: invokevirtual #75
94: astore        6
96: bipush        6
98: newarray       double
100: dup
101: iconst_0
102: ldc2_w        #27
105: dastore
106: dup
107: iconst_1
108: ldc2_w        #9
111: dastore
112: dup
113: iconst_2
114: ldc2_w        #13
117: dastore
118: dup
119: iconst_3
120: ldc2_w        #29
123: dastore
124: dup
125: iconst_4
126: ldc2_w        #17
129: dastore
130: dup
131: iconst_5
132: ldc2_w        #31
135: dastore
136: astore        7
138: aconst_null
139: astore        8
141: new           #33
144: dup
145: aload         7
147: aload         8
149: iconst_1
150: invokespecial #34
153: astore        9
155: aload         9
157: invokevirtual #74
160: astore        10
162: aload         9
164: invokevirtual #74
167: astore        11
169: aload         9
171: invokevirtual #75
174: astore        12
176: new           #33
179: dup
180: aload         6
182: aload         12
184: iconst_0
185: invokespecial #34
188: astore        13
190: bipush        6
192: newarray       double
194: dup
195: iconst_0
196: ldc2_w        #27
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #9
205: dastore
206: dup
207: iconst_2
208: ldc2_w        #13
211: dastore
212: dup
213: iconst_3
214: ldc2_w        #29
217: dastore
218: dup
219: iconst_4
220: ldc2_w        #17
223: dastore
224: dup
225: iconst_5
226: ldc2_w        #31
229: dastore
230: astore        14
232: aconst_null
233: astore        15
235: new           #33
238: dup
239: aload         14
241: aload         15
243: iconst_1
244: invokespecial #34
247: astore        16
249: aload         16
251: invokevirtual #74
254: astore        17
256: aload         16
258: invokevirtual #74
261: astore        18
263: aload         16
265: invokevirtual #75
268: astore        19
270: new           #8
273: dup
274: ldc2_w        #9
277: ldc2_w        #11
280: ldc2_w        #13
283: dconst_1
284: ldc2_w        #13
287: invokespecial #15
290: astore        20
292: new           #16
295: dup
296: ldc2_w        #17
299: ldc2_w        #19
302: invokespecial #21
305: astore        21
307: aload         20
309: aload         21
311: invokevirtual #22
314: aload         20
316: invokevirtual #23
319: istore        22
321: aload         20
323: invokevirtual #23
326: istore        23
328: new           #24
331: dup
332: aload         20
334: invokespecial #25
337: astore        24
339: new           #8
342: dup
343: ldc2_w        #9
346: ldc2_w        #11
349: ldc2_w        #13
352: dconst_1
353: ldc2_w        #13
356: invokespecial #15
359: astore        25
361: new           #16
364: dup
365: ldc2_w        #17
368: ldc2_w        #19
371: invokespecial #21
374: astore        26
376: aload         25
378: aload         26
380: invokevirtual #22
383: aload         25
385: invokevirtual #23
388: istore        27
390: aload         25
392: invokevirtual #23
395: istore        28
397: new           #24
400: dup
401: aload         25
403: invokespecial #25
406: astore        29
408: aload         29
410: invokevirtual #52
413: aconst_null
414: astore        30
416: new           #8
419: dup
420: ldc2_w        #9
423: ldc2_w        #11
426: ldc2_w        #13
429: dconst_1
430: ldc2_w        #13
433: invokespecial #15
436: astore        31
438: new           #16
441: dup
442: ldc2_w        #17
445: ldc2_w        #19
448: invokespecial #21
451: astore        32
453: aload         31
455: aload         32
457: invokevirtual #22
460: aload         31
462: invokevirtual #23
465: istore        33
467: aload         31
469: invokevirtual #23
472: istore        34
474: aload         31
476: invokevirtual #53
479: istore        35
481: new           #24
484: dup
485: aload         31
487: invokespecial #25
490: astore        36
492: bipush        6
494: newarray       double
496: dup
497: iconst_0
498: ldc2_w        #27
501: dastore
502: dup
503: iconst_1
504: ldc2_w        #9
507: dastore
508: dup
509: iconst_2
510: ldc2_w        #13
513: dastore
514: dup
515: iconst_3
516: ldc2_w        #29
519: dastore
520: dup
521: iconst_4
522: ldc2_w        #17
525: dastore
526: dup
527: iconst_5
528: ldc2_w        #31
531: dastore
532: astore        37
534: aconst_null
535: astore        38
537: new           #33
540: dup
541: aload         37
543: aload         38
545: iconst_1
546: invokespecial #34
549: astore        39
551: aload         36
553: aload         37
555: invokevirtual #54
558: astore        40
560: aload         29
562: aload         30
564: aload         40
566: invokevirtual #55
569: astore        41
571: aload         24
573: aload         40
575: invokevirtual #54
578: astore        42
580: new           #33
583: dup
584: aload         19
586: aload         40
588: iconst_0
589: invokespecial #34
592: astore        43
594: new           #33
597: dup
598: aload         6
600: aload         19
602: iconst_0
603: invokespecial #34
606: astore        44
608: aload_1
609: invokestatic  #47
612: aload_1
613: invokestatic  #48
616: ldc           #49
618: invokestatic  #50
621: aload         4
623: invokestatic  #76
626: aload         5
628: invokestatic  #76
631: aload         6
633: invokestatic  #47
636: aload         6
638: invokestatic  #48
641: ldc           #49
643: invokestatic  #50
646: aload         7
648: invokestatic  #47
651: aload         7
653: invokestatic  #48
656: ldc           #49
658: invokestatic  #50
661: aload         10
663: invokestatic  #76
666: aload         11
668: invokestatic  #76
671: aload         12
673: invokestatic  #47
676: aload         12
678: invokestatic  #48
681: ldc           #49
683: invokestatic  #50
686: aload         14
688: invokestatic  #47
691: aload         14
693: invokestatic  #48
696: ldc           #49
698: invokestatic  #50
701: aload         17
703: invokestatic  #76
706: aload         18
708: invokestatic  #76
711: aload         19
713: invokestatic  #47
716: aload         19
718: invokestatic  #48
721: ldc           #49
723: invokestatic  #50
726: new           #39
729: dup
730: invokespecial #40
733: ldc           #41
735: invokevirtual #42
738: iload         22
740: invokevirtual #43
743: ldc           #44
745: invokevirtual #42
748: iconst_0
749: invokevirtual #43
752: ldc           #41
754: invokevirtual #42
757: invokevirtual #45
760: iload         22
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #46
773: new           #39
776: dup
777: invokespecial #40
780: ldc           #41
782: invokevirtual #42
785: iload         23
787: invokevirtual #43
790: ldc           #44
792: invokevirtual #42
795: iconst_0
796: invokevirtual #43
799: ldc           #41
801: invokevirtual #42
804: invokevirtual #45
807: iload         23
809: ifne          816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #46
820: new           #39
823: dup
824: invokespecial #40
827: ldc           #41
829: invokevirtual #42
832: iload         27
834: invokevirtual #43
837: ldc           #44
839: invokevirtual #42
842: iconst_0
843: invokevirtual #43
846: ldc           #41
848: invokevirtual #42
851: invokevirtual #45
854: iload         27
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #46
867: new           #39
870: dup
871: invokespecial #40
874: ldc           #41
876: invokevirtual #42
879: iload         28
881: invokevirtual #43
884: ldc           #44
886: invokevirtual #42
889: iconst_0
890: invokevirtual #43
893: ldc           #41
895: invokevirtual #42
898: invokevirtual #45
901: iload         28
903: ifne          910
906: iconst_1
907: goto          911
910: iconst_0
911: invokestatic  #46
914: new           #39
917: dup
918: invokespecial #40
921: ldc           #41
923: invokevirtual #42
926: iload         33
928: invokevirtual #43
931: ldc           #44
933: invokevirtual #42
936: iconst_0
937: invokevirtual #43
940: ldc           #41
942: invokevirtual #42
945: invokevirtual #45
948: iload         33
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #46
961: new           #39
964: dup
965: invokespecial #40
968: ldc           #41
970: invokevirtual #42
973: iload         34
975: invokevirtual #43
978: ldc           #44
980: invokevirtual #42
983: iconst_0
984: invokevirtual #43
987: ldc           #41
989: invokevirtual #42
992: invokevirtual #45
995: iload         34
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #46
1008: new           #39
1011: dup
1012: invokespecial #40
1015: ldc           #41
1017: invokevirtual #42
1020: iload         35
1022: invokevirtual #43
1025: ldc           #44
1027: invokevirtual #42
1030: iconst_0
1031: invokevirtual #43
1034: ldc           #41
1036: invokevirtual #42
1039: invokevirtual #45
1042: iload         35
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #46
1055: aload         37
1057: invokestatic  #47
1060: aload         37
1062: invokestatic  #48
1065: ldc           #49
1067: invokestatic  #50
1070: aload         40
1072: invokestatic  #47
1075: aload         40
1077: invokestatic  #48
1080: ldc           #49
1082: invokestatic  #50
1085: aload         41
1087: invokestatic  #47
1090: aload         41
1092: invokestatic  #48
1095: ldc           #49
1097: invokestatic  #50
1100: aload         42
1102: invokestatic  #47
1105: aload         42
1107: invokestatic  #48
1110: ldc           #49
1112: invokestatic  #50
1115: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 2987
End line: 3005
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter15.addObservedPoint(14.38937667498656d, 7.569397566060481d, (double) (short) -1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #225
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #160
85: istore        7
87: aload_1
88: invokevirtual #58
91: dstore        8
93: new           #24
96: dup
97: aload_1
98: invokespecial #25
101: astore        10
103: aload         10
105: ldc2_w        #226
108: ldc2_w        #228
111: ldc2_w        #9
114: invokevirtual #98
117: new           #39
120: dup
121: invokespecial #40
124: ldc           #41
126: invokevirtual #42
129: iload_3
130: invokevirtual #43
133: ldc           #44
135: invokevirtual #42
138: iconst_0
139: invokevirtual #43
142: ldc           #41
144: invokevirtual #42
147: invokevirtual #45
150: iload_3
151: ifne          158
154: iconst_1
155: goto          159
158: iconst_0
159: invokestatic  #46
162: new           #39
165: dup
166: invokespecial #40
169: ldc           #41
171: invokevirtual #42
174: iload         4
176: invokevirtual #43
179: ldc           #44
181: invokevirtual #42
184: iconst_0
185: invokevirtual #43
188: ldc           #41
190: invokevirtual #42
193: invokevirtual #45
196: iload         4
198: ifne          205
201: iconst_1
202: goto          206
205: iconst_0
206: invokestatic  #46
209: new           #39
212: dup
213: invokespecial #40
216: ldc           #41
218: invokevirtual #42
221: dload         5
223: invokevirtual #59
226: ldc           #44
228: invokevirtual #42
231: dconst_0
232: invokevirtual #59
235: ldc           #41
237: invokevirtual #42
240: invokevirtual #45
243: dload         5
245: dconst_0
246: dcmpl
247: ifne          254
250: iconst_1
251: goto          255
254: iconst_0
255: invokestatic  #46
258: new           #39
261: dup
262: invokespecial #40
265: ldc           #41
267: invokevirtual #42
270: iload         7
272: invokevirtual #43
275: ldc           #44
277: invokevirtual #42
280: iconst_0
281: invokevirtual #43
284: ldc           #41
286: invokevirtual #42
289: invokevirtual #45
292: iload         7
294: ifne          301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #46
305: new           #39
308: dup
309: invokespecial #40
312: ldc           #41
314: invokevirtual #42
317: dload         8
319: invokevirtual #59
322: ldc           #44
324: invokevirtual #42
327: dconst_0
328: invokevirtual #59
331: ldc           #41
333: invokevirtual #42
336: invokevirtual #45
339: dload         8
341: dconst_0
342: dcmpl
343: ifne          350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #46
354: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 3008
End line: 3071
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint((double) 1L, 0.6444303510232912d);
        gaussianFitter12.addObservedPoint(11013.232920103323d, (double) 35);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint24 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, 4.9E-324d, 57.29577951308232d);
        double double25 = weightedObservedPoint24.getWeight();
        double double26 = weightedObservedPoint24.getWeight();
        double double27 = weightedObservedPoint24.getY();
        gaussianFitter12.addObservedPoint(weightedObservedPoint24);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric29 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer35 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker38 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer35.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker38);
        int int40 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int41 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter42 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer35);
        gaussianFitter42.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction44 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer50 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker53 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer50.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker53);
        int int55 = levenbergMarquardtOptimizer50.getMaxEvaluations();
        int int56 = levenbergMarquardtOptimizer50.getMaxEvaluations();
        int int57 = levenbergMarquardtOptimizer50.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter58 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer50);
        double[] doubleArray65 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray66 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair68 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray65, doubleArray66, true);
        double[] doubleArray69 = gaussianFitter58.fit(doubleArray65);
        double[] doubleArray70 = gaussianFitter42.fit(parametricUnivariateRealFunction44, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray71 = gaussianFitter12.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric29, doubleArray70);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 57.29577951308232d + "'", double27 == 57.29577951308232d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #230
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: aload         5
94: dconst_1
95: ldc2_w        #195
98: invokevirtual #158
101: aload         5
103: ldc2_w        #99
106: ldc2_w        #17
109: invokevirtual #158
112: aload         5
114: invokevirtual #52
117: new           #217
120: dup
121: dconst_0
122: ldc2_w        #218
125: ldc2_w        #220
128: invokespecial #222
131: astore        7
133: aload         7
135: invokevirtual #223
138: dstore        8
140: aload         7
142: invokevirtual #223
145: dstore        10
147: aload         7
149: invokevirtual #231
152: dstore        12
154: aload         5
156: aload         7
158: invokevirtual #174
161: new           #117
164: dup
165: invokespecial #118
168: astore        14
170: new           #8
173: dup
174: ldc2_w        #9
177: ldc2_w        #11
180: ldc2_w        #13
183: dconst_1
184: ldc2_w        #13
187: invokespecial #15
190: astore        15
192: new           #16
195: dup
196: ldc2_w        #17
199: ldc2_w        #19
202: invokespecial #21
205: astore        16
207: aload         15
209: aload         16
211: invokevirtual #22
214: aload         15
216: invokevirtual #23
219: istore        17
221: aload         15
223: invokevirtual #23
226: istore        18
228: new           #24
231: dup
232: aload         15
234: invokespecial #25
237: astore        19
239: aload         19
241: invokevirtual #52
244: aconst_null
245: astore        20
247: new           #8
250: dup
251: ldc2_w        #9
254: ldc2_w        #11
257: ldc2_w        #13
260: dconst_1
261: ldc2_w        #13
264: invokespecial #15
267: astore        21
269: new           #16
272: dup
273: ldc2_w        #17
276: ldc2_w        #19
279: invokespecial #21
282: astore        22
284: aload         21
286: aload         22
288: invokevirtual #22
291: aload         21
293: invokevirtual #23
296: istore        23
298: aload         21
300: invokevirtual #23
303: istore        24
305: aload         21
307: invokevirtual #53
310: istore        25
312: new           #24
315: dup
316: aload         21
318: invokespecial #25
321: astore        26
323: bipush        6
325: newarray       double
327: dup
328: iconst_0
329: ldc2_w        #27
332: dastore
333: dup
334: iconst_1
335: ldc2_w        #9
338: dastore
339: dup
340: iconst_2
341: ldc2_w        #13
344: dastore
345: dup
346: iconst_3
347: ldc2_w        #29
350: dastore
351: dup
352: iconst_4
353: ldc2_w        #17
356: dastore
357: dup
358: iconst_5
359: ldc2_w        #31
362: dastore
363: astore        27
365: aconst_null
366: astore        28
368: new           #33
371: dup
372: aload         27
374: aload         28
376: iconst_1
377: invokespecial #34
380: astore        29
382: aload         26
384: aload         27
386: invokevirtual #54
389: astore        30
391: aload         19
393: aload         20
395: aload         30
397: invokevirtual #55
400: astore        31
402: aload         5
404: aload         14
406: aload         31
408: invokevirtual #55
411: astore        32
413: ldc           #124
415: invokestatic  #37
418: goto          423
421: astore        32
423: new           #39
426: dup
427: invokespecial #40
430: ldc           #41
432: invokevirtual #42
435: iload_3
436: invokevirtual #43
439: ldc           #44
441: invokevirtual #42
444: iconst_0
445: invokevirtual #43
448: ldc           #41
450: invokevirtual #42
453: invokevirtual #45
456: iload_3
457: ifne          464
460: iconst_1
461: goto          465
464: iconst_0
465: invokestatic  #46
468: new           #39
471: dup
472: invokespecial #40
475: ldc           #41
477: invokevirtual #42
480: iload         4
482: invokevirtual #43
485: ldc           #44
487: invokevirtual #42
490: iconst_0
491: invokevirtual #43
494: ldc           #41
496: invokevirtual #42
499: invokevirtual #45
502: iload         4
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #46
515: aload         6
517: invokestatic  #47
520: new           #39
523: dup
524: invokespecial #40
527: ldc           #41
529: invokevirtual #42
532: dload         8
534: invokevirtual #59
537: ldc           #44
539: invokevirtual #42
542: dconst_0
543: invokevirtual #59
546: ldc           #41
548: invokevirtual #42
551: invokevirtual #45
554: dload         8
556: dconst_0
557: dcmpl
558: ifne          565
561: iconst_1
562: goto          566
565: iconst_0
566: invokestatic  #46
569: new           #39
572: dup
573: invokespecial #40
576: ldc           #41
578: invokevirtual #42
581: dload         10
583: invokevirtual #59
586: ldc           #44
588: invokevirtual #42
591: dconst_0
592: invokevirtual #59
595: ldc           #41
597: invokevirtual #42
600: invokevirtual #45
603: dload         10
605: dconst_0
606: dcmpl
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #46
618: new           #39
621: dup
622: invokespecial #40
625: ldc           #41
627: invokevirtual #42
630: dload         12
632: invokevirtual #59
635: ldc           #44
637: invokevirtual #42
640: ldc2_w        #220
643: invokevirtual #59
646: ldc           #41
648: invokevirtual #42
651: invokevirtual #45
654: dload         12
656: ldc2_w        #220
659: dcmpl
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #46
671: new           #39
674: dup
675: invokespecial #40
678: ldc           #41
680: invokevirtual #42
683: iload         17
685: invokevirtual #43
688: ldc           #44
690: invokevirtual #42
693: iconst_0
694: invokevirtual #43
697: ldc           #41
699: invokevirtual #42
702: invokevirtual #45
705: iload         17
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #46
718: new           #39
721: dup
722: invokespecial #40
725: ldc           #41
727: invokevirtual #42
730: iload         18
732: invokevirtual #43
735: ldc           #44
737: invokevirtual #42
740: iconst_0
741: invokevirtual #43
744: ldc           #41
746: invokevirtual #42
749: invokevirtual #45
752: iload         18
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #46
765: new           #39
768: dup
769: invokespecial #40
772: ldc           #41
774: invokevirtual #42
777: iload         23
779: invokevirtual #43
782: ldc           #44
784: invokevirtual #42
787: iconst_0
788: invokevirtual #43
791: ldc           #41
793: invokevirtual #42
796: invokevirtual #45
799: iload         23
801: ifne          808
804: iconst_1
805: goto          809
808: iconst_0
809: invokestatic  #46
812: new           #39
815: dup
816: invokespecial #40
819: ldc           #41
821: invokevirtual #42
824: iload         24
826: invokevirtual #43
829: ldc           #44
831: invokevirtual #42
834: iconst_0
835: invokevirtual #43
838: ldc           #41
840: invokevirtual #42
843: invokevirtual #45
846: iload         24
848: ifne          855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #46
859: new           #39
862: dup
863: invokespecial #40
866: ldc           #41
868: invokevirtual #42
871: iload         25
873: invokevirtual #43
876: ldc           #44
878: invokevirtual #42
881: iconst_0
882: invokevirtual #43
885: ldc           #41
887: invokevirtual #42
890: invokevirtual #45
893: iload         25
895: ifne          902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #46
906: aload         27
908: invokestatic  #47
911: aload         27
913: invokestatic  #48
916: ldc           #49
918: invokestatic  #50
921: aload         30
923: invokestatic  #47
926: aload         30
928: invokestatic  #48
931: ldc           #49
933: invokestatic  #50
936: aload         31
938: invokestatic  #47
941: aload         31
943: invokestatic  #48
946: ldc           #49
948: invokestatic  #50
951: return
Exception table:
from    to  target type
402   418   421   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 3074
End line: 3135
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        double double27 = levenbergMarquardtOptimizer20.getChiSquare();
        int int28 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter29 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric30 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer36 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker39 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer36.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker39);
        int int41 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer36.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter44 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer36);
        double[] doubleArray51 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray52 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray52, true);
        double[] doubleArray55 = gaussianFitter44.fit(doubleArray51);
        double[] doubleArray56 = curveFitter29.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray55);
        double[] doubleArray63 = new double[] { 3.1415926535897936d, (-0.9923172082775625d), 0.207879576290261d, 0.49321676688550387d, 4.248699152289463d, 3.4741259760439713d };
        double[] doubleArray64 = gaussianFitter12.fit(97, (org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray63);
        double[] doubleArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray67 = parametric30.gradient((double) (-127), doubleArray66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #232
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: new           #8
95: dup
96: ldc2_w        #9
99: ldc2_w        #11
102: ldc2_w        #13
105: dconst_1
106: ldc2_w        #13
109: invokespecial #15
112: astore        7
114: new           #16
117: dup
118: ldc2_w        #17
121: ldc2_w        #19
124: invokespecial #21
127: astore        8
129: aload         7
131: aload         8
133: invokevirtual #22
136: aload         7
138: invokevirtual #23
141: istore        9
143: aload         7
145: invokevirtual #23
148: istore        10
150: aload         7
152: invokevirtual #58
155: dstore        11
157: aload         7
159: invokevirtual #23
162: istore        13
164: new           #67
167: dup
168: aload         7
170: invokespecial #68
173: astore        14
175: new           #117
178: dup
179: invokespecial #118
182: astore        15
184: new           #8
187: dup
188: ldc2_w        #9
191: ldc2_w        #11
194: ldc2_w        #13
197: dconst_1
198: ldc2_w        #13
201: invokespecial #15
204: astore        16
206: new           #16
209: dup
210: ldc2_w        #17
213: ldc2_w        #19
216: invokespecial #21
219: astore        17
221: aload         16
223: aload         17
225: invokevirtual #22
228: aload         16
230: invokevirtual #23
233: istore        18
235: aload         16
237: invokevirtual #23
240: istore        19
242: aload         16
244: invokevirtual #53
247: istore        20
249: new           #24
252: dup
253: aload         16
255: invokespecial #25
258: astore        21
260: bipush        6
262: newarray       double
264: dup
265: iconst_0
266: ldc2_w        #27
269: dastore
270: dup
271: iconst_1
272: ldc2_w        #9
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #13
281: dastore
282: dup
283: iconst_3
284: ldc2_w        #29
287: dastore
288: dup
289: iconst_4
290: ldc2_w        #17
293: dastore
294: dup
295: iconst_5
296: ldc2_w        #31
299: dastore
300: astore        22
302: aconst_null
303: astore        23
305: new           #33
308: dup
309: aload         22
311: aload         23
313: iconst_1
314: invokespecial #34
317: astore        24
319: aload         21
321: aload         22
323: invokevirtual #54
326: astore        25
328: aload         14
330: aload         15
332: aload         25
334: invokevirtual #89
337: astore        26
339: bipush        6
341: newarray       double
343: dup
344: iconst_0
345: ldc2_w        #162
348: dastore
349: dup
350: iconst_1
351: ldc2_w        #94
354: dastore
355: dup
356: iconst_2
357: ldc2_w        #164
360: dastore
361: dup
362: iconst_3
363: ldc2_w        #166
366: dastore
367: dup
368: iconst_4
369: ldc2_w        #136
372: dastore
373: dup
374: iconst_5
375: ldc2_w        #168
378: dastore
379: astore        27
381: aload         5
383: bipush        97
385: aload         15
387: aload         27
389: invokevirtual #35
392: astore        28
394: aconst_null
395: astore        29
397: aload         15
399: ldc2_w        #233
402: aload         29
404: invokevirtual #119
407: astore        30
409: ldc           #120
411: invokestatic  #37
414: goto          419
417: astore        30
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: iload_3
432: invokevirtual #43
435: ldc           #44
437: invokevirtual #42
440: iconst_0
441: invokevirtual #43
444: ldc           #41
446: invokevirtual #42
449: invokevirtual #45
452: iload_3
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #46
464: new           #39
467: dup
468: invokespecial #40
471: ldc           #41
473: invokevirtual #42
476: iload         4
478: invokevirtual #43
481: ldc           #44
483: invokevirtual #42
486: iconst_0
487: invokevirtual #43
490: ldc           #41
492: invokevirtual #42
495: invokevirtual #45
498: iload         4
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #46
511: aload         6
513: invokestatic  #47
516: new           #39
519: dup
520: invokespecial #40
523: ldc           #41
525: invokevirtual #42
528: iload         9
530: invokevirtual #43
533: ldc           #44
535: invokevirtual #42
538: iconst_0
539: invokevirtual #43
542: ldc           #41
544: invokevirtual #42
547: invokevirtual #45
550: iload         9
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #46
563: new           #39
566: dup
567: invokespecial #40
570: ldc           #41
572: invokevirtual #42
575: iload         10
577: invokevirtual #43
580: ldc           #44
582: invokevirtual #42
585: iconst_0
586: invokevirtual #43
589: ldc           #41
591: invokevirtual #42
594: invokevirtual #45
597: iload         10
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #46
610: new           #39
613: dup
614: invokespecial #40
617: ldc           #41
619: invokevirtual #42
622: dload         11
624: invokevirtual #59
627: ldc           #44
629: invokevirtual #42
632: dconst_0
633: invokevirtual #59
636: ldc           #41
638: invokevirtual #42
641: invokevirtual #45
644: dload         11
646: dconst_0
647: dcmpl
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #46
659: new           #39
662: dup
663: invokespecial #40
666: ldc           #41
668: invokevirtual #42
671: iload         13
673: invokevirtual #43
676: ldc           #44
678: invokevirtual #42
681: iconst_0
682: invokevirtual #43
685: ldc           #41
687: invokevirtual #42
690: invokevirtual #45
693: iload         13
695: ifne          702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #46
706: new           #39
709: dup
710: invokespecial #40
713: ldc           #41
715: invokevirtual #42
718: iload         18
720: invokevirtual #43
723: ldc           #44
725: invokevirtual #42
728: iconst_0
729: invokevirtual #43
732: ldc           #41
734: invokevirtual #42
737: invokevirtual #45
740: iload         18
742: ifne          749
745: iconst_1
746: goto          750
749: iconst_0
750: invokestatic  #46
753: new           #39
756: dup
757: invokespecial #40
760: ldc           #41
762: invokevirtual #42
765: iload         19
767: invokevirtual #43
770: ldc           #44
772: invokevirtual #42
775: iconst_0
776: invokevirtual #43
779: ldc           #41
781: invokevirtual #42
784: invokevirtual #45
787: iload         19
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #46
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         20
814: invokevirtual #43
817: ldc           #44
819: invokevirtual #42
822: iconst_0
823: invokevirtual #43
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         20
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #46
847: aload         22
849: invokestatic  #47
852: aload         22
854: invokestatic  #48
857: ldc           #49
859: invokestatic  #50
862: aload         25
864: invokestatic  #47
867: aload         25
869: invokestatic  #48
872: ldc           #49
874: invokestatic  #50
877: aload         26
879: invokestatic  #47
882: aload         26
884: invokestatic  #48
887: ldc           #49
889: invokestatic  #50
892: aload         27
894: invokestatic  #47
897: aload         27
899: invokestatic  #48
902: ldc           #172
904: invokestatic  #50
907: aload         28
909: invokestatic  #47
912: aload         28
914: invokestatic  #48
917: ldc           #172
919: invokestatic  #50
922: return
Exception table:
from    to  target type
397   414   417   Class org/apache/commons/math/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 3138
End line: 3156
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray13 = levenbergMarquardtOptimizer5.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than, or equal to, the minimum (0): no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #235
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload_1
86: invokevirtual #69
89: astore        6
91: ldc           #70
93: invokestatic  #37
96: goto          101
99: astore        6
101: new           #39
104: dup
105: invokespecial #40
108: ldc           #41
110: invokevirtual #42
113: iload_3
114: invokevirtual #43
117: ldc           #44
119: invokevirtual #42
122: iconst_0
123: invokevirtual #43
126: ldc           #41
128: invokevirtual #42
131: invokevirtual #45
134: iload_3
135: ifne          142
138: iconst_1
139: goto          143
142: iconst_0
143: invokestatic  #46
146: new           #39
149: dup
150: invokespecial #40
153: ldc           #41
155: invokevirtual #42
158: iload         4
160: invokevirtual #43
163: ldc           #44
165: invokevirtual #42
168: iconst_0
169: invokevirtual #43
172: ldc           #41
174: invokevirtual #42
177: invokevirtual #45
180: iload         4
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #46
193: return
Exception table:
from    to  target type
85    96    99   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 3159
End line: 3189
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = gaussianFitter13.fit(doubleArray20);
        double[] doubleArray31 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray32 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray32, true);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray32, false);
        double[] doubleArray37 = vectorialPointValuePair36.getPoint();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #236
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: bipush        6
93: newarray       double
95: dup
96: iconst_0
97: ldc2_w        #27
100: dastore
101: dup
102: iconst_1
103: ldc2_w        #9
106: dastore
107: dup
108: iconst_2
109: ldc2_w        #13
112: dastore
113: dup
114: iconst_3
115: ldc2_w        #29
118: dastore
119: dup
120: iconst_4
121: ldc2_w        #17
124: dastore
125: dup
126: iconst_5
127: ldc2_w        #31
130: dastore
131: astore        7
133: aconst_null
134: astore        8
136: new           #33
139: dup
140: aload         7
142: aload         8
144: iconst_1
145: invokespecial #34
148: astore        9
150: aload         6
152: aload         7
154: invokevirtual #54
157: astore        10
159: bipush        6
161: newarray       double
163: dup
164: iconst_0
165: ldc2_w        #27
168: dastore
169: dup
170: iconst_1
171: ldc2_w        #9
174: dastore
175: dup
176: iconst_2
177: ldc2_w        #13
180: dastore
181: dup
182: iconst_3
183: ldc2_w        #29
186: dastore
187: dup
188: iconst_4
189: ldc2_w        #17
192: dastore
193: dup
194: iconst_5
195: ldc2_w        #31
198: dastore
199: astore        11
201: aconst_null
202: astore        12
204: new           #33
207: dup
208: aload         11
210: aload         12
212: iconst_1
213: invokespecial #34
216: astore        13
218: new           #33
221: dup
222: aload         10
224: aload         12
226: iconst_0
227: invokespecial #34
230: astore        14
232: aload         14
234: invokevirtual #75
237: astore        15
239: new           #39
242: dup
243: invokespecial #40
246: ldc           #41
248: invokevirtual #42
251: iload_3
252: invokevirtual #43
255: ldc           #44
257: invokevirtual #42
260: iconst_0
261: invokevirtual #43
264: ldc           #41
266: invokevirtual #42
269: invokevirtual #45
272: iload_3
273: ifne          280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #46
284: new           #39
287: dup
288: invokespecial #40
291: ldc           #41
293: invokevirtual #42
296: iload         4
298: invokevirtual #43
301: ldc           #44
303: invokevirtual #42
306: iconst_0
307: invokevirtual #43
310: ldc           #41
312: invokevirtual #42
315: invokevirtual #45
318: iload         4
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #46
331: new           #39
334: dup
335: invokespecial #40
338: ldc           #41
340: invokevirtual #42
343: iload         5
345: invokevirtual #43
348: ldc           #44
350: invokevirtual #42
353: iconst_0
354: invokevirtual #43
357: ldc           #41
359: invokevirtual #42
362: invokevirtual #45
365: iload         5
367: ifne          374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #46
378: aload         7
380: invokestatic  #47
383: aload         7
385: invokestatic  #48
388: ldc           #49
390: invokestatic  #50
393: aload         10
395: invokestatic  #47
398: aload         10
400: invokestatic  #48
403: ldc           #49
405: invokestatic  #50
408: aload         11
410: invokestatic  #47
413: aload         11
415: invokestatic  #48
418: ldc           #49
420: invokestatic  #50
423: aload         15
425: invokestatic  #47
428: aload         15
430: invokestatic  #48
433: ldc           #49
435: invokestatic  #50
438: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 3192
End line: 3253
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = gaussianFitter13.fit(doubleArray20);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer30 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker33 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer30.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker33);
        int int35 = levenbergMarquardtOptimizer30.getMaxEvaluations();
        int int36 = levenbergMarquardtOptimizer30.getMaxEvaluations();
        int int37 = levenbergMarquardtOptimizer30.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter38 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer30);
        double[] doubleArray45 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray46 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray46, true);
        double[] doubleArray49 = gaussianFitter38.fit(doubleArray45);
        double[] doubleArray56 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray57 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray57, true);
        double[] doubleArray60 = vectorialPointValuePair59.getValue();
        double[] doubleArray61 = vectorialPointValuePair59.getValue();
        double[] doubleArray62 = vectorialPointValuePair59.getPoint();
        double[] doubleArray63 = gaussianFitter38.fit(doubleArray62);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray63);
        double[] doubleArray65 = vectorialPointValuePair64.getPoint();
        double[] doubleArray66 = vectorialPointValuePair64.getPoint();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #237
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #24
84: dup
85: aload_1
86: invokespecial #25
89: astore        6
91: bipush        6
93: newarray       double
95: dup
96: iconst_0
97: ldc2_w        #27
100: dastore
101: dup
102: iconst_1
103: ldc2_w        #9
106: dastore
107: dup
108: iconst_2
109: ldc2_w        #13
112: dastore
113: dup
114: iconst_3
115: ldc2_w        #29
118: dastore
119: dup
120: iconst_4
121: ldc2_w        #17
124: dastore
125: dup
126: iconst_5
127: ldc2_w        #31
130: dastore
131: astore        7
133: aconst_null
134: astore        8
136: new           #33
139: dup
140: aload         7
142: aload         8
144: iconst_1
145: invokespecial #34
148: astore        9
150: aload         6
152: aload         7
154: invokevirtual #54
157: astore        10
159: new           #8
162: dup
163: ldc2_w        #9
166: ldc2_w        #11
169: ldc2_w        #13
172: dconst_1
173: ldc2_w        #13
176: invokespecial #15
179: astore        11
181: new           #16
184: dup
185: ldc2_w        #17
188: ldc2_w        #19
191: invokespecial #21
194: astore        12
196: aload         11
198: aload         12
200: invokevirtual #22
203: aload         11
205: invokevirtual #23
208: istore        13
210: aload         11
212: invokevirtual #23
215: istore        14
217: aload         11
219: invokevirtual #53
222: istore        15
224: new           #24
227: dup
228: aload         11
230: invokespecial #25
233: astore        16
235: bipush        6
237: newarray       double
239: dup
240: iconst_0
241: ldc2_w        #27
244: dastore
245: dup
246: iconst_1
247: ldc2_w        #9
250: dastore
251: dup
252: iconst_2
253: ldc2_w        #13
256: dastore
257: dup
258: iconst_3
259: ldc2_w        #29
262: dastore
263: dup
264: iconst_4
265: ldc2_w        #17
268: dastore
269: dup
270: iconst_5
271: ldc2_w        #31
274: dastore
275: astore        17
277: aconst_null
278: astore        18
280: new           #33
283: dup
284: aload         17
286: aload         18
288: iconst_1
289: invokespecial #34
292: astore        19
294: aload         16
296: aload         17
298: invokevirtual #54
301: astore        20
303: bipush        6
305: newarray       double
307: dup
308: iconst_0
309: ldc2_w        #27
312: dastore
313: dup
314: iconst_1
315: ldc2_w        #9
318: dastore
319: dup
320: iconst_2
321: ldc2_w        #13
324: dastore
325: dup
326: iconst_3
327: ldc2_w        #29
330: dastore
331: dup
332: iconst_4
333: ldc2_w        #17
336: dastore
337: dup
338: iconst_5
339: ldc2_w        #31
342: dastore
343: astore        21
345: aconst_null
346: astore        22
348: new           #33
351: dup
352: aload         21
354: aload         22
356: iconst_1
357: invokespecial #34
360: astore        23
362: aload         23
364: invokevirtual #74
367: astore        24
369: aload         23
371: invokevirtual #74
374: astore        25
376: aload         23
378: invokevirtual #75
381: astore        26
383: aload         16
385: aload         26
387: invokevirtual #54
390: astore        27
392: new           #33
395: dup
396: aload         10
398: aload         27
400: invokespecial #109
403: astore        28
405: aload         28
407: invokevirtual #75
410: astore        29
412: aload         28
414: invokevirtual #75
417: astore        30
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: iload_3
432: invokevirtual #43
435: ldc           #44
437: invokevirtual #42
440: iconst_0
441: invokevirtual #43
444: ldc           #41
446: invokevirtual #42
449: invokevirtual #45
452: iload_3
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #46
464: new           #39
467: dup
468: invokespecial #40
471: ldc           #41
473: invokevirtual #42
476: iload         4
478: invokevirtual #43
481: ldc           #44
483: invokevirtual #42
486: iconst_0
487: invokevirtual #43
490: ldc           #41
492: invokevirtual #42
495: invokevirtual #45
498: iload         4
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #46
511: new           #39
514: dup
515: invokespecial #40
518: ldc           #41
520: invokevirtual #42
523: iload         5
525: invokevirtual #43
528: ldc           #44
530: invokevirtual #42
533: iconst_0
534: invokevirtual #43
537: ldc           #41
539: invokevirtual #42
542: invokevirtual #45
545: iload         5
547: ifne          554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #46
558: aload         7
560: invokestatic  #47
563: aload         7
565: invokestatic  #48
568: ldc           #49
570: invokestatic  #50
573: aload         10
575: invokestatic  #47
578: aload         10
580: invokestatic  #48
583: ldc           #49
585: invokestatic  #50
588: new           #39
591: dup
592: invokespecial #40
595: ldc           #41
597: invokevirtual #42
600: iload         13
602: invokevirtual #43
605: ldc           #44
607: invokevirtual #42
610: iconst_0
611: invokevirtual #43
614: ldc           #41
616: invokevirtual #42
619: invokevirtual #45
622: iload         13
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #46
635: new           #39
638: dup
639: invokespecial #40
642: ldc           #41
644: invokevirtual #42
647: iload         14
649: invokevirtual #43
652: ldc           #44
654: invokevirtual #42
657: iconst_0
658: invokevirtual #43
661: ldc           #41
663: invokevirtual #42
666: invokevirtual #45
669: iload         14
671: ifne          678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #46
682: new           #39
685: dup
686: invokespecial #40
689: ldc           #41
691: invokevirtual #42
694: iload         15
696: invokevirtual #43
699: ldc           #44
701: invokevirtual #42
704: iconst_0
705: invokevirtual #43
708: ldc           #41
710: invokevirtual #42
713: invokevirtual #45
716: iload         15
718: ifne          725
721: iconst_1
722: goto          726
725: iconst_0
726: invokestatic  #46
729: aload         17
731: invokestatic  #47
734: aload         17
736: invokestatic  #48
739: ldc           #49
741: invokestatic  #50
744: aload         20
746: invokestatic  #47
749: aload         20
751: invokestatic  #48
754: ldc           #49
756: invokestatic  #50
759: aload         21
761: invokestatic  #47
764: aload         21
766: invokestatic  #48
769: ldc           #49
771: invokestatic  #50
774: aload         24
776: invokestatic  #76
779: aload         25
781: invokestatic  #76
784: aload         26
786: invokestatic  #47
789: aload         26
791: invokestatic  #48
794: ldc           #49
796: invokestatic  #50
799: aload         27
801: invokestatic  #47
804: aload         27
806: invokestatic  #48
809: ldc           #49
811: invokestatic  #50
814: aload         29
816: invokestatic  #47
819: aload         29
821: invokestatic  #48
824: ldc           #49
826: invokestatic  #50
829: aload         30
831: invokestatic  #47
834: aload         30
836: invokestatic  #48
839: ldc           #49
841: invokestatic  #50
844: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 3256
End line: 3278
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker14 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double15 = simpleVectorialValueChecker14.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker14);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker17 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter18 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter18.addObservedPoint((double) (byte) 10, 2979.3805346802806d, 2.7260621198151926d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.1102230246251565E-14d + "'", double15 == 1.1102230246251565E-14d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #238
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: new           #16
90: dup
91: invokespecial #150
94: astore        8
96: aload         8
98: invokevirtual #88
101: dstore        9
103: aload_1
104: aload         8
106: invokevirtual #22
109: aload_1
110: invokevirtual #73
113: astore        11
115: new           #24
118: dup
119: aload_1
120: invokespecial #25
123: astore        12
125: aload         12
127: ldc2_w        #239
130: ldc2_w        #241
133: ldc2_w        #243
136: invokevirtual #98
139: new           #39
142: dup
143: invokespecial #40
146: ldc           #41
148: invokevirtual #42
151: iload_3
152: invokevirtual #43
155: ldc           #44
157: invokevirtual #42
160: iconst_0
161: invokevirtual #43
164: ldc           #41
166: invokevirtual #42
169: invokevirtual #45
172: iload_3
173: ifne          180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #46
184: new           #39
187: dup
188: invokespecial #40
191: ldc           #41
193: invokevirtual #42
196: iload         4
198: invokevirtual #43
201: ldc           #44
203: invokevirtual #42
206: iconst_0
207: invokevirtual #43
210: ldc           #41
212: invokevirtual #42
215: invokevirtual #45
218: iload         4
220: ifne          227
223: iconst_1
224: goto          228
227: iconst_0
228: invokestatic  #46
231: new           #39
234: dup
235: invokespecial #40
238: ldc           #41
240: invokevirtual #42
243: dload         5
245: invokevirtual #59
248: ldc           #44
250: invokevirtual #42
253: dconst_0
254: invokevirtual #59
257: ldc           #41
259: invokevirtual #42
262: invokevirtual #45
265: dload         5
267: dconst_0
268: dcmpl
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #46
280: new           #39
283: dup
284: invokespecial #40
287: ldc           #41
289: invokevirtual #42
292: iload         7
294: invokevirtual #43
297: ldc           #44
299: invokevirtual #42
302: iconst_0
303: invokevirtual #43
306: ldc           #41
308: invokevirtual #42
311: invokevirtual #45
314: iload         7
316: ifne          323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #46
327: new           #39
330: dup
331: invokespecial #40
334: ldc           #41
336: invokevirtual #42
339: dload         9
341: invokevirtual #59
344: ldc           #44
346: invokevirtual #42
349: ldc2_w        #152
352: invokevirtual #59
355: ldc           #41
357: invokevirtual #42
360: invokevirtual #45
363: dload         9
365: ldc2_w        #152
368: dcmpl
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #46
380: aload         11
382: invokestatic  #47
385: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 3281
End line: 3303
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint((double) 1L, 0.6444303510232912d);
        gaussianFitter12.addObservedPoint(98.0d, 0.0d, 2.718281828459045d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 2 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #245
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #62
90: astore        6
92: aload         5
94: dconst_1
95: ldc2_w        #195
98: invokevirtual #158
101: aload         5
103: ldc2_w        #246
106: dconst_0
107: ldc2_w        #248
110: invokevirtual #98
113: aload         5
115: invokevirtual #63
118: astore        7
120: ldc           #199
122: invokestatic  #37
125: goto          130
128: astore        7
130: new           #39
133: dup
134: invokespecial #40
137: ldc           #41
139: invokevirtual #42
142: iload_3
143: invokevirtual #43
146: ldc           #44
148: invokevirtual #42
151: iconst_0
152: invokevirtual #43
155: ldc           #41
157: invokevirtual #42
160: invokevirtual #45
163: iload_3
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #46
175: new           #39
178: dup
179: invokespecial #40
182: ldc           #41
184: invokevirtual #42
187: iload         4
189: invokevirtual #43
192: ldc           #44
194: invokevirtual #42
197: iconst_0
198: invokevirtual #43
201: ldc           #41
203: invokevirtual #42
206: invokevirtual #45
209: iload         4
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #46
222: aload         6
224: invokestatic  #47
227: return
Exception table:
from    to  target type
113   125   128   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 3306
End line: 3388
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter15 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker18 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double19 = simpleVectorialValueChecker18.getRelativeThreshold();
        double double20 = simpleVectorialValueChecker18.getAbsoluteThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker18);
        double double22 = simpleVectorialValueChecker18.getAbsoluteThreshold();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer29 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker32 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer29.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker32);
        int int34 = levenbergMarquardtOptimizer29.getMaxEvaluations();
        int int35 = levenbergMarquardtOptimizer29.getMaxEvaluations();
        int int36 = levenbergMarquardtOptimizer29.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter37 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer29);
        double[] doubleArray44 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray45 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair47 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray44, doubleArray45, true);
        double[] doubleArray48 = gaussianFitter37.fit(doubleArray44);
        double[] doubleArray55 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray56 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray55, doubleArray56, true);
        double[] doubleArray59 = vectorialPointValuePair58.getValue();
        double[] doubleArray60 = vectorialPointValuePair58.getValue();
        double[] doubleArray61 = vectorialPointValuePair58.getPoint();
        double[] doubleArray62 = gaussianFitter37.fit(doubleArray61);
        double[] doubleArray69 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray70 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray69, doubleArray70, true);
        double[] doubleArray73 = vectorialPointValuePair72.getValue();
        double[] doubleArray74 = vectorialPointValuePair72.getValue();
        double[] doubleArray75 = vectorialPointValuePair72.getPoint();
        double[] doubleArray76 = vectorialPointValuePair72.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray76);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = simpleVectorialValueChecker18.converged(0, vectorialPointValuePair77, vectorialPointValuePair78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray59);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #53
85: istore        7
87: aload_1
88: invokevirtual #53
91: istore        8
93: new           #67
96: dup
97: aload_1
98: invokespecial #68
101: astore        9
103: new           #16
106: dup
107: ldc2_w        #17
110: ldc2_w        #19
113: invokespecial #21
116: astore        10
118: aload         10
120: invokevirtual #88
123: dstore        11
125: aload         10
127: invokevirtual #205
130: dstore        13
132: aload_1
133: aload         10
135: invokevirtual #22
138: aload         10
140: invokevirtual #205
143: dstore        15
145: new           #8
148: dup
149: ldc2_w        #9
152: ldc2_w        #11
155: ldc2_w        #13
158: dconst_1
159: ldc2_w        #13
162: invokespecial #15
165: astore        17
167: new           #16
170: dup
171: ldc2_w        #17
174: ldc2_w        #19
177: invokespecial #21
180: astore        18
182: aload         17
184: aload         18
186: invokevirtual #22
189: aload         17
191: invokevirtual #23
194: istore        19
196: aload         17
198: invokevirtual #23
201: istore        20
203: aload         17
205: invokevirtual #53
208: istore        21
210: new           #24
213: dup
214: aload         17
216: invokespecial #25
219: astore        22
221: bipush        6
223: newarray       double
225: dup
226: iconst_0
227: ldc2_w        #27
230: dastore
231: dup
232: iconst_1
233: ldc2_w        #9
236: dastore
237: dup
238: iconst_2
239: ldc2_w        #13
242: dastore
243: dup
244: iconst_3
245: ldc2_w        #29
248: dastore
249: dup
250: iconst_4
251: ldc2_w        #17
254: dastore
255: dup
256: iconst_5
257: ldc2_w        #31
260: dastore
261: astore        23
263: aconst_null
264: astore        24
266: new           #33
269: dup
270: aload         23
272: aload         24
274: iconst_1
275: invokespecial #34
278: astore        25
280: aload         22
282: aload         23
284: invokevirtual #54
287: astore        26
289: bipush        6
291: newarray       double
293: dup
294: iconst_0
295: ldc2_w        #27
298: dastore
299: dup
300: iconst_1
301: ldc2_w        #9
304: dastore
305: dup
306: iconst_2
307: ldc2_w        #13
310: dastore
311: dup
312: iconst_3
313: ldc2_w        #29
316: dastore
317: dup
318: iconst_4
319: ldc2_w        #17
322: dastore
323: dup
324: iconst_5
325: ldc2_w        #31
328: dastore
329: astore        27
331: aconst_null
332: astore        28
334: new           #33
337: dup
338: aload         27
340: aload         28
342: iconst_1
343: invokespecial #34
346: astore        29
348: aload         29
350: invokevirtual #74
353: astore        30
355: aload         29
357: invokevirtual #74
360: astore        31
362: aload         29
364: invokevirtual #75
367: astore        32
369: aload         22
371: aload         32
373: invokevirtual #54
376: astore        33
378: bipush        6
380: newarray       double
382: dup
383: iconst_0
384: ldc2_w        #27
387: dastore
388: dup
389: iconst_1
390: ldc2_w        #9
393: dastore
394: dup
395: iconst_2
396: ldc2_w        #13
399: dastore
400: dup
401: iconst_3
402: ldc2_w        #29
405: dastore
406: dup
407: iconst_4
408: ldc2_w        #17
411: dastore
412: dup
413: iconst_5
414: ldc2_w        #31
417: dastore
418: astore        34
420: aconst_null
421: astore        35
423: new           #33
426: dup
427: aload         34
429: aload         35
431: iconst_1
432: invokespecial #34
435: astore        36
437: aload         36
439: invokevirtual #74
442: astore        37
444: aload         36
446: invokevirtual #74
449: astore        38
451: aload         36
453: invokevirtual #75
456: astore        39
458: aload         36
460: invokevirtual #151
463: astore        40
465: new           #33
468: dup
469: aload         32
471: aload         40
473: invokespecial #109
476: astore        41
478: aconst_null
479: astore        42
481: aload         10
483: iconst_0
484: aload         41
486: aload         42
488: invokevirtual #90
491: istore        43
493: ldc           #36
495: invokestatic  #37
498: goto          503
501: astore        43
503: new           #39
506: dup
507: invokespecial #40
510: ldc           #41
512: invokevirtual #42
515: iload_3
516: invokevirtual #43
519: ldc           #44
521: invokevirtual #42
524: iconst_0
525: invokevirtual #43
528: ldc           #41
530: invokevirtual #42
533: invokevirtual #45
536: iload_3
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #46
548: new           #39
551: dup
552: invokespecial #40
555: ldc           #41
557: invokevirtual #42
560: iload         4
562: invokevirtual #43
565: ldc           #44
567: invokevirtual #42
570: iconst_0
571: invokevirtual #43
574: ldc           #41
576: invokevirtual #42
579: invokevirtual #45
582: iload         4
584: ifne          591
587: iconst_1
588: goto          592
591: iconst_0
592: invokestatic  #46
595: new           #39
598: dup
599: invokespecial #40
602: ldc           #41
604: invokevirtual #42
607: dload         5
609: invokevirtual #59
612: ldc           #44
614: invokevirtual #42
617: dconst_0
618: invokevirtual #59
621: ldc           #41
623: invokevirtual #42
626: invokevirtual #45
629: dload         5
631: dconst_0
632: dcmpl
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #46
644: new           #39
647: dup
648: invokespecial #40
651: ldc           #41
653: invokevirtual #42
656: iload         7
658: invokevirtual #43
661: ldc           #44
663: invokevirtual #42
666: iconst_0
667: invokevirtual #43
670: ldc           #41
672: invokevirtual #42
675: invokevirtual #45
678: iload         7
680: ifne          687
683: iconst_1
684: goto          688
687: iconst_0
688: invokestatic  #46
691: new           #39
694: dup
695: invokespecial #40
698: ldc           #41
700: invokevirtual #42
703: iload         8
705: invokevirtual #43
708: ldc           #44
710: invokevirtual #42
713: iconst_0
714: invokevirtual #43
717: ldc           #41
719: invokevirtual #42
722: invokevirtual #45
725: iload         8
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #46
738: new           #39
741: dup
742: invokespecial #40
745: ldc           #41
747: invokevirtual #42
750: dload         11
752: invokevirtual #59
755: ldc           #44
757: invokevirtual #42
760: ldc2_w        #17
763: invokevirtual #59
766: ldc           #41
768: invokevirtual #42
771: invokevirtual #45
774: dload         11
776: ldc2_w        #17
779: dcmpl
780: ifne          787
783: iconst_1
784: goto          788
787: iconst_0
788: invokestatic  #46
791: new           #39
794: dup
795: invokespecial #40
798: ldc           #41
800: invokevirtual #42
803: dload         13
805: invokevirtual #59
808: ldc           #44
810: invokevirtual #42
813: ldc2_w        #19
816: invokevirtual #59
819: ldc           #41
821: invokevirtual #42
824: invokevirtual #45
827: dload         13
829: ldc2_w        #19
832: dcmpl
833: ifne          840
836: iconst_1
837: goto          841
840: iconst_0
841: invokestatic  #46
844: new           #39
847: dup
848: invokespecial #40
851: ldc           #41
853: invokevirtual #42
856: dload         15
858: invokevirtual #59
861: ldc           #44
863: invokevirtual #42
866: ldc2_w        #19
869: invokevirtual #59
872: ldc           #41
874: invokevirtual #42
877: invokevirtual #45
880: dload         15
882: ldc2_w        #19
885: dcmpl
886: ifne          893
889: iconst_1
890: goto          894
893: iconst_0
894: invokestatic  #46
897: new           #39
900: dup
901: invokespecial #40
904: ldc           #41
906: invokevirtual #42
909: iload         19
911: invokevirtual #43
914: ldc           #44
916: invokevirtual #42
919: iconst_0
920: invokevirtual #43
923: ldc           #41
925: invokevirtual #42
928: invokevirtual #45
931: iload         19
933: ifne          940
936: iconst_1
937: goto          941
940: iconst_0
941: invokestatic  #46
944: new           #39
947: dup
948: invokespecial #40
951: ldc           #41
953: invokevirtual #42
956: iload         20
958: invokevirtual #43
961: ldc           #44
963: invokevirtual #42
966: iconst_0
967: invokevirtual #43
970: ldc           #41
972: invokevirtual #42
975: invokevirtual #45
978: iload         20
980: ifne          987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #46
991: new           #39
994: dup
995: invokespecial #40
998: ldc           #41
1000: invokevirtual #42
1003: iload         21
1005: invokevirtual #43
1008: ldc           #44
1010: invokevirtual #42
1013: iconst_0
1014: invokevirtual #43
1017: ldc           #41
1019: invokevirtual #42
1022: invokevirtual #45
1025: iload         21
1027: ifne          1034
1030: iconst_1
1031: goto          1035
1034: iconst_0
1035: invokestatic  #46
1038: aload         23
1040: invokestatic  #47
1043: aload         23
1045: invokestatic  #48
1048: ldc           #49
1050: invokestatic  #50
1053: aload         26
1055: invokestatic  #47
1058: aload         26
1060: invokestatic  #48
1063: ldc           #49
1065: invokestatic  #50
1068: aload         27
1070: invokestatic  #47
1073: aload         27
1075: invokestatic  #48
1078: ldc           #49
1080: invokestatic  #50
1083: aload         30
1085: invokestatic  #76
1088: aload         31
1090: invokestatic  #76
1093: aload         32
1095: invokestatic  #47
1098: aload         32
1100: invokestatic  #48
1103: ldc           #49
1105: invokestatic  #50
1108: aload         33
1110: invokestatic  #47
1113: aload         33
1115: invokestatic  #48
1118: ldc           #49
1120: invokestatic  #50
1123: aload         34
1125: invokestatic  #47
1128: aload         34
1130: invokestatic  #48
1133: ldc           #49
1135: invokestatic  #50
1138: aload         37
1140: invokestatic  #76
1143: aload         38
1145: invokestatic  #76
1148: aload         39
1150: invokestatic  #47
1153: aload         39
1155: invokestatic  #48
1158: ldc           #49
1160: invokestatic  #50
1163: aload         40
1165: invokestatic  #47
1168: aload         40
1170: invokestatic  #48
1173: ldc           #49
1175: invokestatic  #50
1178: return
Exception table:
from    to  target type
481   498   501   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 3391
End line: 3470
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer46.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker49);
        int int51 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int52 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer46.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter54 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer46);
        double[] doubleArray61 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray62 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray62, true);
        double[] doubleArray65 = gaussianFitter54.fit(doubleArray61);
        double[] doubleArray72 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray73 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair75 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray72, doubleArray73, true);
        double[] doubleArray76 = vectorialPointValuePair75.getValue();
        double[] doubleArray77 = vectorialPointValuePair75.getValue();
        double[] doubleArray78 = vectorialPointValuePair75.getPoint();
        double[] doubleArray85 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray86 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair88 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray85, doubleArray86, true);
        double[] doubleArray89 = vectorialPointValuePair88.getValue();
        double[] doubleArray90 = vectorialPointValuePair88.getValue();
        double[] doubleArray91 = vectorialPointValuePair88.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair93 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray91, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray78, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair96 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray78);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray76);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray89);
        org.junit.Assert.assertNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #251
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: new           #24
78: dup
79: aload_1
80: invokespecial #25
83: astore        5
85: aload         5
87: invokevirtual #52
90: aconst_null
91: astore        6
93: new           #8
96: dup
97: ldc2_w        #9
100: ldc2_w        #11
103: ldc2_w        #13
106: dconst_1
107: ldc2_w        #13
110: invokespecial #15
113: astore        7
115: new           #16
118: dup
119: ldc2_w        #17
122: ldc2_w        #19
125: invokespecial #21
128: astore        8
130: aload         7
132: aload         8
134: invokevirtual #22
137: aload         7
139: invokevirtual #23
142: istore        9
144: aload         7
146: invokevirtual #23
149: istore        10
151: aload         7
153: invokevirtual #53
156: istore        11
158: new           #24
161: dup
162: aload         7
164: invokespecial #25
167: astore        12
169: bipush        6
171: newarray       double
173: dup
174: iconst_0
175: ldc2_w        #27
178: dastore
179: dup
180: iconst_1
181: ldc2_w        #9
184: dastore
185: dup
186: iconst_2
187: ldc2_w        #13
190: dastore
191: dup
192: iconst_3
193: ldc2_w        #29
196: dastore
197: dup
198: iconst_4
199: ldc2_w        #17
202: dastore
203: dup
204: iconst_5
205: ldc2_w        #31
208: dastore
209: astore        13
211: aconst_null
212: astore        14
214: new           #33
217: dup
218: aload         13
220: aload         14
222: iconst_1
223: invokespecial #34
226: astore        15
228: aload         12
230: aload         13
232: invokevirtual #54
235: astore        16
237: aload         5
239: aload         6
241: aload         16
243: invokevirtual #55
246: astore        17
248: new           #8
251: dup
252: ldc2_w        #9
255: ldc2_w        #11
258: ldc2_w        #13
261: dconst_1
262: ldc2_w        #13
265: invokespecial #15
268: astore        18
270: new           #16
273: dup
274: ldc2_w        #17
277: ldc2_w        #19
280: invokespecial #21
283: astore        19
285: aload         18
287: aload         19
289: invokevirtual #22
292: aload         18
294: invokevirtual #23
297: istore        20
299: aload         18
301: invokevirtual #23
304: istore        21
306: aload         18
308: invokevirtual #53
311: istore        22
313: new           #24
316: dup
317: aload         18
319: invokespecial #25
322: astore        23
324: bipush        6
326: newarray       double
328: dup
329: iconst_0
330: ldc2_w        #27
333: dastore
334: dup
335: iconst_1
336: ldc2_w        #9
339: dastore
340: dup
341: iconst_2
342: ldc2_w        #13
345: dastore
346: dup
347: iconst_3
348: ldc2_w        #29
351: dastore
352: dup
353: iconst_4
354: ldc2_w        #17
357: dastore
358: dup
359: iconst_5
360: ldc2_w        #31
363: dastore
364: astore        24
366: aconst_null
367: astore        25
369: new           #33
372: dup
373: aload         24
375: aload         25
377: iconst_1
378: invokespecial #34
381: astore        26
383: aload         23
385: aload         24
387: invokevirtual #54
390: astore        27
392: bipush        6
394: newarray       double
396: dup
397: iconst_0
398: ldc2_w        #27
401: dastore
402: dup
403: iconst_1
404: ldc2_w        #9
407: dastore
408: dup
409: iconst_2
410: ldc2_w        #13
413: dastore
414: dup
415: iconst_3
416: ldc2_w        #29
419: dastore
420: dup
421: iconst_4
422: ldc2_w        #17
425: dastore
426: dup
427: iconst_5
428: ldc2_w        #31
431: dastore
432: astore        28
434: aconst_null
435: astore        29
437: new           #33
440: dup
441: aload         28
443: aload         29
445: iconst_1
446: invokespecial #34
449: astore        30
451: aload         30
453: invokevirtual #74
456: astore        31
458: aload         30
460: invokevirtual #74
463: astore        32
465: aload         30
467: invokevirtual #75
470: astore        33
472: bipush        6
474: newarray       double
476: dup
477: iconst_0
478: ldc2_w        #27
481: dastore
482: dup
483: iconst_1
484: ldc2_w        #9
487: dastore
488: dup
489: iconst_2
490: ldc2_w        #13
493: dastore
494: dup
495: iconst_3
496: ldc2_w        #29
499: dastore
500: dup
501: iconst_4
502: ldc2_w        #17
505: dastore
506: dup
507: iconst_5
508: ldc2_w        #31
511: dastore
512: astore        34
514: aconst_null
515: astore        35
517: new           #33
520: dup
521: aload         34
523: aload         35
525: iconst_1
526: invokespecial #34
529: astore        36
531: aload         36
533: invokevirtual #74
536: astore        37
538: aload         36
540: invokevirtual #74
543: astore        38
545: aload         36
547: invokevirtual #75
550: astore        39
552: new           #33
555: dup
556: aload         33
558: aload         39
560: iconst_0
561: invokespecial #34
564: astore        40
566: new           #33
569: dup
570: aload         24
572: aload         33
574: iconst_0
575: invokespecial #34
578: astore        41
580: new           #33
583: dup
584: aload         17
586: aload         33
588: invokespecial #109
591: astore        42
593: new           #39
596: dup
597: invokespecial #40
600: ldc           #41
602: invokevirtual #42
605: iload_3
606: invokevirtual #43
609: ldc           #44
611: invokevirtual #42
614: iconst_0
615: invokevirtual #43
618: ldc           #41
620: invokevirtual #42
623: invokevirtual #45
626: iload_3
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #46
638: new           #39
641: dup
642: invokespecial #40
645: ldc           #41
647: invokevirtual #42
650: iload         4
652: invokevirtual #43
655: ldc           #44
657: invokevirtual #42
660: iconst_0
661: invokevirtual #43
664: ldc           #41
666: invokevirtual #42
669: invokevirtual #45
672: iload         4
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #46
685: new           #39
688: dup
689: invokespecial #40
692: ldc           #41
694: invokevirtual #42
697: iload         9
699: invokevirtual #43
702: ldc           #44
704: invokevirtual #42
707: iconst_0
708: invokevirtual #43
711: ldc           #41
713: invokevirtual #42
716: invokevirtual #45
719: iload         9
721: ifne          728
724: iconst_1
725: goto          729
728: iconst_0
729: invokestatic  #46
732: new           #39
735: dup
736: invokespecial #40
739: ldc           #41
741: invokevirtual #42
744: iload         10
746: invokevirtual #43
749: ldc           #44
751: invokevirtual #42
754: iconst_0
755: invokevirtual #43
758: ldc           #41
760: invokevirtual #42
763: invokevirtual #45
766: iload         10
768: ifne          775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #46
779: new           #39
782: dup
783: invokespecial #40
786: ldc           #41
788: invokevirtual #42
791: iload         11
793: invokevirtual #43
796: ldc           #44
798: invokevirtual #42
801: iconst_0
802: invokevirtual #43
805: ldc           #41
807: invokevirtual #42
810: invokevirtual #45
813: iload         11
815: ifne          822
818: iconst_1
819: goto          823
822: iconst_0
823: invokestatic  #46
826: aload         13
828: invokestatic  #47
831: aload         13
833: invokestatic  #48
836: ldc           #49
838: invokestatic  #50
841: aload         16
843: invokestatic  #47
846: aload         16
848: invokestatic  #48
851: ldc           #49
853: invokestatic  #50
856: aload         17
858: invokestatic  #47
861: aload         17
863: invokestatic  #48
866: ldc           #49
868: invokestatic  #50
871: new           #39
874: dup
875: invokespecial #40
878: ldc           #41
880: invokevirtual #42
883: iload         20
885: invokevirtual #43
888: ldc           #44
890: invokevirtual #42
893: iconst_0
894: invokevirtual #43
897: ldc           #41
899: invokevirtual #42
902: invokevirtual #45
905: iload         20
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #46
918: new           #39
921: dup
922: invokespecial #40
925: ldc           #41
927: invokevirtual #42
930: iload         21
932: invokevirtual #43
935: ldc           #44
937: invokevirtual #42
940: iconst_0
941: invokevirtual #43
944: ldc           #41
946: invokevirtual #42
949: invokevirtual #45
952: iload         21
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #46
965: new           #39
968: dup
969: invokespecial #40
972: ldc           #41
974: invokevirtual #42
977: iload         22
979: invokevirtual #43
982: ldc           #44
984: invokevirtual #42
987: iconst_0
988: invokevirtual #43
991: ldc           #41
993: invokevirtual #42
996: invokevirtual #45
999: iload         22
1001: ifne          1008
1004: iconst_1
1005: goto          1009
1008: iconst_0
1009: invokestatic  #46
1012: aload         24
1014: invokestatic  #47
1017: aload         24
1019: invokestatic  #48
1022: ldc           #49
1024: invokestatic  #50
1027: aload         27
1029: invokestatic  #47
1032: aload         27
1034: invokestatic  #48
1037: ldc           #49
1039: invokestatic  #50
1042: aload         28
1044: invokestatic  #47
1047: aload         28
1049: invokestatic  #48
1052: ldc           #49
1054: invokestatic  #50
1057: aload         31
1059: invokestatic  #76
1062: aload         32
1064: invokestatic  #76
1067: aload         33
1069: invokestatic  #47
1072: aload         33
1074: invokestatic  #48
1077: ldc           #49
1079: invokestatic  #50
1082: aload         34
1084: invokestatic  #47
1087: aload         34
1089: invokestatic  #48
1092: ldc           #49
1094: invokestatic  #50
1097: aload         37
1099: invokestatic  #76
1102: aload         38
1104: invokestatic  #76
1107: aload         39
1109: invokestatic  #47
1112: aload         39
1114: invokestatic  #48
1117: ldc           #49
1119: invokestatic  #50
1122: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 3473
End line: 3492
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker15 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker16 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker15);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: aload_1
82: invokevirtual #160
85: istore        6
87: new           #24
90: dup
91: aload_1
92: invokespecial #25
95: astore        7
97: aload_1
98: invokevirtual #73
101: astore        8
103: aload_1
104: invokevirtual #73
107: astore        9
109: new           #39
112: dup
113: invokespecial #40
116: ldc           #41
118: invokevirtual #42
121: iload_3
122: invokevirtual #43
125: ldc           #44
127: invokevirtual #42
130: iconst_0
131: invokevirtual #43
134: ldc           #41
136: invokevirtual #42
139: invokevirtual #45
142: iload_3
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #46
154: new           #39
157: dup
158: invokespecial #40
161: ldc           #41
163: invokevirtual #42
166: iload         4
168: invokevirtual #43
171: ldc           #44
173: invokevirtual #42
176: iconst_0
177: invokevirtual #43
180: ldc           #41
182: invokevirtual #42
185: invokevirtual #45
188: iload         4
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #46
201: new           #39
204: dup
205: invokespecial #40
208: ldc           #41
210: invokevirtual #42
213: iload         5
215: invokevirtual #43
218: ldc           #44
220: invokevirtual #42
223: iconst_0
224: invokevirtual #43
227: ldc           #41
229: invokevirtual #42
232: invokevirtual #45
235: iload         5
237: ifne          244
240: iconst_1
241: goto          245
244: iconst_0
245: invokestatic  #46
248: new           #39
251: dup
252: invokespecial #40
255: ldc           #41
257: invokevirtual #42
260: iload         6
262: invokevirtual #43
265: ldc           #44
267: invokevirtual #42
270: iconst_0
271: invokevirtual #43
274: ldc           #41
276: invokevirtual #42
279: invokevirtual #45
282: iload         6
284: ifne          291
287: iconst_1
288: goto          292
291: iconst_0
292: invokestatic  #46
295: aload         8
297: invokestatic  #47
300: aload         9
302: invokestatic  #47
305: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 3495
End line: 3583
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric41 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer47 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker50 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer47.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker50);
        int int52 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer47.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter55 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer47);
        double[] doubleArray62 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray63 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray63, true);
        double[] doubleArray66 = gaussianFitter55.fit(doubleArray62);
        double[] doubleArray73 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray74 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray74, true);
        double[] doubleArray77 = vectorialPointValuePair76.getValue();
        double[] doubleArray78 = vectorialPointValuePair76.getValue();
        double[] doubleArray79 = vectorialPointValuePair76.getPoint();
        double[] doubleArray80 = gaussianFitter55.fit(doubleArray79);
        double[] doubleArray81 = curveFitter13.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric41, doubleArray79);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric82 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        double[] doubleArray89 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray90 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair92 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray89, doubleArray90, true);
        double[] doubleArray93 = vectorialPointValuePair92.getValue();
        double[] doubleArray94 = vectorialPointValuePair92.getValue();
        double[] doubleArray95 = vectorialPointValuePair92.getPoint();
        double[] doubleArray96 = curveFitter13.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric82, doubleArray95);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray93);
        org.junit.Assert.assertNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #253
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #53
79: istore        5
81: new           #67
84: dup
85: aload_1
86: invokespecial #68
89: astore        6
91: aconst_null
92: astore        7
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        8
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        9
131: aload         8
133: aload         9
135: invokevirtual #22
138: aload         8
140: invokevirtual #23
143: istore        10
145: aload         8
147: invokevirtual #23
150: istore        11
152: aload         8
154: invokevirtual #53
157: istore        12
159: new           #24
162: dup
163: aload         8
165: invokespecial #25
168: astore        13
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        14
212: aconst_null
213: astore        15
215: new           #33
218: dup
219: aload         14
221: aload         15
223: iconst_1
224: invokespecial #34
227: astore        16
229: aload         13
231: aload         14
233: invokevirtual #54
236: astore        17
238: aload         6
240: aload         7
242: aload         14
244: invokevirtual #89
247: astore        18
249: new           #117
252: dup
253: invokespecial #118
256: astore        19
258: new           #8
261: dup
262: ldc2_w        #9
265: ldc2_w        #11
268: ldc2_w        #13
271: dconst_1
272: ldc2_w        #13
275: invokespecial #15
278: astore        20
280: new           #16
283: dup
284: ldc2_w        #17
287: ldc2_w        #19
290: invokespecial #21
293: astore        21
295: aload         20
297: aload         21
299: invokevirtual #22
302: aload         20
304: invokevirtual #23
307: istore        22
309: aload         20
311: invokevirtual #23
314: istore        23
316: aload         20
318: invokevirtual #53
321: istore        24
323: new           #24
326: dup
327: aload         20
329: invokespecial #25
332: astore        25
334: bipush        6
336: newarray       double
338: dup
339: iconst_0
340: ldc2_w        #27
343: dastore
344: dup
345: iconst_1
346: ldc2_w        #9
349: dastore
350: dup
351: iconst_2
352: ldc2_w        #13
355: dastore
356: dup
357: iconst_3
358: ldc2_w        #29
361: dastore
362: dup
363: iconst_4
364: ldc2_w        #17
367: dastore
368: dup
369: iconst_5
370: ldc2_w        #31
373: dastore
374: astore        26
376: aconst_null
377: astore        27
379: new           #33
382: dup
383: aload         26
385: aload         27
387: iconst_1
388: invokespecial #34
391: astore        28
393: aload         25
395: aload         26
397: invokevirtual #54
400: astore        29
402: bipush        6
404: newarray       double
406: dup
407: iconst_0
408: ldc2_w        #27
411: dastore
412: dup
413: iconst_1
414: ldc2_w        #9
417: dastore
418: dup
419: iconst_2
420: ldc2_w        #13
423: dastore
424: dup
425: iconst_3
426: ldc2_w        #29
429: dastore
430: dup
431: iconst_4
432: ldc2_w        #17
435: dastore
436: dup
437: iconst_5
438: ldc2_w        #31
441: dastore
442: astore        30
444: aconst_null
445: astore        31
447: new           #33
450: dup
451: aload         30
453: aload         31
455: iconst_1
456: invokespecial #34
459: astore        32
461: aload         32
463: invokevirtual #74
466: astore        33
468: aload         32
470: invokevirtual #74
473: astore        34
475: aload         32
477: invokevirtual #75
480: astore        35
482: aload         25
484: aload         35
486: invokevirtual #54
489: astore        36
491: aload         6
493: aload         19
495: aload         35
497: invokevirtual #89
500: astore        37
502: new           #117
505: dup
506: invokespecial #118
509: astore        38
511: bipush        6
513: newarray       double
515: dup
516: iconst_0
517: ldc2_w        #27
520: dastore
521: dup
522: iconst_1
523: ldc2_w        #9
526: dastore
527: dup
528: iconst_2
529: ldc2_w        #13
532: dastore
533: dup
534: iconst_3
535: ldc2_w        #29
538: dastore
539: dup
540: iconst_4
541: ldc2_w        #17
544: dastore
545: dup
546: iconst_5
547: ldc2_w        #31
550: dastore
551: astore        39
553: aconst_null
554: astore        40
556: new           #33
559: dup
560: aload         39
562: aload         40
564: iconst_1
565: invokespecial #34
568: astore        41
570: aload         41
572: invokevirtual #74
575: astore        42
577: aload         41
579: invokevirtual #74
582: astore        43
584: aload         41
586: invokevirtual #75
589: astore        44
591: aload         6
593: aload         38
595: aload         44
597: invokevirtual #89
600: astore        45
602: new           #39
605: dup
606: invokespecial #40
609: ldc           #41
611: invokevirtual #42
614: iload_3
615: invokevirtual #43
618: ldc           #44
620: invokevirtual #42
623: iconst_0
624: invokevirtual #43
627: ldc           #41
629: invokevirtual #42
632: invokevirtual #45
635: iload_3
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #46
647: new           #39
650: dup
651: invokespecial #40
654: ldc           #41
656: invokevirtual #42
659: iload         4
661: invokevirtual #43
664: ldc           #44
666: invokevirtual #42
669: iconst_0
670: invokevirtual #43
673: ldc           #41
675: invokevirtual #42
678: invokevirtual #45
681: iload         4
683: ifne          690
686: iconst_1
687: goto          691
690: iconst_0
691: invokestatic  #46
694: new           #39
697: dup
698: invokespecial #40
701: ldc           #41
703: invokevirtual #42
706: iload         5
708: invokevirtual #43
711: ldc           #44
713: invokevirtual #42
716: iconst_0
717: invokevirtual #43
720: ldc           #41
722: invokevirtual #42
725: invokevirtual #45
728: iload         5
730: ifne          737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #46
741: new           #39
744: dup
745: invokespecial #40
748: ldc           #41
750: invokevirtual #42
753: iload         10
755: invokevirtual #43
758: ldc           #44
760: invokevirtual #42
763: iconst_0
764: invokevirtual #43
767: ldc           #41
769: invokevirtual #42
772: invokevirtual #45
775: iload         10
777: ifne          784
780: iconst_1
781: goto          785
784: iconst_0
785: invokestatic  #46
788: new           #39
791: dup
792: invokespecial #40
795: ldc           #41
797: invokevirtual #42
800: iload         11
802: invokevirtual #43
805: ldc           #44
807: invokevirtual #42
810: iconst_0
811: invokevirtual #43
814: ldc           #41
816: invokevirtual #42
819: invokevirtual #45
822: iload         11
824: ifne          831
827: iconst_1
828: goto          832
831: iconst_0
832: invokestatic  #46
835: new           #39
838: dup
839: invokespecial #40
842: ldc           #41
844: invokevirtual #42
847: iload         12
849: invokevirtual #43
852: ldc           #44
854: invokevirtual #42
857: iconst_0
858: invokevirtual #43
861: ldc           #41
863: invokevirtual #42
866: invokevirtual #45
869: iload         12
871: ifne          878
874: iconst_1
875: goto          879
878: iconst_0
879: invokestatic  #46
882: aload         14
884: invokestatic  #47
887: aload         14
889: invokestatic  #48
892: ldc           #49
894: invokestatic  #50
897: aload         17
899: invokestatic  #47
902: aload         17
904: invokestatic  #48
907: ldc           #49
909: invokestatic  #50
912: aload         18
914: invokestatic  #47
917: aload         18
919: invokestatic  #48
922: ldc           #49
924: invokestatic  #50
927: new           #39
930: dup
931: invokespecial #40
934: ldc           #41
936: invokevirtual #42
939: iload         22
941: invokevirtual #43
944: ldc           #44
946: invokevirtual #42
949: iconst_0
950: invokevirtual #43
953: ldc           #41
955: invokevirtual #42
958: invokevirtual #45
961: iload         22
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #46
974: new           #39
977: dup
978: invokespecial #40
981: ldc           #41
983: invokevirtual #42
986: iload         23
988: invokevirtual #43
991: ldc           #44
993: invokevirtual #42
996: iconst_0
997: invokevirtual #43
1000: ldc           #41
1002: invokevirtual #42
1005: invokevirtual #45
1008: iload         23
1010: ifne          1017
1013: iconst_1
1014: goto          1018
1017: iconst_0
1018: invokestatic  #46
1021: new           #39
1024: dup
1025: invokespecial #40
1028: ldc           #41
1030: invokevirtual #42
1033: iload         24
1035: invokevirtual #43
1038: ldc           #44
1040: invokevirtual #42
1043: iconst_0
1044: invokevirtual #43
1047: ldc           #41
1049: invokevirtual #42
1052: invokevirtual #45
1055: iload         24
1057: ifne          1064
1060: iconst_1
1061: goto          1065
1064: iconst_0
1065: invokestatic  #46
1068: aload         26
1070: invokestatic  #47
1073: aload         26
1075: invokestatic  #48
1078: ldc           #49
1080: invokestatic  #50
1083: aload         29
1085: invokestatic  #47
1088: aload         29
1090: invokestatic  #48
1093: ldc           #49
1095: invokestatic  #50
1098: aload         30
1100: invokestatic  #47
1103: aload         30
1105: invokestatic  #48
1108: ldc           #49
1110: invokestatic  #50
1113: aload         33
1115: invokestatic  #76
1118: aload         34
1120: invokestatic  #76
1123: aload         35
1125: invokestatic  #47
1128: aload         35
1130: invokestatic  #48
1133: ldc           #49
1135: invokestatic  #50
1138: aload         36
1140: invokestatic  #47
1143: aload         36
1145: invokestatic  #48
1148: ldc           #49
1150: invokestatic  #50
1153: aload         37
1155: invokestatic  #47
1158: aload         37
1160: invokestatic  #48
1163: ldc           #49
1165: invokestatic  #50
1168: aload         39
1170: invokestatic  #47
1173: aload         39
1175: invokestatic  #48
1178: ldc           #49
1180: invokestatic  #50
1183: aload         42
1185: invokestatic  #76
1188: aload         43
1190: invokestatic  #76
1193: aload         44
1195: invokestatic  #47
1198: aload         44
1200: invokestatic  #48
1203: ldc           #49
1205: invokestatic  #50
1208: aload         45
1210: invokestatic  #47
1213: aload         45
1215: invokestatic  #48
1218: ldc           #49
1220: invokestatic  #50
1223: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 3586
End line: 3672
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker14 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double15 = simpleVectorialValueChecker14.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker14);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker17 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter18 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker27 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer24.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        int int29 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int30 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        double double31 = levenbergMarquardtOptimizer24.getChiSquare();
        int int32 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter33 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer24);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric34 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer40 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker43 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer40.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker43);
        int int45 = levenbergMarquardtOptimizer40.getMaxEvaluations();
        int int46 = levenbergMarquardtOptimizer40.getMaxEvaluations();
        int int47 = levenbergMarquardtOptimizer40.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter48 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer40);
        double[] doubleArray55 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray56 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray55, doubleArray56, true);
        double[] doubleArray59 = gaussianFitter48.fit(doubleArray55);
        double[] doubleArray60 = curveFitter33.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric34, doubleArray59);
        double[] doubleArray67 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray68 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair70 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray67, doubleArray68, true);
        double[] doubleArray71 = vectorialPointValuePair70.getValue();
        double[] doubleArray72 = vectorialPointValuePair70.getValue();
        double[] doubleArray73 = vectorialPointValuePair70.getPoint();
        double[] doubleArray80 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray81 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray80, doubleArray81, true);
        double[] doubleArray84 = vectorialPointValuePair83.getValue();
        double[] doubleArray85 = vectorialPointValuePair83.getValue();
        double[] doubleArray86 = vectorialPointValuePair83.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair88 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray86, false);
        double[] doubleArray89 = vectorialPointValuePair88.getPoint();
        double[] doubleArray90 = gaussianFitter18.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric34, doubleArray89);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.1102230246251565E-14d + "'", double15 == 1.1102230246251565E-14d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker17);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: new           #16
90: dup
91: invokespecial #150
94: astore        8
96: aload         8
98: invokevirtual #88
101: dstore        9
103: aload_1
104: aload         8
106: invokevirtual #22
109: aload_1
110: invokevirtual #73
113: astore        11
115: new           #24
118: dup
119: aload_1
120: invokespecial #25
123: astore        12
125: new           #8
128: dup
129: ldc2_w        #9
132: ldc2_w        #11
135: ldc2_w        #13
138: dconst_1
139: ldc2_w        #13
142: invokespecial #15
145: astore        13
147: new           #16
150: dup
151: ldc2_w        #17
154: ldc2_w        #19
157: invokespecial #21
160: astore        14
162: aload         13
164: aload         14
166: invokevirtual #22
169: aload         13
171: invokevirtual #23
174: istore        15
176: aload         13
178: invokevirtual #23
181: istore        16
183: aload         13
185: invokevirtual #58
188: dstore        17
190: aload         13
192: invokevirtual #23
195: istore        19
197: new           #67
200: dup
201: aload         13
203: invokespecial #68
206: astore        20
208: new           #117
211: dup
212: invokespecial #118
215: astore        21
217: new           #8
220: dup
221: ldc2_w        #9
224: ldc2_w        #11
227: ldc2_w        #13
230: dconst_1
231: ldc2_w        #13
234: invokespecial #15
237: astore        22
239: new           #16
242: dup
243: ldc2_w        #17
246: ldc2_w        #19
249: invokespecial #21
252: astore        23
254: aload         22
256: aload         23
258: invokevirtual #22
261: aload         22
263: invokevirtual #23
266: istore        24
268: aload         22
270: invokevirtual #23
273: istore        25
275: aload         22
277: invokevirtual #53
280: istore        26
282: new           #24
285: dup
286: aload         22
288: invokespecial #25
291: astore        27
293: bipush        6
295: newarray       double
297: dup
298: iconst_0
299: ldc2_w        #27
302: dastore
303: dup
304: iconst_1
305: ldc2_w        #9
308: dastore
309: dup
310: iconst_2
311: ldc2_w        #13
314: dastore
315: dup
316: iconst_3
317: ldc2_w        #29
320: dastore
321: dup
322: iconst_4
323: ldc2_w        #17
326: dastore
327: dup
328: iconst_5
329: ldc2_w        #31
332: dastore
333: astore        28
335: aconst_null
336: astore        29
338: new           #33
341: dup
342: aload         28
344: aload         29
346: iconst_1
347: invokespecial #34
350: astore        30
352: aload         27
354: aload         28
356: invokevirtual #54
359: astore        31
361: aload         20
363: aload         21
365: aload         31
367: invokevirtual #89
370: astore        32
372: bipush        6
374: newarray       double
376: dup
377: iconst_0
378: ldc2_w        #27
381: dastore
382: dup
383: iconst_1
384: ldc2_w        #9
387: dastore
388: dup
389: iconst_2
390: ldc2_w        #13
393: dastore
394: dup
395: iconst_3
396: ldc2_w        #29
399: dastore
400: dup
401: iconst_4
402: ldc2_w        #17
405: dastore
406: dup
407: iconst_5
408: ldc2_w        #31
411: dastore
412: astore        33
414: aconst_null
415: astore        34
417: new           #33
420: dup
421: aload         33
423: aload         34
425: iconst_1
426: invokespecial #34
429: astore        35
431: aload         35
433: invokevirtual #74
436: astore        36
438: aload         35
440: invokevirtual #74
443: astore        37
445: aload         35
447: invokevirtual #75
450: astore        38
452: bipush        6
454: newarray       double
456: dup
457: iconst_0
458: ldc2_w        #27
461: dastore
462: dup
463: iconst_1
464: ldc2_w        #9
467: dastore
468: dup
469: iconst_2
470: ldc2_w        #13
473: dastore
474: dup
475: iconst_3
476: ldc2_w        #29
479: dastore
480: dup
481: iconst_4
482: ldc2_w        #17
485: dastore
486: dup
487: iconst_5
488: ldc2_w        #31
491: dastore
492: astore        39
494: aconst_null
495: astore        40
497: new           #33
500: dup
501: aload         39
503: aload         40
505: iconst_1
506: invokespecial #34
509: astore        41
511: aload         41
513: invokevirtual #74
516: astore        42
518: aload         41
520: invokevirtual #74
523: astore        43
525: aload         41
527: invokevirtual #75
530: astore        44
532: new           #33
535: dup
536: aload         38
538: aload         44
540: iconst_0
541: invokespecial #34
544: astore        45
546: aload         45
548: invokevirtual #75
551: astore        46
553: aload         12
555: aload         21
557: aload         46
559: invokevirtual #55
562: astore        47
564: new           #39
567: dup
568: invokespecial #40
571: ldc           #41
573: invokevirtual #42
576: iload_3
577: invokevirtual #43
580: ldc           #44
582: invokevirtual #42
585: iconst_0
586: invokevirtual #43
589: ldc           #41
591: invokevirtual #42
594: invokevirtual #45
597: iload_3
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #46
609: new           #39
612: dup
613: invokespecial #40
616: ldc           #41
618: invokevirtual #42
621: iload         4
623: invokevirtual #43
626: ldc           #44
628: invokevirtual #42
631: iconst_0
632: invokevirtual #43
635: ldc           #41
637: invokevirtual #42
640: invokevirtual #45
643: iload         4
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #46
656: new           #39
659: dup
660: invokespecial #40
663: ldc           #41
665: invokevirtual #42
668: dload         5
670: invokevirtual #59
673: ldc           #44
675: invokevirtual #42
678: dconst_0
679: invokevirtual #59
682: ldc           #41
684: invokevirtual #42
687: invokevirtual #45
690: dload         5
692: dconst_0
693: dcmpl
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #46
705: new           #39
708: dup
709: invokespecial #40
712: ldc           #41
714: invokevirtual #42
717: iload         7
719: invokevirtual #43
722: ldc           #44
724: invokevirtual #42
727: iconst_0
728: invokevirtual #43
731: ldc           #41
733: invokevirtual #42
736: invokevirtual #45
739: iload         7
741: ifne          748
744: iconst_1
745: goto          749
748: iconst_0
749: invokestatic  #46
752: new           #39
755: dup
756: invokespecial #40
759: ldc           #41
761: invokevirtual #42
764: dload         9
766: invokevirtual #59
769: ldc           #44
771: invokevirtual #42
774: ldc2_w        #152
777: invokevirtual #59
780: ldc           #41
782: invokevirtual #42
785: invokevirtual #45
788: dload         9
790: ldc2_w        #152
793: dcmpl
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #46
805: aload         11
807: invokestatic  #47
810: new           #39
813: dup
814: invokespecial #40
817: ldc           #41
819: invokevirtual #42
822: iload         15
824: invokevirtual #43
827: ldc           #44
829: invokevirtual #42
832: iconst_0
833: invokevirtual #43
836: ldc           #41
838: invokevirtual #42
841: invokevirtual #45
844: iload         15
846: ifne          853
849: iconst_1
850: goto          854
853: iconst_0
854: invokestatic  #46
857: new           #39
860: dup
861: invokespecial #40
864: ldc           #41
866: invokevirtual #42
869: iload         16
871: invokevirtual #43
874: ldc           #44
876: invokevirtual #42
879: iconst_0
880: invokevirtual #43
883: ldc           #41
885: invokevirtual #42
888: invokevirtual #45
891: iload         16
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #46
904: new           #39
907: dup
908: invokespecial #40
911: ldc           #41
913: invokevirtual #42
916: dload         17
918: invokevirtual #59
921: ldc           #44
923: invokevirtual #42
926: dconst_0
927: invokevirtual #59
930: ldc           #41
932: invokevirtual #42
935: invokevirtual #45
938: dload         17
940: dconst_0
941: dcmpl
942: ifne          949
945: iconst_1
946: goto          950
949: iconst_0
950: invokestatic  #46
953: new           #39
956: dup
957: invokespecial #40
960: ldc           #41
962: invokevirtual #42
965: iload         19
967: invokevirtual #43
970: ldc           #44
972: invokevirtual #42
975: iconst_0
976: invokevirtual #43
979: ldc           #41
981: invokevirtual #42
984: invokevirtual #45
987: iload         19
989: ifne          996
992: iconst_1
993: goto          997
996: iconst_0
997: invokestatic  #46
1000: new           #39
1003: dup
1004: invokespecial #40
1007: ldc           #41
1009: invokevirtual #42
1012: iload         24
1014: invokevirtual #43
1017: ldc           #44
1019: invokevirtual #42
1022: iconst_0
1023: invokevirtual #43
1026: ldc           #41
1028: invokevirtual #42
1031: invokevirtual #45
1034: iload         24
1036: ifne          1043
1039: iconst_1
1040: goto          1044
1043: iconst_0
1044: invokestatic  #46
1047: new           #39
1050: dup
1051: invokespecial #40
1054: ldc           #41
1056: invokevirtual #42
1059: iload         25
1061: invokevirtual #43
1064: ldc           #44
1066: invokevirtual #42
1069: iconst_0
1070: invokevirtual #43
1073: ldc           #41
1075: invokevirtual #42
1078: invokevirtual #45
1081: iload         25
1083: ifne          1090
1086: iconst_1
1087: goto          1091
1090: iconst_0
1091: invokestatic  #46
1094: new           #39
1097: dup
1098: invokespecial #40
1101: ldc           #41
1103: invokevirtual #42
1106: iload         26
1108: invokevirtual #43
1111: ldc           #44
1113: invokevirtual #42
1116: iconst_0
1117: invokevirtual #43
1120: ldc           #41
1122: invokevirtual #42
1125: invokevirtual #45
1128: iload         26
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #46
1141: aload         28
1143: invokestatic  #47
1146: aload         28
1148: invokestatic  #48
1151: ldc           #49
1153: invokestatic  #50
1156: aload         31
1158: invokestatic  #47
1161: aload         31
1163: invokestatic  #48
1166: ldc           #49
1168: invokestatic  #50
1171: aload         32
1173: invokestatic  #47
1176: aload         32
1178: invokestatic  #48
1181: ldc           #49
1183: invokestatic  #50
1186: aload         33
1188: invokestatic  #47
1191: aload         33
1193: invokestatic  #48
1196: ldc           #49
1198: invokestatic  #50
1201: aload         36
1203: invokestatic  #76
1206: aload         37
1208: invokestatic  #76
1211: aload         38
1213: invokestatic  #47
1216: aload         38
1218: invokestatic  #48
1221: ldc           #49
1223: invokestatic  #50
1226: aload         39
1228: invokestatic  #47
1231: aload         39
1233: invokestatic  #48
1236: ldc           #49
1238: invokestatic  #50
1241: aload         42
1243: invokestatic  #76
1246: aload         43
1248: invokestatic  #76
1251: aload         44
1253: invokestatic  #47
1256: aload         44
1258: invokestatic  #48
1261: ldc           #49
1263: invokestatic  #50
1266: aload         46
1268: invokestatic  #47
1271: aload         46
1273: invokestatic  #48
1276: ldc           #49
1278: invokestatic  #50
1281: aload         47
1283: invokestatic  #47
1286: aload         47
1288: invokestatic  #48
1291: ldc           #49
1293: invokestatic  #50
1296: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 3675
End line: 3752
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double17 = simpleVectorialValueChecker16.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker16);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter19 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer25 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker28 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer25.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker28);
        int int30 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        int int31 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter32 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer25);
        gaussianFitter32.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction34 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer40 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker43 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer40.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker43);
        int int45 = levenbergMarquardtOptimizer40.getMaxEvaluations();
        int int46 = levenbergMarquardtOptimizer40.getMaxEvaluations();
        int int47 = levenbergMarquardtOptimizer40.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter48 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer40);
        double[] doubleArray55 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray56 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair58 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray55, doubleArray56, true);
        double[] doubleArray59 = gaussianFitter48.fit(doubleArray55);
        double[] doubleArray60 = gaussianFitter32.fit(parametricUnivariateRealFunction34, doubleArray59);
        double[] doubleArray61 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer67 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker70 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer67.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker70);
        int int72 = levenbergMarquardtOptimizer67.getMaxEvaluations();
        int int73 = levenbergMarquardtOptimizer67.getMaxEvaluations();
        int int74 = levenbergMarquardtOptimizer67.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter75 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer67);
        double[] doubleArray82 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray83 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray82, doubleArray83, true);
        double[] doubleArray86 = gaussianFitter75.fit(doubleArray82);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair87 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray82);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair88 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray82);
        double[] doubleArray89 = vectorialPointValuePair88.getPoint();
        double[] doubleArray90 = gaussianFitter19.fit(doubleArray89);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #255
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc2_w        #9
31: ldc2_w        #11
34: ldc2_w        #13
37: dconst_1
38: ldc2_w        #13
41: invokespecial #15
44: astore_1
45: new           #16
48: dup
49: ldc2_w        #17
52: ldc2_w        #19
55: invokespecial #21
58: astore_2
59: aload_1
60: aload_2
61: invokevirtual #22
64: aload_1
65: invokevirtual #23
68: istore_3
69: aload_1
70: invokevirtual #23
73: istore        4
75: aload_1
76: invokevirtual #58
79: dstore        5
81: aload_1
82: invokevirtual #23
85: istore        7
87: new           #16
90: dup
91: ldc2_w        #17
94: ldc2_w        #19
97: invokespecial #21
100: astore        8
102: aload         8
104: invokevirtual #88
107: dstore        9
109: aload_1
110: aload         8
112: invokevirtual #22
115: new           #24
118: dup
119: aload_1
120: invokespecial #25
123: astore        11
125: new           #8
128: dup
129: ldc2_w        #9
132: ldc2_w        #11
135: ldc2_w        #13
138: dconst_1
139: ldc2_w        #13
142: invokespecial #15
145: astore        12
147: new           #16
150: dup
151: ldc2_w        #17
154: ldc2_w        #19
157: invokespecial #21
160: astore        13
162: aload         12
164: aload         13
166: invokevirtual #22
169: aload         12
171: invokevirtual #23
174: istore        14
176: aload         12
178: invokevirtual #23
181: istore        15
183: new           #24
186: dup
187: aload         12
189: invokespecial #25
192: astore        16
194: aload         16
196: invokevirtual #52
199: aconst_null
200: astore        17
202: new           #8
205: dup
206: ldc2_w        #9
209: ldc2_w        #11
212: ldc2_w        #13
215: dconst_1
216: ldc2_w        #13
219: invokespecial #15
222: astore        18
224: new           #16
227: dup
228: ldc2_w        #17
231: ldc2_w        #19
234: invokespecial #21
237: astore        19
239: aload         18
241: aload         19
243: invokevirtual #22
246: aload         18
248: invokevirtual #23
251: istore        20
253: aload         18
255: invokevirtual #23
258: istore        21
260: aload         18
262: invokevirtual #53
265: istore        22
267: new           #24
270: dup
271: aload         18
273: invokespecial #25
276: astore        23
278: bipush        6
280: newarray       double
282: dup
283: iconst_0
284: ldc2_w        #27
287: dastore
288: dup
289: iconst_1
290: ldc2_w        #9
293: dastore
294: dup
295: iconst_2
296: ldc2_w        #13
299: dastore
300: dup
301: iconst_3
302: ldc2_w        #29
305: dastore
306: dup
307: iconst_4
308: ldc2_w        #17
311: dastore
312: dup
313: iconst_5
314: ldc2_w        #31
317: dastore
318: astore        24
320: aconst_null
321: astore        25
323: new           #33
326: dup
327: aload         24
329: aload         25
331: iconst_1
332: invokespecial #34
335: astore        26
337: aload         23
339: aload         24
341: invokevirtual #54
344: astore        27
346: aload         16
348: aload         17
350: aload         27
352: invokevirtual #55
355: astore        28
357: aconst_null
358: astore        29
360: new           #8
363: dup
364: ldc2_w        #9
367: ldc2_w        #11
370: ldc2_w        #13
373: dconst_1
374: ldc2_w        #13
377: invokespecial #15
380: astore        30
382: new           #16
385: dup
386: ldc2_w        #17
389: ldc2_w        #19
392: invokespecial #21
395: astore        31
397: aload         30
399: aload         31
401: invokevirtual #22
404: aload         30
406: invokevirtual #23
409: istore        32
411: aload         30
413: invokevirtual #23
416: istore        33
418: aload         30
420: invokevirtual #53
423: istore        34
425: new           #24
428: dup
429: aload         30
431: invokespecial #25
434: astore        35
436: bipush        6
438: newarray       double
440: dup
441: iconst_0
442: ldc2_w        #27
445: dastore
446: dup
447: iconst_1
448: ldc2_w        #9
451: dastore
452: dup
453: iconst_2
454: ldc2_w        #13
457: dastore
458: dup
459: iconst_3
460: ldc2_w        #29
463: dastore
464: dup
465: iconst_4
466: ldc2_w        #17
469: dastore
470: dup
471: iconst_5
472: ldc2_w        #31
475: dastore
476: astore        36
478: aconst_null
479: astore        37
481: new           #33
484: dup
485: aload         36
487: aload         37
489: iconst_1
490: invokespecial #34
493: astore        38
495: aload         35
497: aload         36
499: invokevirtual #54
502: astore        39
504: new           #33
507: dup
508: aload         29
510: aload         36
512: invokespecial #109
515: astore        40
517: new           #33
520: dup
521: aload         28
523: aload         36
525: invokespecial #109
528: astore        41
530: aload         41
532: invokevirtual #75
535: astore        42
537: aload         11
539: aload         42
541: invokevirtual #54
544: astore        43
546: new           #39
549: dup
550: invokespecial #40
553: ldc           #41
555: invokevirtual #42
558: iload_3
559: invokevirtual #43
562: ldc           #44
564: invokevirtual #42
567: iconst_0
568: invokevirtual #43
571: ldc           #41
573: invokevirtual #42
576: invokevirtual #45
579: iload_3
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #46
591: new           #39
594: dup
595: invokespecial #40
598: ldc           #41
600: invokevirtual #42
603: iload         4
605: invokevirtual #43
608: ldc           #44
610: invokevirtual #42
613: iconst_0
614: invokevirtual #43
617: ldc           #41
619: invokevirtual #42
622: invokevirtual #45
625: iload         4
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #46
638: new           #39
641: dup
642: invokespecial #40
645: ldc           #41
647: invokevirtual #42
650: dload         5
652: invokevirtual #59
655: ldc           #44
657: invokevirtual #42
660: dconst_0
661: invokevirtual #59
664: ldc           #41
666: invokevirtual #42
669: invokevirtual #45
672: dload         5
674: dconst_0
675: dcmpl
676: ifne          683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #46
687: new           #39
690: dup
691: invokespecial #40
694: ldc           #41
696: invokevirtual #42
699: iload         7
701: invokevirtual #43
704: ldc           #44
706: invokevirtual #42
709: iconst_0
710: invokevirtual #43
713: ldc           #41
715: invokevirtual #42
718: invokevirtual #45
721: iload         7
723: ifne          730
726: iconst_1
727: goto          731
730: iconst_0
731: invokestatic  #46
734: new           #39
737: dup
738: invokespecial #40
741: ldc           #41
743: invokevirtual #42
746: dload         9
748: invokevirtual #59
751: ldc           #44
753: invokevirtual #42
756: ldc2_w        #17
759: invokevirtual #59
762: ldc           #41
764: invokevirtual #42
767: invokevirtual #45
770: dload         9
772: ldc2_w        #17
775: dcmpl
776: ifne          783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #46
787: new           #39
790: dup
791: invokespecial #40
794: ldc           #41
796: invokevirtual #42
799: iload         14
801: invokevirtual #43
804: ldc           #44
806: invokevirtual #42
809: iconst_0
810: invokevirtual #43
813: ldc           #41
815: invokevirtual #42
818: invokevirtual #45
821: iload         14
823: ifne          830
826: iconst_1
827: goto          831
830: iconst_0
831: invokestatic  #46
834: new           #39
837: dup
838: invokespecial #40
841: ldc           #41
843: invokevirtual #42
846: iload         15
848: invokevirtual #43
851: ldc           #44
853: invokevirtual #42
856: iconst_0
857: invokevirtual #43
860: ldc           #41
862: invokevirtual #42
865: invokevirtual #45
868: iload         15
870: ifne          877
873: iconst_1
874: goto          878
877: iconst_0
878: invokestatic  #46
881: new           #39
884: dup
885: invokespecial #40
888: ldc           #41
890: invokevirtual #42
893: iload         20
895: invokevirtual #43
898: ldc           #44
900: invokevirtual #42
903: iconst_0
904: invokevirtual #43
907: ldc           #41
909: invokevirtual #42
912: invokevirtual #45
915: iload         20
917: ifne          924
920: iconst_1
921: goto          925
924: iconst_0
925: invokestatic  #46
928: new           #39
931: dup
932: invokespecial #40
935: ldc           #41
937: invokevirtual #42
940: iload         21
942: invokevirtual #43
945: ldc           #44
947: invokevirtual #42
950: iconst_0
951: invokevirtual #43
954: ldc           #41
956: invokevirtual #42
959: invokevirtual #45
962: iload         21
964: ifne          971
967: iconst_1
968: goto          972
971: iconst_0
972: invokestatic  #46
975: new           #39
978: dup
979: invokespecial #40
982: ldc           #41
984: invokevirtual #42
987: iload         22
989: invokevirtual #43
992: ldc           #44
994: invokevirtual #42
997: iconst_0
998: invokevirtual #43
1001: ldc           #41
1003: invokevirtual #42
1006: invokevirtual #45
1009: iload         22
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #46
1022: aload         24
1024: invokestatic  #47
1027: aload         24
1029: invokestatic  #48
1032: ldc           #49
1034: invokestatic  #50
1037: aload         27
1039: invokestatic  #47
1042: aload         27
1044: invokestatic  #48
1047: ldc           #49
1049: invokestatic  #50
1052: aload         28
1054: invokestatic  #47
1057: aload         28
1059: invokestatic  #48
1062: ldc           #49
1064: invokestatic  #50
1067: new           #39
1070: dup
1071: invokespecial #40
1074: ldc           #41
1076: invokevirtual #42
1079: iload         32
1081: invokevirtual #43
1084: ldc           #44
1086: invokevirtual #42
1089: iconst_0
1090: invokevirtual #43
1093: ldc           #41
1095: invokevirtual #42
1098: invokevirtual #45
1101: iload         32
1103: ifne          1110
1106: iconst_1
1107: goto          1111
1110: iconst_0
1111: invokestatic  #46
1114: new           #39
1117: dup
1118: invokespecial #40
1121: ldc           #41
1123: invokevirtual #42
1126: iload         33
1128: invokevirtual #43
1131: ldc           #44
1133: invokevirtual #42
1136: iconst_0
1137: invokevirtual #43
1140: ldc           #41
1142: invokevirtual #42
1145: invokevirtual #45
1148: iload         33
1150: ifne          1157
1153: iconst_1
1154: goto          1158
1157: iconst_0
1158: invokestatic  #46
1161: new           #39
1164: dup
1165: invokespecial #40
1168: ldc           #41
1170: invokevirtual #42
1173: iload         34
1175: invokevirtual #43
1178: ldc           #44
1180: invokevirtual #42
1183: iconst_0
1184: invokevirtual #43
1187: ldc           #41
1189: invokevirtual #42
1192: invokevirtual #45
1195: iload         34
1197: ifne          1204
1200: iconst_1
1201: goto          1205
1204: iconst_0
1205: invokestatic  #46
1208: aload         36
1210: invokestatic  #47
1213: aload         36
1215: invokestatic  #48
1218: ldc           #49
1220: invokestatic  #50
1223: aload         39
1225: invokestatic  #47
1228: aload         39
1230: invokestatic  #48
1233: ldc           #49
1235: invokestatic  #50
1238: aload         42
1240: invokestatic  #47
1243: aload         42
1245: invokestatic  #48
1248: ldc           #49
1250: invokestatic  #50
1253: aload         43
1255: invokestatic  #47
1258: aload         43
1260: invokestatic  #48
1263: ldc           #49
1265: invokestatic  #50
1268: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 3755
End line: 3809
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        gaussianFitter12.addObservedPoint(2.2227587494850775E-162d, (double) 4, 2.7755575615628914E-17d);
        gaussianFitter12.clearObservations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray60 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: new           #8
89: dup
90: ldc2_w        #9
93: ldc2_w        #11
96: ldc2_w        #13
99: dconst_1
100: ldc2_w        #13
103: invokespecial #15
106: astore        6
108: new           #16
111: dup
112: ldc2_w        #17
115: ldc2_w        #19
118: invokespecial #21
121: astore        7
123: aload         6
125: aload         7
127: invokevirtual #22
130: aload         6
132: invokevirtual #23
135: istore        8
137: aload         6
139: invokevirtual #23
142: istore        9
144: new           #24
147: dup
148: aload         6
150: invokespecial #25
153: astore        10
155: aload         10
157: invokevirtual #52
160: aconst_null
161: astore        11
163: new           #8
166: dup
167: ldc2_w        #9
170: ldc2_w        #11
173: ldc2_w        #13
176: dconst_1
177: ldc2_w        #13
180: invokespecial #15
183: astore        12
185: new           #16
188: dup
189: ldc2_w        #17
192: ldc2_w        #19
195: invokespecial #21
198: astore        13
200: aload         12
202: aload         13
204: invokevirtual #22
207: aload         12
209: invokevirtual #23
212: istore        14
214: aload         12
216: invokevirtual #23
219: istore        15
221: aload         12
223: invokevirtual #53
226: istore        16
228: new           #24
231: dup
232: aload         12
234: invokespecial #25
237: astore        17
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #27
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #9
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #13
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #29
266: dastore
267: dup
268: iconst_4
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #31
278: dastore
279: astore        18
281: aconst_null
282: astore        19
284: new           #33
287: dup
288: aload         18
290: aload         19
292: iconst_1
293: invokespecial #34
296: astore        20
298: aload         17
300: aload         18
302: invokevirtual #54
305: astore        21
307: aload         10
309: aload         11
311: aload         21
313: invokevirtual #55
316: astore        22
318: aload         5
320: aload         21
322: invokevirtual #54
325: astore        23
327: aload         5
329: ldc2_w        #103
332: ldc2_w        #257
335: ldc2_w        #259
338: invokevirtual #98
341: aload         5
343: invokevirtual #52
346: aload         5
348: invokevirtual #63
351: astore        24
353: ldc           #64
355: invokestatic  #37
358: goto          363
361: astore        24
363: new           #39
366: dup
367: invokespecial #40
370: ldc           #41
372: invokevirtual #42
375: iload_3
376: invokevirtual #43
379: ldc           #44
381: invokevirtual #42
384: iconst_0
385: invokevirtual #43
388: ldc           #41
390: invokevirtual #42
393: invokevirtual #45
396: iload_3
397: ifne          404
400: iconst_1
401: goto          405
404: iconst_0
405: invokestatic  #46
408: new           #39
411: dup
412: invokespecial #40
415: ldc           #41
417: invokevirtual #42
420: iload         4
422: invokevirtual #43
425: ldc           #44
427: invokevirtual #42
430: iconst_0
431: invokevirtual #43
434: ldc           #41
436: invokevirtual #42
439: invokevirtual #45
442: iload         4
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #46
455: new           #39
458: dup
459: invokespecial #40
462: ldc           #41
464: invokevirtual #42
467: iload         8
469: invokevirtual #43
472: ldc           #44
474: invokevirtual #42
477: iconst_0
478: invokevirtual #43
481: ldc           #41
483: invokevirtual #42
486: invokevirtual #45
489: iload         8
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #46
502: new           #39
505: dup
506: invokespecial #40
509: ldc           #41
511: invokevirtual #42
514: iload         9
516: invokevirtual #43
519: ldc           #44
521: invokevirtual #42
524: iconst_0
525: invokevirtual #43
528: ldc           #41
530: invokevirtual #42
533: invokevirtual #45
536: iload         9
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #46
549: new           #39
552: dup
553: invokespecial #40
556: ldc           #41
558: invokevirtual #42
561: iload         14
563: invokevirtual #43
566: ldc           #44
568: invokevirtual #42
571: iconst_0
572: invokevirtual #43
575: ldc           #41
577: invokevirtual #42
580: invokevirtual #45
583: iload         14
585: ifne          592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #46
596: new           #39
599: dup
600: invokespecial #40
603: ldc           #41
605: invokevirtual #42
608: iload         15
610: invokevirtual #43
613: ldc           #44
615: invokevirtual #42
618: iconst_0
619: invokevirtual #43
622: ldc           #41
624: invokevirtual #42
627: invokevirtual #45
630: iload         15
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #46
643: new           #39
646: dup
647: invokespecial #40
650: ldc           #41
652: invokevirtual #42
655: iload         16
657: invokevirtual #43
660: ldc           #44
662: invokevirtual #42
665: iconst_0
666: invokevirtual #43
669: ldc           #41
671: invokevirtual #42
674: invokevirtual #45
677: iload         16
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #46
690: aload         18
692: invokestatic  #47
695: aload         18
697: invokestatic  #48
700: ldc           #49
702: invokestatic  #50
705: aload         21
707: invokestatic  #47
710: aload         21
712: invokestatic  #48
715: ldc           #49
717: invokestatic  #50
720: aload         22
722: invokestatic  #47
725: aload         22
727: invokestatic  #48
730: ldc           #49
732: invokestatic  #50
735: aload         23
737: invokestatic  #47
740: aload         23
742: invokestatic  #48
745: ldc           #49
747: invokestatic  #50
750: return
Exception table:
from    to  target type
346   358   361   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 3812
End line: 3835
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = gaussianFitter13.fit(doubleArray20);
        gaussianFitter13.addObservedPoint(74.20321057778875d, 52.0d, 0.10272986741866948d);
        gaussianFitter13.addObservedPoint((-8.28637264380564E-29d), (-0.5540437953657898d), 1.4342332658394366d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: bipush        6
94: newarray       double
96: dup
97: iconst_0
98: ldc2_w        #27
101: dastore
102: dup
103: iconst_1
104: ldc2_w        #9
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #13
113: dastore
114: dup
115: iconst_3
116: ldc2_w        #29
119: dastore
120: dup
121: iconst_4
122: ldc2_w        #17
125: dastore
126: dup
127: iconst_5
128: ldc2_w        #31
131: dastore
132: astore        7
134: aconst_null
135: astore        8
137: new           #33
140: dup
141: aload         7
143: aload         8
145: iconst_1
146: invokespecial #34
149: astore        9
151: aload         6
153: aload         7
155: invokevirtual #54
158: astore        10
160: aload         6
162: ldc2_w        #262
165: ldc2_w        #19
168: ldc2_w        #264
171: invokevirtual #98
174: aload         6
176: ldc2_w        #266
179: ldc2_w        #181
182: ldc2_w        #268
185: invokevirtual #98
188: new           #39
191: dup
192: invokespecial #40
195: ldc           #41
197: invokevirtual #42
200: iload_3
201: invokevirtual #43
204: ldc           #44
206: invokevirtual #42
209: iconst_0
210: invokevirtual #43
213: ldc           #41
215: invokevirtual #42
218: invokevirtual #45
221: iload_3
222: ifne          229
225: iconst_1
226: goto          230
229: iconst_0
230: invokestatic  #46
233: new           #39
236: dup
237: invokespecial #40
240: ldc           #41
242: invokevirtual #42
245: iload         4
247: invokevirtual #43
250: ldc           #44
252: invokevirtual #42
255: iconst_0
256: invokevirtual #43
259: ldc           #41
261: invokevirtual #42
264: invokevirtual #45
267: iload         4
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #46
280: new           #39
283: dup
284: invokespecial #40
287: ldc           #41
289: invokevirtual #42
292: iload         5
294: invokevirtual #43
297: ldc           #44
299: invokevirtual #42
302: iconst_0
303: invokevirtual #43
306: ldc           #41
308: invokevirtual #42
311: invokevirtual #45
314: iload         5
316: ifne          323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #46
327: aload         7
329: invokestatic  #47
332: aload         7
334: invokestatic  #48
337: ldc           #49
339: invokestatic  #50
342: aload         10
344: invokestatic  #47
347: aload         10
349: invokestatic  #48
352: ldc           #49
354: invokestatic  #50
357: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 3838
End line: 3922
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer60 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker63 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer60.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker63);
        int int65 = levenbergMarquardtOptimizer60.getMaxEvaluations();
        int int66 = levenbergMarquardtOptimizer60.getMaxEvaluations();
        int int67 = levenbergMarquardtOptimizer60.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter68 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer60);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction69 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer75 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker78 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer75.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker78);
        int int80 = levenbergMarquardtOptimizer75.getMaxEvaluations();
        int int81 = levenbergMarquardtOptimizer75.getMaxEvaluations();
        int int82 = levenbergMarquardtOptimizer75.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter83 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer75);
        double[] doubleArray90 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray91 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair93 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray90, doubleArray91, true);
        double[] doubleArray94 = gaussianFitter83.fit(doubleArray90);
        double[] doubleArray95 = curveFitter68.fit(parametricUnivariateRealFunction69, doubleArray90);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair97 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray95, true);
        double[] doubleArray98 = vectorialPointValuePair97.getValue();
        double[] doubleArray99 = vectorialPointValuePair97.getPoint();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray99), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #270
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: new           #8
89: dup
90: ldc2_w        #9
93: ldc2_w        #11
96: ldc2_w        #13
99: dconst_1
100: ldc2_w        #13
103: invokespecial #15
106: astore        6
108: new           #16
111: dup
112: ldc2_w        #17
115: ldc2_w        #19
118: invokespecial #21
121: astore        7
123: aload         6
125: aload         7
127: invokevirtual #22
130: aload         6
132: invokevirtual #23
135: istore        8
137: aload         6
139: invokevirtual #23
142: istore        9
144: new           #24
147: dup
148: aload         6
150: invokespecial #25
153: astore        10
155: aload         10
157: invokevirtual #52
160: aconst_null
161: astore        11
163: new           #8
166: dup
167: ldc2_w        #9
170: ldc2_w        #11
173: ldc2_w        #13
176: dconst_1
177: ldc2_w        #13
180: invokespecial #15
183: astore        12
185: new           #16
188: dup
189: ldc2_w        #17
192: ldc2_w        #19
195: invokespecial #21
198: astore        13
200: aload         12
202: aload         13
204: invokevirtual #22
207: aload         12
209: invokevirtual #23
212: istore        14
214: aload         12
216: invokevirtual #23
219: istore        15
221: aload         12
223: invokevirtual #53
226: istore        16
228: new           #24
231: dup
232: aload         12
234: invokespecial #25
237: astore        17
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #27
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #9
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #13
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #29
266: dastore
267: dup
268: iconst_4
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #31
278: dastore
279: astore        18
281: aconst_null
282: astore        19
284: new           #33
287: dup
288: aload         18
290: aload         19
292: iconst_1
293: invokespecial #34
296: astore        20
298: aload         17
300: aload         18
302: invokevirtual #54
305: astore        21
307: aload         10
309: aload         11
311: aload         21
313: invokevirtual #55
316: astore        22
318: aload         5
320: aload         21
322: invokevirtual #54
325: astore        23
327: new           #8
330: dup
331: ldc2_w        #9
334: ldc2_w        #11
337: ldc2_w        #13
340: dconst_1
341: ldc2_w        #13
344: invokespecial #15
347: astore        24
349: new           #16
352: dup
353: ldc2_w        #17
356: ldc2_w        #19
359: invokespecial #21
362: astore        25
364: aload         24
366: aload         25
368: invokevirtual #22
371: aload         24
373: invokevirtual #23
376: istore        26
378: aload         24
380: invokevirtual #23
383: istore        27
385: aload         24
387: invokevirtual #53
390: istore        28
392: new           #67
395: dup
396: aload         24
398: invokespecial #68
401: astore        29
403: aconst_null
404: astore        30
406: new           #8
409: dup
410: ldc2_w        #9
413: ldc2_w        #11
416: ldc2_w        #13
419: dconst_1
420: ldc2_w        #13
423: invokespecial #15
426: astore        31
428: new           #16
431: dup
432: ldc2_w        #17
435: ldc2_w        #19
438: invokespecial #21
441: astore        32
443: aload         31
445: aload         32
447: invokevirtual #22
450: aload         31
452: invokevirtual #23
455: istore        33
457: aload         31
459: invokevirtual #23
462: istore        34
464: aload         31
466: invokevirtual #53
469: istore        35
471: new           #24
474: dup
475: aload         31
477: invokespecial #25
480: astore        36
482: bipush        6
484: newarray       double
486: dup
487: iconst_0
488: ldc2_w        #27
491: dastore
492: dup
493: iconst_1
494: ldc2_w        #9
497: dastore
498: dup
499: iconst_2
500: ldc2_w        #13
503: dastore
504: dup
505: iconst_3
506: ldc2_w        #29
509: dastore
510: dup
511: iconst_4
512: ldc2_w        #17
515: dastore
516: dup
517: iconst_5
518: ldc2_w        #31
521: dastore
522: astore        37
524: aconst_null
525: astore        38
527: new           #33
530: dup
531: aload         37
533: aload         38
535: iconst_1
536: invokespecial #34
539: astore        39
541: aload         36
543: aload         37
545: invokevirtual #54
548: astore        40
550: aload         29
552: aload         30
554: aload         37
556: invokevirtual #89
559: astore        41
561: new           #33
564: dup
565: aload         21
567: aload         41
569: iconst_1
570: invokespecial #34
573: astore        42
575: aload         42
577: invokevirtual #74
580: astore        43
582: aload         42
584: invokevirtual #75
587: astore        44
589: new           #39
592: dup
593: invokespecial #40
596: ldc           #41
598: invokevirtual #42
601: iload_3
602: invokevirtual #43
605: ldc           #44
607: invokevirtual #42
610: iconst_0
611: invokevirtual #43
614: ldc           #41
616: invokevirtual #42
619: invokevirtual #45
622: iload_3
623: ifne          630
626: iconst_1
627: goto          631
630: iconst_0
631: invokestatic  #46
634: new           #39
637: dup
638: invokespecial #40
641: ldc           #41
643: invokevirtual #42
646: iload         4
648: invokevirtual #43
651: ldc           #44
653: invokevirtual #42
656: iconst_0
657: invokevirtual #43
660: ldc           #41
662: invokevirtual #42
665: invokevirtual #45
668: iload         4
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #46
681: new           #39
684: dup
685: invokespecial #40
688: ldc           #41
690: invokevirtual #42
693: iload         8
695: invokevirtual #43
698: ldc           #44
700: invokevirtual #42
703: iconst_0
704: invokevirtual #43
707: ldc           #41
709: invokevirtual #42
712: invokevirtual #45
715: iload         8
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #46
728: new           #39
731: dup
732: invokespecial #40
735: ldc           #41
737: invokevirtual #42
740: iload         9
742: invokevirtual #43
745: ldc           #44
747: invokevirtual #42
750: iconst_0
751: invokevirtual #43
754: ldc           #41
756: invokevirtual #42
759: invokevirtual #45
762: iload         9
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #46
775: new           #39
778: dup
779: invokespecial #40
782: ldc           #41
784: invokevirtual #42
787: iload         14
789: invokevirtual #43
792: ldc           #44
794: invokevirtual #42
797: iconst_0
798: invokevirtual #43
801: ldc           #41
803: invokevirtual #42
806: invokevirtual #45
809: iload         14
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #46
822: new           #39
825: dup
826: invokespecial #40
829: ldc           #41
831: invokevirtual #42
834: iload         15
836: invokevirtual #43
839: ldc           #44
841: invokevirtual #42
844: iconst_0
845: invokevirtual #43
848: ldc           #41
850: invokevirtual #42
853: invokevirtual #45
856: iload         15
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #46
869: new           #39
872: dup
873: invokespecial #40
876: ldc           #41
878: invokevirtual #42
881: iload         16
883: invokevirtual #43
886: ldc           #44
888: invokevirtual #42
891: iconst_0
892: invokevirtual #43
895: ldc           #41
897: invokevirtual #42
900: invokevirtual #45
903: iload         16
905: ifne          912
908: iconst_1
909: goto          913
912: iconst_0
913: invokestatic  #46
916: aload         18
918: invokestatic  #47
921: aload         18
923: invokestatic  #48
926: ldc           #49
928: invokestatic  #50
931: aload         21
933: invokestatic  #47
936: aload         21
938: invokestatic  #48
941: ldc           #49
943: invokestatic  #50
946: aload         22
948: invokestatic  #47
951: aload         22
953: invokestatic  #48
956: ldc           #49
958: invokestatic  #50
961: aload         23
963: invokestatic  #47
966: aload         23
968: invokestatic  #48
971: ldc           #49
973: invokestatic  #50
976: new           #39
979: dup
980: invokespecial #40
983: ldc           #41
985: invokevirtual #42
988: iload         26
990: invokevirtual #43
993: ldc           #44
995: invokevirtual #42
998: iconst_0
999: invokevirtual #43
1002: ldc           #41
1004: invokevirtual #42
1007: invokevirtual #45
1010: iload         26
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #46
1023: new           #39
1026: dup
1027: invokespecial #40
1030: ldc           #41
1032: invokevirtual #42
1035: iload         27
1037: invokevirtual #43
1040: ldc           #44
1042: invokevirtual #42
1045: iconst_0
1046: invokevirtual #43
1049: ldc           #41
1051: invokevirtual #42
1054: invokevirtual #45
1057: iload         27
1059: ifne          1066
1062: iconst_1
1063: goto          1067
1066: iconst_0
1067: invokestatic  #46
1070: new           #39
1073: dup
1074: invokespecial #40
1077: ldc           #41
1079: invokevirtual #42
1082: iload         28
1084: invokevirtual #43
1087: ldc           #44
1089: invokevirtual #42
1092: iconst_0
1093: invokevirtual #43
1096: ldc           #41
1098: invokevirtual #42
1101: invokevirtual #45
1104: iload         28
1106: ifne          1113
1109: iconst_1
1110: goto          1114
1113: iconst_0
1114: invokestatic  #46
1117: new           #39
1120: dup
1121: invokespecial #40
1124: ldc           #41
1126: invokevirtual #42
1129: iload         33
1131: invokevirtual #43
1134: ldc           #44
1136: invokevirtual #42
1139: iconst_0
1140: invokevirtual #43
1143: ldc           #41
1145: invokevirtual #42
1148: invokevirtual #45
1151: iload         33
1153: ifne          1160
1156: iconst_1
1157: goto          1161
1160: iconst_0
1161: invokestatic  #46
1164: new           #39
1167: dup
1168: invokespecial #40
1171: ldc           #41
1173: invokevirtual #42
1176: iload         34
1178: invokevirtual #43
1181: ldc           #44
1183: invokevirtual #42
1186: iconst_0
1187: invokevirtual #43
1190: ldc           #41
1192: invokevirtual #42
1195: invokevirtual #45
1198: iload         34
1200: ifne          1207
1203: iconst_1
1204: goto          1208
1207: iconst_0
1208: invokestatic  #46
1211: new           #39
1214: dup
1215: invokespecial #40
1218: ldc           #41
1220: invokevirtual #42
1223: iload         35
1225: invokevirtual #43
1228: ldc           #44
1230: invokevirtual #42
1233: iconst_0
1234: invokevirtual #43
1237: ldc           #41
1239: invokevirtual #42
1242: invokevirtual #45
1245: iload         35
1247: ifne          1254
1250: iconst_1
1251: goto          1255
1254: iconst_0
1255: invokestatic  #46
1258: aload         37
1260: invokestatic  #47
1263: aload         37
1265: invokestatic  #48
1268: ldc           #49
1270: invokestatic  #50
1273: aload         40
1275: invokestatic  #47
1278: aload         40
1280: invokestatic  #48
1283: ldc           #49
1285: invokestatic  #50
1288: aload         41
1290: invokestatic  #47
1293: aload         41
1295: invokestatic  #48
1298: ldc           #49
1300: invokestatic  #50
1303: aload         43
1305: invokestatic  #47
1308: aload         43
1310: invokestatic  #48
1313: ldc           #49
1315: invokestatic  #50
1318: aload         44
1320: invokestatic  #47
1323: aload         44
1325: invokestatic  #48
1328: ldc           #49
1330: invokestatic  #50
1333: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 3925
End line: 3967
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        double[] doubleArray41 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray41);
        double[] doubleArray43 = vectorialPointValuePair42.getPointRef();
        double[] doubleArray44 = vectorialPointValuePair42.getValue();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray44);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #271
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #67
85: dup
86: aload_1
87: invokespecial #68
90: astore        6
92: aconst_null
93: astore        7
95: new           #8
98: dup
99: ldc2_w        #9
102: ldc2_w        #11
105: ldc2_w        #13
108: dconst_1
109: ldc2_w        #13
112: invokespecial #15
115: astore        8
117: new           #16
120: dup
121: ldc2_w        #17
124: ldc2_w        #19
127: invokespecial #21
130: astore        9
132: aload         8
134: aload         9
136: invokevirtual #22
139: aload         8
141: invokevirtual #23
144: istore        10
146: aload         8
148: invokevirtual #23
151: istore        11
153: aload         8
155: invokevirtual #53
158: istore        12
160: new           #24
163: dup
164: aload         8
166: invokespecial #25
169: astore        13
171: bipush        6
173: newarray       double
175: dup
176: iconst_0
177: ldc2_w        #27
180: dastore
181: dup
182: iconst_1
183: ldc2_w        #9
186: dastore
187: dup
188: iconst_2
189: ldc2_w        #13
192: dastore
193: dup
194: iconst_3
195: ldc2_w        #29
198: dastore
199: dup
200: iconst_4
201: ldc2_w        #17
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #31
210: dastore
211: astore        14
213: aconst_null
214: astore        15
216: new           #33
219: dup
220: aload         14
222: aload         15
224: iconst_1
225: invokespecial #34
228: astore        16
230: aload         13
232: aload         14
234: invokevirtual #54
237: astore        17
239: aload         6
241: aload         7
243: aload         14
245: invokevirtual #89
248: astore        18
250: aconst_null
251: astore        19
253: new           #33
256: dup
257: aload         14
259: aload         19
261: invokespecial #109
264: astore        20
266: aload         20
268: invokevirtual #151
271: astore        21
273: aload         20
275: invokevirtual #74
278: astore        22
280: new           #39
283: dup
284: invokespecial #40
287: ldc           #41
289: invokevirtual #42
292: iload_3
293: invokevirtual #43
296: ldc           #44
298: invokevirtual #42
301: iconst_0
302: invokevirtual #43
305: ldc           #41
307: invokevirtual #42
310: invokevirtual #45
313: iload_3
314: ifne          321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #46
325: new           #39
328: dup
329: invokespecial #40
332: ldc           #41
334: invokevirtual #42
337: iload         4
339: invokevirtual #43
342: ldc           #44
344: invokevirtual #42
347: iconst_0
348: invokevirtual #43
351: ldc           #41
353: invokevirtual #42
356: invokevirtual #45
359: iload         4
361: ifne          368
364: iconst_1
365: goto          369
368: iconst_0
369: invokestatic  #46
372: new           #39
375: dup
376: invokespecial #40
379: ldc           #41
381: invokevirtual #42
384: iload         5
386: invokevirtual #43
389: ldc           #44
391: invokevirtual #42
394: iconst_0
395: invokevirtual #43
398: ldc           #41
400: invokevirtual #42
403: invokevirtual #45
406: iload         5
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #46
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: iload         10
433: invokevirtual #43
436: ldc           #44
438: invokevirtual #42
441: iconst_0
442: invokevirtual #43
445: ldc           #41
447: invokevirtual #42
450: invokevirtual #45
453: iload         10
455: ifne          462
458: iconst_1
459: goto          463
462: iconst_0
463: invokestatic  #46
466: new           #39
469: dup
470: invokespecial #40
473: ldc           #41
475: invokevirtual #42
478: iload         11
480: invokevirtual #43
483: ldc           #44
485: invokevirtual #42
488: iconst_0
489: invokevirtual #43
492: ldc           #41
494: invokevirtual #42
497: invokevirtual #45
500: iload         11
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #46
513: new           #39
516: dup
517: invokespecial #40
520: ldc           #41
522: invokevirtual #42
525: iload         12
527: invokevirtual #43
530: ldc           #44
532: invokevirtual #42
535: iconst_0
536: invokevirtual #43
539: ldc           #41
541: invokevirtual #42
544: invokevirtual #45
547: iload         12
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #46
560: aload         14
562: invokestatic  #47
565: aload         14
567: invokestatic  #48
570: ldc           #49
572: invokestatic  #50
575: aload         17
577: invokestatic  #47
580: aload         17
582: invokestatic  #48
585: ldc           #49
587: invokestatic  #50
590: aload         18
592: invokestatic  #47
595: aload         18
597: invokestatic  #48
600: ldc           #49
602: invokestatic  #50
605: aload         21
607: invokestatic  #47
610: aload         21
612: invokestatic  #48
615: ldc           #49
617: invokestatic  #50
620: aload         22
622: invokestatic  #76
625: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 3970
End line: 4018
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint59 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint((-36.112450906157385d), (-0.9514650817111729d), (-0.19082401361047283d));
        gaussianFitter12.addObservedPoint(weightedObservedPoint59);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #272
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: new           #8
89: dup
90: ldc2_w        #9
93: ldc2_w        #11
96: ldc2_w        #13
99: dconst_1
100: ldc2_w        #13
103: invokespecial #15
106: astore        6
108: new           #16
111: dup
112: ldc2_w        #17
115: ldc2_w        #19
118: invokespecial #21
121: astore        7
123: aload         6
125: aload         7
127: invokevirtual #22
130: aload         6
132: invokevirtual #23
135: istore        8
137: aload         6
139: invokevirtual #23
142: istore        9
144: new           #24
147: dup
148: aload         6
150: invokespecial #25
153: astore        10
155: aload         10
157: invokevirtual #52
160: aconst_null
161: astore        11
163: new           #8
166: dup
167: ldc2_w        #9
170: ldc2_w        #11
173: ldc2_w        #13
176: dconst_1
177: ldc2_w        #13
180: invokespecial #15
183: astore        12
185: new           #16
188: dup
189: ldc2_w        #17
192: ldc2_w        #19
195: invokespecial #21
198: astore        13
200: aload         12
202: aload         13
204: invokevirtual #22
207: aload         12
209: invokevirtual #23
212: istore        14
214: aload         12
216: invokevirtual #23
219: istore        15
221: aload         12
223: invokevirtual #53
226: istore        16
228: new           #24
231: dup
232: aload         12
234: invokespecial #25
237: astore        17
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #27
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #9
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #13
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #29
266: dastore
267: dup
268: iconst_4
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #31
278: dastore
279: astore        18
281: aconst_null
282: astore        19
284: new           #33
287: dup
288: aload         18
290: aload         19
292: iconst_1
293: invokespecial #34
296: astore        20
298: aload         17
300: aload         18
302: invokevirtual #54
305: astore        21
307: aload         10
309: aload         11
311: aload         21
313: invokevirtual #55
316: astore        22
318: aload         5
320: aload         21
322: invokevirtual #54
325: astore        23
327: aload         5
329: invokevirtual #52
332: new           #217
335: dup
336: ldc2_w        #273
339: ldc2_w        #275
342: ldc2_w        #277
345: invokespecial #222
348: astore        24
350: aload         5
352: aload         24
354: invokevirtual #174
357: new           #39
360: dup
361: invokespecial #40
364: ldc           #41
366: invokevirtual #42
369: iload_3
370: invokevirtual #43
373: ldc           #44
375: invokevirtual #42
378: iconst_0
379: invokevirtual #43
382: ldc           #41
384: invokevirtual #42
387: invokevirtual #45
390: iload_3
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #46
402: new           #39
405: dup
406: invokespecial #40
409: ldc           #41
411: invokevirtual #42
414: iload         4
416: invokevirtual #43
419: ldc           #44
421: invokevirtual #42
424: iconst_0
425: invokevirtual #43
428: ldc           #41
430: invokevirtual #42
433: invokevirtual #45
436: iload         4
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #46
449: new           #39
452: dup
453: invokespecial #40
456: ldc           #41
458: invokevirtual #42
461: iload         8
463: invokevirtual #43
466: ldc           #44
468: invokevirtual #42
471: iconst_0
472: invokevirtual #43
475: ldc           #41
477: invokevirtual #42
480: invokevirtual #45
483: iload         8
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #46
496: new           #39
499: dup
500: invokespecial #40
503: ldc           #41
505: invokevirtual #42
508: iload         9
510: invokevirtual #43
513: ldc           #44
515: invokevirtual #42
518: iconst_0
519: invokevirtual #43
522: ldc           #41
524: invokevirtual #42
527: invokevirtual #45
530: iload         9
532: ifne          539
535: iconst_1
536: goto          540
539: iconst_0
540: invokestatic  #46
543: new           #39
546: dup
547: invokespecial #40
550: ldc           #41
552: invokevirtual #42
555: iload         14
557: invokevirtual #43
560: ldc           #44
562: invokevirtual #42
565: iconst_0
566: invokevirtual #43
569: ldc           #41
571: invokevirtual #42
574: invokevirtual #45
577: iload         14
579: ifne          586
582: iconst_1
583: goto          587
586: iconst_0
587: invokestatic  #46
590: new           #39
593: dup
594: invokespecial #40
597: ldc           #41
599: invokevirtual #42
602: iload         15
604: invokevirtual #43
607: ldc           #44
609: invokevirtual #42
612: iconst_0
613: invokevirtual #43
616: ldc           #41
618: invokevirtual #42
621: invokevirtual #45
624: iload         15
626: ifne          633
629: iconst_1
630: goto          634
633: iconst_0
634: invokestatic  #46
637: new           #39
640: dup
641: invokespecial #40
644: ldc           #41
646: invokevirtual #42
649: iload         16
651: invokevirtual #43
654: ldc           #44
656: invokevirtual #42
659: iconst_0
660: invokevirtual #43
663: ldc           #41
665: invokevirtual #42
668: invokevirtual #45
671: iload         16
673: ifne          680
676: iconst_1
677: goto          681
680: iconst_0
681: invokestatic  #46
684: aload         18
686: invokestatic  #47
689: aload         18
691: invokestatic  #48
694: ldc           #49
696: invokestatic  #50
699: aload         21
701: invokestatic  #47
704: aload         21
706: invokestatic  #48
709: ldc           #49
711: invokestatic  #50
714: aload         22
716: invokestatic  #47
719: aload         22
721: invokestatic  #48
724: ldc           #49
726: invokestatic  #50
729: aload         23
731: invokestatic  #47
734: aload         23
736: invokestatic  #48
739: ldc           #49
741: invokestatic  #50
744: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 4021
End line: 4085
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint((double) 1L, 0.6444303510232912d);
        gaussianFitter12.addObservedPoint(0.9366445920399754d, 3.1415926535897936d);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer25 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker28 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer25.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker28);
        int int30 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        int int31 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        int int32 = levenbergMarquardtOptimizer25.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter33 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer25);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter34 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer25);
        double[] doubleArray41 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray42 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray42, true);
        double[] doubleArray45 = vectorialPointValuePair44.getValue();
        double[] doubleArray46 = vectorialPointValuePair44.getValue();
        double[] doubleArray47 = vectorialPointValuePair44.getPoint();
        double[] doubleArray54 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray55 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray55, true);
        double[] doubleArray58 = vectorialPointValuePair57.getValue();
        double[] doubleArray59 = vectorialPointValuePair57.getValue();
        double[] doubleArray60 = vectorialPointValuePair57.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray60, false);
        double[] doubleArray63 = vectorialPointValuePair62.getPoint();
        double[] doubleArray64 = gaussianFitter34.fit(doubleArray63);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray65 = gaussianFitter12.fit(doubleArray63);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray58);
        org.junit.Assert.assertNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #279
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aload         5
95: dconst_1
96: ldc2_w        #195
99: invokevirtual #158
102: aload         5
104: ldc2_w        #197
107: ldc2_w        #162
110: invokevirtual #158
113: new           #8
116: dup
117: ldc2_w        #9
120: ldc2_w        #11
123: ldc2_w        #13
126: dconst_1
127: ldc2_w        #13
130: invokespecial #15
133: astore        7
135: new           #16
138: dup
139: ldc2_w        #17
142: ldc2_w        #19
145: invokespecial #21
148: astore        8
150: aload         7
152: aload         8
154: invokevirtual #22
157: aload         7
159: invokevirtual #23
162: istore        9
164: aload         7
166: invokevirtual #23
169: istore        10
171: aload         7
173: invokevirtual #53
176: istore        11
178: new           #67
181: dup
182: aload         7
184: invokespecial #68
187: astore        12
189: new           #24
192: dup
193: aload         7
195: invokespecial #25
198: astore        13
200: bipush        6
202: newarray       double
204: dup
205: iconst_0
206: ldc2_w        #27
209: dastore
210: dup
211: iconst_1
212: ldc2_w        #9
215: dastore
216: dup
217: iconst_2
218: ldc2_w        #13
221: dastore
222: dup
223: iconst_3
224: ldc2_w        #29
227: dastore
228: dup
229: iconst_4
230: ldc2_w        #17
233: dastore
234: dup
235: iconst_5
236: ldc2_w        #31
239: dastore
240: astore        14
242: aconst_null
243: astore        15
245: new           #33
248: dup
249: aload         14
251: aload         15
253: iconst_1
254: invokespecial #34
257: astore        16
259: aload         16
261: invokevirtual #74
264: astore        17
266: aload         16
268: invokevirtual #74
271: astore        18
273: aload         16
275: invokevirtual #75
278: astore        19
280: bipush        6
282: newarray       double
284: dup
285: iconst_0
286: ldc2_w        #27
289: dastore
290: dup
291: iconst_1
292: ldc2_w        #9
295: dastore
296: dup
297: iconst_2
298: ldc2_w        #13
301: dastore
302: dup
303: iconst_3
304: ldc2_w        #29
307: dastore
308: dup
309: iconst_4
310: ldc2_w        #17
313: dastore
314: dup
315: iconst_5
316: ldc2_w        #31
319: dastore
320: astore        20
322: aconst_null
323: astore        21
325: new           #33
328: dup
329: aload         20
331: aload         21
333: iconst_1
334: invokespecial #34
337: astore        22
339: aload         22
341: invokevirtual #74
344: astore        23
346: aload         22
348: invokevirtual #74
351: astore        24
353: aload         22
355: invokevirtual #75
358: astore        25
360: new           #33
363: dup
364: aload         19
366: aload         25
368: iconst_0
369: invokespecial #34
372: astore        26
374: aload         26
376: invokevirtual #75
379: astore        27
381: aload         13
383: aload         27
385: invokevirtual #54
388: astore        28
390: aload         5
392: aload         27
394: invokevirtual #54
397: astore        29
399: ldc           #124
401: invokestatic  #37
404: goto          409
407: astore        29
409: new           #39
412: dup
413: invokespecial #40
416: ldc           #41
418: invokevirtual #42
421: iload_3
422: invokevirtual #43
425: ldc           #44
427: invokevirtual #42
430: iconst_0
431: invokevirtual #43
434: ldc           #41
436: invokevirtual #42
439: invokevirtual #45
442: iload_3
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #46
454: new           #39
457: dup
458: invokespecial #40
461: ldc           #41
463: invokevirtual #42
466: iload         4
468: invokevirtual #43
471: ldc           #44
473: invokevirtual #42
476: iconst_0
477: invokevirtual #43
480: ldc           #41
482: invokevirtual #42
485: invokevirtual #45
488: iload         4
490: ifne          497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #46
501: aload         6
503: invokestatic  #47
506: new           #39
509: dup
510: invokespecial #40
513: ldc           #41
515: invokevirtual #42
518: iload         9
520: invokevirtual #43
523: ldc           #44
525: invokevirtual #42
528: iconst_0
529: invokevirtual #43
532: ldc           #41
534: invokevirtual #42
537: invokevirtual #45
540: iload         9
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #46
553: new           #39
556: dup
557: invokespecial #40
560: ldc           #41
562: invokevirtual #42
565: iload         10
567: invokevirtual #43
570: ldc           #44
572: invokevirtual #42
575: iconst_0
576: invokevirtual #43
579: ldc           #41
581: invokevirtual #42
584: invokevirtual #45
587: iload         10
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #46
600: new           #39
603: dup
604: invokespecial #40
607: ldc           #41
609: invokevirtual #42
612: iload         11
614: invokevirtual #43
617: ldc           #44
619: invokevirtual #42
622: iconst_0
623: invokevirtual #43
626: ldc           #41
628: invokevirtual #42
631: invokevirtual #45
634: iload         11
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #46
647: aload         14
649: invokestatic  #47
652: aload         14
654: invokestatic  #48
657: ldc           #49
659: invokestatic  #50
662: aload         17
664: invokestatic  #76
667: aload         18
669: invokestatic  #76
672: aload         19
674: invokestatic  #47
677: aload         19
679: invokestatic  #48
682: ldc           #49
684: invokestatic  #50
687: aload         20
689: invokestatic  #47
692: aload         20
694: invokestatic  #48
697: ldc           #49
699: invokestatic  #50
702: aload         23
704: invokestatic  #76
707: aload         24
709: invokestatic  #76
712: aload         25
714: invokestatic  #47
717: aload         25
719: invokestatic  #48
722: ldc           #49
724: invokestatic  #50
727: aload         27
729: invokestatic  #47
732: aload         27
734: invokestatic  #48
737: ldc           #49
739: invokestatic  #50
742: aload         28
744: invokestatic  #47
747: aload         28
749: invokestatic  #48
752: ldc           #49
754: invokestatic  #50
757: return
Exception table:
from    to  target type
390   404   407   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 4088
End line: 4172
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter28 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction29 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer35 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker38 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer35.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker38);
        int int40 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int41 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer35.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter43 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer35);
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = gaussianFitter43.fit(doubleArray50);
        double[] doubleArray55 = curveFitter28.fit(parametricUnivariateRealFunction29, doubleArray50);
        double[] doubleArray56 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray50);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer62 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker65 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer62.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker65);
        int int67 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        int int68 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        double double69 = levenbergMarquardtOptimizer62.getChiSquare();
        int int70 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter71 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer62);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric72 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer78 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker81 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer78.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker81);
        int int83 = levenbergMarquardtOptimizer78.getMaxEvaluations();
        int int84 = levenbergMarquardtOptimizer78.getMaxEvaluations();
        int int85 = levenbergMarquardtOptimizer78.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter86 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer78);
        double[] doubleArray93 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray94 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair96 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray93, doubleArray94, true);
        double[] doubleArray97 = gaussianFitter86.fit(doubleArray93);
        double[] doubleArray98 = curveFitter71.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric72, doubleArray97);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair99 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray97);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #280
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aconst_null
94: astore        7
96: new           #8
99: dup
100: ldc2_w        #9
103: ldc2_w        #11
106: ldc2_w        #13
109: dconst_1
110: ldc2_w        #13
113: invokespecial #15
116: astore        8
118: new           #16
121: dup
122: ldc2_w        #17
125: ldc2_w        #19
128: invokespecial #21
131: astore        9
133: aload         8
135: aload         9
137: invokevirtual #22
140: aload         8
142: invokevirtual #23
145: istore        10
147: aload         8
149: invokevirtual #23
152: istore        11
154: aload         8
156: invokevirtual #53
159: istore        12
161: new           #67
164: dup
165: aload         8
167: invokespecial #68
170: astore        13
172: aconst_null
173: astore        14
175: new           #8
178: dup
179: ldc2_w        #9
182: ldc2_w        #11
185: ldc2_w        #13
188: dconst_1
189: ldc2_w        #13
192: invokespecial #15
195: astore        15
197: new           #16
200: dup
201: ldc2_w        #17
204: ldc2_w        #19
207: invokespecial #21
210: astore        16
212: aload         15
214: aload         16
216: invokevirtual #22
219: aload         15
221: invokevirtual #23
224: istore        17
226: aload         15
228: invokevirtual #23
231: istore        18
233: aload         15
235: invokevirtual #53
238: istore        19
240: new           #24
243: dup
244: aload         15
246: invokespecial #25
249: astore        20
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: ldc2_w        #27
260: dastore
261: dup
262: iconst_1
263: ldc2_w        #9
266: dastore
267: dup
268: iconst_2
269: ldc2_w        #13
272: dastore
273: dup
274: iconst_3
275: ldc2_w        #29
278: dastore
279: dup
280: iconst_4
281: ldc2_w        #17
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #31
290: dastore
291: astore        21
293: aconst_null
294: astore        22
296: new           #33
299: dup
300: aload         21
302: aload         22
304: iconst_1
305: invokespecial #34
308: astore        23
310: aload         20
312: aload         21
314: invokevirtual #54
317: astore        24
319: aload         13
321: aload         14
323: aload         21
325: invokevirtual #89
328: astore        25
330: aload         5
332: aload         7
334: aload         21
336: invokevirtual #55
339: astore        26
341: new           #8
344: dup
345: ldc2_w        #9
348: ldc2_w        #11
351: ldc2_w        #13
354: dconst_1
355: ldc2_w        #13
358: invokespecial #15
361: astore        27
363: new           #16
366: dup
367: ldc2_w        #17
370: ldc2_w        #19
373: invokespecial #21
376: astore        28
378: aload         27
380: aload         28
382: invokevirtual #22
385: aload         27
387: invokevirtual #23
390: istore        29
392: aload         27
394: invokevirtual #23
397: istore        30
399: aload         27
401: invokevirtual #58
404: dstore        31
406: aload         27
408: invokevirtual #23
411: istore        33
413: new           #67
416: dup
417: aload         27
419: invokespecial #68
422: astore        34
424: new           #117
427: dup
428: invokespecial #118
431: astore        35
433: new           #8
436: dup
437: ldc2_w        #9
440: ldc2_w        #11
443: ldc2_w        #13
446: dconst_1
447: ldc2_w        #13
450: invokespecial #15
453: astore        36
455: new           #16
458: dup
459: ldc2_w        #17
462: ldc2_w        #19
465: invokespecial #21
468: astore        37
470: aload         36
472: aload         37
474: invokevirtual #22
477: aload         36
479: invokevirtual #23
482: istore        38
484: aload         36
486: invokevirtual #23
489: istore        39
491: aload         36
493: invokevirtual #53
496: istore        40
498: new           #24
501: dup
502: aload         36
504: invokespecial #25
507: astore        41
509: bipush        6
511: newarray       double
513: dup
514: iconst_0
515: ldc2_w        #27
518: dastore
519: dup
520: iconst_1
521: ldc2_w        #9
524: dastore
525: dup
526: iconst_2
527: ldc2_w        #13
530: dastore
531: dup
532: iconst_3
533: ldc2_w        #29
536: dastore
537: dup
538: iconst_4
539: ldc2_w        #17
542: dastore
543: dup
544: iconst_5
545: ldc2_w        #31
548: dastore
549: astore        42
551: aconst_null
552: astore        43
554: new           #33
557: dup
558: aload         42
560: aload         43
562: iconst_1
563: invokespecial #34
566: astore        44
568: aload         41
570: aload         42
572: invokevirtual #54
575: astore        45
577: aload         34
579: aload         35
581: aload         45
583: invokevirtual #89
586: astore        46
588: new           #33
591: dup
592: aload         21
594: aload         45
596: invokespecial #109
599: astore        47
601: new           #39
604: dup
605: invokespecial #40
608: ldc           #41
610: invokevirtual #42
613: iload_3
614: invokevirtual #43
617: ldc           #44
619: invokevirtual #42
622: iconst_0
623: invokevirtual #43
626: ldc           #41
628: invokevirtual #42
631: invokevirtual #45
634: iload_3
635: ifne          642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #46
646: new           #39
649: dup
650: invokespecial #40
653: ldc           #41
655: invokevirtual #42
658: iload         4
660: invokevirtual #43
663: ldc           #44
665: invokevirtual #42
668: iconst_0
669: invokevirtual #43
672: ldc           #41
674: invokevirtual #42
677: invokevirtual #45
680: iload         4
682: ifne          689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #46
693: aload         6
695: invokestatic  #47
698: new           #39
701: dup
702: invokespecial #40
705: ldc           #41
707: invokevirtual #42
710: iload         10
712: invokevirtual #43
715: ldc           #44
717: invokevirtual #42
720: iconst_0
721: invokevirtual #43
724: ldc           #41
726: invokevirtual #42
729: invokevirtual #45
732: iload         10
734: ifne          741
737: iconst_1
738: goto          742
741: iconst_0
742: invokestatic  #46
745: new           #39
748: dup
749: invokespecial #40
752: ldc           #41
754: invokevirtual #42
757: iload         11
759: invokevirtual #43
762: ldc           #44
764: invokevirtual #42
767: iconst_0
768: invokevirtual #43
771: ldc           #41
773: invokevirtual #42
776: invokevirtual #45
779: iload         11
781: ifne          788
784: iconst_1
785: goto          789
788: iconst_0
789: invokestatic  #46
792: new           #39
795: dup
796: invokespecial #40
799: ldc           #41
801: invokevirtual #42
804: iload         12
806: invokevirtual #43
809: ldc           #44
811: invokevirtual #42
814: iconst_0
815: invokevirtual #43
818: ldc           #41
820: invokevirtual #42
823: invokevirtual #45
826: iload         12
828: ifne          835
831: iconst_1
832: goto          836
835: iconst_0
836: invokestatic  #46
839: new           #39
842: dup
843: invokespecial #40
846: ldc           #41
848: invokevirtual #42
851: iload         17
853: invokevirtual #43
856: ldc           #44
858: invokevirtual #42
861: iconst_0
862: invokevirtual #43
865: ldc           #41
867: invokevirtual #42
870: invokevirtual #45
873: iload         17
875: ifne          882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #46
886: new           #39
889: dup
890: invokespecial #40
893: ldc           #41
895: invokevirtual #42
898: iload         18
900: invokevirtual #43
903: ldc           #44
905: invokevirtual #42
908: iconst_0
909: invokevirtual #43
912: ldc           #41
914: invokevirtual #42
917: invokevirtual #45
920: iload         18
922: ifne          929
925: iconst_1
926: goto          930
929: iconst_0
930: invokestatic  #46
933: new           #39
936: dup
937: invokespecial #40
940: ldc           #41
942: invokevirtual #42
945: iload         19
947: invokevirtual #43
950: ldc           #44
952: invokevirtual #42
955: iconst_0
956: invokevirtual #43
959: ldc           #41
961: invokevirtual #42
964: invokevirtual #45
967: iload         19
969: ifne          976
972: iconst_1
973: goto          977
976: iconst_0
977: invokestatic  #46
980: aload         21
982: invokestatic  #47
985: aload         21
987: invokestatic  #48
990: ldc           #49
992: invokestatic  #50
995: aload         24
997: invokestatic  #47
1000: aload         24
1002: invokestatic  #48
1005: ldc           #49
1007: invokestatic  #50
1010: aload         25
1012: invokestatic  #47
1015: aload         25
1017: invokestatic  #48
1020: ldc           #49
1022: invokestatic  #50
1025: aload         26
1027: invokestatic  #47
1030: aload         26
1032: invokestatic  #48
1035: ldc           #49
1037: invokestatic  #50
1040: new           #39
1043: dup
1044: invokespecial #40
1047: ldc           #41
1049: invokevirtual #42
1052: iload         29
1054: invokevirtual #43
1057: ldc           #44
1059: invokevirtual #42
1062: iconst_0
1063: invokevirtual #43
1066: ldc           #41
1068: invokevirtual #42
1071: invokevirtual #45
1074: iload         29
1076: ifne          1083
1079: iconst_1
1080: goto          1084
1083: iconst_0
1084: invokestatic  #46
1087: new           #39
1090: dup
1091: invokespecial #40
1094: ldc           #41
1096: invokevirtual #42
1099: iload         30
1101: invokevirtual #43
1104: ldc           #44
1106: invokevirtual #42
1109: iconst_0
1110: invokevirtual #43
1113: ldc           #41
1115: invokevirtual #42
1118: invokevirtual #45
1121: iload         30
1123: ifne          1130
1126: iconst_1
1127: goto          1131
1130: iconst_0
1131: invokestatic  #46
1134: new           #39
1137: dup
1138: invokespecial #40
1141: ldc           #41
1143: invokevirtual #42
1146: dload         31
1148: invokevirtual #59
1151: ldc           #44
1153: invokevirtual #42
1156: dconst_0
1157: invokevirtual #59
1160: ldc           #41
1162: invokevirtual #42
1165: invokevirtual #45
1168: dload         31
1170: dconst_0
1171: dcmpl
1172: ifne          1179
1175: iconst_1
1176: goto          1180
1179: iconst_0
1180: invokestatic  #46
1183: new           #39
1186: dup
1187: invokespecial #40
1190: ldc           #41
1192: invokevirtual #42
1195: iload         33
1197: invokevirtual #43
1200: ldc           #44
1202: invokevirtual #42
1205: iconst_0
1206: invokevirtual #43
1209: ldc           #41
1211: invokevirtual #42
1214: invokevirtual #45
1217: iload         33
1219: ifne          1226
1222: iconst_1
1223: goto          1227
1226: iconst_0
1227: invokestatic  #46
1230: new           #39
1233: dup
1234: invokespecial #40
1237: ldc           #41
1239: invokevirtual #42
1242: iload         38
1244: invokevirtual #43
1247: ldc           #44
1249: invokevirtual #42
1252: iconst_0
1253: invokevirtual #43
1256: ldc           #41
1258: invokevirtual #42
1261: invokevirtual #45
1264: iload         38
1266: ifne          1273
1269: iconst_1
1270: goto          1274
1273: iconst_0
1274: invokestatic  #46
1277: new           #39
1280: dup
1281: invokespecial #40
1284: ldc           #41
1286: invokevirtual #42
1289: iload         39
1291: invokevirtual #43
1294: ldc           #44
1296: invokevirtual #42
1299: iconst_0
1300: invokevirtual #43
1303: ldc           #41
1305: invokevirtual #42
1308: invokevirtual #45
1311: iload         39
1313: ifne          1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #46
1324: new           #39
1327: dup
1328: invokespecial #40
1331: ldc           #41
1333: invokevirtual #42
1336: iload         40
1338: invokevirtual #43
1341: ldc           #44
1343: invokevirtual #42
1346: iconst_0
1347: invokevirtual #43
1350: ldc           #41
1352: invokevirtual #42
1355: invokevirtual #45
1358: iload         40
1360: ifne          1367
1363: iconst_1
1364: goto          1368
1367: iconst_0
1368: invokestatic  #46
1371: aload         42
1373: invokestatic  #47
1376: aload         42
1378: invokestatic  #48
1381: ldc           #49
1383: invokestatic  #50
1386: aload         45
1388: invokestatic  #47
1391: aload         45
1393: invokestatic  #48
1396: ldc           #49
1398: invokestatic  #50
1401: aload         46
1403: invokestatic  #47
1406: aload         46
1408: invokestatic  #48
1411: ldc           #49
1413: invokestatic  #50
1416: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 4175
End line: 4201
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        double double15 = levenbergMarquardtOptimizer5.getRMS();
        double double16 = levenbergMarquardtOptimizer5.getRMS();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray17 = levenbergMarquardtOptimizer5.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than, or equal to, the minimum (0): no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: aload_1
93: invokevirtual #53
96: istore        7
98: aload_1
99: invokevirtual #201
102: dstore        8
104: aload_1
105: invokevirtual #201
108: dstore        10
110: aload_1
111: invokevirtual #69
114: astore        12
116: ldc           #70
118: invokestatic  #37
121: goto          126
124: astore        12
126: new           #39
129: dup
130: invokespecial #40
133: ldc           #41
135: invokevirtual #42
138: iload_3
139: invokevirtual #43
142: ldc           #44
144: invokevirtual #42
147: iconst_0
148: invokevirtual #43
151: ldc           #41
153: invokevirtual #42
156: invokevirtual #45
159: iload_3
160: ifne          167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #46
171: new           #39
174: dup
175: invokespecial #40
178: ldc           #41
180: invokevirtual #42
183: iload         4
185: invokevirtual #43
188: ldc           #44
190: invokevirtual #42
193: iconst_0
194: invokevirtual #43
197: ldc           #41
199: invokevirtual #42
202: invokevirtual #45
205: iload         4
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #46
218: new           #39
221: dup
222: invokespecial #40
225: ldc           #41
227: invokevirtual #42
230: iload         5
232: invokevirtual #43
235: ldc           #44
237: invokevirtual #42
240: iconst_0
241: invokevirtual #43
244: ldc           #41
246: invokevirtual #42
249: invokevirtual #45
252: iload         5
254: ifne          261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #46
265: new           #39
268: dup
269: invokespecial #40
272: ldc           #41
274: invokevirtual #42
277: iload         7
279: invokevirtual #43
282: ldc           #44
284: invokevirtual #42
287: iconst_0
288: invokevirtual #43
291: ldc           #41
293: invokevirtual #42
296: invokevirtual #45
299: iload         7
301: ifne          308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #46
312: dload         8
314: invokestatic  #202
317: invokestatic  #203
320: dload         10
322: invokestatic  #202
325: invokestatic  #203
328: return
Exception table:
from    to  target type
110   121   124   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 4204
End line: 4288
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker15 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction17 = null;
        double[] doubleArray24 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray25 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair27 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray25, true);
        double[] doubleArray28 = vectorialPointValuePair27.getValue();
        double[] doubleArray29 = vectorialPointValuePair27.getValue();
        double[] doubleArray30 = vectorialPointValuePair27.getPoint();
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = vectorialPointValuePair40.getValue();
        double[] doubleArray42 = vectorialPointValuePair40.getValue();
        double[] doubleArray43 = vectorialPointValuePair40.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair45 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray30, doubleArray43, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer51 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker54 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer51.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker54);
        int int56 = levenbergMarquardtOptimizer51.getMaxEvaluations();
        int int57 = levenbergMarquardtOptimizer51.getMaxEvaluations();
        int int58 = levenbergMarquardtOptimizer51.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter59 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer51);
        double[] doubleArray66 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray67 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray66, doubleArray67, true);
        double[] doubleArray70 = gaussianFitter59.fit(doubleArray66);
        double[] doubleArray77 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray78 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray77, doubleArray78, true);
        double[] doubleArray81 = vectorialPointValuePair80.getValue();
        double[] doubleArray82 = vectorialPointValuePair80.getValue();
        double[] doubleArray83 = vectorialPointValuePair80.getPoint();
        double[] doubleArray84 = vectorialPointValuePair80.getPointRef();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = levenbergMarquardtOptimizer5.optimize((int) (byte) 1, differentiableMultivariateVectorialFunction17, doubleArray43, doubleArray70, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #282
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #53
86: istore        7
88: aload_1
89: invokevirtual #53
92: istore        8
94: aload_1
95: invokevirtual #73
98: astore        9
100: aconst_null
101: astore        10
103: bipush        6
105: newarray       double
107: dup
108: iconst_0
109: ldc2_w        #27
112: dastore
113: dup
114: iconst_1
115: ldc2_w        #9
118: dastore
119: dup
120: iconst_2
121: ldc2_w        #13
124: dastore
125: dup
126: iconst_3
127: ldc2_w        #29
130: dastore
131: dup
132: iconst_4
133: ldc2_w        #17
136: dastore
137: dup
138: iconst_5
139: ldc2_w        #31
142: dastore
143: astore        11
145: aconst_null
146: astore        12
148: new           #33
151: dup
152: aload         11
154: aload         12
156: iconst_1
157: invokespecial #34
160: astore        13
162: aload         13
164: invokevirtual #74
167: astore        14
169: aload         13
171: invokevirtual #74
174: astore        15
176: aload         13
178: invokevirtual #75
181: astore        16
183: bipush        6
185: newarray       double
187: dup
188: iconst_0
189: ldc2_w        #27
192: dastore
193: dup
194: iconst_1
195: ldc2_w        #9
198: dastore
199: dup
200: iconst_2
201: ldc2_w        #13
204: dastore
205: dup
206: iconst_3
207: ldc2_w        #29
210: dastore
211: dup
212: iconst_4
213: ldc2_w        #17
216: dastore
217: dup
218: iconst_5
219: ldc2_w        #31
222: dastore
223: astore        17
225: aconst_null
226: astore        18
228: new           #33
231: dup
232: aload         17
234: aload         18
236: iconst_1
237: invokespecial #34
240: astore        19
242: aload         19
244: invokevirtual #74
247: astore        20
249: aload         19
251: invokevirtual #74
254: astore        21
256: aload         19
258: invokevirtual #75
261: astore        22
263: new           #33
266: dup
267: aload         16
269: aload         22
271: iconst_0
272: invokespecial #34
275: astore        23
277: new           #8
280: dup
281: ldc2_w        #9
284: ldc2_w        #11
287: ldc2_w        #13
290: dconst_1
291: ldc2_w        #13
294: invokespecial #15
297: astore        24
299: new           #16
302: dup
303: ldc2_w        #17
306: ldc2_w        #19
309: invokespecial #21
312: astore        25
314: aload         24
316: aload         25
318: invokevirtual #22
321: aload         24
323: invokevirtual #23
326: istore        26
328: aload         24
330: invokevirtual #23
333: istore        27
335: aload         24
337: invokevirtual #53
340: istore        28
342: new           #24
345: dup
346: aload         24
348: invokespecial #25
351: astore        29
353: bipush        6
355: newarray       double
357: dup
358: iconst_0
359: ldc2_w        #27
362: dastore
363: dup
364: iconst_1
365: ldc2_w        #9
368: dastore
369: dup
370: iconst_2
371: ldc2_w        #13
374: dastore
375: dup
376: iconst_3
377: ldc2_w        #29
380: dastore
381: dup
382: iconst_4
383: ldc2_w        #17
386: dastore
387: dup
388: iconst_5
389: ldc2_w        #31
392: dastore
393: astore        30
395: aconst_null
396: astore        31
398: new           #33
401: dup
402: aload         30
404: aload         31
406: iconst_1
407: invokespecial #34
410: astore        32
412: aload         29
414: aload         30
416: invokevirtual #54
419: astore        33
421: bipush        6
423: newarray       double
425: dup
426: iconst_0
427: ldc2_w        #27
430: dastore
431: dup
432: iconst_1
433: ldc2_w        #9
436: dastore
437: dup
438: iconst_2
439: ldc2_w        #13
442: dastore
443: dup
444: iconst_3
445: ldc2_w        #29
448: dastore
449: dup
450: iconst_4
451: ldc2_w        #17
454: dastore
455: dup
456: iconst_5
457: ldc2_w        #31
460: dastore
461: astore        34
463: aconst_null
464: astore        35
466: new           #33
469: dup
470: aload         34
472: aload         35
474: iconst_1
475: invokespecial #34
478: astore        36
480: aload         36
482: invokevirtual #74
485: astore        37
487: aload         36
489: invokevirtual #74
492: astore        38
494: aload         36
496: invokevirtual #75
499: astore        39
501: aload         36
503: invokevirtual #151
506: astore        40
508: aload_1
509: iconst_1
510: aload         10
512: aload         22
514: aload         33
516: aload         40
518: invokevirtual #56
521: astore        41
523: ldc           #36
525: invokestatic  #37
528: goto          533
531: astore        41
533: new           #39
536: dup
537: invokespecial #40
540: ldc           #41
542: invokevirtual #42
545: iload_3
546: invokevirtual #43
549: ldc           #44
551: invokevirtual #42
554: iconst_0
555: invokevirtual #43
558: ldc           #41
560: invokevirtual #42
563: invokevirtual #45
566: iload_3
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #46
578: new           #39
581: dup
582: invokespecial #40
585: ldc           #41
587: invokevirtual #42
590: iload         4
592: invokevirtual #43
595: ldc           #44
597: invokevirtual #42
600: iconst_0
601: invokevirtual #43
604: ldc           #41
606: invokevirtual #42
609: invokevirtual #45
612: iload         4
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #46
625: new           #39
628: dup
629: invokespecial #40
632: ldc           #41
634: invokevirtual #42
637: dload         5
639: invokevirtual #59
642: ldc           #44
644: invokevirtual #42
647: dconst_0
648: invokevirtual #59
651: ldc           #41
653: invokevirtual #42
656: invokevirtual #45
659: dload         5
661: dconst_0
662: dcmpl
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #46
674: new           #39
677: dup
678: invokespecial #40
681: ldc           #41
683: invokevirtual #42
686: iload         7
688: invokevirtual #43
691: ldc           #44
693: invokevirtual #42
696: iconst_0
697: invokevirtual #43
700: ldc           #41
702: invokevirtual #42
705: invokevirtual #45
708: iload         7
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #46
721: new           #39
724: dup
725: invokespecial #40
728: ldc           #41
730: invokevirtual #42
733: iload         8
735: invokevirtual #43
738: ldc           #44
740: invokevirtual #42
743: iconst_0
744: invokevirtual #43
747: ldc           #41
749: invokevirtual #42
752: invokevirtual #45
755: iload         8
757: ifne          764
760: iconst_1
761: goto          765
764: iconst_0
765: invokestatic  #46
768: aload         9
770: invokestatic  #47
773: aload         11
775: invokestatic  #47
778: aload         11
780: invokestatic  #48
783: ldc           #49
785: invokestatic  #50
788: aload         14
790: invokestatic  #76
793: aload         15
795: invokestatic  #76
798: aload         16
800: invokestatic  #47
803: aload         16
805: invokestatic  #48
808: ldc           #49
810: invokestatic  #50
813: aload         17
815: invokestatic  #47
818: aload         17
820: invokestatic  #48
823: ldc           #49
825: invokestatic  #50
828: aload         20
830: invokestatic  #76
833: aload         21
835: invokestatic  #76
838: aload         22
840: invokestatic  #47
843: aload         22
845: invokestatic  #48
848: ldc           #49
850: invokestatic  #50
853: new           #39
856: dup
857: invokespecial #40
860: ldc           #41
862: invokevirtual #42
865: iload         26
867: invokevirtual #43
870: ldc           #44
872: invokevirtual #42
875: iconst_0
876: invokevirtual #43
879: ldc           #41
881: invokevirtual #42
884: invokevirtual #45
887: iload         26
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #46
900: new           #39
903: dup
904: invokespecial #40
907: ldc           #41
909: invokevirtual #42
912: iload         27
914: invokevirtual #43
917: ldc           #44
919: invokevirtual #42
922: iconst_0
923: invokevirtual #43
926: ldc           #41
928: invokevirtual #42
931: invokevirtual #45
934: iload         27
936: ifne          943
939: iconst_1
940: goto          944
943: iconst_0
944: invokestatic  #46
947: new           #39
950: dup
951: invokespecial #40
954: ldc           #41
956: invokevirtual #42
959: iload         28
961: invokevirtual #43
964: ldc           #44
966: invokevirtual #42
969: iconst_0
970: invokevirtual #43
973: ldc           #41
975: invokevirtual #42
978: invokevirtual #45
981: iload         28
983: ifne          990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #46
994: aload         30
996: invokestatic  #47
999: aload         30
1001: invokestatic  #48
1004: ldc           #49
1006: invokestatic  #50
1009: aload         33
1011: invokestatic  #47
1014: aload         33
1016: invokestatic  #48
1019: ldc           #49
1021: invokestatic  #50
1024: aload         34
1026: invokestatic  #47
1029: aload         34
1031: invokestatic  #48
1034: ldc           #49
1036: invokestatic  #50
1039: aload         37
1041: invokestatic  #76
1044: aload         38
1046: invokestatic  #76
1049: aload         39
1051: invokestatic  #47
1054: aload         39
1056: invokestatic  #48
1059: ldc           #49
1061: invokestatic  #50
1064: aload         40
1066: invokestatic  #47
1069: aload         40
1071: invokestatic  #48
1074: ldc           #49
1076: invokestatic  #50
1079: return
Exception table:
from    to  target type
508   528   531   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 4291
End line: 4330
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric15 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = curveFitter14.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric15, doubleArray40);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray42 = curveFitter14.getObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #283
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #67
91: dup
92: aload_1
93: invokespecial #68
96: astore        8
98: new           #117
101: dup
102: invokespecial #118
105: astore        9
107: new           #8
110: dup
111: ldc2_w        #9
114: ldc2_w        #11
117: ldc2_w        #13
120: dconst_1
121: ldc2_w        #13
124: invokespecial #15
127: astore        10
129: new           #16
132: dup
133: ldc2_w        #17
136: ldc2_w        #19
139: invokespecial #21
142: astore        11
144: aload         10
146: aload         11
148: invokevirtual #22
151: aload         10
153: invokevirtual #23
156: istore        12
158: aload         10
160: invokevirtual #23
163: istore        13
165: aload         10
167: invokevirtual #53
170: istore        14
172: new           #24
175: dup
176: aload         10
178: invokespecial #25
181: astore        15
183: bipush        6
185: newarray       double
187: dup
188: iconst_0
189: ldc2_w        #27
192: dastore
193: dup
194: iconst_1
195: ldc2_w        #9
198: dastore
199: dup
200: iconst_2
201: ldc2_w        #13
204: dastore
205: dup
206: iconst_3
207: ldc2_w        #29
210: dastore
211: dup
212: iconst_4
213: ldc2_w        #17
216: dastore
217: dup
218: iconst_5
219: ldc2_w        #31
222: dastore
223: astore        16
225: aconst_null
226: astore        17
228: new           #33
231: dup
232: aload         16
234: aload         17
236: iconst_1
237: invokespecial #34
240: astore        18
242: aload         15
244: aload         16
246: invokevirtual #54
249: astore        19
251: aload         8
253: aload         9
255: aload         19
257: invokevirtual #89
260: astore        20
262: aload         8
264: invokevirtual #284
267: astore        21
269: new           #39
272: dup
273: invokespecial #40
276: ldc           #41
278: invokevirtual #42
281: iload_3
282: invokevirtual #43
285: ldc           #44
287: invokevirtual #42
290: iconst_0
291: invokevirtual #43
294: ldc           #41
296: invokevirtual #42
299: invokevirtual #45
302: iload_3
303: ifne          310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #46
314: new           #39
317: dup
318: invokespecial #40
321: ldc           #41
323: invokevirtual #42
326: iload         4
328: invokevirtual #43
331: ldc           #44
333: invokevirtual #42
336: iconst_0
337: invokevirtual #43
340: ldc           #41
342: invokevirtual #42
345: invokevirtual #45
348: iload         4
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #46
361: new           #39
364: dup
365: invokespecial #40
368: ldc           #41
370: invokevirtual #42
373: dload         5
375: invokevirtual #59
378: ldc           #44
380: invokevirtual #42
383: dconst_0
384: invokevirtual #59
387: ldc           #41
389: invokevirtual #42
392: invokevirtual #45
395: dload         5
397: dconst_0
398: dcmpl
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #46
410: new           #39
413: dup
414: invokespecial #40
417: ldc           #41
419: invokevirtual #42
422: iload         7
424: invokevirtual #43
427: ldc           #44
429: invokevirtual #42
432: iconst_0
433: invokevirtual #43
436: ldc           #41
438: invokevirtual #42
441: invokevirtual #45
444: iload         7
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #46
457: new           #39
460: dup
461: invokespecial #40
464: ldc           #41
466: invokevirtual #42
469: iload         12
471: invokevirtual #43
474: ldc           #44
476: invokevirtual #42
479: iconst_0
480: invokevirtual #43
483: ldc           #41
485: invokevirtual #42
488: invokevirtual #45
491: iload         12
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #46
504: new           #39
507: dup
508: invokespecial #40
511: ldc           #41
513: invokevirtual #42
516: iload         13
518: invokevirtual #43
521: ldc           #44
523: invokevirtual #42
526: iconst_0
527: invokevirtual #43
530: ldc           #41
532: invokevirtual #42
535: invokevirtual #45
538: iload         13
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #46
551: new           #39
554: dup
555: invokespecial #40
558: ldc           #41
560: invokevirtual #42
563: iload         14
565: invokevirtual #43
568: ldc           #44
570: invokevirtual #42
573: iconst_0
574: invokevirtual #43
577: ldc           #41
579: invokevirtual #42
582: invokevirtual #45
585: iload         14
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #46
598: aload         16
600: invokestatic  #47
603: aload         16
605: invokestatic  #48
608: ldc           #49
610: invokestatic  #50
613: aload         19
615: invokestatic  #47
618: aload         19
620: invokestatic  #48
623: ldc           #49
625: invokestatic  #50
628: aload         20
630: invokestatic  #47
633: aload         20
635: invokestatic  #48
638: ldc           #49
640: invokestatic  #50
643: aload         21
645: invokestatic  #47
648: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 4333
End line: 4355
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint((double) 1L, 0.6444303510232912d);
        gaussianFitter12.addObservedPoint(11013.232920103323d, (double) 35);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray20 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 2 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #285
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aload         5
95: dconst_1
96: ldc2_w        #195
99: invokevirtual #158
102: aload         5
104: ldc2_w        #99
107: ldc2_w        #17
110: invokevirtual #158
113: aload         5
115: invokevirtual #63
118: astore        7
120: ldc           #199
122: invokestatic  #37
125: goto          130
128: astore        7
130: new           #39
133: dup
134: invokespecial #40
137: ldc           #41
139: invokevirtual #42
142: iload_3
143: invokevirtual #43
146: ldc           #44
148: invokevirtual #42
151: iconst_0
152: invokevirtual #43
155: ldc           #41
157: invokevirtual #42
160: invokevirtual #45
163: iload_3
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #46
175: new           #39
178: dup
179: invokespecial #40
182: ldc           #41
184: invokevirtual #42
187: iload         4
189: invokevirtual #43
192: ldc           #44
194: invokevirtual #42
197: iconst_0
198: invokevirtual #43
201: ldc           #41
203: invokevirtual #42
206: invokevirtual #45
209: iload         4
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #46
222: aload         6
224: invokestatic  #47
227: return
Exception table:
from    to  target type
113   125   128   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 4358
End line: 4390
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker27 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double28 = simpleVectorialValueChecker27.getRelativeThreshold();
        double double29 = simpleVectorialValueChecker27.getRelativeThreshold();
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        double double31 = simpleVectorialValueChecker27.getRelativeThreshold();
        double double32 = simpleVectorialValueChecker27.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.1102230246251565E-14d + "'", double28 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.1102230246251565E-14d + "'", double29 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.1102230246251565E-14d + "'", double31 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.1102230246251565E-14d + "'", double32 == 1.1102230246251565E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #286
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #67
85: dup
86: aload_1
87: invokespecial #68
90: astore        6
92: new           #24
95: dup
96: aload_1
97: invokespecial #25
100: astore        7
102: new           #8
105: dup
106: ldc2_w        #9
109: ldc2_w        #11
112: ldc2_w        #13
115: dconst_1
116: ldc2_w        #13
119: invokespecial #15
122: astore        8
124: new           #16
127: dup
128: ldc2_w        #17
131: ldc2_w        #19
134: invokespecial #21
137: astore        9
139: aload         8
141: aload         9
143: invokevirtual #22
146: aload         8
148: invokevirtual #23
151: istore        10
153: aload         8
155: invokevirtual #23
158: istore        11
160: new           #16
163: dup
164: invokespecial #150
167: astore        12
169: aload         12
171: invokevirtual #88
174: dstore        13
176: aload         12
178: invokevirtual #88
181: dstore        15
183: aload         8
185: aload         12
187: invokevirtual #22
190: aload         12
192: invokevirtual #88
195: dstore        17
197: aload         12
199: invokevirtual #88
202: dstore        19
204: aload_1
205: aload         12
207: invokevirtual #22
210: new           #39
213: dup
214: invokespecial #40
217: ldc           #41
219: invokevirtual #42
222: iload_3
223: invokevirtual #43
226: ldc           #44
228: invokevirtual #42
231: iconst_0
232: invokevirtual #43
235: ldc           #41
237: invokevirtual #42
240: invokevirtual #45
243: iload_3
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #46
255: new           #39
258: dup
259: invokespecial #40
262: ldc           #41
264: invokevirtual #42
267: iload         4
269: invokevirtual #43
272: ldc           #44
274: invokevirtual #42
277: iconst_0
278: invokevirtual #43
281: ldc           #41
283: invokevirtual #42
286: invokevirtual #45
289: iload         4
291: ifne          298
294: iconst_1
295: goto          299
298: iconst_0
299: invokestatic  #46
302: new           #39
305: dup
306: invokespecial #40
309: ldc           #41
311: invokevirtual #42
314: iload         5
316: invokevirtual #43
319: ldc           #44
321: invokevirtual #42
324: iconst_0
325: invokevirtual #43
328: ldc           #41
330: invokevirtual #42
333: invokevirtual #45
336: iload         5
338: ifne          345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #46
349: new           #39
352: dup
353: invokespecial #40
356: ldc           #41
358: invokevirtual #42
361: iload         10
363: invokevirtual #43
366: ldc           #44
368: invokevirtual #42
371: iconst_0
372: invokevirtual #43
375: ldc           #41
377: invokevirtual #42
380: invokevirtual #45
383: iload         10
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #46
396: new           #39
399: dup
400: invokespecial #40
403: ldc           #41
405: invokevirtual #42
408: iload         11
410: invokevirtual #43
413: ldc           #44
415: invokevirtual #42
418: iconst_0
419: invokevirtual #43
422: ldc           #41
424: invokevirtual #42
427: invokevirtual #45
430: iload         11
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #46
443: new           #39
446: dup
447: invokespecial #40
450: ldc           #41
452: invokevirtual #42
455: dload         13
457: invokevirtual #59
460: ldc           #44
462: invokevirtual #42
465: ldc2_w        #152
468: invokevirtual #59
471: ldc           #41
473: invokevirtual #42
476: invokevirtual #45
479: dload         13
481: ldc2_w        #152
484: dcmpl
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #46
496: new           #39
499: dup
500: invokespecial #40
503: ldc           #41
505: invokevirtual #42
508: dload         15
510: invokevirtual #59
513: ldc           #44
515: invokevirtual #42
518: ldc2_w        #152
521: invokevirtual #59
524: ldc           #41
526: invokevirtual #42
529: invokevirtual #45
532: dload         15
534: ldc2_w        #152
537: dcmpl
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #46
549: new           #39
552: dup
553: invokespecial #40
556: ldc           #41
558: invokevirtual #42
561: dload         17
563: invokevirtual #59
566: ldc           #44
568: invokevirtual #42
571: ldc2_w        #152
574: invokevirtual #59
577: ldc           #41
579: invokevirtual #42
582: invokevirtual #45
585: dload         17
587: ldc2_w        #152
590: dcmpl
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #46
602: new           #39
605: dup
606: invokespecial #40
609: ldc           #41
611: invokevirtual #42
614: dload         19
616: invokevirtual #59
619: ldc           #44
621: invokevirtual #42
624: ldc2_w        #152
627: invokevirtual #59
630: ldc           #41
632: invokevirtual #42
635: invokevirtual #45
638: dload         19
640: ldc2_w        #152
643: dcmpl
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #46
655: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 4393
End line: 4447
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint58 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, 4.9E-324d, 57.29577951308232d);
        double double59 = weightedObservedPoint58.getWeight();
        double double60 = weightedObservedPoint58.getWeight();
        double double61 = weightedObservedPoint58.getY();
        gaussianFitter12.addObservedPoint(weightedObservedPoint58);
        gaussianFitter12.addObservedPoint(1.9155040003582885E22d, 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 57.29577951308232d + "'", double61 == 57.29577951308232d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: new           #8
89: dup
90: ldc2_w        #9
93: ldc2_w        #11
96: ldc2_w        #13
99: dconst_1
100: ldc2_w        #13
103: invokespecial #15
106: astore        6
108: new           #16
111: dup
112: ldc2_w        #17
115: ldc2_w        #19
118: invokespecial #21
121: astore        7
123: aload         6
125: aload         7
127: invokevirtual #22
130: aload         6
132: invokevirtual #23
135: istore        8
137: aload         6
139: invokevirtual #23
142: istore        9
144: new           #24
147: dup
148: aload         6
150: invokespecial #25
153: astore        10
155: aload         10
157: invokevirtual #52
160: aconst_null
161: astore        11
163: new           #8
166: dup
167: ldc2_w        #9
170: ldc2_w        #11
173: ldc2_w        #13
176: dconst_1
177: ldc2_w        #13
180: invokespecial #15
183: astore        12
185: new           #16
188: dup
189: ldc2_w        #17
192: ldc2_w        #19
195: invokespecial #21
198: astore        13
200: aload         12
202: aload         13
204: invokevirtual #22
207: aload         12
209: invokevirtual #23
212: istore        14
214: aload         12
216: invokevirtual #23
219: istore        15
221: aload         12
223: invokevirtual #53
226: istore        16
228: new           #24
231: dup
232: aload         12
234: invokespecial #25
237: astore        17
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #27
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #9
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #13
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #29
266: dastore
267: dup
268: iconst_4
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #31
278: dastore
279: astore        18
281: aconst_null
282: astore        19
284: new           #33
287: dup
288: aload         18
290: aload         19
292: iconst_1
293: invokespecial #34
296: astore        20
298: aload         17
300: aload         18
302: invokevirtual #54
305: astore        21
307: aload         10
309: aload         11
311: aload         21
313: invokevirtual #55
316: astore        22
318: aload         5
320: aload         21
322: invokevirtual #54
325: astore        23
327: new           #217
330: dup
331: dconst_0
332: ldc2_w        #218
335: ldc2_w        #220
338: invokespecial #222
341: astore        24
343: aload         24
345: invokevirtual #223
348: dstore        25
350: aload         24
352: invokevirtual #223
355: dstore        27
357: aload         24
359: invokevirtual #231
362: dstore        29
364: aload         5
366: aload         24
368: invokevirtual #174
371: aload         5
373: ldc2_w        #288
376: dconst_0
377: invokevirtual #158
380: new           #39
383: dup
384: invokespecial #40
387: ldc           #41
389: invokevirtual #42
392: iload_3
393: invokevirtual #43
396: ldc           #44
398: invokevirtual #42
401: iconst_0
402: invokevirtual #43
405: ldc           #41
407: invokevirtual #42
410: invokevirtual #45
413: iload_3
414: ifne          421
417: iconst_1
418: goto          422
421: iconst_0
422: invokestatic  #46
425: new           #39
428: dup
429: invokespecial #40
432: ldc           #41
434: invokevirtual #42
437: iload         4
439: invokevirtual #43
442: ldc           #44
444: invokevirtual #42
447: iconst_0
448: invokevirtual #43
451: ldc           #41
453: invokevirtual #42
456: invokevirtual #45
459: iload         4
461: ifne          468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #46
472: new           #39
475: dup
476: invokespecial #40
479: ldc           #41
481: invokevirtual #42
484: iload         8
486: invokevirtual #43
489: ldc           #44
491: invokevirtual #42
494: iconst_0
495: invokevirtual #43
498: ldc           #41
500: invokevirtual #42
503: invokevirtual #45
506: iload         8
508: ifne          515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #46
519: new           #39
522: dup
523: invokespecial #40
526: ldc           #41
528: invokevirtual #42
531: iload         9
533: invokevirtual #43
536: ldc           #44
538: invokevirtual #42
541: iconst_0
542: invokevirtual #43
545: ldc           #41
547: invokevirtual #42
550: invokevirtual #45
553: iload         9
555: ifne          562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #46
566: new           #39
569: dup
570: invokespecial #40
573: ldc           #41
575: invokevirtual #42
578: iload         14
580: invokevirtual #43
583: ldc           #44
585: invokevirtual #42
588: iconst_0
589: invokevirtual #43
592: ldc           #41
594: invokevirtual #42
597: invokevirtual #45
600: iload         14
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #46
613: new           #39
616: dup
617: invokespecial #40
620: ldc           #41
622: invokevirtual #42
625: iload         15
627: invokevirtual #43
630: ldc           #44
632: invokevirtual #42
635: iconst_0
636: invokevirtual #43
639: ldc           #41
641: invokevirtual #42
644: invokevirtual #45
647: iload         15
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #46
660: new           #39
663: dup
664: invokespecial #40
667: ldc           #41
669: invokevirtual #42
672: iload         16
674: invokevirtual #43
677: ldc           #44
679: invokevirtual #42
682: iconst_0
683: invokevirtual #43
686: ldc           #41
688: invokevirtual #42
691: invokevirtual #45
694: iload         16
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #46
707: aload         18
709: invokestatic  #47
712: aload         18
714: invokestatic  #48
717: ldc           #49
719: invokestatic  #50
722: aload         21
724: invokestatic  #47
727: aload         21
729: invokestatic  #48
732: ldc           #49
734: invokestatic  #50
737: aload         22
739: invokestatic  #47
742: aload         22
744: invokestatic  #48
747: ldc           #49
749: invokestatic  #50
752: aload         23
754: invokestatic  #47
757: aload         23
759: invokestatic  #48
762: ldc           #49
764: invokestatic  #50
767: new           #39
770: dup
771: invokespecial #40
774: ldc           #41
776: invokevirtual #42
779: dload         25
781: invokevirtual #59
784: ldc           #44
786: invokevirtual #42
789: dconst_0
790: invokevirtual #59
793: ldc           #41
795: invokevirtual #42
798: invokevirtual #45
801: dload         25
803: dconst_0
804: dcmpl
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #46
816: new           #39
819: dup
820: invokespecial #40
823: ldc           #41
825: invokevirtual #42
828: dload         27
830: invokevirtual #59
833: ldc           #44
835: invokevirtual #42
838: dconst_0
839: invokevirtual #59
842: ldc           #41
844: invokevirtual #42
847: invokevirtual #45
850: dload         27
852: dconst_0
853: dcmpl
854: ifne          861
857: iconst_1
858: goto          862
861: iconst_0
862: invokestatic  #46
865: new           #39
868: dup
869: invokespecial #40
872: ldc           #41
874: invokevirtual #42
877: dload         29
879: invokevirtual #59
882: ldc           #44
884: invokevirtual #42
887: ldc2_w        #220
890: invokevirtual #59
893: ldc           #41
895: invokevirtual #42
898: invokevirtual #45
901: dload         29
903: ldc2_w        #220
906: dcmpl
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #46
918: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 4450
End line: 4490
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter15 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker18 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double19 = simpleVectorialValueChecker18.getRelativeThreshold();
        double double20 = simpleVectorialValueChecker18.getAbsoluteThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker18);
        int int22 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker31 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer28.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker31);
        int int33 = levenbergMarquardtOptimizer28.getMaxEvaluations();
        int int34 = levenbergMarquardtOptimizer28.getMaxEvaluations();
        int int35 = levenbergMarquardtOptimizer28.getEvaluations();
        int int36 = levenbergMarquardtOptimizer28.getJacobianEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter37 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer28);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker38 = levenbergMarquardtOptimizer28.getConvergenceChecker();
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker38);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #53
86: istore        7
88: aload_1
89: invokevirtual #53
92: istore        8
94: new           #67
97: dup
98: aload_1
99: invokespecial #68
102: astore        9
104: new           #16
107: dup
108: ldc2_w        #17
111: ldc2_w        #19
114: invokespecial #21
117: astore        10
119: aload         10
121: invokevirtual #88
124: dstore        11
126: aload         10
128: invokevirtual #205
131: dstore        13
133: aload_1
134: aload         10
136: invokevirtual #22
139: aload_1
140: invokevirtual #53
143: istore        15
145: new           #8
148: dup
149: ldc2_w        #9
152: ldc2_w        #11
155: ldc2_w        #13
158: dconst_1
159: ldc2_w        #13
162: invokespecial #15
165: astore        16
167: new           #16
170: dup
171: ldc2_w        #17
174: ldc2_w        #19
177: invokespecial #21
180: astore        17
182: aload         16
184: aload         17
186: invokevirtual #22
189: aload         16
191: invokevirtual #23
194: istore        18
196: aload         16
198: invokevirtual #23
201: istore        19
203: aload         16
205: invokevirtual #53
208: istore        20
210: aload         16
212: invokevirtual #160
215: istore        21
217: new           #24
220: dup
221: aload         16
223: invokespecial #25
226: astore        22
228: aload         16
230: invokevirtual #73
233: astore        23
235: aload_1
236: aload         23
238: invokevirtual #22
241: new           #39
244: dup
245: invokespecial #40
248: ldc           #41
250: invokevirtual #42
253: iload_3
254: invokevirtual #43
257: ldc           #44
259: invokevirtual #42
262: iconst_0
263: invokevirtual #43
266: ldc           #41
268: invokevirtual #42
271: invokevirtual #45
274: iload_3
275: ifne          282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #46
286: new           #39
289: dup
290: invokespecial #40
293: ldc           #41
295: invokevirtual #42
298: iload         4
300: invokevirtual #43
303: ldc           #44
305: invokevirtual #42
308: iconst_0
309: invokevirtual #43
312: ldc           #41
314: invokevirtual #42
317: invokevirtual #45
320: iload         4
322: ifne          329
325: iconst_1
326: goto          330
329: iconst_0
330: invokestatic  #46
333: new           #39
336: dup
337: invokespecial #40
340: ldc           #41
342: invokevirtual #42
345: dload         5
347: invokevirtual #59
350: ldc           #44
352: invokevirtual #42
355: dconst_0
356: invokevirtual #59
359: ldc           #41
361: invokevirtual #42
364: invokevirtual #45
367: dload         5
369: dconst_0
370: dcmpl
371: ifne          378
374: iconst_1
375: goto          379
378: iconst_0
379: invokestatic  #46
382: new           #39
385: dup
386: invokespecial #40
389: ldc           #41
391: invokevirtual #42
394: iload         7
396: invokevirtual #43
399: ldc           #44
401: invokevirtual #42
404: iconst_0
405: invokevirtual #43
408: ldc           #41
410: invokevirtual #42
413: invokevirtual #45
416: iload         7
418: ifne          425
421: iconst_1
422: goto          426
425: iconst_0
426: invokestatic  #46
429: new           #39
432: dup
433: invokespecial #40
436: ldc           #41
438: invokevirtual #42
441: iload         8
443: invokevirtual #43
446: ldc           #44
448: invokevirtual #42
451: iconst_0
452: invokevirtual #43
455: ldc           #41
457: invokevirtual #42
460: invokevirtual #45
463: iload         8
465: ifne          472
468: iconst_1
469: goto          473
472: iconst_0
473: invokestatic  #46
476: new           #39
479: dup
480: invokespecial #40
483: ldc           #41
485: invokevirtual #42
488: dload         11
490: invokevirtual #59
493: ldc           #44
495: invokevirtual #42
498: ldc2_w        #17
501: invokevirtual #59
504: ldc           #41
506: invokevirtual #42
509: invokevirtual #45
512: dload         11
514: ldc2_w        #17
517: dcmpl
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #46
529: new           #39
532: dup
533: invokespecial #40
536: ldc           #41
538: invokevirtual #42
541: dload         13
543: invokevirtual #59
546: ldc           #44
548: invokevirtual #42
551: ldc2_w        #19
554: invokevirtual #59
557: ldc           #41
559: invokevirtual #42
562: invokevirtual #45
565: dload         13
567: ldc2_w        #19
570: dcmpl
571: ifne          578
574: iconst_1
575: goto          579
578: iconst_0
579: invokestatic  #46
582: new           #39
585: dup
586: invokespecial #40
589: ldc           #41
591: invokevirtual #42
594: iload         15
596: invokevirtual #43
599: ldc           #44
601: invokevirtual #42
604: iconst_0
605: invokevirtual #43
608: ldc           #41
610: invokevirtual #42
613: invokevirtual #45
616: iload         15
618: ifne          625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #46
629: new           #39
632: dup
633: invokespecial #40
636: ldc           #41
638: invokevirtual #42
641: iload         18
643: invokevirtual #43
646: ldc           #44
648: invokevirtual #42
651: iconst_0
652: invokevirtual #43
655: ldc           #41
657: invokevirtual #42
660: invokevirtual #45
663: iload         18
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #46
676: new           #39
679: dup
680: invokespecial #40
683: ldc           #41
685: invokevirtual #42
688: iload         19
690: invokevirtual #43
693: ldc           #44
695: invokevirtual #42
698: iconst_0
699: invokevirtual #43
702: ldc           #41
704: invokevirtual #42
707: invokevirtual #45
710: iload         19
712: ifne          719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #46
723: new           #39
726: dup
727: invokespecial #40
730: ldc           #41
732: invokevirtual #42
735: iload         20
737: invokevirtual #43
740: ldc           #44
742: invokevirtual #42
745: iconst_0
746: invokevirtual #43
749: ldc           #41
751: invokevirtual #42
754: invokevirtual #45
757: iload         20
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #46
770: new           #39
773: dup
774: invokespecial #40
777: ldc           #41
779: invokevirtual #42
782: iload         21
784: invokevirtual #43
787: ldc           #44
789: invokevirtual #42
792: iconst_0
793: invokevirtual #43
796: ldc           #41
798: invokevirtual #42
801: invokevirtual #45
804: iload         21
806: ifne          813
809: iconst_1
810: goto          814
813: iconst_0
814: invokestatic  #46
817: aload         23
819: invokestatic  #47
822: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 4493
End line: 4574
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double17 = simpleVectorialValueChecker16.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker16);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter19 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer25 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker28 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer25.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker28);
        int int30 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        int int31 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        int int32 = levenbergMarquardtOptimizer25.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter33 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer25);
        double[] doubleArray40 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray41 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair43 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray41, true);
        double[] doubleArray44 = gaussianFitter33.fit(doubleArray40);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer50 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker53 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer50.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker53);
        int int55 = levenbergMarquardtOptimizer50.getMaxEvaluations();
        int int56 = levenbergMarquardtOptimizer50.getMaxEvaluations();
        int int57 = levenbergMarquardtOptimizer50.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter58 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer50);
        double[] doubleArray65 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray66 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair68 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray65, doubleArray66, true);
        double[] doubleArray69 = gaussianFitter58.fit(doubleArray65);
        double[] doubleArray76 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray77 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair79 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray76, doubleArray77, true);
        double[] doubleArray80 = vectorialPointValuePair79.getValue();
        double[] doubleArray81 = vectorialPointValuePair79.getValue();
        double[] doubleArray82 = vectorialPointValuePair79.getPoint();
        double[] doubleArray83 = gaussianFitter58.fit(doubleArray82);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray44, doubleArray83);
        double[] doubleArray85 = vectorialPointValuePair84.getPoint();
        double[] doubleArray86 = gaussianFitter19.fit(doubleArray85);
        gaussianFitter19.clearObservations();
        gaussianFitter19.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray89 = gaussianFitter19.getObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #291
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #16
91: dup
92: ldc2_w        #17
95: ldc2_w        #19
98: invokespecial #21
101: astore        8
103: aload         8
105: invokevirtual #88
108: dstore        9
110: aload_1
111: aload         8
113: invokevirtual #22
116: new           #24
119: dup
120: aload_1
121: invokespecial #25
124: astore        11
126: new           #8
129: dup
130: ldc2_w        #9
133: ldc2_w        #11
136: ldc2_w        #13
139: dconst_1
140: ldc2_w        #13
143: invokespecial #15
146: astore        12
148: new           #16
151: dup
152: ldc2_w        #17
155: ldc2_w        #19
158: invokespecial #21
161: astore        13
163: aload         12
165: aload         13
167: invokevirtual #22
170: aload         12
172: invokevirtual #23
175: istore        14
177: aload         12
179: invokevirtual #23
182: istore        15
184: aload         12
186: invokevirtual #53
189: istore        16
191: new           #24
194: dup
195: aload         12
197: invokespecial #25
200: astore        17
202: bipush        6
204: newarray       double
206: dup
207: iconst_0
208: ldc2_w        #27
211: dastore
212: dup
213: iconst_1
214: ldc2_w        #9
217: dastore
218: dup
219: iconst_2
220: ldc2_w        #13
223: dastore
224: dup
225: iconst_3
226: ldc2_w        #29
229: dastore
230: dup
231: iconst_4
232: ldc2_w        #17
235: dastore
236: dup
237: iconst_5
238: ldc2_w        #31
241: dastore
242: astore        18
244: aconst_null
245: astore        19
247: new           #33
250: dup
251: aload         18
253: aload         19
255: iconst_1
256: invokespecial #34
259: astore        20
261: aload         17
263: aload         18
265: invokevirtual #54
268: astore        21
270: new           #8
273: dup
274: ldc2_w        #9
277: ldc2_w        #11
280: ldc2_w        #13
283: dconst_1
284: ldc2_w        #13
287: invokespecial #15
290: astore        22
292: new           #16
295: dup
296: ldc2_w        #17
299: ldc2_w        #19
302: invokespecial #21
305: astore        23
307: aload         22
309: aload         23
311: invokevirtual #22
314: aload         22
316: invokevirtual #23
319: istore        24
321: aload         22
323: invokevirtual #23
326: istore        25
328: aload         22
330: invokevirtual #53
333: istore        26
335: new           #24
338: dup
339: aload         22
341: invokespecial #25
344: astore        27
346: bipush        6
348: newarray       double
350: dup
351: iconst_0
352: ldc2_w        #27
355: dastore
356: dup
357: iconst_1
358: ldc2_w        #9
361: dastore
362: dup
363: iconst_2
364: ldc2_w        #13
367: dastore
368: dup
369: iconst_3
370: ldc2_w        #29
373: dastore
374: dup
375: iconst_4
376: ldc2_w        #17
379: dastore
380: dup
381: iconst_5
382: ldc2_w        #31
385: dastore
386: astore        28
388: aconst_null
389: astore        29
391: new           #33
394: dup
395: aload         28
397: aload         29
399: iconst_1
400: invokespecial #34
403: astore        30
405: aload         27
407: aload         28
409: invokevirtual #54
412: astore        31
414: bipush        6
416: newarray       double
418: dup
419: iconst_0
420: ldc2_w        #27
423: dastore
424: dup
425: iconst_1
426: ldc2_w        #9
429: dastore
430: dup
431: iconst_2
432: ldc2_w        #13
435: dastore
436: dup
437: iconst_3
438: ldc2_w        #29
441: dastore
442: dup
443: iconst_4
444: ldc2_w        #17
447: dastore
448: dup
449: iconst_5
450: ldc2_w        #31
453: dastore
454: astore        32
456: aconst_null
457: astore        33
459: new           #33
462: dup
463: aload         32
465: aload         33
467: iconst_1
468: invokespecial #34
471: astore        34
473: aload         34
475: invokevirtual #74
478: astore        35
480: aload         34
482: invokevirtual #74
485: astore        36
487: aload         34
489: invokevirtual #75
492: astore        37
494: aload         27
496: aload         37
498: invokevirtual #54
501: astore        38
503: new           #33
506: dup
507: aload         21
509: aload         38
511: invokespecial #109
514: astore        39
516: aload         39
518: invokevirtual #75
521: astore        40
523: aload         11
525: aload         40
527: invokevirtual #54
530: astore        41
532: aload         11
534: invokevirtual #52
537: aload         11
539: invokevirtual #52
542: aload         11
544: invokevirtual #62
547: astore        42
549: new           #39
552: dup
553: invokespecial #40
556: ldc           #41
558: invokevirtual #42
561: iload_3
562: invokevirtual #43
565: ldc           #44
567: invokevirtual #42
570: iconst_0
571: invokevirtual #43
574: ldc           #41
576: invokevirtual #42
579: invokevirtual #45
582: iload_3
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #46
594: new           #39
597: dup
598: invokespecial #40
601: ldc           #41
603: invokevirtual #42
606: iload         4
608: invokevirtual #43
611: ldc           #44
613: invokevirtual #42
616: iconst_0
617: invokevirtual #43
620: ldc           #41
622: invokevirtual #42
625: invokevirtual #45
628: iload         4
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #46
641: new           #39
644: dup
645: invokespecial #40
648: ldc           #41
650: invokevirtual #42
653: dload         5
655: invokevirtual #59
658: ldc           #44
660: invokevirtual #42
663: dconst_0
664: invokevirtual #59
667: ldc           #41
669: invokevirtual #42
672: invokevirtual #45
675: dload         5
677: dconst_0
678: dcmpl
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #46
690: new           #39
693: dup
694: invokespecial #40
697: ldc           #41
699: invokevirtual #42
702: iload         7
704: invokevirtual #43
707: ldc           #44
709: invokevirtual #42
712: iconst_0
713: invokevirtual #43
716: ldc           #41
718: invokevirtual #42
721: invokevirtual #45
724: iload         7
726: ifne          733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #46
737: new           #39
740: dup
741: invokespecial #40
744: ldc           #41
746: invokevirtual #42
749: dload         9
751: invokevirtual #59
754: ldc           #44
756: invokevirtual #42
759: ldc2_w        #17
762: invokevirtual #59
765: ldc           #41
767: invokevirtual #42
770: invokevirtual #45
773: dload         9
775: ldc2_w        #17
778: dcmpl
779: ifne          786
782: iconst_1
783: goto          787
786: iconst_0
787: invokestatic  #46
790: new           #39
793: dup
794: invokespecial #40
797: ldc           #41
799: invokevirtual #42
802: iload         14
804: invokevirtual #43
807: ldc           #44
809: invokevirtual #42
812: iconst_0
813: invokevirtual #43
816: ldc           #41
818: invokevirtual #42
821: invokevirtual #45
824: iload         14
826: ifne          833
829: iconst_1
830: goto          834
833: iconst_0
834: invokestatic  #46
837: new           #39
840: dup
841: invokespecial #40
844: ldc           #41
846: invokevirtual #42
849: iload         15
851: invokevirtual #43
854: ldc           #44
856: invokevirtual #42
859: iconst_0
860: invokevirtual #43
863: ldc           #41
865: invokevirtual #42
868: invokevirtual #45
871: iload         15
873: ifne          880
876: iconst_1
877: goto          881
880: iconst_0
881: invokestatic  #46
884: new           #39
887: dup
888: invokespecial #40
891: ldc           #41
893: invokevirtual #42
896: iload         16
898: invokevirtual #43
901: ldc           #44
903: invokevirtual #42
906: iconst_0
907: invokevirtual #43
910: ldc           #41
912: invokevirtual #42
915: invokevirtual #45
918: iload         16
920: ifne          927
923: iconst_1
924: goto          928
927: iconst_0
928: invokestatic  #46
931: aload         18
933: invokestatic  #47
936: aload         18
938: invokestatic  #48
941: ldc           #49
943: invokestatic  #50
946: aload         21
948: invokestatic  #47
951: aload         21
953: invokestatic  #48
956: ldc           #49
958: invokestatic  #50
961: new           #39
964: dup
965: invokespecial #40
968: ldc           #41
970: invokevirtual #42
973: iload         24
975: invokevirtual #43
978: ldc           #44
980: invokevirtual #42
983: iconst_0
984: invokevirtual #43
987: ldc           #41
989: invokevirtual #42
992: invokevirtual #45
995: iload         24
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #46
1008: new           #39
1011: dup
1012: invokespecial #40
1015: ldc           #41
1017: invokevirtual #42
1020: iload         25
1022: invokevirtual #43
1025: ldc           #44
1027: invokevirtual #42
1030: iconst_0
1031: invokevirtual #43
1034: ldc           #41
1036: invokevirtual #42
1039: invokevirtual #45
1042: iload         25
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #46
1055: new           #39
1058: dup
1059: invokespecial #40
1062: ldc           #41
1064: invokevirtual #42
1067: iload         26
1069: invokevirtual #43
1072: ldc           #44
1074: invokevirtual #42
1077: iconst_0
1078: invokevirtual #43
1081: ldc           #41
1083: invokevirtual #42
1086: invokevirtual #45
1089: iload         26
1091: ifne          1098
1094: iconst_1
1095: goto          1099
1098: iconst_0
1099: invokestatic  #46
1102: aload         28
1104: invokestatic  #47
1107: aload         28
1109: invokestatic  #48
1112: ldc           #49
1114: invokestatic  #50
1117: aload         31
1119: invokestatic  #47
1122: aload         31
1124: invokestatic  #48
1127: ldc           #49
1129: invokestatic  #50
1132: aload         32
1134: invokestatic  #47
1137: aload         32
1139: invokestatic  #48
1142: ldc           #49
1144: invokestatic  #50
1147: aload         35
1149: invokestatic  #76
1152: aload         36
1154: invokestatic  #76
1157: aload         37
1159: invokestatic  #47
1162: aload         37
1164: invokestatic  #48
1167: ldc           #49
1169: invokestatic  #50
1172: aload         38
1174: invokestatic  #47
1177: aload         38
1179: invokestatic  #48
1182: ldc           #49
1184: invokestatic  #50
1187: aload         40
1189: invokestatic  #47
1192: aload         40
1194: invokestatic  #48
1197: ldc           #49
1199: invokestatic  #50
1202: aload         41
1204: invokestatic  #47
1207: aload         41
1209: invokestatic  #48
1212: ldc           #49
1214: invokestatic  #50
1217: aload         42
1219: invokestatic  #47
1222: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 4577
End line: 4695
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        java.lang.Object[] objArray3 = new java.lang.Object[] { "", (byte) 0 };
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("", objArray3);
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats6 = org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats7 = org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats9 = org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (short) -1, localizedFormats9 };
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException11 = new org.apache.commons.math.exception.MathIllegalArgumentException((org.apache.commons.math.exception.util.Localizable) localizedFormats6, (org.apache.commons.math.exception.util.Localizable) localizedFormats7, objArray10);
        java.lang.Object[] objArray12 = org.apache.commons.math.exception.util.ArgUtils.flatten(objArray10);
        org.apache.commons.math.exception.MathIllegalStateException mathIllegalStateException13 = new org.apache.commons.math.exception.MathIllegalStateException(objArray10);
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats15 = org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats16 = org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats18 = org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (short) -1, localizedFormats18 };
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException20 = new org.apache.commons.math.exception.MathIllegalArgumentException((org.apache.commons.math.exception.util.Localizable) localizedFormats15, (org.apache.commons.math.exception.util.Localizable) localizedFormats16, objArray19);
        java.lang.Object[] objArray21 = org.apache.commons.math.exception.util.ArgUtils.flatten(objArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathIllegalStateException13, "hi!", objArray19);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException4, "hi!", objArray19);
        java.lang.String str24 = convergenceException4.getPattern();
        org.apache.commons.math.optimization.OptimizationException optimizationException25 = new org.apache.commons.math.optimization.OptimizationException((java.lang.Throwable) convergenceException4);
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats26 = org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats27 = org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats29 = org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (short) -1, localizedFormats29 };
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException31 = new org.apache.commons.math.exception.MathIllegalArgumentException((org.apache.commons.math.exception.util.Localizable) localizedFormats26, (org.apache.commons.math.exception.util.Localizable) localizedFormats27, objArray30);
        java.lang.Object[] objArray32 = org.apache.commons.math.exception.util.ArgUtils.flatten(objArray30);
        org.apache.commons.math.exception.MathIllegalStateException mathIllegalStateException33 = new org.apache.commons.math.exception.MathIllegalStateException(objArray30);
        org.apache.commons.math.exception.util.Localizable localizable34 = mathIllegalStateException33.getGeneralPattern();
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats35 = org.apache.commons.math.exception.util.LocalizedFormats.NON_POSITIVE_DEFINITE_MATRIX;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Number number39 = null;
        org.apache.commons.math.exception.NumberIsTooSmallException numberIsTooSmallException41 = new org.apache.commons.math.exception.NumberIsTooSmallException(localizable37, (java.lang.Number) (byte) 1, number39, false);
        java.lang.Number number42 = numberIsTooSmallException41.getArgument();
        java.lang.Object[] objArray43 = numberIsTooSmallException41.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException((java.lang.Throwable) mathIllegalStateException33, (org.apache.commons.math.exception.util.Localizable) localizedFormats35, objArray43);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer53 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker56 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer53.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker56);
        int int58 = levenbergMarquardtOptimizer53.getMaxEvaluations();
        int int59 = levenbergMarquardtOptimizer53.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter60 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer53);
        gaussianFitter60.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction62 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer68 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker71 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer68.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker71);
        int int73 = levenbergMarquardtOptimizer68.getMaxEvaluations();
        int int74 = levenbergMarquardtOptimizer68.getMaxEvaluations();
        int int75 = levenbergMarquardtOptimizer68.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter76 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer68);
        double[] doubleArray83 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray84 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair86 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray83, doubleArray84, true);
        double[] doubleArray87 = gaussianFitter76.fit(doubleArray83);
        double[] doubleArray88 = gaussianFitter60.fit(parametricUnivariateRealFunction62, doubleArray87);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray89 = gaussianFitter60.getObservations();
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException(throwable46, "", (java.lang.Object[]) weightedObservedPointArray89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) optimizationException25, (org.apache.commons.math.exception.util.Localizable) localizedFormats35, (java.lang.Object[]) weightedObservedPointArray89);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser parameterGuesser92 = new org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser(weightedObservedPointArray89);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[, 0]");
        org.junit.Assert.assertTrue("'" + localizedFormats6 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION + "'", localizedFormats6.equals(org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION));
        org.junit.Assert.assertTrue("'" + localizedFormats7 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT + "'", localizedFormats7.equals(org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT));
        org.junit.Assert.assertTrue("'" + localizedFormats9 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE + "'", localizedFormats9.equals(org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE));
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertTrue("'" + localizedFormats15 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION + "'", localizedFormats15.equals(org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION));
        org.junit.Assert.assertTrue("'" + localizedFormats16 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT + "'", localizedFormats16.equals(org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT));
        org.junit.Assert.assertTrue("'" + localizedFormats18 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE + "'", localizedFormats18.equals(org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE));
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + localizedFormats26 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION + "'", localizedFormats26.equals(org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION));
        org.junit.Assert.assertTrue("'" + localizedFormats27 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT + "'", localizedFormats27.equals(org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT));
        org.junit.Assert.assertTrue("'" + localizedFormats29 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE + "'", localizedFormats29.equals(org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE));
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertTrue("'" + localizable34 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE + "'", localizable34.equals(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE));
        org.junit.Assert.assertTrue("'" + localizedFormats35 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.NON_POSITIVE_DEFINITE_MATRIX + "'", localizedFormats35.equals(org.apache.commons.math.exception.util.LocalizedFormats.NON_POSITIVE_DEFINITE_MATRIX));
        org.junit.Assert.assertEquals("'" + number42 + "' != '" + (byte) 1 + "'", number42, (byte) 1);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[1, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[1, null]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #292
20: aastore
21: invokevirtual #7
24: pop
25: iconst_2
26: anewarray     #5
29: dup
30: iconst_0
31: ldc_w         #293
34: aastore
35: dup
36: iconst_1
37: iconst_0
38: invokestatic  #294
41: aastore
42: astore_1
43: new           #295
46: dup
47: ldc_w         #293
50: aload_1
51: invokespecial #296
54: astore_2
55: getstatic     #297
58: astore_3
59: getstatic     #298
62: astore        4
64: getstatic     #299
67: astore        5
69: iconst_2
70: anewarray     #5
73: dup
74: iconst_0
75: iconst_m1
76: invokestatic  #300
79: aastore
80: dup
81: iconst_1
82: aload         5
84: aastore
85: astore        6
87: new           #301
90: dup
91: aload_3
92: aload         4
94: aload         6
96: invokespecial #302
99: astore        7
101: aload         6
103: invokestatic  #303
106: astore        8
108: new           #304
111: dup
112: aload         6
114: invokespecial #305
117: astore        9
119: getstatic     #297
122: astore        10
124: getstatic     #298
127: astore        11
129: getstatic     #299
132: astore        12
134: iconst_2
135: anewarray     #5
138: dup
139: iconst_0
140: iconst_m1
141: invokestatic  #300
144: aastore
145: dup
146: iconst_1
147: aload         12
149: aastore
150: astore        13
152: new           #301
155: dup
156: aload         10
158: aload         11
160: aload         13
162: invokespecial #302
165: astore        14
167: aload         13
169: invokestatic  #303
172: astore        15
174: new           #295
177: dup
178: aload         9
180: ldc_w         #306
183: aload         13
185: invokespecial #307
188: astore        16
190: new           #308
193: dup
194: aload_2
195: ldc_w         #306
198: aload         13
200: invokespecial #309
203: astore        17
205: aload_2
206: invokevirtual #310
209: astore        18
211: new           #311
214: dup
215: aload_2
216: invokespecial #312
219: astore        19
221: getstatic     #297
224: astore        20
226: getstatic     #298
229: astore        21
231: getstatic     #299
234: astore        22
236: iconst_2
237: anewarray     #5
240: dup
241: iconst_0
242: iconst_m1
243: invokestatic  #300
246: aastore
247: dup
248: iconst_1
249: aload         22
251: aastore
252: astore        23
254: new           #301
257: dup
258: aload         20
260: aload         21
262: aload         23
264: invokespecial #302
267: astore        24
269: aload         23
271: invokestatic  #303
274: astore        25
276: new           #304
279: dup
280: aload         23
282: invokespecial #305
285: astore        26
287: aload         26
289: invokevirtual #313
292: astore        27
294: getstatic     #314
297: astore        28
299: aconst_null
300: astore        29
302: aconst_null
303: astore        30
305: new           #65
308: dup
309: aload         29
311: iconst_1
312: invokestatic  #294
315: aload         30
317: iconst_0
318: invokespecial #315
321: astore        31
323: aload         31
325: invokevirtual #316
328: astore        32
330: aload         31
332: invokevirtual #317
335: astore        33
337: new           #295
340: dup
341: ldc_w         #293
344: aload         33
346: invokespecial #296
349: astore        34
351: new           #308
354: dup
355: aload         26
357: aload         28
359: aload         33
361: invokespecial #318
364: astore        35
366: aconst_null
367: astore        36
369: new           #8
372: dup
373: ldc2_w        #9
376: ldc2_w        #11
379: ldc2_w        #13
382: dconst_1
383: ldc2_w        #13
386: invokespecial #15
389: astore        37
391: new           #16
394: dup
395: ldc2_w        #17
398: ldc2_w        #19
401: invokespecial #21
404: astore        38
406: aload         37
408: aload         38
410: invokevirtual #22
413: aload         37
415: invokevirtual #23
418: istore        39
420: aload         37
422: invokevirtual #23
425: istore        40
427: new           #24
430: dup
431: aload         37
433: invokespecial #25
436: astore        41
438: aload         41
440: invokevirtual #52
443: aconst_null
444: astore        42
446: new           #8
449: dup
450: ldc2_w        #9
453: ldc2_w        #11
456: ldc2_w        #13
459: dconst_1
460: ldc2_w        #13
463: invokespecial #15
466: astore        43
468: new           #16
471: dup
472: ldc2_w        #17
475: ldc2_w        #19
478: invokespecial #21
481: astore        44
483: aload         43
485: aload         44
487: invokevirtual #22
490: aload         43
492: invokevirtual #23
495: istore        45
497: aload         43
499: invokevirtual #23
502: istore        46
504: aload         43
506: invokevirtual #53
509: istore        47
511: new           #24
514: dup
515: aload         43
517: invokespecial #25
520: astore        48
522: bipush        6
524: newarray       double
526: dup
527: iconst_0
528: ldc2_w        #27
531: dastore
532: dup
533: iconst_1
534: ldc2_w        #9
537: dastore
538: dup
539: iconst_2
540: ldc2_w        #13
543: dastore
544: dup
545: iconst_3
546: ldc2_w        #29
549: dastore
550: dup
551: iconst_4
552: ldc2_w        #17
555: dastore
556: dup
557: iconst_5
558: ldc2_w        #31
561: dastore
562: astore        49
564: aconst_null
565: astore        50
567: new           #33
570: dup
571: aload         49
573: aload         50
575: iconst_1
576: invokespecial #34
579: astore        51
581: aload         48
583: aload         49
585: invokevirtual #54
588: astore        52
590: aload         41
592: aload         42
594: aload         52
596: invokevirtual #55
599: astore        53
601: aload         41
603: invokevirtual #62
606: astore        54
608: new           #295
611: dup
612: aload         36
614: ldc_w         #293
617: aload         54
619: checkcast     #319
622: invokespecial #307
625: astore        55
627: new           #295
630: dup
631: aload         19
633: aload         28
635: aload         54
637: checkcast     #319
640: invokespecial #320
643: astore        56
645: new           #83
648: dup
649: aload         54
651: invokespecial #84
654: astore        57
656: ldc           #64
658: invokestatic  #37
661: goto          666
664: astore        57
666: aload_1
667: invokestatic  #47
670: aload_1
671: invokestatic  #321
674: ldc_w         #322
677: invokestatic  #50
680: aload_1
681: invokestatic  #323
684: ldc_w         #322
687: invokestatic  #50
690: new           #39
693: dup
694: invokespecial #40
697: ldc           #41
699: invokevirtual #42
702: aload_3
703: invokevirtual #324
706: ldc           #44
708: invokevirtual #42
711: getstatic     #297
714: invokevirtual #324
717: ldc           #41
719: invokevirtual #42
722: invokevirtual #45
725: aload_3
726: getstatic     #297
729: invokevirtual #325
732: invokestatic  #46
735: new           #39
738: dup
739: invokespecial #40
742: ldc           #41
744: invokevirtual #42
747: aload         4
749: invokevirtual #324
752: ldc           #44
754: invokevirtual #42
757: getstatic     #298
760: invokevirtual #324
763: ldc           #41
765: invokevirtual #42
768: invokevirtual #45
771: aload         4
773: getstatic     #298
776: invokevirtual #325
779: invokestatic  #46
782: new           #39
785: dup
786: invokespecial #40
789: ldc           #41
791: invokevirtual #42
794: aload         5
796: invokevirtual #324
799: ldc           #44
801: invokevirtual #42
804: getstatic     #299
807: invokevirtual #324
810: ldc           #41
812: invokevirtual #42
815: invokevirtual #45
818: aload         5
820: getstatic     #299
823: invokevirtual #325
826: invokestatic  #46
829: aload         6
831: invokestatic  #47
834: aload         6
836: invokestatic  #321
839: ldc_w         #326
842: invokestatic  #50
845: aload         6
847: invokestatic  #323
850: ldc_w         #326
853: invokestatic  #50
856: aload         8
858: invokestatic  #47
861: aload         8
863: invokestatic  #321
866: ldc_w         #326
869: invokestatic  #50
872: aload         8
874: invokestatic  #323
877: ldc_w         #326
880: invokestatic  #50
883: new           #39
886: dup
887: invokespecial #40
890: ldc           #41
892: invokevirtual #42
895: aload         10
897: invokevirtual #324
900: ldc           #44
902: invokevirtual #42
905: getstatic     #297
908: invokevirtual #324
911: ldc           #41
913: invokevirtual #42
916: invokevirtual #45
919: aload         10
921: getstatic     #297
924: invokevirtual #325
927: invokestatic  #46
930: new           #39
933: dup
934: invokespecial #40
937: ldc           #41
939: invokevirtual #42
942: aload         11
944: invokevirtual #324
947: ldc           #44
949: invokevirtual #42
952: getstatic     #298
955: invokevirtual #324
958: ldc           #41
960: invokevirtual #42
963: invokevirtual #45
966: aload         11
968: getstatic     #298
971: invokevirtual #325
974: invokestatic  #46
977: new           #39
980: dup
981: invokespecial #40
984: ldc           #41
986: invokevirtual #42
989: aload         12
991: invokevirtual #324
994: ldc           #44
996: invokevirtual #42
999: getstatic     #299
1002: invokevirtual #324
1005: ldc           #41
1007: invokevirtual #42
1010: invokevirtual #45
1013: aload         12
1015: getstatic     #299
1018: invokevirtual #325
1021: invokestatic  #46
1024: aload         13
1026: invokestatic  #47
1029: aload         13
1031: invokestatic  #321
1034: ldc_w         #326
1037: invokestatic  #50
1040: aload         13
1042: invokestatic  #323
1045: ldc_w         #326
1048: invokestatic  #50
1051: aload         15
1053: invokestatic  #47
1056: aload         15
1058: invokestatic  #321
1061: ldc_w         #326
1064: invokestatic  #50
1067: aload         15
1069: invokestatic  #323
1072: ldc_w         #326
1075: invokestatic  #50
1078: new           #39
1081: dup
1082: invokespecial #40
1085: ldc           #41
1087: invokevirtual #42
1090: aload         18
1092: invokevirtual #42
1095: ldc_w         #327
1098: invokevirtual #42
1101: invokevirtual #45
1104: aload         18
1106: ldc_w         #293
1109: invokestatic  #328
1112: new           #39
1115: dup
1116: invokespecial #40
1119: ldc           #41
1121: invokevirtual #42
1124: aload         20
1126: invokevirtual #324
1129: ldc           #44
1131: invokevirtual #42
1134: getstatic     #297
1137: invokevirtual #324
1140: ldc           #41
1142: invokevirtual #42
1145: invokevirtual #45
1148: aload         20
1150: getstatic     #297
1153: invokevirtual #325
1156: invokestatic  #46
1159: new           #39
1162: dup
1163: invokespecial #40
1166: ldc           #41
1168: invokevirtual #42
1171: aload         21
1173: invokevirtual #324
1176: ldc           #44
1178: invokevirtual #42
1181: getstatic     #298
1184: invokevirtual #324
1187: ldc           #41
1189: invokevirtual #42
1192: invokevirtual #45
1195: aload         21
1197: getstatic     #298
1200: invokevirtual #325
1203: invokestatic  #46
1206: new           #39
1209: dup
1210: invokespecial #40
1213: ldc           #41
1215: invokevirtual #42
1218: aload         22
1220: invokevirtual #324
1223: ldc           #44
1225: invokevirtual #42
1228: getstatic     #299
1231: invokevirtual #324
1234: ldc           #41
1236: invokevirtual #42
1239: invokevirtual #45
1242: aload         22
1244: getstatic     #299
1247: invokevirtual #325
1250: invokestatic  #46
1253: aload         23
1255: invokestatic  #47
1258: aload         23
1260: invokestatic  #321
1263: ldc_w         #326
1266: invokestatic  #50
1269: aload         23
1271: invokestatic  #323
1274: ldc_w         #326
1277: invokestatic  #50
1280: aload         25
1282: invokestatic  #47
1285: aload         25
1287: invokestatic  #321
1290: ldc_w         #326
1293: invokestatic  #50
1296: aload         25
1298: invokestatic  #323
1301: ldc_w         #326
1304: invokestatic  #50
1307: new           #39
1310: dup
1311: invokespecial #40
1314: ldc           #41
1316: invokevirtual #42
1319: aload         27
1321: invokevirtual #324
1324: ldc           #44
1326: invokevirtual #42
1329: getstatic     #329
1332: invokevirtual #324
1335: ldc           #41
1337: invokevirtual #42
1340: invokevirtual #45
1343: aload         27
1345: getstatic     #329
1348: invokevirtual #330
1351: invokestatic  #46
1354: new           #39
1357: dup
1358: invokespecial #40
1361: ldc           #41
1363: invokevirtual #42
1366: aload         28
1368: invokevirtual #324
1371: ldc           #44
1373: invokevirtual #42
1376: getstatic     #314
1379: invokevirtual #324
1382: ldc           #41
1384: invokevirtual #42
1387: invokevirtual #45
1390: aload         28
1392: getstatic     #314
1395: invokevirtual #325
1398: invokestatic  #46
1401: new           #39
1404: dup
1405: invokespecial #40
1408: ldc           #41
1410: invokevirtual #42
1413: aload         32
1415: invokevirtual #324
1418: ldc           #44
1420: invokevirtual #42
1423: iconst_1
1424: invokevirtual #43
1427: ldc           #41
1429: invokevirtual #42
1432: invokevirtual #45
1435: aload         32
1437: iconst_1
1438: invokestatic  #294
1441: invokestatic  #328
1444: aload         33
1446: invokestatic  #47
1449: aload         33
1451: invokestatic  #321
1454: ldc_w         #331
1457: invokestatic  #50
1460: aload         33
1462: invokestatic  #323
1465: ldc_w         #331
1468: invokestatic  #50
1471: new           #39
1474: dup
1475: invokespecial #40
1478: ldc           #41
1480: invokevirtual #42
1483: iload         39
1485: invokevirtual #43
1488: ldc           #44
1490: invokevirtual #42
1493: iconst_0
1494: invokevirtual #43
1497: ldc           #41
1499: invokevirtual #42
1502: invokevirtual #45
1505: iload         39
1507: ifne          1514
1510: iconst_1
1511: goto          1515
1514: iconst_0
1515: invokestatic  #46
1518: new           #39
1521: dup
1522: invokespecial #40
1525: ldc           #41
1527: invokevirtual #42
1530: iload         40
1532: invokevirtual #43
1535: ldc           #44
1537: invokevirtual #42
1540: iconst_0
1541: invokevirtual #43
1544: ldc           #41
1546: invokevirtual #42
1549: invokevirtual #45
1552: iload         40
1554: ifne          1561
1557: iconst_1
1558: goto          1562
1561: iconst_0
1562: invokestatic  #46
1565: new           #39
1568: dup
1569: invokespecial #40
1572: ldc           #41
1574: invokevirtual #42
1577: iload         45
1579: invokevirtual #43
1582: ldc           #44
1584: invokevirtual #42
1587: iconst_0
1588: invokevirtual #43
1591: ldc           #41
1593: invokevirtual #42
1596: invokevirtual #45
1599: iload         45
1601: ifne          1608
1604: iconst_1
1605: goto          1609
1608: iconst_0
1609: invokestatic  #46
1612: new           #39
1615: dup
1616: invokespecial #40
1619: ldc           #41
1621: invokevirtual #42
1624: iload         46
1626: invokevirtual #43
1629: ldc           #44
1631: invokevirtual #42
1634: iconst_0
1635: invokevirtual #43
1638: ldc           #41
1640: invokevirtual #42
1643: invokevirtual #45
1646: iload         46
1648: ifne          1655
1651: iconst_1
1652: goto          1656
1655: iconst_0
1656: invokestatic  #46
1659: new           #39
1662: dup
1663: invokespecial #40
1666: ldc           #41
1668: invokevirtual #42
1671: iload         47
1673: invokevirtual #43
1676: ldc           #44
1678: invokevirtual #42
1681: iconst_0
1682: invokevirtual #43
1685: ldc           #41
1687: invokevirtual #42
1690: invokevirtual #45
1693: iload         47
1695: ifne          1702
1698: iconst_1
1699: goto          1703
1702: iconst_0
1703: invokestatic  #46
1706: aload         49
1708: invokestatic  #47
1711: aload         49
1713: invokestatic  #48
1716: ldc           #49
1718: invokestatic  #50
1721: aload         52
1723: invokestatic  #47
1726: aload         52
1728: invokestatic  #48
1731: ldc           #49
1733: invokestatic  #50
1736: aload         53
1738: invokestatic  #47
1741: aload         53
1743: invokestatic  #48
1746: ldc           #49
1748: invokestatic  #50
1751: aload         54
1753: invokestatic  #47
1756: return
Exception table:
from    to  target type
645   661   664   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 4698
End line: 4767
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double[] doubleArray19 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray20 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair22 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray20, true);
        double[] doubleArray23 = vectorialPointValuePair22.getValue();
        double[] doubleArray24 = vectorialPointValuePair22.getValue();
        double[] doubleArray25 = vectorialPointValuePair22.getPoint();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer31 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker34 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer31.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker34);
        int int36 = levenbergMarquardtOptimizer31.getMaxEvaluations();
        int int37 = levenbergMarquardtOptimizer31.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter38 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer31);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer44 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker47 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer44.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker47);
        int int49 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int50 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter51 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer44);
        gaussianFitter51.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction53 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer59 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker62 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer59.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker62);
        int int64 = levenbergMarquardtOptimizer59.getMaxEvaluations();
        int int65 = levenbergMarquardtOptimizer59.getMaxEvaluations();
        int int66 = levenbergMarquardtOptimizer59.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter67 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer59);
        double[] doubleArray74 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray75 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray75, true);
        double[] doubleArray78 = gaussianFitter67.fit(doubleArray74);
        double[] doubleArray79 = gaussianFitter51.fit(parametricUnivariateRealFunction53, doubleArray78);
        double[] doubleArray80 = gaussianFitter38.fit(doubleArray78);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray78, false);
        double[] doubleArray83 = gaussianFitter12.fit(doubleArray25);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #332
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: bipush        6
88: newarray       double
90: dup
91: iconst_0
92: ldc2_w        #27
95: dastore
96: dup
97: iconst_1
98: ldc2_w        #9
101: dastore
102: dup
103: iconst_2
104: ldc2_w        #13
107: dastore
108: dup
109: iconst_3
110: ldc2_w        #29
113: dastore
114: dup
115: iconst_4
116: ldc2_w        #17
119: dastore
120: dup
121: iconst_5
122: ldc2_w        #31
125: dastore
126: astore        6
128: aconst_null
129: astore        7
131: new           #33
134: dup
135: aload         6
137: aload         7
139: iconst_1
140: invokespecial #34
143: astore        8
145: aload         8
147: invokevirtual #74
150: astore        9
152: aload         8
154: invokevirtual #74
157: astore        10
159: aload         8
161: invokevirtual #75
164: astore        11
166: new           #8
169: dup
170: ldc2_w        #9
173: ldc2_w        #11
176: ldc2_w        #13
179: dconst_1
180: ldc2_w        #13
183: invokespecial #15
186: astore        12
188: new           #16
191: dup
192: ldc2_w        #17
195: ldc2_w        #19
198: invokespecial #21
201: astore        13
203: aload         12
205: aload         13
207: invokevirtual #22
210: aload         12
212: invokevirtual #23
215: istore        14
217: aload         12
219: invokevirtual #23
222: istore        15
224: new           #24
227: dup
228: aload         12
230: invokespecial #25
233: astore        16
235: new           #8
238: dup
239: ldc2_w        #9
242: ldc2_w        #11
245: ldc2_w        #13
248: dconst_1
249: ldc2_w        #13
252: invokespecial #15
255: astore        17
257: new           #16
260: dup
261: ldc2_w        #17
264: ldc2_w        #19
267: invokespecial #21
270: astore        18
272: aload         17
274: aload         18
276: invokevirtual #22
279: aload         17
281: invokevirtual #23
284: istore        19
286: aload         17
288: invokevirtual #23
291: istore        20
293: new           #24
296: dup
297: aload         17
299: invokespecial #25
302: astore        21
304: aload         21
306: invokevirtual #52
309: aconst_null
310: astore        22
312: new           #8
315: dup
316: ldc2_w        #9
319: ldc2_w        #11
322: ldc2_w        #13
325: dconst_1
326: ldc2_w        #13
329: invokespecial #15
332: astore        23
334: new           #16
337: dup
338: ldc2_w        #17
341: ldc2_w        #19
344: invokespecial #21
347: astore        24
349: aload         23
351: aload         24
353: invokevirtual #22
356: aload         23
358: invokevirtual #23
361: istore        25
363: aload         23
365: invokevirtual #23
368: istore        26
370: aload         23
372: invokevirtual #53
375: istore        27
377: new           #24
380: dup
381: aload         23
383: invokespecial #25
386: astore        28
388: bipush        6
390: newarray       double
392: dup
393: iconst_0
394: ldc2_w        #27
397: dastore
398: dup
399: iconst_1
400: ldc2_w        #9
403: dastore
404: dup
405: iconst_2
406: ldc2_w        #13
409: dastore
410: dup
411: iconst_3
412: ldc2_w        #29
415: dastore
416: dup
417: iconst_4
418: ldc2_w        #17
421: dastore
422: dup
423: iconst_5
424: ldc2_w        #31
427: dastore
428: astore        29
430: aconst_null
431: astore        30
433: new           #33
436: dup
437: aload         29
439: aload         30
441: iconst_1
442: invokespecial #34
445: astore        31
447: aload         28
449: aload         29
451: invokevirtual #54
454: astore        32
456: aload         21
458: aload         22
460: aload         32
462: invokevirtual #55
465: astore        33
467: aload         16
469: aload         32
471: invokevirtual #54
474: astore        34
476: new           #33
479: dup
480: aload         11
482: aload         32
484: iconst_0
485: invokespecial #34
488: astore        35
490: aload         5
492: aload         11
494: invokevirtual #54
497: astore        36
499: new           #39
502: dup
503: invokespecial #40
506: ldc           #41
508: invokevirtual #42
511: iload_3
512: invokevirtual #43
515: ldc           #44
517: invokevirtual #42
520: iconst_0
521: invokevirtual #43
524: ldc           #41
526: invokevirtual #42
529: invokevirtual #45
532: iload_3
533: ifne          540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #46
544: new           #39
547: dup
548: invokespecial #40
551: ldc           #41
553: invokevirtual #42
556: iload         4
558: invokevirtual #43
561: ldc           #44
563: invokevirtual #42
566: iconst_0
567: invokevirtual #43
570: ldc           #41
572: invokevirtual #42
575: invokevirtual #45
578: iload         4
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #46
591: aload         6
593: invokestatic  #47
596: aload         6
598: invokestatic  #48
601: ldc           #49
603: invokestatic  #50
606: aload         9
608: invokestatic  #76
611: aload         10
613: invokestatic  #76
616: aload         11
618: invokestatic  #47
621: aload         11
623: invokestatic  #48
626: ldc           #49
628: invokestatic  #50
631: new           #39
634: dup
635: invokespecial #40
638: ldc           #41
640: invokevirtual #42
643: iload         14
645: invokevirtual #43
648: ldc           #44
650: invokevirtual #42
653: iconst_0
654: invokevirtual #43
657: ldc           #41
659: invokevirtual #42
662: invokevirtual #45
665: iload         14
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #46
678: new           #39
681: dup
682: invokespecial #40
685: ldc           #41
687: invokevirtual #42
690: iload         15
692: invokevirtual #43
695: ldc           #44
697: invokevirtual #42
700: iconst_0
701: invokevirtual #43
704: ldc           #41
706: invokevirtual #42
709: invokevirtual #45
712: iload         15
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #46
725: new           #39
728: dup
729: invokespecial #40
732: ldc           #41
734: invokevirtual #42
737: iload         19
739: invokevirtual #43
742: ldc           #44
744: invokevirtual #42
747: iconst_0
748: invokevirtual #43
751: ldc           #41
753: invokevirtual #42
756: invokevirtual #45
759: iload         19
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #46
772: new           #39
775: dup
776: invokespecial #40
779: ldc           #41
781: invokevirtual #42
784: iload         20
786: invokevirtual #43
789: ldc           #44
791: invokevirtual #42
794: iconst_0
795: invokevirtual #43
798: ldc           #41
800: invokevirtual #42
803: invokevirtual #45
806: iload         20
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #46
819: new           #39
822: dup
823: invokespecial #40
826: ldc           #41
828: invokevirtual #42
831: iload         25
833: invokevirtual #43
836: ldc           #44
838: invokevirtual #42
841: iconst_0
842: invokevirtual #43
845: ldc           #41
847: invokevirtual #42
850: invokevirtual #45
853: iload         25
855: ifne          862
858: iconst_1
859: goto          863
862: iconst_0
863: invokestatic  #46
866: new           #39
869: dup
870: invokespecial #40
873: ldc           #41
875: invokevirtual #42
878: iload         26
880: invokevirtual #43
883: ldc           #44
885: invokevirtual #42
888: iconst_0
889: invokevirtual #43
892: ldc           #41
894: invokevirtual #42
897: invokevirtual #45
900: iload         26
902: ifne          909
905: iconst_1
906: goto          910
909: iconst_0
910: invokestatic  #46
913: new           #39
916: dup
917: invokespecial #40
920: ldc           #41
922: invokevirtual #42
925: iload         27
927: invokevirtual #43
930: ldc           #44
932: invokevirtual #42
935: iconst_0
936: invokevirtual #43
939: ldc           #41
941: invokevirtual #42
944: invokevirtual #45
947: iload         27
949: ifne          956
952: iconst_1
953: goto          957
956: iconst_0
957: invokestatic  #46
960: aload         29
962: invokestatic  #47
965: aload         29
967: invokestatic  #48
970: ldc           #49
972: invokestatic  #50
975: aload         32
977: invokestatic  #47
980: aload         32
982: invokestatic  #48
985: ldc           #49
987: invokestatic  #50
990: aload         33
992: invokestatic  #47
995: aload         33
997: invokestatic  #48
1000: ldc           #49
1002: invokestatic  #50
1005: aload         34
1007: invokestatic  #47
1010: aload         34
1012: invokestatic  #48
1015: ldc           #49
1017: invokestatic  #50
1020: aload         36
1022: invokestatic  #47
1025: aload         36
1027: invokestatic  #48
1030: ldc           #49
1032: invokestatic  #50
1035: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 4770
End line: 4815
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.addObservedPoint((double) 35.0f, 74.20321057778874d, (-0.43501325177952693d));
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric17 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        double[] doubleArray24 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray25 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair27 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray25, true);
        double[] doubleArray28 = vectorialPointValuePair27.getValue();
        double[] doubleArray29 = vectorialPointValuePair27.getValue();
        double[] doubleArray30 = vectorialPointValuePair27.getPoint();
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = vectorialPointValuePair40.getValue();
        double[] doubleArray42 = vectorialPointValuePair40.getValue();
        double[] doubleArray43 = vectorialPointValuePair40.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair45 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray30, doubleArray43, false);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = gaussianFitter12.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric17, doubleArray30);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: ldc2_w        #17
91: ldc2_w        #334
94: ldc2_w        #336
97: invokevirtual #98
100: new           #117
103: dup
104: invokespecial #118
107: astore        6
109: bipush        6
111: newarray       double
113: dup
114: iconst_0
115: ldc2_w        #27
118: dastore
119: dup
120: iconst_1
121: ldc2_w        #9
124: dastore
125: dup
126: iconst_2
127: ldc2_w        #13
130: dastore
131: dup
132: iconst_3
133: ldc2_w        #29
136: dastore
137: dup
138: iconst_4
139: ldc2_w        #17
142: dastore
143: dup
144: iconst_5
145: ldc2_w        #31
148: dastore
149: astore        7
151: aconst_null
152: astore        8
154: new           #33
157: dup
158: aload         7
160: aload         8
162: iconst_1
163: invokespecial #34
166: astore        9
168: aload         9
170: invokevirtual #74
173: astore        10
175: aload         9
177: invokevirtual #74
180: astore        11
182: aload         9
184: invokevirtual #75
187: astore        12
189: bipush        6
191: newarray       double
193: dup
194: iconst_0
195: ldc2_w        #27
198: dastore
199: dup
200: iconst_1
201: ldc2_w        #9
204: dastore
205: dup
206: iconst_2
207: ldc2_w        #13
210: dastore
211: dup
212: iconst_3
213: ldc2_w        #29
216: dastore
217: dup
218: iconst_4
219: ldc2_w        #17
222: dastore
223: dup
224: iconst_5
225: ldc2_w        #31
228: dastore
229: astore        13
231: aconst_null
232: astore        14
234: new           #33
237: dup
238: aload         13
240: aload         14
242: iconst_1
243: invokespecial #34
246: astore        15
248: aload         15
250: invokevirtual #74
253: astore        16
255: aload         15
257: invokevirtual #74
260: astore        17
262: aload         15
264: invokevirtual #75
267: astore        18
269: new           #33
272: dup
273: aload         12
275: aload         18
277: iconst_0
278: invokespecial #34
281: astore        19
283: aload         5
285: aload         6
287: aload         12
289: invokevirtual #55
292: astore        20
294: ldc           #124
296: invokestatic  #37
299: goto          304
302: astore        20
304: new           #39
307: dup
308: invokespecial #40
311: ldc           #41
313: invokevirtual #42
316: iload_3
317: invokevirtual #43
320: ldc           #44
322: invokevirtual #42
325: iconst_0
326: invokevirtual #43
329: ldc           #41
331: invokevirtual #42
334: invokevirtual #45
337: iload_3
338: ifne          345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #46
349: new           #39
352: dup
353: invokespecial #40
356: ldc           #41
358: invokevirtual #42
361: iload         4
363: invokevirtual #43
366: ldc           #44
368: invokevirtual #42
371: iconst_0
372: invokevirtual #43
375: ldc           #41
377: invokevirtual #42
380: invokevirtual #45
383: iload         4
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #46
396: aload         7
398: invokestatic  #47
401: aload         7
403: invokestatic  #48
406: ldc           #49
408: invokestatic  #50
411: aload         10
413: invokestatic  #76
416: aload         11
418: invokestatic  #76
421: aload         12
423: invokestatic  #47
426: aload         12
428: invokestatic  #48
431: ldc           #49
433: invokestatic  #50
436: aload         13
438: invokestatic  #47
441: aload         13
443: invokestatic  #48
446: ldc           #49
448: invokestatic  #50
451: aload         16
453: invokestatic  #76
456: aload         17
458: invokestatic  #76
461: aload         18
463: invokestatic  #47
466: aload         18
468: invokestatic  #48
471: ldc           #49
473: invokestatic  #50
476: return
Exception table:
from    to  target type
283   299   302   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 4818
End line: 4898
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer46.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker49);
        int int51 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int52 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter53 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer46);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer59 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker62 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer59.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker62);
        int int64 = levenbergMarquardtOptimizer59.getMaxEvaluations();
        int int65 = levenbergMarquardtOptimizer59.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter66 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer59);
        gaussianFitter66.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction68 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer74 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker77 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer74.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker77);
        int int79 = levenbergMarquardtOptimizer74.getMaxEvaluations();
        int int80 = levenbergMarquardtOptimizer74.getMaxEvaluations();
        int int81 = levenbergMarquardtOptimizer74.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter82 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer74);
        double[] doubleArray89 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray90 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair92 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray89, doubleArray90, true);
        double[] doubleArray93 = gaussianFitter82.fit(doubleArray89);
        double[] doubleArray94 = gaussianFitter66.fit(parametricUnivariateRealFunction68, doubleArray93);
        double[] doubleArray95 = gaussianFitter53.fit(doubleArray93);
        double[] doubleArray96 = gaussianFitter12.fit(doubleArray93);
        gaussianFitter12.clearObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #52
91: aconst_null
92: astore        6
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        7
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        8
131: aload         7
133: aload         8
135: invokevirtual #22
138: aload         7
140: invokevirtual #23
143: istore        9
145: aload         7
147: invokevirtual #23
150: istore        10
152: aload         7
154: invokevirtual #53
157: istore        11
159: new           #24
162: dup
163: aload         7
165: invokespecial #25
168: astore        12
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        13
212: aconst_null
213: astore        14
215: new           #33
218: dup
219: aload         13
221: aload         14
223: iconst_1
224: invokespecial #34
227: astore        15
229: aload         12
231: aload         13
233: invokevirtual #54
236: astore        16
238: aload         5
240: aload         6
242: aload         16
244: invokevirtual #55
247: astore        17
249: new           #8
252: dup
253: ldc2_w        #9
256: ldc2_w        #11
259: ldc2_w        #13
262: dconst_1
263: ldc2_w        #13
266: invokespecial #15
269: astore        18
271: new           #16
274: dup
275: ldc2_w        #17
278: ldc2_w        #19
281: invokespecial #21
284: astore        19
286: aload         18
288: aload         19
290: invokevirtual #22
293: aload         18
295: invokevirtual #23
298: istore        20
300: aload         18
302: invokevirtual #23
305: istore        21
307: new           #24
310: dup
311: aload         18
313: invokespecial #25
316: astore        22
318: new           #8
321: dup
322: ldc2_w        #9
325: ldc2_w        #11
328: ldc2_w        #13
331: dconst_1
332: ldc2_w        #13
335: invokespecial #15
338: astore        23
340: new           #16
343: dup
344: ldc2_w        #17
347: ldc2_w        #19
350: invokespecial #21
353: astore        24
355: aload         23
357: aload         24
359: invokevirtual #22
362: aload         23
364: invokevirtual #23
367: istore        25
369: aload         23
371: invokevirtual #23
374: istore        26
376: new           #24
379: dup
380: aload         23
382: invokespecial #25
385: astore        27
387: aload         27
389: invokevirtual #52
392: aconst_null
393: astore        28
395: new           #8
398: dup
399: ldc2_w        #9
402: ldc2_w        #11
405: ldc2_w        #13
408: dconst_1
409: ldc2_w        #13
412: invokespecial #15
415: astore        29
417: new           #16
420: dup
421: ldc2_w        #17
424: ldc2_w        #19
427: invokespecial #21
430: astore        30
432: aload         29
434: aload         30
436: invokevirtual #22
439: aload         29
441: invokevirtual #23
444: istore        31
446: aload         29
448: invokevirtual #23
451: istore        32
453: aload         29
455: invokevirtual #53
458: istore        33
460: new           #24
463: dup
464: aload         29
466: invokespecial #25
469: astore        34
471: bipush        6
473: newarray       double
475: dup
476: iconst_0
477: ldc2_w        #27
480: dastore
481: dup
482: iconst_1
483: ldc2_w        #9
486: dastore
487: dup
488: iconst_2
489: ldc2_w        #13
492: dastore
493: dup
494: iconst_3
495: ldc2_w        #29
498: dastore
499: dup
500: iconst_4
501: ldc2_w        #17
504: dastore
505: dup
506: iconst_5
507: ldc2_w        #31
510: dastore
511: astore        35
513: aconst_null
514: astore        36
516: new           #33
519: dup
520: aload         35
522: aload         36
524: iconst_1
525: invokespecial #34
528: astore        37
530: aload         34
532: aload         35
534: invokevirtual #54
537: astore        38
539: aload         27
541: aload         28
543: aload         38
545: invokevirtual #55
548: astore        39
550: aload         22
552: aload         38
554: invokevirtual #54
557: astore        40
559: aload         5
561: aload         38
563: invokevirtual #54
566: astore        41
568: aload         5
570: invokevirtual #52
573: new           #39
576: dup
577: invokespecial #40
580: ldc           #41
582: invokevirtual #42
585: iload_3
586: invokevirtual #43
589: ldc           #44
591: invokevirtual #42
594: iconst_0
595: invokevirtual #43
598: ldc           #41
600: invokevirtual #42
603: invokevirtual #45
606: iload_3
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #46
618: new           #39
621: dup
622: invokespecial #40
625: ldc           #41
627: invokevirtual #42
630: iload         4
632: invokevirtual #43
635: ldc           #44
637: invokevirtual #42
640: iconst_0
641: invokevirtual #43
644: ldc           #41
646: invokevirtual #42
649: invokevirtual #45
652: iload         4
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #46
665: new           #39
668: dup
669: invokespecial #40
672: ldc           #41
674: invokevirtual #42
677: iload         9
679: invokevirtual #43
682: ldc           #44
684: invokevirtual #42
687: iconst_0
688: invokevirtual #43
691: ldc           #41
693: invokevirtual #42
696: invokevirtual #45
699: iload         9
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #46
712: new           #39
715: dup
716: invokespecial #40
719: ldc           #41
721: invokevirtual #42
724: iload         10
726: invokevirtual #43
729: ldc           #44
731: invokevirtual #42
734: iconst_0
735: invokevirtual #43
738: ldc           #41
740: invokevirtual #42
743: invokevirtual #45
746: iload         10
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #46
759: new           #39
762: dup
763: invokespecial #40
766: ldc           #41
768: invokevirtual #42
771: iload         11
773: invokevirtual #43
776: ldc           #44
778: invokevirtual #42
781: iconst_0
782: invokevirtual #43
785: ldc           #41
787: invokevirtual #42
790: invokevirtual #45
793: iload         11
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #46
806: aload         13
808: invokestatic  #47
811: aload         13
813: invokestatic  #48
816: ldc           #49
818: invokestatic  #50
821: aload         16
823: invokestatic  #47
826: aload         16
828: invokestatic  #48
831: ldc           #49
833: invokestatic  #50
836: aload         17
838: invokestatic  #47
841: aload         17
843: invokestatic  #48
846: ldc           #49
848: invokestatic  #50
851: new           #39
854: dup
855: invokespecial #40
858: ldc           #41
860: invokevirtual #42
863: iload         20
865: invokevirtual #43
868: ldc           #44
870: invokevirtual #42
873: iconst_0
874: invokevirtual #43
877: ldc           #41
879: invokevirtual #42
882: invokevirtual #45
885: iload         20
887: ifne          894
890: iconst_1
891: goto          895
894: iconst_0
895: invokestatic  #46
898: new           #39
901: dup
902: invokespecial #40
905: ldc           #41
907: invokevirtual #42
910: iload         21
912: invokevirtual #43
915: ldc           #44
917: invokevirtual #42
920: iconst_0
921: invokevirtual #43
924: ldc           #41
926: invokevirtual #42
929: invokevirtual #45
932: iload         21
934: ifne          941
937: iconst_1
938: goto          942
941: iconst_0
942: invokestatic  #46
945: new           #39
948: dup
949: invokespecial #40
952: ldc           #41
954: invokevirtual #42
957: iload         25
959: invokevirtual #43
962: ldc           #44
964: invokevirtual #42
967: iconst_0
968: invokevirtual #43
971: ldc           #41
973: invokevirtual #42
976: invokevirtual #45
979: iload         25
981: ifne          988
984: iconst_1
985: goto          989
988: iconst_0
989: invokestatic  #46
992: new           #39
995: dup
996: invokespecial #40
999: ldc           #41
1001: invokevirtual #42
1004: iload         26
1006: invokevirtual #43
1009: ldc           #44
1011: invokevirtual #42
1014: iconst_0
1015: invokevirtual #43
1018: ldc           #41
1020: invokevirtual #42
1023: invokevirtual #45
1026: iload         26
1028: ifne          1035
1031: iconst_1
1032: goto          1036
1035: iconst_0
1036: invokestatic  #46
1039: new           #39
1042: dup
1043: invokespecial #40
1046: ldc           #41
1048: invokevirtual #42
1051: iload         31
1053: invokevirtual #43
1056: ldc           #44
1058: invokevirtual #42
1061: iconst_0
1062: invokevirtual #43
1065: ldc           #41
1067: invokevirtual #42
1070: invokevirtual #45
1073: iload         31
1075: ifne          1082
1078: iconst_1
1079: goto          1083
1082: iconst_0
1083: invokestatic  #46
1086: new           #39
1089: dup
1090: invokespecial #40
1093: ldc           #41
1095: invokevirtual #42
1098: iload         32
1100: invokevirtual #43
1103: ldc           #44
1105: invokevirtual #42
1108: iconst_0
1109: invokevirtual #43
1112: ldc           #41
1114: invokevirtual #42
1117: invokevirtual #45
1120: iload         32
1122: ifne          1129
1125: iconst_1
1126: goto          1130
1129: iconst_0
1130: invokestatic  #46
1133: new           #39
1136: dup
1137: invokespecial #40
1140: ldc           #41
1142: invokevirtual #42
1145: iload         33
1147: invokevirtual #43
1150: ldc           #44
1152: invokevirtual #42
1155: iconst_0
1156: invokevirtual #43
1159: ldc           #41
1161: invokevirtual #42
1164: invokevirtual #45
1167: iload         33
1169: ifne          1176
1172: iconst_1
1173: goto          1177
1176: iconst_0
1177: invokestatic  #46
1180: aload         35
1182: invokestatic  #47
1185: aload         35
1187: invokestatic  #48
1190: ldc           #49
1192: invokestatic  #50
1195: aload         38
1197: invokestatic  #47
1200: aload         38
1202: invokestatic  #48
1205: ldc           #49
1207: invokestatic  #50
1210: aload         39
1212: invokestatic  #47
1215: aload         39
1217: invokestatic  #48
1220: ldc           #49
1222: invokestatic  #50
1225: aload         40
1227: invokestatic  #47
1230: aload         40
1232: invokestatic  #48
1235: ldc           #49
1237: invokestatic  #50
1240: aload         41
1242: invokestatic  #47
1245: aload         41
1247: invokestatic  #48
1250: ldc           #49
1252: invokestatic  #50
1255: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 4901
End line: 4917
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker11 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        double double12 = levenbergMarquardtOptimizer5.getRMS();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter13.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray15 = gaussianFitter13.getObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(weightedObservedPointArray15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #339
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #73
74: astore        4
76: aload_1
77: invokevirtual #201
80: dstore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        7
92: aload         7
94: invokevirtual #52
97: aload         7
99: invokevirtual #62
102: astore        8
104: new           #39
107: dup
108: invokespecial #40
111: ldc           #41
113: invokevirtual #42
116: iload_3
117: invokevirtual #43
120: ldc           #44
122: invokevirtual #42
125: iconst_0
126: invokevirtual #43
129: ldc           #41
131: invokevirtual #42
134: invokevirtual #45
137: iload_3
138: ifne          145
141: iconst_1
142: goto          146
145: iconst_0
146: invokestatic  #46
149: aload         4
151: invokestatic  #47
154: dload         5
156: invokestatic  #202
159: invokestatic  #203
162: aload         8
164: invokestatic  #47
167: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 4920
End line: 4946
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double17 = simpleVectorialValueChecker16.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker16);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter19 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker20 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter21 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker22 = null;
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker22);
        int int24 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #340
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #16
91: dup
92: ldc2_w        #17
95: ldc2_w        #19
98: invokespecial #21
101: astore        8
103: aload         8
105: invokevirtual #88
108: dstore        9
110: aload_1
111: aload         8
113: invokevirtual #22
116: new           #24
119: dup
120: aload_1
121: invokespecial #25
124: astore        11
126: aload_1
127: invokevirtual #73
130: astore        12
132: new           #24
135: dup
136: aload_1
137: invokespecial #25
140: astore        13
142: aconst_null
143: astore        14
145: aload_1
146: aload         14
148: invokevirtual #22
151: aload_1
152: invokevirtual #23
155: istore        15
157: new           #39
160: dup
161: invokespecial #40
164: ldc           #41
166: invokevirtual #42
169: iload_3
170: invokevirtual #43
173: ldc           #44
175: invokevirtual #42
178: iconst_0
179: invokevirtual #43
182: ldc           #41
184: invokevirtual #42
187: invokevirtual #45
190: iload_3
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #46
202: new           #39
205: dup
206: invokespecial #40
209: ldc           #41
211: invokevirtual #42
214: iload         4
216: invokevirtual #43
219: ldc           #44
221: invokevirtual #42
224: iconst_0
225: invokevirtual #43
228: ldc           #41
230: invokevirtual #42
233: invokevirtual #45
236: iload         4
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #46
249: new           #39
252: dup
253: invokespecial #40
256: ldc           #41
258: invokevirtual #42
261: dload         5
263: invokevirtual #59
266: ldc           #44
268: invokevirtual #42
271: dconst_0
272: invokevirtual #59
275: ldc           #41
277: invokevirtual #42
280: invokevirtual #45
283: dload         5
285: dconst_0
286: dcmpl
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #46
298: new           #39
301: dup
302: invokespecial #40
305: ldc           #41
307: invokevirtual #42
310: iload         7
312: invokevirtual #43
315: ldc           #44
317: invokevirtual #42
320: iconst_0
321: invokevirtual #43
324: ldc           #41
326: invokevirtual #42
329: invokevirtual #45
332: iload         7
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #46
345: new           #39
348: dup
349: invokespecial #40
352: ldc           #41
354: invokevirtual #42
357: dload         9
359: invokevirtual #59
362: ldc           #44
364: invokevirtual #42
367: ldc2_w        #17
370: invokevirtual #59
373: ldc           #41
375: invokevirtual #42
378: invokevirtual #45
381: dload         9
383: ldc2_w        #17
386: dcmpl
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #46
398: aload         12
400: invokestatic  #47
403: new           #39
406: dup
407: invokespecial #40
410: ldc           #41
412: invokevirtual #42
415: iload         15
417: invokevirtual #43
420: ldc           #44
422: invokevirtual #42
425: iconst_0
426: invokevirtual #43
429: ldc           #41
431: invokevirtual #42
434: invokevirtual #45
437: iload         15
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #46
450: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 4949
End line: 5010
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        double double27 = levenbergMarquardtOptimizer20.getChiSquare();
        int int28 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter29 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric30 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer36 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker39 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer36.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker39);
        int int41 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer36.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter44 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer36);
        double[] doubleArray51 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray52 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray52, true);
        double[] doubleArray55 = gaussianFitter44.fit(doubleArray51);
        double[] doubleArray56 = curveFitter29.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray55);
        double[] doubleArray63 = new double[] { 3.1415926535897936d, (-0.9923172082775625d), 0.207879576290261d, 0.49321676688550387d, 4.248699152289463d, 3.4741259760439713d };
        double[] doubleArray64 = gaussianFitter12.fit(97, (org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray63);
        double[] doubleArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double67 = parametric30.value((double) 5.3687091E8f, doubleArray66);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #341
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: new           #8
96: dup
97: ldc2_w        #9
100: ldc2_w        #11
103: ldc2_w        #13
106: dconst_1
107: ldc2_w        #13
110: invokespecial #15
113: astore        7
115: new           #16
118: dup
119: ldc2_w        #17
122: ldc2_w        #19
125: invokespecial #21
128: astore        8
130: aload         7
132: aload         8
134: invokevirtual #22
137: aload         7
139: invokevirtual #23
142: istore        9
144: aload         7
146: invokevirtual #23
149: istore        10
151: aload         7
153: invokevirtual #58
156: dstore        11
158: aload         7
160: invokevirtual #23
163: istore        13
165: new           #67
168: dup
169: aload         7
171: invokespecial #68
174: astore        14
176: new           #117
179: dup
180: invokespecial #118
183: astore        15
185: new           #8
188: dup
189: ldc2_w        #9
192: ldc2_w        #11
195: ldc2_w        #13
198: dconst_1
199: ldc2_w        #13
202: invokespecial #15
205: astore        16
207: new           #16
210: dup
211: ldc2_w        #17
214: ldc2_w        #19
217: invokespecial #21
220: astore        17
222: aload         16
224: aload         17
226: invokevirtual #22
229: aload         16
231: invokevirtual #23
234: istore        18
236: aload         16
238: invokevirtual #23
241: istore        19
243: aload         16
245: invokevirtual #53
248: istore        20
250: new           #24
253: dup
254: aload         16
256: invokespecial #25
259: astore        21
261: bipush        6
263: newarray       double
265: dup
266: iconst_0
267: ldc2_w        #27
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #9
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #13
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #29
288: dastore
289: dup
290: iconst_4
291: ldc2_w        #17
294: dastore
295: dup
296: iconst_5
297: ldc2_w        #31
300: dastore
301: astore        22
303: aconst_null
304: astore        23
306: new           #33
309: dup
310: aload         22
312: aload         23
314: iconst_1
315: invokespecial #34
318: astore        24
320: aload         21
322: aload         22
324: invokevirtual #54
327: astore        25
329: aload         14
331: aload         15
333: aload         25
335: invokevirtual #89
338: astore        26
340: bipush        6
342: newarray       double
344: dup
345: iconst_0
346: ldc2_w        #162
349: dastore
350: dup
351: iconst_1
352: ldc2_w        #94
355: dastore
356: dup
357: iconst_2
358: ldc2_w        #164
361: dastore
362: dup
363: iconst_3
364: ldc2_w        #166
367: dastore
368: dup
369: iconst_4
370: ldc2_w        #136
373: dastore
374: dup
375: iconst_5
376: ldc2_w        #168
379: dastore
380: astore        27
382: aload         5
384: bipush        97
386: aload         15
388: aload         27
390: invokevirtual #35
393: astore        28
395: aconst_null
396: astore        29
398: aload         15
400: ldc2_w        #342
403: aload         29
405: invokevirtual #123
408: dstore        30
410: ldc           #120
412: invokestatic  #37
415: goto          420
418: astore        30
420: new           #39
423: dup
424: invokespecial #40
427: ldc           #41
429: invokevirtual #42
432: iload_3
433: invokevirtual #43
436: ldc           #44
438: invokevirtual #42
441: iconst_0
442: invokevirtual #43
445: ldc           #41
447: invokevirtual #42
450: invokevirtual #45
453: iload_3
454: ifne          461
457: iconst_1
458: goto          462
461: iconst_0
462: invokestatic  #46
465: new           #39
468: dup
469: invokespecial #40
472: ldc           #41
474: invokevirtual #42
477: iload         4
479: invokevirtual #43
482: ldc           #44
484: invokevirtual #42
487: iconst_0
488: invokevirtual #43
491: ldc           #41
493: invokevirtual #42
496: invokevirtual #45
499: iload         4
501: ifne          508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #46
512: aload         6
514: invokestatic  #47
517: new           #39
520: dup
521: invokespecial #40
524: ldc           #41
526: invokevirtual #42
529: iload         9
531: invokevirtual #43
534: ldc           #44
536: invokevirtual #42
539: iconst_0
540: invokevirtual #43
543: ldc           #41
545: invokevirtual #42
548: invokevirtual #45
551: iload         9
553: ifne          560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #46
564: new           #39
567: dup
568: invokespecial #40
571: ldc           #41
573: invokevirtual #42
576: iload         10
578: invokevirtual #43
581: ldc           #44
583: invokevirtual #42
586: iconst_0
587: invokevirtual #43
590: ldc           #41
592: invokevirtual #42
595: invokevirtual #45
598: iload         10
600: ifne          607
603: iconst_1
604: goto          608
607: iconst_0
608: invokestatic  #46
611: new           #39
614: dup
615: invokespecial #40
618: ldc           #41
620: invokevirtual #42
623: dload         11
625: invokevirtual #59
628: ldc           #44
630: invokevirtual #42
633: dconst_0
634: invokevirtual #59
637: ldc           #41
639: invokevirtual #42
642: invokevirtual #45
645: dload         11
647: dconst_0
648: dcmpl
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #46
660: new           #39
663: dup
664: invokespecial #40
667: ldc           #41
669: invokevirtual #42
672: iload         13
674: invokevirtual #43
677: ldc           #44
679: invokevirtual #42
682: iconst_0
683: invokevirtual #43
686: ldc           #41
688: invokevirtual #42
691: invokevirtual #45
694: iload         13
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #46
707: new           #39
710: dup
711: invokespecial #40
714: ldc           #41
716: invokevirtual #42
719: iload         18
721: invokevirtual #43
724: ldc           #44
726: invokevirtual #42
729: iconst_0
730: invokevirtual #43
733: ldc           #41
735: invokevirtual #42
738: invokevirtual #45
741: iload         18
743: ifne          750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #46
754: new           #39
757: dup
758: invokespecial #40
761: ldc           #41
763: invokevirtual #42
766: iload         19
768: invokevirtual #43
771: ldc           #44
773: invokevirtual #42
776: iconst_0
777: invokevirtual #43
780: ldc           #41
782: invokevirtual #42
785: invokevirtual #45
788: iload         19
790: ifne          797
793: iconst_1
794: goto          798
797: iconst_0
798: invokestatic  #46
801: new           #39
804: dup
805: invokespecial #40
808: ldc           #41
810: invokevirtual #42
813: iload         20
815: invokevirtual #43
818: ldc           #44
820: invokevirtual #42
823: iconst_0
824: invokevirtual #43
827: ldc           #41
829: invokevirtual #42
832: invokevirtual #45
835: iload         20
837: ifne          844
840: iconst_1
841: goto          845
844: iconst_0
845: invokestatic  #46
848: aload         22
850: invokestatic  #47
853: aload         22
855: invokestatic  #48
858: ldc           #49
860: invokestatic  #50
863: aload         25
865: invokestatic  #47
868: aload         25
870: invokestatic  #48
873: ldc           #49
875: invokestatic  #50
878: aload         26
880: invokestatic  #47
883: aload         26
885: invokestatic  #48
888: ldc           #49
890: invokestatic  #50
893: aload         27
895: invokestatic  #47
898: aload         27
900: invokestatic  #48
903: ldc           #172
905: invokestatic  #50
908: aload         28
910: invokestatic  #47
913: aload         28
915: invokestatic  #48
918: ldc           #172
920: invokestatic  #50
923: return
Exception table:
from    to  target type
398   415   418   Class org/apache/commons/math/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 5013
End line: 5075
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter15.clearObservations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter30 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction31 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer37 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker40 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer37.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker40);
        int int42 = levenbergMarquardtOptimizer37.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer37.getMaxEvaluations();
        int int44 = levenbergMarquardtOptimizer37.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter45 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer37);
        double[] doubleArray52 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray53 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray53, true);
        double[] doubleArray56 = gaussianFitter45.fit(doubleArray52);
        double[] doubleArray57 = curveFitter30.fit(parametricUnivariateRealFunction31, doubleArray52);
        double[] doubleArray58 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray58);
        double[] doubleArray60 = vectorialPointValuePair59.getPointRef();
        double[] doubleArray61 = vectorialPointValuePair59.getPointRef();
        double[] doubleArray62 = gaussianFitter15.fit(doubleArray61);
        gaussianFitter15.addObservedPoint(0.49321676688550387d, 3200.0d, (double) 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #344
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #53
86: istore        7
88: aload_1
89: invokevirtual #58
92: dstore        8
94: new           #24
97: dup
98: aload_1
99: invokespecial #25
102: astore        10
104: aload         10
106: invokevirtual #52
109: new           #8
112: dup
113: ldc2_w        #9
116: ldc2_w        #11
119: ldc2_w        #13
122: dconst_1
123: ldc2_w        #13
126: invokespecial #15
129: astore        11
131: new           #16
134: dup
135: ldc2_w        #17
138: ldc2_w        #19
141: invokespecial #21
144: astore        12
146: aload         11
148: aload         12
150: invokevirtual #22
153: aload         11
155: invokevirtual #23
158: istore        13
160: aload         11
162: invokevirtual #23
165: istore        14
167: aload         11
169: invokevirtual #53
172: istore        15
174: new           #67
177: dup
178: aload         11
180: invokespecial #68
183: astore        16
185: aconst_null
186: astore        17
188: new           #8
191: dup
192: ldc2_w        #9
195: ldc2_w        #11
198: ldc2_w        #13
201: dconst_1
202: ldc2_w        #13
205: invokespecial #15
208: astore        18
210: new           #16
213: dup
214: ldc2_w        #17
217: ldc2_w        #19
220: invokespecial #21
223: astore        19
225: aload         18
227: aload         19
229: invokevirtual #22
232: aload         18
234: invokevirtual #23
237: istore        20
239: aload         18
241: invokevirtual #23
244: istore        21
246: aload         18
248: invokevirtual #53
251: istore        22
253: new           #24
256: dup
257: aload         18
259: invokespecial #25
262: astore        23
264: bipush        6
266: newarray       double
268: dup
269: iconst_0
270: ldc2_w        #27
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #9
279: dastore
280: dup
281: iconst_2
282: ldc2_w        #13
285: dastore
286: dup
287: iconst_3
288: ldc2_w        #29
291: dastore
292: dup
293: iconst_4
294: ldc2_w        #17
297: dastore
298: dup
299: iconst_5
300: ldc2_w        #31
303: dastore
304: astore        24
306: aconst_null
307: astore        25
309: new           #33
312: dup
313: aload         24
315: aload         25
317: iconst_1
318: invokespecial #34
321: astore        26
323: aload         23
325: aload         24
327: invokevirtual #54
330: astore        27
332: aload         16
334: aload         17
336: aload         24
338: invokevirtual #89
341: astore        28
343: aconst_null
344: astore        29
346: new           #33
349: dup
350: aload         24
352: aload         29
354: invokespecial #109
357: astore        30
359: aload         30
361: invokevirtual #151
364: astore        31
366: aload         30
368: invokevirtual #151
371: astore        32
373: aload         10
375: aload         32
377: invokevirtual #54
380: astore        33
382: aload         10
384: ldc2_w        #166
387: ldc2_w        #345
390: dconst_0
391: invokevirtual #98
394: new           #39
397: dup
398: invokespecial #40
401: ldc           #41
403: invokevirtual #42
406: iload_3
407: invokevirtual #43
410: ldc           #44
412: invokevirtual #42
415: iconst_0
416: invokevirtual #43
419: ldc           #41
421: invokevirtual #42
424: invokevirtual #45
427: iload_3
428: ifne          435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #46
439: new           #39
442: dup
443: invokespecial #40
446: ldc           #41
448: invokevirtual #42
451: iload         4
453: invokevirtual #43
456: ldc           #44
458: invokevirtual #42
461: iconst_0
462: invokevirtual #43
465: ldc           #41
467: invokevirtual #42
470: invokevirtual #45
473: iload         4
475: ifne          482
478: iconst_1
479: goto          483
482: iconst_0
483: invokestatic  #46
486: new           #39
489: dup
490: invokespecial #40
493: ldc           #41
495: invokevirtual #42
498: dload         5
500: invokevirtual #59
503: ldc           #44
505: invokevirtual #42
508: dconst_0
509: invokevirtual #59
512: ldc           #41
514: invokevirtual #42
517: invokevirtual #45
520: dload         5
522: dconst_0
523: dcmpl
524: ifne          531
527: iconst_1
528: goto          532
531: iconst_0
532: invokestatic  #46
535: new           #39
538: dup
539: invokespecial #40
542: ldc           #41
544: invokevirtual #42
547: iload         7
549: invokevirtual #43
552: ldc           #44
554: invokevirtual #42
557: iconst_0
558: invokevirtual #43
561: ldc           #41
563: invokevirtual #42
566: invokevirtual #45
569: iload         7
571: ifne          578
574: iconst_1
575: goto          579
578: iconst_0
579: invokestatic  #46
582: new           #39
585: dup
586: invokespecial #40
589: ldc           #41
591: invokevirtual #42
594: dload         8
596: invokevirtual #59
599: ldc           #44
601: invokevirtual #42
604: dconst_0
605: invokevirtual #59
608: ldc           #41
610: invokevirtual #42
613: invokevirtual #45
616: dload         8
618: dconst_0
619: dcmpl
620: ifne          627
623: iconst_1
624: goto          628
627: iconst_0
628: invokestatic  #46
631: new           #39
634: dup
635: invokespecial #40
638: ldc           #41
640: invokevirtual #42
643: iload         13
645: invokevirtual #43
648: ldc           #44
650: invokevirtual #42
653: iconst_0
654: invokevirtual #43
657: ldc           #41
659: invokevirtual #42
662: invokevirtual #45
665: iload         13
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #46
678: new           #39
681: dup
682: invokespecial #40
685: ldc           #41
687: invokevirtual #42
690: iload         14
692: invokevirtual #43
695: ldc           #44
697: invokevirtual #42
700: iconst_0
701: invokevirtual #43
704: ldc           #41
706: invokevirtual #42
709: invokevirtual #45
712: iload         14
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #46
725: new           #39
728: dup
729: invokespecial #40
732: ldc           #41
734: invokevirtual #42
737: iload         15
739: invokevirtual #43
742: ldc           #44
744: invokevirtual #42
747: iconst_0
748: invokevirtual #43
751: ldc           #41
753: invokevirtual #42
756: invokevirtual #45
759: iload         15
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #46
772: new           #39
775: dup
776: invokespecial #40
779: ldc           #41
781: invokevirtual #42
784: iload         20
786: invokevirtual #43
789: ldc           #44
791: invokevirtual #42
794: iconst_0
795: invokevirtual #43
798: ldc           #41
800: invokevirtual #42
803: invokevirtual #45
806: iload         20
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #46
819: new           #39
822: dup
823: invokespecial #40
826: ldc           #41
828: invokevirtual #42
831: iload         21
833: invokevirtual #43
836: ldc           #44
838: invokevirtual #42
841: iconst_0
842: invokevirtual #43
845: ldc           #41
847: invokevirtual #42
850: invokevirtual #45
853: iload         21
855: ifne          862
858: iconst_1
859: goto          863
862: iconst_0
863: invokestatic  #46
866: new           #39
869: dup
870: invokespecial #40
873: ldc           #41
875: invokevirtual #42
878: iload         22
880: invokevirtual #43
883: ldc           #44
885: invokevirtual #42
888: iconst_0
889: invokevirtual #43
892: ldc           #41
894: invokevirtual #42
897: invokevirtual #45
900: iload         22
902: ifne          909
905: iconst_1
906: goto          910
909: iconst_0
910: invokestatic  #46
913: aload         24
915: invokestatic  #47
918: aload         24
920: invokestatic  #48
923: ldc           #49
925: invokestatic  #50
928: aload         27
930: invokestatic  #47
933: aload         27
935: invokestatic  #48
938: ldc           #49
940: invokestatic  #50
943: aload         28
945: invokestatic  #47
948: aload         28
950: invokestatic  #48
953: ldc           #49
955: invokestatic  #50
958: aload         31
960: invokestatic  #47
963: aload         31
965: invokestatic  #48
968: ldc           #49
970: invokestatic  #50
973: aload         32
975: invokestatic  #47
978: aload         32
980: invokestatic  #48
983: ldc           #49
985: invokestatic  #50
988: aload         33
990: invokestatic  #47
993: aload         33
995: invokestatic  #48
998: ldc           #49
1000: invokestatic  #50
1003: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 5078
End line: 5121
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = vectorialPointValuePair23.getValue();
        double[] doubleArray25 = vectorialPointValuePair23.getValue();
        double[] doubleArray26 = vectorialPointValuePair23.getPoint();
        double[] doubleArray33 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray34 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray34, true);
        double[] doubleArray37 = vectorialPointValuePair36.getValue();
        double[] doubleArray38 = vectorialPointValuePair36.getValue();
        double[] doubleArray39 = vectorialPointValuePair36.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair41 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray26, doubleArray39, false);
        double[] doubleArray42 = gaussianFitter12.fit(doubleArray26);
        gaussianFitter12.addObservedPoint(0.0d, 5.267884728309446d);
        gaussianFitter12.addObservedPoint(3.637978807091713E-12d, 9.53674316406539E-7d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #347
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: bipush        6
95: newarray       double
97: dup
98: iconst_0
99: ldc2_w        #27
102: dastore
103: dup
104: iconst_1
105: ldc2_w        #9
108: dastore
109: dup
110: iconst_2
111: ldc2_w        #13
114: dastore
115: dup
116: iconst_3
117: ldc2_w        #29
120: dastore
121: dup
122: iconst_4
123: ldc2_w        #17
126: dastore
127: dup
128: iconst_5
129: ldc2_w        #31
132: dastore
133: astore        7
135: aconst_null
136: astore        8
138: new           #33
141: dup
142: aload         7
144: aload         8
146: iconst_1
147: invokespecial #34
150: astore        9
152: aload         9
154: invokevirtual #74
157: astore        10
159: aload         9
161: invokevirtual #74
164: astore        11
166: aload         9
168: invokevirtual #75
171: astore        12
173: bipush        6
175: newarray       double
177: dup
178: iconst_0
179: ldc2_w        #27
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #9
188: dastore
189: dup
190: iconst_2
191: ldc2_w        #13
194: dastore
195: dup
196: iconst_3
197: ldc2_w        #29
200: dastore
201: dup
202: iconst_4
203: ldc2_w        #17
206: dastore
207: dup
208: iconst_5
209: ldc2_w        #31
212: dastore
213: astore        13
215: aconst_null
216: astore        14
218: new           #33
221: dup
222: aload         13
224: aload         14
226: iconst_1
227: invokespecial #34
230: astore        15
232: aload         15
234: invokevirtual #74
237: astore        16
239: aload         15
241: invokevirtual #74
244: astore        17
246: aload         15
248: invokevirtual #75
251: astore        18
253: new           #33
256: dup
257: aload         12
259: aload         18
261: iconst_0
262: invokespecial #34
265: astore        19
267: aload         5
269: aload         12
271: invokevirtual #54
274: astore        20
276: aload         5
278: dconst_0
279: ldc2_w        #348
282: invokevirtual #158
285: aload         5
287: ldc2_w        #350
290: ldc2_w        #140
293: invokevirtual #158
296: new           #39
299: dup
300: invokespecial #40
303: ldc           #41
305: invokevirtual #42
308: iload_3
309: invokevirtual #43
312: ldc           #44
314: invokevirtual #42
317: iconst_0
318: invokevirtual #43
321: ldc           #41
323: invokevirtual #42
326: invokevirtual #45
329: iload_3
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #46
341: new           #39
344: dup
345: invokespecial #40
348: ldc           #41
350: invokevirtual #42
353: iload         4
355: invokevirtual #43
358: ldc           #44
360: invokevirtual #42
363: iconst_0
364: invokevirtual #43
367: ldc           #41
369: invokevirtual #42
372: invokevirtual #45
375: iload         4
377: ifne          384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #46
388: aload         6
390: invokestatic  #47
393: aload         7
395: invokestatic  #47
398: aload         7
400: invokestatic  #48
403: ldc           #49
405: invokestatic  #50
408: aload         10
410: invokestatic  #76
413: aload         11
415: invokestatic  #76
418: aload         12
420: invokestatic  #47
423: aload         12
425: invokestatic  #48
428: ldc           #49
430: invokestatic  #50
433: aload         13
435: invokestatic  #47
438: aload         13
440: invokestatic  #48
443: ldc           #49
445: invokestatic  #50
448: aload         16
450: invokestatic  #76
453: aload         17
455: invokestatic  #76
458: aload         18
460: invokestatic  #47
463: aload         18
465: invokestatic  #48
468: ldc           #49
470: invokestatic  #50
473: aload         20
475: invokestatic  #47
478: aload         20
480: invokestatic  #48
483: ldc           #49
485: invokestatic  #50
488: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 5124
End line: 5169
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        double[] doubleArray41 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray41);
        double[] doubleArray43 = vectorialPointValuePair42.getPointRef();
        double[] doubleArray44 = vectorialPointValuePair42.getPointRef();
        double[] doubleArray45 = vectorialPointValuePair42.getValueRef();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #352
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #67
85: dup
86: aload_1
87: invokespecial #68
90: astore        6
92: aconst_null
93: astore        7
95: new           #8
98: dup
99: ldc2_w        #9
102: ldc2_w        #11
105: ldc2_w        #13
108: dconst_1
109: ldc2_w        #13
112: invokespecial #15
115: astore        8
117: new           #16
120: dup
121: ldc2_w        #17
124: ldc2_w        #19
127: invokespecial #21
130: astore        9
132: aload         8
134: aload         9
136: invokevirtual #22
139: aload         8
141: invokevirtual #23
144: istore        10
146: aload         8
148: invokevirtual #23
151: istore        11
153: aload         8
155: invokevirtual #53
158: istore        12
160: new           #24
163: dup
164: aload         8
166: invokespecial #25
169: astore        13
171: bipush        6
173: newarray       double
175: dup
176: iconst_0
177: ldc2_w        #27
180: dastore
181: dup
182: iconst_1
183: ldc2_w        #9
186: dastore
187: dup
188: iconst_2
189: ldc2_w        #13
192: dastore
193: dup
194: iconst_3
195: ldc2_w        #29
198: dastore
199: dup
200: iconst_4
201: ldc2_w        #17
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #31
210: dastore
211: astore        14
213: aconst_null
214: astore        15
216: new           #33
219: dup
220: aload         14
222: aload         15
224: iconst_1
225: invokespecial #34
228: astore        16
230: aload         13
232: aload         14
234: invokevirtual #54
237: astore        17
239: aload         6
241: aload         7
243: aload         14
245: invokevirtual #89
248: astore        18
250: aconst_null
251: astore        19
253: new           #33
256: dup
257: aload         14
259: aload         19
261: invokespecial #109
264: astore        20
266: aload         20
268: invokevirtual #151
271: astore        21
273: aload         20
275: invokevirtual #151
278: astore        22
280: aload         20
282: invokevirtual #183
285: astore        23
287: new           #39
290: dup
291: invokespecial #40
294: ldc           #41
296: invokevirtual #42
299: iload_3
300: invokevirtual #43
303: ldc           #44
305: invokevirtual #42
308: iconst_0
309: invokevirtual #43
312: ldc           #41
314: invokevirtual #42
317: invokevirtual #45
320: iload_3
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #46
332: new           #39
335: dup
336: invokespecial #40
339: ldc           #41
341: invokevirtual #42
344: iload         4
346: invokevirtual #43
349: ldc           #44
351: invokevirtual #42
354: iconst_0
355: invokevirtual #43
358: ldc           #41
360: invokevirtual #42
363: invokevirtual #45
366: iload         4
368: ifne          375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #46
379: new           #39
382: dup
383: invokespecial #40
386: ldc           #41
388: invokevirtual #42
391: iload         5
393: invokevirtual #43
396: ldc           #44
398: invokevirtual #42
401: iconst_0
402: invokevirtual #43
405: ldc           #41
407: invokevirtual #42
410: invokevirtual #45
413: iload         5
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #46
426: new           #39
429: dup
430: invokespecial #40
433: ldc           #41
435: invokevirtual #42
438: iload         10
440: invokevirtual #43
443: ldc           #44
445: invokevirtual #42
448: iconst_0
449: invokevirtual #43
452: ldc           #41
454: invokevirtual #42
457: invokevirtual #45
460: iload         10
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #46
473: new           #39
476: dup
477: invokespecial #40
480: ldc           #41
482: invokevirtual #42
485: iload         11
487: invokevirtual #43
490: ldc           #44
492: invokevirtual #42
495: iconst_0
496: invokevirtual #43
499: ldc           #41
501: invokevirtual #42
504: invokevirtual #45
507: iload         11
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #46
520: new           #39
523: dup
524: invokespecial #40
527: ldc           #41
529: invokevirtual #42
532: iload         12
534: invokevirtual #43
537: ldc           #44
539: invokevirtual #42
542: iconst_0
543: invokevirtual #43
546: ldc           #41
548: invokevirtual #42
551: invokevirtual #45
554: iload         12
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #46
567: aload         14
569: invokestatic  #47
572: aload         14
574: invokestatic  #48
577: ldc           #49
579: invokestatic  #50
582: aload         17
584: invokestatic  #47
587: aload         17
589: invokestatic  #48
592: ldc           #49
594: invokestatic  #50
597: aload         18
599: invokestatic  #47
602: aload         18
604: invokestatic  #48
607: ldc           #49
609: invokestatic  #50
612: aload         21
614: invokestatic  #47
617: aload         21
619: invokestatic  #48
622: ldc           #49
624: invokestatic  #50
627: aload         22
629: invokestatic  #47
632: aload         22
634: invokestatic  #48
637: ldc           #49
639: invokestatic  #50
642: aload         23
644: invokestatic  #76
647: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 5172
End line: 5193
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray14 = gaussianFitter12.getObservations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser parameterGuesser15 = new org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser(weightedObservedPointArray14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #353
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #52
91: aload         5
93: invokevirtual #62
96: astore        6
98: new           #83
101: dup
102: aload         6
104: invokespecial #84
107: astore        7
109: ldc           #64
111: invokestatic  #37
114: goto          119
117: astore        7
119: new           #39
122: dup
123: invokespecial #40
126: ldc           #41
128: invokevirtual #42
131: iload_3
132: invokevirtual #43
135: ldc           #44
137: invokevirtual #42
140: iconst_0
141: invokevirtual #43
144: ldc           #41
146: invokevirtual #42
149: invokevirtual #45
152: iload_3
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #46
164: new           #39
167: dup
168: invokespecial #40
171: ldc           #41
173: invokevirtual #42
176: iload         4
178: invokevirtual #43
181: ldc           #44
183: invokevirtual #42
186: iconst_0
187: invokevirtual #43
190: ldc           #41
192: invokevirtual #42
195: invokevirtual #45
198: iload         4
200: ifne          207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #46
211: aload         6
213: invokestatic  #47
216: return
Exception table:
from    to  target type
98   114   117   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 5196
End line: 5201
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1023.0f), 0.0d, 5.368709120000001E8d, 3.831008000716577E22d, 1.2915496650148839d);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter6 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #354
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #79
32: dconst_0
33: ldc2_w        #355
36: ldc2_w        #357
39: ldc2_w        #359
42: invokespecial #15
45: astore_1
46: new           #24
49: dup
50: aload_1
51: invokespecial #25
54: astore_2
55: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 5204
End line: 5265
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter28 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction29 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer35 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker38 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer35.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker38);
        int int40 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int41 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer35.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter43 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer35);
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = gaussianFitter43.fit(doubleArray50);
        double[] doubleArray55 = curveFitter28.fit(parametricUnivariateRealFunction29, doubleArray50);
        double[] doubleArray56 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray50);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint58 = null;
        gaussianFitter12.addObservedPoint(weightedObservedPoint58);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray60 = gaussianFitter12.getObservations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray61 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 1 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray60);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #361
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aconst_null
94: astore        7
96: new           #8
99: dup
100: ldc2_w        #9
103: ldc2_w        #11
106: ldc2_w        #13
109: dconst_1
110: ldc2_w        #13
113: invokespecial #15
116: astore        8
118: new           #16
121: dup
122: ldc2_w        #17
125: ldc2_w        #19
128: invokespecial #21
131: astore        9
133: aload         8
135: aload         9
137: invokevirtual #22
140: aload         8
142: invokevirtual #23
145: istore        10
147: aload         8
149: invokevirtual #23
152: istore        11
154: aload         8
156: invokevirtual #53
159: istore        12
161: new           #67
164: dup
165: aload         8
167: invokespecial #68
170: astore        13
172: aconst_null
173: astore        14
175: new           #8
178: dup
179: ldc2_w        #9
182: ldc2_w        #11
185: ldc2_w        #13
188: dconst_1
189: ldc2_w        #13
192: invokespecial #15
195: astore        15
197: new           #16
200: dup
201: ldc2_w        #17
204: ldc2_w        #19
207: invokespecial #21
210: astore        16
212: aload         15
214: aload         16
216: invokevirtual #22
219: aload         15
221: invokevirtual #23
224: istore        17
226: aload         15
228: invokevirtual #23
231: istore        18
233: aload         15
235: invokevirtual #53
238: istore        19
240: new           #24
243: dup
244: aload         15
246: invokespecial #25
249: astore        20
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: ldc2_w        #27
260: dastore
261: dup
262: iconst_1
263: ldc2_w        #9
266: dastore
267: dup
268: iconst_2
269: ldc2_w        #13
272: dastore
273: dup
274: iconst_3
275: ldc2_w        #29
278: dastore
279: dup
280: iconst_4
281: ldc2_w        #17
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #31
290: dastore
291: astore        21
293: aconst_null
294: astore        22
296: new           #33
299: dup
300: aload         21
302: aload         22
304: iconst_1
305: invokespecial #34
308: astore        23
310: aload         20
312: aload         21
314: invokevirtual #54
317: astore        24
319: aload         13
321: aload         14
323: aload         21
325: invokevirtual #89
328: astore        25
330: aload         5
332: aload         7
334: aload         21
336: invokevirtual #55
339: astore        26
341: aload         5
343: invokevirtual #52
346: aconst_null
347: astore        27
349: aload         5
351: aload         27
353: invokevirtual #174
356: aload         5
358: invokevirtual #62
361: astore        28
363: aload         5
365: invokevirtual #63
368: astore        29
370: ldc_w         #362
373: invokestatic  #37
376: goto          381
379: astore        29
381: new           #39
384: dup
385: invokespecial #40
388: ldc           #41
390: invokevirtual #42
393: iload_3
394: invokevirtual #43
397: ldc           #44
399: invokevirtual #42
402: iconst_0
403: invokevirtual #43
406: ldc           #41
408: invokevirtual #42
411: invokevirtual #45
414: iload_3
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #46
426: new           #39
429: dup
430: invokespecial #40
433: ldc           #41
435: invokevirtual #42
438: iload         4
440: invokevirtual #43
443: ldc           #44
445: invokevirtual #42
448: iconst_0
449: invokevirtual #43
452: ldc           #41
454: invokevirtual #42
457: invokevirtual #45
460: iload         4
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #46
473: aload         6
475: invokestatic  #47
478: new           #39
481: dup
482: invokespecial #40
485: ldc           #41
487: invokevirtual #42
490: iload         10
492: invokevirtual #43
495: ldc           #44
497: invokevirtual #42
500: iconst_0
501: invokevirtual #43
504: ldc           #41
506: invokevirtual #42
509: invokevirtual #45
512: iload         10
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #46
525: new           #39
528: dup
529: invokespecial #40
532: ldc           #41
534: invokevirtual #42
537: iload         11
539: invokevirtual #43
542: ldc           #44
544: invokevirtual #42
547: iconst_0
548: invokevirtual #43
551: ldc           #41
553: invokevirtual #42
556: invokevirtual #45
559: iload         11
561: ifne          568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #46
572: new           #39
575: dup
576: invokespecial #40
579: ldc           #41
581: invokevirtual #42
584: iload         12
586: invokevirtual #43
589: ldc           #44
591: invokevirtual #42
594: iconst_0
595: invokevirtual #43
598: ldc           #41
600: invokevirtual #42
603: invokevirtual #45
606: iload         12
608: ifne          615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #46
619: new           #39
622: dup
623: invokespecial #40
626: ldc           #41
628: invokevirtual #42
631: iload         17
633: invokevirtual #43
636: ldc           #44
638: invokevirtual #42
641: iconst_0
642: invokevirtual #43
645: ldc           #41
647: invokevirtual #42
650: invokevirtual #45
653: iload         17
655: ifne          662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #46
666: new           #39
669: dup
670: invokespecial #40
673: ldc           #41
675: invokevirtual #42
678: iload         18
680: invokevirtual #43
683: ldc           #44
685: invokevirtual #42
688: iconst_0
689: invokevirtual #43
692: ldc           #41
694: invokevirtual #42
697: invokevirtual #45
700: iload         18
702: ifne          709
705: iconst_1
706: goto          710
709: iconst_0
710: invokestatic  #46
713: new           #39
716: dup
717: invokespecial #40
720: ldc           #41
722: invokevirtual #42
725: iload         19
727: invokevirtual #43
730: ldc           #44
732: invokevirtual #42
735: iconst_0
736: invokevirtual #43
739: ldc           #41
741: invokevirtual #42
744: invokevirtual #45
747: iload         19
749: ifne          756
752: iconst_1
753: goto          757
756: iconst_0
757: invokestatic  #46
760: aload         21
762: invokestatic  #47
765: aload         21
767: invokestatic  #48
770: ldc           #49
772: invokestatic  #50
775: aload         24
777: invokestatic  #47
780: aload         24
782: invokestatic  #48
785: ldc           #49
787: invokestatic  #50
790: aload         25
792: invokestatic  #47
795: aload         25
797: invokestatic  #48
800: ldc           #49
802: invokestatic  #50
805: aload         26
807: invokestatic  #47
810: aload         26
812: invokestatic  #48
815: ldc           #49
817: invokestatic  #50
820: aload         28
822: invokestatic  #47
825: return
Exception table:
from    to  target type
363   376   379   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 5268
End line: 5296
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker14 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double15 = simpleVectorialValueChecker14.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker14);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker17 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter18 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray19 = gaussianFitter18.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.1102230246251565E-14d + "'", double15 == 1.1102230246251565E-14d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #363
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #16
91: dup
92: invokespecial #150
95: astore        8
97: aload         8
99: invokevirtual #88
102: dstore        9
104: aload_1
105: aload         8
107: invokevirtual #22
110: aload_1
111: invokevirtual #73
114: astore        11
116: new           #24
119: dup
120: aload_1
121: invokespecial #25
124: astore        12
126: aload         12
128: invokevirtual #63
131: astore        13
133: ldc           #64
135: invokestatic  #37
138: goto          143
141: astore        13
143: new           #39
146: dup
147: invokespecial #40
150: ldc           #41
152: invokevirtual #42
155: iload_3
156: invokevirtual #43
159: ldc           #44
161: invokevirtual #42
164: iconst_0
165: invokevirtual #43
168: ldc           #41
170: invokevirtual #42
173: invokevirtual #45
176: iload_3
177: ifne          184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #46
188: new           #39
191: dup
192: invokespecial #40
195: ldc           #41
197: invokevirtual #42
200: iload         4
202: invokevirtual #43
205: ldc           #44
207: invokevirtual #42
210: iconst_0
211: invokevirtual #43
214: ldc           #41
216: invokevirtual #42
219: invokevirtual #45
222: iload         4
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #46
235: new           #39
238: dup
239: invokespecial #40
242: ldc           #41
244: invokevirtual #42
247: dload         5
249: invokevirtual #59
252: ldc           #44
254: invokevirtual #42
257: dconst_0
258: invokevirtual #59
261: ldc           #41
263: invokevirtual #42
266: invokevirtual #45
269: dload         5
271: dconst_0
272: dcmpl
273: ifne          280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #46
284: new           #39
287: dup
288: invokespecial #40
291: ldc           #41
293: invokevirtual #42
296: iload         7
298: invokevirtual #43
301: ldc           #44
303: invokevirtual #42
306: iconst_0
307: invokevirtual #43
310: ldc           #41
312: invokevirtual #42
315: invokevirtual #45
318: iload         7
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #46
331: new           #39
334: dup
335: invokespecial #40
338: ldc           #41
340: invokevirtual #42
343: dload         9
345: invokevirtual #59
348: ldc           #44
350: invokevirtual #42
353: ldc2_w        #152
356: invokevirtual #59
359: ldc           #41
361: invokevirtual #42
364: invokevirtual #45
367: dload         9
369: ldc2_w        #152
372: dcmpl
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #46
384: aload         11
386: invokestatic  #47
389: return
Exception table:
from    to  target type
126   138   141   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 5299
End line: 5322
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        double double15 = levenbergMarquardtOptimizer5.getRMS();
        int int16 = levenbergMarquardtOptimizer5.getEvaluations();
        int int17 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        int int18 = levenbergMarquardtOptimizer5.getEvaluations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: aload_1
93: invokevirtual #53
96: istore        7
98: aload_1
99: invokevirtual #201
102: dstore        8
104: aload_1
105: invokevirtual #53
108: istore        10
110: aload_1
111: invokevirtual #160
114: istore        11
116: aload_1
117: invokevirtual #53
120: istore        12
122: new           #39
125: dup
126: invokespecial #40
129: ldc           #41
131: invokevirtual #42
134: iload_3
135: invokevirtual #43
138: ldc           #44
140: invokevirtual #42
143: iconst_0
144: invokevirtual #43
147: ldc           #41
149: invokevirtual #42
152: invokevirtual #45
155: iload_3
156: ifne          163
159: iconst_1
160: goto          164
163: iconst_0
164: invokestatic  #46
167: new           #39
170: dup
171: invokespecial #40
174: ldc           #41
176: invokevirtual #42
179: iload         4
181: invokevirtual #43
184: ldc           #44
186: invokevirtual #42
189: iconst_0
190: invokevirtual #43
193: ldc           #41
195: invokevirtual #42
198: invokevirtual #45
201: iload         4
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #46
214: new           #39
217: dup
218: invokespecial #40
221: ldc           #41
223: invokevirtual #42
226: iload         5
228: invokevirtual #43
231: ldc           #44
233: invokevirtual #42
236: iconst_0
237: invokevirtual #43
240: ldc           #41
242: invokevirtual #42
245: invokevirtual #45
248: iload         5
250: ifne          257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #46
261: new           #39
264: dup
265: invokespecial #40
268: ldc           #41
270: invokevirtual #42
273: iload         7
275: invokevirtual #43
278: ldc           #44
280: invokevirtual #42
283: iconst_0
284: invokevirtual #43
287: ldc           #41
289: invokevirtual #42
292: invokevirtual #45
295: iload         7
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #46
308: dload         8
310: invokestatic  #202
313: invokestatic  #203
316: new           #39
319: dup
320: invokespecial #40
323: ldc           #41
325: invokevirtual #42
328: iload         10
330: invokevirtual #43
333: ldc           #44
335: invokevirtual #42
338: iconst_0
339: invokevirtual #43
342: ldc           #41
344: invokevirtual #42
347: invokevirtual #45
350: iload         10
352: ifne          359
355: iconst_1
356: goto          360
359: iconst_0
360: invokestatic  #46
363: new           #39
366: dup
367: invokespecial #40
370: ldc           #41
372: invokevirtual #42
375: iload         11
377: invokevirtual #43
380: ldc           #44
382: invokevirtual #42
385: iconst_0
386: invokevirtual #43
389: ldc           #41
391: invokevirtual #42
394: invokevirtual #45
397: iload         11
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #46
410: new           #39
413: dup
414: invokespecial #40
417: ldc           #41
419: invokevirtual #42
422: iload         12
424: invokevirtual #43
427: ldc           #44
429: invokevirtual #42
432: iconst_0
433: invokevirtual #43
436: ldc           #41
438: invokevirtual #42
441: invokevirtual #45
444: iload         12
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #46
457: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 5325
End line: 5352
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        double double15 = levenbergMarquardtOptimizer5.getRMS();
        int int16 = levenbergMarquardtOptimizer5.getEvaluations();
        int int17 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        double double18 = levenbergMarquardtOptimizer5.getChiSquare();
        int int19 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker20 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #365
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: aload_1
93: invokevirtual #53
96: istore        7
98: aload_1
99: invokevirtual #201
102: dstore        8
104: aload_1
105: invokevirtual #53
108: istore        10
110: aload_1
111: invokevirtual #160
114: istore        11
116: aload_1
117: invokevirtual #58
120: dstore        12
122: aload_1
123: invokevirtual #23
126: istore        14
128: aload_1
129: invokevirtual #73
132: astore        15
134: new           #39
137: dup
138: invokespecial #40
141: ldc           #41
143: invokevirtual #42
146: iload_3
147: invokevirtual #43
150: ldc           #44
152: invokevirtual #42
155: iconst_0
156: invokevirtual #43
159: ldc           #41
161: invokevirtual #42
164: invokevirtual #45
167: iload_3
168: ifne          175
171: iconst_1
172: goto          176
175: iconst_0
176: invokestatic  #46
179: new           #39
182: dup
183: invokespecial #40
186: ldc           #41
188: invokevirtual #42
191: iload         4
193: invokevirtual #43
196: ldc           #44
198: invokevirtual #42
201: iconst_0
202: invokevirtual #43
205: ldc           #41
207: invokevirtual #42
210: invokevirtual #45
213: iload         4
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #46
226: new           #39
229: dup
230: invokespecial #40
233: ldc           #41
235: invokevirtual #42
238: iload         5
240: invokevirtual #43
243: ldc           #44
245: invokevirtual #42
248: iconst_0
249: invokevirtual #43
252: ldc           #41
254: invokevirtual #42
257: invokevirtual #45
260: iload         5
262: ifne          269
265: iconst_1
266: goto          270
269: iconst_0
270: invokestatic  #46
273: new           #39
276: dup
277: invokespecial #40
280: ldc           #41
282: invokevirtual #42
285: iload         7
287: invokevirtual #43
290: ldc           #44
292: invokevirtual #42
295: iconst_0
296: invokevirtual #43
299: ldc           #41
301: invokevirtual #42
304: invokevirtual #45
307: iload         7
309: ifne          316
312: iconst_1
313: goto          317
316: iconst_0
317: invokestatic  #46
320: dload         8
322: invokestatic  #202
325: invokestatic  #203
328: new           #39
331: dup
332: invokespecial #40
335: ldc           #41
337: invokevirtual #42
340: iload         10
342: invokevirtual #43
345: ldc           #44
347: invokevirtual #42
350: iconst_0
351: invokevirtual #43
354: ldc           #41
356: invokevirtual #42
359: invokevirtual #45
362: iload         10
364: ifne          371
367: iconst_1
368: goto          372
371: iconst_0
372: invokestatic  #46
375: new           #39
378: dup
379: invokespecial #40
382: ldc           #41
384: invokevirtual #42
387: iload         11
389: invokevirtual #43
392: ldc           #44
394: invokevirtual #42
397: iconst_0
398: invokevirtual #43
401: ldc           #41
403: invokevirtual #42
406: invokevirtual #45
409: iload         11
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #46
422: new           #39
425: dup
426: invokespecial #40
429: ldc           #41
431: invokevirtual #42
434: dload         12
436: invokevirtual #59
439: ldc           #44
441: invokevirtual #42
444: dconst_0
445: invokevirtual #59
448: ldc           #41
450: invokevirtual #42
453: invokevirtual #45
456: dload         12
458: dconst_0
459: dcmpl
460: ifne          467
463: iconst_1
464: goto          468
467: iconst_0
468: invokestatic  #46
471: new           #39
474: dup
475: invokespecial #40
478: ldc           #41
480: invokevirtual #42
483: iload         14
485: invokevirtual #43
488: ldc           #44
490: invokevirtual #42
493: iconst_0
494: invokevirtual #43
497: ldc           #41
499: invokevirtual #42
502: invokevirtual #45
505: iload         14
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #46
518: aload         15
520: invokestatic  #47
523: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 5355
End line: 5430
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker2 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(3.732511156817248d, (double) 100);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer9 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker12 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer9.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker12);
        int int14 = levenbergMarquardtOptimizer9.getMaxEvaluations();
        int int15 = levenbergMarquardtOptimizer9.getMaxEvaluations();
        int int16 = levenbergMarquardtOptimizer9.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter17 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer9);
        double[] doubleArray24 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray25 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair27 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray25, true);
        double[] doubleArray28 = gaussianFitter17.fit(doubleArray24);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = vectorialPointValuePair38.getValue();
        double[] doubleArray40 = vectorialPointValuePair38.getValue();
        double[] doubleArray41 = vectorialPointValuePair38.getPoint();
        double[] doubleArray42 = gaussianFitter17.fit(doubleArray41);
        double[] doubleArray49 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray50 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair52 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray49, doubleArray50, true);
        double[] doubleArray53 = vectorialPointValuePair52.getValue();
        double[] doubleArray54 = vectorialPointValuePair52.getValue();
        double[] doubleArray55 = vectorialPointValuePair52.getPoint();
        double[] doubleArray56 = vectorialPointValuePair52.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray56);
        double[] doubleArray58 = vectorialPointValuePair57.getPoint();
        double[] doubleArray59 = vectorialPointValuePair57.getPointRef();
        double[] doubleArray66 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray67 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray66, doubleArray67, true);
        double[] doubleArray70 = vectorialPointValuePair69.getValue();
        double[] doubleArray71 = vectorialPointValuePair69.getValue();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = simpleVectorialValueChecker2.converged((int) (byte) 100, vectorialPointValuePair57, vectorialPointValuePair69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNull(doubleArray71);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #366
20: aastore
21: invokevirtual #7
24: pop
25: new           #16
28: dup
29: ldc2_w        #367
32: ldc2_w        #13
35: invokespecial #21
38: astore_1
39: new           #8
42: dup
43: ldc2_w        #9
46: ldc2_w        #11
49: ldc2_w        #13
52: dconst_1
53: ldc2_w        #13
56: invokespecial #15
59: astore_2
60: new           #16
63: dup
64: ldc2_w        #17
67: ldc2_w        #19
70: invokespecial #21
73: astore_3
74: aload_2
75: aload_3
76: invokevirtual #22
79: aload_2
80: invokevirtual #23
83: istore        4
85: aload_2
86: invokevirtual #23
89: istore        5
91: aload_2
92: invokevirtual #53
95: istore        6
97: new           #24
100: dup
101: aload_2
102: invokespecial #25
105: astore        7
107: bipush        6
109: newarray       double
111: dup
112: iconst_0
113: ldc2_w        #27
116: dastore
117: dup
118: iconst_1
119: ldc2_w        #9
122: dastore
123: dup
124: iconst_2
125: ldc2_w        #13
128: dastore
129: dup
130: iconst_3
131: ldc2_w        #29
134: dastore
135: dup
136: iconst_4
137: ldc2_w        #17
140: dastore
141: dup
142: iconst_5
143: ldc2_w        #31
146: dastore
147: astore        8
149: aconst_null
150: astore        9
152: new           #33
155: dup
156: aload         8
158: aload         9
160: iconst_1
161: invokespecial #34
164: astore        10
166: aload         7
168: aload         8
170: invokevirtual #54
173: astore        11
175: bipush        6
177: newarray       double
179: dup
180: iconst_0
181: ldc2_w        #27
184: dastore
185: dup
186: iconst_1
187: ldc2_w        #9
190: dastore
191: dup
192: iconst_2
193: ldc2_w        #13
196: dastore
197: dup
198: iconst_3
199: ldc2_w        #29
202: dastore
203: dup
204: iconst_4
205: ldc2_w        #17
208: dastore
209: dup
210: iconst_5
211: ldc2_w        #31
214: dastore
215: astore        12
217: aconst_null
218: astore        13
220: new           #33
223: dup
224: aload         12
226: aload         13
228: iconst_1
229: invokespecial #34
232: astore        14
234: aload         14
236: invokevirtual #74
239: astore        15
241: aload         14
243: invokevirtual #74
246: astore        16
248: aload         14
250: invokevirtual #75
253: astore        17
255: aload         7
257: aload         17
259: invokevirtual #54
262: astore        18
264: bipush        6
266: newarray       double
268: dup
269: iconst_0
270: ldc2_w        #27
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #9
279: dastore
280: dup
281: iconst_2
282: ldc2_w        #13
285: dastore
286: dup
287: iconst_3
288: ldc2_w        #29
291: dastore
292: dup
293: iconst_4
294: ldc2_w        #17
297: dastore
298: dup
299: iconst_5
300: ldc2_w        #31
303: dastore
304: astore        19
306: aconst_null
307: astore        20
309: new           #33
312: dup
313: aload         19
315: aload         20
317: iconst_1
318: invokespecial #34
321: astore        21
323: aload         21
325: invokevirtual #74
328: astore        22
330: aload         21
332: invokevirtual #74
335: astore        23
337: aload         21
339: invokevirtual #75
342: astore        24
344: aload         21
346: invokevirtual #151
349: astore        25
351: new           #33
354: dup
355: aload         17
357: aload         25
359: invokespecial #109
362: astore        26
364: aload         26
366: invokevirtual #75
369: astore        27
371: aload         26
373: invokevirtual #151
376: astore        28
378: bipush        6
380: newarray       double
382: dup
383: iconst_0
384: ldc2_w        #27
387: dastore
388: dup
389: iconst_1
390: ldc2_w        #9
393: dastore
394: dup
395: iconst_2
396: ldc2_w        #13
399: dastore
400: dup
401: iconst_3
402: ldc2_w        #29
405: dastore
406: dup
407: iconst_4
408: ldc2_w        #17
411: dastore
412: dup
413: iconst_5
414: ldc2_w        #31
417: dastore
418: astore        29
420: aconst_null
421: astore        30
423: new           #33
426: dup
427: aload         29
429: aload         30
431: iconst_1
432: invokespecial #34
435: astore        31
437: aload         31
439: invokevirtual #74
442: astore        32
444: aload         31
446: invokevirtual #74
449: astore        33
451: aload_1
452: bipush        100
454: aload         26
456: aload         31
458: invokevirtual #90
461: istore        34
463: ldc           #36
465: invokestatic  #37
468: goto          473
471: astore        34
473: new           #39
476: dup
477: invokespecial #40
480: ldc           #41
482: invokevirtual #42
485: iload         4
487: invokevirtual #43
490: ldc           #44
492: invokevirtual #42
495: iconst_0
496: invokevirtual #43
499: ldc           #41
501: invokevirtual #42
504: invokevirtual #45
507: iload         4
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #46
520: new           #39
523: dup
524: invokespecial #40
527: ldc           #41
529: invokevirtual #42
532: iload         5
534: invokevirtual #43
537: ldc           #44
539: invokevirtual #42
542: iconst_0
543: invokevirtual #43
546: ldc           #41
548: invokevirtual #42
551: invokevirtual #45
554: iload         5
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #46
567: new           #39
570: dup
571: invokespecial #40
574: ldc           #41
576: invokevirtual #42
579: iload         6
581: invokevirtual #43
584: ldc           #44
586: invokevirtual #42
589: iconst_0
590: invokevirtual #43
593: ldc           #41
595: invokevirtual #42
598: invokevirtual #45
601: iload         6
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #46
614: aload         8
616: invokestatic  #47
619: aload         8
621: invokestatic  #48
624: ldc           #49
626: invokestatic  #50
629: aload         11
631: invokestatic  #47
634: aload         11
636: invokestatic  #48
639: ldc           #49
641: invokestatic  #50
644: aload         12
646: invokestatic  #47
649: aload         12
651: invokestatic  #48
654: ldc           #49
656: invokestatic  #50
659: aload         15
661: invokestatic  #76
664: aload         16
666: invokestatic  #76
669: aload         17
671: invokestatic  #47
674: aload         17
676: invokestatic  #48
679: ldc           #49
681: invokestatic  #50
684: aload         18
686: invokestatic  #47
689: aload         18
691: invokestatic  #48
694: ldc           #49
696: invokestatic  #50
699: aload         19
701: invokestatic  #47
704: aload         19
706: invokestatic  #48
709: ldc           #49
711: invokestatic  #50
714: aload         22
716: invokestatic  #76
719: aload         23
721: invokestatic  #76
724: aload         24
726: invokestatic  #47
729: aload         24
731: invokestatic  #48
734: ldc           #49
736: invokestatic  #50
739: aload         25
741: invokestatic  #47
744: aload         25
746: invokestatic  #48
749: ldc           #49
751: invokestatic  #50
754: aload         27
756: invokestatic  #47
759: aload         27
761: invokestatic  #48
764: ldc           #49
766: invokestatic  #50
769: aload         28
771: invokestatic  #47
774: aload         28
776: invokestatic  #48
779: ldc           #49
781: invokestatic  #50
784: aload         29
786: invokestatic  #47
789: aload         29
791: invokestatic  #48
794: ldc           #49
796: invokestatic  #50
799: aload         32
801: invokestatic  #76
804: aload         33
806: invokestatic  #76
809: return
Exception table:
from    to  target type
451   468   471   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 5433
End line: 5521
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        double double27 = levenbergMarquardtOptimizer20.getChiSquare();
        int int28 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter29 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric30 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer36 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker39 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer36.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker39);
        int int41 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer36.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter44 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer36);
        double[] doubleArray51 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray52 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray52, true);
        double[] doubleArray55 = gaussianFitter44.fit(doubleArray51);
        double[] doubleArray56 = curveFitter29.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray55);
        double[] doubleArray63 = new double[] { 3.1415926535897936d, (-0.9923172082775625d), 0.207879576290261d, 0.49321676688550387d, 4.248699152289463d, 3.4741259760439713d };
        double[] doubleArray64 = gaussianFitter12.fit(97, (org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray63);
        double[] doubleArray72 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray73 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair75 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray72, doubleArray73, true);
        double[] doubleArray76 = vectorialPointValuePair75.getValue();
        double[] doubleArray77 = vectorialPointValuePair75.getValue();
        double[] doubleArray78 = vectorialPointValuePair75.getPoint();
        double[] doubleArray85 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray86 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair88 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray85, doubleArray86, true);
        double[] doubleArray89 = vectorialPointValuePair88.getValue();
        double[] doubleArray90 = vectorialPointValuePair88.getValue();
        double[] doubleArray91 = vectorialPointValuePair88.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair93 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray91, false);
        double[] doubleArray94 = vectorialPointValuePair93.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            double double95 = parametric30.value((-0.435997507585868d), doubleArray94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray76);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray89);
        org.junit.Assert.assertNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #369
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: new           #8
96: dup
97: ldc2_w        #9
100: ldc2_w        #11
103: ldc2_w        #13
106: dconst_1
107: ldc2_w        #13
110: invokespecial #15
113: astore        7
115: new           #16
118: dup
119: ldc2_w        #17
122: ldc2_w        #19
125: invokespecial #21
128: astore        8
130: aload         7
132: aload         8
134: invokevirtual #22
137: aload         7
139: invokevirtual #23
142: istore        9
144: aload         7
146: invokevirtual #23
149: istore        10
151: aload         7
153: invokevirtual #58
156: dstore        11
158: aload         7
160: invokevirtual #23
163: istore        13
165: new           #67
168: dup
169: aload         7
171: invokespecial #68
174: astore        14
176: new           #117
179: dup
180: invokespecial #118
183: astore        15
185: new           #8
188: dup
189: ldc2_w        #9
192: ldc2_w        #11
195: ldc2_w        #13
198: dconst_1
199: ldc2_w        #13
202: invokespecial #15
205: astore        16
207: new           #16
210: dup
211: ldc2_w        #17
214: ldc2_w        #19
217: invokespecial #21
220: astore        17
222: aload         16
224: aload         17
226: invokevirtual #22
229: aload         16
231: invokevirtual #23
234: istore        18
236: aload         16
238: invokevirtual #23
241: istore        19
243: aload         16
245: invokevirtual #53
248: istore        20
250: new           #24
253: dup
254: aload         16
256: invokespecial #25
259: astore        21
261: bipush        6
263: newarray       double
265: dup
266: iconst_0
267: ldc2_w        #27
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #9
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #13
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #29
288: dastore
289: dup
290: iconst_4
291: ldc2_w        #17
294: dastore
295: dup
296: iconst_5
297: ldc2_w        #31
300: dastore
301: astore        22
303: aconst_null
304: astore        23
306: new           #33
309: dup
310: aload         22
312: aload         23
314: iconst_1
315: invokespecial #34
318: astore        24
320: aload         21
322: aload         22
324: invokevirtual #54
327: astore        25
329: aload         14
331: aload         15
333: aload         25
335: invokevirtual #89
338: astore        26
340: bipush        6
342: newarray       double
344: dup
345: iconst_0
346: ldc2_w        #162
349: dastore
350: dup
351: iconst_1
352: ldc2_w        #94
355: dastore
356: dup
357: iconst_2
358: ldc2_w        #164
361: dastore
362: dup
363: iconst_3
364: ldc2_w        #166
367: dastore
368: dup
369: iconst_4
370: ldc2_w        #136
373: dastore
374: dup
375: iconst_5
376: ldc2_w        #168
379: dastore
380: astore        27
382: aload         5
384: bipush        97
386: aload         15
388: aload         27
390: invokevirtual #35
393: astore        28
395: bipush        6
397: newarray       double
399: dup
400: iconst_0
401: ldc2_w        #27
404: dastore
405: dup
406: iconst_1
407: ldc2_w        #9
410: dastore
411: dup
412: iconst_2
413: ldc2_w        #13
416: dastore
417: dup
418: iconst_3
419: ldc2_w        #29
422: dastore
423: dup
424: iconst_4
425: ldc2_w        #17
428: dastore
429: dup
430: iconst_5
431: ldc2_w        #31
434: dastore
435: astore        29
437: aconst_null
438: astore        30
440: new           #33
443: dup
444: aload         29
446: aload         30
448: iconst_1
449: invokespecial #34
452: astore        31
454: aload         31
456: invokevirtual #74
459: astore        32
461: aload         31
463: invokevirtual #74
466: astore        33
468: aload         31
470: invokevirtual #75
473: astore        34
475: bipush        6
477: newarray       double
479: dup
480: iconst_0
481: ldc2_w        #27
484: dastore
485: dup
486: iconst_1
487: ldc2_w        #9
490: dastore
491: dup
492: iconst_2
493: ldc2_w        #13
496: dastore
497: dup
498: iconst_3
499: ldc2_w        #29
502: dastore
503: dup
504: iconst_4
505: ldc2_w        #17
508: dastore
509: dup
510: iconst_5
511: ldc2_w        #31
514: dastore
515: astore        35
517: aconst_null
518: astore        36
520: new           #33
523: dup
524: aload         35
526: aload         36
528: iconst_1
529: invokespecial #34
532: astore        37
534: aload         37
536: invokevirtual #74
539: astore        38
541: aload         37
543: invokevirtual #74
546: astore        39
548: aload         37
550: invokevirtual #75
553: astore        40
555: new           #33
558: dup
559: aload         34
561: aload         40
563: iconst_0
564: invokespecial #34
567: astore        41
569: aload         41
571: invokevirtual #75
574: astore        42
576: aload         15
578: ldc2_w        #370
581: aload         42
583: invokevirtual #123
586: dstore        43
588: ldc           #124
590: invokestatic  #37
593: goto          598
596: astore        43
598: new           #39
601: dup
602: invokespecial #40
605: ldc           #41
607: invokevirtual #42
610: iload_3
611: invokevirtual #43
614: ldc           #44
616: invokevirtual #42
619: iconst_0
620: invokevirtual #43
623: ldc           #41
625: invokevirtual #42
628: invokevirtual #45
631: iload_3
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #46
643: new           #39
646: dup
647: invokespecial #40
650: ldc           #41
652: invokevirtual #42
655: iload         4
657: invokevirtual #43
660: ldc           #44
662: invokevirtual #42
665: iconst_0
666: invokevirtual #43
669: ldc           #41
671: invokevirtual #42
674: invokevirtual #45
677: iload         4
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #46
690: aload         6
692: invokestatic  #47
695: new           #39
698: dup
699: invokespecial #40
702: ldc           #41
704: invokevirtual #42
707: iload         9
709: invokevirtual #43
712: ldc           #44
714: invokevirtual #42
717: iconst_0
718: invokevirtual #43
721: ldc           #41
723: invokevirtual #42
726: invokevirtual #45
729: iload         9
731: ifne          738
734: iconst_1
735: goto          739
738: iconst_0
739: invokestatic  #46
742: new           #39
745: dup
746: invokespecial #40
749: ldc           #41
751: invokevirtual #42
754: iload         10
756: invokevirtual #43
759: ldc           #44
761: invokevirtual #42
764: iconst_0
765: invokevirtual #43
768: ldc           #41
770: invokevirtual #42
773: invokevirtual #45
776: iload         10
778: ifne          785
781: iconst_1
782: goto          786
785: iconst_0
786: invokestatic  #46
789: new           #39
792: dup
793: invokespecial #40
796: ldc           #41
798: invokevirtual #42
801: dload         11
803: invokevirtual #59
806: ldc           #44
808: invokevirtual #42
811: dconst_0
812: invokevirtual #59
815: ldc           #41
817: invokevirtual #42
820: invokevirtual #45
823: dload         11
825: dconst_0
826: dcmpl
827: ifne          834
830: iconst_1
831: goto          835
834: iconst_0
835: invokestatic  #46
838: new           #39
841: dup
842: invokespecial #40
845: ldc           #41
847: invokevirtual #42
850: iload         13
852: invokevirtual #43
855: ldc           #44
857: invokevirtual #42
860: iconst_0
861: invokevirtual #43
864: ldc           #41
866: invokevirtual #42
869: invokevirtual #45
872: iload         13
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #46
885: new           #39
888: dup
889: invokespecial #40
892: ldc           #41
894: invokevirtual #42
897: iload         18
899: invokevirtual #43
902: ldc           #44
904: invokevirtual #42
907: iconst_0
908: invokevirtual #43
911: ldc           #41
913: invokevirtual #42
916: invokevirtual #45
919: iload         18
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #46
932: new           #39
935: dup
936: invokespecial #40
939: ldc           #41
941: invokevirtual #42
944: iload         19
946: invokevirtual #43
949: ldc           #44
951: invokevirtual #42
954: iconst_0
955: invokevirtual #43
958: ldc           #41
960: invokevirtual #42
963: invokevirtual #45
966: iload         19
968: ifne          975
971: iconst_1
972: goto          976
975: iconst_0
976: invokestatic  #46
979: new           #39
982: dup
983: invokespecial #40
986: ldc           #41
988: invokevirtual #42
991: iload         20
993: invokevirtual #43
996: ldc           #44
998: invokevirtual #42
1001: iconst_0
1002: invokevirtual #43
1005: ldc           #41
1007: invokevirtual #42
1010: invokevirtual #45
1013: iload         20
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #46
1026: aload         22
1028: invokestatic  #47
1031: aload         22
1033: invokestatic  #48
1036: ldc           #49
1038: invokestatic  #50
1041: aload         25
1043: invokestatic  #47
1046: aload         25
1048: invokestatic  #48
1051: ldc           #49
1053: invokestatic  #50
1056: aload         26
1058: invokestatic  #47
1061: aload         26
1063: invokestatic  #48
1066: ldc           #49
1068: invokestatic  #50
1071: aload         27
1073: invokestatic  #47
1076: aload         27
1078: invokestatic  #48
1081: ldc           #172
1083: invokestatic  #50
1086: aload         28
1088: invokestatic  #47
1091: aload         28
1093: invokestatic  #48
1096: ldc           #172
1098: invokestatic  #50
1101: aload         29
1103: invokestatic  #47
1106: aload         29
1108: invokestatic  #48
1111: ldc           #49
1113: invokestatic  #50
1116: aload         32
1118: invokestatic  #76
1121: aload         33
1123: invokestatic  #76
1126: aload         34
1128: invokestatic  #47
1131: aload         34
1133: invokestatic  #48
1136: ldc           #49
1138: invokestatic  #50
1141: aload         35
1143: invokestatic  #47
1146: aload         35
1148: invokestatic  #48
1151: ldc           #49
1153: invokestatic  #50
1156: aload         38
1158: invokestatic  #76
1161: aload         39
1163: invokestatic  #76
1166: aload         40
1168: invokestatic  #47
1171: aload         40
1173: invokestatic  #48
1176: ldc           #49
1178: invokestatic  #50
1181: aload         42
1183: invokestatic  #47
1186: aload         42
1188: invokestatic  #48
1191: ldc           #49
1193: invokestatic  #50
1196: return
Exception table:
from    to  target type
576   593   596   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 5524
End line: 5564
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint44 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, 4.9E-324d, 57.29577951308232d);
        double double45 = weightedObservedPoint44.getWeight();
        double double46 = weightedObservedPoint44.getX();
        gaussianFitter12.addObservedPoint(weightedObservedPoint44);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 4.9E-324d + "'", double46 == 4.9E-324d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #372
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #52
91: aconst_null
92: astore        6
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        7
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        8
131: aload         7
133: aload         8
135: invokevirtual #22
138: aload         7
140: invokevirtual #23
143: istore        9
145: aload         7
147: invokevirtual #23
150: istore        10
152: aload         7
154: invokevirtual #53
157: istore        11
159: new           #24
162: dup
163: aload         7
165: invokespecial #25
168: astore        12
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        13
212: aconst_null
213: astore        14
215: new           #33
218: dup
219: aload         13
221: aload         14
223: iconst_1
224: invokespecial #34
227: astore        15
229: aload         12
231: aload         13
233: invokevirtual #54
236: astore        16
238: aload         5
240: aload         6
242: aload         16
244: invokevirtual #55
247: astore        17
249: new           #217
252: dup
253: dconst_0
254: ldc2_w        #218
257: ldc2_w        #220
260: invokespecial #222
263: astore        18
265: aload         18
267: invokevirtual #223
270: dstore        19
272: aload         18
274: invokevirtual #373
277: dstore        21
279: aload         5
281: aload         18
283: invokevirtual #174
286: new           #39
289: dup
290: invokespecial #40
293: ldc           #41
295: invokevirtual #42
298: iload_3
299: invokevirtual #43
302: ldc           #44
304: invokevirtual #42
307: iconst_0
308: invokevirtual #43
311: ldc           #41
313: invokevirtual #42
316: invokevirtual #45
319: iload_3
320: ifne          327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #46
331: new           #39
334: dup
335: invokespecial #40
338: ldc           #41
340: invokevirtual #42
343: iload         4
345: invokevirtual #43
348: ldc           #44
350: invokevirtual #42
353: iconst_0
354: invokevirtual #43
357: ldc           #41
359: invokevirtual #42
362: invokevirtual #45
365: iload         4
367: ifne          374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #46
378: new           #39
381: dup
382: invokespecial #40
385: ldc           #41
387: invokevirtual #42
390: iload         9
392: invokevirtual #43
395: ldc           #44
397: invokevirtual #42
400: iconst_0
401: invokevirtual #43
404: ldc           #41
406: invokevirtual #42
409: invokevirtual #45
412: iload         9
414: ifne          421
417: iconst_1
418: goto          422
421: iconst_0
422: invokestatic  #46
425: new           #39
428: dup
429: invokespecial #40
432: ldc           #41
434: invokevirtual #42
437: iload         10
439: invokevirtual #43
442: ldc           #44
444: invokevirtual #42
447: iconst_0
448: invokevirtual #43
451: ldc           #41
453: invokevirtual #42
456: invokevirtual #45
459: iload         10
461: ifne          468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #46
472: new           #39
475: dup
476: invokespecial #40
479: ldc           #41
481: invokevirtual #42
484: iload         11
486: invokevirtual #43
489: ldc           #44
491: invokevirtual #42
494: iconst_0
495: invokevirtual #43
498: ldc           #41
500: invokevirtual #42
503: invokevirtual #45
506: iload         11
508: ifne          515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #46
519: aload         13
521: invokestatic  #47
524: aload         13
526: invokestatic  #48
529: ldc           #49
531: invokestatic  #50
534: aload         16
536: invokestatic  #47
539: aload         16
541: invokestatic  #48
544: ldc           #49
546: invokestatic  #50
549: aload         17
551: invokestatic  #47
554: aload         17
556: invokestatic  #48
559: ldc           #49
561: invokestatic  #50
564: new           #39
567: dup
568: invokespecial #40
571: ldc           #41
573: invokevirtual #42
576: dload         19
578: invokevirtual #59
581: ldc           #44
583: invokevirtual #42
586: dconst_0
587: invokevirtual #59
590: ldc           #41
592: invokevirtual #42
595: invokevirtual #45
598: dload         19
600: dconst_0
601: dcmpl
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #46
613: new           #39
616: dup
617: invokespecial #40
620: ldc           #41
622: invokevirtual #42
625: dload         21
627: invokevirtual #59
630: ldc           #44
632: invokevirtual #42
635: ldc2_w        #218
638: invokevirtual #59
641: ldc           #41
643: invokevirtual #42
646: invokevirtual #45
649: dload         21
651: ldc2_w        #218
654: dcmpl
655: ifne          662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #46
666: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 5567
End line: 5606
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double17 = simpleVectorialValueChecker16.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker16);
        int int19 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer25 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker28 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer25.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker28);
        int int30 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        int int31 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        double double32 = levenbergMarquardtOptimizer25.getChiSquare();
        int int33 = levenbergMarquardtOptimizer25.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double37 = simpleVectorialValueChecker36.getRelativeThreshold();
        levenbergMarquardtOptimizer25.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter39 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer25);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker40 = levenbergMarquardtOptimizer25.getConvergenceChecker();
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker40);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 35.0d + "'", double37 == 35.0d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #374
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #16
91: dup
92: ldc2_w        #17
95: ldc2_w        #19
98: invokespecial #21
101: astore        8
103: aload         8
105: invokevirtual #88
108: dstore        9
110: aload_1
111: aload         8
113: invokevirtual #22
116: aload_1
117: invokevirtual #53
120: istore        11
122: new           #8
125: dup
126: ldc2_w        #9
129: ldc2_w        #11
132: ldc2_w        #13
135: dconst_1
136: ldc2_w        #13
139: invokespecial #15
142: astore        12
144: new           #16
147: dup
148: ldc2_w        #17
151: ldc2_w        #19
154: invokespecial #21
157: astore        13
159: aload         12
161: aload         13
163: invokevirtual #22
166: aload         12
168: invokevirtual #23
171: istore        14
173: aload         12
175: invokevirtual #23
178: istore        15
180: aload         12
182: invokevirtual #58
185: dstore        16
187: aload         12
189: invokevirtual #23
192: istore        18
194: new           #16
197: dup
198: ldc2_w        #17
201: ldc2_w        #19
204: invokespecial #21
207: astore        19
209: aload         19
211: invokevirtual #88
214: dstore        20
216: aload         12
218: aload         19
220: invokevirtual #22
223: new           #24
226: dup
227: aload         12
229: invokespecial #25
232: astore        22
234: aload         12
236: invokevirtual #73
239: astore        23
241: aload_1
242: aload         23
244: invokevirtual #22
247: new           #39
250: dup
251: invokespecial #40
254: ldc           #41
256: invokevirtual #42
259: iload_3
260: invokevirtual #43
263: ldc           #44
265: invokevirtual #42
268: iconst_0
269: invokevirtual #43
272: ldc           #41
274: invokevirtual #42
277: invokevirtual #45
280: iload_3
281: ifne          288
284: iconst_1
285: goto          289
288: iconst_0
289: invokestatic  #46
292: new           #39
295: dup
296: invokespecial #40
299: ldc           #41
301: invokevirtual #42
304: iload         4
306: invokevirtual #43
309: ldc           #44
311: invokevirtual #42
314: iconst_0
315: invokevirtual #43
318: ldc           #41
320: invokevirtual #42
323: invokevirtual #45
326: iload         4
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #46
339: new           #39
342: dup
343: invokespecial #40
346: ldc           #41
348: invokevirtual #42
351: dload         5
353: invokevirtual #59
356: ldc           #44
358: invokevirtual #42
361: dconst_0
362: invokevirtual #59
365: ldc           #41
367: invokevirtual #42
370: invokevirtual #45
373: dload         5
375: dconst_0
376: dcmpl
377: ifne          384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #46
388: new           #39
391: dup
392: invokespecial #40
395: ldc           #41
397: invokevirtual #42
400: iload         7
402: invokevirtual #43
405: ldc           #44
407: invokevirtual #42
410: iconst_0
411: invokevirtual #43
414: ldc           #41
416: invokevirtual #42
419: invokevirtual #45
422: iload         7
424: ifne          431
427: iconst_1
428: goto          432
431: iconst_0
432: invokestatic  #46
435: new           #39
438: dup
439: invokespecial #40
442: ldc           #41
444: invokevirtual #42
447: dload         9
449: invokevirtual #59
452: ldc           #44
454: invokevirtual #42
457: ldc2_w        #17
460: invokevirtual #59
463: ldc           #41
465: invokevirtual #42
468: invokevirtual #45
471: dload         9
473: ldc2_w        #17
476: dcmpl
477: ifne          484
480: iconst_1
481: goto          485
484: iconst_0
485: invokestatic  #46
488: new           #39
491: dup
492: invokespecial #40
495: ldc           #41
497: invokevirtual #42
500: iload         11
502: invokevirtual #43
505: ldc           #44
507: invokevirtual #42
510: iconst_0
511: invokevirtual #43
514: ldc           #41
516: invokevirtual #42
519: invokevirtual #45
522: iload         11
524: ifne          531
527: iconst_1
528: goto          532
531: iconst_0
532: invokestatic  #46
535: new           #39
538: dup
539: invokespecial #40
542: ldc           #41
544: invokevirtual #42
547: iload         14
549: invokevirtual #43
552: ldc           #44
554: invokevirtual #42
557: iconst_0
558: invokevirtual #43
561: ldc           #41
563: invokevirtual #42
566: invokevirtual #45
569: iload         14
571: ifne          578
574: iconst_1
575: goto          579
578: iconst_0
579: invokestatic  #46
582: new           #39
585: dup
586: invokespecial #40
589: ldc           #41
591: invokevirtual #42
594: iload         15
596: invokevirtual #43
599: ldc           #44
601: invokevirtual #42
604: iconst_0
605: invokevirtual #43
608: ldc           #41
610: invokevirtual #42
613: invokevirtual #45
616: iload         15
618: ifne          625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #46
629: new           #39
632: dup
633: invokespecial #40
636: ldc           #41
638: invokevirtual #42
641: dload         16
643: invokevirtual #59
646: ldc           #44
648: invokevirtual #42
651: dconst_0
652: invokevirtual #59
655: ldc           #41
657: invokevirtual #42
660: invokevirtual #45
663: dload         16
665: dconst_0
666: dcmpl
667: ifne          674
670: iconst_1
671: goto          675
674: iconst_0
675: invokestatic  #46
678: new           #39
681: dup
682: invokespecial #40
685: ldc           #41
687: invokevirtual #42
690: iload         18
692: invokevirtual #43
695: ldc           #44
697: invokevirtual #42
700: iconst_0
701: invokevirtual #43
704: ldc           #41
706: invokevirtual #42
709: invokevirtual #45
712: iload         18
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #46
725: new           #39
728: dup
729: invokespecial #40
732: ldc           #41
734: invokevirtual #42
737: dload         20
739: invokevirtual #59
742: ldc           #44
744: invokevirtual #42
747: ldc2_w        #17
750: invokevirtual #59
753: ldc           #41
755: invokevirtual #42
758: invokevirtual #45
761: dload         20
763: ldc2_w        #17
766: dcmpl
767: ifne          774
770: iconst_1
771: goto          775
774: iconst_0
775: invokestatic  #46
778: aload         23
780: invokestatic  #47
783: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 5609
End line: 5628
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        double double15 = levenbergMarquardtOptimizer5.getRMS();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker16 = null;
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker16);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #375
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: aload_1
93: invokevirtual #53
96: istore        7
98: aload_1
99: invokevirtual #201
102: dstore        8
104: aconst_null
105: astore        10
107: aload_1
108: aload         10
110: invokevirtual #22
113: new           #39
116: dup
117: invokespecial #40
120: ldc           #41
122: invokevirtual #42
125: iload_3
126: invokevirtual #43
129: ldc           #44
131: invokevirtual #42
134: iconst_0
135: invokevirtual #43
138: ldc           #41
140: invokevirtual #42
143: invokevirtual #45
146: iload_3
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #46
158: new           #39
161: dup
162: invokespecial #40
165: ldc           #41
167: invokevirtual #42
170: iload         4
172: invokevirtual #43
175: ldc           #44
177: invokevirtual #42
180: iconst_0
181: invokevirtual #43
184: ldc           #41
186: invokevirtual #42
189: invokevirtual #45
192: iload         4
194: ifne          201
197: iconst_1
198: goto          202
201: iconst_0
202: invokestatic  #46
205: new           #39
208: dup
209: invokespecial #40
212: ldc           #41
214: invokevirtual #42
217: iload         5
219: invokevirtual #43
222: ldc           #44
224: invokevirtual #42
227: iconst_0
228: invokevirtual #43
231: ldc           #41
233: invokevirtual #42
236: invokevirtual #45
239: iload         5
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #46
252: new           #39
255: dup
256: invokespecial #40
259: ldc           #41
261: invokevirtual #42
264: iload         7
266: invokevirtual #43
269: ldc           #44
271: invokevirtual #42
274: iconst_0
275: invokevirtual #43
278: ldc           #41
280: invokevirtual #42
283: invokevirtual #45
286: iload         7
288: ifne          295
291: iconst_1
292: goto          296
295: iconst_0
296: invokestatic  #46
299: dload         8
301: invokestatic  #202
304: invokestatic  #203
307: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 5631
End line: 5704
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker11 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        double double12 = levenbergMarquardtOptimizer5.getRMS();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter13.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = gaussianFitter30.fit(doubleArray37);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer47 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker50 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer47.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker50);
        int int52 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer47.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter55 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer47);
        double[] doubleArray62 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray63 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray63, true);
        double[] doubleArray66 = gaussianFitter55.fit(doubleArray62);
        double[] doubleArray73 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray74 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray74, true);
        double[] doubleArray77 = vectorialPointValuePair76.getValue();
        double[] doubleArray78 = vectorialPointValuePair76.getValue();
        double[] doubleArray79 = vectorialPointValuePair76.getPoint();
        double[] doubleArray80 = gaussianFitter55.fit(doubleArray79);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray80);
        double[] doubleArray82 = vectorialPointValuePair81.getPoint();
        double[] doubleArray83 = gaussianFitter13.fit(10, parametricUnivariateRealFunction16, doubleArray82);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #376
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #73
74: astore        4
76: aload_1
77: invokevirtual #201
80: dstore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        7
92: aload         7
94: invokevirtual #52
97: aconst_null
98: astore        8
100: new           #8
103: dup
104: ldc2_w        #9
107: ldc2_w        #11
110: ldc2_w        #13
113: dconst_1
114: ldc2_w        #13
117: invokespecial #15
120: astore        9
122: new           #16
125: dup
126: ldc2_w        #17
129: ldc2_w        #19
132: invokespecial #21
135: astore        10
137: aload         9
139: aload         10
141: invokevirtual #22
144: aload         9
146: invokevirtual #23
149: istore        11
151: aload         9
153: invokevirtual #23
156: istore        12
158: aload         9
160: invokevirtual #53
163: istore        13
165: new           #24
168: dup
169: aload         9
171: invokespecial #25
174: astore        14
176: bipush        6
178: newarray       double
180: dup
181: iconst_0
182: ldc2_w        #27
185: dastore
186: dup
187: iconst_1
188: ldc2_w        #9
191: dastore
192: dup
193: iconst_2
194: ldc2_w        #13
197: dastore
198: dup
199: iconst_3
200: ldc2_w        #29
203: dastore
204: dup
205: iconst_4
206: ldc2_w        #17
209: dastore
210: dup
211: iconst_5
212: ldc2_w        #31
215: dastore
216: astore        15
218: aconst_null
219: astore        16
221: new           #33
224: dup
225: aload         15
227: aload         16
229: iconst_1
230: invokespecial #34
233: astore        17
235: aload         14
237: aload         15
239: invokevirtual #54
242: astore        18
244: new           #8
247: dup
248: ldc2_w        #9
251: ldc2_w        #11
254: ldc2_w        #13
257: dconst_1
258: ldc2_w        #13
261: invokespecial #15
264: astore        19
266: new           #16
269: dup
270: ldc2_w        #17
273: ldc2_w        #19
276: invokespecial #21
279: astore        20
281: aload         19
283: aload         20
285: invokevirtual #22
288: aload         19
290: invokevirtual #23
293: istore        21
295: aload         19
297: invokevirtual #23
300: istore        22
302: aload         19
304: invokevirtual #53
307: istore        23
309: new           #24
312: dup
313: aload         19
315: invokespecial #25
318: astore        24
320: bipush        6
322: newarray       double
324: dup
325: iconst_0
326: ldc2_w        #27
329: dastore
330: dup
331: iconst_1
332: ldc2_w        #9
335: dastore
336: dup
337: iconst_2
338: ldc2_w        #13
341: dastore
342: dup
343: iconst_3
344: ldc2_w        #29
347: dastore
348: dup
349: iconst_4
350: ldc2_w        #17
353: dastore
354: dup
355: iconst_5
356: ldc2_w        #31
359: dastore
360: astore        25
362: aconst_null
363: astore        26
365: new           #33
368: dup
369: aload         25
371: aload         26
373: iconst_1
374: invokespecial #34
377: astore        27
379: aload         24
381: aload         25
383: invokevirtual #54
386: astore        28
388: bipush        6
390: newarray       double
392: dup
393: iconst_0
394: ldc2_w        #27
397: dastore
398: dup
399: iconst_1
400: ldc2_w        #9
403: dastore
404: dup
405: iconst_2
406: ldc2_w        #13
409: dastore
410: dup
411: iconst_3
412: ldc2_w        #29
415: dastore
416: dup
417: iconst_4
418: ldc2_w        #17
421: dastore
422: dup
423: iconst_5
424: ldc2_w        #31
427: dastore
428: astore        29
430: aconst_null
431: astore        30
433: new           #33
436: dup
437: aload         29
439: aload         30
441: iconst_1
442: invokespecial #34
445: astore        31
447: aload         31
449: invokevirtual #74
452: astore        32
454: aload         31
456: invokevirtual #74
459: astore        33
461: aload         31
463: invokevirtual #75
466: astore        34
468: aload         24
470: aload         34
472: invokevirtual #54
475: astore        35
477: new           #33
480: dup
481: aload         18
483: aload         35
485: invokespecial #109
488: astore        36
490: aload         36
492: invokevirtual #75
495: astore        37
497: aload         7
499: bipush        10
501: aload         8
503: aload         37
505: invokevirtual #35
508: astore        38
510: new           #39
513: dup
514: invokespecial #40
517: ldc           #41
519: invokevirtual #42
522: iload_3
523: invokevirtual #43
526: ldc           #44
528: invokevirtual #42
531: iconst_0
532: invokevirtual #43
535: ldc           #41
537: invokevirtual #42
540: invokevirtual #45
543: iload_3
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #46
555: aload         4
557: invokestatic  #47
560: dload         5
562: invokestatic  #202
565: invokestatic  #203
568: new           #39
571: dup
572: invokespecial #40
575: ldc           #41
577: invokevirtual #42
580: iload         11
582: invokevirtual #43
585: ldc           #44
587: invokevirtual #42
590: iconst_0
591: invokevirtual #43
594: ldc           #41
596: invokevirtual #42
599: invokevirtual #45
602: iload         11
604: ifne          611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #46
615: new           #39
618: dup
619: invokespecial #40
622: ldc           #41
624: invokevirtual #42
627: iload         12
629: invokevirtual #43
632: ldc           #44
634: invokevirtual #42
637: iconst_0
638: invokevirtual #43
641: ldc           #41
643: invokevirtual #42
646: invokevirtual #45
649: iload         12
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #46
662: new           #39
665: dup
666: invokespecial #40
669: ldc           #41
671: invokevirtual #42
674: iload         13
676: invokevirtual #43
679: ldc           #44
681: invokevirtual #42
684: iconst_0
685: invokevirtual #43
688: ldc           #41
690: invokevirtual #42
693: invokevirtual #45
696: iload         13
698: ifne          705
701: iconst_1
702: goto          706
705: iconst_0
706: invokestatic  #46
709: aload         15
711: invokestatic  #47
714: aload         15
716: invokestatic  #48
719: ldc           #49
721: invokestatic  #50
724: aload         18
726: invokestatic  #47
729: aload         18
731: invokestatic  #48
734: ldc           #49
736: invokestatic  #50
739: new           #39
742: dup
743: invokespecial #40
746: ldc           #41
748: invokevirtual #42
751: iload         21
753: invokevirtual #43
756: ldc           #44
758: invokevirtual #42
761: iconst_0
762: invokevirtual #43
765: ldc           #41
767: invokevirtual #42
770: invokevirtual #45
773: iload         21
775: ifne          782
778: iconst_1
779: goto          783
782: iconst_0
783: invokestatic  #46
786: new           #39
789: dup
790: invokespecial #40
793: ldc           #41
795: invokevirtual #42
798: iload         22
800: invokevirtual #43
803: ldc           #44
805: invokevirtual #42
808: iconst_0
809: invokevirtual #43
812: ldc           #41
814: invokevirtual #42
817: invokevirtual #45
820: iload         22
822: ifne          829
825: iconst_1
826: goto          830
829: iconst_0
830: invokestatic  #46
833: new           #39
836: dup
837: invokespecial #40
840: ldc           #41
842: invokevirtual #42
845: iload         23
847: invokevirtual #43
850: ldc           #44
852: invokevirtual #42
855: iconst_0
856: invokevirtual #43
859: ldc           #41
861: invokevirtual #42
864: invokevirtual #45
867: iload         23
869: ifne          876
872: iconst_1
873: goto          877
876: iconst_0
877: invokestatic  #46
880: aload         25
882: invokestatic  #47
885: aload         25
887: invokestatic  #48
890: ldc           #49
892: invokestatic  #50
895: aload         28
897: invokestatic  #47
900: aload         28
902: invokestatic  #48
905: ldc           #49
907: invokestatic  #50
910: aload         29
912: invokestatic  #47
915: aload         29
917: invokestatic  #48
920: ldc           #49
922: invokestatic  #50
925: aload         32
927: invokestatic  #76
930: aload         33
932: invokestatic  #76
935: aload         34
937: invokestatic  #47
940: aload         34
942: invokestatic  #48
945: ldc           #49
947: invokestatic  #50
950: aload         35
952: invokestatic  #47
955: aload         35
957: invokestatic  #48
960: ldc           #49
962: invokestatic  #50
965: aload         37
967: invokestatic  #47
970: aload         37
972: invokestatic  #48
975: ldc           #49
977: invokestatic  #50
980: aload         38
982: invokestatic  #47
985: aload         38
987: invokestatic  #48
990: ldc           #49
992: invokestatic  #50
995: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 5707
End line: 5769
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint59 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, 4.9E-324d, 57.29577951308232d);
        double double60 = weightedObservedPoint59.getWeight();
        double double61 = weightedObservedPoint59.getWeight();
        double double62 = weightedObservedPoint59.getY();
        double double63 = weightedObservedPoint59.getY();
        double double64 = weightedObservedPoint59.getWeight();
        double double65 = weightedObservedPoint59.getWeight();
        gaussianFitter12.addObservedPoint(weightedObservedPoint59);
        double double67 = weightedObservedPoint59.getY();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 57.29577951308232d + "'", double62 == 57.29577951308232d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 57.29577951308232d + "'", double63 == 57.29577951308232d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 57.29577951308232d + "'", double67 == 57.29577951308232d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #377
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: new           #8
89: dup
90: ldc2_w        #9
93: ldc2_w        #11
96: ldc2_w        #13
99: dconst_1
100: ldc2_w        #13
103: invokespecial #15
106: astore        6
108: new           #16
111: dup
112: ldc2_w        #17
115: ldc2_w        #19
118: invokespecial #21
121: astore        7
123: aload         6
125: aload         7
127: invokevirtual #22
130: aload         6
132: invokevirtual #23
135: istore        8
137: aload         6
139: invokevirtual #23
142: istore        9
144: new           #24
147: dup
148: aload         6
150: invokespecial #25
153: astore        10
155: aload         10
157: invokevirtual #52
160: aconst_null
161: astore        11
163: new           #8
166: dup
167: ldc2_w        #9
170: ldc2_w        #11
173: ldc2_w        #13
176: dconst_1
177: ldc2_w        #13
180: invokespecial #15
183: astore        12
185: new           #16
188: dup
189: ldc2_w        #17
192: ldc2_w        #19
195: invokespecial #21
198: astore        13
200: aload         12
202: aload         13
204: invokevirtual #22
207: aload         12
209: invokevirtual #23
212: istore        14
214: aload         12
216: invokevirtual #23
219: istore        15
221: aload         12
223: invokevirtual #53
226: istore        16
228: new           #24
231: dup
232: aload         12
234: invokespecial #25
237: astore        17
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #27
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #9
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #13
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #29
266: dastore
267: dup
268: iconst_4
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #31
278: dastore
279: astore        18
281: aconst_null
282: astore        19
284: new           #33
287: dup
288: aload         18
290: aload         19
292: iconst_1
293: invokespecial #34
296: astore        20
298: aload         17
300: aload         18
302: invokevirtual #54
305: astore        21
307: aload         10
309: aload         11
311: aload         21
313: invokevirtual #55
316: astore        22
318: aload         5
320: aload         21
322: invokevirtual #54
325: astore        23
327: aload         5
329: invokevirtual #52
332: new           #217
335: dup
336: dconst_0
337: ldc2_w        #218
340: ldc2_w        #220
343: invokespecial #222
346: astore        24
348: aload         24
350: invokevirtual #223
353: dstore        25
355: aload         24
357: invokevirtual #223
360: dstore        27
362: aload         24
364: invokevirtual #231
367: dstore        29
369: aload         24
371: invokevirtual #231
374: dstore        31
376: aload         24
378: invokevirtual #223
381: dstore        33
383: aload         24
385: invokevirtual #223
388: dstore        35
390: aload         5
392: aload         24
394: invokevirtual #174
397: aload         24
399: invokevirtual #231
402: dstore        37
404: new           #39
407: dup
408: invokespecial #40
411: ldc           #41
413: invokevirtual #42
416: iload_3
417: invokevirtual #43
420: ldc           #44
422: invokevirtual #42
425: iconst_0
426: invokevirtual #43
429: ldc           #41
431: invokevirtual #42
434: invokevirtual #45
437: iload_3
438: ifne          445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #46
449: new           #39
452: dup
453: invokespecial #40
456: ldc           #41
458: invokevirtual #42
461: iload         4
463: invokevirtual #43
466: ldc           #44
468: invokevirtual #42
471: iconst_0
472: invokevirtual #43
475: ldc           #41
477: invokevirtual #42
480: invokevirtual #45
483: iload         4
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #46
496: new           #39
499: dup
500: invokespecial #40
503: ldc           #41
505: invokevirtual #42
508: iload         8
510: invokevirtual #43
513: ldc           #44
515: invokevirtual #42
518: iconst_0
519: invokevirtual #43
522: ldc           #41
524: invokevirtual #42
527: invokevirtual #45
530: iload         8
532: ifne          539
535: iconst_1
536: goto          540
539: iconst_0
540: invokestatic  #46
543: new           #39
546: dup
547: invokespecial #40
550: ldc           #41
552: invokevirtual #42
555: iload         9
557: invokevirtual #43
560: ldc           #44
562: invokevirtual #42
565: iconst_0
566: invokevirtual #43
569: ldc           #41
571: invokevirtual #42
574: invokevirtual #45
577: iload         9
579: ifne          586
582: iconst_1
583: goto          587
586: iconst_0
587: invokestatic  #46
590: new           #39
593: dup
594: invokespecial #40
597: ldc           #41
599: invokevirtual #42
602: iload         14
604: invokevirtual #43
607: ldc           #44
609: invokevirtual #42
612: iconst_0
613: invokevirtual #43
616: ldc           #41
618: invokevirtual #42
621: invokevirtual #45
624: iload         14
626: ifne          633
629: iconst_1
630: goto          634
633: iconst_0
634: invokestatic  #46
637: new           #39
640: dup
641: invokespecial #40
644: ldc           #41
646: invokevirtual #42
649: iload         15
651: invokevirtual #43
654: ldc           #44
656: invokevirtual #42
659: iconst_0
660: invokevirtual #43
663: ldc           #41
665: invokevirtual #42
668: invokevirtual #45
671: iload         15
673: ifne          680
676: iconst_1
677: goto          681
680: iconst_0
681: invokestatic  #46
684: new           #39
687: dup
688: invokespecial #40
691: ldc           #41
693: invokevirtual #42
696: iload         16
698: invokevirtual #43
701: ldc           #44
703: invokevirtual #42
706: iconst_0
707: invokevirtual #43
710: ldc           #41
712: invokevirtual #42
715: invokevirtual #45
718: iload         16
720: ifne          727
723: iconst_1
724: goto          728
727: iconst_0
728: invokestatic  #46
731: aload         18
733: invokestatic  #47
736: aload         18
738: invokestatic  #48
741: ldc           #49
743: invokestatic  #50
746: aload         21
748: invokestatic  #47
751: aload         21
753: invokestatic  #48
756: ldc           #49
758: invokestatic  #50
761: aload         22
763: invokestatic  #47
766: aload         22
768: invokestatic  #48
771: ldc           #49
773: invokestatic  #50
776: aload         23
778: invokestatic  #47
781: aload         23
783: invokestatic  #48
786: ldc           #49
788: invokestatic  #50
791: new           #39
794: dup
795: invokespecial #40
798: ldc           #41
800: invokevirtual #42
803: dload         25
805: invokevirtual #59
808: ldc           #44
810: invokevirtual #42
813: dconst_0
814: invokevirtual #59
817: ldc           #41
819: invokevirtual #42
822: invokevirtual #45
825: dload         25
827: dconst_0
828: dcmpl
829: ifne          836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #46
840: new           #39
843: dup
844: invokespecial #40
847: ldc           #41
849: invokevirtual #42
852: dload         27
854: invokevirtual #59
857: ldc           #44
859: invokevirtual #42
862: dconst_0
863: invokevirtual #59
866: ldc           #41
868: invokevirtual #42
871: invokevirtual #45
874: dload         27
876: dconst_0
877: dcmpl
878: ifne          885
881: iconst_1
882: goto          886
885: iconst_0
886: invokestatic  #46
889: new           #39
892: dup
893: invokespecial #40
896: ldc           #41
898: invokevirtual #42
901: dload         29
903: invokevirtual #59
906: ldc           #44
908: invokevirtual #42
911: ldc2_w        #220
914: invokevirtual #59
917: ldc           #41
919: invokevirtual #42
922: invokevirtual #45
925: dload         29
927: ldc2_w        #220
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #46
942: new           #39
945: dup
946: invokespecial #40
949: ldc           #41
951: invokevirtual #42
954: dload         31
956: invokevirtual #59
959: ldc           #44
961: invokevirtual #42
964: ldc2_w        #220
967: invokevirtual #59
970: ldc           #41
972: invokevirtual #42
975: invokevirtual #45
978: dload         31
980: ldc2_w        #220
983: dcmpl
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #46
995: new           #39
998: dup
999: invokespecial #40
1002: ldc           #41
1004: invokevirtual #42
1007: dload         33
1009: invokevirtual #59
1012: ldc           #44
1014: invokevirtual #42
1017: dconst_0
1018: invokevirtual #59
1021: ldc           #41
1023: invokevirtual #42
1026: invokevirtual #45
1029: dload         33
1031: dconst_0
1032: dcmpl
1033: ifne          1040
1036: iconst_1
1037: goto          1041
1040: iconst_0
1041: invokestatic  #46
1044: new           #39
1047: dup
1048: invokespecial #40
1051: ldc           #41
1053: invokevirtual #42
1056: dload         35
1058: invokevirtual #59
1061: ldc           #44
1063: invokevirtual #42
1066: dconst_0
1067: invokevirtual #59
1070: ldc           #41
1072: invokevirtual #42
1075: invokevirtual #45
1078: dload         35
1080: dconst_0
1081: dcmpl
1082: ifne          1089
1085: iconst_1
1086: goto          1090
1089: iconst_0
1090: invokestatic  #46
1093: new           #39
1096: dup
1097: invokespecial #40
1100: ldc           #41
1102: invokevirtual #42
1105: dload         37
1107: invokevirtual #59
1110: ldc           #44
1112: invokevirtual #42
1115: ldc2_w        #220
1118: invokevirtual #59
1121: ldc           #41
1123: invokevirtual #42
1126: invokevirtual #45
1129: dload         37
1131: ldc2_w        #220
1134: dcmpl
1135: ifne          1142
1138: iconst_1
1139: goto          1143
1142: iconst_0
1143: invokestatic  #46
1146: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 5772
End line: 5793
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int16 = levenbergMarquardtOptimizer5.getEvaluations();
        int int17 = levenbergMarquardtOptimizer5.getEvaluations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #160
86: istore        7
88: aload_1
89: invokevirtual #58
92: dstore        8
94: new           #24
97: dup
98: aload_1
99: invokespecial #25
102: astore        10
104: aload_1
105: invokevirtual #53
108: istore        11
110: aload_1
111: invokevirtual #53
114: istore        12
116: new           #39
119: dup
120: invokespecial #40
123: ldc           #41
125: invokevirtual #42
128: iload_3
129: invokevirtual #43
132: ldc           #44
134: invokevirtual #42
137: iconst_0
138: invokevirtual #43
141: ldc           #41
143: invokevirtual #42
146: invokevirtual #45
149: iload_3
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #46
161: new           #39
164: dup
165: invokespecial #40
168: ldc           #41
170: invokevirtual #42
173: iload         4
175: invokevirtual #43
178: ldc           #44
180: invokevirtual #42
183: iconst_0
184: invokevirtual #43
187: ldc           #41
189: invokevirtual #42
192: invokevirtual #45
195: iload         4
197: ifne          204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #46
208: new           #39
211: dup
212: invokespecial #40
215: ldc           #41
217: invokevirtual #42
220: dload         5
222: invokevirtual #59
225: ldc           #44
227: invokevirtual #42
230: dconst_0
231: invokevirtual #59
234: ldc           #41
236: invokevirtual #42
239: invokevirtual #45
242: dload         5
244: dconst_0
245: dcmpl
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #46
257: new           #39
260: dup
261: invokespecial #40
264: ldc           #41
266: invokevirtual #42
269: iload         7
271: invokevirtual #43
274: ldc           #44
276: invokevirtual #42
279: iconst_0
280: invokevirtual #43
283: ldc           #41
285: invokevirtual #42
288: invokevirtual #45
291: iload         7
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #46
304: new           #39
307: dup
308: invokespecial #40
311: ldc           #41
313: invokevirtual #42
316: dload         8
318: invokevirtual #59
321: ldc           #44
323: invokevirtual #42
326: dconst_0
327: invokevirtual #59
330: ldc           #41
332: invokevirtual #42
335: invokevirtual #45
338: dload         8
340: dconst_0
341: dcmpl
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #46
353: new           #39
356: dup
357: invokespecial #40
360: ldc           #41
362: invokevirtual #42
365: iload         11
367: invokevirtual #43
370: ldc           #44
372: invokevirtual #42
375: iconst_0
376: invokevirtual #43
379: ldc           #41
381: invokevirtual #42
384: invokevirtual #45
387: iload         11
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #46
400: new           #39
403: dup
404: invokespecial #40
407: ldc           #41
409: invokevirtual #42
412: iload         12
414: invokevirtual #43
417: ldc           #44
419: invokevirtual #42
422: iconst_0
423: invokevirtual #43
426: ldc           #41
428: invokevirtual #42
431: invokevirtual #45
434: iload         12
436: ifne          443
439: iconst_1
440: goto          444
443: iconst_0
444: invokestatic  #46
447: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 5796
End line: 5835
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint(1.505149978319906d, 968.9859567243174d);
        double[] doubleArray23 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray24 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray23, doubleArray24, true);
        double[] doubleArray27 = vectorialPointValuePair26.getValue();
        double[] doubleArray28 = vectorialPointValuePair26.getValue();
        double[] doubleArray29 = vectorialPointValuePair26.getPoint();
        double[] doubleArray30 = vectorialPointValuePair26.getPointRef();
        double[] doubleArray31 = vectorialPointValuePair26.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray32 = gaussianFitter12.fit(doubleArray31);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #379
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aload         5
95: ldc2_w        #380
98: ldc2_w        #382
101: invokevirtual #158
104: bipush        6
106: newarray       double
108: dup
109: iconst_0
110: ldc2_w        #27
113: dastore
114: dup
115: iconst_1
116: ldc2_w        #9
119: dastore
120: dup
121: iconst_2
122: ldc2_w        #13
125: dastore
126: dup
127: iconst_3
128: ldc2_w        #29
131: dastore
132: dup
133: iconst_4
134: ldc2_w        #17
137: dastore
138: dup
139: iconst_5
140: ldc2_w        #31
143: dastore
144: astore        7
146: aconst_null
147: astore        8
149: new           #33
152: dup
153: aload         7
155: aload         8
157: iconst_1
158: invokespecial #34
161: astore        9
163: aload         9
165: invokevirtual #74
168: astore        10
170: aload         9
172: invokevirtual #74
175: astore        11
177: aload         9
179: invokevirtual #75
182: astore        12
184: aload         9
186: invokevirtual #151
189: astore        13
191: aload         9
193: invokevirtual #75
196: astore        14
198: aload         5
200: aload         14
202: invokevirtual #54
205: astore        15
207: ldc           #124
209: invokestatic  #37
212: goto          217
215: astore        15
217: new           #39
220: dup
221: invokespecial #40
224: ldc           #41
226: invokevirtual #42
229: iload_3
230: invokevirtual #43
233: ldc           #44
235: invokevirtual #42
238: iconst_0
239: invokevirtual #43
242: ldc           #41
244: invokevirtual #42
247: invokevirtual #45
250: iload_3
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #46
262: new           #39
265: dup
266: invokespecial #40
269: ldc           #41
271: invokevirtual #42
274: iload         4
276: invokevirtual #43
279: ldc           #44
281: invokevirtual #42
284: iconst_0
285: invokevirtual #43
288: ldc           #41
290: invokevirtual #42
293: invokevirtual #45
296: iload         4
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #46
309: aload         6
311: invokestatic  #47
314: aload         7
316: invokestatic  #47
319: aload         7
321: invokestatic  #48
324: ldc           #49
326: invokestatic  #50
329: aload         10
331: invokestatic  #76
334: aload         11
336: invokestatic  #76
339: aload         12
341: invokestatic  #47
344: aload         12
346: invokestatic  #48
349: ldc           #49
351: invokestatic  #50
354: aload         13
356: invokestatic  #47
359: aload         13
361: invokestatic  #48
364: ldc           #49
366: invokestatic  #50
369: aload         14
371: invokestatic  #47
374: aload         14
376: invokestatic  #48
379: ldc           #49
381: invokestatic  #50
384: return
Exception table:
from    to  target type
198   212   215   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 5838
End line: 5856
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter15.addObservedPoint((double) '4', 3.4965076770633607d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #384
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #53
86: istore        7
88: aload_1
89: invokevirtual #58
92: dstore        8
94: new           #24
97: dup
98: aload_1
99: invokespecial #25
102: astore        10
104: aload         10
106: ldc2_w        #19
109: ldc2_w        #385
112: invokevirtual #158
115: new           #39
118: dup
119: invokespecial #40
122: ldc           #41
124: invokevirtual #42
127: iload_3
128: invokevirtual #43
131: ldc           #44
133: invokevirtual #42
136: iconst_0
137: invokevirtual #43
140: ldc           #41
142: invokevirtual #42
145: invokevirtual #45
148: iload_3
149: ifne          156
152: iconst_1
153: goto          157
156: iconst_0
157: invokestatic  #46
160: new           #39
163: dup
164: invokespecial #40
167: ldc           #41
169: invokevirtual #42
172: iload         4
174: invokevirtual #43
177: ldc           #44
179: invokevirtual #42
182: iconst_0
183: invokevirtual #43
186: ldc           #41
188: invokevirtual #42
191: invokevirtual #45
194: iload         4
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #46
207: new           #39
210: dup
211: invokespecial #40
214: ldc           #41
216: invokevirtual #42
219: dload         5
221: invokevirtual #59
224: ldc           #44
226: invokevirtual #42
229: dconst_0
230: invokevirtual #59
233: ldc           #41
235: invokevirtual #42
238: invokevirtual #45
241: dload         5
243: dconst_0
244: dcmpl
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #46
256: new           #39
259: dup
260: invokespecial #40
263: ldc           #41
265: invokevirtual #42
268: iload         7
270: invokevirtual #43
273: ldc           #44
275: invokevirtual #42
278: iconst_0
279: invokevirtual #43
282: ldc           #41
284: invokevirtual #42
287: invokevirtual #45
290: iload         7
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #46
303: new           #39
306: dup
307: invokespecial #40
310: ldc           #41
312: invokevirtual #42
315: dload         8
317: invokevirtual #59
320: ldc           #44
322: invokevirtual #42
325: dconst_0
326: invokevirtual #59
329: ldc           #41
331: invokevirtual #42
334: invokevirtual #45
337: dload         8
339: dconst_0
340: dcmpl
341: ifne          348
344: iconst_1
345: goto          349
348: iconst_0
349: invokestatic  #46
352: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 5859
End line: 5925
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        double[] doubleArray0 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker9 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer6.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker9);
        int int11 = levenbergMarquardtOptimizer6.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer6.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer6.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer6);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer6);
        double[] doubleArray22 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray23 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair25 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray22, doubleArray23, true);
        double[] doubleArray26 = vectorialPointValuePair25.getValue();
        double[] doubleArray27 = vectorialPointValuePair25.getValue();
        double[] doubleArray28 = vectorialPointValuePair25.getPoint();
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = vectorialPointValuePair38.getValue();
        double[] doubleArray40 = vectorialPointValuePair38.getValue();
        double[] doubleArray41 = vectorialPointValuePair38.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair43 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray28, doubleArray41, false);
        double[] doubleArray44 = vectorialPointValuePair43.getPoint();
        double[] doubleArray45 = gaussianFitter15.fit(doubleArray44);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair47 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray0, doubleArray44, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer53 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker56 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer53.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker56);
        int int58 = levenbergMarquardtOptimizer53.getMaxEvaluations();
        int int59 = levenbergMarquardtOptimizer53.getMaxEvaluations();
        int int60 = levenbergMarquardtOptimizer53.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter61 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer53);
        double[] doubleArray68 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray69 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair71 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray68, doubleArray69, true);
        double[] doubleArray72 = gaussianFitter61.fit(doubleArray68);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair73 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray0, doubleArray68);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #9
34: ldc2_w        #11
37: ldc2_w        #13
40: dconst_1
41: ldc2_w        #13
44: invokespecial #15
47: astore_2
48: new           #16
51: dup
52: ldc2_w        #17
55: ldc2_w        #19
58: invokespecial #21
61: astore_3
62: aload_2
63: aload_3
64: invokevirtual #22
67: aload_2
68: invokevirtual #23
71: istore        4
73: aload_2
74: invokevirtual #23
77: istore        5
79: aload_2
80: invokevirtual #53
83: istore        6
85: new           #67
88: dup
89: aload_2
90: invokespecial #68
93: astore        7
95: new           #24
98: dup
99: aload_2
100: invokespecial #25
103: astore        8
105: bipush        6
107: newarray       double
109: dup
110: iconst_0
111: ldc2_w        #27
114: dastore
115: dup
116: iconst_1
117: ldc2_w        #9
120: dastore
121: dup
122: iconst_2
123: ldc2_w        #13
126: dastore
127: dup
128: iconst_3
129: ldc2_w        #29
132: dastore
133: dup
134: iconst_4
135: ldc2_w        #17
138: dastore
139: dup
140: iconst_5
141: ldc2_w        #31
144: dastore
145: astore        9
147: aconst_null
148: astore        10
150: new           #33
153: dup
154: aload         9
156: aload         10
158: iconst_1
159: invokespecial #34
162: astore        11
164: aload         11
166: invokevirtual #74
169: astore        12
171: aload         11
173: invokevirtual #74
176: astore        13
178: aload         11
180: invokevirtual #75
183: astore        14
185: bipush        6
187: newarray       double
189: dup
190: iconst_0
191: ldc2_w        #27
194: dastore
195: dup
196: iconst_1
197: ldc2_w        #9
200: dastore
201: dup
202: iconst_2
203: ldc2_w        #13
206: dastore
207: dup
208: iconst_3
209: ldc2_w        #29
212: dastore
213: dup
214: iconst_4
215: ldc2_w        #17
218: dastore
219: dup
220: iconst_5
221: ldc2_w        #31
224: dastore
225: astore        15
227: aconst_null
228: astore        16
230: new           #33
233: dup
234: aload         15
236: aload         16
238: iconst_1
239: invokespecial #34
242: astore        17
244: aload         17
246: invokevirtual #74
249: astore        18
251: aload         17
253: invokevirtual #74
256: astore        19
258: aload         17
260: invokevirtual #75
263: astore        20
265: new           #33
268: dup
269: aload         14
271: aload         20
273: iconst_0
274: invokespecial #34
277: astore        21
279: aload         21
281: invokevirtual #75
284: astore        22
286: aload         8
288: aload         22
290: invokevirtual #54
293: astore        23
295: new           #33
298: dup
299: aload_1
300: aload         22
302: iconst_0
303: invokespecial #34
306: astore        24
308: new           #8
311: dup
312: ldc2_w        #9
315: ldc2_w        #11
318: ldc2_w        #13
321: dconst_1
322: ldc2_w        #13
325: invokespecial #15
328: astore        25
330: new           #16
333: dup
334: ldc2_w        #17
337: ldc2_w        #19
340: invokespecial #21
343: astore        26
345: aload         25
347: aload         26
349: invokevirtual #22
352: aload         25
354: invokevirtual #23
357: istore        27
359: aload         25
361: invokevirtual #23
364: istore        28
366: aload         25
368: invokevirtual #53
371: istore        29
373: new           #24
376: dup
377: aload         25
379: invokespecial #25
382: astore        30
384: bipush        6
386: newarray       double
388: dup
389: iconst_0
390: ldc2_w        #27
393: dastore
394: dup
395: iconst_1
396: ldc2_w        #9
399: dastore
400: dup
401: iconst_2
402: ldc2_w        #13
405: dastore
406: dup
407: iconst_3
408: ldc2_w        #29
411: dastore
412: dup
413: iconst_4
414: ldc2_w        #17
417: dastore
418: dup
419: iconst_5
420: ldc2_w        #31
423: dastore
424: astore        31
426: aconst_null
427: astore        32
429: new           #33
432: dup
433: aload         31
435: aload         32
437: iconst_1
438: invokespecial #34
441: astore        33
443: aload         30
445: aload         31
447: invokevirtual #54
450: astore        34
452: new           #33
455: dup
456: aload_1
457: aload         31
459: invokespecial #109
462: astore        35
464: new           #39
467: dup
468: invokespecial #40
471: ldc           #41
473: invokevirtual #42
476: iload         4
478: invokevirtual #43
481: ldc           #44
483: invokevirtual #42
486: iconst_0
487: invokevirtual #43
490: ldc           #41
492: invokevirtual #42
495: invokevirtual #45
498: iload         4
500: ifne          507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #46
511: new           #39
514: dup
515: invokespecial #40
518: ldc           #41
520: invokevirtual #42
523: iload         5
525: invokevirtual #43
528: ldc           #44
530: invokevirtual #42
533: iconst_0
534: invokevirtual #43
537: ldc           #41
539: invokevirtual #42
542: invokevirtual #45
545: iload         5
547: ifne          554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #46
558: new           #39
561: dup
562: invokespecial #40
565: ldc           #41
567: invokevirtual #42
570: iload         6
572: invokevirtual #43
575: ldc           #44
577: invokevirtual #42
580: iconst_0
581: invokevirtual #43
584: ldc           #41
586: invokevirtual #42
589: invokevirtual #45
592: iload         6
594: ifne          601
597: iconst_1
598: goto          602
601: iconst_0
602: invokestatic  #46
605: aload         9
607: invokestatic  #47
610: aload         9
612: invokestatic  #48
615: ldc           #49
617: invokestatic  #50
620: aload         12
622: invokestatic  #76
625: aload         13
627: invokestatic  #76
630: aload         14
632: invokestatic  #47
635: aload         14
637: invokestatic  #48
640: ldc           #49
642: invokestatic  #50
645: aload         15
647: invokestatic  #47
650: aload         15
652: invokestatic  #48
655: ldc           #49
657: invokestatic  #50
660: aload         18
662: invokestatic  #76
665: aload         19
667: invokestatic  #76
670: aload         20
672: invokestatic  #47
675: aload         20
677: invokestatic  #48
680: ldc           #49
682: invokestatic  #50
685: aload         22
687: invokestatic  #47
690: aload         22
692: invokestatic  #48
695: ldc           #49
697: invokestatic  #50
700: aload         23
702: invokestatic  #47
705: aload         23
707: invokestatic  #48
710: ldc           #49
712: invokestatic  #50
715: new           #39
718: dup
719: invokespecial #40
722: ldc           #41
724: invokevirtual #42
727: iload         27
729: invokevirtual #43
732: ldc           #44
734: invokevirtual #42
737: iconst_0
738: invokevirtual #43
741: ldc           #41
743: invokevirtual #42
746: invokevirtual #45
749: iload         27
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #46
762: new           #39
765: dup
766: invokespecial #40
769: ldc           #41
771: invokevirtual #42
774: iload         28
776: invokevirtual #43
779: ldc           #44
781: invokevirtual #42
784: iconst_0
785: invokevirtual #43
788: ldc           #41
790: invokevirtual #42
793: invokevirtual #45
796: iload         28
798: ifne          805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #46
809: new           #39
812: dup
813: invokespecial #40
816: ldc           #41
818: invokevirtual #42
821: iload         29
823: invokevirtual #43
826: ldc           #44
828: invokevirtual #42
831: iconst_0
832: invokevirtual #43
835: ldc           #41
837: invokevirtual #42
840: invokevirtual #45
843: iload         29
845: ifne          852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #46
856: aload         31
858: invokestatic  #47
861: aload         31
863: invokestatic  #48
866: ldc           #49
868: invokestatic  #50
871: aload         34
873: invokestatic  #47
876: aload         34
878: invokestatic  #48
881: ldc           #49
883: invokestatic  #50
886: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 5928
End line: 5933
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(0.0d, (double) 2L, 5.545971375998505E30d, (double) (byte) 10, 1.5707963267948966d);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter6 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #388
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: ldc2_w        #389
33: ldc2_w        #391
36: ldc2_w        #239
39: ldc2_w        #393
42: invokespecial #15
45: astore_1
46: new           #24
49: dup
50: aload_1
51: invokespecial #25
54: astore_2
55: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 5936
End line: 5997
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        double[] doubleArray6 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray7 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair9 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray6, doubleArray7, true);
        double[] doubleArray10 = vectorialPointValuePair9.getValue();
        double[] doubleArray11 = vectorialPointValuePair9.getValue();
        double[] doubleArray12 = vectorialPointValuePair9.getPoint();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer31 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker34 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer31.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker34);
        int int36 = levenbergMarquardtOptimizer31.getMaxEvaluations();
        int int37 = levenbergMarquardtOptimizer31.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter38 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer31);
        gaussianFitter38.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction40 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer46.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker49);
        int int51 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int52 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer46.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter54 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer46);
        double[] doubleArray61 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray62 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray62, true);
        double[] doubleArray65 = gaussianFitter54.fit(doubleArray61);
        double[] doubleArray66 = gaussianFitter38.fit(parametricUnivariateRealFunction40, doubleArray65);
        double[] doubleArray67 = gaussianFitter25.fit(doubleArray65);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray65, false);
        double[] doubleArray70 = vectorialPointValuePair69.getValueRef();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #395
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: ldc2_w        #27
34: dastore
35: dup
36: iconst_1
37: ldc2_w        #9
40: dastore
41: dup
42: iconst_2
43: ldc2_w        #13
46: dastore
47: dup
48: iconst_3
49: ldc2_w        #29
52: dastore
53: dup
54: iconst_4
55: ldc2_w        #17
58: dastore
59: dup
60: iconst_5
61: ldc2_w        #31
64: dastore
65: astore_1
66: aconst_null
67: astore_2
68: new           #33
71: dup
72: aload_1
73: aload_2
74: iconst_1
75: invokespecial #34
78: astore_3
79: aload_3
80: invokevirtual #74
83: astore        4
85: aload_3
86: invokevirtual #74
89: astore        5
91: aload_3
92: invokevirtual #75
95: astore        6
97: new           #8
100: dup
101: ldc2_w        #9
104: ldc2_w        #11
107: ldc2_w        #13
110: dconst_1
111: ldc2_w        #13
114: invokespecial #15
117: astore        7
119: new           #16
122: dup
123: ldc2_w        #17
126: ldc2_w        #19
129: invokespecial #21
132: astore        8
134: aload         7
136: aload         8
138: invokevirtual #22
141: aload         7
143: invokevirtual #23
146: istore        9
148: aload         7
150: invokevirtual #23
153: istore        10
155: new           #24
158: dup
159: aload         7
161: invokespecial #25
164: astore        11
166: new           #8
169: dup
170: ldc2_w        #9
173: ldc2_w        #11
176: ldc2_w        #13
179: dconst_1
180: ldc2_w        #13
183: invokespecial #15
186: astore        12
188: new           #16
191: dup
192: ldc2_w        #17
195: ldc2_w        #19
198: invokespecial #21
201: astore        13
203: aload         12
205: aload         13
207: invokevirtual #22
210: aload         12
212: invokevirtual #23
215: istore        14
217: aload         12
219: invokevirtual #23
222: istore        15
224: new           #24
227: dup
228: aload         12
230: invokespecial #25
233: astore        16
235: aload         16
237: invokevirtual #52
240: aconst_null
241: astore        17
243: new           #8
246: dup
247: ldc2_w        #9
250: ldc2_w        #11
253: ldc2_w        #13
256: dconst_1
257: ldc2_w        #13
260: invokespecial #15
263: astore        18
265: new           #16
268: dup
269: ldc2_w        #17
272: ldc2_w        #19
275: invokespecial #21
278: astore        19
280: aload         18
282: aload         19
284: invokevirtual #22
287: aload         18
289: invokevirtual #23
292: istore        20
294: aload         18
296: invokevirtual #23
299: istore        21
301: aload         18
303: invokevirtual #53
306: istore        22
308: new           #24
311: dup
312: aload         18
314: invokespecial #25
317: astore        23
319: bipush        6
321: newarray       double
323: dup
324: iconst_0
325: ldc2_w        #27
328: dastore
329: dup
330: iconst_1
331: ldc2_w        #9
334: dastore
335: dup
336: iconst_2
337: ldc2_w        #13
340: dastore
341: dup
342: iconst_3
343: ldc2_w        #29
346: dastore
347: dup
348: iconst_4
349: ldc2_w        #17
352: dastore
353: dup
354: iconst_5
355: ldc2_w        #31
358: dastore
359: astore        24
361: aconst_null
362: astore        25
364: new           #33
367: dup
368: aload         24
370: aload         25
372: iconst_1
373: invokespecial #34
376: astore        26
378: aload         23
380: aload         24
382: invokevirtual #54
385: astore        27
387: aload         16
389: aload         17
391: aload         27
393: invokevirtual #55
396: astore        28
398: aload         11
400: aload         27
402: invokevirtual #54
405: astore        29
407: new           #33
410: dup
411: aload         6
413: aload         27
415: iconst_0
416: invokespecial #34
419: astore        30
421: aload         30
423: invokevirtual #183
426: astore        31
428: aload_1
429: invokestatic  #47
432: aload_1
433: invokestatic  #48
436: ldc           #49
438: invokestatic  #50
441: aload         4
443: invokestatic  #76
446: aload         5
448: invokestatic  #76
451: aload         6
453: invokestatic  #47
456: aload         6
458: invokestatic  #48
461: ldc           #49
463: invokestatic  #50
466: new           #39
469: dup
470: invokespecial #40
473: ldc           #41
475: invokevirtual #42
478: iload         9
480: invokevirtual #43
483: ldc           #44
485: invokevirtual #42
488: iconst_0
489: invokevirtual #43
492: ldc           #41
494: invokevirtual #42
497: invokevirtual #45
500: iload         9
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #46
513: new           #39
516: dup
517: invokespecial #40
520: ldc           #41
522: invokevirtual #42
525: iload         10
527: invokevirtual #43
530: ldc           #44
532: invokevirtual #42
535: iconst_0
536: invokevirtual #43
539: ldc           #41
541: invokevirtual #42
544: invokevirtual #45
547: iload         10
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #46
560: new           #39
563: dup
564: invokespecial #40
567: ldc           #41
569: invokevirtual #42
572: iload         14
574: invokevirtual #43
577: ldc           #44
579: invokevirtual #42
582: iconst_0
583: invokevirtual #43
586: ldc           #41
588: invokevirtual #42
591: invokevirtual #45
594: iload         14
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #46
607: new           #39
610: dup
611: invokespecial #40
614: ldc           #41
616: invokevirtual #42
619: iload         15
621: invokevirtual #43
624: ldc           #44
626: invokevirtual #42
629: iconst_0
630: invokevirtual #43
633: ldc           #41
635: invokevirtual #42
638: invokevirtual #45
641: iload         15
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #46
654: new           #39
657: dup
658: invokespecial #40
661: ldc           #41
663: invokevirtual #42
666: iload         20
668: invokevirtual #43
671: ldc           #44
673: invokevirtual #42
676: iconst_0
677: invokevirtual #43
680: ldc           #41
682: invokevirtual #42
685: invokevirtual #45
688: iload         20
690: ifne          697
693: iconst_1
694: goto          698
697: iconst_0
698: invokestatic  #46
701: new           #39
704: dup
705: invokespecial #40
708: ldc           #41
710: invokevirtual #42
713: iload         21
715: invokevirtual #43
718: ldc           #44
720: invokevirtual #42
723: iconst_0
724: invokevirtual #43
727: ldc           #41
729: invokevirtual #42
732: invokevirtual #45
735: iload         21
737: ifne          744
740: iconst_1
741: goto          745
744: iconst_0
745: invokestatic  #46
748: new           #39
751: dup
752: invokespecial #40
755: ldc           #41
757: invokevirtual #42
760: iload         22
762: invokevirtual #43
765: ldc           #44
767: invokevirtual #42
770: iconst_0
771: invokevirtual #43
774: ldc           #41
776: invokevirtual #42
779: invokevirtual #45
782: iload         22
784: ifne          791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #46
795: aload         24
797: invokestatic  #47
800: aload         24
802: invokestatic  #48
805: ldc           #49
807: invokestatic  #50
810: aload         27
812: invokestatic  #47
815: aload         27
817: invokestatic  #48
820: ldc           #49
822: invokestatic  #50
825: aload         28
827: invokestatic  #47
830: aload         28
832: invokestatic  #48
835: ldc           #49
837: invokestatic  #50
840: aload         29
842: invokestatic  #47
845: aload         29
847: invokestatic  #48
850: ldc           #49
852: invokestatic  #50
855: aload         31
857: invokestatic  #47
860: aload         31
862: invokestatic  #48
865: ldc           #49
867: invokestatic  #50
870: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 6000
End line: 6045
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric15 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = curveFitter14.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric15, doubleArray40);
        double[] doubleArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray44 = parametric15.gradient(0.0d, doubleArray43);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #396
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #67
91: dup
92: aload_1
93: invokespecial #68
96: astore        8
98: new           #117
101: dup
102: invokespecial #118
105: astore        9
107: new           #8
110: dup
111: ldc2_w        #9
114: ldc2_w        #11
117: ldc2_w        #13
120: dconst_1
121: ldc2_w        #13
124: invokespecial #15
127: astore        10
129: new           #16
132: dup
133: ldc2_w        #17
136: ldc2_w        #19
139: invokespecial #21
142: astore        11
144: aload         10
146: aload         11
148: invokevirtual #22
151: aload         10
153: invokevirtual #23
156: istore        12
158: aload         10
160: invokevirtual #23
163: istore        13
165: aload         10
167: invokevirtual #53
170: istore        14
172: new           #24
175: dup
176: aload         10
178: invokespecial #25
181: astore        15
183: bipush        6
185: newarray       double
187: dup
188: iconst_0
189: ldc2_w        #27
192: dastore
193: dup
194: iconst_1
195: ldc2_w        #9
198: dastore
199: dup
200: iconst_2
201: ldc2_w        #13
204: dastore
205: dup
206: iconst_3
207: ldc2_w        #29
210: dastore
211: dup
212: iconst_4
213: ldc2_w        #17
216: dastore
217: dup
218: iconst_5
219: ldc2_w        #31
222: dastore
223: astore        16
225: aconst_null
226: astore        17
228: new           #33
231: dup
232: aload         16
234: aload         17
236: iconst_1
237: invokespecial #34
240: astore        18
242: aload         15
244: aload         16
246: invokevirtual #54
249: astore        19
251: aload         8
253: aload         9
255: aload         19
257: invokevirtual #89
260: astore        20
262: aconst_null
263: astore        21
265: aload         9
267: dconst_0
268: aload         21
270: invokevirtual #119
273: astore        22
275: ldc           #120
277: invokestatic  #37
280: goto          285
283: astore        22
285: new           #39
288: dup
289: invokespecial #40
292: ldc           #41
294: invokevirtual #42
297: iload_3
298: invokevirtual #43
301: ldc           #44
303: invokevirtual #42
306: iconst_0
307: invokevirtual #43
310: ldc           #41
312: invokevirtual #42
315: invokevirtual #45
318: iload_3
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #46
330: new           #39
333: dup
334: invokespecial #40
337: ldc           #41
339: invokevirtual #42
342: iload         4
344: invokevirtual #43
347: ldc           #44
349: invokevirtual #42
352: iconst_0
353: invokevirtual #43
356: ldc           #41
358: invokevirtual #42
361: invokevirtual #45
364: iload         4
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #46
377: new           #39
380: dup
381: invokespecial #40
384: ldc           #41
386: invokevirtual #42
389: dload         5
391: invokevirtual #59
394: ldc           #44
396: invokevirtual #42
399: dconst_0
400: invokevirtual #59
403: ldc           #41
405: invokevirtual #42
408: invokevirtual #45
411: dload         5
413: dconst_0
414: dcmpl
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #46
426: new           #39
429: dup
430: invokespecial #40
433: ldc           #41
435: invokevirtual #42
438: iload         7
440: invokevirtual #43
443: ldc           #44
445: invokevirtual #42
448: iconst_0
449: invokevirtual #43
452: ldc           #41
454: invokevirtual #42
457: invokevirtual #45
460: iload         7
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #46
473: new           #39
476: dup
477: invokespecial #40
480: ldc           #41
482: invokevirtual #42
485: iload         12
487: invokevirtual #43
490: ldc           #44
492: invokevirtual #42
495: iconst_0
496: invokevirtual #43
499: ldc           #41
501: invokevirtual #42
504: invokevirtual #45
507: iload         12
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #46
520: new           #39
523: dup
524: invokespecial #40
527: ldc           #41
529: invokevirtual #42
532: iload         13
534: invokevirtual #43
537: ldc           #44
539: invokevirtual #42
542: iconst_0
543: invokevirtual #43
546: ldc           #41
548: invokevirtual #42
551: invokevirtual #45
554: iload         13
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #46
567: new           #39
570: dup
571: invokespecial #40
574: ldc           #41
576: invokevirtual #42
579: iload         14
581: invokevirtual #43
584: ldc           #44
586: invokevirtual #42
589: iconst_0
590: invokevirtual #43
593: ldc           #41
595: invokevirtual #42
598: invokevirtual #45
601: iload         14
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #46
614: aload         16
616: invokestatic  #47
619: aload         16
621: invokestatic  #48
624: ldc           #49
626: invokestatic  #50
629: aload         19
631: invokestatic  #47
634: aload         19
636: invokestatic  #48
639: ldc           #49
641: invokestatic  #50
644: aload         20
646: invokestatic  #47
649: aload         20
651: invokestatic  #48
654: ldc           #49
656: invokestatic  #50
659: return
Exception table:
from    to  target type
265   280   283   Class org/apache/commons/math/exception/NullArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 6048
End line: 6101
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        gaussianFitter12.addObservedPoint(2.2227587494850775E-162d, (double) 4, 2.7755575615628914E-17d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray59 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 1 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #397
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: new           #8
89: dup
90: ldc2_w        #9
93: ldc2_w        #11
96: ldc2_w        #13
99: dconst_1
100: ldc2_w        #13
103: invokespecial #15
106: astore        6
108: new           #16
111: dup
112: ldc2_w        #17
115: ldc2_w        #19
118: invokespecial #21
121: astore        7
123: aload         6
125: aload         7
127: invokevirtual #22
130: aload         6
132: invokevirtual #23
135: istore        8
137: aload         6
139: invokevirtual #23
142: istore        9
144: new           #24
147: dup
148: aload         6
150: invokespecial #25
153: astore        10
155: aload         10
157: invokevirtual #52
160: aconst_null
161: astore        11
163: new           #8
166: dup
167: ldc2_w        #9
170: ldc2_w        #11
173: ldc2_w        #13
176: dconst_1
177: ldc2_w        #13
180: invokespecial #15
183: astore        12
185: new           #16
188: dup
189: ldc2_w        #17
192: ldc2_w        #19
195: invokespecial #21
198: astore        13
200: aload         12
202: aload         13
204: invokevirtual #22
207: aload         12
209: invokevirtual #23
212: istore        14
214: aload         12
216: invokevirtual #23
219: istore        15
221: aload         12
223: invokevirtual #53
226: istore        16
228: new           #24
231: dup
232: aload         12
234: invokespecial #25
237: astore        17
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #27
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #9
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #13
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #29
266: dastore
267: dup
268: iconst_4
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #31
278: dastore
279: astore        18
281: aconst_null
282: astore        19
284: new           #33
287: dup
288: aload         18
290: aload         19
292: iconst_1
293: invokespecial #34
296: astore        20
298: aload         17
300: aload         18
302: invokevirtual #54
305: astore        21
307: aload         10
309: aload         11
311: aload         21
313: invokevirtual #55
316: astore        22
318: aload         5
320: aload         21
322: invokevirtual #54
325: astore        23
327: aload         5
329: ldc2_w        #103
332: ldc2_w        #257
335: ldc2_w        #259
338: invokevirtual #98
341: aload         5
343: invokevirtual #63
346: astore        24
348: ldc_w         #362
351: invokestatic  #37
354: goto          359
357: astore        24
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload_3
372: invokevirtual #43
375: ldc           #44
377: invokevirtual #42
380: iconst_0
381: invokevirtual #43
384: ldc           #41
386: invokevirtual #42
389: invokevirtual #45
392: iload_3
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #46
404: new           #39
407: dup
408: invokespecial #40
411: ldc           #41
413: invokevirtual #42
416: iload         4
418: invokevirtual #43
421: ldc           #44
423: invokevirtual #42
426: iconst_0
427: invokevirtual #43
430: ldc           #41
432: invokevirtual #42
435: invokevirtual #45
438: iload         4
440: ifne          447
443: iconst_1
444: goto          448
447: iconst_0
448: invokestatic  #46
451: new           #39
454: dup
455: invokespecial #40
458: ldc           #41
460: invokevirtual #42
463: iload         8
465: invokevirtual #43
468: ldc           #44
470: invokevirtual #42
473: iconst_0
474: invokevirtual #43
477: ldc           #41
479: invokevirtual #42
482: invokevirtual #45
485: iload         8
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #46
498: new           #39
501: dup
502: invokespecial #40
505: ldc           #41
507: invokevirtual #42
510: iload         9
512: invokevirtual #43
515: ldc           #44
517: invokevirtual #42
520: iconst_0
521: invokevirtual #43
524: ldc           #41
526: invokevirtual #42
529: invokevirtual #45
532: iload         9
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #46
545: new           #39
548: dup
549: invokespecial #40
552: ldc           #41
554: invokevirtual #42
557: iload         14
559: invokevirtual #43
562: ldc           #44
564: invokevirtual #42
567: iconst_0
568: invokevirtual #43
571: ldc           #41
573: invokevirtual #42
576: invokevirtual #45
579: iload         14
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #46
592: new           #39
595: dup
596: invokespecial #40
599: ldc           #41
601: invokevirtual #42
604: iload         15
606: invokevirtual #43
609: ldc           #44
611: invokevirtual #42
614: iconst_0
615: invokevirtual #43
618: ldc           #41
620: invokevirtual #42
623: invokevirtual #45
626: iload         15
628: ifne          635
631: iconst_1
632: goto          636
635: iconst_0
636: invokestatic  #46
639: new           #39
642: dup
643: invokespecial #40
646: ldc           #41
648: invokevirtual #42
651: iload         16
653: invokevirtual #43
656: ldc           #44
658: invokevirtual #42
661: iconst_0
662: invokevirtual #43
665: ldc           #41
667: invokevirtual #42
670: invokevirtual #45
673: iload         16
675: ifne          682
678: iconst_1
679: goto          683
682: iconst_0
683: invokestatic  #46
686: aload         18
688: invokestatic  #47
691: aload         18
693: invokestatic  #48
696: ldc           #49
698: invokestatic  #50
701: aload         21
703: invokestatic  #47
706: aload         21
708: invokestatic  #48
711: ldc           #49
713: invokestatic  #50
716: aload         22
718: invokestatic  #47
721: aload         22
723: invokestatic  #48
726: ldc           #49
728: invokestatic  #50
731: aload         23
733: invokestatic  #47
736: aload         23
738: invokestatic  #48
741: ldc           #49
743: invokestatic  #50
746: return
Exception table:
from    to  target type
341   354   357   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 6104
End line: 6126
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray15 = levenbergMarquardtOptimizer5.guessParametersErrors();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than, or equal to, the minimum (0): no degrees of freedom (0 measurements, 0 parameters)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #398
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: aload_1
83: invokevirtual #160
86: istore        6
88: new           #24
91: dup
92: aload_1
93: invokespecial #25
96: astore        7
98: aload_1
99: invokevirtual #69
102: astore        8
104: ldc           #70
106: invokestatic  #37
109: goto          114
112: astore        8
114: new           #39
117: dup
118: invokespecial #40
121: ldc           #41
123: invokevirtual #42
126: iload_3
127: invokevirtual #43
130: ldc           #44
132: invokevirtual #42
135: iconst_0
136: invokevirtual #43
139: ldc           #41
141: invokevirtual #42
144: invokevirtual #45
147: iload_3
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #46
159: new           #39
162: dup
163: invokespecial #40
166: ldc           #41
168: invokevirtual #42
171: iload         4
173: invokevirtual #43
176: ldc           #44
178: invokevirtual #42
181: iconst_0
182: invokevirtual #43
185: ldc           #41
187: invokevirtual #42
190: invokevirtual #45
193: iload         4
195: ifne          202
198: iconst_1
199: goto          203
202: iconst_0
203: invokestatic  #46
206: new           #39
209: dup
210: invokespecial #40
213: ldc           #41
215: invokevirtual #42
218: iload         5
220: invokevirtual #43
223: ldc           #44
225: invokevirtual #42
228: iconst_0
229: invokevirtual #43
232: ldc           #41
234: invokevirtual #42
237: invokevirtual #45
240: iload         5
242: ifne          249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #46
253: new           #39
256: dup
257: invokespecial #40
260: ldc           #41
262: invokevirtual #42
265: iload         6
267: invokevirtual #43
270: ldc           #44
272: invokevirtual #42
275: iconst_0
276: invokevirtual #43
279: ldc           #41
281: invokevirtual #42
284: invokevirtual #45
287: iload         6
289: ifne          296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #46
300: return
Exception table:
from    to  target type
98   109   112   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 6129
End line: 6151
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter15.addObservedPoint(9.53674316406539E-7d, (double) 2.384186E-7f, 1833.4649444186343d);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint23 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint((double) 31.999998f, (double) 32.000004f, (double) 32.000004f);
        double double24 = weightedObservedPoint23.getX();
        gaussianFitter15.addObservedPoint(weightedObservedPoint23);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 32.000003814697266d + "'", double24 == 32.000003814697266d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #160
86: istore        7
88: aload_1
89: invokevirtual #58
92: dstore        8
94: new           #24
97: dup
98: aload_1
99: invokespecial #25
102: astore        10
104: aload         10
106: ldc2_w        #140
109: ldc2_w        #400
112: ldc2_w        #402
115: invokevirtual #98
118: new           #217
121: dup
122: ldc2_w        #404
125: ldc2_w        #208
128: ldc2_w        #208
131: invokespecial #222
134: astore        11
136: aload         11
138: invokevirtual #373
141: dstore        12
143: aload         10
145: aload         11
147: invokevirtual #174
150: new           #39
153: dup
154: invokespecial #40
157: ldc           #41
159: invokevirtual #42
162: iload_3
163: invokevirtual #43
166: ldc           #44
168: invokevirtual #42
171: iconst_0
172: invokevirtual #43
175: ldc           #41
177: invokevirtual #42
180: invokevirtual #45
183: iload_3
184: ifne          191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #46
195: new           #39
198: dup
199: invokespecial #40
202: ldc           #41
204: invokevirtual #42
207: iload         4
209: invokevirtual #43
212: ldc           #44
214: invokevirtual #42
217: iconst_0
218: invokevirtual #43
221: ldc           #41
223: invokevirtual #42
226: invokevirtual #45
229: iload         4
231: ifne          238
234: iconst_1
235: goto          239
238: iconst_0
239: invokestatic  #46
242: new           #39
245: dup
246: invokespecial #40
249: ldc           #41
251: invokevirtual #42
254: dload         5
256: invokevirtual #59
259: ldc           #44
261: invokevirtual #42
264: dconst_0
265: invokevirtual #59
268: ldc           #41
270: invokevirtual #42
273: invokevirtual #45
276: dload         5
278: dconst_0
279: dcmpl
280: ifne          287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #46
291: new           #39
294: dup
295: invokespecial #40
298: ldc           #41
300: invokevirtual #42
303: iload         7
305: invokevirtual #43
308: ldc           #44
310: invokevirtual #42
313: iconst_0
314: invokevirtual #43
317: ldc           #41
319: invokevirtual #42
322: invokevirtual #45
325: iload         7
327: ifne          334
330: iconst_1
331: goto          335
334: iconst_0
335: invokestatic  #46
338: new           #39
341: dup
342: invokespecial #40
345: ldc           #41
347: invokevirtual #42
350: dload         8
352: invokevirtual #59
355: ldc           #44
357: invokevirtual #42
360: dconst_0
361: invokevirtual #59
364: ldc           #41
366: invokevirtual #42
369: invokevirtual #45
372: dload         8
374: dconst_0
375: dcmpl
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #46
387: new           #39
390: dup
391: invokespecial #40
394: ldc           #41
396: invokevirtual #42
399: dload         12
401: invokevirtual #59
404: ldc           #44
406: invokevirtual #42
409: ldc2_w        #208
412: invokevirtual #59
415: ldc           #41
417: invokevirtual #42
420: invokevirtual #45
423: dload         12
425: ldc2_w        #208
428: dcmpl
429: ifne          436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #46
440: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 6154
End line: 6232
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer46.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker49);
        int int51 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int52 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer46.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter54 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer46);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction55 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer61 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker64 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer61.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker64);
        int int66 = levenbergMarquardtOptimizer61.getMaxEvaluations();
        int int67 = levenbergMarquardtOptimizer61.getMaxEvaluations();
        int int68 = levenbergMarquardtOptimizer61.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter69 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer61);
        double[] doubleArray76 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray77 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair79 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray76, doubleArray77, true);
        double[] doubleArray80 = gaussianFitter69.fit(doubleArray76);
        double[] doubleArray81 = curveFitter54.fit(parametricUnivariateRealFunction55, doubleArray76);
        double[] doubleArray82 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray76, doubleArray82);
        double[] doubleArray84 = vectorialPointValuePair83.getPointRef();
        double[] doubleArray85 = vectorialPointValuePair83.getPointRef();
        double[] doubleArray86 = vectorialPointValuePair83.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair88 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray86, false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #406
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #52
91: aconst_null
92: astore        6
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        7
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        8
131: aload         7
133: aload         8
135: invokevirtual #22
138: aload         7
140: invokevirtual #23
143: istore        9
145: aload         7
147: invokevirtual #23
150: istore        10
152: aload         7
154: invokevirtual #53
157: istore        11
159: new           #24
162: dup
163: aload         7
165: invokespecial #25
168: astore        12
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        13
212: aconst_null
213: astore        14
215: new           #33
218: dup
219: aload         13
221: aload         14
223: iconst_1
224: invokespecial #34
227: astore        15
229: aload         12
231: aload         13
233: invokevirtual #54
236: astore        16
238: aload         5
240: aload         6
242: aload         16
244: invokevirtual #55
247: astore        17
249: new           #8
252: dup
253: ldc2_w        #9
256: ldc2_w        #11
259: ldc2_w        #13
262: dconst_1
263: ldc2_w        #13
266: invokespecial #15
269: astore        18
271: new           #16
274: dup
275: ldc2_w        #17
278: ldc2_w        #19
281: invokespecial #21
284: astore        19
286: aload         18
288: aload         19
290: invokevirtual #22
293: aload         18
295: invokevirtual #23
298: istore        20
300: aload         18
302: invokevirtual #23
305: istore        21
307: aload         18
309: invokevirtual #53
312: istore        22
314: new           #67
317: dup
318: aload         18
320: invokespecial #68
323: astore        23
325: aconst_null
326: astore        24
328: new           #8
331: dup
332: ldc2_w        #9
335: ldc2_w        #11
338: ldc2_w        #13
341: dconst_1
342: ldc2_w        #13
345: invokespecial #15
348: astore        25
350: new           #16
353: dup
354: ldc2_w        #17
357: ldc2_w        #19
360: invokespecial #21
363: astore        26
365: aload         25
367: aload         26
369: invokevirtual #22
372: aload         25
374: invokevirtual #23
377: istore        27
379: aload         25
381: invokevirtual #23
384: istore        28
386: aload         25
388: invokevirtual #53
391: istore        29
393: new           #24
396: dup
397: aload         25
399: invokespecial #25
402: astore        30
404: bipush        6
406: newarray       double
408: dup
409: iconst_0
410: ldc2_w        #27
413: dastore
414: dup
415: iconst_1
416: ldc2_w        #9
419: dastore
420: dup
421: iconst_2
422: ldc2_w        #13
425: dastore
426: dup
427: iconst_3
428: ldc2_w        #29
431: dastore
432: dup
433: iconst_4
434: ldc2_w        #17
437: dastore
438: dup
439: iconst_5
440: ldc2_w        #31
443: dastore
444: astore        31
446: aconst_null
447: astore        32
449: new           #33
452: dup
453: aload         31
455: aload         32
457: iconst_1
458: invokespecial #34
461: astore        33
463: aload         30
465: aload         31
467: invokevirtual #54
470: astore        34
472: aload         23
474: aload         24
476: aload         31
478: invokevirtual #89
481: astore        35
483: aconst_null
484: astore        36
486: new           #33
489: dup
490: aload         31
492: aload         36
494: invokespecial #109
497: astore        37
499: aload         37
501: invokevirtual #151
504: astore        38
506: aload         37
508: invokevirtual #151
511: astore        39
513: aload         37
515: invokevirtual #75
518: astore        40
520: new           #33
523: dup
524: aload         16
526: aload         40
528: iconst_0
529: invokespecial #34
532: astore        41
534: new           #39
537: dup
538: invokespecial #40
541: ldc           #41
543: invokevirtual #42
546: iload_3
547: invokevirtual #43
550: ldc           #44
552: invokevirtual #42
555: iconst_0
556: invokevirtual #43
559: ldc           #41
561: invokevirtual #42
564: invokevirtual #45
567: iload_3
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #46
579: new           #39
582: dup
583: invokespecial #40
586: ldc           #41
588: invokevirtual #42
591: iload         4
593: invokevirtual #43
596: ldc           #44
598: invokevirtual #42
601: iconst_0
602: invokevirtual #43
605: ldc           #41
607: invokevirtual #42
610: invokevirtual #45
613: iload         4
615: ifne          622
618: iconst_1
619: goto          623
622: iconst_0
623: invokestatic  #46
626: new           #39
629: dup
630: invokespecial #40
633: ldc           #41
635: invokevirtual #42
638: iload         9
640: invokevirtual #43
643: ldc           #44
645: invokevirtual #42
648: iconst_0
649: invokevirtual #43
652: ldc           #41
654: invokevirtual #42
657: invokevirtual #45
660: iload         9
662: ifne          669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #46
673: new           #39
676: dup
677: invokespecial #40
680: ldc           #41
682: invokevirtual #42
685: iload         10
687: invokevirtual #43
690: ldc           #44
692: invokevirtual #42
695: iconst_0
696: invokevirtual #43
699: ldc           #41
701: invokevirtual #42
704: invokevirtual #45
707: iload         10
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #46
720: new           #39
723: dup
724: invokespecial #40
727: ldc           #41
729: invokevirtual #42
732: iload         11
734: invokevirtual #43
737: ldc           #44
739: invokevirtual #42
742: iconst_0
743: invokevirtual #43
746: ldc           #41
748: invokevirtual #42
751: invokevirtual #45
754: iload         11
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #46
767: aload         13
769: invokestatic  #47
772: aload         13
774: invokestatic  #48
777: ldc           #49
779: invokestatic  #50
782: aload         16
784: invokestatic  #47
787: aload         16
789: invokestatic  #48
792: ldc           #49
794: invokestatic  #50
797: aload         17
799: invokestatic  #47
802: aload         17
804: invokestatic  #48
807: ldc           #49
809: invokestatic  #50
812: new           #39
815: dup
816: invokespecial #40
819: ldc           #41
821: invokevirtual #42
824: iload         20
826: invokevirtual #43
829: ldc           #44
831: invokevirtual #42
834: iconst_0
835: invokevirtual #43
838: ldc           #41
840: invokevirtual #42
843: invokevirtual #45
846: iload         20
848: ifne          855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #46
859: new           #39
862: dup
863: invokespecial #40
866: ldc           #41
868: invokevirtual #42
871: iload         21
873: invokevirtual #43
876: ldc           #44
878: invokevirtual #42
881: iconst_0
882: invokevirtual #43
885: ldc           #41
887: invokevirtual #42
890: invokevirtual #45
893: iload         21
895: ifne          902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #46
906: new           #39
909: dup
910: invokespecial #40
913: ldc           #41
915: invokevirtual #42
918: iload         22
920: invokevirtual #43
923: ldc           #44
925: invokevirtual #42
928: iconst_0
929: invokevirtual #43
932: ldc           #41
934: invokevirtual #42
937: invokevirtual #45
940: iload         22
942: ifne          949
945: iconst_1
946: goto          950
949: iconst_0
950: invokestatic  #46
953: new           #39
956: dup
957: invokespecial #40
960: ldc           #41
962: invokevirtual #42
965: iload         27
967: invokevirtual #43
970: ldc           #44
972: invokevirtual #42
975: iconst_0
976: invokevirtual #43
979: ldc           #41
981: invokevirtual #42
984: invokevirtual #45
987: iload         27
989: ifne          996
992: iconst_1
993: goto          997
996: iconst_0
997: invokestatic  #46
1000: new           #39
1003: dup
1004: invokespecial #40
1007: ldc           #41
1009: invokevirtual #42
1012: iload         28
1014: invokevirtual #43
1017: ldc           #44
1019: invokevirtual #42
1022: iconst_0
1023: invokevirtual #43
1026: ldc           #41
1028: invokevirtual #42
1031: invokevirtual #45
1034: iload         28
1036: ifne          1043
1039: iconst_1
1040: goto          1044
1043: iconst_0
1044: invokestatic  #46
1047: new           #39
1050: dup
1051: invokespecial #40
1054: ldc           #41
1056: invokevirtual #42
1059: iload         29
1061: invokevirtual #43
1064: ldc           #44
1066: invokevirtual #42
1069: iconst_0
1070: invokevirtual #43
1073: ldc           #41
1075: invokevirtual #42
1078: invokevirtual #45
1081: iload         29
1083: ifne          1090
1086: iconst_1
1087: goto          1091
1090: iconst_0
1091: invokestatic  #46
1094: aload         31
1096: invokestatic  #47
1099: aload         31
1101: invokestatic  #48
1104: ldc           #49
1106: invokestatic  #50
1109: aload         34
1111: invokestatic  #47
1114: aload         34
1116: invokestatic  #48
1119: ldc           #49
1121: invokestatic  #50
1124: aload         35
1126: invokestatic  #47
1129: aload         35
1131: invokestatic  #48
1134: ldc           #49
1136: invokestatic  #50
1139: aload         38
1141: invokestatic  #47
1144: aload         38
1146: invokestatic  #48
1149: ldc           #49
1151: invokestatic  #50
1154: aload         39
1156: invokestatic  #47
1159: aload         39
1161: invokestatic  #48
1164: ldc           #49
1166: invokestatic  #50
1169: aload         40
1171: invokestatic  #47
1174: aload         40
1176: invokestatic  #48
1179: ldc           #49
1181: invokestatic  #50
1184: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 6235
End line: 6313
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        double[] doubleArray8 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray9 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair11 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray8, doubleArray9, true);
        double[] doubleArray18 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray19 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray19, true);
        double[] doubleArray22 = vectorialPointValuePair21.getValue();
        double[] doubleArray23 = vectorialPointValuePair21.getValue();
        double[] doubleArray24 = vectorialPointValuePair21.getPoint();
        double[] doubleArray31 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray32 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray32, true);
        double[] doubleArray35 = vectorialPointValuePair34.getValue();
        double[] doubleArray36 = vectorialPointValuePair34.getValue();
        double[] doubleArray37 = vectorialPointValuePair34.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray37, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer45 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker48 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer45.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker48);
        int int50 = levenbergMarquardtOptimizer45.getMaxEvaluations();
        int int51 = levenbergMarquardtOptimizer45.getMaxEvaluations();
        int int52 = levenbergMarquardtOptimizer45.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter53 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer45);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction54 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer60 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker63 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer60.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker63);
        int int65 = levenbergMarquardtOptimizer60.getMaxEvaluations();
        int int66 = levenbergMarquardtOptimizer60.getMaxEvaluations();
        int int67 = levenbergMarquardtOptimizer60.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter68 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer60);
        double[] doubleArray75 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray76 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray75, doubleArray76, true);
        double[] doubleArray79 = gaussianFitter68.fit(doubleArray75);
        double[] doubleArray80 = curveFitter53.fit(parametricUnivariateRealFunction54, doubleArray75);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray80);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray8, doubleArray80, true);
        double[] doubleArray84 = vectorialPointValuePair83.getValueRef();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray85 = parametric0.gradient((double) (byte) 100, doubleArray84);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #407
20: aastore
21: invokevirtual #7
24: pop
25: new           #117
28: dup
29: invokespecial #118
32: astore_1
33: bipush        6
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #27
42: dastore
43: dup
44: iconst_1
45: ldc2_w        #9
48: dastore
49: dup
50: iconst_2
51: ldc2_w        #13
54: dastore
55: dup
56: iconst_3
57: ldc2_w        #29
60: dastore
61: dup
62: iconst_4
63: ldc2_w        #17
66: dastore
67: dup
68: iconst_5
69: ldc2_w        #31
72: dastore
73: astore_2
74: aconst_null
75: astore_3
76: new           #33
79: dup
80: aload_2
81: aload_3
82: iconst_1
83: invokespecial #34
86: astore        4
88: bipush        6
90: newarray       double
92: dup
93: iconst_0
94: ldc2_w        #27
97: dastore
98: dup
99: iconst_1
100: ldc2_w        #9
103: dastore
104: dup
105: iconst_2
106: ldc2_w        #13
109: dastore
110: dup
111: iconst_3
112: ldc2_w        #29
115: dastore
116: dup
117: iconst_4
118: ldc2_w        #17
121: dastore
122: dup
123: iconst_5
124: ldc2_w        #31
127: dastore
128: astore        5
130: aconst_null
131: astore        6
133: new           #33
136: dup
137: aload         5
139: aload         6
141: iconst_1
142: invokespecial #34
145: astore        7
147: aload         7
149: invokevirtual #74
152: astore        8
154: aload         7
156: invokevirtual #74
159: astore        9
161: aload         7
163: invokevirtual #75
166: astore        10
168: bipush        6
170: newarray       double
172: dup
173: iconst_0
174: ldc2_w        #27
177: dastore
178: dup
179: iconst_1
180: ldc2_w        #9
183: dastore
184: dup
185: iconst_2
186: ldc2_w        #13
189: dastore
190: dup
191: iconst_3
192: ldc2_w        #29
195: dastore
196: dup
197: iconst_4
198: ldc2_w        #17
201: dastore
202: dup
203: iconst_5
204: ldc2_w        #31
207: dastore
208: astore        11
210: aconst_null
211: astore        12
213: new           #33
216: dup
217: aload         11
219: aload         12
221: iconst_1
222: invokespecial #34
225: astore        13
227: aload         13
229: invokevirtual #74
232: astore        14
234: aload         13
236: invokevirtual #74
239: astore        15
241: aload         13
243: invokevirtual #75
246: astore        16
248: new           #33
251: dup
252: aload         10
254: aload         16
256: iconst_0
257: invokespecial #34
260: astore        17
262: new           #8
265: dup
266: ldc2_w        #9
269: ldc2_w        #11
272: ldc2_w        #13
275: dconst_1
276: ldc2_w        #13
279: invokespecial #15
282: astore        18
284: new           #16
287: dup
288: ldc2_w        #17
291: ldc2_w        #19
294: invokespecial #21
297: astore        19
299: aload         18
301: aload         19
303: invokevirtual #22
306: aload         18
308: invokevirtual #23
311: istore        20
313: aload         18
315: invokevirtual #23
318: istore        21
320: aload         18
322: invokevirtual #53
325: istore        22
327: new           #67
330: dup
331: aload         18
333: invokespecial #68
336: astore        23
338: aconst_null
339: astore        24
341: new           #8
344: dup
345: ldc2_w        #9
348: ldc2_w        #11
351: ldc2_w        #13
354: dconst_1
355: ldc2_w        #13
358: invokespecial #15
361: astore        25
363: new           #16
366: dup
367: ldc2_w        #17
370: ldc2_w        #19
373: invokespecial #21
376: astore        26
378: aload         25
380: aload         26
382: invokevirtual #22
385: aload         25
387: invokevirtual #23
390: istore        27
392: aload         25
394: invokevirtual #23
397: istore        28
399: aload         25
401: invokevirtual #53
404: istore        29
406: new           #24
409: dup
410: aload         25
412: invokespecial #25
415: astore        30
417: bipush        6
419: newarray       double
421: dup
422: iconst_0
423: ldc2_w        #27
426: dastore
427: dup
428: iconst_1
429: ldc2_w        #9
432: dastore
433: dup
434: iconst_2
435: ldc2_w        #13
438: dastore
439: dup
440: iconst_3
441: ldc2_w        #29
444: dastore
445: dup
446: iconst_4
447: ldc2_w        #17
450: dastore
451: dup
452: iconst_5
453: ldc2_w        #31
456: dastore
457: astore        31
459: aconst_null
460: astore        32
462: new           #33
465: dup
466: aload         31
468: aload         32
470: iconst_1
471: invokespecial #34
474: astore        33
476: aload         30
478: aload         31
480: invokevirtual #54
483: astore        34
485: aload         23
487: aload         24
489: aload         31
491: invokevirtual #89
494: astore        35
496: new           #33
499: dup
500: aload         16
502: aload         35
504: invokespecial #109
507: astore        36
509: new           #33
512: dup
513: aload_2
514: aload         35
516: iconst_1
517: invokespecial #34
520: astore        37
522: aload         37
524: invokevirtual #183
527: astore        38
529: aload_1
530: ldc2_w        #13
533: aload         38
535: invokevirtual #119
538: astore        39
540: ldc           #124
542: invokestatic  #37
545: goto          550
548: astore        39
550: aload_2
551: invokestatic  #47
554: aload_2
555: invokestatic  #48
558: ldc           #49
560: invokestatic  #50
563: aload         5
565: invokestatic  #47
568: aload         5
570: invokestatic  #48
573: ldc           #49
575: invokestatic  #50
578: aload         8
580: invokestatic  #76
583: aload         9
585: invokestatic  #76
588: aload         10
590: invokestatic  #47
593: aload         10
595: invokestatic  #48
598: ldc           #49
600: invokestatic  #50
603: aload         11
605: invokestatic  #47
608: aload         11
610: invokestatic  #48
613: ldc           #49
615: invokestatic  #50
618: aload         14
620: invokestatic  #76
623: aload         15
625: invokestatic  #76
628: aload         16
630: invokestatic  #47
633: aload         16
635: invokestatic  #48
638: ldc           #49
640: invokestatic  #50
643: new           #39
646: dup
647: invokespecial #40
650: ldc           #41
652: invokevirtual #42
655: iload         20
657: invokevirtual #43
660: ldc           #44
662: invokevirtual #42
665: iconst_0
666: invokevirtual #43
669: ldc           #41
671: invokevirtual #42
674: invokevirtual #45
677: iload         20
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #46
690: new           #39
693: dup
694: invokespecial #40
697: ldc           #41
699: invokevirtual #42
702: iload         21
704: invokevirtual #43
707: ldc           #44
709: invokevirtual #42
712: iconst_0
713: invokevirtual #43
716: ldc           #41
718: invokevirtual #42
721: invokevirtual #45
724: iload         21
726: ifne          733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #46
737: new           #39
740: dup
741: invokespecial #40
744: ldc           #41
746: invokevirtual #42
749: iload         22
751: invokevirtual #43
754: ldc           #44
756: invokevirtual #42
759: iconst_0
760: invokevirtual #43
763: ldc           #41
765: invokevirtual #42
768: invokevirtual #45
771: iload         22
773: ifne          780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #46
784: new           #39
787: dup
788: invokespecial #40
791: ldc           #41
793: invokevirtual #42
796: iload         27
798: invokevirtual #43
801: ldc           #44
803: invokevirtual #42
806: iconst_0
807: invokevirtual #43
810: ldc           #41
812: invokevirtual #42
815: invokevirtual #45
818: iload         27
820: ifne          827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #46
831: new           #39
834: dup
835: invokespecial #40
838: ldc           #41
840: invokevirtual #42
843: iload         28
845: invokevirtual #43
848: ldc           #44
850: invokevirtual #42
853: iconst_0
854: invokevirtual #43
857: ldc           #41
859: invokevirtual #42
862: invokevirtual #45
865: iload         28
867: ifne          874
870: iconst_1
871: goto          875
874: iconst_0
875: invokestatic  #46
878: new           #39
881: dup
882: invokespecial #40
885: ldc           #41
887: invokevirtual #42
890: iload         29
892: invokevirtual #43
895: ldc           #44
897: invokevirtual #42
900: iconst_0
901: invokevirtual #43
904: ldc           #41
906: invokevirtual #42
909: invokevirtual #45
912: iload         29
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #46
925: aload         31
927: invokestatic  #47
930: aload         31
932: invokestatic  #48
935: ldc           #49
937: invokestatic  #50
940: aload         34
942: invokestatic  #47
945: aload         34
947: invokestatic  #48
950: ldc           #49
952: invokestatic  #50
955: aload         35
957: invokestatic  #47
960: aload         35
962: invokestatic  #48
965: ldc           #49
967: invokestatic  #50
970: aload         38
972: invokestatic  #47
975: aload         38
977: invokestatic  #48
980: ldc           #49
982: invokestatic  #50
985: return
Exception table:
from    to  target type
529   545   548   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 6316
End line: 6360
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker9 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer6.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker9);
        int int11 = levenbergMarquardtOptimizer6.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer6.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer6);
        gaussianFitter13.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction15 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = gaussianFitter13.fit(parametricUnivariateRealFunction15, doubleArray40);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray42 = gaussianFitter13.getObservations();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.optimization.OptimizationException: weigth array must contain at least one non-zero value", (java.lang.Object[]) weightedObservedPointArray42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser parameterGuesser44 = new org.apache.commons.math.optimization.fitting.GaussianFitter.ParameterGuesser(weightedObservedPointArray42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #408
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #52
91: aconst_null
92: astore        6
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        7
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        8
131: aload         7
133: aload         8
135: invokevirtual #22
138: aload         7
140: invokevirtual #23
143: istore        9
145: aload         7
147: invokevirtual #23
150: istore        10
152: aload         7
154: invokevirtual #53
157: istore        11
159: new           #24
162: dup
163: aload         7
165: invokespecial #25
168: astore        12
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        13
212: aconst_null
213: astore        14
215: new           #33
218: dup
219: aload         13
221: aload         14
223: iconst_1
224: invokespecial #34
227: astore        15
229: aload         12
231: aload         13
233: invokevirtual #54
236: astore        16
238: aload         5
240: aload         6
242: aload         16
244: invokevirtual #55
247: astore        17
249: aload         5
251: invokevirtual #62
254: astore        18
256: new           #295
259: dup
260: ldc_w         #409
263: aload         18
265: checkcast     #319
268: invokespecial #296
271: astore        19
273: new           #83
276: dup
277: aload         18
279: invokespecial #84
282: astore        20
284: ldc           #64
286: invokestatic  #37
289: goto          294
292: astore        20
294: new           #39
297: dup
298: invokespecial #40
301: ldc           #41
303: invokevirtual #42
306: iload_3
307: invokevirtual #43
310: ldc           #44
312: invokevirtual #42
315: iconst_0
316: invokevirtual #43
319: ldc           #41
321: invokevirtual #42
324: invokevirtual #45
327: iload_3
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #46
339: new           #39
342: dup
343: invokespecial #40
346: ldc           #41
348: invokevirtual #42
351: iload         4
353: invokevirtual #43
356: ldc           #44
358: invokevirtual #42
361: iconst_0
362: invokevirtual #43
365: ldc           #41
367: invokevirtual #42
370: invokevirtual #45
373: iload         4
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #46
386: new           #39
389: dup
390: invokespecial #40
393: ldc           #41
395: invokevirtual #42
398: iload         9
400: invokevirtual #43
403: ldc           #44
405: invokevirtual #42
408: iconst_0
409: invokevirtual #43
412: ldc           #41
414: invokevirtual #42
417: invokevirtual #45
420: iload         9
422: ifne          429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #46
433: new           #39
436: dup
437: invokespecial #40
440: ldc           #41
442: invokevirtual #42
445: iload         10
447: invokevirtual #43
450: ldc           #44
452: invokevirtual #42
455: iconst_0
456: invokevirtual #43
459: ldc           #41
461: invokevirtual #42
464: invokevirtual #45
467: iload         10
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #46
480: new           #39
483: dup
484: invokespecial #40
487: ldc           #41
489: invokevirtual #42
492: iload         11
494: invokevirtual #43
497: ldc           #44
499: invokevirtual #42
502: iconst_0
503: invokevirtual #43
506: ldc           #41
508: invokevirtual #42
511: invokevirtual #45
514: iload         11
516: ifne          523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #46
527: aload         13
529: invokestatic  #47
532: aload         13
534: invokestatic  #48
537: ldc           #49
539: invokestatic  #50
542: aload         16
544: invokestatic  #47
547: aload         16
549: invokestatic  #48
552: ldc           #49
554: invokestatic  #50
557: aload         17
559: invokestatic  #47
562: aload         17
564: invokestatic  #48
567: ldc           #49
569: invokestatic  #50
572: aload         18
574: invokestatic  #47
577: return
Exception table:
from    to  target type
273   289   292   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 6363
End line: 6448
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer19 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker22 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer19.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker22);
        int int24 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        int int25 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer19.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter27 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer19);
        double[] doubleArray34 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray35 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray35, true);
        double[] doubleArray38 = gaussianFitter27.fit(doubleArray34);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer44 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker47 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer44.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker47);
        int int49 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int50 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int51 = levenbergMarquardtOptimizer44.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter52 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer44);
        double[] doubleArray59 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray60 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray60, true);
        double[] doubleArray63 = gaussianFitter52.fit(doubleArray59);
        double[] doubleArray70 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray71 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair73 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray70, doubleArray71, true);
        double[] doubleArray74 = vectorialPointValuePair73.getValue();
        double[] doubleArray75 = vectorialPointValuePair73.getValue();
        double[] doubleArray76 = vectorialPointValuePair73.getPoint();
        double[] doubleArray77 = gaussianFitter52.fit(doubleArray76);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray77);
        double[] doubleArray79 = gaussianFitter13.fit(doubleArray38);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction80 = null;
        double[] doubleArray87 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray88 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair90 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray87, doubleArray88, true);
        double[] doubleArray91 = vectorialPointValuePair90.getValue();
        double[] doubleArray92 = vectorialPointValuePair90.getValue();
        double[] doubleArray93 = vectorialPointValuePair90.getPoint();
        double[] doubleArray94 = gaussianFitter13.fit(parametricUnivariateRealFunction80, doubleArray93);
        gaussianFitter13.clearObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray91);
        org.junit.Assert.assertNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #410
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: new           #8
95: dup
96: ldc2_w        #9
99: ldc2_w        #11
102: ldc2_w        #13
105: dconst_1
106: ldc2_w        #13
109: invokespecial #15
112: astore        7
114: new           #16
117: dup
118: ldc2_w        #17
121: ldc2_w        #19
124: invokespecial #21
127: astore        8
129: aload         7
131: aload         8
133: invokevirtual #22
136: aload         7
138: invokevirtual #23
141: istore        9
143: aload         7
145: invokevirtual #23
148: istore        10
150: aload         7
152: invokevirtual #53
155: istore        11
157: new           #24
160: dup
161: aload         7
163: invokespecial #25
166: astore        12
168: bipush        6
170: newarray       double
172: dup
173: iconst_0
174: ldc2_w        #27
177: dastore
178: dup
179: iconst_1
180: ldc2_w        #9
183: dastore
184: dup
185: iconst_2
186: ldc2_w        #13
189: dastore
190: dup
191: iconst_3
192: ldc2_w        #29
195: dastore
196: dup
197: iconst_4
198: ldc2_w        #17
201: dastore
202: dup
203: iconst_5
204: ldc2_w        #31
207: dastore
208: astore        13
210: aconst_null
211: astore        14
213: new           #33
216: dup
217: aload         13
219: aload         14
221: iconst_1
222: invokespecial #34
225: astore        15
227: aload         12
229: aload         13
231: invokevirtual #54
234: astore        16
236: new           #8
239: dup
240: ldc2_w        #9
243: ldc2_w        #11
246: ldc2_w        #13
249: dconst_1
250: ldc2_w        #13
253: invokespecial #15
256: astore        17
258: new           #16
261: dup
262: ldc2_w        #17
265: ldc2_w        #19
268: invokespecial #21
271: astore        18
273: aload         17
275: aload         18
277: invokevirtual #22
280: aload         17
282: invokevirtual #23
285: istore        19
287: aload         17
289: invokevirtual #23
292: istore        20
294: aload         17
296: invokevirtual #53
299: istore        21
301: new           #24
304: dup
305: aload         17
307: invokespecial #25
310: astore        22
312: bipush        6
314: newarray       double
316: dup
317: iconst_0
318: ldc2_w        #27
321: dastore
322: dup
323: iconst_1
324: ldc2_w        #9
327: dastore
328: dup
329: iconst_2
330: ldc2_w        #13
333: dastore
334: dup
335: iconst_3
336: ldc2_w        #29
339: dastore
340: dup
341: iconst_4
342: ldc2_w        #17
345: dastore
346: dup
347: iconst_5
348: ldc2_w        #31
351: dastore
352: astore        23
354: aconst_null
355: astore        24
357: new           #33
360: dup
361: aload         23
363: aload         24
365: iconst_1
366: invokespecial #34
369: astore        25
371: aload         22
373: aload         23
375: invokevirtual #54
378: astore        26
380: bipush        6
382: newarray       double
384: dup
385: iconst_0
386: ldc2_w        #27
389: dastore
390: dup
391: iconst_1
392: ldc2_w        #9
395: dastore
396: dup
397: iconst_2
398: ldc2_w        #13
401: dastore
402: dup
403: iconst_3
404: ldc2_w        #29
407: dastore
408: dup
409: iconst_4
410: ldc2_w        #17
413: dastore
414: dup
415: iconst_5
416: ldc2_w        #31
419: dastore
420: astore        27
422: aconst_null
423: astore        28
425: new           #33
428: dup
429: aload         27
431: aload         28
433: iconst_1
434: invokespecial #34
437: astore        29
439: aload         29
441: invokevirtual #74
444: astore        30
446: aload         29
448: invokevirtual #74
451: astore        31
453: aload         29
455: invokevirtual #75
458: astore        32
460: aload         22
462: aload         32
464: invokevirtual #54
467: astore        33
469: new           #33
472: dup
473: aload         16
475: aload         33
477: invokespecial #109
480: astore        34
482: aload         6
484: aload         16
486: invokevirtual #54
489: astore        35
491: aconst_null
492: astore        36
494: bipush        6
496: newarray       double
498: dup
499: iconst_0
500: ldc2_w        #27
503: dastore
504: dup
505: iconst_1
506: ldc2_w        #9
509: dastore
510: dup
511: iconst_2
512: ldc2_w        #13
515: dastore
516: dup
517: iconst_3
518: ldc2_w        #29
521: dastore
522: dup
523: iconst_4
524: ldc2_w        #17
527: dastore
528: dup
529: iconst_5
530: ldc2_w        #31
533: dastore
534: astore        37
536: aconst_null
537: astore        38
539: new           #33
542: dup
543: aload         37
545: aload         38
547: iconst_1
548: invokespecial #34
551: astore        39
553: aload         39
555: invokevirtual #74
558: astore        40
560: aload         39
562: invokevirtual #74
565: astore        41
567: aload         39
569: invokevirtual #75
572: astore        42
574: aload         6
576: aload         36
578: aload         42
580: invokevirtual #55
583: astore        43
585: aload         6
587: invokevirtual #52
590: new           #39
593: dup
594: invokespecial #40
597: ldc           #41
599: invokevirtual #42
602: iload_3
603: invokevirtual #43
606: ldc           #44
608: invokevirtual #42
611: iconst_0
612: invokevirtual #43
615: ldc           #41
617: invokevirtual #42
620: invokevirtual #45
623: iload_3
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #46
635: new           #39
638: dup
639: invokespecial #40
642: ldc           #41
644: invokevirtual #42
647: iload         4
649: invokevirtual #43
652: ldc           #44
654: invokevirtual #42
657: iconst_0
658: invokevirtual #43
661: ldc           #41
663: invokevirtual #42
666: invokevirtual #45
669: iload         4
671: ifne          678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #46
682: new           #39
685: dup
686: invokespecial #40
689: ldc           #41
691: invokevirtual #42
694: iload         5
696: invokevirtual #43
699: ldc           #44
701: invokevirtual #42
704: iconst_0
705: invokevirtual #43
708: ldc           #41
710: invokevirtual #42
713: invokevirtual #45
716: iload         5
718: ifne          725
721: iconst_1
722: goto          726
725: iconst_0
726: invokestatic  #46
729: new           #39
732: dup
733: invokespecial #40
736: ldc           #41
738: invokevirtual #42
741: iload         9
743: invokevirtual #43
746: ldc           #44
748: invokevirtual #42
751: iconst_0
752: invokevirtual #43
755: ldc           #41
757: invokevirtual #42
760: invokevirtual #45
763: iload         9
765: ifne          772
768: iconst_1
769: goto          773
772: iconst_0
773: invokestatic  #46
776: new           #39
779: dup
780: invokespecial #40
783: ldc           #41
785: invokevirtual #42
788: iload         10
790: invokevirtual #43
793: ldc           #44
795: invokevirtual #42
798: iconst_0
799: invokevirtual #43
802: ldc           #41
804: invokevirtual #42
807: invokevirtual #45
810: iload         10
812: ifne          819
815: iconst_1
816: goto          820
819: iconst_0
820: invokestatic  #46
823: new           #39
826: dup
827: invokespecial #40
830: ldc           #41
832: invokevirtual #42
835: iload         11
837: invokevirtual #43
840: ldc           #44
842: invokevirtual #42
845: iconst_0
846: invokevirtual #43
849: ldc           #41
851: invokevirtual #42
854: invokevirtual #45
857: iload         11
859: ifne          866
862: iconst_1
863: goto          867
866: iconst_0
867: invokestatic  #46
870: aload         13
872: invokestatic  #47
875: aload         13
877: invokestatic  #48
880: ldc           #49
882: invokestatic  #50
885: aload         16
887: invokestatic  #47
890: aload         16
892: invokestatic  #48
895: ldc           #49
897: invokestatic  #50
900: new           #39
903: dup
904: invokespecial #40
907: ldc           #41
909: invokevirtual #42
912: iload         19
914: invokevirtual #43
917: ldc           #44
919: invokevirtual #42
922: iconst_0
923: invokevirtual #43
926: ldc           #41
928: invokevirtual #42
931: invokevirtual #45
934: iload         19
936: ifne          943
939: iconst_1
940: goto          944
943: iconst_0
944: invokestatic  #46
947: new           #39
950: dup
951: invokespecial #40
954: ldc           #41
956: invokevirtual #42
959: iload         20
961: invokevirtual #43
964: ldc           #44
966: invokevirtual #42
969: iconst_0
970: invokevirtual #43
973: ldc           #41
975: invokevirtual #42
978: invokevirtual #45
981: iload         20
983: ifne          990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #46
994: new           #39
997: dup
998: invokespecial #40
1001: ldc           #41
1003: invokevirtual #42
1006: iload         21
1008: invokevirtual #43
1011: ldc           #44
1013: invokevirtual #42
1016: iconst_0
1017: invokevirtual #43
1020: ldc           #41
1022: invokevirtual #42
1025: invokevirtual #45
1028: iload         21
1030: ifne          1037
1033: iconst_1
1034: goto          1038
1037: iconst_0
1038: invokestatic  #46
1041: aload         23
1043: invokestatic  #47
1046: aload         23
1048: invokestatic  #48
1051: ldc           #49
1053: invokestatic  #50
1056: aload         26
1058: invokestatic  #47
1061: aload         26
1063: invokestatic  #48
1066: ldc           #49
1068: invokestatic  #50
1071: aload         27
1073: invokestatic  #47
1076: aload         27
1078: invokestatic  #48
1081: ldc           #49
1083: invokestatic  #50
1086: aload         30
1088: invokestatic  #76
1091: aload         31
1093: invokestatic  #76
1096: aload         32
1098: invokestatic  #47
1101: aload         32
1103: invokestatic  #48
1106: ldc           #49
1108: invokestatic  #50
1111: aload         33
1113: invokestatic  #47
1116: aload         33
1118: invokestatic  #48
1121: ldc           #49
1123: invokestatic  #50
1126: aload         35
1128: invokestatic  #47
1131: aload         35
1133: invokestatic  #48
1136: ldc           #49
1138: invokestatic  #50
1141: aload         37
1143: invokestatic  #47
1146: aload         37
1148: invokestatic  #48
1151: ldc           #49
1153: invokestatic  #50
1156: aload         40
1158: invokestatic  #76
1161: aload         41
1163: invokestatic  #76
1166: aload         42
1168: invokestatic  #47
1171: aload         42
1173: invokestatic  #48
1176: ldc           #49
1178: invokestatic  #50
1181: aload         43
1183: invokestatic  #47
1186: aload         43
1188: invokestatic  #48
1191: ldc           #49
1193: invokestatic  #50
1196: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 6451
End line: 6512
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double17 = simpleVectorialValueChecker16.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker16);
        double double19 = simpleVectorialValueChecker16.getRelativeThreshold();
        double[] doubleArray21 = null;
        double[] doubleArray22 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray21, doubleArray22, false);
        double[] doubleArray25 = vectorialPointValuePair24.getValueRef();
        double[] doubleArray26 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer32 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker35 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer32.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker35);
        int int37 = levenbergMarquardtOptimizer32.getMaxEvaluations();
        int int38 = levenbergMarquardtOptimizer32.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer32.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter40 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer32);
        double[] doubleArray47 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray48 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair50 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray48, true);
        double[] doubleArray51 = gaussianFitter40.fit(doubleArray47);
        double[] doubleArray58 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray59 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray58, doubleArray59, true);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair63 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray59, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray26, doubleArray51);
        double[] doubleArray65 = vectorialPointValuePair64.getValue();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = simpleVectorialValueChecker16.converged((int) 'a', vectorialPointValuePair24, vectorialPointValuePair64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #411
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #16
91: dup
92: ldc2_w        #17
95: ldc2_w        #19
98: invokespecial #21
101: astore        8
103: aload         8
105: invokevirtual #88
108: dstore        9
110: aload_1
111: aload         8
113: invokevirtual #22
116: aload         8
118: invokevirtual #88
121: dstore        11
123: aconst_null
124: astore        13
126: aconst_null
127: astore        14
129: new           #33
132: dup
133: aload         13
135: aload         14
137: iconst_0
138: invokespecial #34
141: astore        15
143: aload         15
145: invokevirtual #183
148: astore        16
150: aconst_null
151: astore        17
153: new           #8
156: dup
157: ldc2_w        #9
160: ldc2_w        #11
163: ldc2_w        #13
166: dconst_1
167: ldc2_w        #13
170: invokespecial #15
173: astore        18
175: new           #16
178: dup
179: ldc2_w        #17
182: ldc2_w        #19
185: invokespecial #21
188: astore        19
190: aload         18
192: aload         19
194: invokevirtual #22
197: aload         18
199: invokevirtual #23
202: istore        20
204: aload         18
206: invokevirtual #23
209: istore        21
211: aload         18
213: invokevirtual #53
216: istore        22
218: new           #24
221: dup
222: aload         18
224: invokespecial #25
227: astore        23
229: bipush        6
231: newarray       double
233: dup
234: iconst_0
235: ldc2_w        #27
238: dastore
239: dup
240: iconst_1
241: ldc2_w        #9
244: dastore
245: dup
246: iconst_2
247: ldc2_w        #13
250: dastore
251: dup
252: iconst_3
253: ldc2_w        #29
256: dastore
257: dup
258: iconst_4
259: ldc2_w        #17
262: dastore
263: dup
264: iconst_5
265: ldc2_w        #31
268: dastore
269: astore        24
271: aconst_null
272: astore        25
274: new           #33
277: dup
278: aload         24
280: aload         25
282: iconst_1
283: invokespecial #34
286: astore        26
288: aload         23
290: aload         24
292: invokevirtual #54
295: astore        27
297: bipush        6
299: newarray       double
301: dup
302: iconst_0
303: ldc2_w        #27
306: dastore
307: dup
308: iconst_1
309: ldc2_w        #9
312: dastore
313: dup
314: iconst_2
315: ldc2_w        #13
318: dastore
319: dup
320: iconst_3
321: ldc2_w        #29
324: dastore
325: dup
326: iconst_4
327: ldc2_w        #17
330: dastore
331: dup
332: iconst_5
333: ldc2_w        #31
336: dastore
337: astore        28
339: aconst_null
340: astore        29
342: new           #33
345: dup
346: aload         28
348: aload         29
350: iconst_1
351: invokespecial #34
354: astore        30
356: new           #33
359: dup
360: aload         27
362: aload         29
364: iconst_0
365: invokespecial #34
368: astore        31
370: new           #33
373: dup
374: aload         17
376: aload         27
378: invokespecial #109
381: astore        32
383: aload         32
385: invokevirtual #74
388: astore        33
390: aload         8
392: bipush        97
394: aload         15
396: aload         32
398: invokevirtual #90
401: istore        34
403: ldc           #36
405: invokestatic  #37
408: goto          413
411: astore        34
413: new           #39
416: dup
417: invokespecial #40
420: ldc           #41
422: invokevirtual #42
425: iload_3
426: invokevirtual #43
429: ldc           #44
431: invokevirtual #42
434: iconst_0
435: invokevirtual #43
438: ldc           #41
440: invokevirtual #42
443: invokevirtual #45
446: iload_3
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #46
458: new           #39
461: dup
462: invokespecial #40
465: ldc           #41
467: invokevirtual #42
470: iload         4
472: invokevirtual #43
475: ldc           #44
477: invokevirtual #42
480: iconst_0
481: invokevirtual #43
484: ldc           #41
486: invokevirtual #42
489: invokevirtual #45
492: iload         4
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #46
505: new           #39
508: dup
509: invokespecial #40
512: ldc           #41
514: invokevirtual #42
517: dload         5
519: invokevirtual #59
522: ldc           #44
524: invokevirtual #42
527: dconst_0
528: invokevirtual #59
531: ldc           #41
533: invokevirtual #42
536: invokevirtual #45
539: dload         5
541: dconst_0
542: dcmpl
543: ifne          550
546: iconst_1
547: goto          551
550: iconst_0
551: invokestatic  #46
554: new           #39
557: dup
558: invokespecial #40
561: ldc           #41
563: invokevirtual #42
566: iload         7
568: invokevirtual #43
571: ldc           #44
573: invokevirtual #42
576: iconst_0
577: invokevirtual #43
580: ldc           #41
582: invokevirtual #42
585: invokevirtual #45
588: iload         7
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #46
601: new           #39
604: dup
605: invokespecial #40
608: ldc           #41
610: invokevirtual #42
613: dload         9
615: invokevirtual #59
618: ldc           #44
620: invokevirtual #42
623: ldc2_w        #17
626: invokevirtual #59
629: ldc           #41
631: invokevirtual #42
634: invokevirtual #45
637: dload         9
639: ldc2_w        #17
642: dcmpl
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #46
654: new           #39
657: dup
658: invokespecial #40
661: ldc           #41
663: invokevirtual #42
666: dload         11
668: invokevirtual #59
671: ldc           #44
673: invokevirtual #42
676: ldc2_w        #17
679: invokevirtual #59
682: ldc           #41
684: invokevirtual #42
687: invokevirtual #45
690: dload         11
692: ldc2_w        #17
695: dcmpl
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #46
707: aload         16
709: invokestatic  #76
712: new           #39
715: dup
716: invokespecial #40
719: ldc           #41
721: invokevirtual #42
724: iload         20
726: invokevirtual #43
729: ldc           #44
731: invokevirtual #42
734: iconst_0
735: invokevirtual #43
738: ldc           #41
740: invokevirtual #42
743: invokevirtual #45
746: iload         20
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #46
759: new           #39
762: dup
763: invokespecial #40
766: ldc           #41
768: invokevirtual #42
771: iload         21
773: invokevirtual #43
776: ldc           #44
778: invokevirtual #42
781: iconst_0
782: invokevirtual #43
785: ldc           #41
787: invokevirtual #42
790: invokevirtual #45
793: iload         21
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #46
806: new           #39
809: dup
810: invokespecial #40
813: ldc           #41
815: invokevirtual #42
818: iload         22
820: invokevirtual #43
823: ldc           #44
825: invokevirtual #42
828: iconst_0
829: invokevirtual #43
832: ldc           #41
834: invokevirtual #42
837: invokevirtual #45
840: iload         22
842: ifne          849
845: iconst_1
846: goto          850
849: iconst_0
850: invokestatic  #46
853: aload         24
855: invokestatic  #47
858: aload         24
860: invokestatic  #48
863: ldc           #49
865: invokestatic  #50
868: aload         27
870: invokestatic  #47
873: aload         27
875: invokestatic  #48
878: ldc           #49
880: invokestatic  #50
883: aload         28
885: invokestatic  #47
888: aload         28
890: invokestatic  #48
893: ldc           #49
895: invokestatic  #50
898: aload         33
900: invokestatic  #47
903: aload         33
905: invokestatic  #48
908: ldc           #49
910: invokestatic  #50
913: return
Exception table:
from    to  target type
390   408   411   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 6515
End line: 6597
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter28 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction29 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer35 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker38 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer35.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker38);
        int int40 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int41 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer35.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter43 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer35);
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = gaussianFitter43.fit(doubleArray50);
        double[] doubleArray55 = curveFitter28.fit(parametricUnivariateRealFunction29, doubleArray50);
        double[] doubleArray56 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray50);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer62 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker65 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer62.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker65);
        int int67 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        int int68 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        int int69 = levenbergMarquardtOptimizer62.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter70 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer62);
        double[] doubleArray77 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray78 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray77, doubleArray78, true);
        double[] doubleArray81 = gaussianFitter70.fit(doubleArray77);
        double[] doubleArray82 = gaussianFitter12.fit(doubleArray81);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint86 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, (double) 1, (double) (short) 100);
        double double87 = weightedObservedPoint86.getY();
        gaussianFitter12.addObservedPoint(weightedObservedPoint86);
        gaussianFitter12.clearObservations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray90 = gaussianFitter12.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 0 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #412
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aconst_null
94: astore        7
96: new           #8
99: dup
100: ldc2_w        #9
103: ldc2_w        #11
106: ldc2_w        #13
109: dconst_1
110: ldc2_w        #13
113: invokespecial #15
116: astore        8
118: new           #16
121: dup
122: ldc2_w        #17
125: ldc2_w        #19
128: invokespecial #21
131: astore        9
133: aload         8
135: aload         9
137: invokevirtual #22
140: aload         8
142: invokevirtual #23
145: istore        10
147: aload         8
149: invokevirtual #23
152: istore        11
154: aload         8
156: invokevirtual #53
159: istore        12
161: new           #67
164: dup
165: aload         8
167: invokespecial #68
170: astore        13
172: aconst_null
173: astore        14
175: new           #8
178: dup
179: ldc2_w        #9
182: ldc2_w        #11
185: ldc2_w        #13
188: dconst_1
189: ldc2_w        #13
192: invokespecial #15
195: astore        15
197: new           #16
200: dup
201: ldc2_w        #17
204: ldc2_w        #19
207: invokespecial #21
210: astore        16
212: aload         15
214: aload         16
216: invokevirtual #22
219: aload         15
221: invokevirtual #23
224: istore        17
226: aload         15
228: invokevirtual #23
231: istore        18
233: aload         15
235: invokevirtual #53
238: istore        19
240: new           #24
243: dup
244: aload         15
246: invokespecial #25
249: astore        20
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: ldc2_w        #27
260: dastore
261: dup
262: iconst_1
263: ldc2_w        #9
266: dastore
267: dup
268: iconst_2
269: ldc2_w        #13
272: dastore
273: dup
274: iconst_3
275: ldc2_w        #29
278: dastore
279: dup
280: iconst_4
281: ldc2_w        #17
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #31
290: dastore
291: astore        21
293: aconst_null
294: astore        22
296: new           #33
299: dup
300: aload         21
302: aload         22
304: iconst_1
305: invokespecial #34
308: astore        23
310: aload         20
312: aload         21
314: invokevirtual #54
317: astore        24
319: aload         13
321: aload         14
323: aload         21
325: invokevirtual #89
328: astore        25
330: aload         5
332: aload         7
334: aload         21
336: invokevirtual #55
339: astore        26
341: new           #8
344: dup
345: ldc2_w        #9
348: ldc2_w        #11
351: ldc2_w        #13
354: dconst_1
355: ldc2_w        #13
358: invokespecial #15
361: astore        27
363: new           #16
366: dup
367: ldc2_w        #17
370: ldc2_w        #19
373: invokespecial #21
376: astore        28
378: aload         27
380: aload         28
382: invokevirtual #22
385: aload         27
387: invokevirtual #23
390: istore        29
392: aload         27
394: invokevirtual #23
397: istore        30
399: aload         27
401: invokevirtual #53
404: istore        31
406: new           #24
409: dup
410: aload         27
412: invokespecial #25
415: astore        32
417: bipush        6
419: newarray       double
421: dup
422: iconst_0
423: ldc2_w        #27
426: dastore
427: dup
428: iconst_1
429: ldc2_w        #9
432: dastore
433: dup
434: iconst_2
435: ldc2_w        #13
438: dastore
439: dup
440: iconst_3
441: ldc2_w        #29
444: dastore
445: dup
446: iconst_4
447: ldc2_w        #17
450: dastore
451: dup
452: iconst_5
453: ldc2_w        #31
456: dastore
457: astore        33
459: aconst_null
460: astore        34
462: new           #33
465: dup
466: aload         33
468: aload         34
470: iconst_1
471: invokespecial #34
474: astore        35
476: aload         32
478: aload         33
480: invokevirtual #54
483: astore        36
485: aload         5
487: aload         36
489: invokevirtual #54
492: astore        37
494: new           #217
497: dup
498: dconst_0
499: dconst_1
500: ldc2_w        #13
503: invokespecial #222
506: astore        38
508: aload         38
510: invokevirtual #231
513: dstore        39
515: aload         5
517: aload         38
519: invokevirtual #174
522: aload         5
524: invokevirtual #52
527: aload         5
529: invokevirtual #63
532: astore        41
534: ldc           #64
536: invokestatic  #37
539: goto          544
542: astore        41
544: new           #39
547: dup
548: invokespecial #40
551: ldc           #41
553: invokevirtual #42
556: iload_3
557: invokevirtual #43
560: ldc           #44
562: invokevirtual #42
565: iconst_0
566: invokevirtual #43
569: ldc           #41
571: invokevirtual #42
574: invokevirtual #45
577: iload_3
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #46
589: new           #39
592: dup
593: invokespecial #40
596: ldc           #41
598: invokevirtual #42
601: iload         4
603: invokevirtual #43
606: ldc           #44
608: invokevirtual #42
611: iconst_0
612: invokevirtual #43
615: ldc           #41
617: invokevirtual #42
620: invokevirtual #45
623: iload         4
625: ifne          632
628: iconst_1
629: goto          633
632: iconst_0
633: invokestatic  #46
636: aload         6
638: invokestatic  #47
641: new           #39
644: dup
645: invokespecial #40
648: ldc           #41
650: invokevirtual #42
653: iload         10
655: invokevirtual #43
658: ldc           #44
660: invokevirtual #42
663: iconst_0
664: invokevirtual #43
667: ldc           #41
669: invokevirtual #42
672: invokevirtual #45
675: iload         10
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #46
688: new           #39
691: dup
692: invokespecial #40
695: ldc           #41
697: invokevirtual #42
700: iload         11
702: invokevirtual #43
705: ldc           #44
707: invokevirtual #42
710: iconst_0
711: invokevirtual #43
714: ldc           #41
716: invokevirtual #42
719: invokevirtual #45
722: iload         11
724: ifne          731
727: iconst_1
728: goto          732
731: iconst_0
732: invokestatic  #46
735: new           #39
738: dup
739: invokespecial #40
742: ldc           #41
744: invokevirtual #42
747: iload         12
749: invokevirtual #43
752: ldc           #44
754: invokevirtual #42
757: iconst_0
758: invokevirtual #43
761: ldc           #41
763: invokevirtual #42
766: invokevirtual #45
769: iload         12
771: ifne          778
774: iconst_1
775: goto          779
778: iconst_0
779: invokestatic  #46
782: new           #39
785: dup
786: invokespecial #40
789: ldc           #41
791: invokevirtual #42
794: iload         17
796: invokevirtual #43
799: ldc           #44
801: invokevirtual #42
804: iconst_0
805: invokevirtual #43
808: ldc           #41
810: invokevirtual #42
813: invokevirtual #45
816: iload         17
818: ifne          825
821: iconst_1
822: goto          826
825: iconst_0
826: invokestatic  #46
829: new           #39
832: dup
833: invokespecial #40
836: ldc           #41
838: invokevirtual #42
841: iload         18
843: invokevirtual #43
846: ldc           #44
848: invokevirtual #42
851: iconst_0
852: invokevirtual #43
855: ldc           #41
857: invokevirtual #42
860: invokevirtual #45
863: iload         18
865: ifne          872
868: iconst_1
869: goto          873
872: iconst_0
873: invokestatic  #46
876: new           #39
879: dup
880: invokespecial #40
883: ldc           #41
885: invokevirtual #42
888: iload         19
890: invokevirtual #43
893: ldc           #44
895: invokevirtual #42
898: iconst_0
899: invokevirtual #43
902: ldc           #41
904: invokevirtual #42
907: invokevirtual #45
910: iload         19
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #46
923: aload         21
925: invokestatic  #47
928: aload         21
930: invokestatic  #48
933: ldc           #49
935: invokestatic  #50
938: aload         24
940: invokestatic  #47
943: aload         24
945: invokestatic  #48
948: ldc           #49
950: invokestatic  #50
953: aload         25
955: invokestatic  #47
958: aload         25
960: invokestatic  #48
963: ldc           #49
965: invokestatic  #50
968: aload         26
970: invokestatic  #47
973: aload         26
975: invokestatic  #48
978: ldc           #49
980: invokestatic  #50
983: new           #39
986: dup
987: invokespecial #40
990: ldc           #41
992: invokevirtual #42
995: iload         29
997: invokevirtual #43
1000: ldc           #44
1002: invokevirtual #42
1005: iconst_0
1006: invokevirtual #43
1009: ldc           #41
1011: invokevirtual #42
1014: invokevirtual #45
1017: iload         29
1019: ifne          1026
1022: iconst_1
1023: goto          1027
1026: iconst_0
1027: invokestatic  #46
1030: new           #39
1033: dup
1034: invokespecial #40
1037: ldc           #41
1039: invokevirtual #42
1042: iload         30
1044: invokevirtual #43
1047: ldc           #44
1049: invokevirtual #42
1052: iconst_0
1053: invokevirtual #43
1056: ldc           #41
1058: invokevirtual #42
1061: invokevirtual #45
1064: iload         30
1066: ifne          1073
1069: iconst_1
1070: goto          1074
1073: iconst_0
1074: invokestatic  #46
1077: new           #39
1080: dup
1081: invokespecial #40
1084: ldc           #41
1086: invokevirtual #42
1089: iload         31
1091: invokevirtual #43
1094: ldc           #44
1096: invokevirtual #42
1099: iconst_0
1100: invokevirtual #43
1103: ldc           #41
1105: invokevirtual #42
1108: invokevirtual #45
1111: iload         31
1113: ifne          1120
1116: iconst_1
1117: goto          1121
1120: iconst_0
1121: invokestatic  #46
1124: aload         33
1126: invokestatic  #47
1129: aload         33
1131: invokestatic  #48
1134: ldc           #49
1136: invokestatic  #50
1139: aload         36
1141: invokestatic  #47
1144: aload         36
1146: invokestatic  #48
1149: ldc           #49
1151: invokestatic  #50
1154: aload         37
1156: invokestatic  #47
1159: aload         37
1161: invokestatic  #48
1164: ldc           #49
1166: invokestatic  #50
1169: new           #39
1172: dup
1173: invokespecial #40
1176: ldc           #41
1178: invokevirtual #42
1181: dload         39
1183: invokevirtual #59
1186: ldc           #44
1188: invokevirtual #42
1191: ldc2_w        #13
1194: invokevirtual #59
1197: ldc           #41
1199: invokevirtual #42
1202: invokevirtual #45
1205: dload         39
1207: ldc2_w        #13
1210: dcmpl
1211: ifne          1218
1214: iconst_1
1215: goto          1219
1218: iconst_0
1219: invokestatic  #46
1222: return
Exception table:
from    to  target type
527   539   542   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 6600
End line: 6617
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint((double) 1L, 0.6444303510232912d);
        gaussianFitter12.addObservedPoint(11013.232920103323d, (double) 35);
        gaussianFitter12.addObservedPoint((double) '#', (double) (-1.0f), 0.0d);
        gaussianFitter12.addObservedPoint((double) 127, 4.9E-324d, 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #413
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aload         5
95: dconst_1
96: ldc2_w        #195
99: invokevirtual #158
102: aload         5
104: ldc2_w        #99
107: ldc2_w        #17
110: invokevirtual #158
113: aload         5
115: ldc2_w        #17
118: ldc2_w        #9
121: dconst_0
122: invokevirtual #98
125: aload         5
127: ldc2_w        #414
130: ldc2_w        #218
133: dconst_0
134: invokevirtual #98
137: new           #39
140: dup
141: invokespecial #40
144: ldc           #41
146: invokevirtual #42
149: iload_3
150: invokevirtual #43
153: ldc           #44
155: invokevirtual #42
158: iconst_0
159: invokevirtual #43
162: ldc           #41
164: invokevirtual #42
167: invokevirtual #45
170: iload_3
171: ifne          178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #46
182: new           #39
185: dup
186: invokespecial #40
189: ldc           #41
191: invokevirtual #42
194: iload         4
196: invokevirtual #43
199: ldc           #44
201: invokevirtual #42
204: iconst_0
205: invokevirtual #43
208: ldc           #41
210: invokevirtual #42
213: invokevirtual #45
216: iload         4
218: ifne          225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #46
229: aload         6
231: invokestatic  #47
234: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 6620
End line: 6679
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker14 = null;
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker14);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        double double28 = levenbergMarquardtOptimizer21.getChiSquare();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker29 = levenbergMarquardtOptimizer21.getConvergenceChecker();
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker29);
        double double31 = levenbergMarquardtOptimizer5.getChiSquare();
        int int32 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker33 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker42 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer39.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker42);
        int int44 = levenbergMarquardtOptimizer39.getMaxEvaluations();
        int int45 = levenbergMarquardtOptimizer39.getMaxEvaluations();
        double double46 = levenbergMarquardtOptimizer39.getChiSquare();
        int int47 = levenbergMarquardtOptimizer39.getEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker48 = null;
        levenbergMarquardtOptimizer39.setConvergenceChecker(vectorialPointValuePairConvergenceChecker48);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer55 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker58 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer55.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker58);
        int int60 = levenbergMarquardtOptimizer55.getMaxEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker61 = levenbergMarquardtOptimizer55.getConvergenceChecker();
        levenbergMarquardtOptimizer39.setConvergenceChecker(vectorialPointValuePairConvergenceChecker61);
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker61);
        int int64 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter65 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker33);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #416
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #53
86: istore        7
88: aconst_null
89: astore        8
91: aload_1
92: aload         8
94: invokevirtual #22
97: new           #8
100: dup
101: ldc2_w        #9
104: ldc2_w        #11
107: ldc2_w        #13
110: dconst_1
111: ldc2_w        #13
114: invokespecial #15
117: astore        9
119: new           #16
122: dup
123: ldc2_w        #17
126: ldc2_w        #19
129: invokespecial #21
132: astore        10
134: aload         9
136: aload         10
138: invokevirtual #22
141: aload         9
143: invokevirtual #23
146: istore        11
148: aload         9
150: invokevirtual #23
153: istore        12
155: aload         9
157: invokevirtual #58
160: dstore        13
162: aload         9
164: invokevirtual #73
167: astore        15
169: aload_1
170: aload         15
172: invokevirtual #22
175: aload_1
176: invokevirtual #58
179: dstore        16
181: aload_1
182: invokevirtual #23
185: istore        18
187: aload_1
188: invokevirtual #73
191: astore        19
193: new           #8
196: dup
197: ldc2_w        #9
200: ldc2_w        #11
203: ldc2_w        #13
206: dconst_1
207: ldc2_w        #13
210: invokespecial #15
213: astore        20
215: new           #16
218: dup
219: ldc2_w        #17
222: ldc2_w        #19
225: invokespecial #21
228: astore        21
230: aload         20
232: aload         21
234: invokevirtual #22
237: aload         20
239: invokevirtual #23
242: istore        22
244: aload         20
246: invokevirtual #23
249: istore        23
251: aload         20
253: invokevirtual #58
256: dstore        24
258: aload         20
260: invokevirtual #53
263: istore        26
265: aconst_null
266: astore        27
268: aload         20
270: aload         27
272: invokevirtual #22
275: new           #8
278: dup
279: ldc2_w        #9
282: ldc2_w        #11
285: ldc2_w        #13
288: dconst_1
289: ldc2_w        #13
292: invokespecial #15
295: astore        28
297: new           #16
300: dup
301: ldc2_w        #17
304: ldc2_w        #19
307: invokespecial #21
310: astore        29
312: aload         28
314: aload         29
316: invokevirtual #22
319: aload         28
321: invokevirtual #23
324: istore        30
326: aload         28
328: invokevirtual #73
331: astore        31
333: aload         20
335: aload         31
337: invokevirtual #22
340: aload_1
341: aload         31
343: invokevirtual #22
346: aload_1
347: invokevirtual #23
350: istore        32
352: new           #24
355: dup
356: aload_1
357: invokespecial #25
360: astore        33
362: new           #39
365: dup
366: invokespecial #40
369: ldc           #41
371: invokevirtual #42
374: iload_3
375: invokevirtual #43
378: ldc           #44
380: invokevirtual #42
383: iconst_0
384: invokevirtual #43
387: ldc           #41
389: invokevirtual #42
392: invokevirtual #45
395: iload_3
396: ifne          403
399: iconst_1
400: goto          404
403: iconst_0
404: invokestatic  #46
407: new           #39
410: dup
411: invokespecial #40
414: ldc           #41
416: invokevirtual #42
419: iload         4
421: invokevirtual #43
424: ldc           #44
426: invokevirtual #42
429: iconst_0
430: invokevirtual #43
433: ldc           #41
435: invokevirtual #42
438: invokevirtual #45
441: iload         4
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #46
454: new           #39
457: dup
458: invokespecial #40
461: ldc           #41
463: invokevirtual #42
466: dload         5
468: invokevirtual #59
471: ldc           #44
473: invokevirtual #42
476: dconst_0
477: invokevirtual #59
480: ldc           #41
482: invokevirtual #42
485: invokevirtual #45
488: dload         5
490: dconst_0
491: dcmpl
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #46
503: new           #39
506: dup
507: invokespecial #40
510: ldc           #41
512: invokevirtual #42
515: iload         7
517: invokevirtual #43
520: ldc           #44
522: invokevirtual #42
525: iconst_0
526: invokevirtual #43
529: ldc           #41
531: invokevirtual #42
534: invokevirtual #45
537: iload         7
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #46
550: new           #39
553: dup
554: invokespecial #40
557: ldc           #41
559: invokevirtual #42
562: iload         11
564: invokevirtual #43
567: ldc           #44
569: invokevirtual #42
572: iconst_0
573: invokevirtual #43
576: ldc           #41
578: invokevirtual #42
581: invokevirtual #45
584: iload         11
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #46
597: new           #39
600: dup
601: invokespecial #40
604: ldc           #41
606: invokevirtual #42
609: iload         12
611: invokevirtual #43
614: ldc           #44
616: invokevirtual #42
619: iconst_0
620: invokevirtual #43
623: ldc           #41
625: invokevirtual #42
628: invokevirtual #45
631: iload         12
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #46
644: new           #39
647: dup
648: invokespecial #40
651: ldc           #41
653: invokevirtual #42
656: dload         13
658: invokevirtual #59
661: ldc           #44
663: invokevirtual #42
666: dconst_0
667: invokevirtual #59
670: ldc           #41
672: invokevirtual #42
675: invokevirtual #45
678: dload         13
680: dconst_0
681: dcmpl
682: ifne          689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #46
693: aload         15
695: invokestatic  #47
698: new           #39
701: dup
702: invokespecial #40
705: ldc           #41
707: invokevirtual #42
710: dload         16
712: invokevirtual #59
715: ldc           #44
717: invokevirtual #42
720: dconst_0
721: invokevirtual #59
724: ldc           #41
726: invokevirtual #42
729: invokevirtual #45
732: dload         16
734: dconst_0
735: dcmpl
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #46
747: new           #39
750: dup
751: invokespecial #40
754: ldc           #41
756: invokevirtual #42
759: iload         18
761: invokevirtual #43
764: ldc           #44
766: invokevirtual #42
769: iconst_0
770: invokevirtual #43
773: ldc           #41
775: invokevirtual #42
778: invokevirtual #45
781: iload         18
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #46
794: aload         19
796: invokestatic  #47
799: new           #39
802: dup
803: invokespecial #40
806: ldc           #41
808: invokevirtual #42
811: iload         22
813: invokevirtual #43
816: ldc           #44
818: invokevirtual #42
821: iconst_0
822: invokevirtual #43
825: ldc           #41
827: invokevirtual #42
830: invokevirtual #45
833: iload         22
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #46
846: new           #39
849: dup
850: invokespecial #40
853: ldc           #41
855: invokevirtual #42
858: iload         23
860: invokevirtual #43
863: ldc           #44
865: invokevirtual #42
868: iconst_0
869: invokevirtual #43
872: ldc           #41
874: invokevirtual #42
877: invokevirtual #45
880: iload         23
882: ifne          889
885: iconst_1
886: goto          890
889: iconst_0
890: invokestatic  #46
893: new           #39
896: dup
897: invokespecial #40
900: ldc           #41
902: invokevirtual #42
905: dload         24
907: invokevirtual #59
910: ldc           #44
912: invokevirtual #42
915: dconst_0
916: invokevirtual #59
919: ldc           #41
921: invokevirtual #42
924: invokevirtual #45
927: dload         24
929: dconst_0
930: dcmpl
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #46
942: new           #39
945: dup
946: invokespecial #40
949: ldc           #41
951: invokevirtual #42
954: iload         26
956: invokevirtual #43
959: ldc           #44
961: invokevirtual #42
964: iconst_0
965: invokevirtual #43
968: ldc           #41
970: invokevirtual #42
973: invokevirtual #45
976: iload         26
978: ifne          985
981: iconst_1
982: goto          986
985: iconst_0
986: invokestatic  #46
989: new           #39
992: dup
993: invokespecial #40
996: ldc           #41
998: invokevirtual #42
1001: iload         30
1003: invokevirtual #43
1006: ldc           #44
1008: invokevirtual #42
1011: iconst_0
1012: invokevirtual #43
1015: ldc           #41
1017: invokevirtual #42
1020: invokevirtual #45
1023: iload         30
1025: ifne          1032
1028: iconst_1
1029: goto          1033
1032: iconst_0
1033: invokestatic  #46
1036: aload         31
1038: invokestatic  #47
1041: new           #39
1044: dup
1045: invokespecial #40
1048: ldc           #41
1050: invokevirtual #42
1053: iload         32
1055: invokevirtual #43
1058: ldc           #44
1060: invokevirtual #42
1063: iconst_0
1064: invokevirtual #43
1067: ldc           #41
1069: invokevirtual #42
1072: invokevirtual #45
1075: iload         32
1077: ifne          1084
1080: iconst_1
1081: goto          1085
1084: iconst_0
1085: invokestatic  #46
1088: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test126
Start line: 6682
End line: 6772
Method source code: 
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker0 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double1 = simpleVectorialValueChecker0.getRelativeThreshold();
        double double2 = simpleVectorialValueChecker0.getRelativeThreshold();
        double double3 = simpleVectorialValueChecker0.getRelativeThreshold();
        double double4 = simpleVectorialValueChecker0.getAbsoluteThreshold();
        double[] doubleArray12 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray13 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair15 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray13, true);
        double[] doubleArray16 = vectorialPointValuePair15.getValue();
        double[] doubleArray17 = vectorialPointValuePair15.getValue();
        double[] doubleArray18 = vectorialPointValuePair15.getPoint();
        double[] doubleArray25 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray26 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair28 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray26, true);
        double[] doubleArray29 = vectorialPointValuePair28.getValue();
        double[] doubleArray30 = vectorialPointValuePair28.getValue();
        double[] doubleArray31 = vectorialPointValuePair28.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair33 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray31, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker42 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer39.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker42);
        int int44 = levenbergMarquardtOptimizer39.getMaxEvaluations();
        int int45 = levenbergMarquardtOptimizer39.getMaxEvaluations();
        int int46 = levenbergMarquardtOptimizer39.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter47 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer39);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction48 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer54 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker57 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer54.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker57);
        int int59 = levenbergMarquardtOptimizer54.getMaxEvaluations();
        int int60 = levenbergMarquardtOptimizer54.getMaxEvaluations();
        int int61 = levenbergMarquardtOptimizer54.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter62 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer54);
        double[] doubleArray69 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray70 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray69, doubleArray70, true);
        double[] doubleArray73 = gaussianFitter62.fit(doubleArray69);
        double[] doubleArray74 = curveFitter47.fit(parametricUnivariateRealFunction48, doubleArray69);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair75 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray74);
        double[] doubleArray76 = vectorialPointValuePair75.getValueRef();
        double[] doubleArray77 = vectorialPointValuePair75.getValue();
        double[] doubleArray78 = vectorialPointValuePair75.getPointRef();
        double[] doubleArray79 = vectorialPointValuePair75.getValue();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = simpleVectorialValueChecker0.converged(74, vectorialPointValuePair75, vectorialPointValuePair80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.1102230246251565E-14d + "'", double1 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.1102230246251565E-14d + "'", double2 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.1102230246251565E-14d + "'", double3 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.2250738585072014E-306d + "'", double4 == 2.2250738585072014E-306d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #417
20: aastore
21: invokevirtual #7
24: pop
25: new           #16
28: dup
29: invokespecial #150
32: astore_1
33: aload_1
34: invokevirtual #88
37: dstore_2
38: aload_1
39: invokevirtual #88
42: dstore        4
44: aload_1
45: invokevirtual #88
48: dstore        6
50: aload_1
51: invokevirtual #205
54: dstore        8
56: bipush        6
58: newarray       double
60: dup
61: iconst_0
62: ldc2_w        #27
65: dastore
66: dup
67: iconst_1
68: ldc2_w        #9
71: dastore
72: dup
73: iconst_2
74: ldc2_w        #13
77: dastore
78: dup
79: iconst_3
80: ldc2_w        #29
83: dastore
84: dup
85: iconst_4
86: ldc2_w        #17
89: dastore
90: dup
91: iconst_5
92: ldc2_w        #31
95: dastore
96: astore        10
98: aconst_null
99: astore        11
101: new           #33
104: dup
105: aload         10
107: aload         11
109: iconst_1
110: invokespecial #34
113: astore        12
115: aload         12
117: invokevirtual #74
120: astore        13
122: aload         12
124: invokevirtual #74
127: astore        14
129: aload         12
131: invokevirtual #75
134: astore        15
136: bipush        6
138: newarray       double
140: dup
141: iconst_0
142: ldc2_w        #27
145: dastore
146: dup
147: iconst_1
148: ldc2_w        #9
151: dastore
152: dup
153: iconst_2
154: ldc2_w        #13
157: dastore
158: dup
159: iconst_3
160: ldc2_w        #29
163: dastore
164: dup
165: iconst_4
166: ldc2_w        #17
169: dastore
170: dup
171: iconst_5
172: ldc2_w        #31
175: dastore
176: astore        16
178: aconst_null
179: astore        17
181: new           #33
184: dup
185: aload         16
187: aload         17
189: iconst_1
190: invokespecial #34
193: astore        18
195: aload         18
197: invokevirtual #74
200: astore        19
202: aload         18
204: invokevirtual #74
207: astore        20
209: aload         18
211: invokevirtual #75
214: astore        21
216: new           #33
219: dup
220: aload         15
222: aload         21
224: iconst_0
225: invokespecial #34
228: astore        22
230: new           #8
233: dup
234: ldc2_w        #9
237: ldc2_w        #11
240: ldc2_w        #13
243: dconst_1
244: ldc2_w        #13
247: invokespecial #15
250: astore        23
252: new           #16
255: dup
256: ldc2_w        #17
259: ldc2_w        #19
262: invokespecial #21
265: astore        24
267: aload         23
269: aload         24
271: invokevirtual #22
274: aload         23
276: invokevirtual #23
279: istore        25
281: aload         23
283: invokevirtual #23
286: istore        26
288: aload         23
290: invokevirtual #53
293: istore        27
295: new           #67
298: dup
299: aload         23
301: invokespecial #68
304: astore        28
306: aconst_null
307: astore        29
309: new           #8
312: dup
313: ldc2_w        #9
316: ldc2_w        #11
319: ldc2_w        #13
322: dconst_1
323: ldc2_w        #13
326: invokespecial #15
329: astore        30
331: new           #16
334: dup
335: ldc2_w        #17
338: ldc2_w        #19
341: invokespecial #21
344: astore        31
346: aload         30
348: aload         31
350: invokevirtual #22
353: aload         30
355: invokevirtual #23
358: istore        32
360: aload         30
362: invokevirtual #23
365: istore        33
367: aload         30
369: invokevirtual #53
372: istore        34
374: new           #24
377: dup
378: aload         30
380: invokespecial #25
383: astore        35
385: bipush        6
387: newarray       double
389: dup
390: iconst_0
391: ldc2_w        #27
394: dastore
395: dup
396: iconst_1
397: ldc2_w        #9
400: dastore
401: dup
402: iconst_2
403: ldc2_w        #13
406: dastore
407: dup
408: iconst_3
409: ldc2_w        #29
412: dastore
413: dup
414: iconst_4
415: ldc2_w        #17
418: dastore
419: dup
420: iconst_5
421: ldc2_w        #31
424: dastore
425: astore        36
427: aconst_null
428: astore        37
430: new           #33
433: dup
434: aload         36
436: aload         37
438: iconst_1
439: invokespecial #34
442: astore        38
444: aload         35
446: aload         36
448: invokevirtual #54
451: astore        39
453: aload         28
455: aload         29
457: aload         36
459: invokevirtual #89
462: astore        40
464: new           #33
467: dup
468: aload         21
470: aload         40
472: invokespecial #109
475: astore        41
477: aload         41
479: invokevirtual #183
482: astore        42
484: aload         41
486: invokevirtual #74
489: astore        43
491: aload         41
493: invokevirtual #151
496: astore        44
498: aload         41
500: invokevirtual #74
503: astore        45
505: aconst_null
506: astore        46
508: aload_1
509: bipush        74
511: aload         41
513: aload         46
515: invokevirtual #90
518: istore        47
520: ldc           #36
522: invokestatic  #37
525: goto          530
528: astore        47
530: new           #39
533: dup
534: invokespecial #40
537: ldc           #41
539: invokevirtual #42
542: dload_2
543: invokevirtual #59
546: ldc           #44
548: invokevirtual #42
551: ldc2_w        #152
554: invokevirtual #59
557: ldc           #41
559: invokevirtual #42
562: invokevirtual #45
565: dload_2
566: ldc2_w        #152
569: dcmpl
570: ifne          577
573: iconst_1
574: goto          578
577: iconst_0
578: invokestatic  #46
581: new           #39
584: dup
585: invokespecial #40
588: ldc           #41
590: invokevirtual #42
593: dload         4
595: invokevirtual #59
598: ldc           #44
600: invokevirtual #42
603: ldc2_w        #152
606: invokevirtual #59
609: ldc           #41
611: invokevirtual #42
614: invokevirtual #45
617: dload         4
619: ldc2_w        #152
622: dcmpl
623: ifne          630
626: iconst_1
627: goto          631
630: iconst_0
631: invokestatic  #46
634: new           #39
637: dup
638: invokespecial #40
641: ldc           #41
643: invokevirtual #42
646: dload         6
648: invokevirtual #59
651: ldc           #44
653: invokevirtual #42
656: ldc2_w        #152
659: invokevirtual #59
662: ldc           #41
664: invokevirtual #42
667: invokevirtual #45
670: dload         6
672: ldc2_w        #152
675: dcmpl
676: ifne          683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #46
687: new           #39
690: dup
691: invokespecial #40
694: ldc           #41
696: invokevirtual #42
699: dload         8
701: invokevirtual #59
704: ldc           #44
706: invokevirtual #42
709: ldc2_w        #418
712: invokevirtual #59
715: ldc           #41
717: invokevirtual #42
720: invokevirtual #45
723: dload         8
725: ldc2_w        #418
728: dcmpl
729: ifne          736
732: iconst_1
733: goto          737
736: iconst_0
737: invokestatic  #46
740: aload         10
742: invokestatic  #47
745: aload         10
747: invokestatic  #48
750: ldc           #49
752: invokestatic  #50
755: aload         13
757: invokestatic  #76
760: aload         14
762: invokestatic  #76
765: aload         15
767: invokestatic  #47
770: aload         15
772: invokestatic  #48
775: ldc           #49
777: invokestatic  #50
780: aload         16
782: invokestatic  #47
785: aload         16
787: invokestatic  #48
790: ldc           #49
792: invokestatic  #50
795: aload         19
797: invokestatic  #76
800: aload         20
802: invokestatic  #76
805: aload         21
807: invokestatic  #47
810: aload         21
812: invokestatic  #48
815: ldc           #49
817: invokestatic  #50
820: new           #39
823: dup
824: invokespecial #40
827: ldc           #41
829: invokevirtual #42
832: iload         25
834: invokevirtual #43
837: ldc           #44
839: invokevirtual #42
842: iconst_0
843: invokevirtual #43
846: ldc           #41
848: invokevirtual #42
851: invokevirtual #45
854: iload         25
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #46
867: new           #39
870: dup
871: invokespecial #40
874: ldc           #41
876: invokevirtual #42
879: iload         26
881: invokevirtual #43
884: ldc           #44
886: invokevirtual #42
889: iconst_0
890: invokevirtual #43
893: ldc           #41
895: invokevirtual #42
898: invokevirtual #45
901: iload         26
903: ifne          910
906: iconst_1
907: goto          911
910: iconst_0
911: invokestatic  #46
914: new           #39
917: dup
918: invokespecial #40
921: ldc           #41
923: invokevirtual #42
926: iload         27
928: invokevirtual #43
931: ldc           #44
933: invokevirtual #42
936: iconst_0
937: invokevirtual #43
940: ldc           #41
942: invokevirtual #42
945: invokevirtual #45
948: iload         27
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #46
961: new           #39
964: dup
965: invokespecial #40
968: ldc           #41
970: invokevirtual #42
973: iload         32
975: invokevirtual #43
978: ldc           #44
980: invokevirtual #42
983: iconst_0
984: invokevirtual #43
987: ldc           #41
989: invokevirtual #42
992: invokevirtual #45
995: iload         32
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #46
1008: new           #39
1011: dup
1012: invokespecial #40
1015: ldc           #41
1017: invokevirtual #42
1020: iload         33
1022: invokevirtual #43
1025: ldc           #44
1027: invokevirtual #42
1030: iconst_0
1031: invokevirtual #43
1034: ldc           #41
1036: invokevirtual #42
1039: invokevirtual #45
1042: iload         33
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #46
1055: new           #39
1058: dup
1059: invokespecial #40
1062: ldc           #41
1064: invokevirtual #42
1067: iload         34
1069: invokevirtual #43
1072: ldc           #44
1074: invokevirtual #42
1077: iconst_0
1078: invokevirtual #43
1081: ldc           #41
1083: invokevirtual #42
1086: invokevirtual #45
1089: iload         34
1091: ifne          1098
1094: iconst_1
1095: goto          1099
1098: iconst_0
1099: invokestatic  #46
1102: aload         36
1104: invokestatic  #47
1107: aload         36
1109: invokestatic  #48
1112: ldc           #49
1114: invokestatic  #50
1117: aload         39
1119: invokestatic  #47
1122: aload         39
1124: invokestatic  #48
1127: ldc           #49
1129: invokestatic  #50
1132: aload         40
1134: invokestatic  #47
1137: aload         40
1139: invokestatic  #48
1142: ldc           #49
1144: invokestatic  #50
1147: aload         42
1149: invokestatic  #47
1152: aload         42
1154: invokestatic  #48
1157: ldc           #49
1159: invokestatic  #50
1162: aload         43
1164: invokestatic  #47
1167: aload         43
1169: invokestatic  #48
1172: ldc           #49
1174: invokestatic  #50
1177: aload         44
1179: invokestatic  #47
1182: aload         44
1184: invokestatic  #48
1187: ldc           #49
1189: invokestatic  #50
1192: aload         45
1194: invokestatic  #47
1197: aload         45
1199: invokestatic  #48
1202: ldc           #49
1204: invokestatic  #50
1207: return
Exception table:
from    to  target type
508   525   528   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test127
Start line: 6775
End line: 6860
Method source code: 
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        double double14 = levenbergMarquardtOptimizer7.getChiSquare();
        int int15 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker18 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double19 = simpleVectorialValueChecker18.getRelativeThreshold();
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker18);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter21 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer27 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker30 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer27.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker30);
        int int32 = levenbergMarquardtOptimizer27.getMaxEvaluations();
        int int33 = levenbergMarquardtOptimizer27.getMaxEvaluations();
        int int34 = levenbergMarquardtOptimizer27.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter35 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer27);
        double[] doubleArray42 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray43 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair45 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray42, doubleArray43, true);
        double[] doubleArray46 = gaussianFitter35.fit(doubleArray42);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer52 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker55 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer52.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker55);
        int int57 = levenbergMarquardtOptimizer52.getMaxEvaluations();
        int int58 = levenbergMarquardtOptimizer52.getMaxEvaluations();
        int int59 = levenbergMarquardtOptimizer52.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter60 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer52);
        double[] doubleArray67 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray68 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair70 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray67, doubleArray68, true);
        double[] doubleArray71 = gaussianFitter60.fit(doubleArray67);
        double[] doubleArray78 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray79 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray79, true);
        double[] doubleArray82 = vectorialPointValuePair81.getValue();
        double[] doubleArray83 = vectorialPointValuePair81.getValue();
        double[] doubleArray84 = vectorialPointValuePair81.getPoint();
        double[] doubleArray85 = gaussianFitter60.fit(doubleArray84);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair86 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray46, doubleArray85);
        double[] doubleArray87 = vectorialPointValuePair86.getPoint();
        double[] doubleArray88 = gaussianFitter21.fit(doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = parametric0.value((double) 97, doubleArray88);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray82);
        org.junit.Assert.assertNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #420
20: aastore
21: invokevirtual #7
24: pop
25: new           #117
28: dup
29: invokespecial #118
32: astore_1
33: new           #8
36: dup
37: ldc2_w        #9
40: ldc2_w        #11
43: ldc2_w        #13
46: dconst_1
47: ldc2_w        #13
50: invokespecial #15
53: astore_2
54: new           #16
57: dup
58: ldc2_w        #17
61: ldc2_w        #19
64: invokespecial #21
67: astore_3
68: aload_2
69: aload_3
70: invokevirtual #22
73: aload_2
74: invokevirtual #23
77: istore        4
79: aload_2
80: invokevirtual #23
83: istore        5
85: aload_2
86: invokevirtual #58
89: dstore        6
91: aload_2
92: invokevirtual #23
95: istore        8
97: new           #16
100: dup
101: ldc2_w        #17
104: ldc2_w        #19
107: invokespecial #21
110: astore        9
112: aload         9
114: invokevirtual #88
117: dstore        10
119: aload_2
120: aload         9
122: invokevirtual #22
125: new           #24
128: dup
129: aload_2
130: invokespecial #25
133: astore        12
135: new           #8
138: dup
139: ldc2_w        #9
142: ldc2_w        #11
145: ldc2_w        #13
148: dconst_1
149: ldc2_w        #13
152: invokespecial #15
155: astore        13
157: new           #16
160: dup
161: ldc2_w        #17
164: ldc2_w        #19
167: invokespecial #21
170: astore        14
172: aload         13
174: aload         14
176: invokevirtual #22
179: aload         13
181: invokevirtual #23
184: istore        15
186: aload         13
188: invokevirtual #23
191: istore        16
193: aload         13
195: invokevirtual #53
198: istore        17
200: new           #24
203: dup
204: aload         13
206: invokespecial #25
209: astore        18
211: bipush        6
213: newarray       double
215: dup
216: iconst_0
217: ldc2_w        #27
220: dastore
221: dup
222: iconst_1
223: ldc2_w        #9
226: dastore
227: dup
228: iconst_2
229: ldc2_w        #13
232: dastore
233: dup
234: iconst_3
235: ldc2_w        #29
238: dastore
239: dup
240: iconst_4
241: ldc2_w        #17
244: dastore
245: dup
246: iconst_5
247: ldc2_w        #31
250: dastore
251: astore        19
253: aconst_null
254: astore        20
256: new           #33
259: dup
260: aload         19
262: aload         20
264: iconst_1
265: invokespecial #34
268: astore        21
270: aload         18
272: aload         19
274: invokevirtual #54
277: astore        22
279: new           #8
282: dup
283: ldc2_w        #9
286: ldc2_w        #11
289: ldc2_w        #13
292: dconst_1
293: ldc2_w        #13
296: invokespecial #15
299: astore        23
301: new           #16
304: dup
305: ldc2_w        #17
308: ldc2_w        #19
311: invokespecial #21
314: astore        24
316: aload         23
318: aload         24
320: invokevirtual #22
323: aload         23
325: invokevirtual #23
328: istore        25
330: aload         23
332: invokevirtual #23
335: istore        26
337: aload         23
339: invokevirtual #53
342: istore        27
344: new           #24
347: dup
348: aload         23
350: invokespecial #25
353: astore        28
355: bipush        6
357: newarray       double
359: dup
360: iconst_0
361: ldc2_w        #27
364: dastore
365: dup
366: iconst_1
367: ldc2_w        #9
370: dastore
371: dup
372: iconst_2
373: ldc2_w        #13
376: dastore
377: dup
378: iconst_3
379: ldc2_w        #29
382: dastore
383: dup
384: iconst_4
385: ldc2_w        #17
388: dastore
389: dup
390: iconst_5
391: ldc2_w        #31
394: dastore
395: astore        29
397: aconst_null
398: astore        30
400: new           #33
403: dup
404: aload         29
406: aload         30
408: iconst_1
409: invokespecial #34
412: astore        31
414: aload         28
416: aload         29
418: invokevirtual #54
421: astore        32
423: bipush        6
425: newarray       double
427: dup
428: iconst_0
429: ldc2_w        #27
432: dastore
433: dup
434: iconst_1
435: ldc2_w        #9
438: dastore
439: dup
440: iconst_2
441: ldc2_w        #13
444: dastore
445: dup
446: iconst_3
447: ldc2_w        #29
450: dastore
451: dup
452: iconst_4
453: ldc2_w        #17
456: dastore
457: dup
458: iconst_5
459: ldc2_w        #31
462: dastore
463: astore        33
465: aconst_null
466: astore        34
468: new           #33
471: dup
472: aload         33
474: aload         34
476: iconst_1
477: invokespecial #34
480: astore        35
482: aload         35
484: invokevirtual #74
487: astore        36
489: aload         35
491: invokevirtual #74
494: astore        37
496: aload         35
498: invokevirtual #75
501: astore        38
503: aload         28
505: aload         38
507: invokevirtual #54
510: astore        39
512: new           #33
515: dup
516: aload         22
518: aload         39
520: invokespecial #109
523: astore        40
525: aload         40
527: invokevirtual #75
530: astore        41
532: aload         12
534: aload         41
536: invokevirtual #54
539: astore        42
541: aload_1
542: ldc2_w        #29
545: aload         42
547: invokevirtual #123
550: dstore        43
552: ldc           #124
554: invokestatic  #37
557: goto          562
560: astore        43
562: new           #39
565: dup
566: invokespecial #40
569: ldc           #41
571: invokevirtual #42
574: iload         4
576: invokevirtual #43
579: ldc           #44
581: invokevirtual #42
584: iconst_0
585: invokevirtual #43
588: ldc           #41
590: invokevirtual #42
593: invokevirtual #45
596: iload         4
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #46
609: new           #39
612: dup
613: invokespecial #40
616: ldc           #41
618: invokevirtual #42
621: iload         5
623: invokevirtual #43
626: ldc           #44
628: invokevirtual #42
631: iconst_0
632: invokevirtual #43
635: ldc           #41
637: invokevirtual #42
640: invokevirtual #45
643: iload         5
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #46
656: new           #39
659: dup
660: invokespecial #40
663: ldc           #41
665: invokevirtual #42
668: dload         6
670: invokevirtual #59
673: ldc           #44
675: invokevirtual #42
678: dconst_0
679: invokevirtual #59
682: ldc           #41
684: invokevirtual #42
687: invokevirtual #45
690: dload         6
692: dconst_0
693: dcmpl
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #46
705: new           #39
708: dup
709: invokespecial #40
712: ldc           #41
714: invokevirtual #42
717: iload         8
719: invokevirtual #43
722: ldc           #44
724: invokevirtual #42
727: iconst_0
728: invokevirtual #43
731: ldc           #41
733: invokevirtual #42
736: invokevirtual #45
739: iload         8
741: ifne          748
744: iconst_1
745: goto          749
748: iconst_0
749: invokestatic  #46
752: new           #39
755: dup
756: invokespecial #40
759: ldc           #41
761: invokevirtual #42
764: dload         10
766: invokevirtual #59
769: ldc           #44
771: invokevirtual #42
774: ldc2_w        #17
777: invokevirtual #59
780: ldc           #41
782: invokevirtual #42
785: invokevirtual #45
788: dload         10
790: ldc2_w        #17
793: dcmpl
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #46
805: new           #39
808: dup
809: invokespecial #40
812: ldc           #41
814: invokevirtual #42
817: iload         15
819: invokevirtual #43
822: ldc           #44
824: invokevirtual #42
827: iconst_0
828: invokevirtual #43
831: ldc           #41
833: invokevirtual #42
836: invokevirtual #45
839: iload         15
841: ifne          848
844: iconst_1
845: goto          849
848: iconst_0
849: invokestatic  #46
852: new           #39
855: dup
856: invokespecial #40
859: ldc           #41
861: invokevirtual #42
864: iload         16
866: invokevirtual #43
869: ldc           #44
871: invokevirtual #42
874: iconst_0
875: invokevirtual #43
878: ldc           #41
880: invokevirtual #42
883: invokevirtual #45
886: iload         16
888: ifne          895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #46
899: new           #39
902: dup
903: invokespecial #40
906: ldc           #41
908: invokevirtual #42
911: iload         17
913: invokevirtual #43
916: ldc           #44
918: invokevirtual #42
921: iconst_0
922: invokevirtual #43
925: ldc           #41
927: invokevirtual #42
930: invokevirtual #45
933: iload         17
935: ifne          942
938: iconst_1
939: goto          943
942: iconst_0
943: invokestatic  #46
946: aload         19
948: invokestatic  #47
951: aload         19
953: invokestatic  #48
956: ldc           #49
958: invokestatic  #50
961: aload         22
963: invokestatic  #47
966: aload         22
968: invokestatic  #48
971: ldc           #49
973: invokestatic  #50
976: new           #39
979: dup
980: invokespecial #40
983: ldc           #41
985: invokevirtual #42
988: iload         25
990: invokevirtual #43
993: ldc           #44
995: invokevirtual #42
998: iconst_0
999: invokevirtual #43
1002: ldc           #41
1004: invokevirtual #42
1007: invokevirtual #45
1010: iload         25
1012: ifne          1019
1015: iconst_1
1016: goto          1020
1019: iconst_0
1020: invokestatic  #46
1023: new           #39
1026: dup
1027: invokespecial #40
1030: ldc           #41
1032: invokevirtual #42
1035: iload         26
1037: invokevirtual #43
1040: ldc           #44
1042: invokevirtual #42
1045: iconst_0
1046: invokevirtual #43
1049: ldc           #41
1051: invokevirtual #42
1054: invokevirtual #45
1057: iload         26
1059: ifne          1066
1062: iconst_1
1063: goto          1067
1066: iconst_0
1067: invokestatic  #46
1070: new           #39
1073: dup
1074: invokespecial #40
1077: ldc           #41
1079: invokevirtual #42
1082: iload         27
1084: invokevirtual #43
1087: ldc           #44
1089: invokevirtual #42
1092: iconst_0
1093: invokevirtual #43
1096: ldc           #41
1098: invokevirtual #42
1101: invokevirtual #45
1104: iload         27
1106: ifne          1113
1109: iconst_1
1110: goto          1114
1113: iconst_0
1114: invokestatic  #46
1117: aload         29
1119: invokestatic  #47
1122: aload         29
1124: invokestatic  #48
1127: ldc           #49
1129: invokestatic  #50
1132: aload         32
1134: invokestatic  #47
1137: aload         32
1139: invokestatic  #48
1142: ldc           #49
1144: invokestatic  #50
1147: aload         33
1149: invokestatic  #47
1152: aload         33
1154: invokestatic  #48
1157: ldc           #49
1159: invokestatic  #50
1162: aload         36
1164: invokestatic  #76
1167: aload         37
1169: invokestatic  #76
1172: aload         38
1174: invokestatic  #47
1177: aload         38
1179: invokestatic  #48
1182: ldc           #49
1184: invokestatic  #50
1187: aload         39
1189: invokestatic  #47
1192: aload         39
1194: invokestatic  #48
1197: ldc           #49
1199: invokestatic  #50
1202: aload         41
1204: invokestatic  #47
1207: aload         41
1209: invokestatic  #48
1212: ldc           #49
1214: invokestatic  #50
1217: aload         42
1219: invokestatic  #47
1222: aload         42
1224: invokestatic  #48
1227: ldc           #49
1229: invokestatic  #50
1232: return
Exception table:
from    to  target type
541   557   560   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test128
Start line: 6863
End line: 6978
Method source code: 
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        java.lang.Object[] objArray3 = new java.lang.Object[] { "", (byte) 0 };
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("", objArray3);
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats6 = org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats7 = org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats9 = org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (short) -1, localizedFormats9 };
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException11 = new org.apache.commons.math.exception.MathIllegalArgumentException((org.apache.commons.math.exception.util.Localizable) localizedFormats6, (org.apache.commons.math.exception.util.Localizable) localizedFormats7, objArray10);
        java.lang.Object[] objArray12 = org.apache.commons.math.exception.util.ArgUtils.flatten(objArray10);
        org.apache.commons.math.exception.MathIllegalStateException mathIllegalStateException13 = new org.apache.commons.math.exception.MathIllegalStateException(objArray10);
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats15 = org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats16 = org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats18 = org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (short) -1, localizedFormats18 };
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException20 = new org.apache.commons.math.exception.MathIllegalArgumentException((org.apache.commons.math.exception.util.Localizable) localizedFormats15, (org.apache.commons.math.exception.util.Localizable) localizedFormats16, objArray19);
        java.lang.Object[] objArray21 = org.apache.commons.math.exception.util.ArgUtils.flatten(objArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathIllegalStateException13, "hi!", objArray19);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException4, "hi!", objArray19);
        java.lang.String str24 = convergenceException4.getPattern();
        org.apache.commons.math.optimization.OptimizationException optimizationException25 = new org.apache.commons.math.optimization.OptimizationException((java.lang.Throwable) convergenceException4);
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats26 = org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats27 = org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT;
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats29 = org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (short) -1, localizedFormats29 };
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException31 = new org.apache.commons.math.exception.MathIllegalArgumentException((org.apache.commons.math.exception.util.Localizable) localizedFormats26, (org.apache.commons.math.exception.util.Localizable) localizedFormats27, objArray30);
        java.lang.Object[] objArray32 = org.apache.commons.math.exception.util.ArgUtils.flatten(objArray30);
        org.apache.commons.math.exception.MathIllegalStateException mathIllegalStateException33 = new org.apache.commons.math.exception.MathIllegalStateException(objArray30);
        org.apache.commons.math.exception.util.Localizable localizable34 = mathIllegalStateException33.getGeneralPattern();
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats35 = org.apache.commons.math.exception.util.LocalizedFormats.NON_POSITIVE_DEFINITE_MATRIX;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Number number39 = null;
        org.apache.commons.math.exception.NumberIsTooSmallException numberIsTooSmallException41 = new org.apache.commons.math.exception.NumberIsTooSmallException(localizable37, (java.lang.Number) (byte) 1, number39, false);
        java.lang.Number number42 = numberIsTooSmallException41.getArgument();
        java.lang.Object[] objArray43 = numberIsTooSmallException41.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException((java.lang.Throwable) mathIllegalStateException33, (org.apache.commons.math.exception.util.Localizable) localizedFormats35, objArray43);
        java.lang.Throwable throwable46 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer53 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker56 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer53.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker56);
        int int58 = levenbergMarquardtOptimizer53.getMaxEvaluations();
        int int59 = levenbergMarquardtOptimizer53.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter60 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer53);
        gaussianFitter60.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction62 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer68 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker71 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer68.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker71);
        int int73 = levenbergMarquardtOptimizer68.getMaxEvaluations();
        int int74 = levenbergMarquardtOptimizer68.getMaxEvaluations();
        int int75 = levenbergMarquardtOptimizer68.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter76 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer68);
        double[] doubleArray83 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray84 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair86 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray83, doubleArray84, true);
        double[] doubleArray87 = gaussianFitter76.fit(doubleArray83);
        double[] doubleArray88 = gaussianFitter60.fit(parametricUnivariateRealFunction62, doubleArray87);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray89 = gaussianFitter60.getObservations();
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException(throwable46, "", (java.lang.Object[]) weightedObservedPointArray89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) optimizationException25, (org.apache.commons.math.exception.util.Localizable) localizedFormats35, (java.lang.Object[]) weightedObservedPointArray89);
        org.apache.commons.math.exception.util.Localizable localizable92 = optimizationException25.getGeneralPattern();
        java.lang.Object[] objArray94 = null;
        org.apache.commons.math.exception.MaxCountExceededException maxCountExceededException95 = new org.apache.commons.math.exception.MaxCountExceededException(localizable92, (java.lang.Number) 7.834393893364272E-4d, objArray94);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[, 0]");
        org.junit.Assert.assertTrue("'" + localizedFormats6 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION + "'", localizedFormats6.equals(org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION));
        org.junit.Assert.assertTrue("'" + localizedFormats7 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT + "'", localizedFormats7.equals(org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT));
        org.junit.Assert.assertTrue("'" + localizedFormats9 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE + "'", localizedFormats9.equals(org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE));
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertTrue("'" + localizedFormats15 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION + "'", localizedFormats15.equals(org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION));
        org.junit.Assert.assertTrue("'" + localizedFormats16 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT + "'", localizedFormats16.equals(org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT));
        org.junit.Assert.assertTrue("'" + localizedFormats18 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE + "'", localizedFormats18.equals(org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE));
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + localizedFormats26 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION + "'", localizedFormats26.equals(org.apache.commons.math.exception.util.LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION));
        org.junit.Assert.assertTrue("'" + localizedFormats27 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT + "'", localizedFormats27.equals(org.apache.commons.math.exception.util.LocalizedFormats.IMAGINARY_FORMAT));
        org.junit.Assert.assertTrue("'" + localizedFormats29 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE + "'", localizedFormats29.equals(org.apache.commons.math.exception.util.LocalizedFormats.ROW_INDEX_OUT_OF_RANGE));
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1, ROW_INDEX_OUT_OF_RANGE]");
        org.junit.Assert.assertTrue("'" + localizable34 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE + "'", localizable34.equals(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE));
        org.junit.Assert.assertTrue("'" + localizedFormats35 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.NON_POSITIVE_DEFINITE_MATRIX + "'", localizedFormats35.equals(org.apache.commons.math.exception.util.LocalizedFormats.NON_POSITIVE_DEFINITE_MATRIX));
        org.junit.Assert.assertEquals("'" + number42 + "' != '" + (byte) 1 + "'", number42, (byte) 1);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[1, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[1, null]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray89);
        org.junit.Assert.assertTrue("'" + localizable92 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable92.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #421
20: aastore
21: invokevirtual #7
24: pop
25: iconst_2
26: anewarray     #5
29: dup
30: iconst_0
31: ldc_w         #293
34: aastore
35: dup
36: iconst_1
37: iconst_0
38: invokestatic  #294
41: aastore
42: astore_1
43: new           #295
46: dup
47: ldc_w         #293
50: aload_1
51: invokespecial #296
54: astore_2
55: getstatic     #297
58: astore_3
59: getstatic     #298
62: astore        4
64: getstatic     #299
67: astore        5
69: iconst_2
70: anewarray     #5
73: dup
74: iconst_0
75: iconst_m1
76: invokestatic  #300
79: aastore
80: dup
81: iconst_1
82: aload         5
84: aastore
85: astore        6
87: new           #301
90: dup
91: aload_3
92: aload         4
94: aload         6
96: invokespecial #302
99: astore        7
101: aload         6
103: invokestatic  #303
106: astore        8
108: new           #304
111: dup
112: aload         6
114: invokespecial #305
117: astore        9
119: getstatic     #297
122: astore        10
124: getstatic     #298
127: astore        11
129: getstatic     #299
132: astore        12
134: iconst_2
135: anewarray     #5
138: dup
139: iconst_0
140: iconst_m1
141: invokestatic  #300
144: aastore
145: dup
146: iconst_1
147: aload         12
149: aastore
150: astore        13
152: new           #301
155: dup
156: aload         10
158: aload         11
160: aload         13
162: invokespecial #302
165: astore        14
167: aload         13
169: invokestatic  #303
172: astore        15
174: new           #295
177: dup
178: aload         9
180: ldc_w         #306
183: aload         13
185: invokespecial #307
188: astore        16
190: new           #308
193: dup
194: aload_2
195: ldc_w         #306
198: aload         13
200: invokespecial #309
203: astore        17
205: aload_2
206: invokevirtual #310
209: astore        18
211: new           #311
214: dup
215: aload_2
216: invokespecial #312
219: astore        19
221: getstatic     #297
224: astore        20
226: getstatic     #298
229: astore        21
231: getstatic     #299
234: astore        22
236: iconst_2
237: anewarray     #5
240: dup
241: iconst_0
242: iconst_m1
243: invokestatic  #300
246: aastore
247: dup
248: iconst_1
249: aload         22
251: aastore
252: astore        23
254: new           #301
257: dup
258: aload         20
260: aload         21
262: aload         23
264: invokespecial #302
267: astore        24
269: aload         23
271: invokestatic  #303
274: astore        25
276: new           #304
279: dup
280: aload         23
282: invokespecial #305
285: astore        26
287: aload         26
289: invokevirtual #313
292: astore        27
294: getstatic     #314
297: astore        28
299: aconst_null
300: astore        29
302: aconst_null
303: astore        30
305: new           #65
308: dup
309: aload         29
311: iconst_1
312: invokestatic  #294
315: aload         30
317: iconst_0
318: invokespecial #315
321: astore        31
323: aload         31
325: invokevirtual #316
328: astore        32
330: aload         31
332: invokevirtual #317
335: astore        33
337: new           #295
340: dup
341: ldc_w         #293
344: aload         33
346: invokespecial #296
349: astore        34
351: new           #308
354: dup
355: aload         26
357: aload         28
359: aload         33
361: invokespecial #318
364: astore        35
366: aconst_null
367: astore        36
369: new           #8
372: dup
373: ldc2_w        #9
376: ldc2_w        #11
379: ldc2_w        #13
382: dconst_1
383: ldc2_w        #13
386: invokespecial #15
389: astore        37
391: new           #16
394: dup
395: ldc2_w        #17
398: ldc2_w        #19
401: invokespecial #21
404: astore        38
406: aload         37
408: aload         38
410: invokevirtual #22
413: aload         37
415: invokevirtual #23
418: istore        39
420: aload         37
422: invokevirtual #23
425: istore        40
427: new           #24
430: dup
431: aload         37
433: invokespecial #25
436: astore        41
438: aload         41
440: invokevirtual #52
443: aconst_null
444: astore        42
446: new           #8
449: dup
450: ldc2_w        #9
453: ldc2_w        #11
456: ldc2_w        #13
459: dconst_1
460: ldc2_w        #13
463: invokespecial #15
466: astore        43
468: new           #16
471: dup
472: ldc2_w        #17
475: ldc2_w        #19
478: invokespecial #21
481: astore        44
483: aload         43
485: aload         44
487: invokevirtual #22
490: aload         43
492: invokevirtual #23
495: istore        45
497: aload         43
499: invokevirtual #23
502: istore        46
504: aload         43
506: invokevirtual #53
509: istore        47
511: new           #24
514: dup
515: aload         43
517: invokespecial #25
520: astore        48
522: bipush        6
524: newarray       double
526: dup
527: iconst_0
528: ldc2_w        #27
531: dastore
532: dup
533: iconst_1
534: ldc2_w        #9
537: dastore
538: dup
539: iconst_2
540: ldc2_w        #13
543: dastore
544: dup
545: iconst_3
546: ldc2_w        #29
549: dastore
550: dup
551: iconst_4
552: ldc2_w        #17
555: dastore
556: dup
557: iconst_5
558: ldc2_w        #31
561: dastore
562: astore        49
564: aconst_null
565: astore        50
567: new           #33
570: dup
571: aload         49
573: aload         50
575: iconst_1
576: invokespecial #34
579: astore        51
581: aload         48
583: aload         49
585: invokevirtual #54
588: astore        52
590: aload         41
592: aload         42
594: aload         52
596: invokevirtual #55
599: astore        53
601: aload         41
603: invokevirtual #62
606: astore        54
608: new           #295
611: dup
612: aload         36
614: ldc_w         #293
617: aload         54
619: checkcast     #319
622: invokespecial #307
625: astore        55
627: new           #295
630: dup
631: aload         19
633: aload         28
635: aload         54
637: checkcast     #319
640: invokespecial #320
643: astore        56
645: aload         19
647: invokevirtual #422
650: astore        57
652: aconst_null
653: astore        58
655: new           #423
658: dup
659: aload         57
661: ldc2_w        #424
664: invokestatic  #426
667: aload         58
669: invokespecial #427
672: astore        59
674: aload_1
675: invokestatic  #47
678: aload_1
679: invokestatic  #321
682: ldc_w         #322
685: invokestatic  #50
688: aload_1
689: invokestatic  #323
692: ldc_w         #322
695: invokestatic  #50
698: new           #39
701: dup
702: invokespecial #40
705: ldc           #41
707: invokevirtual #42
710: aload_3
711: invokevirtual #324
714: ldc           #44
716: invokevirtual #42
719: getstatic     #297
722: invokevirtual #324
725: ldc           #41
727: invokevirtual #42
730: invokevirtual #45
733: aload_3
734: getstatic     #297
737: invokevirtual #325
740: invokestatic  #46
743: new           #39
746: dup
747: invokespecial #40
750: ldc           #41
752: invokevirtual #42
755: aload         4
757: invokevirtual #324
760: ldc           #44
762: invokevirtual #42
765: getstatic     #298
768: invokevirtual #324
771: ldc           #41
773: invokevirtual #42
776: invokevirtual #45
779: aload         4
781: getstatic     #298
784: invokevirtual #325
787: invokestatic  #46
790: new           #39
793: dup
794: invokespecial #40
797: ldc           #41
799: invokevirtual #42
802: aload         5
804: invokevirtual #324
807: ldc           #44
809: invokevirtual #42
812: getstatic     #299
815: invokevirtual #324
818: ldc           #41
820: invokevirtual #42
823: invokevirtual #45
826: aload         5
828: getstatic     #299
831: invokevirtual #325
834: invokestatic  #46
837: aload         6
839: invokestatic  #47
842: aload         6
844: invokestatic  #321
847: ldc_w         #326
850: invokestatic  #50
853: aload         6
855: invokestatic  #323
858: ldc_w         #326
861: invokestatic  #50
864: aload         8
866: invokestatic  #47
869: aload         8
871: invokestatic  #321
874: ldc_w         #326
877: invokestatic  #50
880: aload         8
882: invokestatic  #323
885: ldc_w         #326
888: invokestatic  #50
891: new           #39
894: dup
895: invokespecial #40
898: ldc           #41
900: invokevirtual #42
903: aload         10
905: invokevirtual #324
908: ldc           #44
910: invokevirtual #42
913: getstatic     #297
916: invokevirtual #324
919: ldc           #41
921: invokevirtual #42
924: invokevirtual #45
927: aload         10
929: getstatic     #297
932: invokevirtual #325
935: invokestatic  #46
938: new           #39
941: dup
942: invokespecial #40
945: ldc           #41
947: invokevirtual #42
950: aload         11
952: invokevirtual #324
955: ldc           #44
957: invokevirtual #42
960: getstatic     #298
963: invokevirtual #324
966: ldc           #41
968: invokevirtual #42
971: invokevirtual #45
974: aload         11
976: getstatic     #298
979: invokevirtual #325
982: invokestatic  #46
985: new           #39
988: dup
989: invokespecial #40
992: ldc           #41
994: invokevirtual #42
997: aload         12
999: invokevirtual #324
1002: ldc           #44
1004: invokevirtual #42
1007: getstatic     #299
1010: invokevirtual #324
1013: ldc           #41
1015: invokevirtual #42
1018: invokevirtual #45
1021: aload         12
1023: getstatic     #299
1026: invokevirtual #325
1029: invokestatic  #46
1032: aload         13
1034: invokestatic  #47
1037: aload         13
1039: invokestatic  #321
1042: ldc_w         #326
1045: invokestatic  #50
1048: aload         13
1050: invokestatic  #323
1053: ldc_w         #326
1056: invokestatic  #50
1059: aload         15
1061: invokestatic  #47
1064: aload         15
1066: invokestatic  #321
1069: ldc_w         #326
1072: invokestatic  #50
1075: aload         15
1077: invokestatic  #323
1080: ldc_w         #326
1083: invokestatic  #50
1086: new           #39
1089: dup
1090: invokespecial #40
1093: ldc           #41
1095: invokevirtual #42
1098: aload         18
1100: invokevirtual #42
1103: ldc_w         #327
1106: invokevirtual #42
1109: invokevirtual #45
1112: aload         18
1114: ldc_w         #293
1117: invokestatic  #328
1120: new           #39
1123: dup
1124: invokespecial #40
1127: ldc           #41
1129: invokevirtual #42
1132: aload         20
1134: invokevirtual #324
1137: ldc           #44
1139: invokevirtual #42
1142: getstatic     #297
1145: invokevirtual #324
1148: ldc           #41
1150: invokevirtual #42
1153: invokevirtual #45
1156: aload         20
1158: getstatic     #297
1161: invokevirtual #325
1164: invokestatic  #46
1167: new           #39
1170: dup
1171: invokespecial #40
1174: ldc           #41
1176: invokevirtual #42
1179: aload         21
1181: invokevirtual #324
1184: ldc           #44
1186: invokevirtual #42
1189: getstatic     #298
1192: invokevirtual #324
1195: ldc           #41
1197: invokevirtual #42
1200: invokevirtual #45
1203: aload         21
1205: getstatic     #298
1208: invokevirtual #325
1211: invokestatic  #46
1214: new           #39
1217: dup
1218: invokespecial #40
1221: ldc           #41
1223: invokevirtual #42
1226: aload         22
1228: invokevirtual #324
1231: ldc           #44
1233: invokevirtual #42
1236: getstatic     #299
1239: invokevirtual #324
1242: ldc           #41
1244: invokevirtual #42
1247: invokevirtual #45
1250: aload         22
1252: getstatic     #299
1255: invokevirtual #325
1258: invokestatic  #46
1261: aload         23
1263: invokestatic  #47
1266: aload         23
1268: invokestatic  #321
1271: ldc_w         #326
1274: invokestatic  #50
1277: aload         23
1279: invokestatic  #323
1282: ldc_w         #326
1285: invokestatic  #50
1288: aload         25
1290: invokestatic  #47
1293: aload         25
1295: invokestatic  #321
1298: ldc_w         #326
1301: invokestatic  #50
1304: aload         25
1306: invokestatic  #323
1309: ldc_w         #326
1312: invokestatic  #50
1315: new           #39
1318: dup
1319: invokespecial #40
1322: ldc           #41
1324: invokevirtual #42
1327: aload         27
1329: invokevirtual #324
1332: ldc           #44
1334: invokevirtual #42
1337: getstatic     #329
1340: invokevirtual #324
1343: ldc           #41
1345: invokevirtual #42
1348: invokevirtual #45
1351: aload         27
1353: getstatic     #329
1356: invokevirtual #330
1359: invokestatic  #46
1362: new           #39
1365: dup
1366: invokespecial #40
1369: ldc           #41
1371: invokevirtual #42
1374: aload         28
1376: invokevirtual #324
1379: ldc           #44
1381: invokevirtual #42
1384: getstatic     #314
1387: invokevirtual #324
1390: ldc           #41
1392: invokevirtual #42
1395: invokevirtual #45
1398: aload         28
1400: getstatic     #314
1403: invokevirtual #325
1406: invokestatic  #46
1409: new           #39
1412: dup
1413: invokespecial #40
1416: ldc           #41
1418: invokevirtual #42
1421: aload         32
1423: invokevirtual #324
1426: ldc           #44
1428: invokevirtual #42
1431: iconst_1
1432: invokevirtual #43
1435: ldc           #41
1437: invokevirtual #42
1440: invokevirtual #45
1443: aload         32
1445: iconst_1
1446: invokestatic  #294
1449: invokestatic  #328
1452: aload         33
1454: invokestatic  #47
1457: aload         33
1459: invokestatic  #321
1462: ldc_w         #331
1465: invokestatic  #50
1468: aload         33
1470: invokestatic  #323
1473: ldc_w         #331
1476: invokestatic  #50
1479: new           #39
1482: dup
1483: invokespecial #40
1486: ldc           #41
1488: invokevirtual #42
1491: iload         39
1493: invokevirtual #43
1496: ldc           #44
1498: invokevirtual #42
1501: iconst_0
1502: invokevirtual #43
1505: ldc           #41
1507: invokevirtual #42
1510: invokevirtual #45
1513: iload         39
1515: ifne          1522
1518: iconst_1
1519: goto          1523
1522: iconst_0
1523: invokestatic  #46
1526: new           #39
1529: dup
1530: invokespecial #40
1533: ldc           #41
1535: invokevirtual #42
1538: iload         40
1540: invokevirtual #43
1543: ldc           #44
1545: invokevirtual #42
1548: iconst_0
1549: invokevirtual #43
1552: ldc           #41
1554: invokevirtual #42
1557: invokevirtual #45
1560: iload         40
1562: ifne          1569
1565: iconst_1
1566: goto          1570
1569: iconst_0
1570: invokestatic  #46
1573: new           #39
1576: dup
1577: invokespecial #40
1580: ldc           #41
1582: invokevirtual #42
1585: iload         45
1587: invokevirtual #43
1590: ldc           #44
1592: invokevirtual #42
1595: iconst_0
1596: invokevirtual #43
1599: ldc           #41
1601: invokevirtual #42
1604: invokevirtual #45
1607: iload         45
1609: ifne          1616
1612: iconst_1
1613: goto          1617
1616: iconst_0
1617: invokestatic  #46
1620: new           #39
1623: dup
1624: invokespecial #40
1627: ldc           #41
1629: invokevirtual #42
1632: iload         46
1634: invokevirtual #43
1637: ldc           #44
1639: invokevirtual #42
1642: iconst_0
1643: invokevirtual #43
1646: ldc           #41
1648: invokevirtual #42
1651: invokevirtual #45
1654: iload         46
1656: ifne          1663
1659: iconst_1
1660: goto          1664
1663: iconst_0
1664: invokestatic  #46
1667: new           #39
1670: dup
1671: invokespecial #40
1674: ldc           #41
1676: invokevirtual #42
1679: iload         47
1681: invokevirtual #43
1684: ldc           #44
1686: invokevirtual #42
1689: iconst_0
1690: invokevirtual #43
1693: ldc           #41
1695: invokevirtual #42
1698: invokevirtual #45
1701: iload         47
1703: ifne          1710
1706: iconst_1
1707: goto          1711
1710: iconst_0
1711: invokestatic  #46
1714: aload         49
1716: invokestatic  #47
1719: aload         49
1721: invokestatic  #48
1724: ldc           #49
1726: invokestatic  #50
1729: aload         52
1731: invokestatic  #47
1734: aload         52
1736: invokestatic  #48
1739: ldc           #49
1741: invokestatic  #50
1744: aload         53
1746: invokestatic  #47
1749: aload         53
1751: invokestatic  #48
1754: ldc           #49
1756: invokestatic  #50
1759: aload         54
1761: invokestatic  #47
1764: new           #39
1767: dup
1768: invokespecial #40
1771: ldc           #41
1773: invokevirtual #42
1776: aload         57
1778: invokevirtual #324
1781: ldc           #44
1783: invokevirtual #42
1786: getstatic     #428
1789: invokevirtual #324
1792: ldc           #41
1794: invokevirtual #42
1797: invokevirtual #45
1800: aload         57
1802: getstatic     #428
1805: invokevirtual #330
1808: invokestatic  #46
1811: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test129
Start line: 6981
End line: 7034
Method source code: 
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter15 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter16 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        double[] doubleArray23 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray24 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair26 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray23, doubleArray24, true);
        double[] doubleArray27 = vectorialPointValuePair26.getValue();
        double[] doubleArray28 = vectorialPointValuePair26.getValue();
        double[] doubleArray29 = vectorialPointValuePair26.getPoint();
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = vectorialPointValuePair39.getValue();
        double[] doubleArray41 = vectorialPointValuePair39.getValue();
        double[] doubleArray42 = vectorialPointValuePair39.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray29, doubleArray42, false);
        double[] doubleArray45 = vectorialPointValuePair44.getPoint();
        double[] doubleArray46 = gaussianFitter16.fit(doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray47 = parametric0.gradient(0.9999999999999999d, doubleArray46);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #429
20: aastore
21: invokevirtual #7
24: pop
25: new           #117
28: dup
29: invokespecial #118
32: astore_1
33: new           #8
36: dup
37: ldc2_w        #9
40: ldc2_w        #11
43: ldc2_w        #13
46: dconst_1
47: ldc2_w        #13
50: invokespecial #15
53: astore_2
54: new           #16
57: dup
58: ldc2_w        #17
61: ldc2_w        #19
64: invokespecial #21
67: astore_3
68: aload_2
69: aload_3
70: invokevirtual #22
73: aload_2
74: invokevirtual #23
77: istore        4
79: aload_2
80: invokevirtual #23
83: istore        5
85: aload_2
86: invokevirtual #53
89: istore        6
91: new           #67
94: dup
95: aload_2
96: invokespecial #68
99: astore        7
101: new           #24
104: dup
105: aload_2
106: invokespecial #25
109: astore        8
111: bipush        6
113: newarray       double
115: dup
116: iconst_0
117: ldc2_w        #27
120: dastore
121: dup
122: iconst_1
123: ldc2_w        #9
126: dastore
127: dup
128: iconst_2
129: ldc2_w        #13
132: dastore
133: dup
134: iconst_3
135: ldc2_w        #29
138: dastore
139: dup
140: iconst_4
141: ldc2_w        #17
144: dastore
145: dup
146: iconst_5
147: ldc2_w        #31
150: dastore
151: astore        9
153: aconst_null
154: astore        10
156: new           #33
159: dup
160: aload         9
162: aload         10
164: iconst_1
165: invokespecial #34
168: astore        11
170: aload         11
172: invokevirtual #74
175: astore        12
177: aload         11
179: invokevirtual #74
182: astore        13
184: aload         11
186: invokevirtual #75
189: astore        14
191: bipush        6
193: newarray       double
195: dup
196: iconst_0
197: ldc2_w        #27
200: dastore
201: dup
202: iconst_1
203: ldc2_w        #9
206: dastore
207: dup
208: iconst_2
209: ldc2_w        #13
212: dastore
213: dup
214: iconst_3
215: ldc2_w        #29
218: dastore
219: dup
220: iconst_4
221: ldc2_w        #17
224: dastore
225: dup
226: iconst_5
227: ldc2_w        #31
230: dastore
231: astore        15
233: aconst_null
234: astore        16
236: new           #33
239: dup
240: aload         15
242: aload         16
244: iconst_1
245: invokespecial #34
248: astore        17
250: aload         17
252: invokevirtual #74
255: astore        18
257: aload         17
259: invokevirtual #74
262: astore        19
264: aload         17
266: invokevirtual #75
269: astore        20
271: new           #33
274: dup
275: aload         14
277: aload         20
279: iconst_0
280: invokespecial #34
283: astore        21
285: aload         21
287: invokevirtual #75
290: astore        22
292: aload         8
294: aload         22
296: invokevirtual #54
299: astore        23
301: aload_1
302: ldc2_w        #430
305: aload         23
307: invokevirtual #119
310: astore        24
312: ldc           #124
314: invokestatic  #37
317: goto          322
320: astore        24
322: new           #39
325: dup
326: invokespecial #40
329: ldc           #41
331: invokevirtual #42
334: iload         4
336: invokevirtual #43
339: ldc           #44
341: invokevirtual #42
344: iconst_0
345: invokevirtual #43
348: ldc           #41
350: invokevirtual #42
353: invokevirtual #45
356: iload         4
358: ifne          365
361: iconst_1
362: goto          366
365: iconst_0
366: invokestatic  #46
369: new           #39
372: dup
373: invokespecial #40
376: ldc           #41
378: invokevirtual #42
381: iload         5
383: invokevirtual #43
386: ldc           #44
388: invokevirtual #42
391: iconst_0
392: invokevirtual #43
395: ldc           #41
397: invokevirtual #42
400: invokevirtual #45
403: iload         5
405: ifne          412
408: iconst_1
409: goto          413
412: iconst_0
413: invokestatic  #46
416: new           #39
419: dup
420: invokespecial #40
423: ldc           #41
425: invokevirtual #42
428: iload         6
430: invokevirtual #43
433: ldc           #44
435: invokevirtual #42
438: iconst_0
439: invokevirtual #43
442: ldc           #41
444: invokevirtual #42
447: invokevirtual #45
450: iload         6
452: ifne          459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #46
463: aload         9
465: invokestatic  #47
468: aload         9
470: invokestatic  #48
473: ldc           #49
475: invokestatic  #50
478: aload         12
480: invokestatic  #76
483: aload         13
485: invokestatic  #76
488: aload         14
490: invokestatic  #47
493: aload         14
495: invokestatic  #48
498: ldc           #49
500: invokestatic  #50
503: aload         15
505: invokestatic  #47
508: aload         15
510: invokestatic  #48
513: ldc           #49
515: invokestatic  #50
518: aload         18
520: invokestatic  #76
523: aload         19
525: invokestatic  #76
528: aload         20
530: invokestatic  #47
533: aload         20
535: invokestatic  #48
538: ldc           #49
540: invokestatic  #50
543: aload         22
545: invokestatic  #47
548: aload         22
550: invokestatic  #48
553: ldc           #49
555: invokestatic  #50
558: aload         23
560: invokestatic  #47
563: aload         23
565: invokestatic  #48
568: ldc           #49
570: invokestatic  #50
573: return
Exception table:
from    to  target type
301   317   320   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test130
Start line: 7037
End line: 7101
Method source code: 
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        double[] doubleArray6 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray7 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair9 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray6, doubleArray7, true);
        double[] doubleArray10 = vectorialPointValuePair9.getValue();
        double[] doubleArray11 = vectorialPointValuePair9.getValue();
        double[] doubleArray12 = vectorialPointValuePair9.getPoint();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer31 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker34 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer31.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker34);
        int int36 = levenbergMarquardtOptimizer31.getMaxEvaluations();
        int int37 = levenbergMarquardtOptimizer31.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter38 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer31);
        gaussianFitter38.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction40 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer46.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker49);
        int int51 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int52 = levenbergMarquardtOptimizer46.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer46.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter54 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer46);
        double[] doubleArray61 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray62 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray62, true);
        double[] doubleArray65 = gaussianFitter54.fit(doubleArray61);
        double[] doubleArray66 = gaussianFitter38.fit(parametricUnivariateRealFunction40, doubleArray65);
        double[] doubleArray67 = gaussianFitter25.fit(doubleArray65);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray65, false);
        double[] doubleArray70 = vectorialPointValuePair69.getPoint();
        double[] doubleArray71 = vectorialPointValuePair69.getValueRef();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #432
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: ldc2_w        #27
34: dastore
35: dup
36: iconst_1
37: ldc2_w        #9
40: dastore
41: dup
42: iconst_2
43: ldc2_w        #13
46: dastore
47: dup
48: iconst_3
49: ldc2_w        #29
52: dastore
53: dup
54: iconst_4
55: ldc2_w        #17
58: dastore
59: dup
60: iconst_5
61: ldc2_w        #31
64: dastore
65: astore_1
66: aconst_null
67: astore_2
68: new           #33
71: dup
72: aload_1
73: aload_2
74: iconst_1
75: invokespecial #34
78: astore_3
79: aload_3
80: invokevirtual #74
83: astore        4
85: aload_3
86: invokevirtual #74
89: astore        5
91: aload_3
92: invokevirtual #75
95: astore        6
97: new           #8
100: dup
101: ldc2_w        #9
104: ldc2_w        #11
107: ldc2_w        #13
110: dconst_1
111: ldc2_w        #13
114: invokespecial #15
117: astore        7
119: new           #16
122: dup
123: ldc2_w        #17
126: ldc2_w        #19
129: invokespecial #21
132: astore        8
134: aload         7
136: aload         8
138: invokevirtual #22
141: aload         7
143: invokevirtual #23
146: istore        9
148: aload         7
150: invokevirtual #23
153: istore        10
155: new           #24
158: dup
159: aload         7
161: invokespecial #25
164: astore        11
166: new           #8
169: dup
170: ldc2_w        #9
173: ldc2_w        #11
176: ldc2_w        #13
179: dconst_1
180: ldc2_w        #13
183: invokespecial #15
186: astore        12
188: new           #16
191: dup
192: ldc2_w        #17
195: ldc2_w        #19
198: invokespecial #21
201: astore        13
203: aload         12
205: aload         13
207: invokevirtual #22
210: aload         12
212: invokevirtual #23
215: istore        14
217: aload         12
219: invokevirtual #23
222: istore        15
224: new           #24
227: dup
228: aload         12
230: invokespecial #25
233: astore        16
235: aload         16
237: invokevirtual #52
240: aconst_null
241: astore        17
243: new           #8
246: dup
247: ldc2_w        #9
250: ldc2_w        #11
253: ldc2_w        #13
256: dconst_1
257: ldc2_w        #13
260: invokespecial #15
263: astore        18
265: new           #16
268: dup
269: ldc2_w        #17
272: ldc2_w        #19
275: invokespecial #21
278: astore        19
280: aload         18
282: aload         19
284: invokevirtual #22
287: aload         18
289: invokevirtual #23
292: istore        20
294: aload         18
296: invokevirtual #23
299: istore        21
301: aload         18
303: invokevirtual #53
306: istore        22
308: new           #24
311: dup
312: aload         18
314: invokespecial #25
317: astore        23
319: bipush        6
321: newarray       double
323: dup
324: iconst_0
325: ldc2_w        #27
328: dastore
329: dup
330: iconst_1
331: ldc2_w        #9
334: dastore
335: dup
336: iconst_2
337: ldc2_w        #13
340: dastore
341: dup
342: iconst_3
343: ldc2_w        #29
346: dastore
347: dup
348: iconst_4
349: ldc2_w        #17
352: dastore
353: dup
354: iconst_5
355: ldc2_w        #31
358: dastore
359: astore        24
361: aconst_null
362: astore        25
364: new           #33
367: dup
368: aload         24
370: aload         25
372: iconst_1
373: invokespecial #34
376: astore        26
378: aload         23
380: aload         24
382: invokevirtual #54
385: astore        27
387: aload         16
389: aload         17
391: aload         27
393: invokevirtual #55
396: astore        28
398: aload         11
400: aload         27
402: invokevirtual #54
405: astore        29
407: new           #33
410: dup
411: aload         6
413: aload         27
415: iconst_0
416: invokespecial #34
419: astore        30
421: aload         30
423: invokevirtual #75
426: astore        31
428: aload         30
430: invokevirtual #183
433: astore        32
435: aload_1
436: invokestatic  #47
439: aload_1
440: invokestatic  #48
443: ldc           #49
445: invokestatic  #50
448: aload         4
450: invokestatic  #76
453: aload         5
455: invokestatic  #76
458: aload         6
460: invokestatic  #47
463: aload         6
465: invokestatic  #48
468: ldc           #49
470: invokestatic  #50
473: new           #39
476: dup
477: invokespecial #40
480: ldc           #41
482: invokevirtual #42
485: iload         9
487: invokevirtual #43
490: ldc           #44
492: invokevirtual #42
495: iconst_0
496: invokevirtual #43
499: ldc           #41
501: invokevirtual #42
504: invokevirtual #45
507: iload         9
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #46
520: new           #39
523: dup
524: invokespecial #40
527: ldc           #41
529: invokevirtual #42
532: iload         10
534: invokevirtual #43
537: ldc           #44
539: invokevirtual #42
542: iconst_0
543: invokevirtual #43
546: ldc           #41
548: invokevirtual #42
551: invokevirtual #45
554: iload         10
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #46
567: new           #39
570: dup
571: invokespecial #40
574: ldc           #41
576: invokevirtual #42
579: iload         14
581: invokevirtual #43
584: ldc           #44
586: invokevirtual #42
589: iconst_0
590: invokevirtual #43
593: ldc           #41
595: invokevirtual #42
598: invokevirtual #45
601: iload         14
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #46
614: new           #39
617: dup
618: invokespecial #40
621: ldc           #41
623: invokevirtual #42
626: iload         15
628: invokevirtual #43
631: ldc           #44
633: invokevirtual #42
636: iconst_0
637: invokevirtual #43
640: ldc           #41
642: invokevirtual #42
645: invokevirtual #45
648: iload         15
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #46
661: new           #39
664: dup
665: invokespecial #40
668: ldc           #41
670: invokevirtual #42
673: iload         20
675: invokevirtual #43
678: ldc           #44
680: invokevirtual #42
683: iconst_0
684: invokevirtual #43
687: ldc           #41
689: invokevirtual #42
692: invokevirtual #45
695: iload         20
697: ifne          704
700: iconst_1
701: goto          705
704: iconst_0
705: invokestatic  #46
708: new           #39
711: dup
712: invokespecial #40
715: ldc           #41
717: invokevirtual #42
720: iload         21
722: invokevirtual #43
725: ldc           #44
727: invokevirtual #42
730: iconst_0
731: invokevirtual #43
734: ldc           #41
736: invokevirtual #42
739: invokevirtual #45
742: iload         21
744: ifne          751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #46
755: new           #39
758: dup
759: invokespecial #40
762: ldc           #41
764: invokevirtual #42
767: iload         22
769: invokevirtual #43
772: ldc           #44
774: invokevirtual #42
777: iconst_0
778: invokevirtual #43
781: ldc           #41
783: invokevirtual #42
786: invokevirtual #45
789: iload         22
791: ifne          798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #46
802: aload         24
804: invokestatic  #47
807: aload         24
809: invokestatic  #48
812: ldc           #49
814: invokestatic  #50
817: aload         27
819: invokestatic  #47
822: aload         27
824: invokestatic  #48
827: ldc           #49
829: invokestatic  #50
832: aload         28
834: invokestatic  #47
837: aload         28
839: invokestatic  #48
842: ldc           #49
844: invokestatic  #50
847: aload         29
849: invokestatic  #47
852: aload         29
854: invokestatic  #48
857: ldc           #49
859: invokestatic  #50
862: aload         31
864: invokestatic  #47
867: aload         31
869: invokestatic  #48
872: ldc           #49
874: invokestatic  #50
877: aload         32
879: invokestatic  #47
882: aload         32
884: invokestatic  #48
887: ldc           #49
889: invokestatic  #50
892: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test131
Start line: 7104
End line: 7137
Method source code: 
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double double13 = levenbergMarquardtOptimizer5.getRMS();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer19 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker22 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer19.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker22);
        int int24 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        int int25 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        double double26 = levenbergMarquardtOptimizer19.getChiSquare();
        int int27 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker28 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double29 = simpleVectorialValueChecker28.getRelativeThreshold();
        levenbergMarquardtOptimizer19.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker28);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker31 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double32 = simpleVectorialValueChecker31.getRelativeThreshold();
        levenbergMarquardtOptimizer19.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker31);
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker31);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.1102230246251565E-14d + "'", double29 == 1.1102230246251565E-14d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.1102230246251565E-14d + "'", double32 == 1.1102230246251565E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #433
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload_1
87: invokevirtual #201
90: dstore        6
92: new           #8
95: dup
96: ldc2_w        #9
99: ldc2_w        #11
102: ldc2_w        #13
105: dconst_1
106: ldc2_w        #13
109: invokespecial #15
112: astore        8
114: new           #16
117: dup
118: ldc2_w        #17
121: ldc2_w        #19
124: invokespecial #21
127: astore        9
129: aload         8
131: aload         9
133: invokevirtual #22
136: aload         8
138: invokevirtual #23
141: istore        10
143: aload         8
145: invokevirtual #23
148: istore        11
150: aload         8
152: invokevirtual #58
155: dstore        12
157: aload         8
159: invokevirtual #23
162: istore        14
164: new           #16
167: dup
168: invokespecial #150
171: astore        15
173: aload         15
175: invokevirtual #88
178: dstore        16
180: aload         8
182: aload         15
184: invokevirtual #22
187: new           #16
190: dup
191: invokespecial #150
194: astore        18
196: aload         18
198: invokevirtual #88
201: dstore        19
203: aload         8
205: aload         18
207: invokevirtual #22
210: aload_1
211: aload         18
213: invokevirtual #22
216: new           #39
219: dup
220: invokespecial #40
223: ldc           #41
225: invokevirtual #42
228: iload_3
229: invokevirtual #43
232: ldc           #44
234: invokevirtual #42
237: iconst_0
238: invokevirtual #43
241: ldc           #41
243: invokevirtual #42
246: invokevirtual #45
249: iload_3
250: ifne          257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #46
261: new           #39
264: dup
265: invokespecial #40
268: ldc           #41
270: invokevirtual #42
273: iload         4
275: invokevirtual #43
278: ldc           #44
280: invokevirtual #42
283: iconst_0
284: invokevirtual #43
287: ldc           #41
289: invokevirtual #42
292: invokevirtual #45
295: iload         4
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #46
308: dload         6
310: invokestatic  #202
313: invokestatic  #203
316: new           #39
319: dup
320: invokespecial #40
323: ldc           #41
325: invokevirtual #42
328: iload         10
330: invokevirtual #43
333: ldc           #44
335: invokevirtual #42
338: iconst_0
339: invokevirtual #43
342: ldc           #41
344: invokevirtual #42
347: invokevirtual #45
350: iload         10
352: ifne          359
355: iconst_1
356: goto          360
359: iconst_0
360: invokestatic  #46
363: new           #39
366: dup
367: invokespecial #40
370: ldc           #41
372: invokevirtual #42
375: iload         11
377: invokevirtual #43
380: ldc           #44
382: invokevirtual #42
385: iconst_0
386: invokevirtual #43
389: ldc           #41
391: invokevirtual #42
394: invokevirtual #45
397: iload         11
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #46
410: new           #39
413: dup
414: invokespecial #40
417: ldc           #41
419: invokevirtual #42
422: dload         12
424: invokevirtual #59
427: ldc           #44
429: invokevirtual #42
432: dconst_0
433: invokevirtual #59
436: ldc           #41
438: invokevirtual #42
441: invokevirtual #45
444: dload         12
446: dconst_0
447: dcmpl
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #46
459: new           #39
462: dup
463: invokespecial #40
466: ldc           #41
468: invokevirtual #42
471: iload         14
473: invokevirtual #43
476: ldc           #44
478: invokevirtual #42
481: iconst_0
482: invokevirtual #43
485: ldc           #41
487: invokevirtual #42
490: invokevirtual #45
493: iload         14
495: ifne          502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #46
506: new           #39
509: dup
510: invokespecial #40
513: ldc           #41
515: invokevirtual #42
518: dload         16
520: invokevirtual #59
523: ldc           #44
525: invokevirtual #42
528: ldc2_w        #152
531: invokevirtual #59
534: ldc           #41
536: invokevirtual #42
539: invokevirtual #45
542: dload         16
544: ldc2_w        #152
547: dcmpl
548: ifne          555
551: iconst_1
552: goto          556
555: iconst_0
556: invokestatic  #46
559: new           #39
562: dup
563: invokespecial #40
566: ldc           #41
568: invokevirtual #42
571: dload         19
573: invokevirtual #59
576: ldc           #44
578: invokevirtual #42
581: ldc2_w        #152
584: invokevirtual #59
587: ldc           #41
589: invokevirtual #42
592: invokevirtual #45
595: dload         19
597: ldc2_w        #152
600: dcmpl
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #46
612: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test132
Start line: 7140
End line: 7215
Method source code: 
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter28 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction29 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer35 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker38 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer35.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker38);
        int int40 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int41 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer35.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter43 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer35);
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = gaussianFitter43.fit(doubleArray50);
        double[] doubleArray55 = curveFitter28.fit(parametricUnivariateRealFunction29, doubleArray50);
        double[] doubleArray56 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray50);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer62 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker65 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer62.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker65);
        int int67 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        int int68 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        int int69 = levenbergMarquardtOptimizer62.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter70 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer62);
        double[] doubleArray77 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray78 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray77, doubleArray78, true);
        double[] doubleArray81 = gaussianFitter70.fit(doubleArray77);
        double[] doubleArray82 = gaussianFitter12.fit(doubleArray81);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint86 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, (double) 1, (double) (short) 100);
        double double87 = weightedObservedPoint86.getY();
        gaussianFitter12.addObservedPoint(weightedObservedPoint86);
        gaussianFitter12.addObservedPoint((-0.5540437953657898d), (double) 4096.0f);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #434
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aconst_null
94: astore        7
96: new           #8
99: dup
100: ldc2_w        #9
103: ldc2_w        #11
106: ldc2_w        #13
109: dconst_1
110: ldc2_w        #13
113: invokespecial #15
116: astore        8
118: new           #16
121: dup
122: ldc2_w        #17
125: ldc2_w        #19
128: invokespecial #21
131: astore        9
133: aload         8
135: aload         9
137: invokevirtual #22
140: aload         8
142: invokevirtual #23
145: istore        10
147: aload         8
149: invokevirtual #23
152: istore        11
154: aload         8
156: invokevirtual #53
159: istore        12
161: new           #67
164: dup
165: aload         8
167: invokespecial #68
170: astore        13
172: aconst_null
173: astore        14
175: new           #8
178: dup
179: ldc2_w        #9
182: ldc2_w        #11
185: ldc2_w        #13
188: dconst_1
189: ldc2_w        #13
192: invokespecial #15
195: astore        15
197: new           #16
200: dup
201: ldc2_w        #17
204: ldc2_w        #19
207: invokespecial #21
210: astore        16
212: aload         15
214: aload         16
216: invokevirtual #22
219: aload         15
221: invokevirtual #23
224: istore        17
226: aload         15
228: invokevirtual #23
231: istore        18
233: aload         15
235: invokevirtual #53
238: istore        19
240: new           #24
243: dup
244: aload         15
246: invokespecial #25
249: astore        20
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: ldc2_w        #27
260: dastore
261: dup
262: iconst_1
263: ldc2_w        #9
266: dastore
267: dup
268: iconst_2
269: ldc2_w        #13
272: dastore
273: dup
274: iconst_3
275: ldc2_w        #29
278: dastore
279: dup
280: iconst_4
281: ldc2_w        #17
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #31
290: dastore
291: astore        21
293: aconst_null
294: astore        22
296: new           #33
299: dup
300: aload         21
302: aload         22
304: iconst_1
305: invokespecial #34
308: astore        23
310: aload         20
312: aload         21
314: invokevirtual #54
317: astore        24
319: aload         13
321: aload         14
323: aload         21
325: invokevirtual #89
328: astore        25
330: aload         5
332: aload         7
334: aload         21
336: invokevirtual #55
339: astore        26
341: new           #8
344: dup
345: ldc2_w        #9
348: ldc2_w        #11
351: ldc2_w        #13
354: dconst_1
355: ldc2_w        #13
358: invokespecial #15
361: astore        27
363: new           #16
366: dup
367: ldc2_w        #17
370: ldc2_w        #19
373: invokespecial #21
376: astore        28
378: aload         27
380: aload         28
382: invokevirtual #22
385: aload         27
387: invokevirtual #23
390: istore        29
392: aload         27
394: invokevirtual #23
397: istore        30
399: aload         27
401: invokevirtual #53
404: istore        31
406: new           #24
409: dup
410: aload         27
412: invokespecial #25
415: astore        32
417: bipush        6
419: newarray       double
421: dup
422: iconst_0
423: ldc2_w        #27
426: dastore
427: dup
428: iconst_1
429: ldc2_w        #9
432: dastore
433: dup
434: iconst_2
435: ldc2_w        #13
438: dastore
439: dup
440: iconst_3
441: ldc2_w        #29
444: dastore
445: dup
446: iconst_4
447: ldc2_w        #17
450: dastore
451: dup
452: iconst_5
453: ldc2_w        #31
456: dastore
457: astore        33
459: aconst_null
460: astore        34
462: new           #33
465: dup
466: aload         33
468: aload         34
470: iconst_1
471: invokespecial #34
474: astore        35
476: aload         32
478: aload         33
480: invokevirtual #54
483: astore        36
485: aload         5
487: aload         36
489: invokevirtual #54
492: astore        37
494: new           #217
497: dup
498: dconst_0
499: dconst_1
500: ldc2_w        #13
503: invokespecial #222
506: astore        38
508: aload         38
510: invokevirtual #231
513: dstore        39
515: aload         5
517: aload         38
519: invokevirtual #174
522: aload         5
524: ldc2_w        #181
527: ldc2_w        #435
530: invokevirtual #158
533: new           #39
536: dup
537: invokespecial #40
540: ldc           #41
542: invokevirtual #42
545: iload_3
546: invokevirtual #43
549: ldc           #44
551: invokevirtual #42
554: iconst_0
555: invokevirtual #43
558: ldc           #41
560: invokevirtual #42
563: invokevirtual #45
566: iload_3
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #46
578: new           #39
581: dup
582: invokespecial #40
585: ldc           #41
587: invokevirtual #42
590: iload         4
592: invokevirtual #43
595: ldc           #44
597: invokevirtual #42
600: iconst_0
601: invokevirtual #43
604: ldc           #41
606: invokevirtual #42
609: invokevirtual #45
612: iload         4
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #46
625: aload         6
627: invokestatic  #47
630: new           #39
633: dup
634: invokespecial #40
637: ldc           #41
639: invokevirtual #42
642: iload         10
644: invokevirtual #43
647: ldc           #44
649: invokevirtual #42
652: iconst_0
653: invokevirtual #43
656: ldc           #41
658: invokevirtual #42
661: invokevirtual #45
664: iload         10
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #46
677: new           #39
680: dup
681: invokespecial #40
684: ldc           #41
686: invokevirtual #42
689: iload         11
691: invokevirtual #43
694: ldc           #44
696: invokevirtual #42
699: iconst_0
700: invokevirtual #43
703: ldc           #41
705: invokevirtual #42
708: invokevirtual #45
711: iload         11
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #46
724: new           #39
727: dup
728: invokespecial #40
731: ldc           #41
733: invokevirtual #42
736: iload         12
738: invokevirtual #43
741: ldc           #44
743: invokevirtual #42
746: iconst_0
747: invokevirtual #43
750: ldc           #41
752: invokevirtual #42
755: invokevirtual #45
758: iload         12
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #46
771: new           #39
774: dup
775: invokespecial #40
778: ldc           #41
780: invokevirtual #42
783: iload         17
785: invokevirtual #43
788: ldc           #44
790: invokevirtual #42
793: iconst_0
794: invokevirtual #43
797: ldc           #41
799: invokevirtual #42
802: invokevirtual #45
805: iload         17
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #46
818: new           #39
821: dup
822: invokespecial #40
825: ldc           #41
827: invokevirtual #42
830: iload         18
832: invokevirtual #43
835: ldc           #44
837: invokevirtual #42
840: iconst_0
841: invokevirtual #43
844: ldc           #41
846: invokevirtual #42
849: invokevirtual #45
852: iload         18
854: ifne          861
857: iconst_1
858: goto          862
861: iconst_0
862: invokestatic  #46
865: new           #39
868: dup
869: invokespecial #40
872: ldc           #41
874: invokevirtual #42
877: iload         19
879: invokevirtual #43
882: ldc           #44
884: invokevirtual #42
887: iconst_0
888: invokevirtual #43
891: ldc           #41
893: invokevirtual #42
896: invokevirtual #45
899: iload         19
901: ifne          908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #46
912: aload         21
914: invokestatic  #47
917: aload         21
919: invokestatic  #48
922: ldc           #49
924: invokestatic  #50
927: aload         24
929: invokestatic  #47
932: aload         24
934: invokestatic  #48
937: ldc           #49
939: invokestatic  #50
942: aload         25
944: invokestatic  #47
947: aload         25
949: invokestatic  #48
952: ldc           #49
954: invokestatic  #50
957: aload         26
959: invokestatic  #47
962: aload         26
964: invokestatic  #48
967: ldc           #49
969: invokestatic  #50
972: new           #39
975: dup
976: invokespecial #40
979: ldc           #41
981: invokevirtual #42
984: iload         29
986: invokevirtual #43
989: ldc           #44
991: invokevirtual #42
994: iconst_0
995: invokevirtual #43
998: ldc           #41
1000: invokevirtual #42
1003: invokevirtual #45
1006: iload         29
1008: ifne          1015
1011: iconst_1
1012: goto          1016
1015: iconst_0
1016: invokestatic  #46
1019: new           #39
1022: dup
1023: invokespecial #40
1026: ldc           #41
1028: invokevirtual #42
1031: iload         30
1033: invokevirtual #43
1036: ldc           #44
1038: invokevirtual #42
1041: iconst_0
1042: invokevirtual #43
1045: ldc           #41
1047: invokevirtual #42
1050: invokevirtual #45
1053: iload         30
1055: ifne          1062
1058: iconst_1
1059: goto          1063
1062: iconst_0
1063: invokestatic  #46
1066: new           #39
1069: dup
1070: invokespecial #40
1073: ldc           #41
1075: invokevirtual #42
1078: iload         31
1080: invokevirtual #43
1083: ldc           #44
1085: invokevirtual #42
1088: iconst_0
1089: invokevirtual #43
1092: ldc           #41
1094: invokevirtual #42
1097: invokevirtual #45
1100: iload         31
1102: ifne          1109
1105: iconst_1
1106: goto          1110
1109: iconst_0
1110: invokestatic  #46
1113: aload         33
1115: invokestatic  #47
1118: aload         33
1120: invokestatic  #48
1123: ldc           #49
1125: invokestatic  #50
1128: aload         36
1130: invokestatic  #47
1133: aload         36
1135: invokestatic  #48
1138: ldc           #49
1140: invokestatic  #50
1143: aload         37
1145: invokestatic  #47
1148: aload         37
1150: invokestatic  #48
1153: ldc           #49
1155: invokestatic  #50
1158: new           #39
1161: dup
1162: invokespecial #40
1165: ldc           #41
1167: invokevirtual #42
1170: dload         39
1172: invokevirtual #59
1175: ldc           #44
1177: invokevirtual #42
1180: ldc2_w        #13
1183: invokevirtual #59
1186: ldc           #41
1188: invokevirtual #42
1191: invokevirtual #45
1194: dload         39
1196: ldc2_w        #13
1199: dcmpl
1200: ifne          1207
1203: iconst_1
1204: goto          1208
1207: iconst_0
1208: invokestatic  #46
1211: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test133
Start line: 7218
End line: 7271
Method source code: 
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double[] doubleArray21 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray22 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray21, doubleArray22, true);
        double[] doubleArray25 = vectorialPointValuePair24.getValue();
        double[] doubleArray26 = vectorialPointValuePair24.getValue();
        double[] doubleArray27 = vectorialPointValuePair24.getPoint();
        double[] doubleArray34 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray35 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray35, true);
        double[] doubleArray38 = vectorialPointValuePair37.getValue();
        double[] doubleArray39 = vectorialPointValuePair37.getValue();
        double[] doubleArray40 = vectorialPointValuePair37.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray27, doubleArray40, false);
        double[] doubleArray43 = vectorialPointValuePair42.getPoint();
        double[] doubleArray44 = gaussianFitter14.fit(doubleArray43);
        gaussianFitter14.addObservedPoint(1833.4648351356075d, 0.9999999999999999d);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray48 = gaussianFitter14.fit();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooSmallException; message: 1 is smaller than the minimum (3)");
        } catch (org.apache.commons.math.exception.NumberIsTooSmallException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #437
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #67
85: dup
86: aload_1
87: invokespecial #68
90: astore        6
92: new           #24
95: dup
96: aload_1
97: invokespecial #25
100: astore        7
102: bipush        6
104: newarray       double
106: dup
107: iconst_0
108: ldc2_w        #27
111: dastore
112: dup
113: iconst_1
114: ldc2_w        #9
117: dastore
118: dup
119: iconst_2
120: ldc2_w        #13
123: dastore
124: dup
125: iconst_3
126: ldc2_w        #29
129: dastore
130: dup
131: iconst_4
132: ldc2_w        #17
135: dastore
136: dup
137: iconst_5
138: ldc2_w        #31
141: dastore
142: astore        8
144: aconst_null
145: astore        9
147: new           #33
150: dup
151: aload         8
153: aload         9
155: iconst_1
156: invokespecial #34
159: astore        10
161: aload         10
163: invokevirtual #74
166: astore        11
168: aload         10
170: invokevirtual #74
173: astore        12
175: aload         10
177: invokevirtual #75
180: astore        13
182: bipush        6
184: newarray       double
186: dup
187: iconst_0
188: ldc2_w        #27
191: dastore
192: dup
193: iconst_1
194: ldc2_w        #9
197: dastore
198: dup
199: iconst_2
200: ldc2_w        #13
203: dastore
204: dup
205: iconst_3
206: ldc2_w        #29
209: dastore
210: dup
211: iconst_4
212: ldc2_w        #17
215: dastore
216: dup
217: iconst_5
218: ldc2_w        #31
221: dastore
222: astore        14
224: aconst_null
225: astore        15
227: new           #33
230: dup
231: aload         14
233: aload         15
235: iconst_1
236: invokespecial #34
239: astore        16
241: aload         16
243: invokevirtual #74
246: astore        17
248: aload         16
250: invokevirtual #74
253: astore        18
255: aload         16
257: invokevirtual #75
260: astore        19
262: new           #33
265: dup
266: aload         13
268: aload         19
270: iconst_0
271: invokespecial #34
274: astore        20
276: aload         20
278: invokevirtual #75
281: astore        21
283: aload         7
285: aload         21
287: invokevirtual #54
290: astore        22
292: aload         7
294: ldc2_w        #438
297: ldc2_w        #430
300: invokevirtual #158
303: aload         7
305: invokevirtual #63
308: astore        23
310: ldc_w         #362
313: invokestatic  #37
316: goto          321
319: astore        23
321: new           #39
324: dup
325: invokespecial #40
328: ldc           #41
330: invokevirtual #42
333: iload_3
334: invokevirtual #43
337: ldc           #44
339: invokevirtual #42
342: iconst_0
343: invokevirtual #43
346: ldc           #41
348: invokevirtual #42
351: invokevirtual #45
354: iload_3
355: ifne          362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #46
366: new           #39
369: dup
370: invokespecial #40
373: ldc           #41
375: invokevirtual #42
378: iload         4
380: invokevirtual #43
383: ldc           #44
385: invokevirtual #42
388: iconst_0
389: invokevirtual #43
392: ldc           #41
394: invokevirtual #42
397: invokevirtual #45
400: iload         4
402: ifne          409
405: iconst_1
406: goto          410
409: iconst_0
410: invokestatic  #46
413: new           #39
416: dup
417: invokespecial #40
420: ldc           #41
422: invokevirtual #42
425: iload         5
427: invokevirtual #43
430: ldc           #44
432: invokevirtual #42
435: iconst_0
436: invokevirtual #43
439: ldc           #41
441: invokevirtual #42
444: invokevirtual #45
447: iload         5
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #46
460: aload         8
462: invokestatic  #47
465: aload         8
467: invokestatic  #48
470: ldc           #49
472: invokestatic  #50
475: aload         11
477: invokestatic  #76
480: aload         12
482: invokestatic  #76
485: aload         13
487: invokestatic  #47
490: aload         13
492: invokestatic  #48
495: ldc           #49
497: invokestatic  #50
500: aload         14
502: invokestatic  #47
505: aload         14
507: invokestatic  #48
510: ldc           #49
512: invokestatic  #50
515: aload         17
517: invokestatic  #76
520: aload         18
522: invokestatic  #76
525: aload         19
527: invokestatic  #47
530: aload         19
532: invokestatic  #48
535: ldc           #49
537: invokestatic  #50
540: aload         21
542: invokestatic  #47
545: aload         21
547: invokestatic  #48
550: ldc           #49
552: invokestatic  #50
555: aload         22
557: invokestatic  #47
560: aload         22
562: invokestatic  #48
565: ldc           #49
567: invokestatic  #50
570: return
Exception table:
from    to  target type
303   316   319   Class org/apache/commons/math/exception/NumberIsTooSmallException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test134
Start line: 7274
End line: 7286
Method source code: 
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.addObservedPoint(3.0d, (-3.4359738368E10d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #440
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: ldc2_w        #156
91: ldc2_w        #441
94: invokevirtual #158
97: new           #39
100: dup
101: invokespecial #40
104: ldc           #41
106: invokevirtual #42
109: iload_3
110: invokevirtual #43
113: ldc           #44
115: invokevirtual #42
118: iconst_0
119: invokevirtual #43
122: ldc           #41
124: invokevirtual #42
127: invokevirtual #45
130: iload_3
131: ifne          138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #46
142: new           #39
145: dup
146: invokespecial #40
149: ldc           #41
151: invokevirtual #42
154: iload         4
156: invokevirtual #43
159: ldc           #44
161: invokevirtual #42
164: iconst_0
165: invokevirtual #43
168: ldc           #41
170: invokevirtual #42
173: invokevirtual #45
176: iload         4
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #46
189: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test135
Start line: 7289
End line: 7337
Method source code: 
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter15 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = gaussianFitter30.fit(doubleArray37);
        double[] doubleArray42 = curveFitter15.fit(parametricUnivariateRealFunction16, doubleArray37);
        double[] doubleArray43 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray43);
        double[] doubleArray45 = vectorialPointValuePair44.getPointRef();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = parametric0.gradient(1.4142136466667896d, doubleArray45);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #443
20: aastore
21: invokevirtual #7
24: pop
25: new           #117
28: dup
29: invokespecial #118
32: astore_1
33: new           #8
36: dup
37: ldc2_w        #9
40: ldc2_w        #11
43: ldc2_w        #13
46: dconst_1
47: ldc2_w        #13
50: invokespecial #15
53: astore_2
54: new           #16
57: dup
58: ldc2_w        #17
61: ldc2_w        #19
64: invokespecial #21
67: astore_3
68: aload_2
69: aload_3
70: invokevirtual #22
73: aload_2
74: invokevirtual #23
77: istore        4
79: aload_2
80: invokevirtual #23
83: istore        5
85: aload_2
86: invokevirtual #53
89: istore        6
91: new           #67
94: dup
95: aload_2
96: invokespecial #68
99: astore        7
101: aconst_null
102: astore        8
104: new           #8
107: dup
108: ldc2_w        #9
111: ldc2_w        #11
114: ldc2_w        #13
117: dconst_1
118: ldc2_w        #13
121: invokespecial #15
124: astore        9
126: new           #16
129: dup
130: ldc2_w        #17
133: ldc2_w        #19
136: invokespecial #21
139: astore        10
141: aload         9
143: aload         10
145: invokevirtual #22
148: aload         9
150: invokevirtual #23
153: istore        11
155: aload         9
157: invokevirtual #23
160: istore        12
162: aload         9
164: invokevirtual #53
167: istore        13
169: new           #24
172: dup
173: aload         9
175: invokespecial #25
178: astore        14
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #27
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #9
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #13
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #29
207: dastore
208: dup
209: iconst_4
210: ldc2_w        #17
213: dastore
214: dup
215: iconst_5
216: ldc2_w        #31
219: dastore
220: astore        15
222: aconst_null
223: astore        16
225: new           #33
228: dup
229: aload         15
231: aload         16
233: iconst_1
234: invokespecial #34
237: astore        17
239: aload         14
241: aload         15
243: invokevirtual #54
246: astore        18
248: aload         7
250: aload         8
252: aload         15
254: invokevirtual #89
257: astore        19
259: aconst_null
260: astore        20
262: new           #33
265: dup
266: aload         15
268: aload         20
270: invokespecial #109
273: astore        21
275: aload         21
277: invokevirtual #151
280: astore        22
282: aload_1
283: ldc2_w        #444
286: aload         22
288: invokevirtual #119
291: astore        23
293: ldc           #124
295: invokestatic  #37
298: goto          303
301: astore        23
303: new           #39
306: dup
307: invokespecial #40
310: ldc           #41
312: invokevirtual #42
315: iload         4
317: invokevirtual #43
320: ldc           #44
322: invokevirtual #42
325: iconst_0
326: invokevirtual #43
329: ldc           #41
331: invokevirtual #42
334: invokevirtual #45
337: iload         4
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #46
350: new           #39
353: dup
354: invokespecial #40
357: ldc           #41
359: invokevirtual #42
362: iload         5
364: invokevirtual #43
367: ldc           #44
369: invokevirtual #42
372: iconst_0
373: invokevirtual #43
376: ldc           #41
378: invokevirtual #42
381: invokevirtual #45
384: iload         5
386: ifne          393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #46
397: new           #39
400: dup
401: invokespecial #40
404: ldc           #41
406: invokevirtual #42
409: iload         6
411: invokevirtual #43
414: ldc           #44
416: invokevirtual #42
419: iconst_0
420: invokevirtual #43
423: ldc           #41
425: invokevirtual #42
428: invokevirtual #45
431: iload         6
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #46
444: new           #39
447: dup
448: invokespecial #40
451: ldc           #41
453: invokevirtual #42
456: iload         11
458: invokevirtual #43
461: ldc           #44
463: invokevirtual #42
466: iconst_0
467: invokevirtual #43
470: ldc           #41
472: invokevirtual #42
475: invokevirtual #45
478: iload         11
480: ifne          487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #46
491: new           #39
494: dup
495: invokespecial #40
498: ldc           #41
500: invokevirtual #42
503: iload         12
505: invokevirtual #43
508: ldc           #44
510: invokevirtual #42
513: iconst_0
514: invokevirtual #43
517: ldc           #41
519: invokevirtual #42
522: invokevirtual #45
525: iload         12
527: ifne          534
530: iconst_1
531: goto          535
534: iconst_0
535: invokestatic  #46
538: new           #39
541: dup
542: invokespecial #40
545: ldc           #41
547: invokevirtual #42
550: iload         13
552: invokevirtual #43
555: ldc           #44
557: invokevirtual #42
560: iconst_0
561: invokevirtual #43
564: ldc           #41
566: invokevirtual #42
569: invokevirtual #45
572: iload         13
574: ifne          581
577: iconst_1
578: goto          582
581: iconst_0
582: invokestatic  #46
585: aload         15
587: invokestatic  #47
590: aload         15
592: invokestatic  #48
595: ldc           #49
597: invokestatic  #50
600: aload         18
602: invokestatic  #47
605: aload         18
607: invokestatic  #48
610: ldc           #49
612: invokestatic  #50
615: aload         19
617: invokestatic  #47
620: aload         19
622: invokestatic  #48
625: ldc           #49
627: invokestatic  #50
630: aload         22
632: invokestatic  #47
635: aload         22
637: invokestatic  #48
640: ldc           #49
642: invokestatic  #50
645: return
Exception table:
from    to  target type
282   298   301   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test136
Start line: 7340
End line: 7380
Method source code: 
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        double double15 = levenbergMarquardtOptimizer5.getRMS();
        int int16 = levenbergMarquardtOptimizer5.getEvaluations();
        int int17 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker18 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker27 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer24.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        int int29 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int30 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        double double31 = levenbergMarquardtOptimizer24.getChiSquare();
        int int32 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter33 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer24);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker34 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker();
        double double35 = simpleVectorialValueChecker34.getRelativeThreshold();
        levenbergMarquardtOptimizer24.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker34);
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker34);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker18);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.1102230246251565E-14d + "'", double35 == 1.1102230246251565E-14d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #446
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: aload_1
93: invokevirtual #53
96: istore        7
98: aload_1
99: invokevirtual #201
102: dstore        8
104: aload_1
105: invokevirtual #53
108: istore        10
110: aload_1
111: invokevirtual #160
114: istore        11
116: aload_1
117: invokevirtual #73
120: astore        12
122: new           #8
125: dup
126: ldc2_w        #9
129: ldc2_w        #11
132: ldc2_w        #13
135: dconst_1
136: ldc2_w        #13
139: invokespecial #15
142: astore        13
144: new           #16
147: dup
148: ldc2_w        #17
151: ldc2_w        #19
154: invokespecial #21
157: astore        14
159: aload         13
161: aload         14
163: invokevirtual #22
166: aload         13
168: invokevirtual #23
171: istore        15
173: aload         13
175: invokevirtual #23
178: istore        16
180: aload         13
182: invokevirtual #58
185: dstore        17
187: aload         13
189: invokevirtual #23
192: istore        19
194: new           #67
197: dup
198: aload         13
200: invokespecial #68
203: astore        20
205: new           #16
208: dup
209: invokespecial #150
212: astore        21
214: aload         21
216: invokevirtual #88
219: dstore        22
221: aload         13
223: aload         21
225: invokevirtual #22
228: aload_1
229: aload         21
231: invokevirtual #22
234: new           #39
237: dup
238: invokespecial #40
241: ldc           #41
243: invokevirtual #42
246: iload_3
247: invokevirtual #43
250: ldc           #44
252: invokevirtual #42
255: iconst_0
256: invokevirtual #43
259: ldc           #41
261: invokevirtual #42
264: invokevirtual #45
267: iload_3
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #46
279: new           #39
282: dup
283: invokespecial #40
286: ldc           #41
288: invokevirtual #42
291: iload         4
293: invokevirtual #43
296: ldc           #44
298: invokevirtual #42
301: iconst_0
302: invokevirtual #43
305: ldc           #41
307: invokevirtual #42
310: invokevirtual #45
313: iload         4
315: ifne          322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #46
326: new           #39
329: dup
330: invokespecial #40
333: ldc           #41
335: invokevirtual #42
338: iload         5
340: invokevirtual #43
343: ldc           #44
345: invokevirtual #42
348: iconst_0
349: invokevirtual #43
352: ldc           #41
354: invokevirtual #42
357: invokevirtual #45
360: iload         5
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #46
373: new           #39
376: dup
377: invokespecial #40
380: ldc           #41
382: invokevirtual #42
385: iload         7
387: invokevirtual #43
390: ldc           #44
392: invokevirtual #42
395: iconst_0
396: invokevirtual #43
399: ldc           #41
401: invokevirtual #42
404: invokevirtual #45
407: iload         7
409: ifne          416
412: iconst_1
413: goto          417
416: iconst_0
417: invokestatic  #46
420: dload         8
422: invokestatic  #202
425: invokestatic  #203
428: new           #39
431: dup
432: invokespecial #40
435: ldc           #41
437: invokevirtual #42
440: iload         10
442: invokevirtual #43
445: ldc           #44
447: invokevirtual #42
450: iconst_0
451: invokevirtual #43
454: ldc           #41
456: invokevirtual #42
459: invokevirtual #45
462: iload         10
464: ifne          471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #46
475: new           #39
478: dup
479: invokespecial #40
482: ldc           #41
484: invokevirtual #42
487: iload         11
489: invokevirtual #43
492: ldc           #44
494: invokevirtual #42
497: iconst_0
498: invokevirtual #43
501: ldc           #41
503: invokevirtual #42
506: invokevirtual #45
509: iload         11
511: ifne          518
514: iconst_1
515: goto          519
518: iconst_0
519: invokestatic  #46
522: aload         12
524: invokestatic  #47
527: new           #39
530: dup
531: invokespecial #40
534: ldc           #41
536: invokevirtual #42
539: iload         15
541: invokevirtual #43
544: ldc           #44
546: invokevirtual #42
549: iconst_0
550: invokevirtual #43
553: ldc           #41
555: invokevirtual #42
558: invokevirtual #45
561: iload         15
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #46
574: new           #39
577: dup
578: invokespecial #40
581: ldc           #41
583: invokevirtual #42
586: iload         16
588: invokevirtual #43
591: ldc           #44
593: invokevirtual #42
596: iconst_0
597: invokevirtual #43
600: ldc           #41
602: invokevirtual #42
605: invokevirtual #45
608: iload         16
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #46
621: new           #39
624: dup
625: invokespecial #40
628: ldc           #41
630: invokevirtual #42
633: dload         17
635: invokevirtual #59
638: ldc           #44
640: invokevirtual #42
643: dconst_0
644: invokevirtual #59
647: ldc           #41
649: invokevirtual #42
652: invokevirtual #45
655: dload         17
657: dconst_0
658: dcmpl
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #46
670: new           #39
673: dup
674: invokespecial #40
677: ldc           #41
679: invokevirtual #42
682: iload         19
684: invokevirtual #43
687: ldc           #44
689: invokevirtual #42
692: iconst_0
693: invokevirtual #43
696: ldc           #41
698: invokevirtual #42
701: invokevirtual #45
704: iload         19
706: ifne          713
709: iconst_1
710: goto          714
713: iconst_0
714: invokestatic  #46
717: new           #39
720: dup
721: invokespecial #40
724: ldc           #41
726: invokevirtual #42
729: dload         22
731: invokevirtual #59
734: ldc           #44
736: invokevirtual #42
739: ldc2_w        #152
742: invokevirtual #59
745: ldc           #41
747: invokevirtual #42
750: invokevirtual #45
753: dload         22
755: ldc2_w        #152
758: dcmpl
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #46
770: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test137
Start line: 7383
End line: 7441
Method source code: 
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double9 = simpleVectorialValueChecker8.getAbsoluteThreshold();
        double double10 = simpleVectorialValueChecker8.getAbsoluteThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        double double12 = simpleVectorialValueChecker8.getRelativeThreshold();
        double double13 = simpleVectorialValueChecker8.getAbsoluteThreshold();
        double double14 = simpleVectorialValueChecker8.getAbsoluteThreshold();
        double[] doubleArray16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = gaussianFitter30.fit(doubleArray37);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray49, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray41);
        double[] doubleArray55 = vectorialPointValuePair54.getPointRef();
        double[] doubleArray56 = null;
        double[] doubleArray57 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray57, false);
        double[] doubleArray60 = vectorialPointValuePair59.getValueRef();
        double[] doubleArray61 = vectorialPointValuePair59.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = simpleVectorialValueChecker8.converged(97, vectorialPointValuePair54, vectorialPointValuePair59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 35.0d + "'", double12 == 35.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertNull(doubleArray61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #447
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_2
61: invokevirtual #205
64: dstore_3
65: aload_2
66: invokevirtual #205
69: dstore        5
71: aload_1
72: aload_2
73: invokevirtual #22
76: aload_2
77: invokevirtual #88
80: dstore        7
82: aload_2
83: invokevirtual #205
86: dstore        9
88: aload_2
89: invokevirtual #205
92: dstore        11
94: aconst_null
95: astore        13
97: new           #8
100: dup
101: ldc2_w        #9
104: ldc2_w        #11
107: ldc2_w        #13
110: dconst_1
111: ldc2_w        #13
114: invokespecial #15
117: astore        14
119: new           #16
122: dup
123: ldc2_w        #17
126: ldc2_w        #19
129: invokespecial #21
132: astore        15
134: aload         14
136: aload         15
138: invokevirtual #22
141: aload         14
143: invokevirtual #23
146: istore        16
148: aload         14
150: invokevirtual #23
153: istore        17
155: aload         14
157: invokevirtual #53
160: istore        18
162: new           #24
165: dup
166: aload         14
168: invokespecial #25
171: astore        19
173: bipush        6
175: newarray       double
177: dup
178: iconst_0
179: ldc2_w        #27
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #9
188: dastore
189: dup
190: iconst_2
191: ldc2_w        #13
194: dastore
195: dup
196: iconst_3
197: ldc2_w        #29
200: dastore
201: dup
202: iconst_4
203: ldc2_w        #17
206: dastore
207: dup
208: iconst_5
209: ldc2_w        #31
212: dastore
213: astore        20
215: aconst_null
216: astore        21
218: new           #33
221: dup
222: aload         20
224: aload         21
226: iconst_1
227: invokespecial #34
230: astore        22
232: aload         19
234: aload         20
236: invokevirtual #54
239: astore        23
241: bipush        6
243: newarray       double
245: dup
246: iconst_0
247: ldc2_w        #27
250: dastore
251: dup
252: iconst_1
253: ldc2_w        #9
256: dastore
257: dup
258: iconst_2
259: ldc2_w        #13
262: dastore
263: dup
264: iconst_3
265: ldc2_w        #29
268: dastore
269: dup
270: iconst_4
271: ldc2_w        #17
274: dastore
275: dup
276: iconst_5
277: ldc2_w        #31
280: dastore
281: astore        24
283: aconst_null
284: astore        25
286: new           #33
289: dup
290: aload         24
292: aload         25
294: iconst_1
295: invokespecial #34
298: astore        26
300: new           #33
303: dup
304: aload         23
306: aload         25
308: iconst_0
309: invokespecial #34
312: astore        27
314: new           #33
317: dup
318: aload         13
320: aload         23
322: invokespecial #109
325: astore        28
327: aload         28
329: invokevirtual #151
332: astore        29
334: aconst_null
335: astore        30
337: aconst_null
338: astore        31
340: new           #33
343: dup
344: aload         30
346: aload         31
348: iconst_0
349: invokespecial #34
352: astore        32
354: aload         32
356: invokevirtual #183
359: astore        33
361: aload         32
363: invokevirtual #75
366: astore        34
368: aload_2
369: bipush        97
371: aload         28
373: aload         32
375: invokevirtual #90
378: istore        35
380: ldc           #36
382: invokestatic  #37
385: goto          390
388: astore        35
390: new           #39
393: dup
394: invokespecial #40
397: ldc           #41
399: invokevirtual #42
402: dload_3
403: invokevirtual #59
406: ldc           #44
408: invokevirtual #42
411: ldc2_w        #19
414: invokevirtual #59
417: ldc           #41
419: invokevirtual #42
422: invokevirtual #45
425: dload_3
426: ldc2_w        #19
429: dcmpl
430: ifne          437
433: iconst_1
434: goto          438
437: iconst_0
438: invokestatic  #46
441: new           #39
444: dup
445: invokespecial #40
448: ldc           #41
450: invokevirtual #42
453: dload         5
455: invokevirtual #59
458: ldc           #44
460: invokevirtual #42
463: ldc2_w        #19
466: invokevirtual #59
469: ldc           #41
471: invokevirtual #42
474: invokevirtual #45
477: dload         5
479: ldc2_w        #19
482: dcmpl
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #46
494: new           #39
497: dup
498: invokespecial #40
501: ldc           #41
503: invokevirtual #42
506: dload         7
508: invokevirtual #59
511: ldc           #44
513: invokevirtual #42
516: ldc2_w        #17
519: invokevirtual #59
522: ldc           #41
524: invokevirtual #42
527: invokevirtual #45
530: dload         7
532: ldc2_w        #17
535: dcmpl
536: ifne          543
539: iconst_1
540: goto          544
543: iconst_0
544: invokestatic  #46
547: new           #39
550: dup
551: invokespecial #40
554: ldc           #41
556: invokevirtual #42
559: dload         9
561: invokevirtual #59
564: ldc           #44
566: invokevirtual #42
569: ldc2_w        #19
572: invokevirtual #59
575: ldc           #41
577: invokevirtual #42
580: invokevirtual #45
583: dload         9
585: ldc2_w        #19
588: dcmpl
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #46
600: new           #39
603: dup
604: invokespecial #40
607: ldc           #41
609: invokevirtual #42
612: dload         11
614: invokevirtual #59
617: ldc           #44
619: invokevirtual #42
622: ldc2_w        #19
625: invokevirtual #59
628: ldc           #41
630: invokevirtual #42
633: invokevirtual #45
636: dload         11
638: ldc2_w        #19
641: dcmpl
642: ifne          649
645: iconst_1
646: goto          650
649: iconst_0
650: invokestatic  #46
653: new           #39
656: dup
657: invokespecial #40
660: ldc           #41
662: invokevirtual #42
665: iload         16
667: invokevirtual #43
670: ldc           #44
672: invokevirtual #42
675: iconst_0
676: invokevirtual #43
679: ldc           #41
681: invokevirtual #42
684: invokevirtual #45
687: iload         16
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #46
700: new           #39
703: dup
704: invokespecial #40
707: ldc           #41
709: invokevirtual #42
712: iload         17
714: invokevirtual #43
717: ldc           #44
719: invokevirtual #42
722: iconst_0
723: invokevirtual #43
726: ldc           #41
728: invokevirtual #42
731: invokevirtual #45
734: iload         17
736: ifne          743
739: iconst_1
740: goto          744
743: iconst_0
744: invokestatic  #46
747: new           #39
750: dup
751: invokespecial #40
754: ldc           #41
756: invokevirtual #42
759: iload         18
761: invokevirtual #43
764: ldc           #44
766: invokevirtual #42
769: iconst_0
770: invokevirtual #43
773: ldc           #41
775: invokevirtual #42
778: invokevirtual #45
781: iload         18
783: ifne          790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #46
794: aload         20
796: invokestatic  #47
799: aload         20
801: invokestatic  #48
804: ldc           #49
806: invokestatic  #50
809: aload         23
811: invokestatic  #47
814: aload         23
816: invokestatic  #48
819: ldc           #49
821: invokestatic  #50
824: aload         24
826: invokestatic  #47
829: aload         24
831: invokestatic  #48
834: ldc           #49
836: invokestatic  #50
839: aload         29
841: invokestatic  #76
844: aload         33
846: invokestatic  #76
849: aload         34
851: invokestatic  #76
854: return
Exception table:
from    to  target type
368   385   388   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test138
Start line: 7444
End line: 7505
Method source code: 
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = gaussianFitter13.fit(doubleArray20);
        double[] doubleArray31 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray32 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray32, true);
        double[] doubleArray35 = vectorialPointValuePair34.getValue();
        double[] doubleArray36 = vectorialPointValuePair34.getValue();
        double[] doubleArray37 = vectorialPointValuePair34.getPoint();
        double[] doubleArray38 = gaussianFitter13.fit(doubleArray37);
        double[] doubleArray45 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray46 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray46, true);
        double[] doubleArray49 = vectorialPointValuePair48.getValue();
        double[] doubleArray50 = vectorialPointValuePair48.getValue();
        double[] doubleArray51 = vectorialPointValuePair48.getPoint();
        double[] doubleArray52 = vectorialPointValuePair48.getPointRef();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray52);
        double[] doubleArray54 = vectorialPointValuePair53.getPoint();
        double[] doubleArray55 = vectorialPointValuePair53.getPointRef();
        double[] doubleArray56 = vectorialPointValuePair53.getValueRef();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #448
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: bipush        6
94: newarray       double
96: dup
97: iconst_0
98: ldc2_w        #27
101: dastore
102: dup
103: iconst_1
104: ldc2_w        #9
107: dastore
108: dup
109: iconst_2
110: ldc2_w        #13
113: dastore
114: dup
115: iconst_3
116: ldc2_w        #29
119: dastore
120: dup
121: iconst_4
122: ldc2_w        #17
125: dastore
126: dup
127: iconst_5
128: ldc2_w        #31
131: dastore
132: astore        7
134: aconst_null
135: astore        8
137: new           #33
140: dup
141: aload         7
143: aload         8
145: iconst_1
146: invokespecial #34
149: astore        9
151: aload         6
153: aload         7
155: invokevirtual #54
158: astore        10
160: bipush        6
162: newarray       double
164: dup
165: iconst_0
166: ldc2_w        #27
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #9
175: dastore
176: dup
177: iconst_2
178: ldc2_w        #13
181: dastore
182: dup
183: iconst_3
184: ldc2_w        #29
187: dastore
188: dup
189: iconst_4
190: ldc2_w        #17
193: dastore
194: dup
195: iconst_5
196: ldc2_w        #31
199: dastore
200: astore        11
202: aconst_null
203: astore        12
205: new           #33
208: dup
209: aload         11
211: aload         12
213: iconst_1
214: invokespecial #34
217: astore        13
219: aload         13
221: invokevirtual #74
224: astore        14
226: aload         13
228: invokevirtual #74
231: astore        15
233: aload         13
235: invokevirtual #75
238: astore        16
240: aload         6
242: aload         16
244: invokevirtual #54
247: astore        17
249: bipush        6
251: newarray       double
253: dup
254: iconst_0
255: ldc2_w        #27
258: dastore
259: dup
260: iconst_1
261: ldc2_w        #9
264: dastore
265: dup
266: iconst_2
267: ldc2_w        #13
270: dastore
271: dup
272: iconst_3
273: ldc2_w        #29
276: dastore
277: dup
278: iconst_4
279: ldc2_w        #17
282: dastore
283: dup
284: iconst_5
285: ldc2_w        #31
288: dastore
289: astore        18
291: aconst_null
292: astore        19
294: new           #33
297: dup
298: aload         18
300: aload         19
302: iconst_1
303: invokespecial #34
306: astore        20
308: aload         20
310: invokevirtual #74
313: astore        21
315: aload         20
317: invokevirtual #74
320: astore        22
322: aload         20
324: invokevirtual #75
327: astore        23
329: aload         20
331: invokevirtual #151
334: astore        24
336: new           #33
339: dup
340: aload         16
342: aload         24
344: invokespecial #109
347: astore        25
349: aload         25
351: invokevirtual #75
354: astore        26
356: aload         25
358: invokevirtual #151
361: astore        27
363: aload         25
365: invokevirtual #183
368: astore        28
370: new           #39
373: dup
374: invokespecial #40
377: ldc           #41
379: invokevirtual #42
382: iload_3
383: invokevirtual #43
386: ldc           #44
388: invokevirtual #42
391: iconst_0
392: invokevirtual #43
395: ldc           #41
397: invokevirtual #42
400: invokevirtual #45
403: iload_3
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #46
415: new           #39
418: dup
419: invokespecial #40
422: ldc           #41
424: invokevirtual #42
427: iload         4
429: invokevirtual #43
432: ldc           #44
434: invokevirtual #42
437: iconst_0
438: invokevirtual #43
441: ldc           #41
443: invokevirtual #42
446: invokevirtual #45
449: iload         4
451: ifne          458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #46
462: new           #39
465: dup
466: invokespecial #40
469: ldc           #41
471: invokevirtual #42
474: iload         5
476: invokevirtual #43
479: ldc           #44
481: invokevirtual #42
484: iconst_0
485: invokevirtual #43
488: ldc           #41
490: invokevirtual #42
493: invokevirtual #45
496: iload         5
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #46
509: aload         7
511: invokestatic  #47
514: aload         7
516: invokestatic  #48
519: ldc           #49
521: invokestatic  #50
524: aload         10
526: invokestatic  #47
529: aload         10
531: invokestatic  #48
534: ldc           #49
536: invokestatic  #50
539: aload         11
541: invokestatic  #47
544: aload         11
546: invokestatic  #48
549: ldc           #49
551: invokestatic  #50
554: aload         14
556: invokestatic  #76
559: aload         15
561: invokestatic  #76
564: aload         16
566: invokestatic  #47
569: aload         16
571: invokestatic  #48
574: ldc           #49
576: invokestatic  #50
579: aload         17
581: invokestatic  #47
584: aload         17
586: invokestatic  #48
589: ldc           #49
591: invokestatic  #50
594: aload         18
596: invokestatic  #47
599: aload         18
601: invokestatic  #48
604: ldc           #49
606: invokestatic  #50
609: aload         21
611: invokestatic  #76
614: aload         22
616: invokestatic  #76
619: aload         23
621: invokestatic  #47
624: aload         23
626: invokestatic  #48
629: ldc           #49
631: invokestatic  #50
634: aload         24
636: invokestatic  #47
639: aload         24
641: invokestatic  #48
644: ldc           #49
646: invokestatic  #50
649: aload         26
651: invokestatic  #47
654: aload         26
656: invokestatic  #48
659: ldc           #49
661: invokestatic  #50
664: aload         27
666: invokestatic  #47
669: aload         27
671: invokestatic  #48
674: ldc           #49
676: invokestatic  #50
679: aload         28
681: invokestatic  #47
684: aload         28
686: invokestatic  #48
689: ldc           #49
691: invokestatic  #50
694: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test139
Start line: 7508
End line: 7569
Method source code: 
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint59 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, 4.9E-324d, 57.29577951308232d);
        double double60 = weightedObservedPoint59.getWeight();
        double double61 = weightedObservedPoint59.getWeight();
        double double62 = weightedObservedPoint59.getY();
        double double63 = weightedObservedPoint59.getY();
        double double64 = weightedObservedPoint59.getWeight();
        double double65 = weightedObservedPoint59.getWeight();
        gaussianFitter12.addObservedPoint(weightedObservedPoint59);
        gaussianFitter12.addObservedPoint(6.991989996645917E-56d, 0.1718949962020731d, (double) 1.1920929E-5f);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 57.29577951308232d + "'", double62 == 57.29577951308232d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 57.29577951308232d + "'", double63 == 57.29577951308232d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #449
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: new           #8
89: dup
90: ldc2_w        #9
93: ldc2_w        #11
96: ldc2_w        #13
99: dconst_1
100: ldc2_w        #13
103: invokespecial #15
106: astore        6
108: new           #16
111: dup
112: ldc2_w        #17
115: ldc2_w        #19
118: invokespecial #21
121: astore        7
123: aload         6
125: aload         7
127: invokevirtual #22
130: aload         6
132: invokevirtual #23
135: istore        8
137: aload         6
139: invokevirtual #23
142: istore        9
144: new           #24
147: dup
148: aload         6
150: invokespecial #25
153: astore        10
155: aload         10
157: invokevirtual #52
160: aconst_null
161: astore        11
163: new           #8
166: dup
167: ldc2_w        #9
170: ldc2_w        #11
173: ldc2_w        #13
176: dconst_1
177: ldc2_w        #13
180: invokespecial #15
183: astore        12
185: new           #16
188: dup
189: ldc2_w        #17
192: ldc2_w        #19
195: invokespecial #21
198: astore        13
200: aload         12
202: aload         13
204: invokevirtual #22
207: aload         12
209: invokevirtual #23
212: istore        14
214: aload         12
216: invokevirtual #23
219: istore        15
221: aload         12
223: invokevirtual #53
226: istore        16
228: new           #24
231: dup
232: aload         12
234: invokespecial #25
237: astore        17
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #27
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #9
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #13
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #29
266: dastore
267: dup
268: iconst_4
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #31
278: dastore
279: astore        18
281: aconst_null
282: astore        19
284: new           #33
287: dup
288: aload         18
290: aload         19
292: iconst_1
293: invokespecial #34
296: astore        20
298: aload         17
300: aload         18
302: invokevirtual #54
305: astore        21
307: aload         10
309: aload         11
311: aload         21
313: invokevirtual #55
316: astore        22
318: aload         5
320: aload         21
322: invokevirtual #54
325: astore        23
327: aload         5
329: invokevirtual #52
332: new           #217
335: dup
336: dconst_0
337: ldc2_w        #218
340: ldc2_w        #220
343: invokespecial #222
346: astore        24
348: aload         24
350: invokevirtual #223
353: dstore        25
355: aload         24
357: invokevirtual #223
360: dstore        27
362: aload         24
364: invokevirtual #231
367: dstore        29
369: aload         24
371: invokevirtual #231
374: dstore        31
376: aload         24
378: invokevirtual #223
381: dstore        33
383: aload         24
385: invokevirtual #223
388: dstore        35
390: aload         5
392: aload         24
394: invokevirtual #174
397: aload         5
399: ldc2_w        #450
402: ldc2_w        #452
405: ldc2_w        #454
408: invokevirtual #98
411: new           #39
414: dup
415: invokespecial #40
418: ldc           #41
420: invokevirtual #42
423: iload_3
424: invokevirtual #43
427: ldc           #44
429: invokevirtual #42
432: iconst_0
433: invokevirtual #43
436: ldc           #41
438: invokevirtual #42
441: invokevirtual #45
444: iload_3
445: ifne          452
448: iconst_1
449: goto          453
452: iconst_0
453: invokestatic  #46
456: new           #39
459: dup
460: invokespecial #40
463: ldc           #41
465: invokevirtual #42
468: iload         4
470: invokevirtual #43
473: ldc           #44
475: invokevirtual #42
478: iconst_0
479: invokevirtual #43
482: ldc           #41
484: invokevirtual #42
487: invokevirtual #45
490: iload         4
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #46
503: new           #39
506: dup
507: invokespecial #40
510: ldc           #41
512: invokevirtual #42
515: iload         8
517: invokevirtual #43
520: ldc           #44
522: invokevirtual #42
525: iconst_0
526: invokevirtual #43
529: ldc           #41
531: invokevirtual #42
534: invokevirtual #45
537: iload         8
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #46
550: new           #39
553: dup
554: invokespecial #40
557: ldc           #41
559: invokevirtual #42
562: iload         9
564: invokevirtual #43
567: ldc           #44
569: invokevirtual #42
572: iconst_0
573: invokevirtual #43
576: ldc           #41
578: invokevirtual #42
581: invokevirtual #45
584: iload         9
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #46
597: new           #39
600: dup
601: invokespecial #40
604: ldc           #41
606: invokevirtual #42
609: iload         14
611: invokevirtual #43
614: ldc           #44
616: invokevirtual #42
619: iconst_0
620: invokevirtual #43
623: ldc           #41
625: invokevirtual #42
628: invokevirtual #45
631: iload         14
633: ifne          640
636: iconst_1
637: goto          641
640: iconst_0
641: invokestatic  #46
644: new           #39
647: dup
648: invokespecial #40
651: ldc           #41
653: invokevirtual #42
656: iload         15
658: invokevirtual #43
661: ldc           #44
663: invokevirtual #42
666: iconst_0
667: invokevirtual #43
670: ldc           #41
672: invokevirtual #42
675: invokevirtual #45
678: iload         15
680: ifne          687
683: iconst_1
684: goto          688
687: iconst_0
688: invokestatic  #46
691: new           #39
694: dup
695: invokespecial #40
698: ldc           #41
700: invokevirtual #42
703: iload         16
705: invokevirtual #43
708: ldc           #44
710: invokevirtual #42
713: iconst_0
714: invokevirtual #43
717: ldc           #41
719: invokevirtual #42
722: invokevirtual #45
725: iload         16
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #46
738: aload         18
740: invokestatic  #47
743: aload         18
745: invokestatic  #48
748: ldc           #49
750: invokestatic  #50
753: aload         21
755: invokestatic  #47
758: aload         21
760: invokestatic  #48
763: ldc           #49
765: invokestatic  #50
768: aload         22
770: invokestatic  #47
773: aload         22
775: invokestatic  #48
778: ldc           #49
780: invokestatic  #50
783: aload         23
785: invokestatic  #47
788: aload         23
790: invokestatic  #48
793: ldc           #49
795: invokestatic  #50
798: new           #39
801: dup
802: invokespecial #40
805: ldc           #41
807: invokevirtual #42
810: dload         25
812: invokevirtual #59
815: ldc           #44
817: invokevirtual #42
820: dconst_0
821: invokevirtual #59
824: ldc           #41
826: invokevirtual #42
829: invokevirtual #45
832: dload         25
834: dconst_0
835: dcmpl
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #46
847: new           #39
850: dup
851: invokespecial #40
854: ldc           #41
856: invokevirtual #42
859: dload         27
861: invokevirtual #59
864: ldc           #44
866: invokevirtual #42
869: dconst_0
870: invokevirtual #59
873: ldc           #41
875: invokevirtual #42
878: invokevirtual #45
881: dload         27
883: dconst_0
884: dcmpl
885: ifne          892
888: iconst_1
889: goto          893
892: iconst_0
893: invokestatic  #46
896: new           #39
899: dup
900: invokespecial #40
903: ldc           #41
905: invokevirtual #42
908: dload         29
910: invokevirtual #59
913: ldc           #44
915: invokevirtual #42
918: ldc2_w        #220
921: invokevirtual #59
924: ldc           #41
926: invokevirtual #42
929: invokevirtual #45
932: dload         29
934: ldc2_w        #220
937: dcmpl
938: ifne          945
941: iconst_1
942: goto          946
945: iconst_0
946: invokestatic  #46
949: new           #39
952: dup
953: invokespecial #40
956: ldc           #41
958: invokevirtual #42
961: dload         31
963: invokevirtual #59
966: ldc           #44
968: invokevirtual #42
971: ldc2_w        #220
974: invokevirtual #59
977: ldc           #41
979: invokevirtual #42
982: invokevirtual #45
985: dload         31
987: ldc2_w        #220
990: dcmpl
991: ifne          998
994: iconst_1
995: goto          999
998: iconst_0
999: invokestatic  #46
1002: new           #39
1005: dup
1006: invokespecial #40
1009: ldc           #41
1011: invokevirtual #42
1014: dload         33
1016: invokevirtual #59
1019: ldc           #44
1021: invokevirtual #42
1024: dconst_0
1025: invokevirtual #59
1028: ldc           #41
1030: invokevirtual #42
1033: invokevirtual #45
1036: dload         33
1038: dconst_0
1039: dcmpl
1040: ifne          1047
1043: iconst_1
1044: goto          1048
1047: iconst_0
1048: invokestatic  #46
1051: new           #39
1054: dup
1055: invokespecial #40
1058: ldc           #41
1060: invokevirtual #42
1063: dload         35
1065: invokevirtual #59
1068: ldc           #44
1070: invokevirtual #42
1073: dconst_0
1074: invokevirtual #59
1077: ldc           #41
1079: invokevirtual #42
1082: invokevirtual #45
1085: dload         35
1087: dconst_0
1088: dcmpl
1089: ifne          1096
1092: iconst_1
1093: goto          1097
1096: iconst_0
1097: invokestatic  #46
1100: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test140
Start line: 7572
End line: 7644
Method source code: 
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        double double27 = levenbergMarquardtOptimizer20.getChiSquare();
        int int28 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter29 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric30 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer36 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker39 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer36.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker39);
        int int41 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer36.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer36.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter44 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer36);
        double[] doubleArray51 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray52 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray52, true);
        double[] doubleArray55 = gaussianFitter44.fit(doubleArray51);
        double[] doubleArray56 = curveFitter29.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray55);
        double[] doubleArray63 = new double[] { 3.1415926535897936d, (-0.9923172082775625d), 0.207879576290261d, 0.49321676688550387d, 4.248699152289463d, 3.4741259760439713d };
        double[] doubleArray64 = gaussianFitter12.fit(97, (org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric30, doubleArray63);
        double[] doubleArray72 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray73 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair75 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray72, doubleArray73, true);
        double[] doubleArray76 = vectorialPointValuePair75.getValue();
        double[] doubleArray77 = vectorialPointValuePair75.getValue();
        double[] doubleArray78 = vectorialPointValuePair75.getPoint();
        // The following exception was thrown during execution in test generation
        try {
            double double79 = parametric30.value((double) 2979L, doubleArray78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[3.1415926535897936, -0.9923172082775625, 0.207879576290261, 0.49321676688550387, 4.248699152289463, 3.4741259760439713]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray76);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #456
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: new           #8
96: dup
97: ldc2_w        #9
100: ldc2_w        #11
103: ldc2_w        #13
106: dconst_1
107: ldc2_w        #13
110: invokespecial #15
113: astore        7
115: new           #16
118: dup
119: ldc2_w        #17
122: ldc2_w        #19
125: invokespecial #21
128: astore        8
130: aload         7
132: aload         8
134: invokevirtual #22
137: aload         7
139: invokevirtual #23
142: istore        9
144: aload         7
146: invokevirtual #23
149: istore        10
151: aload         7
153: invokevirtual #58
156: dstore        11
158: aload         7
160: invokevirtual #23
163: istore        13
165: new           #67
168: dup
169: aload         7
171: invokespecial #68
174: astore        14
176: new           #117
179: dup
180: invokespecial #118
183: astore        15
185: new           #8
188: dup
189: ldc2_w        #9
192: ldc2_w        #11
195: ldc2_w        #13
198: dconst_1
199: ldc2_w        #13
202: invokespecial #15
205: astore        16
207: new           #16
210: dup
211: ldc2_w        #17
214: ldc2_w        #19
217: invokespecial #21
220: astore        17
222: aload         16
224: aload         17
226: invokevirtual #22
229: aload         16
231: invokevirtual #23
234: istore        18
236: aload         16
238: invokevirtual #23
241: istore        19
243: aload         16
245: invokevirtual #53
248: istore        20
250: new           #24
253: dup
254: aload         16
256: invokespecial #25
259: astore        21
261: bipush        6
263: newarray       double
265: dup
266: iconst_0
267: ldc2_w        #27
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #9
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #13
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #29
288: dastore
289: dup
290: iconst_4
291: ldc2_w        #17
294: dastore
295: dup
296: iconst_5
297: ldc2_w        #31
300: dastore
301: astore        22
303: aconst_null
304: astore        23
306: new           #33
309: dup
310: aload         22
312: aload         23
314: iconst_1
315: invokespecial #34
318: astore        24
320: aload         21
322: aload         22
324: invokevirtual #54
327: astore        25
329: aload         14
331: aload         15
333: aload         25
335: invokevirtual #89
338: astore        26
340: bipush        6
342: newarray       double
344: dup
345: iconst_0
346: ldc2_w        #162
349: dastore
350: dup
351: iconst_1
352: ldc2_w        #94
355: dastore
356: dup
357: iconst_2
358: ldc2_w        #164
361: dastore
362: dup
363: iconst_3
364: ldc2_w        #166
367: dastore
368: dup
369: iconst_4
370: ldc2_w        #136
373: dastore
374: dup
375: iconst_5
376: ldc2_w        #168
379: dastore
380: astore        27
382: aload         5
384: bipush        97
386: aload         15
388: aload         27
390: invokevirtual #35
393: astore        28
395: bipush        6
397: newarray       double
399: dup
400: iconst_0
401: ldc2_w        #27
404: dastore
405: dup
406: iconst_1
407: ldc2_w        #9
410: dastore
411: dup
412: iconst_2
413: ldc2_w        #13
416: dastore
417: dup
418: iconst_3
419: ldc2_w        #29
422: dastore
423: dup
424: iconst_4
425: ldc2_w        #17
428: dastore
429: dup
430: iconst_5
431: ldc2_w        #31
434: dastore
435: astore        29
437: aconst_null
438: astore        30
440: new           #33
443: dup
444: aload         29
446: aload         30
448: iconst_1
449: invokespecial #34
452: astore        31
454: aload         31
456: invokevirtual #74
459: astore        32
461: aload         31
463: invokevirtual #74
466: astore        33
468: aload         31
470: invokevirtual #75
473: astore        34
475: aload         15
477: ldc2_w        #457
480: aload         34
482: invokevirtual #123
485: dstore        35
487: ldc           #124
489: invokestatic  #37
492: goto          497
495: astore        35
497: new           #39
500: dup
501: invokespecial #40
504: ldc           #41
506: invokevirtual #42
509: iload_3
510: invokevirtual #43
513: ldc           #44
515: invokevirtual #42
518: iconst_0
519: invokevirtual #43
522: ldc           #41
524: invokevirtual #42
527: invokevirtual #45
530: iload_3
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #46
542: new           #39
545: dup
546: invokespecial #40
549: ldc           #41
551: invokevirtual #42
554: iload         4
556: invokevirtual #43
559: ldc           #44
561: invokevirtual #42
564: iconst_0
565: invokevirtual #43
568: ldc           #41
570: invokevirtual #42
573: invokevirtual #45
576: iload         4
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #46
589: aload         6
591: invokestatic  #47
594: new           #39
597: dup
598: invokespecial #40
601: ldc           #41
603: invokevirtual #42
606: iload         9
608: invokevirtual #43
611: ldc           #44
613: invokevirtual #42
616: iconst_0
617: invokevirtual #43
620: ldc           #41
622: invokevirtual #42
625: invokevirtual #45
628: iload         9
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #46
641: new           #39
644: dup
645: invokespecial #40
648: ldc           #41
650: invokevirtual #42
653: iload         10
655: invokevirtual #43
658: ldc           #44
660: invokevirtual #42
663: iconst_0
664: invokevirtual #43
667: ldc           #41
669: invokevirtual #42
672: invokevirtual #45
675: iload         10
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #46
688: new           #39
691: dup
692: invokespecial #40
695: ldc           #41
697: invokevirtual #42
700: dload         11
702: invokevirtual #59
705: ldc           #44
707: invokevirtual #42
710: dconst_0
711: invokevirtual #59
714: ldc           #41
716: invokevirtual #42
719: invokevirtual #45
722: dload         11
724: dconst_0
725: dcmpl
726: ifne          733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #46
737: new           #39
740: dup
741: invokespecial #40
744: ldc           #41
746: invokevirtual #42
749: iload         13
751: invokevirtual #43
754: ldc           #44
756: invokevirtual #42
759: iconst_0
760: invokevirtual #43
763: ldc           #41
765: invokevirtual #42
768: invokevirtual #45
771: iload         13
773: ifne          780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #46
784: new           #39
787: dup
788: invokespecial #40
791: ldc           #41
793: invokevirtual #42
796: iload         18
798: invokevirtual #43
801: ldc           #44
803: invokevirtual #42
806: iconst_0
807: invokevirtual #43
810: ldc           #41
812: invokevirtual #42
815: invokevirtual #45
818: iload         18
820: ifne          827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #46
831: new           #39
834: dup
835: invokespecial #40
838: ldc           #41
840: invokevirtual #42
843: iload         19
845: invokevirtual #43
848: ldc           #44
850: invokevirtual #42
853: iconst_0
854: invokevirtual #43
857: ldc           #41
859: invokevirtual #42
862: invokevirtual #45
865: iload         19
867: ifne          874
870: iconst_1
871: goto          875
874: iconst_0
875: invokestatic  #46
878: new           #39
881: dup
882: invokespecial #40
885: ldc           #41
887: invokevirtual #42
890: iload         20
892: invokevirtual #43
895: ldc           #44
897: invokevirtual #42
900: iconst_0
901: invokevirtual #43
904: ldc           #41
906: invokevirtual #42
909: invokevirtual #45
912: iload         20
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #46
925: aload         22
927: invokestatic  #47
930: aload         22
932: invokestatic  #48
935: ldc           #49
937: invokestatic  #50
940: aload         25
942: invokestatic  #47
945: aload         25
947: invokestatic  #48
950: ldc           #49
952: invokestatic  #50
955: aload         26
957: invokestatic  #47
960: aload         26
962: invokestatic  #48
965: ldc           #49
967: invokestatic  #50
970: aload         27
972: invokestatic  #47
975: aload         27
977: invokestatic  #48
980: ldc           #172
982: invokestatic  #50
985: aload         28
987: invokestatic  #47
990: aload         28
992: invokestatic  #48
995: ldc           #172
997: invokestatic  #50
1000: aload         29
1002: invokestatic  #47
1005: aload         29
1007: invokestatic  #48
1010: ldc           #49
1012: invokestatic  #50
1015: aload         32
1017: invokestatic  #76
1020: aload         33
1022: invokestatic  #76
1025: aload         34
1027: invokestatic  #47
1030: aload         34
1032: invokestatic  #48
1035: ldc           #49
1037: invokestatic  #50
1040: return
Exception table:
from    to  target type
475   492   495   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test141
Start line: 7647
End line: 7667
Method source code: 
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint((double) 1L, 0.6444303510232912d);
        gaussianFitter12.addObservedPoint(11013.232920103323d, (double) 35);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray21 = gaussianFitter12.getObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray22 = gaussianFitter12.getObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertNotNull(weightedObservedPointArray21);
        org.junit.Assert.assertNotNull(weightedObservedPointArray22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #459
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aload         5
95: dconst_1
96: ldc2_w        #195
99: invokevirtual #158
102: aload         5
104: ldc2_w        #99
107: ldc2_w        #17
110: invokevirtual #158
113: aload         5
115: invokevirtual #52
118: aload         5
120: invokevirtual #62
123: astore        7
125: aload         5
127: invokevirtual #62
130: astore        8
132: new           #39
135: dup
136: invokespecial #40
139: ldc           #41
141: invokevirtual #42
144: iload_3
145: invokevirtual #43
148: ldc           #44
150: invokevirtual #42
153: iconst_0
154: invokevirtual #43
157: ldc           #41
159: invokevirtual #42
162: invokevirtual #45
165: iload_3
166: ifne          173
169: iconst_1
170: goto          174
173: iconst_0
174: invokestatic  #46
177: new           #39
180: dup
181: invokespecial #40
184: ldc           #41
186: invokevirtual #42
189: iload         4
191: invokevirtual #43
194: ldc           #44
196: invokevirtual #42
199: iconst_0
200: invokevirtual #43
203: ldc           #41
205: invokevirtual #42
208: invokevirtual #45
211: iload         4
213: ifne          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #46
224: aload         6
226: invokestatic  #47
229: aload         7
231: invokestatic  #47
234: aload         8
236: invokestatic  #47
239: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test142
Start line: 7670
End line: 7743
Method source code: 
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter28 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction29 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer35 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker38 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer35.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker38);
        int int40 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int41 = levenbergMarquardtOptimizer35.getMaxEvaluations();
        int int42 = levenbergMarquardtOptimizer35.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter43 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer35);
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = gaussianFitter43.fit(doubleArray50);
        double[] doubleArray55 = curveFitter28.fit(parametricUnivariateRealFunction29, doubleArray50);
        double[] doubleArray56 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray50);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer62 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker65 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer62.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker65);
        int int67 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        int int68 = levenbergMarquardtOptimizer62.getMaxEvaluations();
        int int69 = levenbergMarquardtOptimizer62.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter70 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer62);
        double[] doubleArray77 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray78 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray77, doubleArray78, true);
        double[] doubleArray81 = gaussianFitter70.fit(doubleArray77);
        double[] doubleArray82 = gaussianFitter12.fit(doubleArray81);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray83 = gaussianFitter12.getObservations();
        gaussianFitter12.clearObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #460
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: aconst_null
94: astore        7
96: new           #8
99: dup
100: ldc2_w        #9
103: ldc2_w        #11
106: ldc2_w        #13
109: dconst_1
110: ldc2_w        #13
113: invokespecial #15
116: astore        8
118: new           #16
121: dup
122: ldc2_w        #17
125: ldc2_w        #19
128: invokespecial #21
131: astore        9
133: aload         8
135: aload         9
137: invokevirtual #22
140: aload         8
142: invokevirtual #23
145: istore        10
147: aload         8
149: invokevirtual #23
152: istore        11
154: aload         8
156: invokevirtual #53
159: istore        12
161: new           #67
164: dup
165: aload         8
167: invokespecial #68
170: astore        13
172: aconst_null
173: astore        14
175: new           #8
178: dup
179: ldc2_w        #9
182: ldc2_w        #11
185: ldc2_w        #13
188: dconst_1
189: ldc2_w        #13
192: invokespecial #15
195: astore        15
197: new           #16
200: dup
201: ldc2_w        #17
204: ldc2_w        #19
207: invokespecial #21
210: astore        16
212: aload         15
214: aload         16
216: invokevirtual #22
219: aload         15
221: invokevirtual #23
224: istore        17
226: aload         15
228: invokevirtual #23
231: istore        18
233: aload         15
235: invokevirtual #53
238: istore        19
240: new           #24
243: dup
244: aload         15
246: invokespecial #25
249: astore        20
251: bipush        6
253: newarray       double
255: dup
256: iconst_0
257: ldc2_w        #27
260: dastore
261: dup
262: iconst_1
263: ldc2_w        #9
266: dastore
267: dup
268: iconst_2
269: ldc2_w        #13
272: dastore
273: dup
274: iconst_3
275: ldc2_w        #29
278: dastore
279: dup
280: iconst_4
281: ldc2_w        #17
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #31
290: dastore
291: astore        21
293: aconst_null
294: astore        22
296: new           #33
299: dup
300: aload         21
302: aload         22
304: iconst_1
305: invokespecial #34
308: astore        23
310: aload         20
312: aload         21
314: invokevirtual #54
317: astore        24
319: aload         13
321: aload         14
323: aload         21
325: invokevirtual #89
328: astore        25
330: aload         5
332: aload         7
334: aload         21
336: invokevirtual #55
339: astore        26
341: new           #8
344: dup
345: ldc2_w        #9
348: ldc2_w        #11
351: ldc2_w        #13
354: dconst_1
355: ldc2_w        #13
358: invokespecial #15
361: astore        27
363: new           #16
366: dup
367: ldc2_w        #17
370: ldc2_w        #19
373: invokespecial #21
376: astore        28
378: aload         27
380: aload         28
382: invokevirtual #22
385: aload         27
387: invokevirtual #23
390: istore        29
392: aload         27
394: invokevirtual #23
397: istore        30
399: aload         27
401: invokevirtual #53
404: istore        31
406: new           #24
409: dup
410: aload         27
412: invokespecial #25
415: astore        32
417: bipush        6
419: newarray       double
421: dup
422: iconst_0
423: ldc2_w        #27
426: dastore
427: dup
428: iconst_1
429: ldc2_w        #9
432: dastore
433: dup
434: iconst_2
435: ldc2_w        #13
438: dastore
439: dup
440: iconst_3
441: ldc2_w        #29
444: dastore
445: dup
446: iconst_4
447: ldc2_w        #17
450: dastore
451: dup
452: iconst_5
453: ldc2_w        #31
456: dastore
457: astore        33
459: aconst_null
460: astore        34
462: new           #33
465: dup
466: aload         33
468: aload         34
470: iconst_1
471: invokespecial #34
474: astore        35
476: aload         32
478: aload         33
480: invokevirtual #54
483: astore        36
485: aload         5
487: aload         36
489: invokevirtual #54
492: astore        37
494: aload         5
496: invokevirtual #62
499: astore        38
501: aload         5
503: invokevirtual #52
506: new           #39
509: dup
510: invokespecial #40
513: ldc           #41
515: invokevirtual #42
518: iload_3
519: invokevirtual #43
522: ldc           #44
524: invokevirtual #42
527: iconst_0
528: invokevirtual #43
531: ldc           #41
533: invokevirtual #42
536: invokevirtual #45
539: iload_3
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #46
551: new           #39
554: dup
555: invokespecial #40
558: ldc           #41
560: invokevirtual #42
563: iload         4
565: invokevirtual #43
568: ldc           #44
570: invokevirtual #42
573: iconst_0
574: invokevirtual #43
577: ldc           #41
579: invokevirtual #42
582: invokevirtual #45
585: iload         4
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #46
598: aload         6
600: invokestatic  #47
603: new           #39
606: dup
607: invokespecial #40
610: ldc           #41
612: invokevirtual #42
615: iload         10
617: invokevirtual #43
620: ldc           #44
622: invokevirtual #42
625: iconst_0
626: invokevirtual #43
629: ldc           #41
631: invokevirtual #42
634: invokevirtual #45
637: iload         10
639: ifne          646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #46
650: new           #39
653: dup
654: invokespecial #40
657: ldc           #41
659: invokevirtual #42
662: iload         11
664: invokevirtual #43
667: ldc           #44
669: invokevirtual #42
672: iconst_0
673: invokevirtual #43
676: ldc           #41
678: invokevirtual #42
681: invokevirtual #45
684: iload         11
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #46
697: new           #39
700: dup
701: invokespecial #40
704: ldc           #41
706: invokevirtual #42
709: iload         12
711: invokevirtual #43
714: ldc           #44
716: invokevirtual #42
719: iconst_0
720: invokevirtual #43
723: ldc           #41
725: invokevirtual #42
728: invokevirtual #45
731: iload         12
733: ifne          740
736: iconst_1
737: goto          741
740: iconst_0
741: invokestatic  #46
744: new           #39
747: dup
748: invokespecial #40
751: ldc           #41
753: invokevirtual #42
756: iload         17
758: invokevirtual #43
761: ldc           #44
763: invokevirtual #42
766: iconst_0
767: invokevirtual #43
770: ldc           #41
772: invokevirtual #42
775: invokevirtual #45
778: iload         17
780: ifne          787
783: iconst_1
784: goto          788
787: iconst_0
788: invokestatic  #46
791: new           #39
794: dup
795: invokespecial #40
798: ldc           #41
800: invokevirtual #42
803: iload         18
805: invokevirtual #43
808: ldc           #44
810: invokevirtual #42
813: iconst_0
814: invokevirtual #43
817: ldc           #41
819: invokevirtual #42
822: invokevirtual #45
825: iload         18
827: ifne          834
830: iconst_1
831: goto          835
834: iconst_0
835: invokestatic  #46
838: new           #39
841: dup
842: invokespecial #40
845: ldc           #41
847: invokevirtual #42
850: iload         19
852: invokevirtual #43
855: ldc           #44
857: invokevirtual #42
860: iconst_0
861: invokevirtual #43
864: ldc           #41
866: invokevirtual #42
869: invokevirtual #45
872: iload         19
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #46
885: aload         21
887: invokestatic  #47
890: aload         21
892: invokestatic  #48
895: ldc           #49
897: invokestatic  #50
900: aload         24
902: invokestatic  #47
905: aload         24
907: invokestatic  #48
910: ldc           #49
912: invokestatic  #50
915: aload         25
917: invokestatic  #47
920: aload         25
922: invokestatic  #48
925: ldc           #49
927: invokestatic  #50
930: aload         26
932: invokestatic  #47
935: aload         26
937: invokestatic  #48
940: ldc           #49
942: invokestatic  #50
945: new           #39
948: dup
949: invokespecial #40
952: ldc           #41
954: invokevirtual #42
957: iload         29
959: invokevirtual #43
962: ldc           #44
964: invokevirtual #42
967: iconst_0
968: invokevirtual #43
971: ldc           #41
973: invokevirtual #42
976: invokevirtual #45
979: iload         29
981: ifne          988
984: iconst_1
985: goto          989
988: iconst_0
989: invokestatic  #46
992: new           #39
995: dup
996: invokespecial #40
999: ldc           #41
1001: invokevirtual #42
1004: iload         30
1006: invokevirtual #43
1009: ldc           #44
1011: invokevirtual #42
1014: iconst_0
1015: invokevirtual #43
1018: ldc           #41
1020: invokevirtual #42
1023: invokevirtual #45
1026: iload         30
1028: ifne          1035
1031: iconst_1
1032: goto          1036
1035: iconst_0
1036: invokestatic  #46
1039: new           #39
1042: dup
1043: invokespecial #40
1046: ldc           #41
1048: invokevirtual #42
1051: iload         31
1053: invokevirtual #43
1056: ldc           #44
1058: invokevirtual #42
1061: iconst_0
1062: invokevirtual #43
1065: ldc           #41
1067: invokevirtual #42
1070: invokevirtual #45
1073: iload         31
1075: ifne          1082
1078: iconst_1
1079: goto          1083
1082: iconst_0
1083: invokestatic  #46
1086: aload         33
1088: invokestatic  #47
1091: aload         33
1093: invokestatic  #48
1096: ldc           #49
1098: invokestatic  #50
1101: aload         36
1103: invokestatic  #47
1106: aload         36
1108: invokestatic  #48
1111: ldc           #49
1113: invokestatic  #50
1116: aload         37
1118: invokestatic  #47
1121: aload         37
1123: invokestatic  #48
1126: ldc           #49
1128: invokestatic  #50
1131: aload         38
1133: invokestatic  #47
1136: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test143
Start line: 7746
End line: 7765
Method source code: 
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        double double15 = levenbergMarquardtOptimizer5.getRMS();
        int int16 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #461
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: aload_1
83: invokevirtual #160
86: istore        6
88: new           #24
91: dup
92: aload_1
93: invokespecial #25
96: astore        7
98: aload_1
99: invokevirtual #201
102: dstore        8
104: aload_1
105: invokevirtual #23
108: istore        10
110: new           #39
113: dup
114: invokespecial #40
117: ldc           #41
119: invokevirtual #42
122: iload_3
123: invokevirtual #43
126: ldc           #44
128: invokevirtual #42
131: iconst_0
132: invokevirtual #43
135: ldc           #41
137: invokevirtual #42
140: invokevirtual #45
143: iload_3
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #46
155: new           #39
158: dup
159: invokespecial #40
162: ldc           #41
164: invokevirtual #42
167: iload         4
169: invokevirtual #43
172: ldc           #44
174: invokevirtual #42
177: iconst_0
178: invokevirtual #43
181: ldc           #41
183: invokevirtual #42
186: invokevirtual #45
189: iload         4
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #46
202: new           #39
205: dup
206: invokespecial #40
209: ldc           #41
211: invokevirtual #42
214: iload         5
216: invokevirtual #43
219: ldc           #44
221: invokevirtual #42
224: iconst_0
225: invokevirtual #43
228: ldc           #41
230: invokevirtual #42
233: invokevirtual #45
236: iload         5
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #46
249: new           #39
252: dup
253: invokespecial #40
256: ldc           #41
258: invokevirtual #42
261: iload         6
263: invokevirtual #43
266: ldc           #44
268: invokevirtual #42
271: iconst_0
272: invokevirtual #43
275: ldc           #41
277: invokevirtual #42
280: invokevirtual #45
283: iload         6
285: ifne          292
288: iconst_1
289: goto          293
292: iconst_0
293: invokestatic  #46
296: dload         8
298: invokestatic  #202
301: invokestatic  #203
304: new           #39
307: dup
308: invokespecial #40
311: ldc           #41
313: invokevirtual #42
316: iload         10
318: invokevirtual #43
321: ldc           #44
323: invokevirtual #42
326: iconst_0
327: invokevirtual #43
330: ldc           #41
332: invokevirtual #42
335: invokevirtual #45
338: iload         10
340: ifne          347
343: iconst_1
344: goto          348
347: iconst_0
348: invokestatic  #46
351: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test144
Start line: 7768
End line: 7805
Method source code: 
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray41 = gaussianFitter12.getObservations();
        gaussianFitter12.addObservedPoint(1.1577199323004177d, 1.3440585709080678E43d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #462
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #52
91: aconst_null
92: astore        6
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        7
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        8
131: aload         7
133: aload         8
135: invokevirtual #22
138: aload         7
140: invokevirtual #23
143: istore        9
145: aload         7
147: invokevirtual #23
150: istore        10
152: aload         7
154: invokevirtual #53
157: istore        11
159: new           #24
162: dup
163: aload         7
165: invokespecial #25
168: astore        12
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        13
212: aconst_null
213: astore        14
215: new           #33
218: dup
219: aload         13
221: aload         14
223: iconst_1
224: invokespecial #34
227: astore        15
229: aload         12
231: aload         13
233: invokevirtual #54
236: astore        16
238: aload         5
240: aload         6
242: aload         16
244: invokevirtual #55
247: astore        17
249: aload         5
251: invokevirtual #62
254: astore        18
256: aload         5
258: ldc2_w        #463
261: ldc2_w        #465
264: invokevirtual #158
267: new           #39
270: dup
271: invokespecial #40
274: ldc           #41
276: invokevirtual #42
279: iload_3
280: invokevirtual #43
283: ldc           #44
285: invokevirtual #42
288: iconst_0
289: invokevirtual #43
292: ldc           #41
294: invokevirtual #42
297: invokevirtual #45
300: iload_3
301: ifne          308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #46
312: new           #39
315: dup
316: invokespecial #40
319: ldc           #41
321: invokevirtual #42
324: iload         4
326: invokevirtual #43
329: ldc           #44
331: invokevirtual #42
334: iconst_0
335: invokevirtual #43
338: ldc           #41
340: invokevirtual #42
343: invokevirtual #45
346: iload         4
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #46
359: new           #39
362: dup
363: invokespecial #40
366: ldc           #41
368: invokevirtual #42
371: iload         9
373: invokevirtual #43
376: ldc           #44
378: invokevirtual #42
381: iconst_0
382: invokevirtual #43
385: ldc           #41
387: invokevirtual #42
390: invokevirtual #45
393: iload         9
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #46
406: new           #39
409: dup
410: invokespecial #40
413: ldc           #41
415: invokevirtual #42
418: iload         10
420: invokevirtual #43
423: ldc           #44
425: invokevirtual #42
428: iconst_0
429: invokevirtual #43
432: ldc           #41
434: invokevirtual #42
437: invokevirtual #45
440: iload         10
442: ifne          449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #46
453: new           #39
456: dup
457: invokespecial #40
460: ldc           #41
462: invokevirtual #42
465: iload         11
467: invokevirtual #43
470: ldc           #44
472: invokevirtual #42
475: iconst_0
476: invokevirtual #43
479: ldc           #41
481: invokevirtual #42
484: invokevirtual #45
487: iload         11
489: ifne          496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #46
500: aload         13
502: invokestatic  #47
505: aload         13
507: invokestatic  #48
510: ldc           #49
512: invokestatic  #50
515: aload         16
517: invokestatic  #47
520: aload         16
522: invokestatic  #48
525: ldc           #49
527: invokestatic  #50
530: aload         17
532: invokestatic  #47
535: aload         17
537: invokestatic  #48
540: ldc           #49
542: invokestatic  #50
545: aload         18
547: invokestatic  #47
550: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test145
Start line: 7808
End line: 7878
Method source code: 
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric15 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = curveFitter14.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric15, doubleArray40);
        double[] doubleArray43 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer49 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker52 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer49.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker52);
        int int54 = levenbergMarquardtOptimizer49.getMaxEvaluations();
        int int55 = levenbergMarquardtOptimizer49.getMaxEvaluations();
        int int56 = levenbergMarquardtOptimizer49.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter57 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer49);
        double[] doubleArray64 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray65 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair67 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray64, doubleArray65, true);
        double[] doubleArray68 = gaussianFitter57.fit(doubleArray64);
        double[] doubleArray75 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray76 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray75, doubleArray76, true);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray68, doubleArray76, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = parametric15.value(2005.3522829578815d, doubleArray68);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #467
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #67
91: dup
92: aload_1
93: invokespecial #68
96: astore        8
98: new           #117
101: dup
102: invokespecial #118
105: astore        9
107: new           #8
110: dup
111: ldc2_w        #9
114: ldc2_w        #11
117: ldc2_w        #13
120: dconst_1
121: ldc2_w        #13
124: invokespecial #15
127: astore        10
129: new           #16
132: dup
133: ldc2_w        #17
136: ldc2_w        #19
139: invokespecial #21
142: astore        11
144: aload         10
146: aload         11
148: invokevirtual #22
151: aload         10
153: invokevirtual #23
156: istore        12
158: aload         10
160: invokevirtual #23
163: istore        13
165: aload         10
167: invokevirtual #53
170: istore        14
172: new           #24
175: dup
176: aload         10
178: invokespecial #25
181: astore        15
183: bipush        6
185: newarray       double
187: dup
188: iconst_0
189: ldc2_w        #27
192: dastore
193: dup
194: iconst_1
195: ldc2_w        #9
198: dastore
199: dup
200: iconst_2
201: ldc2_w        #13
204: dastore
205: dup
206: iconst_3
207: ldc2_w        #29
210: dastore
211: dup
212: iconst_4
213: ldc2_w        #17
216: dastore
217: dup
218: iconst_5
219: ldc2_w        #31
222: dastore
223: astore        16
225: aconst_null
226: astore        17
228: new           #33
231: dup
232: aload         16
234: aload         17
236: iconst_1
237: invokespecial #34
240: astore        18
242: aload         15
244: aload         16
246: invokevirtual #54
249: astore        19
251: aload         8
253: aload         9
255: aload         19
257: invokevirtual #89
260: astore        20
262: aconst_null
263: astore        21
265: new           #8
268: dup
269: ldc2_w        #9
272: ldc2_w        #11
275: ldc2_w        #13
278: dconst_1
279: ldc2_w        #13
282: invokespecial #15
285: astore        22
287: new           #16
290: dup
291: ldc2_w        #17
294: ldc2_w        #19
297: invokespecial #21
300: astore        23
302: aload         22
304: aload         23
306: invokevirtual #22
309: aload         22
311: invokevirtual #23
314: istore        24
316: aload         22
318: invokevirtual #23
321: istore        25
323: aload         22
325: invokevirtual #53
328: istore        26
330: new           #24
333: dup
334: aload         22
336: invokespecial #25
339: astore        27
341: bipush        6
343: newarray       double
345: dup
346: iconst_0
347: ldc2_w        #27
350: dastore
351: dup
352: iconst_1
353: ldc2_w        #9
356: dastore
357: dup
358: iconst_2
359: ldc2_w        #13
362: dastore
363: dup
364: iconst_3
365: ldc2_w        #29
368: dastore
369: dup
370: iconst_4
371: ldc2_w        #17
374: dastore
375: dup
376: iconst_5
377: ldc2_w        #31
380: dastore
381: astore        28
383: aconst_null
384: astore        29
386: new           #33
389: dup
390: aload         28
392: aload         29
394: iconst_1
395: invokespecial #34
398: astore        30
400: aload         27
402: aload         28
404: invokevirtual #54
407: astore        31
409: bipush        6
411: newarray       double
413: dup
414: iconst_0
415: ldc2_w        #27
418: dastore
419: dup
420: iconst_1
421: ldc2_w        #9
424: dastore
425: dup
426: iconst_2
427: ldc2_w        #13
430: dastore
431: dup
432: iconst_3
433: ldc2_w        #29
436: dastore
437: dup
438: iconst_4
439: ldc2_w        #17
442: dastore
443: dup
444: iconst_5
445: ldc2_w        #31
448: dastore
449: astore        32
451: aconst_null
452: astore        33
454: new           #33
457: dup
458: aload         32
460: aload         33
462: iconst_1
463: invokespecial #34
466: astore        34
468: new           #33
471: dup
472: aload         31
474: aload         33
476: iconst_0
477: invokespecial #34
480: astore        35
482: new           #33
485: dup
486: aload         21
488: aload         31
490: invokespecial #109
493: astore        36
495: aload         9
497: ldc2_w        #468
500: aload         31
502: invokevirtual #123
505: dstore        37
507: ldc           #124
509: invokestatic  #37
512: goto          517
515: astore        37
517: new           #39
520: dup
521: invokespecial #40
524: ldc           #41
526: invokevirtual #42
529: iload_3
530: invokevirtual #43
533: ldc           #44
535: invokevirtual #42
538: iconst_0
539: invokevirtual #43
542: ldc           #41
544: invokevirtual #42
547: invokevirtual #45
550: iload_3
551: ifne          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #46
562: new           #39
565: dup
566: invokespecial #40
569: ldc           #41
571: invokevirtual #42
574: iload         4
576: invokevirtual #43
579: ldc           #44
581: invokevirtual #42
584: iconst_0
585: invokevirtual #43
588: ldc           #41
590: invokevirtual #42
593: invokevirtual #45
596: iload         4
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #46
609: new           #39
612: dup
613: invokespecial #40
616: ldc           #41
618: invokevirtual #42
621: dload         5
623: invokevirtual #59
626: ldc           #44
628: invokevirtual #42
631: dconst_0
632: invokevirtual #59
635: ldc           #41
637: invokevirtual #42
640: invokevirtual #45
643: dload         5
645: dconst_0
646: dcmpl
647: ifne          654
650: iconst_1
651: goto          655
654: iconst_0
655: invokestatic  #46
658: new           #39
661: dup
662: invokespecial #40
665: ldc           #41
667: invokevirtual #42
670: iload         7
672: invokevirtual #43
675: ldc           #44
677: invokevirtual #42
680: iconst_0
681: invokevirtual #43
684: ldc           #41
686: invokevirtual #42
689: invokevirtual #45
692: iload         7
694: ifne          701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #46
705: new           #39
708: dup
709: invokespecial #40
712: ldc           #41
714: invokevirtual #42
717: iload         12
719: invokevirtual #43
722: ldc           #44
724: invokevirtual #42
727: iconst_0
728: invokevirtual #43
731: ldc           #41
733: invokevirtual #42
736: invokevirtual #45
739: iload         12
741: ifne          748
744: iconst_1
745: goto          749
748: iconst_0
749: invokestatic  #46
752: new           #39
755: dup
756: invokespecial #40
759: ldc           #41
761: invokevirtual #42
764: iload         13
766: invokevirtual #43
769: ldc           #44
771: invokevirtual #42
774: iconst_0
775: invokevirtual #43
778: ldc           #41
780: invokevirtual #42
783: invokevirtual #45
786: iload         13
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #46
799: new           #39
802: dup
803: invokespecial #40
806: ldc           #41
808: invokevirtual #42
811: iload         14
813: invokevirtual #43
816: ldc           #44
818: invokevirtual #42
821: iconst_0
822: invokevirtual #43
825: ldc           #41
827: invokevirtual #42
830: invokevirtual #45
833: iload         14
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #46
846: aload         16
848: invokestatic  #47
851: aload         16
853: invokestatic  #48
856: ldc           #49
858: invokestatic  #50
861: aload         19
863: invokestatic  #47
866: aload         19
868: invokestatic  #48
871: ldc           #49
873: invokestatic  #50
876: aload         20
878: invokestatic  #47
881: aload         20
883: invokestatic  #48
886: ldc           #49
888: invokestatic  #50
891: new           #39
894: dup
895: invokespecial #40
898: ldc           #41
900: invokevirtual #42
903: iload         24
905: invokevirtual #43
908: ldc           #44
910: invokevirtual #42
913: iconst_0
914: invokevirtual #43
917: ldc           #41
919: invokevirtual #42
922: invokevirtual #45
925: iload         24
927: ifne          934
930: iconst_1
931: goto          935
934: iconst_0
935: invokestatic  #46
938: new           #39
941: dup
942: invokespecial #40
945: ldc           #41
947: invokevirtual #42
950: iload         25
952: invokevirtual #43
955: ldc           #44
957: invokevirtual #42
960: iconst_0
961: invokevirtual #43
964: ldc           #41
966: invokevirtual #42
969: invokevirtual #45
972: iload         25
974: ifne          981
977: iconst_1
978: goto          982
981: iconst_0
982: invokestatic  #46
985: new           #39
988: dup
989: invokespecial #40
992: ldc           #41
994: invokevirtual #42
997: iload         26
999: invokevirtual #43
1002: ldc           #44
1004: invokevirtual #42
1007: iconst_0
1008: invokevirtual #43
1011: ldc           #41
1013: invokevirtual #42
1016: invokevirtual #45
1019: iload         26
1021: ifne          1028
1024: iconst_1
1025: goto          1029
1028: iconst_0
1029: invokestatic  #46
1032: aload         28
1034: invokestatic  #47
1037: aload         28
1039: invokestatic  #48
1042: ldc           #49
1044: invokestatic  #50
1047: aload         31
1049: invokestatic  #47
1052: aload         31
1054: invokestatic  #48
1057: ldc           #49
1059: invokestatic  #50
1062: aload         32
1064: invokestatic  #47
1067: aload         32
1069: invokestatic  #48
1072: ldc           #49
1074: invokestatic  #50
1077: return
Exception table:
from    to  target type
495   512   515   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test146
Start line: 7881
End line: 7906
Method source code: 
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double17 = simpleVectorialValueChecker16.getRelativeThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker16);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter19 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker20 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        double double21 = levenbergMarquardtOptimizer5.getRMS();
        int int22 = levenbergMarquardtOptimizer5.getEvaluations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #470
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #16
91: dup
92: ldc2_w        #17
95: ldc2_w        #19
98: invokespecial #21
101: astore        8
103: aload         8
105: invokevirtual #88
108: dstore        9
110: aload_1
111: aload         8
113: invokevirtual #22
116: new           #24
119: dup
120: aload_1
121: invokespecial #25
124: astore        11
126: aload_1
127: invokevirtual #73
130: astore        12
132: aload_1
133: invokevirtual #201
136: dstore        13
138: aload_1
139: invokevirtual #53
142: istore        15
144: new           #39
147: dup
148: invokespecial #40
151: ldc           #41
153: invokevirtual #42
156: iload_3
157: invokevirtual #43
160: ldc           #44
162: invokevirtual #42
165: iconst_0
166: invokevirtual #43
169: ldc           #41
171: invokevirtual #42
174: invokevirtual #45
177: iload_3
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #46
189: new           #39
192: dup
193: invokespecial #40
196: ldc           #41
198: invokevirtual #42
201: iload         4
203: invokevirtual #43
206: ldc           #44
208: invokevirtual #42
211: iconst_0
212: invokevirtual #43
215: ldc           #41
217: invokevirtual #42
220: invokevirtual #45
223: iload         4
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #46
236: new           #39
239: dup
240: invokespecial #40
243: ldc           #41
245: invokevirtual #42
248: dload         5
250: invokevirtual #59
253: ldc           #44
255: invokevirtual #42
258: dconst_0
259: invokevirtual #59
262: ldc           #41
264: invokevirtual #42
267: invokevirtual #45
270: dload         5
272: dconst_0
273: dcmpl
274: ifne          281
277: iconst_1
278: goto          282
281: iconst_0
282: invokestatic  #46
285: new           #39
288: dup
289: invokespecial #40
292: ldc           #41
294: invokevirtual #42
297: iload         7
299: invokevirtual #43
302: ldc           #44
304: invokevirtual #42
307: iconst_0
308: invokevirtual #43
311: ldc           #41
313: invokevirtual #42
316: invokevirtual #45
319: iload         7
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #46
332: new           #39
335: dup
336: invokespecial #40
339: ldc           #41
341: invokevirtual #42
344: dload         9
346: invokevirtual #59
349: ldc           #44
351: invokevirtual #42
354: ldc2_w        #17
357: invokevirtual #59
360: ldc           #41
362: invokevirtual #42
365: invokevirtual #45
368: dload         9
370: ldc2_w        #17
373: dcmpl
374: ifne          381
377: iconst_1
378: goto          382
381: iconst_0
382: invokestatic  #46
385: aload         12
387: invokestatic  #47
390: dload         13
392: invokestatic  #202
395: invokestatic  #203
398: new           #39
401: dup
402: invokespecial #40
405: ldc           #41
407: invokevirtual #42
410: iload         15
412: invokevirtual #43
415: ldc           #44
417: invokevirtual #42
420: iconst_0
421: invokevirtual #43
424: ldc           #41
426: invokevirtual #42
429: invokevirtual #45
432: iload         15
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #46
445: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test147
Start line: 7909
End line: 7934
Method source code: 
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int16 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(1.5707963267948968d, (-36.112450906157385d), 2979.0d);
        int int21 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker22 = levenbergMarquardtOptimizer20.getConvergenceChecker();
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker22);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #471
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #160
86: istore        7
88: aload_1
89: invokevirtual #58
92: dstore        8
94: new           #24
97: dup
98: aload_1
99: invokespecial #25
102: astore        10
104: aload_1
105: invokevirtual #53
108: istore        11
110: new           #8
113: dup
114: ldc2_w        #472
117: ldc2_w        #273
120: ldc2_w        #457
123: invokespecial #474
126: astore        12
128: aload         12
130: invokevirtual #23
133: istore        13
135: aload         12
137: invokevirtual #73
140: astore        14
142: aload_1
143: aload         14
145: invokevirtual #22
148: new           #39
151: dup
152: invokespecial #40
155: ldc           #41
157: invokevirtual #42
160: iload_3
161: invokevirtual #43
164: ldc           #44
166: invokevirtual #42
169: iconst_0
170: invokevirtual #43
173: ldc           #41
175: invokevirtual #42
178: invokevirtual #45
181: iload_3
182: ifne          189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #46
193: new           #39
196: dup
197: invokespecial #40
200: ldc           #41
202: invokevirtual #42
205: iload         4
207: invokevirtual #43
210: ldc           #44
212: invokevirtual #42
215: iconst_0
216: invokevirtual #43
219: ldc           #41
221: invokevirtual #42
224: invokevirtual #45
227: iload         4
229: ifne          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #46
240: new           #39
243: dup
244: invokespecial #40
247: ldc           #41
249: invokevirtual #42
252: dload         5
254: invokevirtual #59
257: ldc           #44
259: invokevirtual #42
262: dconst_0
263: invokevirtual #59
266: ldc           #41
268: invokevirtual #42
271: invokevirtual #45
274: dload         5
276: dconst_0
277: dcmpl
278: ifne          285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #46
289: new           #39
292: dup
293: invokespecial #40
296: ldc           #41
298: invokevirtual #42
301: iload         7
303: invokevirtual #43
306: ldc           #44
308: invokevirtual #42
311: iconst_0
312: invokevirtual #43
315: ldc           #41
317: invokevirtual #42
320: invokevirtual #45
323: iload         7
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #46
336: new           #39
339: dup
340: invokespecial #40
343: ldc           #41
345: invokevirtual #42
348: dload         8
350: invokevirtual #59
353: ldc           #44
355: invokevirtual #42
358: dconst_0
359: invokevirtual #59
362: ldc           #41
364: invokevirtual #42
367: invokevirtual #45
370: dload         8
372: dconst_0
373: dcmpl
374: ifne          381
377: iconst_1
378: goto          382
381: iconst_0
382: invokestatic  #46
385: new           #39
388: dup
389: invokespecial #40
392: ldc           #41
394: invokevirtual #42
397: iload         11
399: invokevirtual #43
402: ldc           #44
404: invokevirtual #42
407: iconst_0
408: invokevirtual #43
411: ldc           #41
413: invokevirtual #42
416: invokevirtual #45
419: iload         11
421: ifne          428
424: iconst_1
425: goto          429
428: iconst_0
429: invokestatic  #46
432: new           #39
435: dup
436: invokespecial #40
439: ldc           #41
441: invokevirtual #42
444: iload         13
446: invokevirtual #43
449: ldc           #44
451: invokevirtual #42
454: iconst_0
455: invokevirtual #43
458: ldc           #41
460: invokevirtual #42
463: invokevirtual #45
466: iload         13
468: ifne          475
471: iconst_1
472: goto          476
475: iconst_0
476: invokestatic  #46
479: aload         14
481: invokestatic  #47
484: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test148
Start line: 7937
End line: 8010
Method source code: 
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        double[] doubleArray6 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray7 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair9 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray6, doubleArray7, true);
        double[] doubleArray10 = vectorialPointValuePair9.getValue();
        double[] doubleArray11 = vectorialPointValuePair9.getValue();
        double[] doubleArray12 = vectorialPointValuePair9.getPoint();
        double[] doubleArray19 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray20 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair22 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray20, true);
        double[] doubleArray23 = vectorialPointValuePair22.getValue();
        double[] doubleArray24 = vectorialPointValuePair22.getValue();
        double[] doubleArray25 = vectorialPointValuePair22.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair27 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray25, false);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter41 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction42 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer48 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker51 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer48.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker51);
        int int53 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int55 = levenbergMarquardtOptimizer48.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter56 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer48);
        double[] doubleArray63 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray64 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray64, true);
        double[] doubleArray67 = gaussianFitter56.fit(doubleArray63);
        double[] doubleArray68 = curveFitter41.fit(parametricUnivariateRealFunction42, doubleArray63);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray68);
        double[] doubleArray70 = vectorialPointValuePair69.getValueRef();
        double[] doubleArray71 = vectorialPointValuePair69.getValue();
        double[] doubleArray72 = vectorialPointValuePair69.getPoint();
        double[] doubleArray73 = vectorialPointValuePair69.getPoint();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #475
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: newarray       double
29: dup
30: iconst_0
31: ldc2_w        #27
34: dastore
35: dup
36: iconst_1
37: ldc2_w        #9
40: dastore
41: dup
42: iconst_2
43: ldc2_w        #13
46: dastore
47: dup
48: iconst_3
49: ldc2_w        #29
52: dastore
53: dup
54: iconst_4
55: ldc2_w        #17
58: dastore
59: dup
60: iconst_5
61: ldc2_w        #31
64: dastore
65: astore_1
66: aconst_null
67: astore_2
68: new           #33
71: dup
72: aload_1
73: aload_2
74: iconst_1
75: invokespecial #34
78: astore_3
79: aload_3
80: invokevirtual #74
83: astore        4
85: aload_3
86: invokevirtual #74
89: astore        5
91: aload_3
92: invokevirtual #75
95: astore        6
97: bipush        6
99: newarray       double
101: dup
102: iconst_0
103: ldc2_w        #27
106: dastore
107: dup
108: iconst_1
109: ldc2_w        #9
112: dastore
113: dup
114: iconst_2
115: ldc2_w        #13
118: dastore
119: dup
120: iconst_3
121: ldc2_w        #29
124: dastore
125: dup
126: iconst_4
127: ldc2_w        #17
130: dastore
131: dup
132: iconst_5
133: ldc2_w        #31
136: dastore
137: astore        7
139: aconst_null
140: astore        8
142: new           #33
145: dup
146: aload         7
148: aload         8
150: iconst_1
151: invokespecial #34
154: astore        9
156: aload         9
158: invokevirtual #74
161: astore        10
163: aload         9
165: invokevirtual #74
168: astore        11
170: aload         9
172: invokevirtual #75
175: astore        12
177: new           #33
180: dup
181: aload         6
183: aload         12
185: iconst_0
186: invokespecial #34
189: astore        13
191: new           #8
194: dup
195: ldc2_w        #9
198: ldc2_w        #11
201: ldc2_w        #13
204: dconst_1
205: ldc2_w        #13
208: invokespecial #15
211: astore        14
213: new           #16
216: dup
217: ldc2_w        #17
220: ldc2_w        #19
223: invokespecial #21
226: astore        15
228: aload         14
230: aload         15
232: invokevirtual #22
235: aload         14
237: invokevirtual #23
240: istore        16
242: aload         14
244: invokevirtual #23
247: istore        17
249: aload         14
251: invokevirtual #53
254: istore        18
256: new           #67
259: dup
260: aload         14
262: invokespecial #68
265: astore        19
267: aconst_null
268: astore        20
270: new           #8
273: dup
274: ldc2_w        #9
277: ldc2_w        #11
280: ldc2_w        #13
283: dconst_1
284: ldc2_w        #13
287: invokespecial #15
290: astore        21
292: new           #16
295: dup
296: ldc2_w        #17
299: ldc2_w        #19
302: invokespecial #21
305: astore        22
307: aload         21
309: aload         22
311: invokevirtual #22
314: aload         21
316: invokevirtual #23
319: istore        23
321: aload         21
323: invokevirtual #23
326: istore        24
328: aload         21
330: invokevirtual #53
333: istore        25
335: new           #24
338: dup
339: aload         21
341: invokespecial #25
344: astore        26
346: bipush        6
348: newarray       double
350: dup
351: iconst_0
352: ldc2_w        #27
355: dastore
356: dup
357: iconst_1
358: ldc2_w        #9
361: dastore
362: dup
363: iconst_2
364: ldc2_w        #13
367: dastore
368: dup
369: iconst_3
370: ldc2_w        #29
373: dastore
374: dup
375: iconst_4
376: ldc2_w        #17
379: dastore
380: dup
381: iconst_5
382: ldc2_w        #31
385: dastore
386: astore        27
388: aconst_null
389: astore        28
391: new           #33
394: dup
395: aload         27
397: aload         28
399: iconst_1
400: invokespecial #34
403: astore        29
405: aload         26
407: aload         27
409: invokevirtual #54
412: astore        30
414: aload         19
416: aload         20
418: aload         27
420: invokevirtual #89
423: astore        31
425: new           #33
428: dup
429: aload         12
431: aload         31
433: invokespecial #109
436: astore        32
438: aload         32
440: invokevirtual #183
443: astore        33
445: aload         32
447: invokevirtual #74
450: astore        34
452: aload         32
454: invokevirtual #75
457: astore        35
459: aload         32
461: invokevirtual #75
464: astore        36
466: aload_1
467: invokestatic  #47
470: aload_1
471: invokestatic  #48
474: ldc           #49
476: invokestatic  #50
479: aload         4
481: invokestatic  #76
484: aload         5
486: invokestatic  #76
489: aload         6
491: invokestatic  #47
494: aload         6
496: invokestatic  #48
499: ldc           #49
501: invokestatic  #50
504: aload         7
506: invokestatic  #47
509: aload         7
511: invokestatic  #48
514: ldc           #49
516: invokestatic  #50
519: aload         10
521: invokestatic  #76
524: aload         11
526: invokestatic  #76
529: aload         12
531: invokestatic  #47
534: aload         12
536: invokestatic  #48
539: ldc           #49
541: invokestatic  #50
544: new           #39
547: dup
548: invokespecial #40
551: ldc           #41
553: invokevirtual #42
556: iload         16
558: invokevirtual #43
561: ldc           #44
563: invokevirtual #42
566: iconst_0
567: invokevirtual #43
570: ldc           #41
572: invokevirtual #42
575: invokevirtual #45
578: iload         16
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #46
591: new           #39
594: dup
595: invokespecial #40
598: ldc           #41
600: invokevirtual #42
603: iload         17
605: invokevirtual #43
608: ldc           #44
610: invokevirtual #42
613: iconst_0
614: invokevirtual #43
617: ldc           #41
619: invokevirtual #42
622: invokevirtual #45
625: iload         17
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #46
638: new           #39
641: dup
642: invokespecial #40
645: ldc           #41
647: invokevirtual #42
650: iload         18
652: invokevirtual #43
655: ldc           #44
657: invokevirtual #42
660: iconst_0
661: invokevirtual #43
664: ldc           #41
666: invokevirtual #42
669: invokevirtual #45
672: iload         18
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #46
685: new           #39
688: dup
689: invokespecial #40
692: ldc           #41
694: invokevirtual #42
697: iload         23
699: invokevirtual #43
702: ldc           #44
704: invokevirtual #42
707: iconst_0
708: invokevirtual #43
711: ldc           #41
713: invokevirtual #42
716: invokevirtual #45
719: iload         23
721: ifne          728
724: iconst_1
725: goto          729
728: iconst_0
729: invokestatic  #46
732: new           #39
735: dup
736: invokespecial #40
739: ldc           #41
741: invokevirtual #42
744: iload         24
746: invokevirtual #43
749: ldc           #44
751: invokevirtual #42
754: iconst_0
755: invokevirtual #43
758: ldc           #41
760: invokevirtual #42
763: invokevirtual #45
766: iload         24
768: ifne          775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #46
779: new           #39
782: dup
783: invokespecial #40
786: ldc           #41
788: invokevirtual #42
791: iload         25
793: invokevirtual #43
796: ldc           #44
798: invokevirtual #42
801: iconst_0
802: invokevirtual #43
805: ldc           #41
807: invokevirtual #42
810: invokevirtual #45
813: iload         25
815: ifne          822
818: iconst_1
819: goto          823
822: iconst_0
823: invokestatic  #46
826: aload         27
828: invokestatic  #47
831: aload         27
833: invokestatic  #48
836: ldc           #49
838: invokestatic  #50
841: aload         30
843: invokestatic  #47
846: aload         30
848: invokestatic  #48
851: ldc           #49
853: invokestatic  #50
856: aload         31
858: invokestatic  #47
861: aload         31
863: invokestatic  #48
866: ldc           #49
868: invokestatic  #50
871: aload         33
873: invokestatic  #47
876: aload         33
878: invokestatic  #48
881: ldc           #49
883: invokestatic  #50
886: aload         34
888: invokestatic  #47
891: aload         34
893: invokestatic  #48
896: ldc           #49
898: invokestatic  #50
901: aload         35
903: invokestatic  #47
906: aload         35
908: invokestatic  #48
911: ldc           #49
913: invokestatic  #50
916: aload         36
918: invokestatic  #47
921: aload         36
923: invokestatic  #48
926: ldc           #49
928: invokestatic  #50
931: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test149
Start line: 8013
End line: 8059
Method source code: 
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker21 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer18.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker21);
        int int23 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        int int24 = levenbergMarquardtOptimizer18.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter25 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer18);
        gaussianFitter25.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray53 = gaussianFitter25.fit(parametricUnivariateRealFunction27, doubleArray52);
        double[] doubleArray54 = gaussianFitter12.fit(doubleArray52);
        gaussianFitter12.addObservedPoint(12.924045709576298d, (-0.19082401361047283d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #476
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: new           #8
89: dup
90: ldc2_w        #9
93: ldc2_w        #11
96: ldc2_w        #13
99: dconst_1
100: ldc2_w        #13
103: invokespecial #15
106: astore        6
108: new           #16
111: dup
112: ldc2_w        #17
115: ldc2_w        #19
118: invokespecial #21
121: astore        7
123: aload         6
125: aload         7
127: invokevirtual #22
130: aload         6
132: invokevirtual #23
135: istore        8
137: aload         6
139: invokevirtual #23
142: istore        9
144: new           #24
147: dup
148: aload         6
150: invokespecial #25
153: astore        10
155: aload         10
157: invokevirtual #52
160: aconst_null
161: astore        11
163: new           #8
166: dup
167: ldc2_w        #9
170: ldc2_w        #11
173: ldc2_w        #13
176: dconst_1
177: ldc2_w        #13
180: invokespecial #15
183: astore        12
185: new           #16
188: dup
189: ldc2_w        #17
192: ldc2_w        #19
195: invokespecial #21
198: astore        13
200: aload         12
202: aload         13
204: invokevirtual #22
207: aload         12
209: invokevirtual #23
212: istore        14
214: aload         12
216: invokevirtual #23
219: istore        15
221: aload         12
223: invokevirtual #53
226: istore        16
228: new           #24
231: dup
232: aload         12
234: invokespecial #25
237: astore        17
239: bipush        6
241: newarray       double
243: dup
244: iconst_0
245: ldc2_w        #27
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #9
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #13
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #29
266: dastore
267: dup
268: iconst_4
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_5
275: ldc2_w        #31
278: dastore
279: astore        18
281: aconst_null
282: astore        19
284: new           #33
287: dup
288: aload         18
290: aload         19
292: iconst_1
293: invokespecial #34
296: astore        20
298: aload         17
300: aload         18
302: invokevirtual #54
305: astore        21
307: aload         10
309: aload         11
311: aload         21
313: invokevirtual #55
316: astore        22
318: aload         5
320: aload         21
322: invokevirtual #54
325: astore        23
327: aload         5
329: ldc2_w        #477
332: ldc2_w        #277
335: invokevirtual #158
338: new           #39
341: dup
342: invokespecial #40
345: ldc           #41
347: invokevirtual #42
350: iload_3
351: invokevirtual #43
354: ldc           #44
356: invokevirtual #42
359: iconst_0
360: invokevirtual #43
363: ldc           #41
365: invokevirtual #42
368: invokevirtual #45
371: iload_3
372: ifne          379
375: iconst_1
376: goto          380
379: iconst_0
380: invokestatic  #46
383: new           #39
386: dup
387: invokespecial #40
390: ldc           #41
392: invokevirtual #42
395: iload         4
397: invokevirtual #43
400: ldc           #44
402: invokevirtual #42
405: iconst_0
406: invokevirtual #43
409: ldc           #41
411: invokevirtual #42
414: invokevirtual #45
417: iload         4
419: ifne          426
422: iconst_1
423: goto          427
426: iconst_0
427: invokestatic  #46
430: new           #39
433: dup
434: invokespecial #40
437: ldc           #41
439: invokevirtual #42
442: iload         8
444: invokevirtual #43
447: ldc           #44
449: invokevirtual #42
452: iconst_0
453: invokevirtual #43
456: ldc           #41
458: invokevirtual #42
461: invokevirtual #45
464: iload         8
466: ifne          473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #46
477: new           #39
480: dup
481: invokespecial #40
484: ldc           #41
486: invokevirtual #42
489: iload         9
491: invokevirtual #43
494: ldc           #44
496: invokevirtual #42
499: iconst_0
500: invokevirtual #43
503: ldc           #41
505: invokevirtual #42
508: invokevirtual #45
511: iload         9
513: ifne          520
516: iconst_1
517: goto          521
520: iconst_0
521: invokestatic  #46
524: new           #39
527: dup
528: invokespecial #40
531: ldc           #41
533: invokevirtual #42
536: iload         14
538: invokevirtual #43
541: ldc           #44
543: invokevirtual #42
546: iconst_0
547: invokevirtual #43
550: ldc           #41
552: invokevirtual #42
555: invokevirtual #45
558: iload         14
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #46
571: new           #39
574: dup
575: invokespecial #40
578: ldc           #41
580: invokevirtual #42
583: iload         15
585: invokevirtual #43
588: ldc           #44
590: invokevirtual #42
593: iconst_0
594: invokevirtual #43
597: ldc           #41
599: invokevirtual #42
602: invokevirtual #45
605: iload         15
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #46
618: new           #39
621: dup
622: invokespecial #40
625: ldc           #41
627: invokevirtual #42
630: iload         16
632: invokevirtual #43
635: ldc           #44
637: invokevirtual #42
640: iconst_0
641: invokevirtual #43
644: ldc           #41
646: invokevirtual #42
649: invokevirtual #45
652: iload         16
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #46
665: aload         18
667: invokestatic  #47
670: aload         18
672: invokestatic  #48
675: ldc           #49
677: invokestatic  #50
680: aload         21
682: invokestatic  #47
685: aload         21
687: invokestatic  #48
690: ldc           #49
692: invokestatic  #50
695: aload         22
697: invokestatic  #47
700: aload         22
702: invokestatic  #48
705: ldc           #49
707: invokestatic  #50
710: aload         23
712: invokestatic  #47
715: aload         23
717: invokestatic  #48
720: ldc           #49
722: invokestatic  #50
725: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test150
Start line: 8062
End line: 8082
Method source code: 
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter13 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        double double15 = levenbergMarquardtOptimizer5.getRMS();
        int int16 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter17 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #479
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #24
85: dup
86: aload_1
87: invokespecial #25
90: astore        6
92: aload_1
93: invokevirtual #53
96: istore        7
98: aload_1
99: invokevirtual #201
102: dstore        8
104: aload_1
105: invokevirtual #53
108: istore        10
110: new           #24
113: dup
114: aload_1
115: invokespecial #25
118: astore        11
120: new           #39
123: dup
124: invokespecial #40
127: ldc           #41
129: invokevirtual #42
132: iload_3
133: invokevirtual #43
136: ldc           #44
138: invokevirtual #42
141: iconst_0
142: invokevirtual #43
145: ldc           #41
147: invokevirtual #42
150: invokevirtual #45
153: iload_3
154: ifne          161
157: iconst_1
158: goto          162
161: iconst_0
162: invokestatic  #46
165: new           #39
168: dup
169: invokespecial #40
172: ldc           #41
174: invokevirtual #42
177: iload         4
179: invokevirtual #43
182: ldc           #44
184: invokevirtual #42
187: iconst_0
188: invokevirtual #43
191: ldc           #41
193: invokevirtual #42
196: invokevirtual #45
199: iload         4
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #46
212: new           #39
215: dup
216: invokespecial #40
219: ldc           #41
221: invokevirtual #42
224: iload         5
226: invokevirtual #43
229: ldc           #44
231: invokevirtual #42
234: iconst_0
235: invokevirtual #43
238: ldc           #41
240: invokevirtual #42
243: invokevirtual #45
246: iload         5
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #46
259: new           #39
262: dup
263: invokespecial #40
266: ldc           #41
268: invokevirtual #42
271: iload         7
273: invokevirtual #43
276: ldc           #44
278: invokevirtual #42
281: iconst_0
282: invokevirtual #43
285: ldc           #41
287: invokevirtual #42
290: invokevirtual #45
293: iload         7
295: ifne          302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #46
306: dload         8
308: invokestatic  #202
311: invokestatic  #203
314: new           #39
317: dup
318: invokespecial #40
321: ldc           #41
323: invokevirtual #42
326: iload         10
328: invokevirtual #43
331: ldc           #44
333: invokevirtual #42
336: iconst_0
337: invokevirtual #43
340: ldc           #41
342: invokevirtual #42
345: invokevirtual #45
348: iload         10
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #46
361: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test151
Start line: 8085
End line: 8128
Method source code: 
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker14 = null;
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker14);
        int int16 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int17 = levenbergMarquardtOptimizer5.getEvaluations();
        int int18 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double19 = levenbergMarquardtOptimizer5.getRMS();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker20 = null;
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker20);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker22 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker31 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer28.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker31);
        int int33 = levenbergMarquardtOptimizer28.getMaxEvaluations();
        int int34 = levenbergMarquardtOptimizer28.getMaxEvaluations();
        int int35 = levenbergMarquardtOptimizer28.getEvaluations();
        int int36 = levenbergMarquardtOptimizer28.getJacobianEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter37 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer28);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker38 = levenbergMarquardtOptimizer28.getConvergenceChecker();
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker38);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNull(vectorialPointValuePairConvergenceChecker22);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #480
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #53
86: istore        7
88: aconst_null
89: astore        8
91: aload_1
92: aload         8
94: invokevirtual #22
97: aload_1
98: invokevirtual #23
101: istore        9
103: aload_1
104: invokevirtual #53
107: istore        10
109: aload_1
110: invokevirtual #23
113: istore        11
115: aload_1
116: invokevirtual #201
119: dstore        12
121: aconst_null
122: astore        14
124: aload_1
125: aload         14
127: invokevirtual #22
130: aload_1
131: invokevirtual #73
134: astore        15
136: new           #8
139: dup
140: ldc2_w        #9
143: ldc2_w        #11
146: ldc2_w        #13
149: dconst_1
150: ldc2_w        #13
153: invokespecial #15
156: astore        16
158: new           #16
161: dup
162: ldc2_w        #17
165: ldc2_w        #19
168: invokespecial #21
171: astore        17
173: aload         16
175: aload         17
177: invokevirtual #22
180: aload         16
182: invokevirtual #23
185: istore        18
187: aload         16
189: invokevirtual #23
192: istore        19
194: aload         16
196: invokevirtual #53
199: istore        20
201: aload         16
203: invokevirtual #160
206: istore        21
208: new           #24
211: dup
212: aload         16
214: invokespecial #25
217: astore        22
219: aload         16
221: invokevirtual #73
224: astore        23
226: aload_1
227: aload         23
229: invokevirtual #22
232: new           #39
235: dup
236: invokespecial #40
239: ldc           #41
241: invokevirtual #42
244: iload_3
245: invokevirtual #43
248: ldc           #44
250: invokevirtual #42
253: iconst_0
254: invokevirtual #43
257: ldc           #41
259: invokevirtual #42
262: invokevirtual #45
265: iload_3
266: ifne          273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #46
277: new           #39
280: dup
281: invokespecial #40
284: ldc           #41
286: invokevirtual #42
289: iload         4
291: invokevirtual #43
294: ldc           #44
296: invokevirtual #42
299: iconst_0
300: invokevirtual #43
303: ldc           #41
305: invokevirtual #42
308: invokevirtual #45
311: iload         4
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #46
324: new           #39
327: dup
328: invokespecial #40
331: ldc           #41
333: invokevirtual #42
336: dload         5
338: invokevirtual #59
341: ldc           #44
343: invokevirtual #42
346: dconst_0
347: invokevirtual #59
350: ldc           #41
352: invokevirtual #42
355: invokevirtual #45
358: dload         5
360: dconst_0
361: dcmpl
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #46
373: new           #39
376: dup
377: invokespecial #40
380: ldc           #41
382: invokevirtual #42
385: iload         7
387: invokevirtual #43
390: ldc           #44
392: invokevirtual #42
395: iconst_0
396: invokevirtual #43
399: ldc           #41
401: invokevirtual #42
404: invokevirtual #45
407: iload         7
409: ifne          416
412: iconst_1
413: goto          417
416: iconst_0
417: invokestatic  #46
420: new           #39
423: dup
424: invokespecial #40
427: ldc           #41
429: invokevirtual #42
432: iload         9
434: invokevirtual #43
437: ldc           #44
439: invokevirtual #42
442: iconst_0
443: invokevirtual #43
446: ldc           #41
448: invokevirtual #42
451: invokevirtual #45
454: iload         9
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #46
467: new           #39
470: dup
471: invokespecial #40
474: ldc           #41
476: invokevirtual #42
479: iload         10
481: invokevirtual #43
484: ldc           #44
486: invokevirtual #42
489: iconst_0
490: invokevirtual #43
493: ldc           #41
495: invokevirtual #42
498: invokevirtual #45
501: iload         10
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #46
514: new           #39
517: dup
518: invokespecial #40
521: ldc           #41
523: invokevirtual #42
526: iload         11
528: invokevirtual #43
531: ldc           #44
533: invokevirtual #42
536: iconst_0
537: invokevirtual #43
540: ldc           #41
542: invokevirtual #42
545: invokevirtual #45
548: iload         11
550: ifne          557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #46
561: dload         12
563: invokestatic  #202
566: invokestatic  #203
569: aload         15
571: invokestatic  #76
574: new           #39
577: dup
578: invokespecial #40
581: ldc           #41
583: invokevirtual #42
586: iload         18
588: invokevirtual #43
591: ldc           #44
593: invokevirtual #42
596: iconst_0
597: invokevirtual #43
600: ldc           #41
602: invokevirtual #42
605: invokevirtual #45
608: iload         18
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #46
621: new           #39
624: dup
625: invokespecial #40
628: ldc           #41
630: invokevirtual #42
633: iload         19
635: invokevirtual #43
638: ldc           #44
640: invokevirtual #42
643: iconst_0
644: invokevirtual #43
647: ldc           #41
649: invokevirtual #42
652: invokevirtual #45
655: iload         19
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #46
668: new           #39
671: dup
672: invokespecial #40
675: ldc           #41
677: invokevirtual #42
680: iload         20
682: invokevirtual #43
685: ldc           #44
687: invokevirtual #42
690: iconst_0
691: invokevirtual #43
694: ldc           #41
696: invokevirtual #42
699: invokevirtual #45
702: iload         20
704: ifne          711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #46
715: new           #39
718: dup
719: invokespecial #40
722: ldc           #41
724: invokevirtual #42
727: iload         21
729: invokevirtual #43
732: ldc           #44
734: invokevirtual #42
737: iconst_0
738: invokevirtual #43
741: ldc           #41
743: invokevirtual #42
746: invokevirtual #45
749: iload         21
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #46
762: aload         23
764: invokestatic  #47
767: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test152
Start line: 8131
End line: 8200
Method source code: 
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction15 = null;
        double[] doubleArray16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = gaussianFitter30.fit(doubleArray37);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray49, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray41);
        double[] doubleArray61 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray62 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray62, true);
        double[] doubleArray65 = vectorialPointValuePair64.getValue();
        double[] doubleArray66 = vectorialPointValuePair64.getValue();
        double[] doubleArray67 = vectorialPointValuePair64.getPoint();
        double[] doubleArray68 = vectorialPointValuePair64.getPointRef();
        double[] doubleArray69 = vectorialPointValuePair64.getValue();
        double[] doubleArray70 = vectorialPointValuePair64.getPointRef();
        double[] doubleArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = levenbergMarquardtOptimizer5.optimize((-48), differentiableMultivariateVectorialFunction15, doubleArray16, doubleArray70, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray65);
        org.junit.Assert.assertNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #481
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: aload_1
83: invokevirtual #160
86: istore        6
88: aconst_null
89: astore        7
91: aconst_null
92: astore        8
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        9
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        10
131: aload         9
133: aload         10
135: invokevirtual #22
138: aload         9
140: invokevirtual #23
143: istore        11
145: aload         9
147: invokevirtual #23
150: istore        12
152: aload         9
154: invokevirtual #53
157: istore        13
159: new           #24
162: dup
163: aload         9
165: invokespecial #25
168: astore        14
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        15
212: aconst_null
213: astore        16
215: new           #33
218: dup
219: aload         15
221: aload         16
223: iconst_1
224: invokespecial #34
227: astore        17
229: aload         14
231: aload         15
233: invokevirtual #54
236: astore        18
238: bipush        6
240: newarray       double
242: dup
243: iconst_0
244: ldc2_w        #27
247: dastore
248: dup
249: iconst_1
250: ldc2_w        #9
253: dastore
254: dup
255: iconst_2
256: ldc2_w        #13
259: dastore
260: dup
261: iconst_3
262: ldc2_w        #29
265: dastore
266: dup
267: iconst_4
268: ldc2_w        #17
271: dastore
272: dup
273: iconst_5
274: ldc2_w        #31
277: dastore
278: astore        19
280: aconst_null
281: astore        20
283: new           #33
286: dup
287: aload         19
289: aload         20
291: iconst_1
292: invokespecial #34
295: astore        21
297: new           #33
300: dup
301: aload         18
303: aload         20
305: iconst_0
306: invokespecial #34
309: astore        22
311: new           #33
314: dup
315: aload         8
317: aload         18
319: invokespecial #109
322: astore        23
324: bipush        6
326: newarray       double
328: dup
329: iconst_0
330: ldc2_w        #27
333: dastore
334: dup
335: iconst_1
336: ldc2_w        #9
339: dastore
340: dup
341: iconst_2
342: ldc2_w        #13
345: dastore
346: dup
347: iconst_3
348: ldc2_w        #29
351: dastore
352: dup
353: iconst_4
354: ldc2_w        #17
357: dastore
358: dup
359: iconst_5
360: ldc2_w        #31
363: dastore
364: astore        24
366: aconst_null
367: astore        25
369: new           #33
372: dup
373: aload         24
375: aload         25
377: iconst_1
378: invokespecial #34
381: astore        26
383: aload         26
385: invokevirtual #74
388: astore        27
390: aload         26
392: invokevirtual #74
395: astore        28
397: aload         26
399: invokevirtual #75
402: astore        29
404: aload         26
406: invokevirtual #151
409: astore        30
411: aload         26
413: invokevirtual #74
416: astore        31
418: aload         26
420: invokevirtual #151
423: astore        32
425: aconst_null
426: astore        33
428: aload_1
429: bipush        -48
431: aload         7
433: aload         8
435: aload         32
437: aload         33
439: invokevirtual #56
442: astore        34
444: ldc           #36
446: invokestatic  #37
449: goto          454
452: astore        34
454: new           #39
457: dup
458: invokespecial #40
461: ldc           #41
463: invokevirtual #42
466: iload_3
467: invokevirtual #43
470: ldc           #44
472: invokevirtual #42
475: iconst_0
476: invokevirtual #43
479: ldc           #41
481: invokevirtual #42
484: invokevirtual #45
487: iload_3
488: ifne          495
491: iconst_1
492: goto          496
495: iconst_0
496: invokestatic  #46
499: new           #39
502: dup
503: invokespecial #40
506: ldc           #41
508: invokevirtual #42
511: iload         4
513: invokevirtual #43
516: ldc           #44
518: invokevirtual #42
521: iconst_0
522: invokevirtual #43
525: ldc           #41
527: invokevirtual #42
530: invokevirtual #45
533: iload         4
535: ifne          542
538: iconst_1
539: goto          543
542: iconst_0
543: invokestatic  #46
546: new           #39
549: dup
550: invokespecial #40
553: ldc           #41
555: invokevirtual #42
558: iload         5
560: invokevirtual #43
563: ldc           #44
565: invokevirtual #42
568: iconst_0
569: invokevirtual #43
572: ldc           #41
574: invokevirtual #42
577: invokevirtual #45
580: iload         5
582: ifne          589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #46
593: new           #39
596: dup
597: invokespecial #40
600: ldc           #41
602: invokevirtual #42
605: iload         6
607: invokevirtual #43
610: ldc           #44
612: invokevirtual #42
615: iconst_0
616: invokevirtual #43
619: ldc           #41
621: invokevirtual #42
624: invokevirtual #45
627: iload         6
629: ifne          636
632: iconst_1
633: goto          637
636: iconst_0
637: invokestatic  #46
640: new           #39
643: dup
644: invokespecial #40
647: ldc           #41
649: invokevirtual #42
652: iload         11
654: invokevirtual #43
657: ldc           #44
659: invokevirtual #42
662: iconst_0
663: invokevirtual #43
666: ldc           #41
668: invokevirtual #42
671: invokevirtual #45
674: iload         11
676: ifne          683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #46
687: new           #39
690: dup
691: invokespecial #40
694: ldc           #41
696: invokevirtual #42
699: iload         12
701: invokevirtual #43
704: ldc           #44
706: invokevirtual #42
709: iconst_0
710: invokevirtual #43
713: ldc           #41
715: invokevirtual #42
718: invokevirtual #45
721: iload         12
723: ifne          730
726: iconst_1
727: goto          731
730: iconst_0
731: invokestatic  #46
734: new           #39
737: dup
738: invokespecial #40
741: ldc           #41
743: invokevirtual #42
746: iload         13
748: invokevirtual #43
751: ldc           #44
753: invokevirtual #42
756: iconst_0
757: invokevirtual #43
760: ldc           #41
762: invokevirtual #42
765: invokevirtual #45
768: iload         13
770: ifne          777
773: iconst_1
774: goto          778
777: iconst_0
778: invokestatic  #46
781: aload         15
783: invokestatic  #47
786: aload         15
788: invokestatic  #48
791: ldc           #49
793: invokestatic  #50
796: aload         18
798: invokestatic  #47
801: aload         18
803: invokestatic  #48
806: ldc           #49
808: invokestatic  #50
811: aload         19
813: invokestatic  #47
816: aload         19
818: invokestatic  #48
821: ldc           #49
823: invokestatic  #50
826: aload         24
828: invokestatic  #47
831: aload         24
833: invokestatic  #48
836: ldc           #49
838: invokestatic  #50
841: aload         27
843: invokestatic  #76
846: aload         28
848: invokestatic  #76
851: aload         29
853: invokestatic  #47
856: aload         29
858: invokestatic  #48
861: ldc           #49
863: invokestatic  #50
866: aload         30
868: invokestatic  #47
871: aload         30
873: invokestatic  #48
876: ldc           #49
878: invokestatic  #50
881: aload         31
883: invokestatic  #76
886: aload         32
888: invokestatic  #47
891: aload         32
893: invokestatic  #48
896: ldc           #49
898: invokestatic  #50
901: return
Exception table:
from    to  target type
428   449   452   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test153
Start line: 8203
End line: 8264
Method source code: 
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        int int14 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter15 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker18 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double19 = simpleVectorialValueChecker18.getRelativeThreshold();
        double double20 = simpleVectorialValueChecker18.getAbsoluteThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker18);
        int int22 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction24 = null;
        double[] doubleArray25 = null;
        double[] doubleArray26 = null;
        double[] doubleArray27 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer33 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker36 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer33.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker36);
        int int38 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int39 = levenbergMarquardtOptimizer33.getMaxEvaluations();
        int int40 = levenbergMarquardtOptimizer33.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter41 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer33);
        double[] doubleArray48 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray49 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray49, true);
        double[] doubleArray52 = gaussianFitter41.fit(doubleArray48);
        double[] doubleArray59 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray60 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray60, true);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray60, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray27, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = levenbergMarquardtOptimizer5.optimize(4, differentiableMultivariateVectorialFunction24, doubleArray25, doubleArray26, doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #482
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #53
86: istore        7
88: aload_1
89: invokevirtual #53
92: istore        8
94: new           #67
97: dup
98: aload_1
99: invokespecial #68
102: astore        9
104: new           #16
107: dup
108: ldc2_w        #17
111: ldc2_w        #19
114: invokespecial #21
117: astore        10
119: aload         10
121: invokevirtual #88
124: dstore        11
126: aload         10
128: invokevirtual #205
131: dstore        13
133: aload_1
134: aload         10
136: invokevirtual #22
139: aload_1
140: invokevirtual #23
143: istore        15
145: aconst_null
146: astore        16
148: aconst_null
149: astore        17
151: aconst_null
152: astore        18
154: aconst_null
155: astore        19
157: new           #8
160: dup
161: ldc2_w        #9
164: ldc2_w        #11
167: ldc2_w        #13
170: dconst_1
171: ldc2_w        #13
174: invokespecial #15
177: astore        20
179: new           #16
182: dup
183: ldc2_w        #17
186: ldc2_w        #19
189: invokespecial #21
192: astore        21
194: aload         20
196: aload         21
198: invokevirtual #22
201: aload         20
203: invokevirtual #23
206: istore        22
208: aload         20
210: invokevirtual #23
213: istore        23
215: aload         20
217: invokevirtual #53
220: istore        24
222: new           #24
225: dup
226: aload         20
228: invokespecial #25
231: astore        25
233: bipush        6
235: newarray       double
237: dup
238: iconst_0
239: ldc2_w        #27
242: dastore
243: dup
244: iconst_1
245: ldc2_w        #9
248: dastore
249: dup
250: iconst_2
251: ldc2_w        #13
254: dastore
255: dup
256: iconst_3
257: ldc2_w        #29
260: dastore
261: dup
262: iconst_4
263: ldc2_w        #17
266: dastore
267: dup
268: iconst_5
269: ldc2_w        #31
272: dastore
273: astore        26
275: aconst_null
276: astore        27
278: new           #33
281: dup
282: aload         26
284: aload         27
286: iconst_1
287: invokespecial #34
290: astore        28
292: aload         25
294: aload         26
296: invokevirtual #54
299: astore        29
301: bipush        6
303: newarray       double
305: dup
306: iconst_0
307: ldc2_w        #27
310: dastore
311: dup
312: iconst_1
313: ldc2_w        #9
316: dastore
317: dup
318: iconst_2
319: ldc2_w        #13
322: dastore
323: dup
324: iconst_3
325: ldc2_w        #29
328: dastore
329: dup
330: iconst_4
331: ldc2_w        #17
334: dastore
335: dup
336: iconst_5
337: ldc2_w        #31
340: dastore
341: astore        30
343: aconst_null
344: astore        31
346: new           #33
349: dup
350: aload         30
352: aload         31
354: iconst_1
355: invokespecial #34
358: astore        32
360: new           #33
363: dup
364: aload         29
366: aload         31
368: iconst_0
369: invokespecial #34
372: astore        33
374: new           #33
377: dup
378: aload         19
380: aload         29
382: invokespecial #109
385: astore        34
387: aload_1
388: iconst_4
389: aload         16
391: aload         17
393: aload         18
395: aload         29
397: invokevirtual #56
400: astore        35
402: ldc           #36
404: invokestatic  #37
407: goto          412
410: astore        35
412: new           #39
415: dup
416: invokespecial #40
419: ldc           #41
421: invokevirtual #42
424: iload_3
425: invokevirtual #43
428: ldc           #44
430: invokevirtual #42
433: iconst_0
434: invokevirtual #43
437: ldc           #41
439: invokevirtual #42
442: invokevirtual #45
445: iload_3
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #46
457: new           #39
460: dup
461: invokespecial #40
464: ldc           #41
466: invokevirtual #42
469: iload         4
471: invokevirtual #43
474: ldc           #44
476: invokevirtual #42
479: iconst_0
480: invokevirtual #43
483: ldc           #41
485: invokevirtual #42
488: invokevirtual #45
491: iload         4
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #46
504: new           #39
507: dup
508: invokespecial #40
511: ldc           #41
513: invokevirtual #42
516: dload         5
518: invokevirtual #59
521: ldc           #44
523: invokevirtual #42
526: dconst_0
527: invokevirtual #59
530: ldc           #41
532: invokevirtual #42
535: invokevirtual #45
538: dload         5
540: dconst_0
541: dcmpl
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #46
553: new           #39
556: dup
557: invokespecial #40
560: ldc           #41
562: invokevirtual #42
565: iload         7
567: invokevirtual #43
570: ldc           #44
572: invokevirtual #42
575: iconst_0
576: invokevirtual #43
579: ldc           #41
581: invokevirtual #42
584: invokevirtual #45
587: iload         7
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #46
600: new           #39
603: dup
604: invokespecial #40
607: ldc           #41
609: invokevirtual #42
612: iload         8
614: invokevirtual #43
617: ldc           #44
619: invokevirtual #42
622: iconst_0
623: invokevirtual #43
626: ldc           #41
628: invokevirtual #42
631: invokevirtual #45
634: iload         8
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #46
647: new           #39
650: dup
651: invokespecial #40
654: ldc           #41
656: invokevirtual #42
659: dload         11
661: invokevirtual #59
664: ldc           #44
666: invokevirtual #42
669: ldc2_w        #17
672: invokevirtual #59
675: ldc           #41
677: invokevirtual #42
680: invokevirtual #45
683: dload         11
685: ldc2_w        #17
688: dcmpl
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #46
700: new           #39
703: dup
704: invokespecial #40
707: ldc           #41
709: invokevirtual #42
712: dload         13
714: invokevirtual #59
717: ldc           #44
719: invokevirtual #42
722: ldc2_w        #19
725: invokevirtual #59
728: ldc           #41
730: invokevirtual #42
733: invokevirtual #45
736: dload         13
738: ldc2_w        #19
741: dcmpl
742: ifne          749
745: iconst_1
746: goto          750
749: iconst_0
750: invokestatic  #46
753: new           #39
756: dup
757: invokespecial #40
760: ldc           #41
762: invokevirtual #42
765: iload         15
767: invokevirtual #43
770: ldc           #44
772: invokevirtual #42
775: iconst_0
776: invokevirtual #43
779: ldc           #41
781: invokevirtual #42
784: invokevirtual #45
787: iload         15
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #46
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         22
814: invokevirtual #43
817: ldc           #44
819: invokevirtual #42
822: iconst_0
823: invokevirtual #43
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         22
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #46
847: new           #39
850: dup
851: invokespecial #40
854: ldc           #41
856: invokevirtual #42
859: iload         23
861: invokevirtual #43
864: ldc           #44
866: invokevirtual #42
869: iconst_0
870: invokevirtual #43
873: ldc           #41
875: invokevirtual #42
878: invokevirtual #45
881: iload         23
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #46
894: new           #39
897: dup
898: invokespecial #40
901: ldc           #41
903: invokevirtual #42
906: iload         24
908: invokevirtual #43
911: ldc           #44
913: invokevirtual #42
916: iconst_0
917: invokevirtual #43
920: ldc           #41
922: invokevirtual #42
925: invokevirtual #45
928: iload         24
930: ifne          937
933: iconst_1
934: goto          938
937: iconst_0
938: invokestatic  #46
941: aload         26
943: invokestatic  #47
946: aload         26
948: invokestatic  #48
951: ldc           #49
953: invokestatic  #50
956: aload         29
958: invokestatic  #47
961: aload         29
963: invokestatic  #48
966: ldc           #49
968: invokestatic  #50
971: aload         30
973: invokestatic  #47
976: aload         30
978: invokestatic  #48
981: ldc           #49
983: invokestatic  #50
986: return
Exception table:
from    to  target type
387   407   410   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test154
Start line: 8267
End line: 8282
Method source code: 
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        int int14 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #483
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload_1
87: invokevirtual #160
90: istore        6
92: aload_1
93: invokevirtual #23
96: istore        7
98: new           #39
101: dup
102: invokespecial #40
105: ldc           #41
107: invokevirtual #42
110: iload_3
111: invokevirtual #43
114: ldc           #44
116: invokevirtual #42
119: iconst_0
120: invokevirtual #43
123: ldc           #41
125: invokevirtual #42
128: invokevirtual #45
131: iload_3
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #46
143: new           #39
146: dup
147: invokespecial #40
150: ldc           #41
152: invokevirtual #42
155: iload         4
157: invokevirtual #43
160: ldc           #44
162: invokevirtual #42
165: iconst_0
166: invokevirtual #43
169: ldc           #41
171: invokevirtual #42
174: invokevirtual #45
177: iload         4
179: ifne          186
182: iconst_1
183: goto          187
186: iconst_0
187: invokestatic  #46
190: new           #39
193: dup
194: invokespecial #40
197: ldc           #41
199: invokevirtual #42
202: iload         6
204: invokevirtual #43
207: ldc           #44
209: invokevirtual #42
212: iconst_0
213: invokevirtual #43
216: ldc           #41
218: invokevirtual #42
221: invokevirtual #45
224: iload         6
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #46
237: new           #39
240: dup
241: invokespecial #40
244: ldc           #41
246: invokevirtual #42
249: iload         7
251: invokevirtual #43
254: ldc           #44
256: invokevirtual #42
259: iconst_0
260: invokevirtual #43
263: ldc           #41
265: invokevirtual #42
268: invokevirtual #45
271: iload         7
273: ifne          280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #46
284: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test155
Start line: 8285
End line: 8294
Method source code: 
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter2 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer0);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker3);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #484
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #485
32: astore_1
33: aload_1
34: invokevirtual #23
37: istore_2
38: new           #24
41: dup
42: aload_1
43: invokespecial #25
46: astore_3
47: aload_1
48: invokevirtual #73
51: astore        4
53: new           #39
56: dup
57: invokespecial #40
60: ldc           #41
62: invokevirtual #42
65: iload_2
66: invokevirtual #43
69: ldc           #44
71: invokevirtual #42
74: iconst_0
75: invokevirtual #43
78: ldc           #41
80: invokevirtual #42
83: invokevirtual #45
86: iload_2
87: ifne          94
90: iconst_1
91: goto          95
94: iconst_0
95: invokestatic  #46
98: aload         4
100: invokestatic  #47
103: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test156
Start line: 8297
End line: 8338
Method source code: 
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.apache.commons.math.exception.util.LocalizedFormats localizedFormats0 = org.apache.commons.math.exception.util.LocalizedFormats.SIGNIFICANCE_LEVEL;
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer9 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker12 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer9.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker12);
        int int14 = levenbergMarquardtOptimizer9.getMaxEvaluations();
        int int15 = levenbergMarquardtOptimizer9.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter16 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer9);
        gaussianFitter16.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction18 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker27 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer24.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker27);
        int int29 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int30 = levenbergMarquardtOptimizer24.getMaxEvaluations();
        int int31 = levenbergMarquardtOptimizer24.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter32 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer24);
        double[] doubleArray39 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray40 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray40, true);
        double[] doubleArray43 = gaussianFitter32.fit(doubleArray39);
        double[] doubleArray44 = gaussianFitter16.fit(parametricUnivariateRealFunction18, doubleArray43);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray45 = gaussianFitter16.getObservations();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException(throwable2, "", (java.lang.Object[]) weightedObservedPointArray45);
        org.apache.commons.math.exception.MaxCountExceededException maxCountExceededException47 = new org.apache.commons.math.exception.MaxCountExceededException((org.apache.commons.math.exception.util.Localizable) localizedFormats0, (java.lang.Number) 1.6331239353195368E16d, (java.lang.Object[]) weightedObservedPointArray45);
        org.junit.Assert.assertTrue("'" + localizedFormats0 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIGNIFICANCE_LEVEL + "'", localizedFormats0.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIGNIFICANCE_LEVEL));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #486
20: aastore
21: invokevirtual #7
24: pop
25: getstatic     #487
28: astore_1
29: aconst_null
30: astore_2
31: new           #8
34: dup
35: ldc2_w        #9
38: ldc2_w        #11
41: ldc2_w        #13
44: dconst_1
45: ldc2_w        #13
48: invokespecial #15
51: astore_3
52: new           #16
55: dup
56: ldc2_w        #17
59: ldc2_w        #19
62: invokespecial #21
65: astore        4
67: aload_3
68: aload         4
70: invokevirtual #22
73: aload_3
74: invokevirtual #23
77: istore        5
79: aload_3
80: invokevirtual #23
83: istore        6
85: new           #24
88: dup
89: aload_3
90: invokespecial #25
93: astore        7
95: aload         7
97: invokevirtual #52
100: aconst_null
101: astore        8
103: new           #8
106: dup
107: ldc2_w        #9
110: ldc2_w        #11
113: ldc2_w        #13
116: dconst_1
117: ldc2_w        #13
120: invokespecial #15
123: astore        9
125: new           #16
128: dup
129: ldc2_w        #17
132: ldc2_w        #19
135: invokespecial #21
138: astore        10
140: aload         9
142: aload         10
144: invokevirtual #22
147: aload         9
149: invokevirtual #23
152: istore        11
154: aload         9
156: invokevirtual #23
159: istore        12
161: aload         9
163: invokevirtual #53
166: istore        13
168: new           #24
171: dup
172: aload         9
174: invokespecial #25
177: astore        14
179: bipush        6
181: newarray       double
183: dup
184: iconst_0
185: ldc2_w        #27
188: dastore
189: dup
190: iconst_1
191: ldc2_w        #9
194: dastore
195: dup
196: iconst_2
197: ldc2_w        #13
200: dastore
201: dup
202: iconst_3
203: ldc2_w        #29
206: dastore
207: dup
208: iconst_4
209: ldc2_w        #17
212: dastore
213: dup
214: iconst_5
215: ldc2_w        #31
218: dastore
219: astore        15
221: aconst_null
222: astore        16
224: new           #33
227: dup
228: aload         15
230: aload         16
232: iconst_1
233: invokespecial #34
236: astore        17
238: aload         14
240: aload         15
242: invokevirtual #54
245: astore        18
247: aload         7
249: aload         8
251: aload         18
253: invokevirtual #55
256: astore        19
258: aload         7
260: invokevirtual #62
263: astore        20
265: new           #295
268: dup
269: aload_2
270: ldc_w         #293
273: aload         20
275: checkcast     #319
278: invokespecial #307
281: astore        21
283: new           #423
286: dup
287: aload_1
288: ldc2_w        #488
291: invokestatic  #426
294: aload         20
296: checkcast     #319
299: invokespecial #427
302: astore        22
304: new           #39
307: dup
308: invokespecial #40
311: ldc           #41
313: invokevirtual #42
316: aload_1
317: invokevirtual #324
320: ldc           #44
322: invokevirtual #42
325: getstatic     #487
328: invokevirtual #324
331: ldc           #41
333: invokevirtual #42
336: invokevirtual #45
339: aload_1
340: getstatic     #487
343: invokevirtual #325
346: invokestatic  #46
349: new           #39
352: dup
353: invokespecial #40
356: ldc           #41
358: invokevirtual #42
361: iload         5
363: invokevirtual #43
366: ldc           #44
368: invokevirtual #42
371: iconst_0
372: invokevirtual #43
375: ldc           #41
377: invokevirtual #42
380: invokevirtual #45
383: iload         5
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #46
396: new           #39
399: dup
400: invokespecial #40
403: ldc           #41
405: invokevirtual #42
408: iload         6
410: invokevirtual #43
413: ldc           #44
415: invokevirtual #42
418: iconst_0
419: invokevirtual #43
422: ldc           #41
424: invokevirtual #42
427: invokevirtual #45
430: iload         6
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #46
443: new           #39
446: dup
447: invokespecial #40
450: ldc           #41
452: invokevirtual #42
455: iload         11
457: invokevirtual #43
460: ldc           #44
462: invokevirtual #42
465: iconst_0
466: invokevirtual #43
469: ldc           #41
471: invokevirtual #42
474: invokevirtual #45
477: iload         11
479: ifne          486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #46
490: new           #39
493: dup
494: invokespecial #40
497: ldc           #41
499: invokevirtual #42
502: iload         12
504: invokevirtual #43
507: ldc           #44
509: invokevirtual #42
512: iconst_0
513: invokevirtual #43
516: ldc           #41
518: invokevirtual #42
521: invokevirtual #45
524: iload         12
526: ifne          533
529: iconst_1
530: goto          534
533: iconst_0
534: invokestatic  #46
537: new           #39
540: dup
541: invokespecial #40
544: ldc           #41
546: invokevirtual #42
549: iload         13
551: invokevirtual #43
554: ldc           #44
556: invokevirtual #42
559: iconst_0
560: invokevirtual #43
563: ldc           #41
565: invokevirtual #42
568: invokevirtual #45
571: iload         13
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #46
584: aload         15
586: invokestatic  #47
589: aload         15
591: invokestatic  #48
594: ldc           #49
596: invokestatic  #50
599: aload         18
601: invokestatic  #47
604: aload         18
606: invokestatic  #48
609: ldc           #49
611: invokestatic  #50
614: aload         19
616: invokestatic  #47
619: aload         19
621: invokestatic  #48
624: ldc           #49
626: invokestatic  #50
629: aload         20
631: invokestatic  #47
634: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test157
Start line: 8341
End line: 8389
Method source code: 
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        double[] doubleArray41 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray41);
        double[] doubleArray43 = vectorialPointValuePair42.getPointRef();
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray51, true);
        double[] doubleArray56 = vectorialPointValuePair55.getValue();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #490
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #67
85: dup
86: aload_1
87: invokespecial #68
90: astore        6
92: aconst_null
93: astore        7
95: new           #8
98: dup
99: ldc2_w        #9
102: ldc2_w        #11
105: ldc2_w        #13
108: dconst_1
109: ldc2_w        #13
112: invokespecial #15
115: astore        8
117: new           #16
120: dup
121: ldc2_w        #17
124: ldc2_w        #19
127: invokespecial #21
130: astore        9
132: aload         8
134: aload         9
136: invokevirtual #22
139: aload         8
141: invokevirtual #23
144: istore        10
146: aload         8
148: invokevirtual #23
151: istore        11
153: aload         8
155: invokevirtual #53
158: istore        12
160: new           #24
163: dup
164: aload         8
166: invokespecial #25
169: astore        13
171: bipush        6
173: newarray       double
175: dup
176: iconst_0
177: ldc2_w        #27
180: dastore
181: dup
182: iconst_1
183: ldc2_w        #9
186: dastore
187: dup
188: iconst_2
189: ldc2_w        #13
192: dastore
193: dup
194: iconst_3
195: ldc2_w        #29
198: dastore
199: dup
200: iconst_4
201: ldc2_w        #17
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #31
210: dastore
211: astore        14
213: aconst_null
214: astore        15
216: new           #33
219: dup
220: aload         14
222: aload         15
224: iconst_1
225: invokespecial #34
228: astore        16
230: aload         13
232: aload         14
234: invokevirtual #54
237: astore        17
239: aload         6
241: aload         7
243: aload         14
245: invokevirtual #89
248: astore        18
250: aconst_null
251: astore        19
253: new           #33
256: dup
257: aload         14
259: aload         19
261: invokespecial #109
264: astore        20
266: aload         20
268: invokevirtual #151
271: astore        21
273: bipush        6
275: newarray       double
277: dup
278: iconst_0
279: ldc2_w        #27
282: dastore
283: dup
284: iconst_1
285: ldc2_w        #9
288: dastore
289: dup
290: iconst_2
291: ldc2_w        #13
294: dastore
295: dup
296: iconst_3
297: ldc2_w        #29
300: dastore
301: dup
302: iconst_4
303: ldc2_w        #17
306: dastore
307: dup
308: iconst_5
309: ldc2_w        #31
312: dastore
313: astore        22
315: aconst_null
316: astore        23
318: new           #33
321: dup
322: aload         22
324: aload         23
326: iconst_1
327: invokespecial #34
330: astore        24
332: new           #33
335: dup
336: aload         21
338: aload         23
340: iconst_1
341: invokespecial #34
344: astore        25
346: aload         25
348: invokevirtual #74
351: astore        26
353: new           #39
356: dup
357: invokespecial #40
360: ldc           #41
362: invokevirtual #42
365: iload_3
366: invokevirtual #43
369: ldc           #44
371: invokevirtual #42
374: iconst_0
375: invokevirtual #43
378: ldc           #41
380: invokevirtual #42
383: invokevirtual #45
386: iload_3
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #46
398: new           #39
401: dup
402: invokespecial #40
405: ldc           #41
407: invokevirtual #42
410: iload         4
412: invokevirtual #43
415: ldc           #44
417: invokevirtual #42
420: iconst_0
421: invokevirtual #43
424: ldc           #41
426: invokevirtual #42
429: invokevirtual #45
432: iload         4
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #46
445: new           #39
448: dup
449: invokespecial #40
452: ldc           #41
454: invokevirtual #42
457: iload         5
459: invokevirtual #43
462: ldc           #44
464: invokevirtual #42
467: iconst_0
468: invokevirtual #43
471: ldc           #41
473: invokevirtual #42
476: invokevirtual #45
479: iload         5
481: ifne          488
484: iconst_1
485: goto          489
488: iconst_0
489: invokestatic  #46
492: new           #39
495: dup
496: invokespecial #40
499: ldc           #41
501: invokevirtual #42
504: iload         10
506: invokevirtual #43
509: ldc           #44
511: invokevirtual #42
514: iconst_0
515: invokevirtual #43
518: ldc           #41
520: invokevirtual #42
523: invokevirtual #45
526: iload         10
528: ifne          535
531: iconst_1
532: goto          536
535: iconst_0
536: invokestatic  #46
539: new           #39
542: dup
543: invokespecial #40
546: ldc           #41
548: invokevirtual #42
551: iload         11
553: invokevirtual #43
556: ldc           #44
558: invokevirtual #42
561: iconst_0
562: invokevirtual #43
565: ldc           #41
567: invokevirtual #42
570: invokevirtual #45
573: iload         11
575: ifne          582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #46
586: new           #39
589: dup
590: invokespecial #40
593: ldc           #41
595: invokevirtual #42
598: iload         12
600: invokevirtual #43
603: ldc           #44
605: invokevirtual #42
608: iconst_0
609: invokevirtual #43
612: ldc           #41
614: invokevirtual #42
617: invokevirtual #45
620: iload         12
622: ifne          629
625: iconst_1
626: goto          630
629: iconst_0
630: invokestatic  #46
633: aload         14
635: invokestatic  #47
638: aload         14
640: invokestatic  #48
643: ldc           #49
645: invokestatic  #50
648: aload         17
650: invokestatic  #47
653: aload         17
655: invokestatic  #48
658: ldc           #49
660: invokestatic  #50
663: aload         18
665: invokestatic  #47
668: aload         18
670: invokestatic  #48
673: ldc           #49
675: invokestatic  #50
678: aload         21
680: invokestatic  #47
683: aload         21
685: invokestatic  #48
688: ldc           #49
690: invokestatic  #50
693: aload         22
695: invokestatic  #47
698: aload         22
700: invokestatic  #48
703: ldc           #49
705: invokestatic  #50
708: aload         26
710: invokestatic  #76
713: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test158
Start line: 8392
End line: 8431
Method source code: 
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric15 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = curveFitter14.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric15, doubleArray40);
        curveFitter14.addObservedPoint(1.326399907450038d, 9.950752910635758E22d);
        curveFitter14.clearObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #491
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #67
91: dup
92: aload_1
93: invokespecial #68
96: astore        8
98: new           #117
101: dup
102: invokespecial #118
105: astore        9
107: new           #8
110: dup
111: ldc2_w        #9
114: ldc2_w        #11
117: ldc2_w        #13
120: dconst_1
121: ldc2_w        #13
124: invokespecial #15
127: astore        10
129: new           #16
132: dup
133: ldc2_w        #17
136: ldc2_w        #19
139: invokespecial #21
142: astore        11
144: aload         10
146: aload         11
148: invokevirtual #22
151: aload         10
153: invokevirtual #23
156: istore        12
158: aload         10
160: invokevirtual #23
163: istore        13
165: aload         10
167: invokevirtual #53
170: istore        14
172: new           #24
175: dup
176: aload         10
178: invokespecial #25
181: astore        15
183: bipush        6
185: newarray       double
187: dup
188: iconst_0
189: ldc2_w        #27
192: dastore
193: dup
194: iconst_1
195: ldc2_w        #9
198: dastore
199: dup
200: iconst_2
201: ldc2_w        #13
204: dastore
205: dup
206: iconst_3
207: ldc2_w        #29
210: dastore
211: dup
212: iconst_4
213: ldc2_w        #17
216: dastore
217: dup
218: iconst_5
219: ldc2_w        #31
222: dastore
223: astore        16
225: aconst_null
226: astore        17
228: new           #33
231: dup
232: aload         16
234: aload         17
236: iconst_1
237: invokespecial #34
240: astore        18
242: aload         15
244: aload         16
246: invokevirtual #54
249: astore        19
251: aload         8
253: aload         9
255: aload         19
257: invokevirtual #89
260: astore        20
262: aload         8
264: ldc2_w        #492
267: ldc2_w        #494
270: invokevirtual #496
273: aload         8
275: invokevirtual #114
278: new           #39
281: dup
282: invokespecial #40
285: ldc           #41
287: invokevirtual #42
290: iload_3
291: invokevirtual #43
294: ldc           #44
296: invokevirtual #42
299: iconst_0
300: invokevirtual #43
303: ldc           #41
305: invokevirtual #42
308: invokevirtual #45
311: iload_3
312: ifne          319
315: iconst_1
316: goto          320
319: iconst_0
320: invokestatic  #46
323: new           #39
326: dup
327: invokespecial #40
330: ldc           #41
332: invokevirtual #42
335: iload         4
337: invokevirtual #43
340: ldc           #44
342: invokevirtual #42
345: iconst_0
346: invokevirtual #43
349: ldc           #41
351: invokevirtual #42
354: invokevirtual #45
357: iload         4
359: ifne          366
362: iconst_1
363: goto          367
366: iconst_0
367: invokestatic  #46
370: new           #39
373: dup
374: invokespecial #40
377: ldc           #41
379: invokevirtual #42
382: dload         5
384: invokevirtual #59
387: ldc           #44
389: invokevirtual #42
392: dconst_0
393: invokevirtual #59
396: ldc           #41
398: invokevirtual #42
401: invokevirtual #45
404: dload         5
406: dconst_0
407: dcmpl
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #46
419: new           #39
422: dup
423: invokespecial #40
426: ldc           #41
428: invokevirtual #42
431: iload         7
433: invokevirtual #43
436: ldc           #44
438: invokevirtual #42
441: iconst_0
442: invokevirtual #43
445: ldc           #41
447: invokevirtual #42
450: invokevirtual #45
453: iload         7
455: ifne          462
458: iconst_1
459: goto          463
462: iconst_0
463: invokestatic  #46
466: new           #39
469: dup
470: invokespecial #40
473: ldc           #41
475: invokevirtual #42
478: iload         12
480: invokevirtual #43
483: ldc           #44
485: invokevirtual #42
488: iconst_0
489: invokevirtual #43
492: ldc           #41
494: invokevirtual #42
497: invokevirtual #45
500: iload         12
502: ifne          509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #46
513: new           #39
516: dup
517: invokespecial #40
520: ldc           #41
522: invokevirtual #42
525: iload         13
527: invokevirtual #43
530: ldc           #44
532: invokevirtual #42
535: iconst_0
536: invokevirtual #43
539: ldc           #41
541: invokevirtual #42
544: invokevirtual #45
547: iload         13
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #46
560: new           #39
563: dup
564: invokespecial #40
567: ldc           #41
569: invokevirtual #42
572: iload         14
574: invokevirtual #43
577: ldc           #44
579: invokevirtual #42
582: iconst_0
583: invokevirtual #43
586: ldc           #41
588: invokevirtual #42
591: invokevirtual #45
594: iload         14
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #46
607: aload         16
609: invokestatic  #47
612: aload         16
614: invokestatic  #48
617: ldc           #49
619: invokestatic  #50
622: aload         19
624: invokestatic  #47
627: aload         19
629: invokestatic  #48
632: ldc           #49
634: invokestatic  #50
637: aload         20
639: invokestatic  #47
642: aload         20
644: invokestatic  #48
647: ldc           #49
649: invokestatic  #50
652: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test159
Start line: 8434
End line: 8504
Method source code: 
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer19 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker22 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer19.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker22);
        int int24 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        int int25 = levenbergMarquardtOptimizer19.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter26 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer19);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer32 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker35 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer32.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker35);
        int int37 = levenbergMarquardtOptimizer32.getMaxEvaluations();
        int int38 = levenbergMarquardtOptimizer32.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter39 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer32);
        gaussianFitter39.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction41 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer47 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker50 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer47.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker50);
        int int52 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer47.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter55 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer47);
        double[] doubleArray62 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray63 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray63, true);
        double[] doubleArray66 = gaussianFitter55.fit(doubleArray62);
        double[] doubleArray67 = gaussianFitter39.fit(parametricUnivariateRealFunction41, doubleArray66);
        double[] doubleArray68 = gaussianFitter26.fit(doubleArray66);
        gaussianFitter26.clearObservations();
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint73 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint(0.0d, 4.9E-324d, 57.29577951308232d);
        double double74 = weightedObservedPoint73.getWeight();
        double double75 = weightedObservedPoint73.getWeight();
        double double76 = weightedObservedPoint73.getY();
        double double77 = weightedObservedPoint73.getY();
        double double78 = weightedObservedPoint73.getWeight();
        double double79 = weightedObservedPoint73.getWeight();
        gaussianFitter26.addObservedPoint(weightedObservedPoint73);
        gaussianFitter12.addObservedPoint(weightedObservedPoint73);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 57.29577951308232d + "'", double76 == 57.29577951308232d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 57.29577951308232d + "'", double77 == 57.29577951308232d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #497
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #52
91: new           #8
94: dup
95: ldc2_w        #9
98: ldc2_w        #11
101: ldc2_w        #13
104: dconst_1
105: ldc2_w        #13
108: invokespecial #15
111: astore        6
113: new           #16
116: dup
117: ldc2_w        #17
120: ldc2_w        #19
123: invokespecial #21
126: astore        7
128: aload         6
130: aload         7
132: invokevirtual #22
135: aload         6
137: invokevirtual #23
140: istore        8
142: aload         6
144: invokevirtual #23
147: istore        9
149: new           #24
152: dup
153: aload         6
155: invokespecial #25
158: astore        10
160: new           #8
163: dup
164: ldc2_w        #9
167: ldc2_w        #11
170: ldc2_w        #13
173: dconst_1
174: ldc2_w        #13
177: invokespecial #15
180: astore        11
182: new           #16
185: dup
186: ldc2_w        #17
189: ldc2_w        #19
192: invokespecial #21
195: astore        12
197: aload         11
199: aload         12
201: invokevirtual #22
204: aload         11
206: invokevirtual #23
209: istore        13
211: aload         11
213: invokevirtual #23
216: istore        14
218: new           #24
221: dup
222: aload         11
224: invokespecial #25
227: astore        15
229: aload         15
231: invokevirtual #52
234: aconst_null
235: astore        16
237: new           #8
240: dup
241: ldc2_w        #9
244: ldc2_w        #11
247: ldc2_w        #13
250: dconst_1
251: ldc2_w        #13
254: invokespecial #15
257: astore        17
259: new           #16
262: dup
263: ldc2_w        #17
266: ldc2_w        #19
269: invokespecial #21
272: astore        18
274: aload         17
276: aload         18
278: invokevirtual #22
281: aload         17
283: invokevirtual #23
286: istore        19
288: aload         17
290: invokevirtual #23
293: istore        20
295: aload         17
297: invokevirtual #53
300: istore        21
302: new           #24
305: dup
306: aload         17
308: invokespecial #25
311: astore        22
313: bipush        6
315: newarray       double
317: dup
318: iconst_0
319: ldc2_w        #27
322: dastore
323: dup
324: iconst_1
325: ldc2_w        #9
328: dastore
329: dup
330: iconst_2
331: ldc2_w        #13
334: dastore
335: dup
336: iconst_3
337: ldc2_w        #29
340: dastore
341: dup
342: iconst_4
343: ldc2_w        #17
346: dastore
347: dup
348: iconst_5
349: ldc2_w        #31
352: dastore
353: astore        23
355: aconst_null
356: astore        24
358: new           #33
361: dup
362: aload         23
364: aload         24
366: iconst_1
367: invokespecial #34
370: astore        25
372: aload         22
374: aload         23
376: invokevirtual #54
379: astore        26
381: aload         15
383: aload         16
385: aload         26
387: invokevirtual #55
390: astore        27
392: aload         10
394: aload         26
396: invokevirtual #54
399: astore        28
401: aload         10
403: invokevirtual #52
406: new           #217
409: dup
410: dconst_0
411: ldc2_w        #218
414: ldc2_w        #220
417: invokespecial #222
420: astore        29
422: aload         29
424: invokevirtual #223
427: dstore        30
429: aload         29
431: invokevirtual #223
434: dstore        32
436: aload         29
438: invokevirtual #231
441: dstore        34
443: aload         29
445: invokevirtual #231
448: dstore        36
450: aload         29
452: invokevirtual #223
455: dstore        38
457: aload         29
459: invokevirtual #223
462: dstore        40
464: aload         10
466: aload         29
468: invokevirtual #174
471: aload         5
473: aload         29
475: invokevirtual #174
478: new           #39
481: dup
482: invokespecial #40
485: ldc           #41
487: invokevirtual #42
490: iload_3
491: invokevirtual #43
494: ldc           #44
496: invokevirtual #42
499: iconst_0
500: invokevirtual #43
503: ldc           #41
505: invokevirtual #42
508: invokevirtual #45
511: iload_3
512: ifne          519
515: iconst_1
516: goto          520
519: iconst_0
520: invokestatic  #46
523: new           #39
526: dup
527: invokespecial #40
530: ldc           #41
532: invokevirtual #42
535: iload         4
537: invokevirtual #43
540: ldc           #44
542: invokevirtual #42
545: iconst_0
546: invokevirtual #43
549: ldc           #41
551: invokevirtual #42
554: invokevirtual #45
557: iload         4
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #46
570: new           #39
573: dup
574: invokespecial #40
577: ldc           #41
579: invokevirtual #42
582: iload         8
584: invokevirtual #43
587: ldc           #44
589: invokevirtual #42
592: iconst_0
593: invokevirtual #43
596: ldc           #41
598: invokevirtual #42
601: invokevirtual #45
604: iload         8
606: ifne          613
609: iconst_1
610: goto          614
613: iconst_0
614: invokestatic  #46
617: new           #39
620: dup
621: invokespecial #40
624: ldc           #41
626: invokevirtual #42
629: iload         9
631: invokevirtual #43
634: ldc           #44
636: invokevirtual #42
639: iconst_0
640: invokevirtual #43
643: ldc           #41
645: invokevirtual #42
648: invokevirtual #45
651: iload         9
653: ifne          660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #46
664: new           #39
667: dup
668: invokespecial #40
671: ldc           #41
673: invokevirtual #42
676: iload         13
678: invokevirtual #43
681: ldc           #44
683: invokevirtual #42
686: iconst_0
687: invokevirtual #43
690: ldc           #41
692: invokevirtual #42
695: invokevirtual #45
698: iload         13
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #46
711: new           #39
714: dup
715: invokespecial #40
718: ldc           #41
720: invokevirtual #42
723: iload         14
725: invokevirtual #43
728: ldc           #44
730: invokevirtual #42
733: iconst_0
734: invokevirtual #43
737: ldc           #41
739: invokevirtual #42
742: invokevirtual #45
745: iload         14
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #46
758: new           #39
761: dup
762: invokespecial #40
765: ldc           #41
767: invokevirtual #42
770: iload         19
772: invokevirtual #43
775: ldc           #44
777: invokevirtual #42
780: iconst_0
781: invokevirtual #43
784: ldc           #41
786: invokevirtual #42
789: invokevirtual #45
792: iload         19
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #46
805: new           #39
808: dup
809: invokespecial #40
812: ldc           #41
814: invokevirtual #42
817: iload         20
819: invokevirtual #43
822: ldc           #44
824: invokevirtual #42
827: iconst_0
828: invokevirtual #43
831: ldc           #41
833: invokevirtual #42
836: invokevirtual #45
839: iload         20
841: ifne          848
844: iconst_1
845: goto          849
848: iconst_0
849: invokestatic  #46
852: new           #39
855: dup
856: invokespecial #40
859: ldc           #41
861: invokevirtual #42
864: iload         21
866: invokevirtual #43
869: ldc           #44
871: invokevirtual #42
874: iconst_0
875: invokevirtual #43
878: ldc           #41
880: invokevirtual #42
883: invokevirtual #45
886: iload         21
888: ifne          895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #46
899: aload         23
901: invokestatic  #47
904: aload         23
906: invokestatic  #48
909: ldc           #49
911: invokestatic  #50
914: aload         26
916: invokestatic  #47
919: aload         26
921: invokestatic  #48
924: ldc           #49
926: invokestatic  #50
929: aload         27
931: invokestatic  #47
934: aload         27
936: invokestatic  #48
939: ldc           #49
941: invokestatic  #50
944: aload         28
946: invokestatic  #47
949: aload         28
951: invokestatic  #48
954: ldc           #49
956: invokestatic  #50
959: new           #39
962: dup
963: invokespecial #40
966: ldc           #41
968: invokevirtual #42
971: dload         30
973: invokevirtual #59
976: ldc           #44
978: invokevirtual #42
981: dconst_0
982: invokevirtual #59
985: ldc           #41
987: invokevirtual #42
990: invokevirtual #45
993: dload         30
995: dconst_0
996: dcmpl
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #46
1008: new           #39
1011: dup
1012: invokespecial #40
1015: ldc           #41
1017: invokevirtual #42
1020: dload         32
1022: invokevirtual #59
1025: ldc           #44
1027: invokevirtual #42
1030: dconst_0
1031: invokevirtual #59
1034: ldc           #41
1036: invokevirtual #42
1039: invokevirtual #45
1042: dload         32
1044: dconst_0
1045: dcmpl
1046: ifne          1053
1049: iconst_1
1050: goto          1054
1053: iconst_0
1054: invokestatic  #46
1057: new           #39
1060: dup
1061: invokespecial #40
1064: ldc           #41
1066: invokevirtual #42
1069: dload         34
1071: invokevirtual #59
1074: ldc           #44
1076: invokevirtual #42
1079: ldc2_w        #220
1082: invokevirtual #59
1085: ldc           #41
1087: invokevirtual #42
1090: invokevirtual #45
1093: dload         34
1095: ldc2_w        #220
1098: dcmpl
1099: ifne          1106
1102: iconst_1
1103: goto          1107
1106: iconst_0
1107: invokestatic  #46
1110: new           #39
1113: dup
1114: invokespecial #40
1117: ldc           #41
1119: invokevirtual #42
1122: dload         36
1124: invokevirtual #59
1127: ldc           #44
1129: invokevirtual #42
1132: ldc2_w        #220
1135: invokevirtual #59
1138: ldc           #41
1140: invokevirtual #42
1143: invokevirtual #45
1146: dload         36
1148: ldc2_w        #220
1151: dcmpl
1152: ifne          1159
1155: iconst_1
1156: goto          1160
1159: iconst_0
1160: invokestatic  #46
1163: new           #39
1166: dup
1167: invokespecial #40
1170: ldc           #41
1172: invokevirtual #42
1175: dload         38
1177: invokevirtual #59
1180: ldc           #44
1182: invokevirtual #42
1185: dconst_0
1186: invokevirtual #59
1189: ldc           #41
1191: invokevirtual #42
1194: invokevirtual #45
1197: dload         38
1199: dconst_0
1200: dcmpl
1201: ifne          1208
1204: iconst_1
1205: goto          1209
1208: iconst_0
1209: invokestatic  #46
1212: new           #39
1215: dup
1216: invokespecial #40
1219: ldc           #41
1221: invokevirtual #42
1224: dload         40
1226: invokevirtual #59
1229: ldc           #44
1231: invokevirtual #42
1234: dconst_0
1235: invokevirtual #59
1238: ldc           #41
1240: invokevirtual #42
1243: invokevirtual #45
1246: dload         40
1248: dconst_0
1249: dcmpl
1250: ifne          1257
1253: iconst_1
1254: goto          1258
1257: iconst_0
1258: invokestatic  #46
1261: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test160
Start line: 8507
End line: 8584
Method source code: 
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric0 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer7 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer7.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker10);
        int int12 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer7.getMaxEvaluations();
        int int14 = levenbergMarquardtOptimizer7.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter15 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer7);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction16 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter30 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        double[] doubleArray37 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray38 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray38, true);
        double[] doubleArray41 = gaussianFitter30.fit(doubleArray37);
        double[] doubleArray42 = curveFitter15.fit(parametricUnivariateRealFunction16, doubleArray37);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer48 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker51 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer48.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker51);
        int int53 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int55 = levenbergMarquardtOptimizer48.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter56 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer48);
        double[] doubleArray63 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray64 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray64, true);
        double[] doubleArray67 = gaussianFitter56.fit(doubleArray63);
        double[] doubleArray74 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray75 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray75, true);
        double[] doubleArray78 = vectorialPointValuePair77.getValue();
        double[] doubleArray79 = vectorialPointValuePair77.getValue();
        double[] doubleArray80 = vectorialPointValuePair77.getPoint();
        double[] doubleArray81 = gaussianFitter56.fit(doubleArray80);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray81, false);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = parametric0.value(10.067661995777765d, doubleArray81);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray78);
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #498
20: aastore
21: invokevirtual #7
24: pop
25: new           #117
28: dup
29: invokespecial #118
32: astore_1
33: new           #8
36: dup
37: ldc2_w        #9
40: ldc2_w        #11
43: ldc2_w        #13
46: dconst_1
47: ldc2_w        #13
50: invokespecial #15
53: astore_2
54: new           #16
57: dup
58: ldc2_w        #17
61: ldc2_w        #19
64: invokespecial #21
67: astore_3
68: aload_2
69: aload_3
70: invokevirtual #22
73: aload_2
74: invokevirtual #23
77: istore        4
79: aload_2
80: invokevirtual #23
83: istore        5
85: aload_2
86: invokevirtual #53
89: istore        6
91: new           #67
94: dup
95: aload_2
96: invokespecial #68
99: astore        7
101: aconst_null
102: astore        8
104: new           #8
107: dup
108: ldc2_w        #9
111: ldc2_w        #11
114: ldc2_w        #13
117: dconst_1
118: ldc2_w        #13
121: invokespecial #15
124: astore        9
126: new           #16
129: dup
130: ldc2_w        #17
133: ldc2_w        #19
136: invokespecial #21
139: astore        10
141: aload         9
143: aload         10
145: invokevirtual #22
148: aload         9
150: invokevirtual #23
153: istore        11
155: aload         9
157: invokevirtual #23
160: istore        12
162: aload         9
164: invokevirtual #53
167: istore        13
169: new           #24
172: dup
173: aload         9
175: invokespecial #25
178: astore        14
180: bipush        6
182: newarray       double
184: dup
185: iconst_0
186: ldc2_w        #27
189: dastore
190: dup
191: iconst_1
192: ldc2_w        #9
195: dastore
196: dup
197: iconst_2
198: ldc2_w        #13
201: dastore
202: dup
203: iconst_3
204: ldc2_w        #29
207: dastore
208: dup
209: iconst_4
210: ldc2_w        #17
213: dastore
214: dup
215: iconst_5
216: ldc2_w        #31
219: dastore
220: astore        15
222: aconst_null
223: astore        16
225: new           #33
228: dup
229: aload         15
231: aload         16
233: iconst_1
234: invokespecial #34
237: astore        17
239: aload         14
241: aload         15
243: invokevirtual #54
246: astore        18
248: aload         7
250: aload         8
252: aload         15
254: invokevirtual #89
257: astore        19
259: new           #8
262: dup
263: ldc2_w        #9
266: ldc2_w        #11
269: ldc2_w        #13
272: dconst_1
273: ldc2_w        #13
276: invokespecial #15
279: astore        20
281: new           #16
284: dup
285: ldc2_w        #17
288: ldc2_w        #19
291: invokespecial #21
294: astore        21
296: aload         20
298: aload         21
300: invokevirtual #22
303: aload         20
305: invokevirtual #23
308: istore        22
310: aload         20
312: invokevirtual #23
315: istore        23
317: aload         20
319: invokevirtual #53
322: istore        24
324: new           #24
327: dup
328: aload         20
330: invokespecial #25
333: astore        25
335: bipush        6
337: newarray       double
339: dup
340: iconst_0
341: ldc2_w        #27
344: dastore
345: dup
346: iconst_1
347: ldc2_w        #9
350: dastore
351: dup
352: iconst_2
353: ldc2_w        #13
356: dastore
357: dup
358: iconst_3
359: ldc2_w        #29
362: dastore
363: dup
364: iconst_4
365: ldc2_w        #17
368: dastore
369: dup
370: iconst_5
371: ldc2_w        #31
374: dastore
375: astore        26
377: aconst_null
378: astore        27
380: new           #33
383: dup
384: aload         26
386: aload         27
388: iconst_1
389: invokespecial #34
392: astore        28
394: aload         25
396: aload         26
398: invokevirtual #54
401: astore        29
403: bipush        6
405: newarray       double
407: dup
408: iconst_0
409: ldc2_w        #27
412: dastore
413: dup
414: iconst_1
415: ldc2_w        #9
418: dastore
419: dup
420: iconst_2
421: ldc2_w        #13
424: dastore
425: dup
426: iconst_3
427: ldc2_w        #29
430: dastore
431: dup
432: iconst_4
433: ldc2_w        #17
436: dastore
437: dup
438: iconst_5
439: ldc2_w        #31
442: dastore
443: astore        30
445: aconst_null
446: astore        31
448: new           #33
451: dup
452: aload         30
454: aload         31
456: iconst_1
457: invokespecial #34
460: astore        32
462: aload         32
464: invokevirtual #74
467: astore        33
469: aload         32
471: invokevirtual #74
474: astore        34
476: aload         32
478: invokevirtual #75
481: astore        35
483: aload         25
485: aload         35
487: invokevirtual #54
490: astore        36
492: new           #33
495: dup
496: aload         15
498: aload         36
500: iconst_0
501: invokespecial #34
504: astore        37
506: aload_1
507: ldc2_w        #499
510: aload         36
512: invokevirtual #123
515: dstore        38
517: ldc           #124
519: invokestatic  #37
522: goto          527
525: astore        38
527: new           #39
530: dup
531: invokespecial #40
534: ldc           #41
536: invokevirtual #42
539: iload         4
541: invokevirtual #43
544: ldc           #44
546: invokevirtual #42
549: iconst_0
550: invokevirtual #43
553: ldc           #41
555: invokevirtual #42
558: invokevirtual #45
561: iload         4
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #46
574: new           #39
577: dup
578: invokespecial #40
581: ldc           #41
583: invokevirtual #42
586: iload         5
588: invokevirtual #43
591: ldc           #44
593: invokevirtual #42
596: iconst_0
597: invokevirtual #43
600: ldc           #41
602: invokevirtual #42
605: invokevirtual #45
608: iload         5
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #46
621: new           #39
624: dup
625: invokespecial #40
628: ldc           #41
630: invokevirtual #42
633: iload         6
635: invokevirtual #43
638: ldc           #44
640: invokevirtual #42
643: iconst_0
644: invokevirtual #43
647: ldc           #41
649: invokevirtual #42
652: invokevirtual #45
655: iload         6
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #46
668: new           #39
671: dup
672: invokespecial #40
675: ldc           #41
677: invokevirtual #42
680: iload         11
682: invokevirtual #43
685: ldc           #44
687: invokevirtual #42
690: iconst_0
691: invokevirtual #43
694: ldc           #41
696: invokevirtual #42
699: invokevirtual #45
702: iload         11
704: ifne          711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #46
715: new           #39
718: dup
719: invokespecial #40
722: ldc           #41
724: invokevirtual #42
727: iload         12
729: invokevirtual #43
732: ldc           #44
734: invokevirtual #42
737: iconst_0
738: invokevirtual #43
741: ldc           #41
743: invokevirtual #42
746: invokevirtual #45
749: iload         12
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #46
762: new           #39
765: dup
766: invokespecial #40
769: ldc           #41
771: invokevirtual #42
774: iload         13
776: invokevirtual #43
779: ldc           #44
781: invokevirtual #42
784: iconst_0
785: invokevirtual #43
788: ldc           #41
790: invokevirtual #42
793: invokevirtual #45
796: iload         13
798: ifne          805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #46
809: aload         15
811: invokestatic  #47
814: aload         15
816: invokestatic  #48
819: ldc           #49
821: invokestatic  #50
824: aload         18
826: invokestatic  #47
829: aload         18
831: invokestatic  #48
834: ldc           #49
836: invokestatic  #50
839: aload         19
841: invokestatic  #47
844: aload         19
846: invokestatic  #48
849: ldc           #49
851: invokestatic  #50
854: new           #39
857: dup
858: invokespecial #40
861: ldc           #41
863: invokevirtual #42
866: iload         22
868: invokevirtual #43
871: ldc           #44
873: invokevirtual #42
876: iconst_0
877: invokevirtual #43
880: ldc           #41
882: invokevirtual #42
885: invokevirtual #45
888: iload         22
890: ifne          897
893: iconst_1
894: goto          898
897: iconst_0
898: invokestatic  #46
901: new           #39
904: dup
905: invokespecial #40
908: ldc           #41
910: invokevirtual #42
913: iload         23
915: invokevirtual #43
918: ldc           #44
920: invokevirtual #42
923: iconst_0
924: invokevirtual #43
927: ldc           #41
929: invokevirtual #42
932: invokevirtual #45
935: iload         23
937: ifne          944
940: iconst_1
941: goto          945
944: iconst_0
945: invokestatic  #46
948: new           #39
951: dup
952: invokespecial #40
955: ldc           #41
957: invokevirtual #42
960: iload         24
962: invokevirtual #43
965: ldc           #44
967: invokevirtual #42
970: iconst_0
971: invokevirtual #43
974: ldc           #41
976: invokevirtual #42
979: invokevirtual #45
982: iload         24
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #46
995: aload         26
997: invokestatic  #47
1000: aload         26
1002: invokestatic  #48
1005: ldc           #49
1007: invokestatic  #50
1010: aload         29
1012: invokestatic  #47
1015: aload         29
1017: invokestatic  #48
1020: ldc           #49
1022: invokestatic  #50
1025: aload         30
1027: invokestatic  #47
1030: aload         30
1032: invokestatic  #48
1035: ldc           #49
1037: invokestatic  #50
1040: aload         33
1042: invokestatic  #76
1045: aload         34
1047: invokestatic  #76
1050: aload         35
1052: invokestatic  #47
1055: aload         35
1057: invokestatic  #48
1060: ldc           #49
1062: invokestatic  #50
1065: aload         36
1067: invokestatic  #47
1070: aload         36
1072: invokestatic  #48
1075: ldc           #49
1077: invokestatic  #50
1080: return
Exception table:
from    to  target type
506   522   525   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test161
Start line: 8587
End line: 8669
Method source code: 
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter14 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric15 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer21.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker24);
        int int26 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer21.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer21.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter29 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer21);
        double[] doubleArray36 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray37 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray36, doubleArray37, true);
        double[] doubleArray40 = gaussianFitter29.fit(doubleArray36);
        double[] doubleArray41 = curveFitter14.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric15, doubleArray40);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer48 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker51 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer48.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker51);
        int int53 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer48.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter55 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer48);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray56 = gaussianFitter55.getObservations();
        double[] doubleArray63 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray64 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray63, doubleArray64, true);
        double[] doubleArray67 = vectorialPointValuePair66.getValue();
        double[] doubleArray68 = vectorialPointValuePair66.getValue();
        double[] doubleArray69 = vectorialPointValuePair66.getPoint();
        double[] doubleArray76 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray77 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair79 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray76, doubleArray77, true);
        double[] doubleArray80 = vectorialPointValuePair79.getValue();
        double[] doubleArray81 = vectorialPointValuePair79.getValue();
        double[] doubleArray82 = vectorialPointValuePair79.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray69, doubleArray82, false);
        double[] doubleArray85 = gaussianFitter55.fit(doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = parametric15.value((double) 6L, doubleArray85);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: dimensions mismatch: 6 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray56);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #501
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #23
86: istore        7
88: new           #67
91: dup
92: aload_1
93: invokespecial #68
96: astore        8
98: new           #117
101: dup
102: invokespecial #118
105: astore        9
107: new           #8
110: dup
111: ldc2_w        #9
114: ldc2_w        #11
117: ldc2_w        #13
120: dconst_1
121: ldc2_w        #13
124: invokespecial #15
127: astore        10
129: new           #16
132: dup
133: ldc2_w        #17
136: ldc2_w        #19
139: invokespecial #21
142: astore        11
144: aload         10
146: aload         11
148: invokevirtual #22
151: aload         10
153: invokevirtual #23
156: istore        12
158: aload         10
160: invokevirtual #23
163: istore        13
165: aload         10
167: invokevirtual #53
170: istore        14
172: new           #24
175: dup
176: aload         10
178: invokespecial #25
181: astore        15
183: bipush        6
185: newarray       double
187: dup
188: iconst_0
189: ldc2_w        #27
192: dastore
193: dup
194: iconst_1
195: ldc2_w        #9
198: dastore
199: dup
200: iconst_2
201: ldc2_w        #13
204: dastore
205: dup
206: iconst_3
207: ldc2_w        #29
210: dastore
211: dup
212: iconst_4
213: ldc2_w        #17
216: dastore
217: dup
218: iconst_5
219: ldc2_w        #31
222: dastore
223: astore        16
225: aconst_null
226: astore        17
228: new           #33
231: dup
232: aload         16
234: aload         17
236: iconst_1
237: invokespecial #34
240: astore        18
242: aload         15
244: aload         16
246: invokevirtual #54
249: astore        19
251: aload         8
253: aload         9
255: aload         19
257: invokevirtual #89
260: astore        20
262: new           #8
265: dup
266: ldc2_w        #9
269: ldc2_w        #11
272: ldc2_w        #13
275: dconst_1
276: ldc2_w        #13
279: invokespecial #15
282: astore        21
284: new           #16
287: dup
288: ldc2_w        #17
291: ldc2_w        #19
294: invokespecial #21
297: astore        22
299: aload         21
301: aload         22
303: invokevirtual #22
306: aload         21
308: invokevirtual #23
311: istore        23
313: aload         21
315: invokevirtual #23
318: istore        24
320: new           #24
323: dup
324: aload         21
326: invokespecial #25
329: astore        25
331: aload         25
333: invokevirtual #62
336: astore        26
338: bipush        6
340: newarray       double
342: dup
343: iconst_0
344: ldc2_w        #27
347: dastore
348: dup
349: iconst_1
350: ldc2_w        #9
353: dastore
354: dup
355: iconst_2
356: ldc2_w        #13
359: dastore
360: dup
361: iconst_3
362: ldc2_w        #29
365: dastore
366: dup
367: iconst_4
368: ldc2_w        #17
371: dastore
372: dup
373: iconst_5
374: ldc2_w        #31
377: dastore
378: astore        27
380: aconst_null
381: astore        28
383: new           #33
386: dup
387: aload         27
389: aload         28
391: iconst_1
392: invokespecial #34
395: astore        29
397: aload         29
399: invokevirtual #74
402: astore        30
404: aload         29
406: invokevirtual #74
409: astore        31
411: aload         29
413: invokevirtual #75
416: astore        32
418: bipush        6
420: newarray       double
422: dup
423: iconst_0
424: ldc2_w        #27
427: dastore
428: dup
429: iconst_1
430: ldc2_w        #9
433: dastore
434: dup
435: iconst_2
436: ldc2_w        #13
439: dastore
440: dup
441: iconst_3
442: ldc2_w        #29
445: dastore
446: dup
447: iconst_4
448: ldc2_w        #17
451: dastore
452: dup
453: iconst_5
454: ldc2_w        #31
457: dastore
458: astore        33
460: aconst_null
461: astore        34
463: new           #33
466: dup
467: aload         33
469: aload         34
471: iconst_1
472: invokespecial #34
475: astore        35
477: aload         35
479: invokevirtual #74
482: astore        36
484: aload         35
486: invokevirtual #74
489: astore        37
491: aload         35
493: invokevirtual #75
496: astore        38
498: new           #33
501: dup
502: aload         32
504: aload         38
506: iconst_0
507: invokespecial #34
510: astore        39
512: aload         25
514: aload         32
516: invokevirtual #54
519: astore        40
521: aload         9
523: ldc2_w        #502
526: aload         40
528: invokevirtual #123
531: dstore        41
533: ldc           #124
535: invokestatic  #37
538: goto          543
541: astore        41
543: new           #39
546: dup
547: invokespecial #40
550: ldc           #41
552: invokevirtual #42
555: iload_3
556: invokevirtual #43
559: ldc           #44
561: invokevirtual #42
564: iconst_0
565: invokevirtual #43
568: ldc           #41
570: invokevirtual #42
573: invokevirtual #45
576: iload_3
577: ifne          584
580: iconst_1
581: goto          585
584: iconst_0
585: invokestatic  #46
588: new           #39
591: dup
592: invokespecial #40
595: ldc           #41
597: invokevirtual #42
600: iload         4
602: invokevirtual #43
605: ldc           #44
607: invokevirtual #42
610: iconst_0
611: invokevirtual #43
614: ldc           #41
616: invokevirtual #42
619: invokevirtual #45
622: iload         4
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #46
635: new           #39
638: dup
639: invokespecial #40
642: ldc           #41
644: invokevirtual #42
647: dload         5
649: invokevirtual #59
652: ldc           #44
654: invokevirtual #42
657: dconst_0
658: invokevirtual #59
661: ldc           #41
663: invokevirtual #42
666: invokevirtual #45
669: dload         5
671: dconst_0
672: dcmpl
673: ifne          680
676: iconst_1
677: goto          681
680: iconst_0
681: invokestatic  #46
684: new           #39
687: dup
688: invokespecial #40
691: ldc           #41
693: invokevirtual #42
696: iload         7
698: invokevirtual #43
701: ldc           #44
703: invokevirtual #42
706: iconst_0
707: invokevirtual #43
710: ldc           #41
712: invokevirtual #42
715: invokevirtual #45
718: iload         7
720: ifne          727
723: iconst_1
724: goto          728
727: iconst_0
728: invokestatic  #46
731: new           #39
734: dup
735: invokespecial #40
738: ldc           #41
740: invokevirtual #42
743: iload         12
745: invokevirtual #43
748: ldc           #44
750: invokevirtual #42
753: iconst_0
754: invokevirtual #43
757: ldc           #41
759: invokevirtual #42
762: invokevirtual #45
765: iload         12
767: ifne          774
770: iconst_1
771: goto          775
774: iconst_0
775: invokestatic  #46
778: new           #39
781: dup
782: invokespecial #40
785: ldc           #41
787: invokevirtual #42
790: iload         13
792: invokevirtual #43
795: ldc           #44
797: invokevirtual #42
800: iconst_0
801: invokevirtual #43
804: ldc           #41
806: invokevirtual #42
809: invokevirtual #45
812: iload         13
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #46
825: new           #39
828: dup
829: invokespecial #40
832: ldc           #41
834: invokevirtual #42
837: iload         14
839: invokevirtual #43
842: ldc           #44
844: invokevirtual #42
847: iconst_0
848: invokevirtual #43
851: ldc           #41
853: invokevirtual #42
856: invokevirtual #45
859: iload         14
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #46
872: aload         16
874: invokestatic  #47
877: aload         16
879: invokestatic  #48
882: ldc           #49
884: invokestatic  #50
887: aload         19
889: invokestatic  #47
892: aload         19
894: invokestatic  #48
897: ldc           #49
899: invokestatic  #50
902: aload         20
904: invokestatic  #47
907: aload         20
909: invokestatic  #48
912: ldc           #49
914: invokestatic  #50
917: new           #39
920: dup
921: invokespecial #40
924: ldc           #41
926: invokevirtual #42
929: iload         23
931: invokevirtual #43
934: ldc           #44
936: invokevirtual #42
939: iconst_0
940: invokevirtual #43
943: ldc           #41
945: invokevirtual #42
948: invokevirtual #45
951: iload         23
953: ifne          960
956: iconst_1
957: goto          961
960: iconst_0
961: invokestatic  #46
964: new           #39
967: dup
968: invokespecial #40
971: ldc           #41
973: invokevirtual #42
976: iload         24
978: invokevirtual #43
981: ldc           #44
983: invokevirtual #42
986: iconst_0
987: invokevirtual #43
990: ldc           #41
992: invokevirtual #42
995: invokevirtual #45
998: iload         24
1000: ifne          1007
1003: iconst_1
1004: goto          1008
1007: iconst_0
1008: invokestatic  #46
1011: aload         26
1013: invokestatic  #47
1016: aload         27
1018: invokestatic  #47
1021: aload         27
1023: invokestatic  #48
1026: ldc           #49
1028: invokestatic  #50
1031: aload         30
1033: invokestatic  #76
1036: aload         31
1038: invokestatic  #76
1041: aload         32
1043: invokestatic  #47
1046: aload         32
1048: invokestatic  #48
1051: ldc           #49
1053: invokestatic  #50
1056: aload         33
1058: invokestatic  #47
1061: aload         33
1063: invokestatic  #48
1066: ldc           #49
1068: invokestatic  #50
1071: aload         36
1073: invokestatic  #76
1076: aload         37
1078: invokestatic  #76
1081: aload         38
1083: invokestatic  #47
1086: aload         38
1088: invokestatic  #48
1091: ldc           #49
1093: invokestatic  #50
1096: aload         40
1098: invokestatic  #47
1101: aload         40
1103: invokestatic  #48
1106: ldc           #49
1108: invokestatic  #50
1111: return
Exception table:
from    to  target type
521   538   541   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test162
Start line: 8672
End line: 8739
Method source code: 
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter12.clearObservations();
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = gaussianFitter12.fit(parametricUnivariateRealFunction14, doubleArray39);
        double[] doubleArray41 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer47 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker50 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer47.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker50);
        int int52 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int53 = levenbergMarquardtOptimizer47.getMaxEvaluations();
        int int54 = levenbergMarquardtOptimizer47.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter55 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer47);
        double[] doubleArray62 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray63 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray63, true);
        double[] doubleArray66 = gaussianFitter55.fit(doubleArray62);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair67 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray62);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair68 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray62);
        double[] doubleArray69 = vectorialPointValuePair68.getPointRef();
        double[] doubleArray70 = vectorialPointValuePair68.getValueRef();
        double[] doubleArray71 = vectorialPointValuePair68.getPointRef();
        double[] doubleArray72 = vectorialPointValuePair68.getPointRef();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #504
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #52
91: aconst_null
92: astore        6
94: new           #8
97: dup
98: ldc2_w        #9
101: ldc2_w        #11
104: ldc2_w        #13
107: dconst_1
108: ldc2_w        #13
111: invokespecial #15
114: astore        7
116: new           #16
119: dup
120: ldc2_w        #17
123: ldc2_w        #19
126: invokespecial #21
129: astore        8
131: aload         7
133: aload         8
135: invokevirtual #22
138: aload         7
140: invokevirtual #23
143: istore        9
145: aload         7
147: invokevirtual #23
150: istore        10
152: aload         7
154: invokevirtual #53
157: istore        11
159: new           #24
162: dup
163: aload         7
165: invokespecial #25
168: astore        12
170: bipush        6
172: newarray       double
174: dup
175: iconst_0
176: ldc2_w        #27
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #9
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #13
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #29
197: dastore
198: dup
199: iconst_4
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_5
206: ldc2_w        #31
209: dastore
210: astore        13
212: aconst_null
213: astore        14
215: new           #33
218: dup
219: aload         13
221: aload         14
223: iconst_1
224: invokespecial #34
227: astore        15
229: aload         12
231: aload         13
233: invokevirtual #54
236: astore        16
238: aload         5
240: aload         6
242: aload         16
244: invokevirtual #55
247: astore        17
249: aconst_null
250: astore        18
252: new           #8
255: dup
256: ldc2_w        #9
259: ldc2_w        #11
262: ldc2_w        #13
265: dconst_1
266: ldc2_w        #13
269: invokespecial #15
272: astore        19
274: new           #16
277: dup
278: ldc2_w        #17
281: ldc2_w        #19
284: invokespecial #21
287: astore        20
289: aload         19
291: aload         20
293: invokevirtual #22
296: aload         19
298: invokevirtual #23
301: istore        21
303: aload         19
305: invokevirtual #23
308: istore        22
310: aload         19
312: invokevirtual #53
315: istore        23
317: new           #24
320: dup
321: aload         19
323: invokespecial #25
326: astore        24
328: bipush        6
330: newarray       double
332: dup
333: iconst_0
334: ldc2_w        #27
337: dastore
338: dup
339: iconst_1
340: ldc2_w        #9
343: dastore
344: dup
345: iconst_2
346: ldc2_w        #13
349: dastore
350: dup
351: iconst_3
352: ldc2_w        #29
355: dastore
356: dup
357: iconst_4
358: ldc2_w        #17
361: dastore
362: dup
363: iconst_5
364: ldc2_w        #31
367: dastore
368: astore        25
370: aconst_null
371: astore        26
373: new           #33
376: dup
377: aload         25
379: aload         26
381: iconst_1
382: invokespecial #34
385: astore        27
387: aload         24
389: aload         25
391: invokevirtual #54
394: astore        28
396: new           #33
399: dup
400: aload         18
402: aload         25
404: invokespecial #109
407: astore        29
409: new           #33
412: dup
413: aload         17
415: aload         25
417: invokespecial #109
420: astore        30
422: aload         30
424: invokevirtual #151
427: astore        31
429: aload         30
431: invokevirtual #183
434: astore        32
436: aload         30
438: invokevirtual #151
441: astore        33
443: aload         30
445: invokevirtual #151
448: astore        34
450: new           #39
453: dup
454: invokespecial #40
457: ldc           #41
459: invokevirtual #42
462: iload_3
463: invokevirtual #43
466: ldc           #44
468: invokevirtual #42
471: iconst_0
472: invokevirtual #43
475: ldc           #41
477: invokevirtual #42
480: invokevirtual #45
483: iload_3
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #46
495: new           #39
498: dup
499: invokespecial #40
502: ldc           #41
504: invokevirtual #42
507: iload         4
509: invokevirtual #43
512: ldc           #44
514: invokevirtual #42
517: iconst_0
518: invokevirtual #43
521: ldc           #41
523: invokevirtual #42
526: invokevirtual #45
529: iload         4
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #46
542: new           #39
545: dup
546: invokespecial #40
549: ldc           #41
551: invokevirtual #42
554: iload         9
556: invokevirtual #43
559: ldc           #44
561: invokevirtual #42
564: iconst_0
565: invokevirtual #43
568: ldc           #41
570: invokevirtual #42
573: invokevirtual #45
576: iload         9
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #46
589: new           #39
592: dup
593: invokespecial #40
596: ldc           #41
598: invokevirtual #42
601: iload         10
603: invokevirtual #43
606: ldc           #44
608: invokevirtual #42
611: iconst_0
612: invokevirtual #43
615: ldc           #41
617: invokevirtual #42
620: invokevirtual #45
623: iload         10
625: ifne          632
628: iconst_1
629: goto          633
632: iconst_0
633: invokestatic  #46
636: new           #39
639: dup
640: invokespecial #40
643: ldc           #41
645: invokevirtual #42
648: iload         11
650: invokevirtual #43
653: ldc           #44
655: invokevirtual #42
658: iconst_0
659: invokevirtual #43
662: ldc           #41
664: invokevirtual #42
667: invokevirtual #45
670: iload         11
672: ifne          679
675: iconst_1
676: goto          680
679: iconst_0
680: invokestatic  #46
683: aload         13
685: invokestatic  #47
688: aload         13
690: invokestatic  #48
693: ldc           #49
695: invokestatic  #50
698: aload         16
700: invokestatic  #47
703: aload         16
705: invokestatic  #48
708: ldc           #49
710: invokestatic  #50
713: aload         17
715: invokestatic  #47
718: aload         17
720: invokestatic  #48
723: ldc           #49
725: invokestatic  #50
728: new           #39
731: dup
732: invokespecial #40
735: ldc           #41
737: invokevirtual #42
740: iload         21
742: invokevirtual #43
745: ldc           #44
747: invokevirtual #42
750: iconst_0
751: invokevirtual #43
754: ldc           #41
756: invokevirtual #42
759: invokevirtual #45
762: iload         21
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #46
775: new           #39
778: dup
779: invokespecial #40
782: ldc           #41
784: invokevirtual #42
787: iload         22
789: invokevirtual #43
792: ldc           #44
794: invokevirtual #42
797: iconst_0
798: invokevirtual #43
801: ldc           #41
803: invokevirtual #42
806: invokevirtual #45
809: iload         22
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #46
822: new           #39
825: dup
826: invokespecial #40
829: ldc           #41
831: invokevirtual #42
834: iload         23
836: invokevirtual #43
839: ldc           #44
841: invokevirtual #42
844: iconst_0
845: invokevirtual #43
848: ldc           #41
850: invokevirtual #42
853: invokevirtual #45
856: iload         23
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #46
869: aload         25
871: invokestatic  #47
874: aload         25
876: invokestatic  #48
879: ldc           #49
881: invokestatic  #50
884: aload         28
886: invokestatic  #47
889: aload         28
891: invokestatic  #48
894: ldc           #49
896: invokestatic  #50
899: aload         31
901: invokestatic  #47
904: aload         31
906: invokestatic  #48
909: ldc           #49
911: invokestatic  #50
914: aload         32
916: invokestatic  #47
919: aload         32
921: invokestatic  #48
924: ldc           #49
926: invokestatic  #50
929: aload         33
931: invokestatic  #47
934: aload         33
936: invokestatic  #48
939: ldc           #49
941: invokestatic  #50
944: aload         34
946: invokestatic  #47
949: aload         34
951: invokestatic  #48
954: ldc           #49
956: invokestatic  #50
959: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test163
Start line: 8742
End line: 8791
Method source code: 
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction14 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int27 = levenbergMarquardtOptimizer20.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter28 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer20);
        double[] doubleArray35 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray36 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray36, true);
        double[] doubleArray39 = gaussianFitter28.fit(doubleArray35);
        double[] doubleArray40 = curveFitter13.fit(parametricUnivariateRealFunction14, doubleArray35);
        double[] doubleArray41 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray41);
        double[] doubleArray43 = vectorialPointValuePair42.getPointRef();
        double[] doubleArray44 = vectorialPointValuePair42.getPointRef();
        double[] doubleArray45 = vectorialPointValuePair42.getPoint();
        double[] doubleArray46 = vectorialPointValuePair42.getPointRef();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #505
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #67
85: dup
86: aload_1
87: invokespecial #68
90: astore        6
92: aconst_null
93: astore        7
95: new           #8
98: dup
99: ldc2_w        #9
102: ldc2_w        #11
105: ldc2_w        #13
108: dconst_1
109: ldc2_w        #13
112: invokespecial #15
115: astore        8
117: new           #16
120: dup
121: ldc2_w        #17
124: ldc2_w        #19
127: invokespecial #21
130: astore        9
132: aload         8
134: aload         9
136: invokevirtual #22
139: aload         8
141: invokevirtual #23
144: istore        10
146: aload         8
148: invokevirtual #23
151: istore        11
153: aload         8
155: invokevirtual #53
158: istore        12
160: new           #24
163: dup
164: aload         8
166: invokespecial #25
169: astore        13
171: bipush        6
173: newarray       double
175: dup
176: iconst_0
177: ldc2_w        #27
180: dastore
181: dup
182: iconst_1
183: ldc2_w        #9
186: dastore
187: dup
188: iconst_2
189: ldc2_w        #13
192: dastore
193: dup
194: iconst_3
195: ldc2_w        #29
198: dastore
199: dup
200: iconst_4
201: ldc2_w        #17
204: dastore
205: dup
206: iconst_5
207: ldc2_w        #31
210: dastore
211: astore        14
213: aconst_null
214: astore        15
216: new           #33
219: dup
220: aload         14
222: aload         15
224: iconst_1
225: invokespecial #34
228: astore        16
230: aload         13
232: aload         14
234: invokevirtual #54
237: astore        17
239: aload         6
241: aload         7
243: aload         14
245: invokevirtual #89
248: astore        18
250: aconst_null
251: astore        19
253: new           #33
256: dup
257: aload         14
259: aload         19
261: invokespecial #109
264: astore        20
266: aload         20
268: invokevirtual #151
271: astore        21
273: aload         20
275: invokevirtual #151
278: astore        22
280: aload         20
282: invokevirtual #75
285: astore        23
287: aload         20
289: invokevirtual #151
292: astore        24
294: new           #39
297: dup
298: invokespecial #40
301: ldc           #41
303: invokevirtual #42
306: iload_3
307: invokevirtual #43
310: ldc           #44
312: invokevirtual #42
315: iconst_0
316: invokevirtual #43
319: ldc           #41
321: invokevirtual #42
324: invokevirtual #45
327: iload_3
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #46
339: new           #39
342: dup
343: invokespecial #40
346: ldc           #41
348: invokevirtual #42
351: iload         4
353: invokevirtual #43
356: ldc           #44
358: invokevirtual #42
361: iconst_0
362: invokevirtual #43
365: ldc           #41
367: invokevirtual #42
370: invokevirtual #45
373: iload         4
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #46
386: new           #39
389: dup
390: invokespecial #40
393: ldc           #41
395: invokevirtual #42
398: iload         5
400: invokevirtual #43
403: ldc           #44
405: invokevirtual #42
408: iconst_0
409: invokevirtual #43
412: ldc           #41
414: invokevirtual #42
417: invokevirtual #45
420: iload         5
422: ifne          429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #46
433: new           #39
436: dup
437: invokespecial #40
440: ldc           #41
442: invokevirtual #42
445: iload         10
447: invokevirtual #43
450: ldc           #44
452: invokevirtual #42
455: iconst_0
456: invokevirtual #43
459: ldc           #41
461: invokevirtual #42
464: invokevirtual #45
467: iload         10
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #46
480: new           #39
483: dup
484: invokespecial #40
487: ldc           #41
489: invokevirtual #42
492: iload         11
494: invokevirtual #43
497: ldc           #44
499: invokevirtual #42
502: iconst_0
503: invokevirtual #43
506: ldc           #41
508: invokevirtual #42
511: invokevirtual #45
514: iload         11
516: ifne          523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #46
527: new           #39
530: dup
531: invokespecial #40
534: ldc           #41
536: invokevirtual #42
539: iload         12
541: invokevirtual #43
544: ldc           #44
546: invokevirtual #42
549: iconst_0
550: invokevirtual #43
553: ldc           #41
555: invokevirtual #42
558: invokevirtual #45
561: iload         12
563: ifne          570
566: iconst_1
567: goto          571
570: iconst_0
571: invokestatic  #46
574: aload         14
576: invokestatic  #47
579: aload         14
581: invokestatic  #48
584: ldc           #49
586: invokestatic  #50
589: aload         17
591: invokestatic  #47
594: aload         17
596: invokestatic  #48
599: ldc           #49
601: invokestatic  #50
604: aload         18
606: invokestatic  #47
609: aload         18
611: invokestatic  #48
614: ldc           #49
616: invokestatic  #50
619: aload         21
621: invokestatic  #47
624: aload         21
626: invokestatic  #48
629: ldc           #49
631: invokestatic  #50
634: aload         22
636: invokestatic  #47
639: aload         22
641: invokestatic  #48
644: ldc           #49
646: invokestatic  #50
649: aload         23
651: invokestatic  #47
654: aload         23
656: invokestatic  #48
659: ldc           #49
661: invokestatic  #50
664: aload         24
666: invokestatic  #47
669: aload         24
671: invokestatic  #48
674: ldc           #49
676: invokestatic  #50
679: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test164
Start line: 8794
End line: 8843
Method source code: 
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        double[] doubleArray0 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker9 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer6.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker9);
        int int11 = levenbergMarquardtOptimizer6.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer6.getMaxEvaluations();
        int int13 = levenbergMarquardtOptimizer6.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer6);
        double[] doubleArray21 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray22 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray21, doubleArray22, true);
        double[] doubleArray25 = gaussianFitter14.fit(doubleArray21);
        double[] doubleArray32 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray33 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair35 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray32, doubleArray33, true);
        double[] doubleArray36 = vectorialPointValuePair35.getValue();
        double[] doubleArray37 = vectorialPointValuePair35.getValue();
        double[] doubleArray38 = vectorialPointValuePair35.getPoint();
        double[] doubleArray45 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray46 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray46, true);
        double[] doubleArray49 = vectorialPointValuePair48.getValue();
        double[] doubleArray50 = vectorialPointValuePair48.getValue();
        double[] doubleArray51 = vectorialPointValuePair48.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray51, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray21, doubleArray38, false);
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray0, doubleArray38, false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #506
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc2_w        #9
34: ldc2_w        #11
37: ldc2_w        #13
40: dconst_1
41: ldc2_w        #13
44: invokespecial #15
47: astore_2
48: new           #16
51: dup
52: ldc2_w        #17
55: ldc2_w        #19
58: invokespecial #21
61: astore_3
62: aload_2
63: aload_3
64: invokevirtual #22
67: aload_2
68: invokevirtual #23
71: istore        4
73: aload_2
74: invokevirtual #23
77: istore        5
79: aload_2
80: invokevirtual #53
83: istore        6
85: new           #24
88: dup
89: aload_2
90: invokespecial #25
93: astore        7
95: bipush        6
97: newarray       double
99: dup
100: iconst_0
101: ldc2_w        #27
104: dastore
105: dup
106: iconst_1
107: ldc2_w        #9
110: dastore
111: dup
112: iconst_2
113: ldc2_w        #13
116: dastore
117: dup
118: iconst_3
119: ldc2_w        #29
122: dastore
123: dup
124: iconst_4
125: ldc2_w        #17
128: dastore
129: dup
130: iconst_5
131: ldc2_w        #31
134: dastore
135: astore        8
137: aconst_null
138: astore        9
140: new           #33
143: dup
144: aload         8
146: aload         9
148: iconst_1
149: invokespecial #34
152: astore        10
154: aload         7
156: aload         8
158: invokevirtual #54
161: astore        11
163: bipush        6
165: newarray       double
167: dup
168: iconst_0
169: ldc2_w        #27
172: dastore
173: dup
174: iconst_1
175: ldc2_w        #9
178: dastore
179: dup
180: iconst_2
181: ldc2_w        #13
184: dastore
185: dup
186: iconst_3
187: ldc2_w        #29
190: dastore
191: dup
192: iconst_4
193: ldc2_w        #17
196: dastore
197: dup
198: iconst_5
199: ldc2_w        #31
202: dastore
203: astore        12
205: aconst_null
206: astore        13
208: new           #33
211: dup
212: aload         12
214: aload         13
216: iconst_1
217: invokespecial #34
220: astore        14
222: aload         14
224: invokevirtual #74
227: astore        15
229: aload         14
231: invokevirtual #74
234: astore        16
236: aload         14
238: invokevirtual #75
241: astore        17
243: bipush        6
245: newarray       double
247: dup
248: iconst_0
249: ldc2_w        #27
252: dastore
253: dup
254: iconst_1
255: ldc2_w        #9
258: dastore
259: dup
260: iconst_2
261: ldc2_w        #13
264: dastore
265: dup
266: iconst_3
267: ldc2_w        #29
270: dastore
271: dup
272: iconst_4
273: ldc2_w        #17
276: dastore
277: dup
278: iconst_5
279: ldc2_w        #31
282: dastore
283: astore        18
285: aconst_null
286: astore        19
288: new           #33
291: dup
292: aload         18
294: aload         19
296: iconst_1
297: invokespecial #34
300: astore        20
302: aload         20
304: invokevirtual #74
307: astore        21
309: aload         20
311: invokevirtual #74
314: astore        22
316: aload         20
318: invokevirtual #75
321: astore        23
323: new           #33
326: dup
327: aload         17
329: aload         23
331: iconst_0
332: invokespecial #34
335: astore        24
337: new           #33
340: dup
341: aload         8
343: aload         17
345: iconst_0
346: invokespecial #34
349: astore        25
351: new           #33
354: dup
355: aload_1
356: aload         17
358: iconst_0
359: invokespecial #34
362: astore        26
364: new           #39
367: dup
368: invokespecial #40
371: ldc           #41
373: invokevirtual #42
376: iload         4
378: invokevirtual #43
381: ldc           #44
383: invokevirtual #42
386: iconst_0
387: invokevirtual #43
390: ldc           #41
392: invokevirtual #42
395: invokevirtual #45
398: iload         4
400: ifne          407
403: iconst_1
404: goto          408
407: iconst_0
408: invokestatic  #46
411: new           #39
414: dup
415: invokespecial #40
418: ldc           #41
420: invokevirtual #42
423: iload         5
425: invokevirtual #43
428: ldc           #44
430: invokevirtual #42
433: iconst_0
434: invokevirtual #43
437: ldc           #41
439: invokevirtual #42
442: invokevirtual #45
445: iload         5
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #46
458: new           #39
461: dup
462: invokespecial #40
465: ldc           #41
467: invokevirtual #42
470: iload         6
472: invokevirtual #43
475: ldc           #44
477: invokevirtual #42
480: iconst_0
481: invokevirtual #43
484: ldc           #41
486: invokevirtual #42
489: invokevirtual #45
492: iload         6
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #46
505: aload         8
507: invokestatic  #47
510: aload         8
512: invokestatic  #48
515: ldc           #49
517: invokestatic  #50
520: aload         11
522: invokestatic  #47
525: aload         11
527: invokestatic  #48
530: ldc           #49
532: invokestatic  #50
535: aload         12
537: invokestatic  #47
540: aload         12
542: invokestatic  #48
545: ldc           #49
547: invokestatic  #50
550: aload         15
552: invokestatic  #76
555: aload         16
557: invokestatic  #76
560: aload         17
562: invokestatic  #47
565: aload         17
567: invokestatic  #48
570: ldc           #49
572: invokestatic  #50
575: aload         18
577: invokestatic  #47
580: aload         18
582: invokestatic  #48
585: ldc           #49
587: invokestatic  #50
590: aload         21
592: invokestatic  #76
595: aload         22
597: invokestatic  #76
600: aload         23
602: invokestatic  #47
605: aload         23
607: invokestatic  #48
610: ldc           #49
612: invokestatic  #50
615: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test165
Start line: 8846
End line: 8869
Method source code: 
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker10 = null;
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker10);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker14 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double15 = simpleVectorialValueChecker14.getAbsoluteThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker14);
        int int17 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker18 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter19 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int20 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double21 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter22 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter23 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #507
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aconst_null
66: astore_3
67: aload_1
68: aload_3
69: invokevirtual #22
72: new           #16
75: dup
76: ldc2_w        #17
79: ldc2_w        #19
82: invokespecial #21
85: astore        4
87: aload         4
89: invokevirtual #205
92: dstore        5
94: aload_1
95: aload         4
97: invokevirtual #22
100: aload_1
101: invokevirtual #53
104: istore        7
106: aload_1
107: invokevirtual #73
110: astore        8
112: new           #67
115: dup
116: aload_1
117: invokespecial #68
120: astore        9
122: aload_1
123: invokevirtual #23
126: istore        10
128: aload_1
129: invokevirtual #58
132: dstore        11
134: new           #67
137: dup
138: aload_1
139: invokespecial #68
142: astore        13
144: new           #24
147: dup
148: aload_1
149: invokespecial #25
152: astore        14
154: new           #39
157: dup
158: invokespecial #40
161: ldc           #41
163: invokevirtual #42
166: dload         5
168: invokevirtual #59
171: ldc           #44
173: invokevirtual #42
176: ldc2_w        #19
179: invokevirtual #59
182: ldc           #41
184: invokevirtual #42
187: invokevirtual #45
190: dload         5
192: ldc2_w        #19
195: dcmpl
196: ifne          203
199: iconst_1
200: goto          204
203: iconst_0
204: invokestatic  #46
207: new           #39
210: dup
211: invokespecial #40
214: ldc           #41
216: invokevirtual #42
219: iload         7
221: invokevirtual #43
224: ldc           #44
226: invokevirtual #42
229: iconst_0
230: invokevirtual #43
233: ldc           #41
235: invokevirtual #42
238: invokevirtual #45
241: iload         7
243: ifne          250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #46
254: aload         8
256: invokestatic  #47
259: new           #39
262: dup
263: invokespecial #40
266: ldc           #41
268: invokevirtual #42
271: iload         10
273: invokevirtual #43
276: ldc           #44
278: invokevirtual #42
281: iconst_0
282: invokevirtual #43
285: ldc           #41
287: invokevirtual #42
290: invokevirtual #45
293: iload         10
295: ifne          302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #46
306: new           #39
309: dup
310: invokespecial #40
313: ldc           #41
315: invokevirtual #42
318: dload         11
320: invokevirtual #59
323: ldc           #44
325: invokevirtual #42
328: dconst_0
329: invokevirtual #59
332: ldc           #41
334: invokevirtual #42
337: invokevirtual #45
340: dload         11
342: dconst_0
343: dcmpl
344: ifne          351
347: iconst_1
348: goto          352
351: iconst_0
352: invokestatic  #46
355: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test166
Start line: 8872
End line: 8956
Method source code: 
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(0.0d, 0.010311421344939717d, 1.0d, 1.6433772227326626d, Double.NEGATIVE_INFINITY);
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker6 = null;
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker6);
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter8 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer14 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker17 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer14.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker17);
        int int19 = levenbergMarquardtOptimizer14.getMaxEvaluations();
        int int20 = levenbergMarquardtOptimizer14.getMaxEvaluations();
        int int21 = levenbergMarquardtOptimizer14.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter22 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer14);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction23 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer29 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker32 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer29.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker32);
        int int34 = levenbergMarquardtOptimizer29.getMaxEvaluations();
        int int35 = levenbergMarquardtOptimizer29.getMaxEvaluations();
        int int36 = levenbergMarquardtOptimizer29.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter37 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer29);
        double[] doubleArray44 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray45 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair47 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray44, doubleArray45, true);
        double[] doubleArray48 = gaussianFitter37.fit(doubleArray44);
        double[] doubleArray49 = curveFitter22.fit(parametricUnivariateRealFunction23, doubleArray44);
        org.apache.commons.math.analysis.function.Gaussian.Parametric parametric50 = new org.apache.commons.math.analysis.function.Gaussian.Parametric();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer56 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker59 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer56.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker59);
        int int61 = levenbergMarquardtOptimizer56.getMaxEvaluations();
        int int62 = levenbergMarquardtOptimizer56.getMaxEvaluations();
        int int63 = levenbergMarquardtOptimizer56.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter64 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer56);
        double[] doubleArray71 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray72 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair74 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray71, doubleArray72, true);
        double[] doubleArray75 = gaussianFitter64.fit(doubleArray71);
        double[] doubleArray82 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray83 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray82, doubleArray83, true);
        double[] doubleArray86 = vectorialPointValuePair85.getValue();
        double[] doubleArray87 = vectorialPointValuePair85.getValue();
        double[] doubleArray88 = vectorialPointValuePair85.getPoint();
        double[] doubleArray89 = gaussianFitter64.fit(doubleArray88);
        double[] doubleArray90 = curveFitter22.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric50, doubleArray88);
        double[] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray92 = curveFitter8.fit((org.apache.commons.math.analysis.ParametricUnivariateRealFunction) parametric50, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray86);
        org.junit.Assert.assertNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #508
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: dconst_0
30: ldc2_w        #509
33: dconst_1
34: ldc2_w        #511
37: ldc2_w        #513
40: invokespecial #15
43: astore_1
44: aconst_null
45: astore_2
46: aload_1
47: aload_2
48: invokevirtual #22
51: new           #67
54: dup
55: aload_1
56: invokespecial #68
59: astore_3
60: new           #8
63: dup
64: ldc2_w        #9
67: ldc2_w        #11
70: ldc2_w        #13
73: dconst_1
74: ldc2_w        #13
77: invokespecial #15
80: astore        4
82: new           #16
85: dup
86: ldc2_w        #17
89: ldc2_w        #19
92: invokespecial #21
95: astore        5
97: aload         4
99: aload         5
101: invokevirtual #22
104: aload         4
106: invokevirtual #23
109: istore        6
111: aload         4
113: invokevirtual #23
116: istore        7
118: aload         4
120: invokevirtual #53
123: istore        8
125: new           #67
128: dup
129: aload         4
131: invokespecial #68
134: astore        9
136: aconst_null
137: astore        10
139: new           #8
142: dup
143: ldc2_w        #9
146: ldc2_w        #11
149: ldc2_w        #13
152: dconst_1
153: ldc2_w        #13
156: invokespecial #15
159: astore        11
161: new           #16
164: dup
165: ldc2_w        #17
168: ldc2_w        #19
171: invokespecial #21
174: astore        12
176: aload         11
178: aload         12
180: invokevirtual #22
183: aload         11
185: invokevirtual #23
188: istore        13
190: aload         11
192: invokevirtual #23
195: istore        14
197: aload         11
199: invokevirtual #53
202: istore        15
204: new           #24
207: dup
208: aload         11
210: invokespecial #25
213: astore        16
215: bipush        6
217: newarray       double
219: dup
220: iconst_0
221: ldc2_w        #27
224: dastore
225: dup
226: iconst_1
227: ldc2_w        #9
230: dastore
231: dup
232: iconst_2
233: ldc2_w        #13
236: dastore
237: dup
238: iconst_3
239: ldc2_w        #29
242: dastore
243: dup
244: iconst_4
245: ldc2_w        #17
248: dastore
249: dup
250: iconst_5
251: ldc2_w        #31
254: dastore
255: astore        17
257: aconst_null
258: astore        18
260: new           #33
263: dup
264: aload         17
266: aload         18
268: iconst_1
269: invokespecial #34
272: astore        19
274: aload         16
276: aload         17
278: invokevirtual #54
281: astore        20
283: aload         9
285: aload         10
287: aload         17
289: invokevirtual #89
292: astore        21
294: new           #117
297: dup
298: invokespecial #118
301: astore        22
303: new           #8
306: dup
307: ldc2_w        #9
310: ldc2_w        #11
313: ldc2_w        #13
316: dconst_1
317: ldc2_w        #13
320: invokespecial #15
323: astore        23
325: new           #16
328: dup
329: ldc2_w        #17
332: ldc2_w        #19
335: invokespecial #21
338: astore        24
340: aload         23
342: aload         24
344: invokevirtual #22
347: aload         23
349: invokevirtual #23
352: istore        25
354: aload         23
356: invokevirtual #23
359: istore        26
361: aload         23
363: invokevirtual #53
366: istore        27
368: new           #24
371: dup
372: aload         23
374: invokespecial #25
377: astore        28
379: bipush        6
381: newarray       double
383: dup
384: iconst_0
385: ldc2_w        #27
388: dastore
389: dup
390: iconst_1
391: ldc2_w        #9
394: dastore
395: dup
396: iconst_2
397: ldc2_w        #13
400: dastore
401: dup
402: iconst_3
403: ldc2_w        #29
406: dastore
407: dup
408: iconst_4
409: ldc2_w        #17
412: dastore
413: dup
414: iconst_5
415: ldc2_w        #31
418: dastore
419: astore        29
421: aconst_null
422: astore        30
424: new           #33
427: dup
428: aload         29
430: aload         30
432: iconst_1
433: invokespecial #34
436: astore        31
438: aload         28
440: aload         29
442: invokevirtual #54
445: astore        32
447: bipush        6
449: newarray       double
451: dup
452: iconst_0
453: ldc2_w        #27
456: dastore
457: dup
458: iconst_1
459: ldc2_w        #9
462: dastore
463: dup
464: iconst_2
465: ldc2_w        #13
468: dastore
469: dup
470: iconst_3
471: ldc2_w        #29
474: dastore
475: dup
476: iconst_4
477: ldc2_w        #17
480: dastore
481: dup
482: iconst_5
483: ldc2_w        #31
486: dastore
487: astore        33
489: aconst_null
490: astore        34
492: new           #33
495: dup
496: aload         33
498: aload         34
500: iconst_1
501: invokespecial #34
504: astore        35
506: aload         35
508: invokevirtual #74
511: astore        36
513: aload         35
515: invokevirtual #74
518: astore        37
520: aload         35
522: invokevirtual #75
525: astore        38
527: aload         28
529: aload         38
531: invokevirtual #54
534: astore        39
536: aload         9
538: aload         22
540: aload         38
542: invokevirtual #89
545: astore        40
547: aconst_null
548: astore        41
550: aload_3
551: aload         22
553: aload         41
555: invokevirtual #89
558: astore        42
560: ldc           #36
562: invokestatic  #37
565: goto          570
568: astore        42
570: new           #39
573: dup
574: invokespecial #40
577: ldc           #41
579: invokevirtual #42
582: iload         6
584: invokevirtual #43
587: ldc           #44
589: invokevirtual #42
592: iconst_0
593: invokevirtual #43
596: ldc           #41
598: invokevirtual #42
601: invokevirtual #45
604: iload         6
606: ifne          613
609: iconst_1
610: goto          614
613: iconst_0
614: invokestatic  #46
617: new           #39
620: dup
621: invokespecial #40
624: ldc           #41
626: invokevirtual #42
629: iload         7
631: invokevirtual #43
634: ldc           #44
636: invokevirtual #42
639: iconst_0
640: invokevirtual #43
643: ldc           #41
645: invokevirtual #42
648: invokevirtual #45
651: iload         7
653: ifne          660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #46
664: new           #39
667: dup
668: invokespecial #40
671: ldc           #41
673: invokevirtual #42
676: iload         8
678: invokevirtual #43
681: ldc           #44
683: invokevirtual #42
686: iconst_0
687: invokevirtual #43
690: ldc           #41
692: invokevirtual #42
695: invokevirtual #45
698: iload         8
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #46
711: new           #39
714: dup
715: invokespecial #40
718: ldc           #41
720: invokevirtual #42
723: iload         13
725: invokevirtual #43
728: ldc           #44
730: invokevirtual #42
733: iconst_0
734: invokevirtual #43
737: ldc           #41
739: invokevirtual #42
742: invokevirtual #45
745: iload         13
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #46
758: new           #39
761: dup
762: invokespecial #40
765: ldc           #41
767: invokevirtual #42
770: iload         14
772: invokevirtual #43
775: ldc           #44
777: invokevirtual #42
780: iconst_0
781: invokevirtual #43
784: ldc           #41
786: invokevirtual #42
789: invokevirtual #45
792: iload         14
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #46
805: new           #39
808: dup
809: invokespecial #40
812: ldc           #41
814: invokevirtual #42
817: iload         15
819: invokevirtual #43
822: ldc           #44
824: invokevirtual #42
827: iconst_0
828: invokevirtual #43
831: ldc           #41
833: invokevirtual #42
836: invokevirtual #45
839: iload         15
841: ifne          848
844: iconst_1
845: goto          849
848: iconst_0
849: invokestatic  #46
852: aload         17
854: invokestatic  #47
857: aload         17
859: invokestatic  #48
862: ldc           #49
864: invokestatic  #50
867: aload         20
869: invokestatic  #47
872: aload         20
874: invokestatic  #48
877: ldc           #49
879: invokestatic  #50
882: aload         21
884: invokestatic  #47
887: aload         21
889: invokestatic  #48
892: ldc           #49
894: invokestatic  #50
897: new           #39
900: dup
901: invokespecial #40
904: ldc           #41
906: invokevirtual #42
909: iload         25
911: invokevirtual #43
914: ldc           #44
916: invokevirtual #42
919: iconst_0
920: invokevirtual #43
923: ldc           #41
925: invokevirtual #42
928: invokevirtual #45
931: iload         25
933: ifne          940
936: iconst_1
937: goto          941
940: iconst_0
941: invokestatic  #46
944: new           #39
947: dup
948: invokespecial #40
951: ldc           #41
953: invokevirtual #42
956: iload         26
958: invokevirtual #43
961: ldc           #44
963: invokevirtual #42
966: iconst_0
967: invokevirtual #43
970: ldc           #41
972: invokevirtual #42
975: invokevirtual #45
978: iload         26
980: ifne          987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #46
991: new           #39
994: dup
995: invokespecial #40
998: ldc           #41
1000: invokevirtual #42
1003: iload         27
1005: invokevirtual #43
1008: ldc           #44
1010: invokevirtual #42
1013: iconst_0
1014: invokevirtual #43
1017: ldc           #41
1019: invokevirtual #42
1022: invokevirtual #45
1025: iload         27
1027: ifne          1034
1030: iconst_1
1031: goto          1035
1034: iconst_0
1035: invokestatic  #46
1038: aload         29
1040: invokestatic  #47
1043: aload         29
1045: invokestatic  #48
1048: ldc           #49
1050: invokestatic  #50
1053: aload         32
1055: invokestatic  #47
1058: aload         32
1060: invokestatic  #48
1063: ldc           #49
1065: invokestatic  #50
1068: aload         33
1070: invokestatic  #47
1073: aload         33
1075: invokestatic  #48
1078: ldc           #49
1080: invokestatic  #50
1083: aload         36
1085: invokestatic  #76
1088: aload         37
1090: invokestatic  #76
1093: aload         38
1095: invokestatic  #47
1098: aload         38
1100: invokestatic  #48
1103: ldc           #49
1105: invokestatic  #50
1108: aload         39
1110: invokestatic  #47
1113: aload         39
1115: invokestatic  #48
1118: ldc           #49
1120: invokestatic  #50
1123: aload         40
1125: invokestatic  #47
1128: aload         40
1130: invokestatic  #48
1133: ldc           #49
1135: invokestatic  #50
1138: return
Exception table:
from    to  target type
550   565   568   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test167
Start line: 8959
End line: 9038
Method source code: 
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int12 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter13 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter14 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker23 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker23);
        int int25 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        int int26 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        double double27 = levenbergMarquardtOptimizer20.getChiSquare();
        int int28 = levenbergMarquardtOptimizer20.getMaxEvaluations();
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker31 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        double double32 = simpleVectorialValueChecker31.getRelativeThreshold();
        levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker31);
        double double34 = simpleVectorialValueChecker31.getRelativeThreshold();
        double double35 = simpleVectorialValueChecker31.getAbsoluteThreshold();
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker31);
        org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction38 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer44 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker47 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer44.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker47);
        int int49 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int50 = levenbergMarquardtOptimizer44.getMaxEvaluations();
        int int51 = levenbergMarquardtOptimizer44.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter52 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer44);
        double[] doubleArray59 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray60 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray60, true);
        double[] doubleArray63 = gaussianFitter52.fit(doubleArray59);
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer69 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker72 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer69.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker72);
        int int74 = levenbergMarquardtOptimizer69.getMaxEvaluations();
        int int75 = levenbergMarquardtOptimizer69.getMaxEvaluations();
        int int76 = levenbergMarquardtOptimizer69.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter77 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer69);
        double[] doubleArray84 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray85 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair87 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray84, doubleArray85, true);
        double[] doubleArray88 = gaussianFitter77.fit(doubleArray84);
        double[] doubleArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair90 = levenbergMarquardtOptimizer5.optimize((int) '#', differentiableMultivariateVectorialFunction38, doubleArray63, doubleArray84, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 35.0d + "'", double32 == 35.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 35.0d + "'", double34 == 35.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 52.0d + "'", double35 == 52.0d);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #515
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #53
80: istore        5
82: new           #67
85: dup
86: aload_1
87: invokespecial #68
90: astore        6
92: new           #24
95: dup
96: aload_1
97: invokespecial #25
100: astore        7
102: new           #8
105: dup
106: ldc2_w        #9
109: ldc2_w        #11
112: ldc2_w        #13
115: dconst_1
116: ldc2_w        #13
119: invokespecial #15
122: astore        8
124: new           #16
127: dup
128: ldc2_w        #17
131: ldc2_w        #19
134: invokespecial #21
137: astore        9
139: aload         8
141: aload         9
143: invokevirtual #22
146: aload         8
148: invokevirtual #23
151: istore        10
153: aload         8
155: invokevirtual #23
158: istore        11
160: aload         8
162: invokevirtual #58
165: dstore        12
167: aload         8
169: invokevirtual #23
172: istore        14
174: new           #16
177: dup
178: ldc2_w        #17
181: ldc2_w        #19
184: invokespecial #21
187: astore        15
189: aload         15
191: invokevirtual #88
194: dstore        16
196: aload         8
198: aload         15
200: invokevirtual #22
203: aload         15
205: invokevirtual #88
208: dstore        18
210: aload         15
212: invokevirtual #205
215: dstore        20
217: aload_1
218: aload         15
220: invokevirtual #22
223: aconst_null
224: astore        22
226: new           #8
229: dup
230: ldc2_w        #9
233: ldc2_w        #11
236: ldc2_w        #13
239: dconst_1
240: ldc2_w        #13
243: invokespecial #15
246: astore        23
248: new           #16
251: dup
252: ldc2_w        #17
255: ldc2_w        #19
258: invokespecial #21
261: astore        24
263: aload         23
265: aload         24
267: invokevirtual #22
270: aload         23
272: invokevirtual #23
275: istore        25
277: aload         23
279: invokevirtual #23
282: istore        26
284: aload         23
286: invokevirtual #53
289: istore        27
291: new           #24
294: dup
295: aload         23
297: invokespecial #25
300: astore        28
302: bipush        6
304: newarray       double
306: dup
307: iconst_0
308: ldc2_w        #27
311: dastore
312: dup
313: iconst_1
314: ldc2_w        #9
317: dastore
318: dup
319: iconst_2
320: ldc2_w        #13
323: dastore
324: dup
325: iconst_3
326: ldc2_w        #29
329: dastore
330: dup
331: iconst_4
332: ldc2_w        #17
335: dastore
336: dup
337: iconst_5
338: ldc2_w        #31
341: dastore
342: astore        29
344: aconst_null
345: astore        30
347: new           #33
350: dup
351: aload         29
353: aload         30
355: iconst_1
356: invokespecial #34
359: astore        31
361: aload         28
363: aload         29
365: invokevirtual #54
368: astore        32
370: new           #8
373: dup
374: ldc2_w        #9
377: ldc2_w        #11
380: ldc2_w        #13
383: dconst_1
384: ldc2_w        #13
387: invokespecial #15
390: astore        33
392: new           #16
395: dup
396: ldc2_w        #17
399: ldc2_w        #19
402: invokespecial #21
405: astore        34
407: aload         33
409: aload         34
411: invokevirtual #22
414: aload         33
416: invokevirtual #23
419: istore        35
421: aload         33
423: invokevirtual #23
426: istore        36
428: aload         33
430: invokevirtual #53
433: istore        37
435: new           #24
438: dup
439: aload         33
441: invokespecial #25
444: astore        38
446: bipush        6
448: newarray       double
450: dup
451: iconst_0
452: ldc2_w        #27
455: dastore
456: dup
457: iconst_1
458: ldc2_w        #9
461: dastore
462: dup
463: iconst_2
464: ldc2_w        #13
467: dastore
468: dup
469: iconst_3
470: ldc2_w        #29
473: dastore
474: dup
475: iconst_4
476: ldc2_w        #17
479: dastore
480: dup
481: iconst_5
482: ldc2_w        #31
485: dastore
486: astore        39
488: aconst_null
489: astore        40
491: new           #33
494: dup
495: aload         39
497: aload         40
499: iconst_1
500: invokespecial #34
503: astore        41
505: aload         38
507: aload         39
509: invokevirtual #54
512: astore        42
514: aconst_null
515: astore        43
517: aload_1
518: bipush        35
520: aload         22
522: aload         32
524: aload         39
526: aload         43
528: invokevirtual #56
531: astore        44
533: ldc           #36
535: invokestatic  #37
538: goto          543
541: astore        44
543: new           #39
546: dup
547: invokespecial #40
550: ldc           #41
552: invokevirtual #42
555: iload_3
556: invokevirtual #43
559: ldc           #44
561: invokevirtual #42
564: iconst_0
565: invokevirtual #43
568: ldc           #41
570: invokevirtual #42
573: invokevirtual #45
576: iload_3
577: ifne          584
580: iconst_1
581: goto          585
584: iconst_0
585: invokestatic  #46
588: new           #39
591: dup
592: invokespecial #40
595: ldc           #41
597: invokevirtual #42
600: iload         4
602: invokevirtual #43
605: ldc           #44
607: invokevirtual #42
610: iconst_0
611: invokevirtual #43
614: ldc           #41
616: invokevirtual #42
619: invokevirtual #45
622: iload         4
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #46
635: new           #39
638: dup
639: invokespecial #40
642: ldc           #41
644: invokevirtual #42
647: iload         5
649: invokevirtual #43
652: ldc           #44
654: invokevirtual #42
657: iconst_0
658: invokevirtual #43
661: ldc           #41
663: invokevirtual #42
666: invokevirtual #45
669: iload         5
671: ifne          678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #46
682: new           #39
685: dup
686: invokespecial #40
689: ldc           #41
691: invokevirtual #42
694: iload         10
696: invokevirtual #43
699: ldc           #44
701: invokevirtual #42
704: iconst_0
705: invokevirtual #43
708: ldc           #41
710: invokevirtual #42
713: invokevirtual #45
716: iload         10
718: ifne          725
721: iconst_1
722: goto          726
725: iconst_0
726: invokestatic  #46
729: new           #39
732: dup
733: invokespecial #40
736: ldc           #41
738: invokevirtual #42
741: iload         11
743: invokevirtual #43
746: ldc           #44
748: invokevirtual #42
751: iconst_0
752: invokevirtual #43
755: ldc           #41
757: invokevirtual #42
760: invokevirtual #45
763: iload         11
765: ifne          772
768: iconst_1
769: goto          773
772: iconst_0
773: invokestatic  #46
776: new           #39
779: dup
780: invokespecial #40
783: ldc           #41
785: invokevirtual #42
788: dload         12
790: invokevirtual #59
793: ldc           #44
795: invokevirtual #42
798: dconst_0
799: invokevirtual #59
802: ldc           #41
804: invokevirtual #42
807: invokevirtual #45
810: dload         12
812: dconst_0
813: dcmpl
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #46
825: new           #39
828: dup
829: invokespecial #40
832: ldc           #41
834: invokevirtual #42
837: iload         14
839: invokevirtual #43
842: ldc           #44
844: invokevirtual #42
847: iconst_0
848: invokevirtual #43
851: ldc           #41
853: invokevirtual #42
856: invokevirtual #45
859: iload         14
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #46
872: new           #39
875: dup
876: invokespecial #40
879: ldc           #41
881: invokevirtual #42
884: dload         16
886: invokevirtual #59
889: ldc           #44
891: invokevirtual #42
894: ldc2_w        #17
897: invokevirtual #59
900: ldc           #41
902: invokevirtual #42
905: invokevirtual #45
908: dload         16
910: ldc2_w        #17
913: dcmpl
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #46
925: new           #39
928: dup
929: invokespecial #40
932: ldc           #41
934: invokevirtual #42
937: dload         18
939: invokevirtual #59
942: ldc           #44
944: invokevirtual #42
947: ldc2_w        #17
950: invokevirtual #59
953: ldc           #41
955: invokevirtual #42
958: invokevirtual #45
961: dload         18
963: ldc2_w        #17
966: dcmpl
967: ifne          974
970: iconst_1
971: goto          975
974: iconst_0
975: invokestatic  #46
978: new           #39
981: dup
982: invokespecial #40
985: ldc           #41
987: invokevirtual #42
990: dload         20
992: invokevirtual #59
995: ldc           #44
997: invokevirtual #42
1000: ldc2_w        #19
1003: invokevirtual #59
1006: ldc           #41
1008: invokevirtual #42
1011: invokevirtual #45
1014: dload         20
1016: ldc2_w        #19
1019: dcmpl
1020: ifne          1027
1023: iconst_1
1024: goto          1028
1027: iconst_0
1028: invokestatic  #46
1031: new           #39
1034: dup
1035: invokespecial #40
1038: ldc           #41
1040: invokevirtual #42
1043: iload         25
1045: invokevirtual #43
1048: ldc           #44
1050: invokevirtual #42
1053: iconst_0
1054: invokevirtual #43
1057: ldc           #41
1059: invokevirtual #42
1062: invokevirtual #45
1065: iload         25
1067: ifne          1074
1070: iconst_1
1071: goto          1075
1074: iconst_0
1075: invokestatic  #46
1078: new           #39
1081: dup
1082: invokespecial #40
1085: ldc           #41
1087: invokevirtual #42
1090: iload         26
1092: invokevirtual #43
1095: ldc           #44
1097: invokevirtual #42
1100: iconst_0
1101: invokevirtual #43
1104: ldc           #41
1106: invokevirtual #42
1109: invokevirtual #45
1112: iload         26
1114: ifne          1121
1117: iconst_1
1118: goto          1122
1121: iconst_0
1122: invokestatic  #46
1125: new           #39
1128: dup
1129: invokespecial #40
1132: ldc           #41
1134: invokevirtual #42
1137: iload         27
1139: invokevirtual #43
1142: ldc           #44
1144: invokevirtual #42
1147: iconst_0
1148: invokevirtual #43
1151: ldc           #41
1153: invokevirtual #42
1156: invokevirtual #45
1159: iload         27
1161: ifne          1168
1164: iconst_1
1165: goto          1169
1168: iconst_0
1169: invokestatic  #46
1172: aload         29
1174: invokestatic  #47
1177: aload         29
1179: invokestatic  #48
1182: ldc           #49
1184: invokestatic  #50
1187: aload         32
1189: invokestatic  #47
1192: aload         32
1194: invokestatic  #48
1197: ldc           #49
1199: invokestatic  #50
1202: new           #39
1205: dup
1206: invokespecial #40
1209: ldc           #41
1211: invokevirtual #42
1214: iload         35
1216: invokevirtual #43
1219: ldc           #44
1221: invokevirtual #42
1224: iconst_0
1225: invokevirtual #43
1228: ldc           #41
1230: invokevirtual #42
1233: invokevirtual #45
1236: iload         35
1238: ifne          1245
1241: iconst_1
1242: goto          1246
1245: iconst_0
1246: invokestatic  #46
1249: new           #39
1252: dup
1253: invokespecial #40
1256: ldc           #41
1258: invokevirtual #42
1261: iload         36
1263: invokevirtual #43
1266: ldc           #44
1268: invokevirtual #42
1271: iconst_0
1272: invokevirtual #43
1275: ldc           #41
1277: invokevirtual #42
1280: invokevirtual #45
1283: iload         36
1285: ifne          1292
1288: iconst_1
1289: goto          1293
1292: iconst_0
1293: invokestatic  #46
1296: new           #39
1299: dup
1300: invokespecial #40
1303: ldc           #41
1305: invokevirtual #42
1308: iload         37
1310: invokevirtual #43
1313: ldc           #44
1315: invokevirtual #42
1318: iconst_0
1319: invokevirtual #43
1322: ldc           #41
1324: invokevirtual #42
1327: invokevirtual #45
1330: iload         37
1332: ifne          1339
1335: iconst_1
1336: goto          1340
1339: iconst_0
1340: invokestatic  #46
1343: aload         39
1345: invokestatic  #47
1348: aload         39
1350: invokestatic  #48
1353: ldc           #49
1355: invokestatic  #50
1358: aload         42
1360: invokestatic  #47
1363: aload         42
1365: invokestatic  #48
1368: ldc           #49
1370: invokestatic  #50
1373: return
Exception table:
from    to  target type
517   538   541   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test168
Start line: 9041
End line: 9076
Method source code: 
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer();
        int int1 = levenbergMarquardtOptimizer0.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter2 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer0);
        double[] doubleArray9 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray10 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair12 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray9, doubleArray10, true);
        double[] doubleArray13 = vectorialPointValuePair12.getValue();
        double[] doubleArray14 = vectorialPointValuePair12.getValue();
        double[] doubleArray15 = vectorialPointValuePair12.getPoint();
        double[] doubleArray16 = vectorialPointValuePair12.getValueRef();
        double[] doubleArray17 = vectorialPointValuePair12.getPoint();
        double[] doubleArray18 = vectorialPointValuePair12.getPointRef();
        double[] doubleArray19 = vectorialPointValuePair12.getPointRef();
        double[] doubleArray20 = gaussianFitter2.fit(doubleArray19);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray21 = gaussianFitter2.getObservations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #516
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: invokespecial #485
32: astore_1
33: aload_1
34: invokevirtual #23
37: istore_2
38: new           #24
41: dup
42: aload_1
43: invokespecial #25
46: astore_3
47: bipush        6
49: newarray       double
51: dup
52: iconst_0
53: ldc2_w        #27
56: dastore
57: dup
58: iconst_1
59: ldc2_w        #9
62: dastore
63: dup
64: iconst_2
65: ldc2_w        #13
68: dastore
69: dup
70: iconst_3
71: ldc2_w        #29
74: dastore
75: dup
76: iconst_4
77: ldc2_w        #17
80: dastore
81: dup
82: iconst_5
83: ldc2_w        #31
86: dastore
87: astore        4
89: aconst_null
90: astore        5
92: new           #33
95: dup
96: aload         4
98: aload         5
100: iconst_1
101: invokespecial #34
104: astore        6
106: aload         6
108: invokevirtual #74
111: astore        7
113: aload         6
115: invokevirtual #74
118: astore        8
120: aload         6
122: invokevirtual #75
125: astore        9
127: aload         6
129: invokevirtual #183
132: astore        10
134: aload         6
136: invokevirtual #75
139: astore        11
141: aload         6
143: invokevirtual #151
146: astore        12
148: aload         6
150: invokevirtual #151
153: astore        13
155: aload_3
156: aload         13
158: invokevirtual #54
161: astore        14
163: aload_3
164: invokevirtual #62
167: astore        15
169: new           #39
172: dup
173: invokespecial #40
176: ldc           #41
178: invokevirtual #42
181: iload_2
182: invokevirtual #43
185: ldc           #44
187: invokevirtual #42
190: iconst_0
191: invokevirtual #43
194: ldc           #41
196: invokevirtual #42
199: invokevirtual #45
202: iload_2
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #46
214: aload         4
216: invokestatic  #47
219: aload         4
221: invokestatic  #48
224: ldc           #49
226: invokestatic  #50
229: aload         7
231: invokestatic  #76
234: aload         8
236: invokestatic  #76
239: aload         9
241: invokestatic  #47
244: aload         9
246: invokestatic  #48
249: ldc           #49
251: invokestatic  #50
254: aload         10
256: invokestatic  #76
259: aload         11
261: invokestatic  #47
264: aload         11
266: invokestatic  #48
269: ldc           #49
271: invokestatic  #50
274: aload         12
276: invokestatic  #47
279: aload         12
281: invokestatic  #48
284: ldc           #49
286: invokestatic  #50
289: aload         13
291: invokestatic  #47
294: aload         13
296: invokestatic  #48
299: ldc           #49
301: invokestatic  #50
304: aload         14
306: invokestatic  #47
309: aload         14
311: invokestatic  #48
314: ldc           #49
316: invokestatic  #50
319: aload         15
321: invokestatic  #47
324: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test169
Start line: 9079
End line: 9142
Method source code: 
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        gaussianFitter15.clearObservations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int29 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.fitting.CurveFitter curveFitter30 = new org.apache.commons.math.optimization.fitting.CurveFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer22);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction31 = null;
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer37 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker40 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer37.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker40);
        int int42 = levenbergMarquardtOptimizer37.getMaxEvaluations();
        int int43 = levenbergMarquardtOptimizer37.getMaxEvaluations();
        int int44 = levenbergMarquardtOptimizer37.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter45 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer37);
        double[] doubleArray52 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray53 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray53, true);
        double[] doubleArray56 = gaussianFitter45.fit(doubleArray52);
        double[] doubleArray57 = curveFitter30.fit(parametricUnivariateRealFunction31, doubleArray52);
        double[] doubleArray58 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray58);
        double[] doubleArray60 = vectorialPointValuePair59.getPointRef();
        double[] doubleArray61 = vectorialPointValuePair59.getPointRef();
        double[] doubleArray62 = gaussianFitter15.fit(doubleArray61);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray63 = gaussianFitter15.getObservations();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(weightedObservedPointArray63);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #517
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #53
86: istore        7
88: aload_1
89: invokevirtual #58
92: dstore        8
94: new           #24
97: dup
98: aload_1
99: invokespecial #25
102: astore        10
104: aload         10
106: invokevirtual #52
109: new           #8
112: dup
113: ldc2_w        #9
116: ldc2_w        #11
119: ldc2_w        #13
122: dconst_1
123: ldc2_w        #13
126: invokespecial #15
129: astore        11
131: new           #16
134: dup
135: ldc2_w        #17
138: ldc2_w        #19
141: invokespecial #21
144: astore        12
146: aload         11
148: aload         12
150: invokevirtual #22
153: aload         11
155: invokevirtual #23
158: istore        13
160: aload         11
162: invokevirtual #23
165: istore        14
167: aload         11
169: invokevirtual #53
172: istore        15
174: new           #67
177: dup
178: aload         11
180: invokespecial #68
183: astore        16
185: aconst_null
186: astore        17
188: new           #8
191: dup
192: ldc2_w        #9
195: ldc2_w        #11
198: ldc2_w        #13
201: dconst_1
202: ldc2_w        #13
205: invokespecial #15
208: astore        18
210: new           #16
213: dup
214: ldc2_w        #17
217: ldc2_w        #19
220: invokespecial #21
223: astore        19
225: aload         18
227: aload         19
229: invokevirtual #22
232: aload         18
234: invokevirtual #23
237: istore        20
239: aload         18
241: invokevirtual #23
244: istore        21
246: aload         18
248: invokevirtual #53
251: istore        22
253: new           #24
256: dup
257: aload         18
259: invokespecial #25
262: astore        23
264: bipush        6
266: newarray       double
268: dup
269: iconst_0
270: ldc2_w        #27
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #9
279: dastore
280: dup
281: iconst_2
282: ldc2_w        #13
285: dastore
286: dup
287: iconst_3
288: ldc2_w        #29
291: dastore
292: dup
293: iconst_4
294: ldc2_w        #17
297: dastore
298: dup
299: iconst_5
300: ldc2_w        #31
303: dastore
304: astore        24
306: aconst_null
307: astore        25
309: new           #33
312: dup
313: aload         24
315: aload         25
317: iconst_1
318: invokespecial #34
321: astore        26
323: aload         23
325: aload         24
327: invokevirtual #54
330: astore        27
332: aload         16
334: aload         17
336: aload         24
338: invokevirtual #89
341: astore        28
343: aconst_null
344: astore        29
346: new           #33
349: dup
350: aload         24
352: aload         29
354: invokespecial #109
357: astore        30
359: aload         30
361: invokevirtual #151
364: astore        31
366: aload         30
368: invokevirtual #151
371: astore        32
373: aload         10
375: aload         32
377: invokevirtual #54
380: astore        33
382: aload         10
384: invokevirtual #62
387: astore        34
389: new           #39
392: dup
393: invokespecial #40
396: ldc           #41
398: invokevirtual #42
401: iload_3
402: invokevirtual #43
405: ldc           #44
407: invokevirtual #42
410: iconst_0
411: invokevirtual #43
414: ldc           #41
416: invokevirtual #42
419: invokevirtual #45
422: iload_3
423: ifne          430
426: iconst_1
427: goto          431
430: iconst_0
431: invokestatic  #46
434: new           #39
437: dup
438: invokespecial #40
441: ldc           #41
443: invokevirtual #42
446: iload         4
448: invokevirtual #43
451: ldc           #44
453: invokevirtual #42
456: iconst_0
457: invokevirtual #43
460: ldc           #41
462: invokevirtual #42
465: invokevirtual #45
468: iload         4
470: ifne          477
473: iconst_1
474: goto          478
477: iconst_0
478: invokestatic  #46
481: new           #39
484: dup
485: invokespecial #40
488: ldc           #41
490: invokevirtual #42
493: dload         5
495: invokevirtual #59
498: ldc           #44
500: invokevirtual #42
503: dconst_0
504: invokevirtual #59
507: ldc           #41
509: invokevirtual #42
512: invokevirtual #45
515: dload         5
517: dconst_0
518: dcmpl
519: ifne          526
522: iconst_1
523: goto          527
526: iconst_0
527: invokestatic  #46
530: new           #39
533: dup
534: invokespecial #40
537: ldc           #41
539: invokevirtual #42
542: iload         7
544: invokevirtual #43
547: ldc           #44
549: invokevirtual #42
552: iconst_0
553: invokevirtual #43
556: ldc           #41
558: invokevirtual #42
561: invokevirtual #45
564: iload         7
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #46
577: new           #39
580: dup
581: invokespecial #40
584: ldc           #41
586: invokevirtual #42
589: dload         8
591: invokevirtual #59
594: ldc           #44
596: invokevirtual #42
599: dconst_0
600: invokevirtual #59
603: ldc           #41
605: invokevirtual #42
608: invokevirtual #45
611: dload         8
613: dconst_0
614: dcmpl
615: ifne          622
618: iconst_1
619: goto          623
622: iconst_0
623: invokestatic  #46
626: new           #39
629: dup
630: invokespecial #40
633: ldc           #41
635: invokevirtual #42
638: iload         13
640: invokevirtual #43
643: ldc           #44
645: invokevirtual #42
648: iconst_0
649: invokevirtual #43
652: ldc           #41
654: invokevirtual #42
657: invokevirtual #45
660: iload         13
662: ifne          669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #46
673: new           #39
676: dup
677: invokespecial #40
680: ldc           #41
682: invokevirtual #42
685: iload         14
687: invokevirtual #43
690: ldc           #44
692: invokevirtual #42
695: iconst_0
696: invokevirtual #43
699: ldc           #41
701: invokevirtual #42
704: invokevirtual #45
707: iload         14
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #46
720: new           #39
723: dup
724: invokespecial #40
727: ldc           #41
729: invokevirtual #42
732: iload         15
734: invokevirtual #43
737: ldc           #44
739: invokevirtual #42
742: iconst_0
743: invokevirtual #43
746: ldc           #41
748: invokevirtual #42
751: invokevirtual #45
754: iload         15
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #46
767: new           #39
770: dup
771: invokespecial #40
774: ldc           #41
776: invokevirtual #42
779: iload         20
781: invokevirtual #43
784: ldc           #44
786: invokevirtual #42
789: iconst_0
790: invokevirtual #43
793: ldc           #41
795: invokevirtual #42
798: invokevirtual #45
801: iload         20
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #46
814: new           #39
817: dup
818: invokespecial #40
821: ldc           #41
823: invokevirtual #42
826: iload         21
828: invokevirtual #43
831: ldc           #44
833: invokevirtual #42
836: iconst_0
837: invokevirtual #43
840: ldc           #41
842: invokevirtual #42
845: invokevirtual #45
848: iload         21
850: ifne          857
853: iconst_1
854: goto          858
857: iconst_0
858: invokestatic  #46
861: new           #39
864: dup
865: invokespecial #40
868: ldc           #41
870: invokevirtual #42
873: iload         22
875: invokevirtual #43
878: ldc           #44
880: invokevirtual #42
883: iconst_0
884: invokevirtual #43
887: ldc           #41
889: invokevirtual #42
892: invokevirtual #45
895: iload         22
897: ifne          904
900: iconst_1
901: goto          905
904: iconst_0
905: invokestatic  #46
908: aload         24
910: invokestatic  #47
913: aload         24
915: invokestatic  #48
918: ldc           #49
920: invokestatic  #50
923: aload         27
925: invokestatic  #47
928: aload         27
930: invokestatic  #48
933: ldc           #49
935: invokestatic  #50
938: aload         28
940: invokestatic  #47
943: aload         28
945: invokestatic  #48
948: ldc           #49
950: invokestatic  #50
953: aload         31
955: invokestatic  #47
958: aload         31
960: invokestatic  #48
963: ldc           #49
965: invokestatic  #50
968: aload         32
970: invokestatic  #47
973: aload         32
975: invokestatic  #48
978: ldc           #49
980: invokestatic  #50
983: aload         33
985: invokestatic  #47
988: aload         33
990: invokestatic  #48
993: ldc           #49
995: invokestatic  #50
998: aload         34
1000: invokestatic  #47
1003: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test170
Start line: 9145
End line: 9205
Method source code: 
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = vectorialPointValuePair23.getValue();
        double[] doubleArray25 = vectorialPointValuePair23.getValue();
        double[] doubleArray26 = vectorialPointValuePair23.getPoint();
        double[] doubleArray33 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray34 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray34, true);
        double[] doubleArray37 = vectorialPointValuePair36.getValue();
        double[] doubleArray38 = vectorialPointValuePair36.getValue();
        double[] doubleArray39 = vectorialPointValuePair36.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair41 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray26, doubleArray39, false);
        double[] doubleArray42 = gaussianFitter12.fit(doubleArray26);
        org.apache.commons.math.analysis.ParametricUnivariateRealFunction parametricUnivariateRealFunction43 = null;
        double[] doubleArray50 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray51 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray51, true);
        double[] doubleArray54 = vectorialPointValuePair53.getValue();
        double[] doubleArray55 = vectorialPointValuePair53.getValue();
        double[] doubleArray56 = vectorialPointValuePair53.getPoint();
        double[] doubleArray57 = vectorialPointValuePair53.getPointRef();
        double[] doubleArray58 = gaussianFitter12.fit(parametricUnivariateRealFunction43, doubleArray57);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #518
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: bipush        6
95: newarray       double
97: dup
98: iconst_0
99: ldc2_w        #27
102: dastore
103: dup
104: iconst_1
105: ldc2_w        #9
108: dastore
109: dup
110: iconst_2
111: ldc2_w        #13
114: dastore
115: dup
116: iconst_3
117: ldc2_w        #29
120: dastore
121: dup
122: iconst_4
123: ldc2_w        #17
126: dastore
127: dup
128: iconst_5
129: ldc2_w        #31
132: dastore
133: astore        7
135: aconst_null
136: astore        8
138: new           #33
141: dup
142: aload         7
144: aload         8
146: iconst_1
147: invokespecial #34
150: astore        9
152: aload         9
154: invokevirtual #74
157: astore        10
159: aload         9
161: invokevirtual #74
164: astore        11
166: aload         9
168: invokevirtual #75
171: astore        12
173: bipush        6
175: newarray       double
177: dup
178: iconst_0
179: ldc2_w        #27
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #9
188: dastore
189: dup
190: iconst_2
191: ldc2_w        #13
194: dastore
195: dup
196: iconst_3
197: ldc2_w        #29
200: dastore
201: dup
202: iconst_4
203: ldc2_w        #17
206: dastore
207: dup
208: iconst_5
209: ldc2_w        #31
212: dastore
213: astore        13
215: aconst_null
216: astore        14
218: new           #33
221: dup
222: aload         13
224: aload         14
226: iconst_1
227: invokespecial #34
230: astore        15
232: aload         15
234: invokevirtual #74
237: astore        16
239: aload         15
241: invokevirtual #74
244: astore        17
246: aload         15
248: invokevirtual #75
251: astore        18
253: new           #33
256: dup
257: aload         12
259: aload         18
261: iconst_0
262: invokespecial #34
265: astore        19
267: aload         5
269: aload         12
271: invokevirtual #54
274: astore        20
276: aconst_null
277: astore        21
279: bipush        6
281: newarray       double
283: dup
284: iconst_0
285: ldc2_w        #27
288: dastore
289: dup
290: iconst_1
291: ldc2_w        #9
294: dastore
295: dup
296: iconst_2
297: ldc2_w        #13
300: dastore
301: dup
302: iconst_3
303: ldc2_w        #29
306: dastore
307: dup
308: iconst_4
309: ldc2_w        #17
312: dastore
313: dup
314: iconst_5
315: ldc2_w        #31
318: dastore
319: astore        22
321: aconst_null
322: astore        23
324: new           #33
327: dup
328: aload         22
330: aload         23
332: iconst_1
333: invokespecial #34
336: astore        24
338: aload         24
340: invokevirtual #74
343: astore        25
345: aload         24
347: invokevirtual #74
350: astore        26
352: aload         24
354: invokevirtual #75
357: astore        27
359: aload         24
361: invokevirtual #151
364: astore        28
366: aload         5
368: aload         21
370: aload         28
372: invokevirtual #55
375: astore        29
377: new           #39
380: dup
381: invokespecial #40
384: ldc           #41
386: invokevirtual #42
389: iload_3
390: invokevirtual #43
393: ldc           #44
395: invokevirtual #42
398: iconst_0
399: invokevirtual #43
402: ldc           #41
404: invokevirtual #42
407: invokevirtual #45
410: iload_3
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #46
422: new           #39
425: dup
426: invokespecial #40
429: ldc           #41
431: invokevirtual #42
434: iload         4
436: invokevirtual #43
439: ldc           #44
441: invokevirtual #42
444: iconst_0
445: invokevirtual #43
448: ldc           #41
450: invokevirtual #42
453: invokevirtual #45
456: iload         4
458: ifne          465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #46
469: aload         6
471: invokestatic  #47
474: aload         7
476: invokestatic  #47
479: aload         7
481: invokestatic  #48
484: ldc           #49
486: invokestatic  #50
489: aload         10
491: invokestatic  #76
494: aload         11
496: invokestatic  #76
499: aload         12
501: invokestatic  #47
504: aload         12
506: invokestatic  #48
509: ldc           #49
511: invokestatic  #50
514: aload         13
516: invokestatic  #47
519: aload         13
521: invokestatic  #48
524: ldc           #49
526: invokestatic  #50
529: aload         16
531: invokestatic  #76
534: aload         17
536: invokestatic  #76
539: aload         18
541: invokestatic  #47
544: aload         18
546: invokestatic  #48
549: ldc           #49
551: invokestatic  #50
554: aload         20
556: invokestatic  #47
559: aload         20
561: invokestatic  #48
564: ldc           #49
566: invokestatic  #50
569: aload         22
571: invokestatic  #47
574: aload         22
576: invokestatic  #48
579: ldc           #49
581: invokestatic  #50
584: aload         25
586: invokestatic  #76
589: aload         26
591: invokestatic  #76
594: aload         27
596: invokestatic  #47
599: aload         27
601: invokestatic  #48
604: ldc           #49
606: invokestatic  #50
609: aload         28
611: invokestatic  #47
614: aload         28
616: invokestatic  #48
619: ldc           #49
621: invokestatic  #50
624: aload         29
626: invokestatic  #47
629: aload         29
631: invokestatic  #48
634: ldc           #49
636: invokestatic  #50
639: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test171
Start line: 9208
End line: 9267
Method source code: 
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        int int13 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        double double14 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter15 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        int int16 = levenbergMarquardtOptimizer5.getJacobianEvaluations();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer22.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker25);
        int int27 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        int int28 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        double double29 = levenbergMarquardtOptimizer22.getChiSquare();
        int int30 = levenbergMarquardtOptimizer22.getEvaluations();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker31 = null;
        levenbergMarquardtOptimizer22.setConvergenceChecker(vectorialPointValuePairConvergenceChecker31);
        int int33 = levenbergMarquardtOptimizer22.getMaxEvaluations();
        double double34 = levenbergMarquardtOptimizer22.getRMS();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker35 = levenbergMarquardtOptimizer22.getConvergenceChecker();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker36 = levenbergMarquardtOptimizer22.getConvergenceChecker();
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer42 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker45 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer42.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker45);
        int int47 = levenbergMarquardtOptimizer42.getMaxEvaluations();
        int int48 = levenbergMarquardtOptimizer42.getMaxEvaluations();
        double double49 = levenbergMarquardtOptimizer42.getChiSquare();
        int int50 = levenbergMarquardtOptimizer42.getEvaluations();
        int int51 = levenbergMarquardtOptimizer42.getEvaluations();
        double double52 = levenbergMarquardtOptimizer42.getChiSquare();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker53 = levenbergMarquardtOptimizer42.getConvergenceChecker();
        levenbergMarquardtOptimizer22.setConvergenceChecker(vectorialPointValuePairConvergenceChecker53);
        levenbergMarquardtOptimizer5.setConvergenceChecker(vectorialPointValuePairConvergenceChecker53);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNull(vectorialPointValuePairConvergenceChecker35);
        org.junit.Assert.assertNull(vectorialPointValuePairConvergenceChecker36);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker53);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #519
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #160
86: istore        7
88: aload_1
89: invokevirtual #58
92: dstore        8
94: new           #24
97: dup
98: aload_1
99: invokespecial #25
102: astore        10
104: aload_1
105: invokevirtual #160
108: istore        11
110: new           #8
113: dup
114: ldc2_w        #9
117: ldc2_w        #11
120: ldc2_w        #13
123: dconst_1
124: ldc2_w        #13
127: invokespecial #15
130: astore        12
132: new           #16
135: dup
136: ldc2_w        #17
139: ldc2_w        #19
142: invokespecial #21
145: astore        13
147: aload         12
149: aload         13
151: invokevirtual #22
154: aload         12
156: invokevirtual #23
159: istore        14
161: aload         12
163: invokevirtual #23
166: istore        15
168: aload         12
170: invokevirtual #58
173: dstore        16
175: aload         12
177: invokevirtual #53
180: istore        18
182: aconst_null
183: astore        19
185: aload         12
187: aload         19
189: invokevirtual #22
192: aload         12
194: invokevirtual #23
197: istore        20
199: aload         12
201: invokevirtual #201
204: dstore        21
206: aload         12
208: invokevirtual #73
211: astore        23
213: aload         12
215: invokevirtual #73
218: astore        24
220: new           #8
223: dup
224: ldc2_w        #9
227: ldc2_w        #11
230: ldc2_w        #13
233: dconst_1
234: ldc2_w        #13
237: invokespecial #15
240: astore        25
242: new           #16
245: dup
246: ldc2_w        #17
249: ldc2_w        #19
252: invokespecial #21
255: astore        26
257: aload         25
259: aload         26
261: invokevirtual #22
264: aload         25
266: invokevirtual #23
269: istore        27
271: aload         25
273: invokevirtual #23
276: istore        28
278: aload         25
280: invokevirtual #58
283: dstore        29
285: aload         25
287: invokevirtual #53
290: istore        31
292: aload         25
294: invokevirtual #53
297: istore        32
299: aload         25
301: invokevirtual #58
304: dstore        33
306: aload         25
308: invokevirtual #73
311: astore        35
313: aload         12
315: aload         35
317: invokevirtual #22
320: aload_1
321: aload         35
323: invokevirtual #22
326: new           #39
329: dup
330: invokespecial #40
333: ldc           #41
335: invokevirtual #42
338: iload_3
339: invokevirtual #43
342: ldc           #44
344: invokevirtual #42
347: iconst_0
348: invokevirtual #43
351: ldc           #41
353: invokevirtual #42
356: invokevirtual #45
359: iload_3
360: ifne          367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #46
371: new           #39
374: dup
375: invokespecial #40
378: ldc           #41
380: invokevirtual #42
383: iload         4
385: invokevirtual #43
388: ldc           #44
390: invokevirtual #42
393: iconst_0
394: invokevirtual #43
397: ldc           #41
399: invokevirtual #42
402: invokevirtual #45
405: iload         4
407: ifne          414
410: iconst_1
411: goto          415
414: iconst_0
415: invokestatic  #46
418: new           #39
421: dup
422: invokespecial #40
425: ldc           #41
427: invokevirtual #42
430: dload         5
432: invokevirtual #59
435: ldc           #44
437: invokevirtual #42
440: dconst_0
441: invokevirtual #59
444: ldc           #41
446: invokevirtual #42
449: invokevirtual #45
452: dload         5
454: dconst_0
455: dcmpl
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #46
467: new           #39
470: dup
471: invokespecial #40
474: ldc           #41
476: invokevirtual #42
479: iload         7
481: invokevirtual #43
484: ldc           #44
486: invokevirtual #42
489: iconst_0
490: invokevirtual #43
493: ldc           #41
495: invokevirtual #42
498: invokevirtual #45
501: iload         7
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #46
514: new           #39
517: dup
518: invokespecial #40
521: ldc           #41
523: invokevirtual #42
526: dload         8
528: invokevirtual #59
531: ldc           #44
533: invokevirtual #42
536: dconst_0
537: invokevirtual #59
540: ldc           #41
542: invokevirtual #42
545: invokevirtual #45
548: dload         8
550: dconst_0
551: dcmpl
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #46
563: new           #39
566: dup
567: invokespecial #40
570: ldc           #41
572: invokevirtual #42
575: iload         11
577: invokevirtual #43
580: ldc           #44
582: invokevirtual #42
585: iconst_0
586: invokevirtual #43
589: ldc           #41
591: invokevirtual #42
594: invokevirtual #45
597: iload         11
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #46
610: new           #39
613: dup
614: invokespecial #40
617: ldc           #41
619: invokevirtual #42
622: iload         14
624: invokevirtual #43
627: ldc           #44
629: invokevirtual #42
632: iconst_0
633: invokevirtual #43
636: ldc           #41
638: invokevirtual #42
641: invokevirtual #45
644: iload         14
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #46
657: new           #39
660: dup
661: invokespecial #40
664: ldc           #41
666: invokevirtual #42
669: iload         15
671: invokevirtual #43
674: ldc           #44
676: invokevirtual #42
679: iconst_0
680: invokevirtual #43
683: ldc           #41
685: invokevirtual #42
688: invokevirtual #45
691: iload         15
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #46
704: new           #39
707: dup
708: invokespecial #40
711: ldc           #41
713: invokevirtual #42
716: dload         16
718: invokevirtual #59
721: ldc           #44
723: invokevirtual #42
726: dconst_0
727: invokevirtual #59
730: ldc           #41
732: invokevirtual #42
735: invokevirtual #45
738: dload         16
740: dconst_0
741: dcmpl
742: ifne          749
745: iconst_1
746: goto          750
749: iconst_0
750: invokestatic  #46
753: new           #39
756: dup
757: invokespecial #40
760: ldc           #41
762: invokevirtual #42
765: iload         18
767: invokevirtual #43
770: ldc           #44
772: invokevirtual #42
775: iconst_0
776: invokevirtual #43
779: ldc           #41
781: invokevirtual #42
784: invokevirtual #45
787: iload         18
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #46
800: new           #39
803: dup
804: invokespecial #40
807: ldc           #41
809: invokevirtual #42
812: iload         20
814: invokevirtual #43
817: ldc           #44
819: invokevirtual #42
822: iconst_0
823: invokevirtual #43
826: ldc           #41
828: invokevirtual #42
831: invokevirtual #45
834: iload         20
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #46
847: dload         21
849: invokestatic  #202
852: invokestatic  #203
855: aload         23
857: invokestatic  #76
860: aload         24
862: invokestatic  #76
865: new           #39
868: dup
869: invokespecial #40
872: ldc           #41
874: invokevirtual #42
877: iload         27
879: invokevirtual #43
882: ldc           #44
884: invokevirtual #42
887: iconst_0
888: invokevirtual #43
891: ldc           #41
893: invokevirtual #42
896: invokevirtual #45
899: iload         27
901: ifne          908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #46
912: new           #39
915: dup
916: invokespecial #40
919: ldc           #41
921: invokevirtual #42
924: iload         28
926: invokevirtual #43
929: ldc           #44
931: invokevirtual #42
934: iconst_0
935: invokevirtual #43
938: ldc           #41
940: invokevirtual #42
943: invokevirtual #45
946: iload         28
948: ifne          955
951: iconst_1
952: goto          956
955: iconst_0
956: invokestatic  #46
959: new           #39
962: dup
963: invokespecial #40
966: ldc           #41
968: invokevirtual #42
971: dload         29
973: invokevirtual #59
976: ldc           #44
978: invokevirtual #42
981: dconst_0
982: invokevirtual #59
985: ldc           #41
987: invokevirtual #42
990: invokevirtual #45
993: dload         29
995: dconst_0
996: dcmpl
997: ifne          1004
1000: iconst_1
1001: goto          1005
1004: iconst_0
1005: invokestatic  #46
1008: new           #39
1011: dup
1012: invokespecial #40
1015: ldc           #41
1017: invokevirtual #42
1020: iload         31
1022: invokevirtual #43
1025: ldc           #44
1027: invokevirtual #42
1030: iconst_0
1031: invokevirtual #43
1034: ldc           #41
1036: invokevirtual #42
1039: invokevirtual #45
1042: iload         31
1044: ifne          1051
1047: iconst_1
1048: goto          1052
1051: iconst_0
1052: invokestatic  #46
1055: new           #39
1058: dup
1059: invokespecial #40
1062: ldc           #41
1064: invokevirtual #42
1067: iload         32
1069: invokevirtual #43
1072: ldc           #44
1074: invokevirtual #42
1077: iconst_0
1078: invokevirtual #43
1081: ldc           #41
1083: invokevirtual #42
1086: invokevirtual #45
1089: iload         32
1091: ifne          1098
1094: iconst_1
1095: goto          1099
1098: iconst_0
1099: invokestatic  #46
1102: new           #39
1105: dup
1106: invokespecial #40
1109: ldc           #41
1111: invokevirtual #42
1114: dload         33
1116: invokevirtual #59
1119: ldc           #44
1121: invokevirtual #42
1124: dconst_0
1125: invokevirtual #59
1128: ldc           #41
1130: invokevirtual #42
1133: invokevirtual #45
1136: dload         33
1138: dconst_0
1139: dcmpl
1140: ifne          1147
1143: iconst_1
1144: goto          1148
1147: iconst_0
1148: invokestatic  #46
1151: aload         35
1153: invokestatic  #47
1156: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test172
Start line: 9270
End line: 9315
Method source code: 
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter12 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint[] weightedObservedPointArray13 = gaussianFitter12.getObservations();
        double[] doubleArray20 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray21 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray21, true);
        double[] doubleArray24 = vectorialPointValuePair23.getValue();
        double[] doubleArray25 = vectorialPointValuePair23.getValue();
        double[] doubleArray26 = vectorialPointValuePair23.getPoint();
        double[] doubleArray33 = new double[] { Double.POSITIVE_INFINITY, (short) -1, (byte) 100, 'a', '#', ' ' };
        double[] doubleArray34 = null;
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray34, true);
        double[] doubleArray37 = vectorialPointValuePair36.getValue();
        double[] doubleArray38 = vectorialPointValuePair36.getValue();
        double[] doubleArray39 = vectorialPointValuePair36.getPoint();
        org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair41 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray26, doubleArray39, false);
        double[] doubleArray42 = gaussianFitter12.fit(doubleArray26);
        org.apache.commons.math.optimization.fitting.WeightedObservedPoint weightedObservedPoint46 = new org.apache.commons.math.optimization.fitting.WeightedObservedPoint((double) 35L, 98.00000000000001d, (-16.91428571428571d));
        double double47 = weightedObservedPoint46.getWeight();
        gaussianFitter12.addObservedPoint(weightedObservedPoint46);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(weightedObservedPointArray13);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[Infinity, -1.0, 100.0, 97.0, 35.0, 32.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 35.0d + "'", double47 == 35.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #520
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: new           #24
79: dup
80: aload_1
81: invokespecial #25
84: astore        5
86: aload         5
88: invokevirtual #62
91: astore        6
93: bipush        6
95: newarray       double
97: dup
98: iconst_0
99: ldc2_w        #27
102: dastore
103: dup
104: iconst_1
105: ldc2_w        #9
108: dastore
109: dup
110: iconst_2
111: ldc2_w        #13
114: dastore
115: dup
116: iconst_3
117: ldc2_w        #29
120: dastore
121: dup
122: iconst_4
123: ldc2_w        #17
126: dastore
127: dup
128: iconst_5
129: ldc2_w        #31
132: dastore
133: astore        7
135: aconst_null
136: astore        8
138: new           #33
141: dup
142: aload         7
144: aload         8
146: iconst_1
147: invokespecial #34
150: astore        9
152: aload         9
154: invokevirtual #74
157: astore        10
159: aload         9
161: invokevirtual #74
164: astore        11
166: aload         9
168: invokevirtual #75
171: astore        12
173: bipush        6
175: newarray       double
177: dup
178: iconst_0
179: ldc2_w        #27
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #9
188: dastore
189: dup
190: iconst_2
191: ldc2_w        #13
194: dastore
195: dup
196: iconst_3
197: ldc2_w        #29
200: dastore
201: dup
202: iconst_4
203: ldc2_w        #17
206: dastore
207: dup
208: iconst_5
209: ldc2_w        #31
212: dastore
213: astore        13
215: aconst_null
216: astore        14
218: new           #33
221: dup
222: aload         13
224: aload         14
226: iconst_1
227: invokespecial #34
230: astore        15
232: aload         15
234: invokevirtual #74
237: astore        16
239: aload         15
241: invokevirtual #74
244: astore        17
246: aload         15
248: invokevirtual #75
251: astore        18
253: new           #33
256: dup
257: aload         12
259: aload         18
261: iconst_0
262: invokespecial #34
265: astore        19
267: aload         5
269: aload         12
271: invokevirtual #54
274: astore        20
276: new           #217
279: dup
280: ldc2_w        #17
283: ldc2_w        #129
286: ldc2_w        #521
289: invokespecial #222
292: astore        21
294: aload         21
296: invokevirtual #223
299: dstore        22
301: aload         5
303: aload         21
305: invokevirtual #174
308: new           #39
311: dup
312: invokespecial #40
315: ldc           #41
317: invokevirtual #42
320: iload_3
321: invokevirtual #43
324: ldc           #44
326: invokevirtual #42
329: iconst_0
330: invokevirtual #43
333: ldc           #41
335: invokevirtual #42
338: invokevirtual #45
341: iload_3
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #46
353: new           #39
356: dup
357: invokespecial #40
360: ldc           #41
362: invokevirtual #42
365: iload         4
367: invokevirtual #43
370: ldc           #44
372: invokevirtual #42
375: iconst_0
376: invokevirtual #43
379: ldc           #41
381: invokevirtual #42
384: invokevirtual #45
387: iload         4
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #46
400: aload         6
402: invokestatic  #47
405: aload         7
407: invokestatic  #47
410: aload         7
412: invokestatic  #48
415: ldc           #49
417: invokestatic  #50
420: aload         10
422: invokestatic  #76
425: aload         11
427: invokestatic  #76
430: aload         12
432: invokestatic  #47
435: aload         12
437: invokestatic  #48
440: ldc           #49
442: invokestatic  #50
445: aload         13
447: invokestatic  #47
450: aload         13
452: invokestatic  #48
455: ldc           #49
457: invokestatic  #50
460: aload         16
462: invokestatic  #76
465: aload         17
467: invokestatic  #76
470: aload         18
472: invokestatic  #47
475: aload         18
477: invokestatic  #48
480: ldc           #49
482: invokestatic  #50
485: aload         20
487: invokestatic  #47
490: aload         20
492: invokestatic  #48
495: ldc           #49
497: invokestatic  #50
500: new           #39
503: dup
504: invokespecial #40
507: ldc           #41
509: invokevirtual #42
512: dload         22
514: invokevirtual #59
517: ldc           #44
519: invokevirtual #42
522: ldc2_w        #17
525: invokevirtual #59
528: ldc           #41
530: invokevirtual #42
533: invokevirtual #45
536: dload         22
538: ldc2_w        #17
541: dcmpl
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #46
553: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/RegressionTest0.class
Class name: RegressionTest0
Method name: test173
Start line: 9318
End line: 9339
Method source code: 
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer((double) (-1.0f), (double) 5.5459714E30f, (double) 100, 1.0d, (double) 100L);
        org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', (double) '4');
        levenbergMarquardtOptimizer5.setConvergenceChecker((org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair>) simpleVectorialValueChecker8);
        int int10 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int11 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        double double12 = levenbergMarquardtOptimizer5.getChiSquare();
        org.apache.commons.math.optimization.ConvergenceChecker<org.apache.commons.math.optimization.VectorialPointValuePair> vectorialPointValuePairConvergenceChecker13 = levenbergMarquardtOptimizer5.getConvergenceChecker();
        int int14 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int15 = levenbergMarquardtOptimizer5.getMaxEvaluations();
        int int16 = levenbergMarquardtOptimizer5.getEvaluations();
        org.apache.commons.math.optimization.fitting.GaussianFitter gaussianFitter17 = new org.apache.commons.math.optimization.fitting.GaussianFitter((org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer) levenbergMarquardtOptimizer5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vectorialPointValuePairConvergenceChecker13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #523
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc2_w        #9
32: ldc2_w        #11
35: ldc2_w        #13
38: dconst_1
39: ldc2_w        #13
42: invokespecial #15
45: astore_1
46: new           #16
49: dup
50: ldc2_w        #17
53: ldc2_w        #19
56: invokespecial #21
59: astore_2
60: aload_1
61: aload_2
62: invokevirtual #22
65: aload_1
66: invokevirtual #23
69: istore_3
70: aload_1
71: invokevirtual #23
74: istore        4
76: aload_1
77: invokevirtual #58
80: dstore        5
82: aload_1
83: invokevirtual #73
86: astore        7
88: aload_1
89: invokevirtual #23
92: istore        8
94: aload_1
95: invokevirtual #23
98: istore        9
100: aload_1
101: invokevirtual #53
104: istore        10
106: new           #24
109: dup
110: aload_1
111: invokespecial #25
114: astore        11
116: new           #39
119: dup
120: invokespecial #40
123: ldc           #41
125: invokevirtual #42
128: iload_3
129: invokevirtual #43
132: ldc           #44
134: invokevirtual #42
137: iconst_0
138: invokevirtual #43
141: ldc           #41
143: invokevirtual #42
146: invokevirtual #45
149: iload_3
150: ifne          157
153: iconst_1
154: goto          158
157: iconst_0
158: invokestatic  #46
161: new           #39
164: dup
165: invokespecial #40
168: ldc           #41
170: invokevirtual #42
173: iload         4
175: invokevirtual #43
178: ldc           #44
180: invokevirtual #42
183: iconst_0
184: invokevirtual #43
187: ldc           #41
189: invokevirtual #42
192: invokevirtual #45
195: iload         4
197: ifne          204
200: iconst_1
201: goto          205
204: iconst_0
205: invokestatic  #46
208: new           #39
211: dup
212: invokespecial #40
215: ldc           #41
217: invokevirtual #42
220: dload         5
222: invokevirtual #59
225: ldc           #44
227: invokevirtual #42
230: dconst_0
231: invokevirtual #59
234: ldc           #41
236: invokevirtual #42
239: invokevirtual #45
242: dload         5
244: dconst_0
245: dcmpl
246: ifne          253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #46
257: aload         7
259: invokestatic  #47
262: new           #39
265: dup
266: invokespecial #40
269: ldc           #41
271: invokevirtual #42
274: iload         8
276: invokevirtual #43
279: ldc           #44
281: invokevirtual #42
284: iconst_0
285: invokevirtual #43
288: ldc           #41
290: invokevirtual #42
293: invokevirtual #45
296: iload         8
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #46
309: new           #39
312: dup
313: invokespecial #40
316: ldc           #41
318: invokevirtual #42
321: iload         9
323: invokevirtual #43
326: ldc           #44
328: invokevirtual #42
331: iconst_0
332: invokevirtual #43
335: ldc           #41
337: invokevirtual #42
340: invokevirtual #45
343: iload         9
345: ifne          352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #46
356: new           #39
359: dup
360: invokespecial #40
363: ldc           #41
365: invokevirtual #42
368: iload         10
370: invokevirtual #43
373: ldc           #44
375: invokevirtual #42
378: iconst_0
379: invokevirtual #43
382: ldc           #41
384: invokevirtual #42
387: invokevirtual #45
390: iload         10
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #46
403: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test00
Start line: 19
End line: 32
Method source code: 
  public void test00()  throws Throwable  {
      GaussianFitter gaussianFitter0 = new GaussianFitter((DifferentiableMultivariateVectorialOptimizer) null);
      // Undeclared exception!
      try { 
        gaussianFitter0.fit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 0 is smaller than the minimum (3)
         //
         verifyException("org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: aconst_null
5: checkcast     #3
8: invokespecial #4
11: astore_1
12: aload_1
13: invokevirtual #5
16: pop
17: ldc           #6
19: invokestatic  #7
22: goto          32
25: astore_2
26: ldc           #9
28: aload_2
29: invokestatic  #10
32: return
Exception table:
from    to  target type
12    22    25   Class java/lang/RuntimeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test01
Start line: 35
End line: 49
Method source code: 
  public void test01()  throws Throwable  {
      GaussianFitter gaussianFitter0 = new GaussianFitter((DifferentiableMultivariateVectorialOptimizer) null);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        gaussianFitter0.fit(doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.optimization.fitting.CurveFitter", e);
      }
  }
Method byte code: 
0: new           #2
3: dup
4: aconst_null
5: checkcast     #3
8: invokespecial #4
11: astore_1
12: iconst_0
13: newarray       double
15: astore_2
16: aload_1
17: aload_2
18: invokevirtual #11
21: pop
22: ldc           #12
24: invokestatic  #7
27: goto          37
30: astore_3
31: ldc           #14
33: aload_3
34: invokestatic  #10
37: return
Exception table:
from    to  target type
16    27    30   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test02
Start line: 52
End line: 64
Method source code: 
  public void test02()  throws Throwable  {
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = null;
      try {
        gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser((WeightedObservedPoint[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // null is not allowed: input array
         //
         verifyException("org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser", e);
      }
  }
Method byte code: 
0: aconst_null
1: astore_1
2: new           #15
5: dup
6: aconst_null
7: checkcast     #16
10: invokespecial #17
13: astore_1
14: ldc           #6
16: invokestatic  #7
19: goto          29
22: astore_2
23: ldc           #9
25: aload_2
26: invokestatic  #10
29: return
Exception table:
from    to  target type
2    19    22   Class java/lang/RuntimeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test03
Start line: 67
End line: 77
Method source code: 
  public void test03()  throws Throwable  {
      WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(1.0, 1.0, 1.0);
      WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[3];
      weightedObservedPointArray0[0] = weightedObservedPoint0;
      weightedObservedPointArray0[1] = weightedObservedPoint0;
      weightedObservedPointArray0[2] = weightedObservedPoint0;
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
      gaussianFitter_ParameterGuesser0.guess();
      double[] doubleArray0 = gaussianFitter_ParameterGuesser0.guess();
      assertArrayEquals(new double[] {1.0, 1.0, 0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: new           #18
3: dup
4: dconst_1
5: dconst_1
6: dconst_1
7: invokespecial #19
10: astore_1
11: iconst_3
12: anewarray     #18
15: astore_2
16: aload_2
17: iconst_0
18: aload_1
19: aastore
20: aload_2
21: iconst_1
22: aload_1
23: aastore
24: aload_2
25: iconst_2
26: aload_1
27: aastore
28: new           #15
31: dup
32: aload_2
33: invokespecial #17
36: astore_3
37: aload_3
38: invokevirtual #20
41: pop
42: aload_3
43: invokevirtual #20
46: astore        4
48: iconst_3
49: newarray       double
51: dup
52: iconst_0
53: dconst_1
54: dastore
55: dup
56: iconst_1
57: dconst_1
58: dastore
59: dup
60: iconst_2
61: dconst_0
62: dastore
63: aload         4
65: ldc2_w        #21
68: invokestatic  #23
71: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test04
Start line: 80
End line: 90
Method source code: 
  public void test04()  throws Throwable  {
      WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(2.0, 2.0, 2.0);
      WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[3];
      weightedObservedPointArray0[0] = weightedObservedPoint0;
      WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint(2.0, 2.0, Double.NEGATIVE_INFINITY);
      weightedObservedPointArray0[1] = weightedObservedPoint1;
      weightedObservedPointArray0[2] = weightedObservedPoint0;
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
      double[] doubleArray0 = gaussianFitter_ParameterGuesser0.guess();
      assertArrayEquals(new double[] {2.0, 2.0, 0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: new           #18
3: dup
4: ldc2_w        #24
7: ldc2_w        #24
10: ldc2_w        #24
13: invokespecial #19
16: astore_1
17: iconst_3
18: anewarray     #18
21: astore_2
22: aload_2
23: iconst_0
24: aload_1
25: aastore
26: new           #18
29: dup
30: ldc2_w        #24
33: ldc2_w        #24
36: ldc2_w        #27
39: invokespecial #19
42: astore_3
43: aload_2
44: iconst_1
45: aload_3
46: aastore
47: aload_2
48: iconst_2
49: aload_1
50: aastore
51: new           #15
54: dup
55: aload_2
56: invokespecial #17
59: astore        4
61: aload         4
63: invokevirtual #20
66: astore        5
68: iconst_3
69: newarray       double
71: dup
72: iconst_0
73: ldc2_w        #24
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #24
82: dastore
83: dup
84: iconst_2
85: dconst_0
86: dastore
87: aload         5
89: ldc2_w        #21
92: invokestatic  #23
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test05
Start line: 93
End line: 103
Method source code: 
  public void test05()  throws Throwable  {
      WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[3];
      WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint((-1157.7325489484988), (-1157.7325489484988), (-1157.7325489484988));
      weightedObservedPointArray0[0] = weightedObservedPoint0;
      WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint((-1157.7325489484988), (-1157.7325489484988), 392.6);
      weightedObservedPointArray0[1] = weightedObservedPoint1;
      weightedObservedPointArray0[2] = weightedObservedPoint1;
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
      double[] doubleArray0 = gaussianFitter_ParameterGuesser0.guess();
      assertArrayEquals(new double[] {392.6, (-1157.7325489484988), 0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: iconst_3
1: anewarray     #18
4: astore_1
5: new           #18
8: dup
9: ldc2_w        #29
12: ldc2_w        #29
15: ldc2_w        #29
18: invokespecial #19
21: astore_2
22: aload_1
23: iconst_0
24: aload_2
25: aastore
26: new           #18
29: dup
30: ldc2_w        #29
33: ldc2_w        #29
36: ldc2_w        #31
39: invokespecial #19
42: astore_3
43: aload_1
44: iconst_1
45: aload_3
46: aastore
47: aload_1
48: iconst_2
49: aload_3
50: aastore
51: new           #15
54: dup
55: aload_1
56: invokespecial #17
59: astore        4
61: aload         4
63: invokevirtual #20
66: astore        5
68: iconst_3
69: newarray       double
71: dup
72: iconst_0
73: ldc2_w        #31
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #29
82: dastore
83: dup
84: iconst_2
85: dconst_0
86: dastore
87: aload         5
89: ldc2_w        #21
92: invokestatic  #23
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test06
Start line: 106
End line: 116
Method source code: 
  public void test06()  throws Throwable  {
      WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(2.0, 2.0, (-1994.43));
      WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[3];
      weightedObservedPointArray0[0] = weightedObservedPoint0;
      WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint((-1994.43), 2.0, Double.NEGATIVE_INFINITY);
      weightedObservedPointArray0[1] = weightedObservedPoint1;
      weightedObservedPointArray0[2] = weightedObservedPoint0;
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
      double[] doubleArray0 = gaussianFitter_ParameterGuesser0.guess();
      assertArrayEquals(new double[] {(-1994.43), 2.0, 0.0}, doubleArray0, 0.01);
  }
Method byte code: 
0: new           #18
3: dup
4: ldc2_w        #24
7: ldc2_w        #24
10: ldc2_w        #33
13: invokespecial #19
16: astore_1
17: iconst_3
18: anewarray     #18
21: astore_2
22: aload_2
23: iconst_0
24: aload_1
25: aastore
26: new           #18
29: dup
30: ldc2_w        #33
33: ldc2_w        #24
36: ldc2_w        #27
39: invokespecial #19
42: astore_3
43: aload_2
44: iconst_1
45: aload_3
46: aastore
47: aload_2
48: iconst_2
49: aload_1
50: aastore
51: new           #15
54: dup
55: aload_2
56: invokespecial #17
59: astore        4
61: aload         4
63: invokevirtual #20
66: astore        5
68: iconst_3
69: newarray       double
71: dup
72: iconst_0
73: ldc2_w        #33
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #24
82: dastore
83: dup
84: iconst_2
85: dconst_0
86: dastore
87: aload         5
89: ldc2_w        #21
92: invokestatic  #23
95: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test07
Start line: 119
End line: 137
Method source code: 
  public void test07()  throws Throwable  {
      WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(1.0, 1.0, 1.0);
      WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[3];
      WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint(1.0, (-1587.8026780925275), (-1587.8026780925275));
      weightedObservedPointArray0[1] = weightedObservedPoint0;
      weightedObservedPointArray0[2] = weightedObservedPoint1;
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
      // Undeclared exception!
      try { 
        gaussianFitter_ParameterGuesser0.guess();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser", e);
      }
  }
Method byte code: 
0: new           #18
3: dup
4: dconst_1
5: dconst_1
6: dconst_1
7: invokespecial #19
10: astore_1
11: iconst_3
12: anewarray     #18
15: astore_2
16: new           #18
19: dup
20: dconst_1
21: ldc2_w        #35
24: ldc2_w        #35
27: invokespecial #19
30: astore_3
31: aload_2
32: iconst_1
33: aload_1
34: aastore
35: aload_2
36: iconst_2
37: aload_3
38: aastore
39: new           #15
42: dup
43: aload_2
44: invokespecial #17
47: astore        4
49: aload         4
51: invokevirtual #20
54: pop
55: ldc           #12
57: invokestatic  #7
60: goto          72
63: astore        5
65: ldc           #9
67: aload         5
69: invokestatic  #10
72: return
Exception table:
from    to  target type
49    60    63   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test08
Start line: 140
End line: 158
Method source code: 
  public void test08()  throws Throwable  {
      WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(1.0, 1.0, 1.0);
      WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[3];
      WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint(1.0, (-1587.8026780925275), (-1587.8026780925275));
      weightedObservedPointArray0[0] = weightedObservedPoint1;
      weightedObservedPointArray0[1] = weightedObservedPoint0;
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
      // Undeclared exception!
      try { 
        gaussianFitter_ParameterGuesser0.guess();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser", e);
      }
  }
Method byte code: 
0: new           #18
3: dup
4: dconst_1
5: dconst_1
6: dconst_1
7: invokespecial #19
10: astore_1
11: iconst_3
12: anewarray     #18
15: astore_2
16: new           #18
19: dup
20: dconst_1
21: ldc2_w        #35
24: ldc2_w        #35
27: invokespecial #19
30: astore_3
31: aload_2
32: iconst_0
33: aload_3
34: aastore
35: aload_2
36: iconst_1
37: aload_1
38: aastore
39: new           #15
42: dup
43: aload_2
44: invokespecial #17
47: astore        4
49: aload         4
51: invokevirtual #20
54: pop
55: ldc           #12
57: invokestatic  #7
60: goto          72
63: astore        5
65: ldc           #9
67: aload         5
69: invokestatic  #10
72: return
Exception table:
from    to  target type
49    60    63   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test09
Start line: 161
End line: 179
Method source code: 
  public void test09()  throws Throwable  {
      WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[3];
      WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint((-1016.048765), (-1016.048765), (-1016.048765));
      weightedObservedPointArray0[0] = weightedObservedPoint0;
      WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint((-1240.282), (-1016.048765), (-1016.048765));
      weightedObservedPointArray0[2] = weightedObservedPoint1;
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
      // Undeclared exception!
      try { 
        gaussianFitter_ParameterGuesser0.guess();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser", e);
      }
  }
Method byte code: 
0: iconst_3
1: anewarray     #18
4: astore_1
5: new           #18
8: dup
9: ldc2_w        #37
12: ldc2_w        #37
15: ldc2_w        #37
18: invokespecial #19
21: astore_2
22: aload_1
23: iconst_0
24: aload_2
25: aastore
26: new           #18
29: dup
30: ldc2_w        #39
33: ldc2_w        #37
36: ldc2_w        #37
39: invokespecial #19
42: astore_3
43: aload_1
44: iconst_2
45: aload_3
46: aastore
47: new           #15
50: dup
51: aload_1
52: invokespecial #17
55: astore        4
57: aload         4
59: invokevirtual #20
62: pop
63: ldc           #12
65: invokestatic  #7
68: goto          80
71: astore        5
73: ldc           #9
75: aload         5
77: invokestatic  #10
80: return
Exception table:
from    to  target type
57    68    71   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitter_ESTest.class
Class name: GaussianFitter_ESTest
Method name: test10
Start line: 182
End line: 200
Method source code: 
  public void test10()  throws Throwable  {
      WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[12];
      WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
      weightedObservedPointArray0[0] = weightedObservedPoint0;
      WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint((-1240.282), Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
      weightedObservedPointArray0[2] = weightedObservedPoint1;
      GaussianFitter.ParameterGuesser gaussianFitter_ParameterGuesser0 = new GaussianFitter.ParameterGuesser(weightedObservedPointArray0);
      // Undeclared exception!
      try { 
        gaussianFitter_ParameterGuesser0.guess();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser", e);
      }
  }
Method byte code: 
0: bipush        12
2: anewarray     #18
5: astore_1
6: new           #18
9: dup
10: ldc2_w        #27
13: ldc2_w        #27
16: ldc2_w        #27
19: invokespecial #19
22: astore_2
23: aload_1
24: iconst_0
25: aload_2
26: aastore
27: new           #18
30: dup
31: ldc2_w        #39
34: ldc2_w        #27
37: ldc2_w        #27
40: invokespecial #19
43: astore_3
44: aload_1
45: iconst_2
46: aload_3
47: aastore
48: new           #15
51: dup
52: aload_1
53: invokespecial #17
56: astore        4
58: aload         4
60: invokevirtual #20
63: pop
64: ldc           #12
66: invokestatic  #7
69: goto          81
72: astore        5
74: ldc           #9
76: aload         5
78: invokestatic  #10
81: return
Exception table:
from    to  target type
58    69    72   Class java/lang/NullPointerException
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitterTest.class
Class name: GaussianFitterTest
Method name: testFit01
Start line: 188
End line: 358
Method source code: 
    public void testFit01()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET1, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(3496978.1837704973, parameters[0], 1e-4);
        Assert.assertEquals(4.054933085999146, parameters[1], 1e-4);
        Assert.assertEquals(0.015039355620304326, parameters[2], 1e-4);
    }

    /**
     * Zero points is not enough observed points.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test(expected=MathIllegalArgumentException.class)
    public void testFit02()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        fitter.fit();
    }
    
    /**
     * Two points is not enough observed points.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test(expected=MathIllegalArgumentException.class)
    public void testFit03()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(new double[][] {
            {4.0254623,  531026.0},
            {4.02804905, 664002.0}},
            fitter);
        fitter.fit();
    }
    
    /**
     * Poor data: right of peak not symmetric with left of peak.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit04()
    throws OptimizationException 
    {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET2, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(233003.2967252038, parameters[0], 1e-4);
        Assert.assertEquals(-10.654887521095983, parameters[1], 1e-4);
        Assert.assertEquals(4.335937353196641, parameters[2], 1e-4);
    }  
    
    /**
     * Poor data: long tails.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit05()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET3, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(283863.81929180305, parameters[0], 1e-4);
        Assert.assertEquals(-13.29641995105174, parameters[1], 1e-4);
        Assert.assertEquals(1.7297330293549908, parameters[2], 1e-4);
    }
    
    /**
     * Poor data: right of peak is missing.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit06()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET4, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(285250.66754309234, parameters[0], 1e-4);
        Assert.assertEquals(-13.528375695228455, parameters[1], 1e-4);
        Assert.assertEquals(1.5204344894331614, parameters[2], 1e-4);
    }    

    /**
     * Basic with smaller dataset.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit07()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET5, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(3514384.729342235, parameters[0], 1e-4);
        Assert.assertEquals(4.054970307455625, parameters[1], 1e-4);
        Assert.assertEquals(0.015029412832160017, parameters[2], 1e-4);
    }

    @Test
    public void testMath519() {
        // The optimizer will try negative sigma values but "GaussianFitter"
        // will catch the raised exceptions and return NaN values instead.

        final double[] data = { 
            1.1143831578403364E-29,
            4.95281403484594E-28,
            1.1171347211930288E-26,
            1.7044813962636277E-25,
            1.9784716574832164E-24,
            1.8630236407866774E-23,
            1.4820532905097742E-22,
            1.0241963854632831E-21,
            6.275077366673128E-21,
            3.461808994532493E-20,
            1.7407124684715706E-19,
            8.056687953553974E-19,
            3.460193945992071E-18,
            1.3883326374011525E-17,
            5.233894983671116E-17,
            1.8630791465263745E-16,
            6.288759227922111E-16,
            2.0204433920597856E-15,
            6.198768938576155E-15,
            1.821419346860626E-14,
            5.139176445538471E-14,
            1.3956427429045787E-13,
            3.655705706448139E-13,
            9.253753324779779E-13,
            2.267636001476696E-12,
            5.3880460095836855E-12,
            1.2431632654852931E-11
        };

        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        for (int i = 0; i < data.length; i++) {
            fitter.addObservedPoint(i, data[i]);
        }
        final double[] p = fitter.fit();

        Assert.assertEquals(53.1572792, p[1], 1e-7);
        Assert.assertEquals(5.75214622, p[2], 1e-8);
    }
    
    /**
     * Adds the specified points to specified <code>GaussianFitter</code>
     * instance.
     *
     * @param points data points where first dimension is a point index and
     *        second dimension is an array of length two representing the point
     *        with the first value corresponding to X and the second value
     *        corresponding to Y
     * @param fitter fitter to which the points in <code>points</code> should be
     *        added as observed points
     */
    protected static void addDatasetToGaussianFitter(double[][] points,
                                                     GaussianFitter fitter) {
        for (int i = 0; i < points.length; i++) {
            fitter.addObservedPoint(points[i][0], points[i][1]);
        }
    }
}
Method byte code: 
0: new           #2
3: dup
4: new           #3
7: dup
8: invokespecial #4
11: invokespecial #5
14: astore_1
15: getstatic     #6
18: aload_1
19: invokestatic  #7
22: aload_1
23: invokevirtual #8
26: astore_2
27: ldc2_w        #9
30: aload_2
31: iconst_0
32: daload
33: ldc2_w        #11
36: invokestatic  #13
39: ldc2_w        #14
42: aload_2
43: iconst_1
44: daload
45: ldc2_w        #11
48: invokestatic  #13
51: ldc2_w        #16
54: aload_2
55: iconst_2
56: daload
57: ldc2_w        #11
60: invokestatic  #13
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitterTest.class
Class name: GaussianFitterTest
Method name: testFit02
Start line: 205
End line: 358
Method source code: 
    public void testFit02()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        fitter.fit();
    }
    
    /**
     * Two points is not enough observed points.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test(expected=MathIllegalArgumentException.class)
    public void testFit03()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(new double[][] {
            {4.0254623,  531026.0},
            {4.02804905, 664002.0}},
            fitter);
        fitter.fit();
    }
    
    /**
     * Poor data: right of peak not symmetric with left of peak.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit04()
    throws OptimizationException 
    {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET2, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(233003.2967252038, parameters[0], 1e-4);
        Assert.assertEquals(-10.654887521095983, parameters[1], 1e-4);
        Assert.assertEquals(4.335937353196641, parameters[2], 1e-4);
    }  
    
    /**
     * Poor data: long tails.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit05()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET3, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(283863.81929180305, parameters[0], 1e-4);
        Assert.assertEquals(-13.29641995105174, parameters[1], 1e-4);
        Assert.assertEquals(1.7297330293549908, parameters[2], 1e-4);
    }
    
    /**
     * Poor data: right of peak is missing.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit06()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET4, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(285250.66754309234, parameters[0], 1e-4);
        Assert.assertEquals(-13.528375695228455, parameters[1], 1e-4);
        Assert.assertEquals(1.5204344894331614, parameters[2], 1e-4);
    }    

    /**
     * Basic with smaller dataset.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit07()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET5, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(3514384.729342235, parameters[0], 1e-4);
        Assert.assertEquals(4.054970307455625, parameters[1], 1e-4);
        Assert.assertEquals(0.015029412832160017, parameters[2], 1e-4);
    }

    @Test
    public void testMath519() {
        // The optimizer will try negative sigma values but "GaussianFitter"
        // will catch the raised exceptions and return NaN values instead.

        final double[] data = { 
            1.1143831578403364E-29,
            4.95281403484594E-28,
            1.1171347211930288E-26,
            1.7044813962636277E-25,
            1.9784716574832164E-24,
            1.8630236407866774E-23,
            1.4820532905097742E-22,
            1.0241963854632831E-21,
            6.275077366673128E-21,
            3.461808994532493E-20,
            1.7407124684715706E-19,
            8.056687953553974E-19,
            3.460193945992071E-18,
            1.3883326374011525E-17,
            5.233894983671116E-17,
            1.8630791465263745E-16,
            6.288759227922111E-16,
            2.0204433920597856E-15,
            6.198768938576155E-15,
            1.821419346860626E-14,
            5.139176445538471E-14,
            1.3956427429045787E-13,
            3.655705706448139E-13,
            9.253753324779779E-13,
            2.267636001476696E-12,
            5.3880460095836855E-12,
            1.2431632654852931E-11
        };

        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        for (int i = 0; i < data.length; i++) {
            fitter.addObservedPoint(i, data[i]);
        }
        final double[] p = fitter.fit();

        Assert.assertEquals(53.1572792, p[1], 1e-7);
        Assert.assertEquals(5.75214622, p[2], 1e-8);
    }
    
    /**
     * Adds the specified points to specified <code>GaussianFitter</code>
     * instance.
     *
     * @param points data points where first dimension is a point index and
     *        second dimension is an array of length two representing the point
     *        with the first value corresponding to X and the second value
     *        corresponding to Y
     * @param fitter fitter to which the points in <code>points</code> should be
     *        added as observed points
     */
    protected static void addDatasetToGaussianFitter(double[][] points,
                                                     GaussianFitter fitter) {
        for (int i = 0; i < points.length; i++) {
            fitter.addObservedPoint(points[i][0], points[i][1]);
        }
    }
}
Method byte code: 
0: new           #2
3: dup
4: new           #3
7: dup
8: invokespecial #4
11: invokespecial #5
14: astore_1
15: aload_1
16: invokevirtual #8
19: pop
20: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitterTest.class
Class name: GaussianFitterTest
Method name: testFit03
Start line: 217
End line: 358
Method source code: 
    public void testFit03()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(new double[][] {
            {4.0254623,  531026.0},
            {4.02804905, 664002.0}},
            fitter);
        fitter.fit();
    }
    
    /**
     * Poor data: right of peak not symmetric with left of peak.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit04()
    throws OptimizationException 
    {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET2, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(233003.2967252038, parameters[0], 1e-4);
        Assert.assertEquals(-10.654887521095983, parameters[1], 1e-4);
        Assert.assertEquals(4.335937353196641, parameters[2], 1e-4);
    }  
    
    /**
     * Poor data: long tails.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit05()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET3, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(283863.81929180305, parameters[0], 1e-4);
        Assert.assertEquals(-13.29641995105174, parameters[1], 1e-4);
        Assert.assertEquals(1.7297330293549908, parameters[2], 1e-4);
    }
    
    /**
     * Poor data: right of peak is missing.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit06()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET4, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(285250.66754309234, parameters[0], 1e-4);
        Assert.assertEquals(-13.528375695228455, parameters[1], 1e-4);
        Assert.assertEquals(1.5204344894331614, parameters[2], 1e-4);
    }    

    /**
     * Basic with smaller dataset.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit07()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET5, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(3514384.729342235, parameters[0], 1e-4);
        Assert.assertEquals(4.054970307455625, parameters[1], 1e-4);
        Assert.assertEquals(0.015029412832160017, parameters[2], 1e-4);
    }

    @Test
    public void testMath519() {
        // The optimizer will try negative sigma values but "GaussianFitter"
        // will catch the raised exceptions and return NaN values instead.

        final double[] data = { 
            1.1143831578403364E-29,
            4.95281403484594E-28,
            1.1171347211930288E-26,
            1.7044813962636277E-25,
            1.9784716574832164E-24,
            1.8630236407866774E-23,
            1.4820532905097742E-22,
            1.0241963854632831E-21,
            6.275077366673128E-21,
            3.461808994532493E-20,
            1.7407124684715706E-19,
            8.056687953553974E-19,
            3.460193945992071E-18,
            1.3883326374011525E-17,
            5.233894983671116E-17,
            1.8630791465263745E-16,
            6.288759227922111E-16,
            2.0204433920597856E-15,
            6.198768938576155E-15,
            1.821419346860626E-14,
            5.139176445538471E-14,
            1.3956427429045787E-13,
            3.655705706448139E-13,
            9.253753324779779E-13,
            2.267636001476696E-12,
            5.3880460095836855E-12,
            1.2431632654852931E-11
        };

        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        for (int i = 0; i < data.length; i++) {
            fitter.addObservedPoint(i, data[i]);
        }
        final double[] p = fitter.fit();

        Assert.assertEquals(53.1572792, p[1], 1e-7);
        Assert.assertEquals(5.75214622, p[2], 1e-8);
    }
    
    /**
     * Adds the specified points to specified <code>GaussianFitter</code>
     * instance.
     *
     * @param points data points where first dimension is a point index and
     *        second dimension is an array of length two representing the point
     *        with the first value corresponding to X and the second value
     *        corresponding to Y
     * @param fitter fitter to which the points in <code>points</code> should be
     *        added as observed points
     */
    protected static void addDatasetToGaussianFitter(double[][] points,
                                                     GaussianFitter fitter) {
        for (int i = 0; i < points.length; i++) {
            fitter.addObservedPoint(points[i][0], points[i][1]);
        }
    }
}
Method byte code: 
0: new           #2
3: dup
4: new           #3
7: dup
8: invokespecial #4
11: invokespecial #5
14: astore_1
15: iconst_2
16: anewarray     #18
19: dup
20: iconst_0
21: iconst_2
22: newarray       double
24: dup
25: iconst_0
26: ldc2_w        #19
29: dastore
30: dup
31: iconst_1
32: ldc2_w        #21
35: dastore
36: aastore
37: dup
38: iconst_1
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: ldc2_w        #23
47: dastore
48: dup
49: iconst_1
50: ldc2_w        #25
53: dastore
54: aastore
55: aload_1
56: invokestatic  #7
59: aload_1
60: invokevirtual #8
63: pop
64: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitterTest.class
Class name: GaussianFitterTest
Method name: testFit04
Start line: 233
End line: 358
Method source code: 
    public void testFit04()
    throws OptimizationException 
    {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET2, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(233003.2967252038, parameters[0], 1e-4);
        Assert.assertEquals(-10.654887521095983, parameters[1], 1e-4);
        Assert.assertEquals(4.335937353196641, parameters[2], 1e-4);
    }  
    
    /**
     * Poor data: long tails.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit05()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET3, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(283863.81929180305, parameters[0], 1e-4);
        Assert.assertEquals(-13.29641995105174, parameters[1], 1e-4);
        Assert.assertEquals(1.7297330293549908, parameters[2], 1e-4);
    }
    
    /**
     * Poor data: right of peak is missing.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit06()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET4, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(285250.66754309234, parameters[0], 1e-4);
        Assert.assertEquals(-13.528375695228455, parameters[1], 1e-4);
        Assert.assertEquals(1.5204344894331614, parameters[2], 1e-4);
    }    

    /**
     * Basic with smaller dataset.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit07()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET5, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(3514384.729342235, parameters[0], 1e-4);
        Assert.assertEquals(4.054970307455625, parameters[1], 1e-4);
        Assert.assertEquals(0.015029412832160017, parameters[2], 1e-4);
    }

    @Test
    public void testMath519() {
        // The optimizer will try negative sigma values but "GaussianFitter"
        // will catch the raised exceptions and return NaN values instead.

        final double[] data = { 
            1.1143831578403364E-29,
            4.95281403484594E-28,
            1.1171347211930288E-26,
            1.7044813962636277E-25,
            1.9784716574832164E-24,
            1.8630236407866774E-23,
            1.4820532905097742E-22,
            1.0241963854632831E-21,
            6.275077366673128E-21,
            3.461808994532493E-20,
            1.7407124684715706E-19,
            8.056687953553974E-19,
            3.460193945992071E-18,
            1.3883326374011525E-17,
            5.233894983671116E-17,
            1.8630791465263745E-16,
            6.288759227922111E-16,
            2.0204433920597856E-15,
            6.198768938576155E-15,
            1.821419346860626E-14,
            5.139176445538471E-14,
            1.3956427429045787E-13,
            3.655705706448139E-13,
            9.253753324779779E-13,
            2.267636001476696E-12,
            5.3880460095836855E-12,
            1.2431632654852931E-11
        };

        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        for (int i = 0; i < data.length; i++) {
            fitter.addObservedPoint(i, data[i]);
        }
        final double[] p = fitter.fit();

        Assert.assertEquals(53.1572792, p[1], 1e-7);
        Assert.assertEquals(5.75214622, p[2], 1e-8);
    }
    
    /**
     * Adds the specified points to specified <code>GaussianFitter</code>
     * instance.
     *
     * @param points data points where first dimension is a point index and
     *        second dimension is an array of length two representing the point
     *        with the first value corresponding to X and the second value
     *        corresponding to Y
     * @param fitter fitter to which the points in <code>points</code> should be
     *        added as observed points
     */
    protected static void addDatasetToGaussianFitter(double[][] points,
                                                     GaussianFitter fitter) {
        for (int i = 0; i < points.length; i++) {
            fitter.addObservedPoint(points[i][0], points[i][1]);
        }
    }
}
Method byte code: 
0: new           #2
3: dup
4: new           #3
7: dup
8: invokespecial #4
11: invokespecial #5
14: astore_1
15: getstatic     #27
18: aload_1
19: invokestatic  #7
22: aload_1
23: invokevirtual #8
26: astore_2
27: ldc2_w        #28
30: aload_2
31: iconst_0
32: daload
33: ldc2_w        #11
36: invokestatic  #13
39: ldc2_w        #30
42: aload_2
43: iconst_1
44: daload
45: ldc2_w        #11
48: invokestatic  #13
51: ldc2_w        #32
54: aload_2
55: iconst_2
56: daload
57: ldc2_w        #11
60: invokestatic  #13
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitterTest.class
Class name: GaussianFitterTest
Method name: testFit05
Start line: 251
End line: 358
Method source code: 
    public void testFit05()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET3, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(283863.81929180305, parameters[0], 1e-4);
        Assert.assertEquals(-13.29641995105174, parameters[1], 1e-4);
        Assert.assertEquals(1.7297330293549908, parameters[2], 1e-4);
    }
    
    /**
     * Poor data: right of peak is missing.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit06()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET4, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(285250.66754309234, parameters[0], 1e-4);
        Assert.assertEquals(-13.528375695228455, parameters[1], 1e-4);
        Assert.assertEquals(1.5204344894331614, parameters[2], 1e-4);
    }    

    /**
     * Basic with smaller dataset.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit07()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET5, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(3514384.729342235, parameters[0], 1e-4);
        Assert.assertEquals(4.054970307455625, parameters[1], 1e-4);
        Assert.assertEquals(0.015029412832160017, parameters[2], 1e-4);
    }

    @Test
    public void testMath519() {
        // The optimizer will try negative sigma values but "GaussianFitter"
        // will catch the raised exceptions and return NaN values instead.

        final double[] data = { 
            1.1143831578403364E-29,
            4.95281403484594E-28,
            1.1171347211930288E-26,
            1.7044813962636277E-25,
            1.9784716574832164E-24,
            1.8630236407866774E-23,
            1.4820532905097742E-22,
            1.0241963854632831E-21,
            6.275077366673128E-21,
            3.461808994532493E-20,
            1.7407124684715706E-19,
            8.056687953553974E-19,
            3.460193945992071E-18,
            1.3883326374011525E-17,
            5.233894983671116E-17,
            1.8630791465263745E-16,
            6.288759227922111E-16,
            2.0204433920597856E-15,
            6.198768938576155E-15,
            1.821419346860626E-14,
            5.139176445538471E-14,
            1.3956427429045787E-13,
            3.655705706448139E-13,
            9.253753324779779E-13,
            2.267636001476696E-12,
            5.3880460095836855E-12,
            1.2431632654852931E-11
        };

        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        for (int i = 0; i < data.length; i++) {
            fitter.addObservedPoint(i, data[i]);
        }
        final double[] p = fitter.fit();

        Assert.assertEquals(53.1572792, p[1], 1e-7);
        Assert.assertEquals(5.75214622, p[2], 1e-8);
    }
    
    /**
     * Adds the specified points to specified <code>GaussianFitter</code>
     * instance.
     *
     * @param points data points where first dimension is a point index and
     *        second dimension is an array of length two representing the point
     *        with the first value corresponding to X and the second value
     *        corresponding to Y
     * @param fitter fitter to which the points in <code>points</code> should be
     *        added as observed points
     */
    protected static void addDatasetToGaussianFitter(double[][] points,
                                                     GaussianFitter fitter) {
        for (int i = 0; i < points.length; i++) {
            fitter.addObservedPoint(points[i][0], points[i][1]);
        }
    }
}
Method byte code: 
0: new           #2
3: dup
4: new           #3
7: dup
8: invokespecial #4
11: invokespecial #5
14: astore_1
15: getstatic     #34
18: aload_1
19: invokestatic  #7
22: aload_1
23: invokevirtual #8
26: astore_2
27: ldc2_w        #35
30: aload_2
31: iconst_0
32: daload
33: ldc2_w        #11
36: invokestatic  #13
39: ldc2_w        #37
42: aload_2
43: iconst_1
44: daload
45: ldc2_w        #11
48: invokestatic  #13
51: ldc2_w        #39
54: aload_2
55: iconst_2
56: daload
57: ldc2_w        #11
60: invokestatic  #13
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitterTest.class
Class name: GaussianFitterTest
Method name: testFit06
Start line: 268
End line: 358
Method source code: 
    public void testFit06()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET4, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(285250.66754309234, parameters[0], 1e-4);
        Assert.assertEquals(-13.528375695228455, parameters[1], 1e-4);
        Assert.assertEquals(1.5204344894331614, parameters[2], 1e-4);
    }    

    /**
     * Basic with smaller dataset.
     *
     * @throws OptimizationException in the event of a test case error
     */
    @Test
    public void testFit07()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET5, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(3514384.729342235, parameters[0], 1e-4);
        Assert.assertEquals(4.054970307455625, parameters[1], 1e-4);
        Assert.assertEquals(0.015029412832160017, parameters[2], 1e-4);
    }

    @Test
    public void testMath519() {
        // The optimizer will try negative sigma values but "GaussianFitter"
        // will catch the raised exceptions and return NaN values instead.

        final double[] data = { 
            1.1143831578403364E-29,
            4.95281403484594E-28,
            1.1171347211930288E-26,
            1.7044813962636277E-25,
            1.9784716574832164E-24,
            1.8630236407866774E-23,
            1.4820532905097742E-22,
            1.0241963854632831E-21,
            6.275077366673128E-21,
            3.461808994532493E-20,
            1.7407124684715706E-19,
            8.056687953553974E-19,
            3.460193945992071E-18,
            1.3883326374011525E-17,
            5.233894983671116E-17,
            1.8630791465263745E-16,
            6.288759227922111E-16,
            2.0204433920597856E-15,
            6.198768938576155E-15,
            1.821419346860626E-14,
            5.139176445538471E-14,
            1.3956427429045787E-13,
            3.655705706448139E-13,
            9.253753324779779E-13,
            2.267636001476696E-12,
            5.3880460095836855E-12,
            1.2431632654852931E-11
        };

        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        for (int i = 0; i < data.length; i++) {
            fitter.addObservedPoint(i, data[i]);
        }
        final double[] p = fitter.fit();

        Assert.assertEquals(53.1572792, p[1], 1e-7);
        Assert.assertEquals(5.75214622, p[2], 1e-8);
    }
    
    /**
     * Adds the specified points to specified <code>GaussianFitter</code>
     * instance.
     *
     * @param points data points where first dimension is a point index and
     *        second dimension is an array of length two representing the point
     *        with the first value corresponding to X and the second value
     *        corresponding to Y
     * @param fitter fitter to which the points in <code>points</code> should be
     *        added as observed points
     */
    protected static void addDatasetToGaussianFitter(double[][] points,
                                                     GaussianFitter fitter) {
        for (int i = 0; i < points.length; i++) {
            fitter.addObservedPoint(points[i][0], points[i][1]);
        }
    }
}
Method byte code: 
0: new           #2
3: dup
4: new           #3
7: dup
8: invokespecial #4
11: invokespecial #5
14: astore_1
15: getstatic     #41
18: aload_1
19: invokestatic  #7
22: aload_1
23: invokevirtual #8
26: astore_2
27: ldc2_w        #42
30: aload_2
31: iconst_0
32: daload
33: ldc2_w        #11
36: invokestatic  #13
39: ldc2_w        #44
42: aload_2
43: iconst_1
44: daload
45: ldc2_w        #11
48: invokestatic  #13
51: ldc2_w        #46
54: aload_2
55: iconst_2
56: daload
57: ldc2_w        #11
60: invokestatic  #13
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitterTest.class
Class name: GaussianFitterTest
Method name: testFit07
Start line: 285
End line: 358
Method source code: 
    public void testFit07()
    throws OptimizationException {
        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        addDatasetToGaussianFitter(DATASET5, fitter);
        double[] parameters = fitter.fit();

        Assert.assertEquals(3514384.729342235, parameters[0], 1e-4);
        Assert.assertEquals(4.054970307455625, parameters[1], 1e-4);
        Assert.assertEquals(0.015029412832160017, parameters[2], 1e-4);
    }

    @Test
    public void testMath519() {
        // The optimizer will try negative sigma values but "GaussianFitter"
        // will catch the raised exceptions and return NaN values instead.

        final double[] data = { 
            1.1143831578403364E-29,
            4.95281403484594E-28,
            1.1171347211930288E-26,
            1.7044813962636277E-25,
            1.9784716574832164E-24,
            1.8630236407866774E-23,
            1.4820532905097742E-22,
            1.0241963854632831E-21,
            6.275077366673128E-21,
            3.461808994532493E-20,
            1.7407124684715706E-19,
            8.056687953553974E-19,
            3.460193945992071E-18,
            1.3883326374011525E-17,
            5.233894983671116E-17,
            1.8630791465263745E-16,
            6.288759227922111E-16,
            2.0204433920597856E-15,
            6.198768938576155E-15,
            1.821419346860626E-14,
            5.139176445538471E-14,
            1.3956427429045787E-13,
            3.655705706448139E-13,
            9.253753324779779E-13,
            2.267636001476696E-12,
            5.3880460095836855E-12,
            1.2431632654852931E-11
        };

        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        for (int i = 0; i < data.length; i++) {
            fitter.addObservedPoint(i, data[i]);
        }
        final double[] p = fitter.fit();

        Assert.assertEquals(53.1572792, p[1], 1e-7);
        Assert.assertEquals(5.75214622, p[2], 1e-8);
    }
    
    /**
     * Adds the specified points to specified <code>GaussianFitter</code>
     * instance.
     *
     * @param points data points where first dimension is a point index and
     *        second dimension is an array of length two representing the point
     *        with the first value corresponding to X and the second value
     *        corresponding to Y
     * @param fitter fitter to which the points in <code>points</code> should be
     *        added as observed points
     */
    protected static void addDatasetToGaussianFitter(double[][] points,
                                                     GaussianFitter fitter) {
        for (int i = 0; i < points.length; i++) {
            fitter.addObservedPoint(points[i][0], points[i][1]);
        }
    }
}
Method byte code: 
0: new           #2
3: dup
4: new           #3
7: dup
8: invokespecial #4
11: invokespecial #5
14: astore_1
15: getstatic     #48
18: aload_1
19: invokestatic  #7
22: aload_1
23: invokevirtual #8
26: astore_2
27: ldc2_w        #49
30: aload_2
31: iconst_0
32: daload
33: ldc2_w        #11
36: invokestatic  #13
39: ldc2_w        #51
42: aload_2
43: iconst_1
44: daload
45: ldc2_w        #11
48: invokestatic  #13
51: ldc2_w        #53
54: aload_2
55: iconst_2
56: daload
57: ldc2_w        #11
60: invokestatic  #13
63: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/58/target/test-classes/org/apache/commons/math/optimization/fitting/GaussianFitterTest.class
Class name: GaussianFitterTest
Method name: testMath519
Start line: 297
End line: 339
Method source code: 
    public void testMath519() {
        // The optimizer will try negative sigma values but "GaussianFitter"
        // will catch the raised exceptions and return NaN values instead.

        final double[] data = { 
            1.1143831578403364E-29,
            4.95281403484594E-28,
            1.1171347211930288E-26,
            1.7044813962636277E-25,
            1.9784716574832164E-24,
            1.8630236407866774E-23,
            1.4820532905097742E-22,
            1.0241963854632831E-21,
            6.275077366673128E-21,
            3.461808994532493E-20,
            1.7407124684715706E-19,
            8.056687953553974E-19,
            3.460193945992071E-18,
            1.3883326374011525E-17,
            5.233894983671116E-17,
            1.8630791465263745E-16,
            6.288759227922111E-16,
            2.0204433920597856E-15,
            6.198768938576155E-15,
            1.821419346860626E-14,
            5.139176445538471E-14,
            1.3956427429045787E-13,
            3.655705706448139E-13,
            9.253753324779779E-13,
            2.267636001476696E-12,
            5.3880460095836855E-12,
            1.2431632654852931E-11
        };

        GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
        for (int i = 0; i < data.length; i++) {
            fitter.addObservedPoint(i, data[i]);
        }
        final double[] p = fitter.fit();

        Assert.assertEquals(53.1572792, p[1], 1e-7);
        Assert.assertEquals(5.75214622, p[2], 1e-8);
    }
Method byte code: 
0: bipush        27
2: newarray       double
4: dup
5: iconst_0
6: ldc2_w        #55
9: dastore
10: dup
11: iconst_1
12: ldc2_w        #57
15: dastore
16: dup
17: iconst_2
18: ldc2_w        #59
21: dastore
22: dup
23: iconst_3
24: ldc2_w        #61
27: dastore
28: dup
29: iconst_4
30: ldc2_w        #63
33: dastore
34: dup
35: iconst_5
36: ldc2_w        #65
39: dastore
40: dup
41: bipush        6
43: ldc2_w        #67
46: dastore
47: dup
48: bipush        7
50: ldc2_w        #69
53: dastore
54: dup
55: bipush        8
57: ldc2_w        #71
60: dastore
61: dup
62: bipush        9
64: ldc2_w        #73
67: dastore
68: dup
69: bipush        10
71: ldc2_w        #75
74: dastore
75: dup
76: bipush        11
78: ldc2_w        #77
81: dastore
82: dup
83: bipush        12
85: ldc2_w        #79
88: dastore
89: dup
90: bipush        13
92: ldc2_w        #81
95: dastore
96: dup
97: bipush        14
99: ldc2_w        #83
102: dastore
103: dup
104: bipush        15
106: ldc2_w        #85
109: dastore
110: dup
111: bipush        16
113: ldc2_w        #87
116: dastore
117: dup
118: bipush        17
120: ldc2_w        #89
123: dastore
124: dup
125: bipush        18
127: ldc2_w        #91
130: dastore
131: dup
132: bipush        19
134: ldc2_w        #93
137: dastore
138: dup
139: bipush        20
141: ldc2_w        #95
144: dastore
145: dup
146: bipush        21
148: ldc2_w        #97
151: dastore
152: dup
153: bipush        22
155: ldc2_w        #99
158: dastore
159: dup
160: bipush        23
162: ldc2_w        #101
165: dastore
166: dup
167: bipush        24
169: ldc2_w        #103
172: dastore
173: dup
174: bipush        25
176: ldc2_w        #105
179: dastore
180: dup
181: bipush        26
183: ldc2_w        #107
186: dastore
187: astore_1
188: new           #2
191: dup
192: new           #3
195: dup
196: invokespecial #4
199: invokespecial #5
202: astore_2
203: iconst_0
204: istore_3
205: iload_3
206: aload_1
207: arraylength
208: if_icmpge     226
211: aload_2
212: iload_3
213: i2d
214: aload_1
215: iload_3
216: daload
217: invokevirtual #109
220: iinc          3, 1
223: goto          205
226: aload_2
227: invokevirtual #8
230: astore_3
231: ldc2_w        #110
234: aload_3
235: iconst_1
236: daload
237: ldc2_w        #112
240: invokestatic  #13
243: ldc2_w        #114
246: aload_3
247: iconst_2
248: daload
249: ldc2_w        #116
252: invokestatic  #13
255: return
