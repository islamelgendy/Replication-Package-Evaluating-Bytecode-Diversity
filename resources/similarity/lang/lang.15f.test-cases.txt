Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 23
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.lang.reflect.WildcardType wildcardType0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type[] typeArray1 = org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wildcardType0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aload_1
27: invokestatic  #8
30: astore_2
31: ldc           #9
33: invokestatic  #10
36: goto          40
39: astore_2
40: return
Exception table:
from    to  target type
26    36    39   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 26
End line: 32
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        java.lang.reflect.Type type0 = null;
        boolean boolean1 = org.apache.commons.lang3.reflect.TypeUtils.isArrayType(type0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #12
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aload_1
27: invokestatic  #13
30: istore_2
31: new           #14
34: dup
35: invokespecial #15
38: ldc           #16
40: invokevirtual #17
43: iload_2
44: invokevirtual #18
47: ldc           #19
49: invokevirtual #17
52: iconst_0
53: invokevirtual #18
56: ldc           #16
58: invokevirtual #17
61: invokevirtual #20
64: iload_2
65: ifne          72
68: iconst_1
69: goto          73
72: iconst_0
73: invokestatic  #21
76: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 35
End line: 47
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.lang.reflect.Type type0 = null;
        java.lang.reflect.Type type1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.reflect.TypeUtils.getRawType(type0, type1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unknown type: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #22
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aconst_null
27: astore_2
28: aload_1
29: aload_2
30: invokestatic  #23
33: astore_3
34: ldc           #24
36: invokestatic  #10
39: goto          43
42: astore_3
43: return
Exception table:
from    to  target type
28    39    42   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 50
End line: 54
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.apache.commons.lang3.reflect.TypeUtils typeUtils0 = new org.apache.commons.lang3.reflect.TypeUtils();
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #26
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: invokespecial #28
31: astore_1
32: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 57
End line: 68
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.lang.reflect.WildcardType wildcardType0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type[] typeArray1 = org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wildcardType0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #29
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aload_1
27: invokestatic  #30
30: astore_2
31: ldc           #9
33: invokestatic  #10
36: goto          40
39: astore_2
40: return
Exception table:
from    to  target type
26    36    39   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 71
End line: 82
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        java.lang.reflect.Type[] typeArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type[] typeArray1 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #31
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aload_1
27: invokestatic  #32
30: astore_2
31: ldc           #9
33: invokestatic  #10
36: goto          40
39: astore_2
40: return
Exception table:
from    to  target type
26    36    39   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 85
End line: 91
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        java.lang.reflect.Type type0 = null;
        java.lang.reflect.Type type1 = org.apache.commons.lang3.reflect.TypeUtils.getArrayComponentType(type0);
        org.junit.Assert.assertNull(type1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #33
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aload_1
27: invokestatic  #34
30: astore_2
31: aload_2
32: invokestatic  #35
35: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 94
End line: 105
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        java.lang.reflect.ParameterizedType parameterizedType0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap1 = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(parameterizedType0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #36
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: aload_1
27: invokestatic  #37
30: astore_2
31: ldc           #9
33: invokestatic  #10
36: goto          40
39: astore_2
40: return
Exception table:
from    to  target type
26    36    39   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 108
End line: 148
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Object obj25 = null;
        int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) typeArray24, obj25, (int) '.');
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #38
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: aconst_null
141: astore        16
143: aload         15
145: checkcast     #45
148: aload         16
150: bipush        46
152: invokestatic  #46
155: istore        17
157: aload_1
158: invokestatic  #47
161: aload_2
162: invokestatic  #47
165: aload         4
167: invokestatic  #47
170: aload         5
172: invokestatic  #47
175: new           #14
178: dup
179: invokespecial #15
182: ldc           #16
184: invokevirtual #17
187: iload         6
189: invokevirtual #18
192: ldc           #19
194: invokevirtual #17
197: iconst_0
198: invokevirtual #18
201: ldc           #16
203: invokevirtual #17
206: invokevirtual #20
209: iload         6
211: ifne          218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #21
222: aload         7
224: invokestatic  #47
227: aload         8
229: invokestatic  #47
232: aload         10
234: invokestatic  #47
237: aload         11
239: invokestatic  #47
242: new           #14
245: dup
246: invokespecial #15
249: ldc           #16
251: invokevirtual #17
254: iload         12
256: invokevirtual #18
259: ldc           #19
261: invokevirtual #17
264: iconst_0
265: invokevirtual #18
268: ldc           #16
270: invokevirtual #17
273: invokevirtual #20
276: iload         12
278: ifne          285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #21
289: aload         13
291: invokestatic  #47
294: new           #14
297: dup
298: invokespecial #15
301: ldc           #16
303: invokevirtual #17
306: iload         14
308: invokevirtual #18
311: ldc           #19
313: invokevirtual #17
316: iconst_0
317: invokevirtual #18
320: ldc           #16
322: invokevirtual #17
325: invokevirtual #20
328: iload         14
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #21
341: aload         15
343: invokestatic  #47
346: new           #14
349: dup
350: invokespecial #15
353: ldc           #16
355: invokevirtual #17
358: iload         17
360: invokevirtual #48
363: ldc           #19
365: invokevirtual #17
368: iconst_0
369: invokevirtual #48
372: ldc           #16
374: invokevirtual #17
377: invokevirtual #20
380: iload         17
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #21
393: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 151
End line: 206
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.reflect.Type[]) wildcardClassArray31);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #49
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: aload         20
199: checkcast     #44
202: invokestatic  #50
205: istore        23
207: aload_1
208: invokestatic  #47
211: aload_2
212: invokestatic  #47
215: aload         4
217: invokestatic  #47
220: aload         5
222: invokestatic  #47
225: new           #14
228: dup
229: invokespecial #15
232: ldc           #16
234: invokevirtual #17
237: iload         6
239: invokevirtual #18
242: ldc           #19
244: invokevirtual #17
247: iconst_0
248: invokevirtual #18
251: ldc           #16
253: invokevirtual #17
256: invokevirtual #20
259: iload         6
261: ifne          268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #21
272: aload         7
274: invokestatic  #47
277: aload         8
279: invokestatic  #47
282: aload         10
284: invokestatic  #47
287: aload         11
289: invokestatic  #47
292: new           #14
295: dup
296: invokespecial #15
299: ldc           #16
301: invokevirtual #17
304: iload         12
306: invokevirtual #18
309: ldc           #19
311: invokevirtual #17
314: iconst_0
315: invokevirtual #18
318: ldc           #16
320: invokevirtual #17
323: invokevirtual #20
326: iload         12
328: ifne          335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #21
339: aload         13
341: invokestatic  #47
344: new           #14
347: dup
348: invokespecial #15
351: ldc           #16
353: invokevirtual #17
356: iload         14
358: invokevirtual #18
361: ldc           #19
363: invokevirtual #17
366: iconst_0
367: invokevirtual #18
370: ldc           #16
372: invokevirtual #17
375: invokevirtual #20
378: iload         14
380: ifne          387
383: iconst_1
384: goto          388
387: iconst_0
388: invokestatic  #21
391: aload         15
393: invokestatic  #47
396: aload         16
398: invokestatic  #47
401: aload         17
403: invokestatic  #47
406: aload         19
408: invokestatic  #47
411: aload         20
413: invokestatic  #47
416: new           #14
419: dup
420: invokespecial #15
423: ldc           #16
425: invokevirtual #17
428: iload         21
430: invokevirtual #18
433: ldc           #19
435: invokevirtual #17
438: iconst_0
439: invokevirtual #18
442: ldc           #16
444: invokevirtual #17
447: invokevirtual #20
450: iload         21
452: ifne          459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #21
463: new           #14
466: dup
467: invokespecial #15
470: ldc           #16
472: invokevirtual #17
475: iload         22
477: invokevirtual #18
480: ldc           #19
482: invokevirtual #17
485: iconst_0
486: invokevirtual #18
489: ldc           #16
491: invokevirtual #17
494: invokevirtual #20
497: iload         22
499: ifne          506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #21
510: new           #14
513: dup
514: invokespecial #15
517: ldc           #16
519: invokevirtual #17
522: iload         23
524: invokevirtual #18
527: ldc           #19
529: invokevirtual #17
532: iconst_1
533: invokevirtual #18
536: ldc           #16
538: invokevirtual #17
541: invokevirtual #20
544: iload         23
546: iconst_1
547: if_icmpne     554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #21
558: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 209
End line: 348
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43);
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        java.lang.Class<?> wildcardClass52 = null;
        java.lang.Class[] classArray54 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass52;
        boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray55, true);
        java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray55);
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray60, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63, false);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray63, true);
        java.lang.Class[] classArray69 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69;
        java.lang.Class<?> wildcardClass71 = null;
        java.lang.Class[] classArray73 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray74 = (java.lang.Class<?>[]) classArray73;
        wildcardClassArray74[0] = wildcardClass71;
        boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray69, wildcardClassArray74, true);
        java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        java.lang.Class<?> wildcardClass83 = null;
        java.lang.Class[] classArray85 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray86 = (java.lang.Class<?>[]) classArray85;
        wildcardClassArray86[0] = wildcardClass83;
        boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray81, wildcardClassArray86, true);
        java.lang.Class<?>[] wildcardClassArray91 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray81);
        boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray74, wildcardClassArray91);
        java.lang.reflect.Type[] typeArray93 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray94 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray95 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray94);
        java.lang.reflect.Type[] typeArray96 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.reflect.Type[]) wildcardClassArray31, (java.lang.reflect.Type[]) wildcardClassArray94);
        java.lang.Class<?>[] wildcardClassArray97 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray94);
        java.lang.reflect.Type[] typeArray98 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray97);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(wildcardClassArray70);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertNotNull(wildcardClassArray97);
        org.junit.Assert.assertNotNull(typeArray98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #51
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: iconst_0
198: anewarray     #39
201: astore        23
203: aload         23
205: checkcast     #40
208: astore        24
210: aconst_null
211: astore        25
213: iconst_1
214: anewarray     #39
217: astore        26
219: aload         26
221: checkcast     #40
224: astore        27
226: aload         27
228: iconst_0
229: aload         25
231: aastore
232: aload         23
234: checkcast     #40
237: aload         27
239: iconst_1
240: invokestatic  #41
243: istore        28
245: aload         27
247: invokestatic  #42
250: astore        29
252: iconst_0
253: anewarray     #39
256: astore        30
258: aload         30
260: checkcast     #40
263: astore        31
265: aconst_null
266: astore        32
268: iconst_1
269: anewarray     #39
272: astore        33
274: aload         33
276: checkcast     #40
279: astore        34
281: aload         34
283: iconst_0
284: aload         32
286: aastore
287: aload         30
289: checkcast     #40
292: aload         34
294: iconst_1
295: invokestatic  #41
298: istore        35
300: aload         34
302: invokestatic  #42
305: astore        36
307: aload         27
309: aload         36
311: iconst_1
312: invokestatic  #41
315: istore        37
317: getstatic     #52
320: astore        38
322: aload         27
324: aload         38
326: iconst_0
327: invokestatic  #41
330: istore        39
332: aload         20
334: aload         38
336: iconst_1
337: invokestatic  #41
340: istore        40
342: iconst_0
343: anewarray     #39
346: astore        41
348: aload         41
350: checkcast     #40
353: astore        42
355: aconst_null
356: astore        43
358: iconst_1
359: anewarray     #39
362: astore        44
364: aload         44
366: checkcast     #40
369: astore        45
371: aload         45
373: iconst_0
374: aload         43
376: aastore
377: aload         41
379: checkcast     #40
382: aload         45
384: iconst_1
385: invokestatic  #41
388: istore        46
390: aload         45
392: invokestatic  #42
395: astore        47
397: iconst_0
398: anewarray     #39
401: astore        48
403: aload         48
405: checkcast     #40
408: astore        49
410: aconst_null
411: astore        50
413: iconst_1
414: anewarray     #39
417: astore        51
419: aload         51
421: checkcast     #40
424: astore        52
426: aload         52
428: iconst_0
429: aload         50
431: aastore
432: aload         48
434: checkcast     #40
437: aload         52
439: iconst_1
440: invokestatic  #41
443: istore        53
445: aload         48
447: checkcast     #40
450: invokestatic  #42
453: astore        54
455: aload         45
457: aload         54
459: invokestatic  #43
462: istore        55
464: aload         45
466: checkcast     #44
469: invokestatic  #32
472: astore        56
474: aload         45
476: invokestatic  #53
479: astore        57
481: aload         57
483: invokestatic  #53
486: astore        58
488: aload         20
490: checkcast     #44
493: aload         57
495: checkcast     #44
498: invokestatic  #54
501: checkcast     #44
504: astore        59
506: aload         57
508: invokestatic  #42
511: astore        60
513: aload         60
515: checkcast     #44
518: invokestatic  #32
521: astore        61
523: aload_1
524: invokestatic  #47
527: aload_2
528: invokestatic  #47
531: aload         4
533: invokestatic  #47
536: aload         5
538: invokestatic  #47
541: new           #14
544: dup
545: invokespecial #15
548: ldc           #16
550: invokevirtual #17
553: iload         6
555: invokevirtual #18
558: ldc           #19
560: invokevirtual #17
563: iconst_0
564: invokevirtual #18
567: ldc           #16
569: invokevirtual #17
572: invokevirtual #20
575: iload         6
577: ifne          584
580: iconst_1
581: goto          585
584: iconst_0
585: invokestatic  #21
588: aload         7
590: invokestatic  #47
593: aload         8
595: invokestatic  #47
598: aload         10
600: invokestatic  #47
603: aload         11
605: invokestatic  #47
608: new           #14
611: dup
612: invokespecial #15
615: ldc           #16
617: invokevirtual #17
620: iload         12
622: invokevirtual #18
625: ldc           #19
627: invokevirtual #17
630: iconst_0
631: invokevirtual #18
634: ldc           #16
636: invokevirtual #17
639: invokevirtual #20
642: iload         12
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #21
655: aload         13
657: invokestatic  #47
660: new           #14
663: dup
664: invokespecial #15
667: ldc           #16
669: invokevirtual #17
672: iload         14
674: invokevirtual #18
677: ldc           #19
679: invokevirtual #17
682: iconst_0
683: invokevirtual #18
686: ldc           #16
688: invokevirtual #17
691: invokevirtual #20
694: iload         14
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #21
707: aload         15
709: invokestatic  #47
712: aload         16
714: invokestatic  #47
717: aload         17
719: invokestatic  #47
722: aload         19
724: invokestatic  #47
727: aload         20
729: invokestatic  #47
732: new           #14
735: dup
736: invokespecial #15
739: ldc           #16
741: invokevirtual #17
744: iload         21
746: invokevirtual #18
749: ldc           #19
751: invokevirtual #17
754: iconst_0
755: invokevirtual #18
758: ldc           #16
760: invokevirtual #17
763: invokevirtual #20
766: iload         21
768: ifne          775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #21
779: new           #14
782: dup
783: invokespecial #15
786: ldc           #16
788: invokevirtual #17
791: iload         22
793: invokevirtual #18
796: ldc           #19
798: invokevirtual #17
801: iconst_0
802: invokevirtual #18
805: ldc           #16
807: invokevirtual #17
810: invokevirtual #20
813: iload         22
815: ifne          822
818: iconst_1
819: goto          823
822: iconst_0
823: invokestatic  #21
826: aload         23
828: invokestatic  #47
831: aload         24
833: invokestatic  #47
836: aload         26
838: invokestatic  #47
841: aload         27
843: invokestatic  #47
846: new           #14
849: dup
850: invokespecial #15
853: ldc           #16
855: invokevirtual #17
858: iload         28
860: invokevirtual #18
863: ldc           #19
865: invokevirtual #17
868: iconst_0
869: invokevirtual #18
872: ldc           #16
874: invokevirtual #17
877: invokevirtual #20
880: iload         28
882: ifne          889
885: iconst_1
886: goto          890
889: iconst_0
890: invokestatic  #21
893: aload         29
895: invokestatic  #47
898: aload         30
900: invokestatic  #47
903: aload         31
905: invokestatic  #47
908: aload         33
910: invokestatic  #47
913: aload         34
915: invokestatic  #47
918: new           #14
921: dup
922: invokespecial #15
925: ldc           #16
927: invokevirtual #17
930: iload         35
932: invokevirtual #18
935: ldc           #19
937: invokevirtual #17
940: iconst_0
941: invokevirtual #18
944: ldc           #16
946: invokevirtual #17
949: invokevirtual #20
952: iload         35
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #21
965: aload         36
967: invokestatic  #47
970: new           #14
973: dup
974: invokespecial #15
977: ldc           #16
979: invokevirtual #17
982: iload         37
984: invokevirtual #18
987: ldc           #19
989: invokevirtual #17
992: iconst_0
993: invokevirtual #18
996: ldc           #16
998: invokevirtual #17
1001: invokevirtual #20
1004: iload         37
1006: ifne          1013
1009: iconst_1
1010: goto          1014
1013: iconst_0
1014: invokestatic  #21
1017: aload         38
1019: invokestatic  #47
1022: new           #14
1025: dup
1026: invokespecial #15
1029: ldc           #16
1031: invokevirtual #17
1034: iload         39
1036: invokevirtual #18
1039: ldc           #19
1041: invokevirtual #17
1044: iconst_0
1045: invokevirtual #18
1048: ldc           #16
1050: invokevirtual #17
1053: invokevirtual #20
1056: iload         39
1058: ifne          1065
1061: iconst_1
1062: goto          1066
1065: iconst_0
1066: invokestatic  #21
1069: new           #14
1072: dup
1073: invokespecial #15
1076: ldc           #16
1078: invokevirtual #17
1081: iload         40
1083: invokevirtual #18
1086: ldc           #19
1088: invokevirtual #17
1091: iconst_0
1092: invokevirtual #18
1095: ldc           #16
1097: invokevirtual #17
1100: invokevirtual #20
1103: iload         40
1105: ifne          1112
1108: iconst_1
1109: goto          1113
1112: iconst_0
1113: invokestatic  #21
1116: aload         41
1118: invokestatic  #47
1121: aload         42
1123: invokestatic  #47
1126: aload         44
1128: invokestatic  #47
1131: aload         45
1133: invokestatic  #47
1136: new           #14
1139: dup
1140: invokespecial #15
1143: ldc           #16
1145: invokevirtual #17
1148: iload         46
1150: invokevirtual #18
1153: ldc           #19
1155: invokevirtual #17
1158: iconst_0
1159: invokevirtual #18
1162: ldc           #16
1164: invokevirtual #17
1167: invokevirtual #20
1170: iload         46
1172: ifne          1179
1175: iconst_1
1176: goto          1180
1179: iconst_0
1180: invokestatic  #21
1183: aload         47
1185: invokestatic  #47
1188: aload         48
1190: invokestatic  #47
1193: aload         49
1195: invokestatic  #47
1198: aload         51
1200: invokestatic  #47
1203: aload         52
1205: invokestatic  #47
1208: new           #14
1211: dup
1212: invokespecial #15
1215: ldc           #16
1217: invokevirtual #17
1220: iload         53
1222: invokevirtual #18
1225: ldc           #19
1227: invokevirtual #17
1230: iconst_0
1231: invokevirtual #18
1234: ldc           #16
1236: invokevirtual #17
1239: invokevirtual #20
1242: iload         53
1244: ifne          1251
1247: iconst_1
1248: goto          1252
1251: iconst_0
1252: invokestatic  #21
1255: aload         54
1257: invokestatic  #47
1260: new           #14
1263: dup
1264: invokespecial #15
1267: ldc           #16
1269: invokevirtual #17
1272: iload         55
1274: invokevirtual #18
1277: ldc           #19
1279: invokevirtual #17
1282: iconst_0
1283: invokevirtual #18
1286: ldc           #16
1288: invokevirtual #17
1291: invokevirtual #20
1294: iload         55
1296: ifne          1303
1299: iconst_1
1300: goto          1304
1303: iconst_0
1304: invokestatic  #21
1307: aload         56
1309: invokestatic  #47
1312: aload         57
1314: invokestatic  #47
1317: aload         58
1319: invokestatic  #47
1322: aload         59
1324: invokestatic  #47
1327: aload         60
1329: invokestatic  #47
1332: aload         61
1334: invokestatic  #47
1337: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 351
End line: 423
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        java.lang.Character[] charArray0 = new java.lang.Character[] {};
        java.lang.Character[] charArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1);
        java.lang.Class<?>[] wildcardClassArray3 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray1);
        java.lang.Class[] classArray5 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        java.lang.Class<?> wildcardClass7 = null;
        java.lang.Class[] classArray9 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9;
        wildcardClassArray10[0] = wildcardClass7;
        boolean boolean14 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray5, wildcardClassArray10, true);
        java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray10);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class<?> wildcardClass19 = null;
        java.lang.Class[] classArray21 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21;
        wildcardClassArray22[0] = wildcardClass19;
        boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray22, true);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray17);
        boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray10, wildcardClassArray27);
        java.lang.reflect.Type[] typeArray29 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray10);
        java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray10);
        boolean boolean31 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, wildcardClassArray10);
        java.lang.Class[] classArray33 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        java.lang.Class<?> wildcardClass35 = null;
        java.lang.Class[] classArray37 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37;
        wildcardClassArray38[0] = wildcardClass35;
        boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray33, wildcardClassArray38, true);
        java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray38);
        boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, wildcardClassArray38);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(wildcardClassArray10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertNotNull(wildcardClassArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(wildcardClassArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #55
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #56
28: astore_1
29: aload_1
30: invokestatic  #57
33: astore_2
34: aload_2
35: invokestatic  #58
38: astore_3
39: aload_2
40: checkcast     #45
43: invokestatic  #59
46: astore        4
48: iconst_0
49: anewarray     #39
52: astore        5
54: aload         5
56: checkcast     #40
59: astore        6
61: aconst_null
62: astore        7
64: iconst_1
65: anewarray     #39
68: astore        8
70: aload         8
72: checkcast     #40
75: astore        9
77: aload         9
79: iconst_0
80: aload         7
82: aastore
83: aload         5
85: checkcast     #40
88: aload         9
90: iconst_1
91: invokestatic  #41
94: istore        10
96: aload         9
98: invokestatic  #42
101: astore        11
103: iconst_0
104: anewarray     #39
107: astore        12
109: aload         12
111: checkcast     #40
114: astore        13
116: aconst_null
117: astore        14
119: iconst_1
120: anewarray     #39
123: astore        15
125: aload         15
127: checkcast     #40
130: astore        16
132: aload         16
134: iconst_0
135: aload         14
137: aastore
138: aload         12
140: checkcast     #40
143: aload         16
145: iconst_1
146: invokestatic  #41
149: istore        17
151: aload         12
153: checkcast     #40
156: invokestatic  #42
159: astore        18
161: aload         9
163: aload         18
165: invokestatic  #43
168: istore        19
170: aload         9
172: checkcast     #44
175: invokestatic  #32
178: astore        20
180: aload         9
182: invokestatic  #53
185: astore        21
187: aload         4
189: aload         9
191: invokestatic  #43
194: istore        22
196: iconst_0
197: anewarray     #39
200: astore        23
202: aload         23
204: checkcast     #40
207: astore        24
209: aconst_null
210: astore        25
212: iconst_1
213: anewarray     #39
216: astore        26
218: aload         26
220: checkcast     #40
223: astore        27
225: aload         27
227: iconst_0
228: aload         25
230: aastore
231: aload         23
233: checkcast     #40
236: aload         27
238: iconst_1
239: invokestatic  #41
242: istore        28
244: aload         27
246: invokestatic  #42
249: astore        29
251: aload         4
253: aload         27
255: invokestatic  #43
258: istore        30
260: aload_1
261: invokestatic  #47
264: aload_2
265: invokestatic  #47
268: aload_3
269: invokestatic  #47
272: aload_3
273: invokestatic  #60
276: ldc           #61
278: invokestatic  #62
281: aload_3
282: invokestatic  #63
285: ldc           #61
287: invokestatic  #62
290: aload_3
291: invokestatic  #64
294: ldc           #65
296: invokestatic  #62
299: aload         4
301: invokestatic  #47
304: aload         5
306: invokestatic  #47
309: aload         6
311: invokestatic  #47
314: aload         8
316: invokestatic  #47
319: aload         9
321: invokestatic  #47
324: new           #14
327: dup
328: invokespecial #15
331: ldc           #16
333: invokevirtual #17
336: iload         10
338: invokevirtual #18
341: ldc           #19
343: invokevirtual #17
346: iconst_0
347: invokevirtual #18
350: ldc           #16
352: invokevirtual #17
355: invokevirtual #20
358: iload         10
360: ifne          367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #21
371: aload         11
373: invokestatic  #47
376: aload         12
378: invokestatic  #47
381: aload         13
383: invokestatic  #47
386: aload         15
388: invokestatic  #47
391: aload         16
393: invokestatic  #47
396: new           #14
399: dup
400: invokespecial #15
403: ldc           #16
405: invokevirtual #17
408: iload         17
410: invokevirtual #18
413: ldc           #19
415: invokevirtual #17
418: iconst_0
419: invokevirtual #18
422: ldc           #16
424: invokevirtual #17
427: invokevirtual #20
430: iload         17
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #21
443: aload         18
445: invokestatic  #47
448: new           #14
451: dup
452: invokespecial #15
455: ldc           #16
457: invokevirtual #17
460: iload         19
462: invokevirtual #18
465: ldc           #19
467: invokevirtual #17
470: iconst_0
471: invokevirtual #18
474: ldc           #16
476: invokevirtual #17
479: invokevirtual #20
482: iload         19
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #21
495: aload         20
497: invokestatic  #47
500: aload         21
502: invokestatic  #47
505: new           #14
508: dup
509: invokespecial #15
512: ldc           #16
514: invokevirtual #17
517: iload         22
519: invokevirtual #18
522: ldc           #19
524: invokevirtual #17
527: iconst_0
528: invokevirtual #18
531: ldc           #16
533: invokevirtual #17
536: invokevirtual #20
539: iload         22
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #21
552: aload         23
554: invokestatic  #47
557: aload         24
559: invokestatic  #47
562: aload         26
564: invokestatic  #47
567: aload         27
569: invokestatic  #47
572: new           #14
575: dup
576: invokespecial #15
579: ldc           #16
581: invokevirtual #17
584: iload         28
586: invokevirtual #18
589: ldc           #19
591: invokevirtual #17
594: iconst_0
595: invokevirtual #18
598: ldc           #16
600: invokevirtual #17
603: invokevirtual #20
606: iload         28
608: ifne          615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #21
619: aload         29
621: invokestatic  #47
624: new           #14
627: dup
628: invokespecial #15
631: ldc           #16
633: invokevirtual #17
636: iload         30
638: invokevirtual #18
641: ldc           #19
643: invokevirtual #17
646: iconst_0
647: invokevirtual #18
650: ldc           #16
652: invokevirtual #17
655: invokevirtual #20
658: iload         30
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #21
671: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 426
End line: 441
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.apache.commons.lang3.reflect.TypeUtils typeUtils0 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils1 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils2 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils5 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray6 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils0, typeUtils1, typeUtils2, typeUtils3, typeUtils4, typeUtils5 };
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray7 = org.apache.commons.lang3.ArrayUtils.clone(typeUtilsArray6);
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray10 = org.apache.commons.lang3.ArrayUtils.subarray(typeUtilsArray7, 100, (int) (short) 1);
        org.junit.Assert.assertNotNull(typeUtilsArray6);
        org.junit.Assert.assertNotNull(typeUtilsArray7);
        org.junit.Assert.assertNotNull(typeUtilsArray10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #66
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: invokespecial #28
31: astore_1
32: new           #27
35: dup
36: invokespecial #28
39: astore_2
40: new           #27
43: dup
44: invokespecial #28
47: astore_3
48: new           #27
51: dup
52: invokespecial #28
55: astore        4
57: new           #27
60: dup
61: invokespecial #28
64: astore        5
66: new           #27
69: dup
70: invokespecial #28
73: astore        6
75: bipush        6
77: anewarray     #27
80: dup
81: iconst_0
82: aload_1
83: aastore
84: dup
85: iconst_1
86: aload_2
87: aastore
88: dup
89: iconst_2
90: aload_3
91: aastore
92: dup
93: iconst_3
94: aload         4
96: aastore
97: dup
98: iconst_4
99: aload         5
101: aastore
102: dup
103: iconst_5
104: aload         6
106: aastore
107: astore        7
109: aload         7
111: invokestatic  #67
114: checkcast     #68
117: astore        8
119: aload         8
121: bipush        100
123: iconst_1
124: invokestatic  #69
127: checkcast     #68
130: astore        9
132: aload         7
134: invokestatic  #47
137: aload         8
139: invokestatic  #47
142: aload         9
144: invokestatic  #47
147: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 444
End line: 487
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class<?> wildcardClass27 = wildcardClassArray6.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #70
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #44
145: invokestatic  #32
148: astore        16
150: aload         5
152: invokestatic  #42
155: astore        17
157: aload         5
159: invokevirtual #71
162: astore        18
164: aload_1
165: invokestatic  #47
168: aload_2
169: invokestatic  #47
172: aload         4
174: invokestatic  #47
177: aload         5
179: invokestatic  #47
182: new           #14
185: dup
186: invokespecial #15
189: ldc           #16
191: invokevirtual #17
194: iload         6
196: invokevirtual #18
199: ldc           #19
201: invokevirtual #17
204: iconst_0
205: invokevirtual #18
208: ldc           #16
210: invokevirtual #17
213: invokevirtual #20
216: iload         6
218: ifne          225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #21
229: aload         7
231: invokestatic  #47
234: aload         8
236: invokestatic  #47
239: aload         9
241: invokestatic  #47
244: aload         11
246: invokestatic  #47
249: aload         12
251: invokestatic  #47
254: new           #14
257: dup
258: invokespecial #15
261: ldc           #16
263: invokevirtual #17
266: iload         13
268: invokevirtual #18
271: ldc           #19
273: invokevirtual #17
276: iconst_0
277: invokevirtual #18
280: ldc           #16
282: invokevirtual #17
285: invokevirtual #20
288: iload         13
290: ifne          297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #21
301: aload         14
303: invokestatic  #47
306: new           #14
309: dup
310: invokespecial #15
313: ldc           #16
315: invokevirtual #17
318: iload         15
320: invokevirtual #18
323: ldc           #19
325: invokevirtual #17
328: iconst_0
329: invokevirtual #18
332: ldc           #16
334: invokevirtual #17
337: invokevirtual #20
340: iload         15
342: ifne          349
345: iconst_1
346: goto          350
349: iconst_0
350: invokestatic  #21
353: aload         16
355: invokestatic  #47
358: aload         17
360: invokestatic  #47
363: aload         18
365: invokestatic  #47
368: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 490
End line: 517
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.lang3.reflect.TypeUtils typeUtils0 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils1 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray2 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils0, typeUtils1 };
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray5 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils3, typeUtils4 };
        org.apache.commons.lang3.reflect.TypeUtils typeUtils6 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils7 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray8 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils6, typeUtils7 };
        org.apache.commons.lang3.reflect.TypeUtils typeUtils9 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils10 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray11 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils9, typeUtils10 };
        org.apache.commons.lang3.reflect.TypeUtils typeUtils12 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils13 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray14 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils12, typeUtils13 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray15 = new org.apache.commons.lang3.reflect.TypeUtils[][] { typeUtilsArray2, typeUtilsArray5, typeUtilsArray8, typeUtilsArray11, typeUtilsArray14 };
        boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(typeUtilsArray15);
        org.junit.Assert.assertNotNull(typeUtilsArray2);
        org.junit.Assert.assertNotNull(typeUtilsArray5);
        org.junit.Assert.assertNotNull(typeUtilsArray8);
        org.junit.Assert.assertNotNull(typeUtilsArray11);
        org.junit.Assert.assertNotNull(typeUtilsArray14);
        org.junit.Assert.assertNotNull(typeUtilsArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #72
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: invokespecial #28
31: astore_1
32: new           #27
35: dup
36: invokespecial #28
39: astore_2
40: iconst_2
41: anewarray     #27
44: dup
45: iconst_0
46: aload_1
47: aastore
48: dup
49: iconst_1
50: aload_2
51: aastore
52: astore_3
53: new           #27
56: dup
57: invokespecial #28
60: astore        4
62: new           #27
65: dup
66: invokespecial #28
69: astore        5
71: iconst_2
72: anewarray     #27
75: dup
76: iconst_0
77: aload         4
79: aastore
80: dup
81: iconst_1
82: aload         5
84: aastore
85: astore        6
87: new           #27
90: dup
91: invokespecial #28
94: astore        7
96: new           #27
99: dup
100: invokespecial #28
103: astore        8
105: iconst_2
106: anewarray     #27
109: dup
110: iconst_0
111: aload         7
113: aastore
114: dup
115: iconst_1
116: aload         8
118: aastore
119: astore        9
121: new           #27
124: dup
125: invokespecial #28
128: astore        10
130: new           #27
133: dup
134: invokespecial #28
137: astore        11
139: iconst_2
140: anewarray     #27
143: dup
144: iconst_0
145: aload         10
147: aastore
148: dup
149: iconst_1
150: aload         11
152: aastore
153: astore        12
155: new           #27
158: dup
159: invokespecial #28
162: astore        13
164: new           #27
167: dup
168: invokespecial #28
171: astore        14
173: iconst_2
174: anewarray     #27
177: dup
178: iconst_0
179: aload         13
181: aastore
182: dup
183: iconst_1
184: aload         14
186: aastore
187: astore        15
189: iconst_5
190: anewarray     #68
193: dup
194: iconst_0
195: aload_3
196: aastore
197: dup
198: iconst_1
199: aload         6
201: aastore
202: dup
203: iconst_2
204: aload         9
206: aastore
207: dup
208: iconst_3
209: aload         12
211: aastore
212: dup
213: iconst_4
214: aload         15
216: aastore
217: astore        16
219: aload         16
221: invokestatic  #50
224: istore        17
226: aload_3
227: invokestatic  #47
230: aload         6
232: invokestatic  #47
235: aload         9
237: invokestatic  #47
240: aload         12
242: invokestatic  #47
245: aload         15
247: invokestatic  #47
250: aload         16
252: invokestatic  #47
255: new           #14
258: dup
259: invokespecial #15
262: ldc           #16
264: invokevirtual #17
267: iload         17
269: invokevirtual #18
272: ldc           #19
274: invokevirtual #17
277: iconst_1
278: invokevirtual #18
281: ldc           #16
283: invokevirtual #17
286: invokevirtual #20
289: iload         17
291: iconst_1
292: if_icmpne     299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #21
303: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 520
End line: 562
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        char[] charArray5 = new char[] { '#', '4', ' ', '4', ' ' };
        char[] charArray10 = new char[] { '#', 'a', '4', ' ' };
        boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray5, charArray10);
        char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10);
        long[] longArray19 = new long[] { (short) -1, 100, (byte) 0, '4', (byte) 10, (short) 1 };
        long[] longArray21 = new long[] { (byte) 0 };
        long[] longArray22 = org.apache.commons.lang3.ArrayUtils.addAll(longArray19, longArray21);
        long[] longArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22);
        boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) charArray12, (java.lang.Object) longArray23);
        int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray23, (long) (byte) -1);
        long[] longArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray23, (long) ' ');
        java.lang.reflect.Type type29 = null;
        boolean boolean30 = org.apache.commons.lang3.reflect.TypeUtils.isInstance((java.lang.Object) longArray28, type29);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "#4 4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "#4 4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[#, 4,  , 4,  ]");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "#a4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "#a4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[#, a, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#a4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#a4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, a, 4,  ]");
        org.junit.Assert.assertNotNull(longArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[-1, 100, 0, 52, 10, 1]");
        org.junit.Assert.assertNotNull(longArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[0]");
        org.junit.Assert.assertNotNull(longArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 100, 0, 52, 10, 1, 0]");
        org.junit.Assert.assertNotNull(longArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 100, 0, 52, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(longArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1, 100, 0, 52, 10, 1, 0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #73
19: aastore
20: invokevirtual #7
23: pop
24: iconst_5
25: newarray       char
27: dup
28: iconst_0
29: bipush        35
31: castore
32: dup
33: iconst_1
34: bipush        52
36: castore
37: dup
38: iconst_2
39: bipush        32
41: castore
42: dup
43: iconst_3
44: bipush        52
46: castore
47: dup
48: iconst_4
49: bipush        32
51: castore
52: astore_1
53: iconst_4
54: newarray       char
56: dup
57: iconst_0
58: bipush        35
60: castore
61: dup
62: iconst_1
63: bipush        97
65: castore
66: dup
67: iconst_2
68: bipush        52
70: castore
71: dup
72: iconst_3
73: bipush        32
75: castore
76: astore_2
77: aload_1
78: aload_2
79: invokestatic  #74
82: istore_3
83: aload_2
84: invokestatic  #75
87: astore        4
89: bipush        6
91: newarray       long
93: dup
94: iconst_0
95: ldc2_w        #76
98: lastore
99: dup
100: iconst_1
101: ldc2_w        #78
104: lastore
105: dup
106: iconst_2
107: lconst_0
108: lastore
109: dup
110: iconst_3
111: ldc2_w        #80
114: lastore
115: dup
116: iconst_4
117: ldc2_w        #82
120: lastore
121: dup
122: iconst_5
123: lconst_1
124: lastore
125: astore        5
127: iconst_1
128: newarray       long
130: dup
131: iconst_0
132: lconst_0
133: lastore
134: astore        6
136: aload         5
138: aload         6
140: invokestatic  #84
143: astore        7
145: aload         7
147: invokestatic  #85
150: astore        8
152: aload         4
154: aload         8
156: invokestatic  #86
159: istore        9
161: aload         8
163: ldc2_w        #76
166: invokestatic  #87
169: istore        10
171: aload         8
173: ldc2_w        #88
176: invokestatic  #90
179: astore        11
181: aconst_null
182: astore        12
184: aload         11
186: aload         12
188: invokestatic  #91
191: istore        13
193: aload_1
194: invokestatic  #47
197: aload_1
198: invokestatic  #60
201: ldc           #92
203: invokestatic  #62
206: aload_1
207: invokestatic  #63
210: ldc           #92
212: invokestatic  #62
215: aload_1
216: invokestatic  #64
219: ldc           #93
221: invokestatic  #62
224: aload_2
225: invokestatic  #47
228: aload_2
229: invokestatic  #60
232: ldc           #94
234: invokestatic  #62
237: aload_2
238: invokestatic  #63
241: ldc           #94
243: invokestatic  #62
246: aload_2
247: invokestatic  #64
250: ldc           #95
252: invokestatic  #62
255: new           #14
258: dup
259: invokespecial #15
262: ldc           #16
264: invokevirtual #17
267: iload_3
268: invokevirtual #18
271: ldc           #19
273: invokevirtual #17
276: iconst_0
277: invokevirtual #18
280: ldc           #16
282: invokevirtual #17
285: invokevirtual #20
288: iload_3
289: ifne          296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #21
300: aload         4
302: invokestatic  #47
305: aload         4
307: invokestatic  #60
310: ldc           #94
312: invokestatic  #62
315: aload         4
317: invokestatic  #63
320: ldc           #94
322: invokestatic  #62
325: aload         4
327: invokestatic  #64
330: ldc           #95
332: invokestatic  #62
335: aload         5
337: invokestatic  #47
340: aload         5
342: invokestatic  #96
345: ldc           #97
347: invokestatic  #62
350: aload         6
352: invokestatic  #47
355: aload         6
357: invokestatic  #96
360: ldc           #98
362: invokestatic  #62
365: aload         7
367: invokestatic  #47
370: aload         7
372: invokestatic  #96
375: ldc           #99
377: invokestatic  #62
380: aload         8
382: invokestatic  #47
385: aload         8
387: invokestatic  #96
390: ldc           #99
392: invokestatic  #62
395: new           #14
398: dup
399: invokespecial #15
402: ldc           #16
404: invokevirtual #17
407: iload         9
409: invokevirtual #18
412: ldc           #19
414: invokevirtual #17
417: iconst_0
418: invokevirtual #18
421: ldc           #16
423: invokevirtual #17
426: invokevirtual #20
429: iload         9
431: ifne          438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #21
442: new           #14
445: dup
446: invokespecial #15
449: ldc           #16
451: invokevirtual #17
454: iload         10
456: invokevirtual #48
459: ldc           #19
461: invokevirtual #17
464: iconst_0
465: invokevirtual #48
468: ldc           #16
470: invokevirtual #17
473: invokevirtual #20
476: iload         10
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #21
489: aload         11
491: invokestatic  #47
494: aload         11
496: invokestatic  #96
499: ldc           #99
501: invokestatic  #62
504: new           #14
507: dup
508: invokespecial #15
511: ldc           #16
513: invokevirtual #17
516: iload         13
518: invokevirtual #18
521: ldc           #19
523: invokevirtual #17
526: iconst_0
527: invokevirtual #18
530: ldc           #16
532: invokevirtual #17
535: invokevirtual #20
538: iload         13
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #21
551: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 565
End line: 592
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = null;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray11, true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type[] typeArray14 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #100
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aconst_null
67: astore        7
69: aload_1
70: checkcast     #40
73: aload         7
75: iconst_1
76: invokestatic  #41
79: istore        8
81: aload         7
83: checkcast     #44
86: invokestatic  #32
89: astore        9
91: ldc           #9
93: invokestatic  #10
96: goto          101
99: astore        9
101: aload_1
102: invokestatic  #47
105: aload_2
106: invokestatic  #47
109: aload         4
111: invokestatic  #47
114: aload         5
116: invokestatic  #47
119: new           #14
122: dup
123: invokespecial #15
126: ldc           #16
128: invokevirtual #17
131: iload         6
133: invokevirtual #18
136: ldc           #19
138: invokevirtual #17
141: iconst_0
142: invokevirtual #18
145: ldc           #16
147: invokevirtual #17
150: invokevirtual #20
153: iload         6
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #21
166: new           #14
169: dup
170: invokespecial #15
173: ldc           #16
175: invokevirtual #17
178: iload         8
180: invokevirtual #18
183: ldc           #19
185: invokevirtual #17
188: iconst_1
189: invokevirtual #18
192: ldc           #16
194: invokevirtual #17
197: invokevirtual #20
200: iload         8
202: iconst_1
203: if_icmpne     210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #21
214: return
Exception table:
from    to  target type
81    96    99   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 595
End line: 611
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) (byte) 0);
        java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray6);
        java.lang.reflect.Type[] typeArray11 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray10);
        java.lang.reflect.Type[] typeArray12 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray11);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClassArray10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertNotNull(typeArray12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #101
19: aastore
20: invokevirtual #7
23: pop
24: bipush        6
26: anewarray     #102
29: dup
30: iconst_0
31: iconst_1
32: invokestatic  #103
35: aastore
36: dup
37: iconst_1
38: iconst_0
39: invokestatic  #103
42: aastore
43: dup
44: iconst_2
45: iconst_0
46: invokestatic  #103
49: aastore
50: dup
51: iconst_3
52: iconst_m1
53: invokestatic  #103
56: aastore
57: dup
58: iconst_4
59: iconst_m1
60: invokestatic  #103
63: aastore
64: dup
65: iconst_5
66: iconst_1
67: invokestatic  #103
70: aastore
71: astore_1
72: aload_1
73: invokestatic  #104
76: astore_2
77: aload_1
78: iconst_0
79: invokestatic  #105
82: astore_3
83: aload_1
84: checkcast     #45
87: invokestatic  #59
90: astore        4
92: aload         4
94: checkcast     #44
97: invokestatic  #32
100: astore        5
102: aload         5
104: invokestatic  #32
107: astore        6
109: aload_1
110: invokestatic  #47
113: aload_2
114: invokestatic  #47
117: aload_3
118: invokestatic  #47
121: aload_3
122: invokestatic  #106
125: ldc           #107
127: invokestatic  #62
130: aload         4
132: invokestatic  #47
135: aload         5
137: invokestatic  #47
140: aload         6
142: invokestatic  #47
145: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 614
End line: 704
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Character[] charArray25 = new java.lang.Character[] {};
        java.lang.Character[] charArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray25);
        char[] charArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray26);
        java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray26);
        java.lang.Class[] classArray30 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        java.lang.Class<?> wildcardClass32 = null;
        java.lang.Class[] classArray34 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass32;
        boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray30, wildcardClassArray35, true);
        java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray35);
        java.lang.Class[] classArray42 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        java.lang.Class<?> wildcardClass44 = null;
        java.lang.Class[] classArray46 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        wildcardClassArray47[0] = wildcardClass44;
        boolean boolean51 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray42, wildcardClassArray47, true);
        java.lang.Class<?>[] wildcardClassArray52 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray42);
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray35, wildcardClassArray52);
        java.lang.reflect.Type[] typeArray54 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray35);
        java.lang.Class<?>[] wildcardClassArray55 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray35);
        boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray28, wildcardClassArray35);
        boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray35, true);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray28);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray40);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #108
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #56
144: astore        16
146: aload         16
148: invokestatic  #57
151: astore        17
153: aload         17
155: invokestatic  #58
158: astore        18
160: aload         17
162: checkcast     #45
165: invokestatic  #59
168: astore        19
170: iconst_0
171: anewarray     #39
174: astore        20
176: aload         20
178: checkcast     #40
181: astore        21
183: aconst_null
184: astore        22
186: iconst_1
187: anewarray     #39
190: astore        23
192: aload         23
194: checkcast     #40
197: astore        24
199: aload         24
201: iconst_0
202: aload         22
204: aastore
205: aload         20
207: checkcast     #40
210: aload         24
212: iconst_1
213: invokestatic  #41
216: istore        25
218: aload         24
220: invokestatic  #42
223: astore        26
225: iconst_0
226: anewarray     #39
229: astore        27
231: aload         27
233: checkcast     #40
236: astore        28
238: aconst_null
239: astore        29
241: iconst_1
242: anewarray     #39
245: astore        30
247: aload         30
249: checkcast     #40
252: astore        31
254: aload         31
256: iconst_0
257: aload         29
259: aastore
260: aload         27
262: checkcast     #40
265: aload         31
267: iconst_1
268: invokestatic  #41
271: istore        32
273: aload         27
275: checkcast     #40
278: invokestatic  #42
281: astore        33
283: aload         24
285: aload         33
287: invokestatic  #43
290: istore        34
292: aload         24
294: checkcast     #44
297: invokestatic  #32
300: astore        35
302: aload         24
304: invokestatic  #53
307: astore        36
309: aload         19
311: aload         24
313: invokestatic  #43
316: istore        37
318: aload         11
320: aload         24
322: iconst_1
323: invokestatic  #41
326: istore        38
328: aload_1
329: invokestatic  #47
332: aload_2
333: invokestatic  #47
336: aload         4
338: invokestatic  #47
341: aload         5
343: invokestatic  #47
346: new           #14
349: dup
350: invokespecial #15
353: ldc           #16
355: invokevirtual #17
358: iload         6
360: invokevirtual #18
363: ldc           #19
365: invokevirtual #17
368: iconst_0
369: invokevirtual #18
372: ldc           #16
374: invokevirtual #17
377: invokevirtual #20
380: iload         6
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #21
393: aload         7
395: invokestatic  #47
398: aload         8
400: invokestatic  #47
403: aload         10
405: invokestatic  #47
408: aload         11
410: invokestatic  #47
413: new           #14
416: dup
417: invokespecial #15
420: ldc           #16
422: invokevirtual #17
425: iload         12
427: invokevirtual #18
430: ldc           #19
432: invokevirtual #17
435: iconst_0
436: invokevirtual #18
439: ldc           #16
441: invokevirtual #17
444: invokevirtual #20
447: iload         12
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #21
460: aload         13
462: invokestatic  #47
465: new           #14
468: dup
469: invokespecial #15
472: ldc           #16
474: invokevirtual #17
477: iload         14
479: invokevirtual #18
482: ldc           #19
484: invokevirtual #17
487: iconst_0
488: invokevirtual #18
491: ldc           #16
493: invokevirtual #17
496: invokevirtual #20
499: iload         14
501: ifne          508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #21
512: aload         15
514: invokestatic  #47
517: aload         16
519: invokestatic  #47
522: aload         17
524: invokestatic  #47
527: aload         18
529: invokestatic  #47
532: aload         18
534: invokestatic  #60
537: ldc           #61
539: invokestatic  #62
542: aload         18
544: invokestatic  #63
547: ldc           #61
549: invokestatic  #62
552: aload         18
554: invokestatic  #64
557: ldc           #65
559: invokestatic  #62
562: aload         19
564: invokestatic  #47
567: aload         20
569: invokestatic  #47
572: aload         21
574: invokestatic  #47
577: aload         23
579: invokestatic  #47
582: aload         24
584: invokestatic  #47
587: new           #14
590: dup
591: invokespecial #15
594: ldc           #16
596: invokevirtual #17
599: iload         25
601: invokevirtual #18
604: ldc           #19
606: invokevirtual #17
609: iconst_0
610: invokevirtual #18
613: ldc           #16
615: invokevirtual #17
618: invokevirtual #20
621: iload         25
623: ifne          630
626: iconst_1
627: goto          631
630: iconst_0
631: invokestatic  #21
634: aload         26
636: invokestatic  #47
639: aload         27
641: invokestatic  #47
644: aload         28
646: invokestatic  #47
649: aload         30
651: invokestatic  #47
654: aload         31
656: invokestatic  #47
659: new           #14
662: dup
663: invokespecial #15
666: ldc           #16
668: invokevirtual #17
671: iload         32
673: invokevirtual #18
676: ldc           #19
678: invokevirtual #17
681: iconst_0
682: invokevirtual #18
685: ldc           #16
687: invokevirtual #17
690: invokevirtual #20
693: iload         32
695: ifne          702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #21
706: aload         33
708: invokestatic  #47
711: new           #14
714: dup
715: invokespecial #15
718: ldc           #16
720: invokevirtual #17
723: iload         34
725: invokevirtual #18
728: ldc           #19
730: invokevirtual #17
733: iconst_0
734: invokevirtual #18
737: ldc           #16
739: invokevirtual #17
742: invokevirtual #20
745: iload         34
747: ifne          754
750: iconst_1
751: goto          755
754: iconst_0
755: invokestatic  #21
758: aload         35
760: invokestatic  #47
763: aload         36
765: invokestatic  #47
768: new           #14
771: dup
772: invokespecial #15
775: ldc           #16
777: invokevirtual #17
780: iload         37
782: invokevirtual #18
785: ldc           #19
787: invokevirtual #17
790: iconst_0
791: invokevirtual #18
794: ldc           #16
796: invokevirtual #17
799: invokevirtual #20
802: iload         37
804: ifne          811
807: iconst_1
808: goto          812
811: iconst_0
812: invokestatic  #21
815: new           #14
818: dup
819: invokespecial #15
822: ldc           #16
824: invokevirtual #17
827: iload         38
829: invokevirtual #18
832: ldc           #19
834: invokevirtual #17
837: iconst_0
838: invokevirtual #18
841: ldc           #16
843: invokevirtual #17
846: invokevirtual #20
849: iload         38
851: ifne          858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #21
862: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 707
End line: 782
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray28 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28;
        java.lang.Class<?> wildcardClass30 = null;
        java.lang.Class[] classArray32 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass30;
        boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray33, true);
        java.lang.Class[] classArray39 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39;
        java.lang.Class<?> wildcardClass41 = null;
        java.lang.Class[] classArray43 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray44 = (java.lang.Class<?>[]) classArray43;
        wildcardClassArray44[0] = wildcardClass41;
        boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray39, wildcardClassArray44, true);
        java.lang.Class<?>[] wildcardClassArray49 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray44);
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray33, wildcardClassArray44);
        boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray44, false);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(wildcardClassArray29);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(wildcardClassArray40);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(wildcardClassArray44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #109
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #44
145: invokestatic  #32
148: astore        16
150: aload         5
152: invokestatic  #42
155: astore        17
157: iconst_0
158: anewarray     #39
161: astore        18
163: aload         18
165: checkcast     #40
168: astore        19
170: aconst_null
171: astore        20
173: iconst_1
174: anewarray     #39
177: astore        21
179: aload         21
181: checkcast     #40
184: astore        22
186: aload         22
188: iconst_0
189: aload         20
191: aastore
192: aload         18
194: checkcast     #40
197: aload         22
199: iconst_1
200: invokestatic  #41
203: istore        23
205: iconst_0
206: anewarray     #39
209: astore        24
211: aload         24
213: checkcast     #40
216: astore        25
218: aconst_null
219: astore        26
221: iconst_1
222: anewarray     #39
225: astore        27
227: aload         27
229: checkcast     #40
232: astore        28
234: aload         28
236: iconst_0
237: aload         26
239: aastore
240: aload         24
242: checkcast     #40
245: aload         28
247: iconst_1
248: invokestatic  #41
251: istore        29
253: aload         28
255: invokestatic  #42
258: astore        30
260: aload         22
262: aload         28
264: invokestatic  #43
267: istore        31
269: aload         17
271: aload         28
273: iconst_0
274: invokestatic  #41
277: istore        32
279: aload_1
280: invokestatic  #47
283: aload_2
284: invokestatic  #47
287: aload         4
289: invokestatic  #47
292: aload         5
294: invokestatic  #47
297: new           #14
300: dup
301: invokespecial #15
304: ldc           #16
306: invokevirtual #17
309: iload         6
311: invokevirtual #18
314: ldc           #19
316: invokevirtual #17
319: iconst_0
320: invokevirtual #18
323: ldc           #16
325: invokevirtual #17
328: invokevirtual #20
331: iload         6
333: ifne          340
336: iconst_1
337: goto          341
340: iconst_0
341: invokestatic  #21
344: aload         7
346: invokestatic  #47
349: aload         8
351: invokestatic  #47
354: aload         9
356: invokestatic  #47
359: aload         11
361: invokestatic  #47
364: aload         12
366: invokestatic  #47
369: new           #14
372: dup
373: invokespecial #15
376: ldc           #16
378: invokevirtual #17
381: iload         13
383: invokevirtual #18
386: ldc           #19
388: invokevirtual #17
391: iconst_0
392: invokevirtual #18
395: ldc           #16
397: invokevirtual #17
400: invokevirtual #20
403: iload         13
405: ifne          412
408: iconst_1
409: goto          413
412: iconst_0
413: invokestatic  #21
416: aload         14
418: invokestatic  #47
421: new           #14
424: dup
425: invokespecial #15
428: ldc           #16
430: invokevirtual #17
433: iload         15
435: invokevirtual #18
438: ldc           #19
440: invokevirtual #17
443: iconst_0
444: invokevirtual #18
447: ldc           #16
449: invokevirtual #17
452: invokevirtual #20
455: iload         15
457: ifne          464
460: iconst_1
461: goto          465
464: iconst_0
465: invokestatic  #21
468: aload         16
470: invokestatic  #47
473: aload         17
475: invokestatic  #47
478: aload         18
480: invokestatic  #47
483: aload         19
485: invokestatic  #47
488: aload         21
490: invokestatic  #47
493: aload         22
495: invokestatic  #47
498: new           #14
501: dup
502: invokespecial #15
505: ldc           #16
507: invokevirtual #17
510: iload         23
512: invokevirtual #18
515: ldc           #19
517: invokevirtual #17
520: iconst_0
521: invokevirtual #18
524: ldc           #16
526: invokevirtual #17
529: invokevirtual #20
532: iload         23
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #21
545: aload         24
547: invokestatic  #47
550: aload         25
552: invokestatic  #47
555: aload         27
557: invokestatic  #47
560: aload         28
562: invokestatic  #47
565: new           #14
568: dup
569: invokespecial #15
572: ldc           #16
574: invokevirtual #17
577: iload         29
579: invokevirtual #18
582: ldc           #19
584: invokevirtual #17
587: iconst_0
588: invokevirtual #18
591: ldc           #16
593: invokevirtual #17
596: invokevirtual #20
599: iload         29
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #21
612: aload         30
614: invokestatic  #47
617: new           #14
620: dup
621: invokespecial #15
624: ldc           #16
626: invokevirtual #17
629: iload         31
631: invokevirtual #18
634: ldc           #19
636: invokevirtual #17
639: iconst_0
640: invokevirtual #18
643: ldc           #16
645: invokevirtual #17
648: invokevirtual #20
651: iload         31
653: ifne          660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #21
664: new           #14
667: dup
668: invokespecial #15
671: ldc           #16
673: invokevirtual #17
676: iload         32
678: invokevirtual #18
681: ldc           #19
683: invokevirtual #17
686: iconst_0
687: invokevirtual #18
690: ldc           #16
692: invokevirtual #17
695: invokevirtual #20
698: iload         32
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #21
711: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 785
End line: 832
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(wildcardClassArray26);
        java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26);
        java.lang.reflect.Type[] typeArray29 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray28);
        org.junit.Assert.assertNotNull(typeArray29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #110
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #44
145: invokestatic  #32
148: astore        16
150: aload         5
152: invokestatic  #53
155: astore        17
157: aload         17
159: invokestatic  #50
162: istore        18
164: aload         17
166: invokestatic  #42
169: astore        19
171: aload         17
173: checkcast     #44
176: invokestatic  #32
179: astore        20
181: aload_1
182: invokestatic  #47
185: aload_2
186: invokestatic  #47
189: aload         4
191: invokestatic  #47
194: aload         5
196: invokestatic  #47
199: new           #14
202: dup
203: invokespecial #15
206: ldc           #16
208: invokevirtual #17
211: iload         6
213: invokevirtual #18
216: ldc           #19
218: invokevirtual #17
221: iconst_0
222: invokevirtual #18
225: ldc           #16
227: invokevirtual #17
230: invokevirtual #20
233: iload         6
235: ifne          242
238: iconst_1
239: goto          243
242: iconst_0
243: invokestatic  #21
246: aload         7
248: invokestatic  #47
251: aload         8
253: invokestatic  #47
256: aload         9
258: invokestatic  #47
261: aload         11
263: invokestatic  #47
266: aload         12
268: invokestatic  #47
271: new           #14
274: dup
275: invokespecial #15
278: ldc           #16
280: invokevirtual #17
283: iload         13
285: invokevirtual #18
288: ldc           #19
290: invokevirtual #17
293: iconst_0
294: invokevirtual #18
297: ldc           #16
299: invokevirtual #17
302: invokevirtual #20
305: iload         13
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #21
318: aload         14
320: invokestatic  #47
323: new           #14
326: dup
327: invokespecial #15
330: ldc           #16
332: invokevirtual #17
335: iload         15
337: invokevirtual #18
340: ldc           #19
342: invokevirtual #17
345: iconst_0
346: invokevirtual #18
349: ldc           #16
351: invokevirtual #17
354: invokevirtual #20
357: iload         15
359: ifne          366
362: iconst_1
363: goto          367
366: iconst_0
367: invokestatic  #21
370: aload         16
372: invokestatic  #47
375: aload         17
377: invokestatic  #47
380: new           #14
383: dup
384: invokespecial #15
387: ldc           #16
389: invokevirtual #17
392: iload         18
394: invokevirtual #18
397: ldc           #19
399: invokevirtual #17
402: iconst_1
403: invokevirtual #18
406: ldc           #16
408: invokevirtual #17
411: invokevirtual #20
414: iload         18
416: iconst_1
417: if_icmpne     424
420: iconst_1
421: goto          425
424: iconst_0
425: invokestatic  #21
428: aload         19
430: invokestatic  #47
433: aload         20
435: invokestatic  #47
438: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 835
End line: 842
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("sun.awt.X11GraphicsEnvironment");
        boolean boolean2 = org.apache.commons.lang3.reflect.TypeUtils.isArrayType((java.lang.reflect.Type) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #111
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #112
26: invokestatic  #113
29: astore_1
30: aload_1
31: invokestatic  #13
34: istore_2
35: aload_1
36: invokestatic  #47
39: new           #14
42: dup
43: invokespecial #15
46: ldc           #16
48: invokevirtual #17
51: iload_2
52: invokevirtual #18
55: ldc           #19
57: invokevirtual #17
60: iconst_0
61: invokevirtual #18
64: ldc           #16
66: invokevirtual #17
69: invokevirtual #20
72: iload_2
73: ifne          80
76: iconst_1
77: goto          81
80: iconst_0
81: invokestatic  #21
84: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 845
End line: 986
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        java.lang.Boolean[] booleanArray0 = new java.lang.Boolean[] {};
        java.lang.Boolean[] booleanArray1 = new java.lang.Boolean[] {};
        java.lang.Boolean[][] booleanArray2 = new java.lang.Boolean[][] { booleanArray0, booleanArray1 };
        java.lang.Boolean[][] booleanArray3 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray2);
        java.lang.Character[] charArray4 = new java.lang.Character[] {};
        java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray4);
        char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '#');
        int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray7, '.', (int) (byte) 10);
        java.lang.Boolean[][] booleanArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray3, (java.lang.Object) (byte) 10);
        java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] {};
        java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] {};
        java.lang.Boolean[][] booleanArray14 = new java.lang.Boolean[][] { booleanArray12, booleanArray13 };
        java.lang.Boolean[][] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14);
        java.lang.Character[] charArray16 = new java.lang.Character[] {};
        java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray16);
        char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray17, '#');
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '.', (int) (byte) 10);
        java.lang.Boolean[][] booleanArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray15, (java.lang.Object) (byte) 10);
        java.lang.Boolean[][] booleanArray24 = org.apache.commons.lang3.ArrayUtils.removeElements(booleanArray3, booleanArray15);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        java.lang.Class[] classArray37 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37;
        java.lang.Class<?> wildcardClass39 = null;
        java.lang.Class[] classArray41 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        wildcardClassArray42[0] = wildcardClass39;
        boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray37, wildcardClassArray42, true);
        java.lang.Class<?>[] wildcardClassArray47 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray42);
        boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray42);
        java.lang.reflect.Type[] typeArray49 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray42);
        java.lang.Class[] classArray51 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51;
        java.lang.Class<?> wildcardClass53 = null;
        java.lang.Class[] classArray55 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass53;
        boolean boolean60 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray51, wildcardClassArray56, true);
        boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray42, wildcardClassArray56);
        java.lang.Class<?>[] wildcardClassArray64 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray56, (int) (short) 0, (int) (byte) 1);
        java.lang.Class[] classArray66 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66;
        java.lang.Class<?> wildcardClass68 = null;
        java.lang.Class[] classArray70 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray71 = (java.lang.Class<?>[]) classArray70;
        wildcardClassArray71[0] = wildcardClass68;
        boolean boolean75 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray66, wildcardClassArray71, true);
        java.lang.Class<?>[] wildcardClassArray76 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray71);
        java.lang.Class[] classArray78 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        java.lang.Class<?> wildcardClass80 = null;
        java.lang.Class[] classArray82 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass80;
        boolean boolean87 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray78, wildcardClassArray83, true);
        java.lang.Class<?>[] wildcardClassArray88 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray83);
        boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray71, wildcardClassArray88, true);
        java.lang.Class<?>[] wildcardClassArray91 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean93 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray71, wildcardClassArray91, false);
        boolean boolean95 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray64, wildcardClassArray91, false);
        java.lang.Boolean[][] booleanArray96 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray3, (java.lang.Object) false);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray1);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(wildcardClassArray38);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(wildcardClassArray52);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray64);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(wildcardClassArray67);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(wildcardClassArray71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(booleanArray96);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #114
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #115
28: astore_1
29: iconst_0
30: anewarray     #115
33: astore_2
34: iconst_2
35: anewarray     #116
38: dup
39: iconst_0
40: aload_1
41: aastore
42: dup
43: iconst_1
44: aload_2
45: aastore
46: astore_3
47: aload_3
48: invokestatic  #67
51: checkcast     #117
54: astore        4
56: iconst_0
57: anewarray     #56
60: astore        5
62: aload         5
64: invokestatic  #57
67: astore        6
69: aload         6
71: bipush        35
73: invokestatic  #118
76: astore        7
78: aload         7
80: bipush        46
82: bipush        10
84: invokestatic  #119
87: istore        8
89: aload         4
91: bipush        10
93: invokestatic  #120
96: invokestatic  #121
99: checkcast     #117
102: astore        9
104: iconst_0
105: anewarray     #115
108: astore        10
110: iconst_0
111: anewarray     #115
114: astore        11
116: iconst_2
117: anewarray     #116
120: dup
121: iconst_0
122: aload         10
124: aastore
125: dup
126: iconst_1
127: aload         11
129: aastore
130: astore        12
132: aload         12
134: invokestatic  #67
137: checkcast     #117
140: astore        13
142: iconst_0
143: anewarray     #56
146: astore        14
148: aload         14
150: invokestatic  #57
153: astore        15
155: aload         15
157: bipush        35
159: invokestatic  #118
162: astore        16
164: aload         16
166: bipush        46
168: bipush        10
170: invokestatic  #119
173: istore        17
175: aload         13
177: bipush        10
179: invokestatic  #120
182: invokestatic  #121
185: checkcast     #117
188: astore        18
190: aload         4
192: aload         13
194: invokestatic  #122
197: checkcast     #117
200: astore        19
202: iconst_0
203: anewarray     #39
206: astore        20
208: aload         20
210: checkcast     #40
213: astore        21
215: aconst_null
216: astore        22
218: iconst_1
219: anewarray     #39
222: astore        23
224: aload         23
226: checkcast     #40
229: astore        24
231: aload         24
233: iconst_0
234: aload         22
236: aastore
237: aload         20
239: checkcast     #40
242: aload         24
244: iconst_1
245: invokestatic  #41
248: istore        25
250: iconst_0
251: anewarray     #39
254: astore        26
256: aload         26
258: checkcast     #40
261: astore        27
263: aconst_null
264: astore        28
266: iconst_1
267: anewarray     #39
270: astore        29
272: aload         29
274: checkcast     #40
277: astore        30
279: aload         30
281: iconst_0
282: aload         28
284: aastore
285: aload         26
287: checkcast     #40
290: aload         30
292: iconst_1
293: invokestatic  #41
296: istore        31
298: aload         30
300: invokestatic  #42
303: astore        32
305: aload         24
307: aload         30
309: invokestatic  #43
312: istore        33
314: aload         30
316: checkcast     #44
319: invokestatic  #32
322: astore        34
324: iconst_0
325: anewarray     #39
328: astore        35
330: aload         35
332: checkcast     #40
335: astore        36
337: aconst_null
338: astore        37
340: iconst_1
341: anewarray     #39
344: astore        38
346: aload         38
348: checkcast     #40
351: astore        39
353: aload         39
355: iconst_0
356: aload         37
358: aastore
359: aload         35
361: checkcast     #40
364: aload         39
366: iconst_1
367: invokestatic  #41
370: istore        40
372: aload         30
374: aload         39
376: invokestatic  #43
379: istore        41
381: aload         39
383: iconst_0
384: iconst_1
385: invokestatic  #69
388: checkcast     #40
391: astore        42
393: iconst_0
394: anewarray     #39
397: astore        43
399: aload         43
401: checkcast     #40
404: astore        44
406: aconst_null
407: astore        45
409: iconst_1
410: anewarray     #39
413: astore        46
415: aload         46
417: checkcast     #40
420: astore        47
422: aload         47
424: iconst_0
425: aload         45
427: aastore
428: aload         43
430: checkcast     #40
433: aload         47
435: iconst_1
436: invokestatic  #41
439: istore        48
441: aload         47
443: invokestatic  #42
446: astore        49
448: iconst_0
449: anewarray     #39
452: astore        50
454: aload         50
456: checkcast     #40
459: astore        51
461: aconst_null
462: astore        52
464: iconst_1
465: anewarray     #39
468: astore        53
470: aload         53
472: checkcast     #40
475: astore        54
477: aload         54
479: iconst_0
480: aload         52
482: aastore
483: aload         50
485: checkcast     #40
488: aload         54
490: iconst_1
491: invokestatic  #41
494: istore        55
496: aload         54
498: invokestatic  #42
501: astore        56
503: aload         47
505: aload         56
507: iconst_1
508: invokestatic  #41
511: istore        57
513: getstatic     #52
516: astore        58
518: aload         47
520: aload         58
522: iconst_0
523: invokestatic  #41
526: istore        59
528: aload         42
530: aload         58
532: iconst_0
533: invokestatic  #41
536: istore        60
538: aload         4
540: iconst_0
541: invokestatic  #123
544: invokestatic  #121
547: checkcast     #117
550: astore        61
552: aload_1
553: invokestatic  #47
556: aload_2
557: invokestatic  #47
560: aload_3
561: invokestatic  #47
564: aload         4
566: invokestatic  #47
569: aload         5
571: invokestatic  #47
574: aload         6
576: invokestatic  #47
579: aload         7
581: invokestatic  #47
584: aload         7
586: invokestatic  #60
589: ldc           #61
591: invokestatic  #62
594: aload         7
596: invokestatic  #63
599: ldc           #61
601: invokestatic  #62
604: aload         7
606: invokestatic  #64
609: ldc           #65
611: invokestatic  #62
614: new           #14
617: dup
618: invokespecial #15
621: ldc           #16
623: invokevirtual #17
626: iload         8
628: invokevirtual #48
631: ldc           #19
633: invokevirtual #17
636: iconst_m1
637: invokevirtual #48
640: ldc           #16
642: invokevirtual #17
645: invokevirtual #20
648: iload         8
650: iconst_m1
651: if_icmpne     658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #21
662: aload         9
664: invokestatic  #47
667: aload         10
669: invokestatic  #47
672: aload         11
674: invokestatic  #47
677: aload         12
679: invokestatic  #47
682: aload         13
684: invokestatic  #47
687: aload         14
689: invokestatic  #47
692: aload         15
694: invokestatic  #47
697: aload         16
699: invokestatic  #47
702: aload         16
704: invokestatic  #60
707: ldc           #61
709: invokestatic  #62
712: aload         16
714: invokestatic  #63
717: ldc           #61
719: invokestatic  #62
722: aload         16
724: invokestatic  #64
727: ldc           #65
729: invokestatic  #62
732: new           #14
735: dup
736: invokespecial #15
739: ldc           #16
741: invokevirtual #17
744: iload         17
746: invokevirtual #48
749: ldc           #19
751: invokevirtual #17
754: iconst_m1
755: invokevirtual #48
758: ldc           #16
760: invokevirtual #17
763: invokevirtual #20
766: iload         17
768: iconst_m1
769: if_icmpne     776
772: iconst_1
773: goto          777
776: iconst_0
777: invokestatic  #21
780: aload         18
782: invokestatic  #47
785: aload         19
787: invokestatic  #47
790: aload         20
792: invokestatic  #47
795: aload         21
797: invokestatic  #47
800: aload         23
802: invokestatic  #47
805: aload         24
807: invokestatic  #47
810: new           #14
813: dup
814: invokespecial #15
817: ldc           #16
819: invokevirtual #17
822: iload         25
824: invokevirtual #18
827: ldc           #19
829: invokevirtual #17
832: iconst_0
833: invokevirtual #18
836: ldc           #16
838: invokevirtual #17
841: invokevirtual #20
844: iload         25
846: ifne          853
849: iconst_1
850: goto          854
853: iconst_0
854: invokestatic  #21
857: aload         26
859: invokestatic  #47
862: aload         27
864: invokestatic  #47
867: aload         29
869: invokestatic  #47
872: aload         30
874: invokestatic  #47
877: new           #14
880: dup
881: invokespecial #15
884: ldc           #16
886: invokevirtual #17
889: iload         31
891: invokevirtual #18
894: ldc           #19
896: invokevirtual #17
899: iconst_0
900: invokevirtual #18
903: ldc           #16
905: invokevirtual #17
908: invokevirtual #20
911: iload         31
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #21
924: aload         32
926: invokestatic  #47
929: new           #14
932: dup
933: invokespecial #15
936: ldc           #16
938: invokevirtual #17
941: iload         33
943: invokevirtual #18
946: ldc           #19
948: invokevirtual #17
951: iconst_0
952: invokevirtual #18
955: ldc           #16
957: invokevirtual #17
960: invokevirtual #20
963: iload         33
965: ifne          972
968: iconst_1
969: goto          973
972: iconst_0
973: invokestatic  #21
976: aload         34
978: invokestatic  #47
981: aload         35
983: invokestatic  #47
986: aload         36
988: invokestatic  #47
991: aload         38
993: invokestatic  #47
996: aload         39
998: invokestatic  #47
1001: new           #14
1004: dup
1005: invokespecial #15
1008: ldc           #16
1010: invokevirtual #17
1013: iload         40
1015: invokevirtual #18
1018: ldc           #19
1020: invokevirtual #17
1023: iconst_0
1024: invokevirtual #18
1027: ldc           #16
1029: invokevirtual #17
1032: invokevirtual #20
1035: iload         40
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #21
1048: new           #14
1051: dup
1052: invokespecial #15
1055: ldc           #16
1057: invokevirtual #17
1060: iload         41
1062: invokevirtual #18
1065: ldc           #19
1067: invokevirtual #17
1070: iconst_0
1071: invokevirtual #18
1074: ldc           #16
1076: invokevirtual #17
1079: invokevirtual #20
1082: iload         41
1084: ifne          1091
1087: iconst_1
1088: goto          1092
1091: iconst_0
1092: invokestatic  #21
1095: aload         42
1097: invokestatic  #47
1100: aload         43
1102: invokestatic  #47
1105: aload         44
1107: invokestatic  #47
1110: aload         46
1112: invokestatic  #47
1115: aload         47
1117: invokestatic  #47
1120: new           #14
1123: dup
1124: invokespecial #15
1127: ldc           #16
1129: invokevirtual #17
1132: iload         48
1134: invokevirtual #18
1137: ldc           #19
1139: invokevirtual #17
1142: iconst_0
1143: invokevirtual #18
1146: ldc           #16
1148: invokevirtual #17
1151: invokevirtual #20
1154: iload         48
1156: ifne          1163
1159: iconst_1
1160: goto          1164
1163: iconst_0
1164: invokestatic  #21
1167: aload         49
1169: invokestatic  #47
1172: aload         50
1174: invokestatic  #47
1177: aload         51
1179: invokestatic  #47
1182: aload         53
1184: invokestatic  #47
1187: aload         54
1189: invokestatic  #47
1192: new           #14
1195: dup
1196: invokespecial #15
1199: ldc           #16
1201: invokevirtual #17
1204: iload         55
1206: invokevirtual #18
1209: ldc           #19
1211: invokevirtual #17
1214: iconst_0
1215: invokevirtual #18
1218: ldc           #16
1220: invokevirtual #17
1223: invokevirtual #20
1226: iload         55
1228: ifne          1235
1231: iconst_1
1232: goto          1236
1235: iconst_0
1236: invokestatic  #21
1239: aload         56
1241: invokestatic  #47
1244: new           #14
1247: dup
1248: invokespecial #15
1251: ldc           #16
1253: invokevirtual #17
1256: iload         57
1258: invokevirtual #18
1261: ldc           #19
1263: invokevirtual #17
1266: iconst_0
1267: invokevirtual #18
1270: ldc           #16
1272: invokevirtual #17
1275: invokevirtual #20
1278: iload         57
1280: ifne          1287
1283: iconst_1
1284: goto          1288
1287: iconst_0
1288: invokestatic  #21
1291: aload         58
1293: invokestatic  #47
1296: new           #14
1299: dup
1300: invokespecial #15
1303: ldc           #16
1305: invokevirtual #17
1308: iload         59
1310: invokevirtual #18
1313: ldc           #19
1315: invokevirtual #17
1318: iconst_0
1319: invokevirtual #18
1322: ldc           #16
1324: invokevirtual #17
1327: invokevirtual #20
1330: iload         59
1332: ifne          1339
1335: iconst_1
1336: goto          1340
1339: iconst_0
1340: invokestatic  #21
1343: new           #14
1346: dup
1347: invokespecial #15
1350: ldc           #16
1352: invokevirtual #17
1355: iload         60
1357: invokevirtual #18
1360: ldc           #19
1362: invokevirtual #17
1365: iconst_0
1366: invokevirtual #18
1369: ldc           #16
1371: invokevirtual #17
1374: invokevirtual #20
1377: iload         60
1379: ifne          1386
1382: iconst_1
1383: goto          1387
1386: iconst_0
1387: invokestatic  #21
1390: aload         61
1392: invokestatic  #47
1395: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 989
End line: 1036
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 1.0f, 1.0f, 1.0f, 0.0f, 1.0f };
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) '#');
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) (short) 1);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) (short) 0);
        int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray11, (-1.0f));
        float[] floatArray14 = null;
        float[] floatArray19 = new float[] { (byte) 1, ' ', 100, '4' };
        float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.removeElements(floatArray14, floatArray19);
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray19, (float) 100);
        float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.add(floatArray19, (int) (short) 1, (float) '.');
        int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray19, (float) 2, (int) '4');
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.removeElements(floatArray11, floatArray19);
        int[] intArray32 = new int[] { 3, 3 };
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray32);
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(intArray32, (int) (byte) -1);
        float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.removeAll(floatArray19, intArray32);
        java.lang.Class<?> wildcardClass37 = floatArray36.getClass();
        boolean boolean38 = org.apache.commons.lang3.reflect.TypeUtils.isArrayType((java.lang.reflect.Type) wildcardClass37);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(floatArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[1.0, 32.0, 100.0, 52.0]");
        org.junit.Assert.assertNull(floatArray20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[1.0, 46.0, 32.0, 100.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[3, 3]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[3, 3]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[1.0, 32.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #124
19: aastore
20: invokevirtual #7
23: pop
24: iconst_5
25: anewarray     #125
28: dup
29: iconst_0
30: fconst_1
31: invokestatic  #126
34: aastore
35: dup
36: iconst_1
37: fconst_1
38: invokestatic  #126
41: aastore
42: dup
43: iconst_2
44: fconst_1
45: invokestatic  #126
48: aastore
49: dup
50: iconst_3
51: fconst_0
52: invokestatic  #126
55: aastore
56: dup
57: iconst_4
58: fconst_1
59: invokestatic  #126
62: aastore
63: astore_1
64: aload_1
65: ldc           #127
67: invokestatic  #128
70: astore_2
71: aload_1
72: fconst_1
73: invokestatic  #128
76: astore_3
77: aload_1
78: fconst_0
79: invokestatic  #128
82: astore        4
84: aload         4
86: ldc           #129
88: invokestatic  #130
91: istore        5
93: aconst_null
94: astore        6
96: iconst_4
97: newarray       float
99: dup
100: iconst_0
101: fconst_1
102: fastore
103: dup
104: iconst_1
105: ldc           #131
107: fastore
108: dup
109: iconst_2
110: ldc           #132
112: fastore
113: dup
114: iconst_3
115: ldc           #133
117: fastore
118: astore        7
120: aload         6
122: aload         7
124: invokestatic  #134
127: astore        8
129: aload         7
131: ldc           #132
133: invokestatic  #135
136: istore        9
138: aload         7
140: iconst_1
141: ldc           #136
143: invokestatic  #137
146: astore        10
148: aload         7
150: fconst_2
151: bipush        52
153: invokestatic  #138
156: istore        11
158: aload         4
160: aload         7
162: invokestatic  #134
165: astore        12
167: iconst_2
168: newarray       int
170: dup
171: iconst_0
172: iconst_3
173: iastore
174: dup
175: iconst_1
176: iconst_3
177: iastore
178: astore        13
180: aload         13
182: invokestatic  #139
185: astore        14
187: aload         13
189: iconst_m1
190: invokestatic  #140
193: istore        15
195: aload         7
197: aload         13
199: invokestatic  #141
202: astore        16
204: aload         16
206: invokevirtual #71
209: astore        17
211: aload         17
213: invokestatic  #13
216: istore        18
218: aload_1
219: invokestatic  #47
222: aload_2
223: invokestatic  #47
226: aload_2
227: invokestatic  #142
230: ldc           #143
232: invokestatic  #62
235: aload_3
236: invokestatic  #47
239: aload_3
240: invokestatic  #142
243: ldc           #143
245: invokestatic  #62
248: aload         4
250: invokestatic  #47
253: aload         4
255: invokestatic  #142
258: ldc           #143
260: invokestatic  #62
263: new           #14
266: dup
267: invokespecial #15
270: ldc           #16
272: invokevirtual #17
275: iload         5
277: invokevirtual #48
280: ldc           #19
282: invokevirtual #17
285: iconst_m1
286: invokevirtual #48
289: ldc           #16
291: invokevirtual #17
294: invokevirtual #20
297: iload         5
299: iconst_m1
300: if_icmpne     307
303: iconst_1
304: goto          308
307: iconst_0
308: invokestatic  #21
311: aload         7
313: invokestatic  #47
316: aload         7
318: invokestatic  #142
321: ldc           #144
323: invokestatic  #62
326: aload         8
328: invokestatic  #35
331: new           #14
334: dup
335: invokespecial #15
338: ldc           #16
340: invokevirtual #17
343: iload         9
345: invokevirtual #48
348: ldc           #19
350: invokevirtual #17
353: iconst_2
354: invokevirtual #48
357: ldc           #16
359: invokevirtual #17
362: invokevirtual #20
365: iload         9
367: iconst_2
368: if_icmpne     375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #21
379: aload         10
381: invokestatic  #47
384: aload         10
386: invokestatic  #142
389: ldc           #145
391: invokestatic  #62
394: new           #14
397: dup
398: invokespecial #15
401: ldc           #16
403: invokevirtual #17
406: iload         11
408: invokevirtual #48
411: ldc           #19
413: invokevirtual #17
416: iconst_m1
417: invokevirtual #48
420: ldc           #16
422: invokevirtual #17
425: invokevirtual #20
428: iload         11
430: iconst_m1
431: if_icmpne     438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #21
442: aload         12
444: invokestatic  #47
447: aload         12
449: invokestatic  #142
452: ldc           #146
454: invokestatic  #62
457: aload         13
459: invokestatic  #47
462: aload         13
464: invokestatic  #147
467: ldc           #148
469: invokestatic  #62
472: aload         14
474: invokestatic  #47
477: aload         14
479: invokestatic  #147
482: ldc           #148
484: invokestatic  #62
487: new           #14
490: dup
491: invokespecial #15
494: ldc           #16
496: invokevirtual #17
499: iload         15
501: invokevirtual #18
504: ldc           #19
506: invokevirtual #17
509: iconst_0
510: invokevirtual #18
513: ldc           #16
515: invokevirtual #17
518: invokevirtual #20
521: iload         15
523: ifne          530
526: iconst_1
527: goto          531
530: iconst_0
531: invokestatic  #21
534: aload         16
536: invokestatic  #47
539: aload         16
541: invokestatic  #142
544: ldc           #149
546: invokestatic  #62
549: aload         17
551: invokestatic  #47
554: new           #14
557: dup
558: invokespecial #15
561: ldc           #16
563: invokevirtual #17
566: iload         18
568: invokevirtual #18
571: ldc           #19
573: invokevirtual #17
576: iconst_1
577: invokevirtual #18
580: ldc           #16
582: invokevirtual #17
585: invokevirtual #20
588: iload         18
590: iconst_1
591: if_icmpne     598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #21
602: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 1039
End line: 1122
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        java.lang.Class<?>[] wildcardClassArray38 = null;
        java.lang.Class[] classArray40 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray41 = (java.lang.Class<?>[]) classArray40;
        java.lang.Class[] classArray43 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray44 = (java.lang.Class<?>[]) classArray43;
        java.lang.Class<?> wildcardClass45 = null;
        java.lang.Class[] classArray47 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47;
        wildcardClassArray48[0] = wildcardClass45;
        boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray43, wildcardClassArray48, true);
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray40, (java.lang.Class<?>[]) classArray43);
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray38, (java.lang.Class<?>[]) classArray40, false);
        boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray38);
        java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray37);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(wildcardClassArray41);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(wildcardClassArray44);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(wildcardClassArray57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #150
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: aload         11
199: invokestatic  #42
202: astore        23
204: aconst_null
205: astore        24
207: iconst_0
208: anewarray     #39
211: astore        25
213: aload         25
215: checkcast     #40
218: astore        26
220: iconst_0
221: anewarray     #39
224: astore        27
226: aload         27
228: checkcast     #40
231: astore        28
233: aconst_null
234: astore        29
236: iconst_1
237: anewarray     #39
240: astore        30
242: aload         30
244: checkcast     #40
247: astore        31
249: aload         31
251: iconst_0
252: aload         29
254: aastore
255: aload         27
257: checkcast     #40
260: aload         31
262: iconst_1
263: invokestatic  #41
266: istore        32
268: aload         25
270: checkcast     #40
273: aload         27
275: checkcast     #40
278: invokestatic  #43
281: istore        33
283: aload         24
285: aload         25
287: checkcast     #40
290: iconst_0
291: invokestatic  #41
294: istore        34
296: aload         11
298: aload         24
300: invokestatic  #43
303: istore        35
305: aload         24
307: invokestatic  #53
310: astore        36
312: aload_1
313: invokestatic  #47
316: aload_2
317: invokestatic  #47
320: aload         4
322: invokestatic  #47
325: aload         5
327: invokestatic  #47
330: new           #14
333: dup
334: invokespecial #15
337: ldc           #16
339: invokevirtual #17
342: iload         6
344: invokevirtual #18
347: ldc           #19
349: invokevirtual #17
352: iconst_0
353: invokevirtual #18
356: ldc           #16
358: invokevirtual #17
361: invokevirtual #20
364: iload         6
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #21
377: aload         7
379: invokestatic  #47
382: aload         8
384: invokestatic  #47
387: aload         10
389: invokestatic  #47
392: aload         11
394: invokestatic  #47
397: new           #14
400: dup
401: invokespecial #15
404: ldc           #16
406: invokevirtual #17
409: iload         12
411: invokevirtual #18
414: ldc           #19
416: invokevirtual #17
419: iconst_0
420: invokevirtual #18
423: ldc           #16
425: invokevirtual #17
428: invokevirtual #20
431: iload         12
433: ifne          440
436: iconst_1
437: goto          441
440: iconst_0
441: invokestatic  #21
444: aload         13
446: invokestatic  #47
449: new           #14
452: dup
453: invokespecial #15
456: ldc           #16
458: invokevirtual #17
461: iload         14
463: invokevirtual #18
466: ldc           #19
468: invokevirtual #17
471: iconst_0
472: invokevirtual #18
475: ldc           #16
477: invokevirtual #17
480: invokevirtual #20
483: iload         14
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #21
496: aload         15
498: invokestatic  #47
501: aload         16
503: invokestatic  #47
506: aload         17
508: invokestatic  #47
511: aload         19
513: invokestatic  #47
516: aload         20
518: invokestatic  #47
521: new           #14
524: dup
525: invokespecial #15
528: ldc           #16
530: invokevirtual #17
533: iload         21
535: invokevirtual #18
538: ldc           #19
540: invokevirtual #17
543: iconst_0
544: invokevirtual #18
547: ldc           #16
549: invokevirtual #17
552: invokevirtual #20
555: iload         21
557: ifne          564
560: iconst_1
561: goto          565
564: iconst_0
565: invokestatic  #21
568: new           #14
571: dup
572: invokespecial #15
575: ldc           #16
577: invokevirtual #17
580: iload         22
582: invokevirtual #18
585: ldc           #19
587: invokevirtual #17
590: iconst_0
591: invokevirtual #18
594: ldc           #16
596: invokevirtual #17
599: invokevirtual #20
602: iload         22
604: ifne          611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #21
615: aload         23
617: invokestatic  #47
620: aload         25
622: invokestatic  #47
625: aload         26
627: invokestatic  #47
630: aload         27
632: invokestatic  #47
635: aload         28
637: invokestatic  #47
640: aload         30
642: invokestatic  #47
645: aload         31
647: invokestatic  #47
650: new           #14
653: dup
654: invokespecial #15
657: ldc           #16
659: invokevirtual #17
662: iload         32
664: invokevirtual #18
667: ldc           #19
669: invokevirtual #17
672: iconst_0
673: invokevirtual #18
676: ldc           #16
678: invokevirtual #17
681: invokevirtual #20
684: iload         32
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #21
697: new           #14
700: dup
701: invokespecial #15
704: ldc           #16
706: invokevirtual #17
709: iload         33
711: invokevirtual #18
714: ldc           #19
716: invokevirtual #17
719: iconst_1
720: invokevirtual #18
723: ldc           #16
725: invokevirtual #17
728: invokevirtual #20
731: iload         33
733: iconst_1
734: if_icmpne     741
737: iconst_1
738: goto          742
741: iconst_0
742: invokestatic  #21
745: new           #14
748: dup
749: invokespecial #15
752: ldc           #16
754: invokevirtual #17
757: iload         34
759: invokevirtual #18
762: ldc           #19
764: invokevirtual #17
767: iconst_1
768: invokevirtual #18
771: ldc           #16
773: invokevirtual #17
776: invokevirtual #20
779: iload         34
781: iconst_1
782: if_icmpne     789
785: iconst_1
786: goto          790
789: iconst_0
790: invokestatic  #21
793: new           #14
796: dup
797: invokespecial #15
800: ldc           #16
802: invokevirtual #17
805: iload         35
807: invokevirtual #18
810: ldc           #19
812: invokevirtual #17
815: iconst_0
816: invokevirtual #18
819: ldc           #16
821: invokevirtual #17
824: invokevirtual #20
827: iload         35
829: ifne          836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #21
840: aload         36
842: invokestatic  #35
845: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 1125
End line: 1207
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class[] classArray4 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4;
        java.lang.Class<?> wildcardClass6 = null;
        java.lang.Class[] classArray8 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray9 = (java.lang.Class<?>[]) classArray8;
        wildcardClassArray9[0] = wildcardClass6;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray4, wildcardClassArray9, true);
        boolean boolean14 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, (java.lang.Class<?>[]) classArray4);
        java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray1);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class<?> wildcardClass19 = null;
        java.lang.Class[] classArray21 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21;
        wildcardClassArray22[0] = wildcardClass19;
        boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray22, true);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray17);
        java.lang.reflect.Type[] typeArray28 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.Class[] classArray30 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        java.lang.Class<?> wildcardClass32 = null;
        java.lang.Class[] classArray34 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass32;
        boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray30, wildcardClassArray35, true);
        java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray35);
        java.lang.Class[] classArray42 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        java.lang.Class<?> wildcardClass44 = null;
        java.lang.Class[] classArray46 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        wildcardClassArray47[0] = wildcardClass44;
        boolean boolean51 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray42, wildcardClassArray47, true);
        java.lang.Class<?>[] wildcardClassArray52 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray42);
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray35, wildcardClassArray52);
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray52, false);
        boolean boolean57 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray52, true);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(wildcardClassArray9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray40);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: iconst_0
35: anewarray     #39
38: astore_3
39: aload_3
40: checkcast     #40
43: astore        4
45: aconst_null
46: astore        5
48: iconst_1
49: anewarray     #39
52: astore        6
54: aload         6
56: checkcast     #40
59: astore        7
61: aload         7
63: iconst_0
64: aload         5
66: aastore
67: aload_3
68: checkcast     #40
71: aload         7
73: iconst_1
74: invokestatic  #41
77: istore        8
79: aload_1
80: checkcast     #40
83: aload_3
84: checkcast     #40
87: invokestatic  #43
90: istore        9
92: aload_1
93: checkcast     #40
96: invokestatic  #53
99: astore        10
101: iconst_0
102: anewarray     #39
105: astore        11
107: aload         11
109: checkcast     #40
112: astore        12
114: aconst_null
115: astore        13
117: iconst_1
118: anewarray     #39
121: astore        14
123: aload         14
125: checkcast     #40
128: astore        15
130: aload         15
132: iconst_0
133: aload         13
135: aastore
136: aload         11
138: checkcast     #40
141: aload         15
143: iconst_1
144: invokestatic  #41
147: istore        16
149: aload         11
151: checkcast     #40
154: invokestatic  #42
157: astore        17
159: aload         11
161: checkcast     #44
164: invokestatic  #32
167: astore        18
169: iconst_0
170: anewarray     #39
173: astore        19
175: aload         19
177: checkcast     #40
180: astore        20
182: aconst_null
183: astore        21
185: iconst_1
186: anewarray     #39
189: astore        22
191: aload         22
193: checkcast     #40
196: astore        23
198: aload         23
200: iconst_0
201: aload         21
203: aastore
204: aload         19
206: checkcast     #40
209: aload         23
211: iconst_1
212: invokestatic  #41
215: istore        24
217: aload         23
219: invokestatic  #42
222: astore        25
224: iconst_0
225: anewarray     #39
228: astore        26
230: aload         26
232: checkcast     #40
235: astore        27
237: aconst_null
238: astore        28
240: iconst_1
241: anewarray     #39
244: astore        29
246: aload         29
248: checkcast     #40
251: astore        30
253: aload         30
255: iconst_0
256: aload         28
258: aastore
259: aload         26
261: checkcast     #40
264: aload         30
266: iconst_1
267: invokestatic  #41
270: istore        31
272: aload         26
274: checkcast     #40
277: invokestatic  #42
280: astore        32
282: aload         23
284: aload         32
286: invokestatic  #43
289: istore        33
291: aload         11
293: checkcast     #40
296: aload         32
298: iconst_0
299: invokestatic  #41
302: istore        34
304: aload_1
305: checkcast     #40
308: aload         32
310: iconst_1
311: invokestatic  #41
314: istore        35
316: aload_1
317: invokestatic  #47
320: aload_2
321: invokestatic  #47
324: aload_3
325: invokestatic  #47
328: aload         4
330: invokestatic  #47
333: aload         6
335: invokestatic  #47
338: aload         7
340: invokestatic  #47
343: new           #14
346: dup
347: invokespecial #15
350: ldc           #16
352: invokevirtual #17
355: iload         8
357: invokevirtual #18
360: ldc           #19
362: invokevirtual #17
365: iconst_0
366: invokevirtual #18
369: ldc           #16
371: invokevirtual #17
374: invokevirtual #20
377: iload         8
379: ifne          386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #21
390: new           #14
393: dup
394: invokespecial #15
397: ldc           #16
399: invokevirtual #17
402: iload         9
404: invokevirtual #18
407: ldc           #19
409: invokevirtual #17
412: iconst_1
413: invokevirtual #18
416: ldc           #16
418: invokevirtual #17
421: invokevirtual #20
424: iload         9
426: iconst_1
427: if_icmpne     434
430: iconst_1
431: goto          435
434: iconst_0
435: invokestatic  #21
438: aload         10
440: invokestatic  #47
443: aload         11
445: invokestatic  #47
448: aload         12
450: invokestatic  #47
453: aload         14
455: invokestatic  #47
458: aload         15
460: invokestatic  #47
463: new           #14
466: dup
467: invokespecial #15
470: ldc           #16
472: invokevirtual #17
475: iload         16
477: invokevirtual #18
480: ldc           #19
482: invokevirtual #17
485: iconst_0
486: invokevirtual #18
489: ldc           #16
491: invokevirtual #17
494: invokevirtual #20
497: iload         16
499: ifne          506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #21
510: aload         17
512: invokestatic  #47
515: aload         18
517: invokestatic  #47
520: aload         19
522: invokestatic  #47
525: aload         20
527: invokestatic  #47
530: aload         22
532: invokestatic  #47
535: aload         23
537: invokestatic  #47
540: new           #14
543: dup
544: invokespecial #15
547: ldc           #16
549: invokevirtual #17
552: iload         24
554: invokevirtual #18
557: ldc           #19
559: invokevirtual #17
562: iconst_0
563: invokevirtual #18
566: ldc           #16
568: invokevirtual #17
571: invokevirtual #20
574: iload         24
576: ifne          583
579: iconst_1
580: goto          584
583: iconst_0
584: invokestatic  #21
587: aload         25
589: invokestatic  #47
592: aload         26
594: invokestatic  #47
597: aload         27
599: invokestatic  #47
602: aload         29
604: invokestatic  #47
607: aload         30
609: invokestatic  #47
612: new           #14
615: dup
616: invokespecial #15
619: ldc           #16
621: invokevirtual #17
624: iload         31
626: invokevirtual #18
629: ldc           #19
631: invokevirtual #17
634: iconst_0
635: invokevirtual #18
638: ldc           #16
640: invokevirtual #17
643: invokevirtual #20
646: iload         31
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #21
659: aload         32
661: invokestatic  #47
664: new           #14
667: dup
668: invokespecial #15
671: ldc           #16
673: invokevirtual #17
676: iload         33
678: invokevirtual #18
681: ldc           #19
683: invokevirtual #17
686: iconst_0
687: invokevirtual #18
690: ldc           #16
692: invokevirtual #17
695: invokevirtual #20
698: iload         33
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #21
711: new           #14
714: dup
715: invokespecial #15
718: ldc           #16
720: invokevirtual #17
723: iload         34
725: invokevirtual #18
728: ldc           #19
730: invokevirtual #17
733: iconst_1
734: invokevirtual #18
737: ldc           #16
739: invokevirtual #17
742: invokevirtual #20
745: iload         34
747: iconst_1
748: if_icmpne     755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #21
759: new           #14
762: dup
763: invokespecial #15
766: ldc           #16
768: invokevirtual #17
771: iload         35
773: invokevirtual #18
776: ldc           #19
778: invokevirtual #17
781: iconst_1
782: invokevirtual #18
785: ldc           #16
787: invokevirtual #17
790: invokevirtual #20
793: iload         35
795: iconst_1
796: if_icmpne     803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #21
807: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 1210
End line: 1347
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43);
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        java.lang.Class<?> wildcardClass52 = null;
        java.lang.Class[] classArray54 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass52;
        boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray55, true);
        java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray55);
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray60, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63, false);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray63, true);
        java.lang.Class[] classArray69 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69;
        java.lang.Class<?> wildcardClass71 = null;
        java.lang.Class[] classArray73 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray74 = (java.lang.Class<?>[]) classArray73;
        wildcardClassArray74[0] = wildcardClass71;
        boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray69, wildcardClassArray74, true);
        java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        java.lang.Class<?> wildcardClass83 = null;
        java.lang.Class[] classArray85 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray86 = (java.lang.Class<?>[]) classArray85;
        wildcardClassArray86[0] = wildcardClass83;
        boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray81, wildcardClassArray86, true);
        java.lang.Class<?>[] wildcardClassArray91 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray81);
        boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray74, wildcardClassArray91);
        java.lang.reflect.Type[] typeArray93 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray94 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray95 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray94);
        java.lang.reflect.Type[] typeArray96 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.reflect.Type[]) wildcardClassArray31, (java.lang.reflect.Type[]) wildcardClassArray94);
        java.lang.Class<?>[] wildcardClassArray97 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray31);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(wildcardClassArray70);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertNotNull(wildcardClassArray97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #152
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: iconst_0
198: anewarray     #39
201: astore        23
203: aload         23
205: checkcast     #40
208: astore        24
210: aconst_null
211: astore        25
213: iconst_1
214: anewarray     #39
217: astore        26
219: aload         26
221: checkcast     #40
224: astore        27
226: aload         27
228: iconst_0
229: aload         25
231: aastore
232: aload         23
234: checkcast     #40
237: aload         27
239: iconst_1
240: invokestatic  #41
243: istore        28
245: aload         27
247: invokestatic  #42
250: astore        29
252: iconst_0
253: anewarray     #39
256: astore        30
258: aload         30
260: checkcast     #40
263: astore        31
265: aconst_null
266: astore        32
268: iconst_1
269: anewarray     #39
272: astore        33
274: aload         33
276: checkcast     #40
279: astore        34
281: aload         34
283: iconst_0
284: aload         32
286: aastore
287: aload         30
289: checkcast     #40
292: aload         34
294: iconst_1
295: invokestatic  #41
298: istore        35
300: aload         34
302: invokestatic  #42
305: astore        36
307: aload         27
309: aload         36
311: iconst_1
312: invokestatic  #41
315: istore        37
317: getstatic     #52
320: astore        38
322: aload         27
324: aload         38
326: iconst_0
327: invokestatic  #41
330: istore        39
332: aload         20
334: aload         38
336: iconst_1
337: invokestatic  #41
340: istore        40
342: iconst_0
343: anewarray     #39
346: astore        41
348: aload         41
350: checkcast     #40
353: astore        42
355: aconst_null
356: astore        43
358: iconst_1
359: anewarray     #39
362: astore        44
364: aload         44
366: checkcast     #40
369: astore        45
371: aload         45
373: iconst_0
374: aload         43
376: aastore
377: aload         41
379: checkcast     #40
382: aload         45
384: iconst_1
385: invokestatic  #41
388: istore        46
390: aload         45
392: invokestatic  #42
395: astore        47
397: iconst_0
398: anewarray     #39
401: astore        48
403: aload         48
405: checkcast     #40
408: astore        49
410: aconst_null
411: astore        50
413: iconst_1
414: anewarray     #39
417: astore        51
419: aload         51
421: checkcast     #40
424: astore        52
426: aload         52
428: iconst_0
429: aload         50
431: aastore
432: aload         48
434: checkcast     #40
437: aload         52
439: iconst_1
440: invokestatic  #41
443: istore        53
445: aload         48
447: checkcast     #40
450: invokestatic  #42
453: astore        54
455: aload         45
457: aload         54
459: invokestatic  #43
462: istore        55
464: aload         45
466: checkcast     #44
469: invokestatic  #32
472: astore        56
474: aload         45
476: invokestatic  #53
479: astore        57
481: aload         57
483: invokestatic  #53
486: astore        58
488: aload         20
490: checkcast     #44
493: aload         57
495: checkcast     #44
498: invokestatic  #54
501: checkcast     #44
504: astore        59
506: aload         20
508: invokestatic  #53
511: astore        60
513: aload_1
514: invokestatic  #47
517: aload_2
518: invokestatic  #47
521: aload         4
523: invokestatic  #47
526: aload         5
528: invokestatic  #47
531: new           #14
534: dup
535: invokespecial #15
538: ldc           #16
540: invokevirtual #17
543: iload         6
545: invokevirtual #18
548: ldc           #19
550: invokevirtual #17
553: iconst_0
554: invokevirtual #18
557: ldc           #16
559: invokevirtual #17
562: invokevirtual #20
565: iload         6
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #21
578: aload         7
580: invokestatic  #47
583: aload         8
585: invokestatic  #47
588: aload         10
590: invokestatic  #47
593: aload         11
595: invokestatic  #47
598: new           #14
601: dup
602: invokespecial #15
605: ldc           #16
607: invokevirtual #17
610: iload         12
612: invokevirtual #18
615: ldc           #19
617: invokevirtual #17
620: iconst_0
621: invokevirtual #18
624: ldc           #16
626: invokevirtual #17
629: invokevirtual #20
632: iload         12
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #21
645: aload         13
647: invokestatic  #47
650: new           #14
653: dup
654: invokespecial #15
657: ldc           #16
659: invokevirtual #17
662: iload         14
664: invokevirtual #18
667: ldc           #19
669: invokevirtual #17
672: iconst_0
673: invokevirtual #18
676: ldc           #16
678: invokevirtual #17
681: invokevirtual #20
684: iload         14
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #21
697: aload         15
699: invokestatic  #47
702: aload         16
704: invokestatic  #47
707: aload         17
709: invokestatic  #47
712: aload         19
714: invokestatic  #47
717: aload         20
719: invokestatic  #47
722: new           #14
725: dup
726: invokespecial #15
729: ldc           #16
731: invokevirtual #17
734: iload         21
736: invokevirtual #18
739: ldc           #19
741: invokevirtual #17
744: iconst_0
745: invokevirtual #18
748: ldc           #16
750: invokevirtual #17
753: invokevirtual #20
756: iload         21
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #21
769: new           #14
772: dup
773: invokespecial #15
776: ldc           #16
778: invokevirtual #17
781: iload         22
783: invokevirtual #18
786: ldc           #19
788: invokevirtual #17
791: iconst_0
792: invokevirtual #18
795: ldc           #16
797: invokevirtual #17
800: invokevirtual #20
803: iload         22
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #21
816: aload         23
818: invokestatic  #47
821: aload         24
823: invokestatic  #47
826: aload         26
828: invokestatic  #47
831: aload         27
833: invokestatic  #47
836: new           #14
839: dup
840: invokespecial #15
843: ldc           #16
845: invokevirtual #17
848: iload         28
850: invokevirtual #18
853: ldc           #19
855: invokevirtual #17
858: iconst_0
859: invokevirtual #18
862: ldc           #16
864: invokevirtual #17
867: invokevirtual #20
870: iload         28
872: ifne          879
875: iconst_1
876: goto          880
879: iconst_0
880: invokestatic  #21
883: aload         29
885: invokestatic  #47
888: aload         30
890: invokestatic  #47
893: aload         31
895: invokestatic  #47
898: aload         33
900: invokestatic  #47
903: aload         34
905: invokestatic  #47
908: new           #14
911: dup
912: invokespecial #15
915: ldc           #16
917: invokevirtual #17
920: iload         35
922: invokevirtual #18
925: ldc           #19
927: invokevirtual #17
930: iconst_0
931: invokevirtual #18
934: ldc           #16
936: invokevirtual #17
939: invokevirtual #20
942: iload         35
944: ifne          951
947: iconst_1
948: goto          952
951: iconst_0
952: invokestatic  #21
955: aload         36
957: invokestatic  #47
960: new           #14
963: dup
964: invokespecial #15
967: ldc           #16
969: invokevirtual #17
972: iload         37
974: invokevirtual #18
977: ldc           #19
979: invokevirtual #17
982: iconst_0
983: invokevirtual #18
986: ldc           #16
988: invokevirtual #17
991: invokevirtual #20
994: iload         37
996: ifne          1003
999: iconst_1
1000: goto          1004
1003: iconst_0
1004: invokestatic  #21
1007: aload         38
1009: invokestatic  #47
1012: new           #14
1015: dup
1016: invokespecial #15
1019: ldc           #16
1021: invokevirtual #17
1024: iload         39
1026: invokevirtual #18
1029: ldc           #19
1031: invokevirtual #17
1034: iconst_0
1035: invokevirtual #18
1038: ldc           #16
1040: invokevirtual #17
1043: invokevirtual #20
1046: iload         39
1048: ifne          1055
1051: iconst_1
1052: goto          1056
1055: iconst_0
1056: invokestatic  #21
1059: new           #14
1062: dup
1063: invokespecial #15
1066: ldc           #16
1068: invokevirtual #17
1071: iload         40
1073: invokevirtual #18
1076: ldc           #19
1078: invokevirtual #17
1081: iconst_0
1082: invokevirtual #18
1085: ldc           #16
1087: invokevirtual #17
1090: invokevirtual #20
1093: iload         40
1095: ifne          1102
1098: iconst_1
1099: goto          1103
1102: iconst_0
1103: invokestatic  #21
1106: aload         41
1108: invokestatic  #47
1111: aload         42
1113: invokestatic  #47
1116: aload         44
1118: invokestatic  #47
1121: aload         45
1123: invokestatic  #47
1126: new           #14
1129: dup
1130: invokespecial #15
1133: ldc           #16
1135: invokevirtual #17
1138: iload         46
1140: invokevirtual #18
1143: ldc           #19
1145: invokevirtual #17
1148: iconst_0
1149: invokevirtual #18
1152: ldc           #16
1154: invokevirtual #17
1157: invokevirtual #20
1160: iload         46
1162: ifne          1169
1165: iconst_1
1166: goto          1170
1169: iconst_0
1170: invokestatic  #21
1173: aload         47
1175: invokestatic  #47
1178: aload         48
1180: invokestatic  #47
1183: aload         49
1185: invokestatic  #47
1188: aload         51
1190: invokestatic  #47
1193: aload         52
1195: invokestatic  #47
1198: new           #14
1201: dup
1202: invokespecial #15
1205: ldc           #16
1207: invokevirtual #17
1210: iload         53
1212: invokevirtual #18
1215: ldc           #19
1217: invokevirtual #17
1220: iconst_0
1221: invokevirtual #18
1224: ldc           #16
1226: invokevirtual #17
1229: invokevirtual #20
1232: iload         53
1234: ifne          1241
1237: iconst_1
1238: goto          1242
1241: iconst_0
1242: invokestatic  #21
1245: aload         54
1247: invokestatic  #47
1250: new           #14
1253: dup
1254: invokespecial #15
1257: ldc           #16
1259: invokevirtual #17
1262: iload         55
1264: invokevirtual #18
1267: ldc           #19
1269: invokevirtual #17
1272: iconst_0
1273: invokevirtual #18
1276: ldc           #16
1278: invokevirtual #17
1281: invokevirtual #20
1284: iload         55
1286: ifne          1293
1289: iconst_1
1290: goto          1294
1293: iconst_0
1294: invokestatic  #21
1297: aload         56
1299: invokestatic  #47
1302: aload         57
1304: invokestatic  #47
1307: aload         58
1309: invokestatic  #47
1312: aload         59
1314: invokestatic  #47
1317: aload         60
1319: invokestatic  #47
1322: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 1350
End line: 1368
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray0 = null;
        org.apache.commons.lang3.reflect.TypeUtils typeUtils1 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils2 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils5 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils6 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray7 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils1, typeUtils2, typeUtils3, typeUtils4, typeUtils5, typeUtils6 };
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray8 = org.apache.commons.lang3.ArrayUtils.clone(typeUtilsArray7);
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray9 = org.apache.commons.lang3.ArrayUtils.add(typeUtilsArray0, typeUtilsArray8);
        java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) typeUtilsArray9);
        org.junit.Assert.assertNotNull(typeUtilsArray7);
        org.junit.Assert.assertNotNull(typeUtilsArray8);
        org.junit.Assert.assertNotNull(typeUtilsArray9);
        org.junit.Assert.assertNotNull(wildcardClassArray10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #153
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: checkcast     #154
28: astore_1
29: new           #27
32: dup
33: invokespecial #28
36: astore_2
37: new           #27
40: dup
41: invokespecial #28
44: astore_3
45: new           #27
48: dup
49: invokespecial #28
52: astore        4
54: new           #27
57: dup
58: invokespecial #28
61: astore        5
63: new           #27
66: dup
67: invokespecial #28
70: astore        6
72: new           #27
75: dup
76: invokespecial #28
79: astore        7
81: bipush        6
83: anewarray     #27
86: dup
87: iconst_0
88: aload_2
89: aastore
90: dup
91: iconst_1
92: aload_3
93: aastore
94: dup
95: iconst_2
96: aload         4
98: aastore
99: dup
100: iconst_3
101: aload         5
103: aastore
104: dup
105: iconst_4
106: aload         6
108: aastore
109: dup
110: iconst_5
111: aload         7
113: aastore
114: astore        8
116: aload         8
118: invokestatic  #67
121: checkcast     #68
124: astore        9
126: aload_1
127: aload         9
129: invokestatic  #155
132: checkcast     #154
135: astore        10
137: aload         10
139: checkcast     #45
142: invokestatic  #59
145: astore        11
147: aload         8
149: invokestatic  #47
152: aload         9
154: invokestatic  #47
157: aload         10
159: invokestatic  #47
162: aload         11
164: invokestatic  #47
167: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 1371
End line: 1466
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray6);
        java.lang.Class[] classArray27 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray28 = (java.lang.Class<?>[]) classArray27;
        java.lang.Class<?> wildcardClass29 = null;
        java.lang.Class[] classArray31 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass29;
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray27, wildcardClassArray32, true);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43);
        boolean boolean49 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray32, wildcardClassArray43);
        java.lang.reflect.Type[] typeArray50 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray43);
        java.lang.Class[] classArray52 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        java.lang.Class<?> wildcardClass54 = null;
        java.lang.Class[] classArray56 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass54;
        boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray52, wildcardClassArray57, true);
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray57);
        java.lang.Class<?>[] wildcardClassArray65 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray57, (int) (short) 0, (int) (byte) 1);
        java.lang.reflect.Type[] typeArray66 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray65);
        boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray25, wildcardClassArray65, false);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray25);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(wildcardClassArray28);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #45
145: invokestatic  #59
148: astore        16
150: iconst_0
151: anewarray     #39
154: astore        17
156: aload         17
158: checkcast     #40
161: astore        18
163: aconst_null
164: astore        19
166: iconst_1
167: anewarray     #39
170: astore        20
172: aload         20
174: checkcast     #40
177: astore        21
179: aload         21
181: iconst_0
182: aload         19
184: aastore
185: aload         17
187: checkcast     #40
190: aload         21
192: iconst_1
193: invokestatic  #41
196: istore        22
198: iconst_0
199: anewarray     #39
202: astore        23
204: aload         23
206: checkcast     #40
209: astore        24
211: aconst_null
212: astore        25
214: iconst_1
215: anewarray     #39
218: astore        26
220: aload         26
222: checkcast     #40
225: astore        27
227: aload         27
229: iconst_0
230: aload         25
232: aastore
233: aload         23
235: checkcast     #40
238: aload         27
240: iconst_1
241: invokestatic  #41
244: istore        28
246: aload         27
248: invokestatic  #42
251: astore        29
253: aload         21
255: aload         27
257: invokestatic  #43
260: istore        30
262: aload         27
264: checkcast     #44
267: invokestatic  #32
270: astore        31
272: iconst_0
273: anewarray     #39
276: astore        32
278: aload         32
280: checkcast     #40
283: astore        33
285: aconst_null
286: astore        34
288: iconst_1
289: anewarray     #39
292: astore        35
294: aload         35
296: checkcast     #40
299: astore        36
301: aload         36
303: iconst_0
304: aload         34
306: aastore
307: aload         32
309: checkcast     #40
312: aload         36
314: iconst_1
315: invokestatic  #41
318: istore        37
320: aload         27
322: aload         36
324: invokestatic  #43
327: istore        38
329: aload         36
331: iconst_0
332: iconst_1
333: invokestatic  #69
336: checkcast     #40
339: astore        39
341: aload         39
343: checkcast     #44
346: invokestatic  #32
349: astore        40
351: aload         16
353: aload         39
355: iconst_0
356: invokestatic  #41
359: istore        41
361: aload_1
362: invokestatic  #47
365: aload_2
366: invokestatic  #47
369: aload         4
371: invokestatic  #47
374: aload         5
376: invokestatic  #47
379: new           #14
382: dup
383: invokespecial #15
386: ldc           #16
388: invokevirtual #17
391: iload         6
393: invokevirtual #18
396: ldc           #19
398: invokevirtual #17
401: iconst_0
402: invokevirtual #18
405: ldc           #16
407: invokevirtual #17
410: invokevirtual #20
413: iload         6
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #21
426: aload         7
428: invokestatic  #47
431: aload         8
433: invokestatic  #47
436: aload         9
438: invokestatic  #47
441: aload         11
443: invokestatic  #47
446: aload         12
448: invokestatic  #47
451: new           #14
454: dup
455: invokespecial #15
458: ldc           #16
460: invokevirtual #17
463: iload         13
465: invokevirtual #18
468: ldc           #19
470: invokevirtual #17
473: iconst_0
474: invokevirtual #18
477: ldc           #16
479: invokevirtual #17
482: invokevirtual #20
485: iload         13
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #21
498: aload         14
500: invokestatic  #47
503: new           #14
506: dup
507: invokespecial #15
510: ldc           #16
512: invokevirtual #17
515: iload         15
517: invokevirtual #18
520: ldc           #19
522: invokevirtual #17
525: iconst_0
526: invokevirtual #18
529: ldc           #16
531: invokevirtual #17
534: invokevirtual #20
537: iload         15
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #21
550: aload         16
552: invokestatic  #47
555: aload         17
557: invokestatic  #47
560: aload         18
562: invokestatic  #47
565: aload         20
567: invokestatic  #47
570: aload         21
572: invokestatic  #47
575: new           #14
578: dup
579: invokespecial #15
582: ldc           #16
584: invokevirtual #17
587: iload         22
589: invokevirtual #18
592: ldc           #19
594: invokevirtual #17
597: iconst_0
598: invokevirtual #18
601: ldc           #16
603: invokevirtual #17
606: invokevirtual #20
609: iload         22
611: ifne          618
614: iconst_1
615: goto          619
618: iconst_0
619: invokestatic  #21
622: aload         23
624: invokestatic  #47
627: aload         24
629: invokestatic  #47
632: aload         26
634: invokestatic  #47
637: aload         27
639: invokestatic  #47
642: new           #14
645: dup
646: invokespecial #15
649: ldc           #16
651: invokevirtual #17
654: iload         28
656: invokevirtual #18
659: ldc           #19
661: invokevirtual #17
664: iconst_0
665: invokevirtual #18
668: ldc           #16
670: invokevirtual #17
673: invokevirtual #20
676: iload         28
678: ifne          685
681: iconst_1
682: goto          686
685: iconst_0
686: invokestatic  #21
689: aload         29
691: invokestatic  #47
694: new           #14
697: dup
698: invokespecial #15
701: ldc           #16
703: invokevirtual #17
706: iload         30
708: invokevirtual #18
711: ldc           #19
713: invokevirtual #17
716: iconst_0
717: invokevirtual #18
720: ldc           #16
722: invokevirtual #17
725: invokevirtual #20
728: iload         30
730: ifne          737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #21
741: aload         31
743: invokestatic  #47
746: aload         32
748: invokestatic  #47
751: aload         33
753: invokestatic  #47
756: aload         35
758: invokestatic  #47
761: aload         36
763: invokestatic  #47
766: new           #14
769: dup
770: invokespecial #15
773: ldc           #16
775: invokevirtual #17
778: iload         37
780: invokevirtual #18
783: ldc           #19
785: invokevirtual #17
788: iconst_0
789: invokevirtual #18
792: ldc           #16
794: invokevirtual #17
797: invokevirtual #20
800: iload         37
802: ifne          809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #21
813: new           #14
816: dup
817: invokespecial #15
820: ldc           #16
822: invokevirtual #17
825: iload         38
827: invokevirtual #18
830: ldc           #19
832: invokevirtual #17
835: iconst_0
836: invokevirtual #18
839: ldc           #16
841: invokevirtual #17
844: invokevirtual #20
847: iload         38
849: ifne          856
852: iconst_1
853: goto          857
856: iconst_0
857: invokestatic  #21
860: aload         39
862: invokestatic  #47
865: aload         40
867: invokestatic  #47
870: new           #14
873: dup
874: invokespecial #15
877: ldc           #16
879: invokevirtual #17
882: iload         41
884: invokevirtual #18
887: ldc           #19
889: invokevirtual #17
892: iconst_0
893: invokevirtual #18
896: ldc           #16
898: invokevirtual #17
901: invokevirtual #20
904: iload         41
906: ifne          913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #21
917: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 1469
End line: 1513
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        java.lang.Object[] objArray0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        java.lang.Class<?> wildcardClass4 = null;
        java.lang.Class[] classArray6 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray7 = (java.lang.Class<?>[]) classArray6;
        wildcardClassArray7[0] = wildcardClass4;
        boolean boolean11 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray2, wildcardClassArray7, true);
        java.lang.Class<?>[] wildcardClassArray12 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray7);
        java.lang.Class[] classArray14 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        java.lang.Class<?> wildcardClass16 = null;
        java.lang.Class[] classArray18 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18;
        wildcardClassArray19[0] = wildcardClass16;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray14, wildcardClassArray19, true);
        java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray14);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray24);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray7);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray7);
        boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray0, (java.lang.Object[]) wildcardClassArray7);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(wildcardClassArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClassArray19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #157
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: iconst_0
27: anewarray     #39
30: astore_2
31: aload_2
32: checkcast     #40
35: astore_3
36: aconst_null
37: astore        4
39: iconst_1
40: anewarray     #39
43: astore        5
45: aload         5
47: checkcast     #40
50: astore        6
52: aload         6
54: iconst_0
55: aload         4
57: aastore
58: aload_2
59: checkcast     #40
62: aload         6
64: iconst_1
65: invokestatic  #41
68: istore        7
70: aload         6
72: invokestatic  #42
75: astore        8
77: iconst_0
78: anewarray     #39
81: astore        9
83: aload         9
85: checkcast     #40
88: astore        10
90: aconst_null
91: astore        11
93: iconst_1
94: anewarray     #39
97: astore        12
99: aload         12
101: checkcast     #40
104: astore        13
106: aload         13
108: iconst_0
109: aload         11
111: aastore
112: aload         9
114: checkcast     #40
117: aload         13
119: iconst_1
120: invokestatic  #41
123: istore        14
125: aload         9
127: checkcast     #40
130: invokestatic  #42
133: astore        15
135: aload         6
137: aload         15
139: invokestatic  #43
142: istore        16
144: aload         6
146: checkcast     #44
149: invokestatic  #32
152: astore        17
154: aload         6
156: invokestatic  #42
159: astore        18
161: aload_1
162: aload         6
164: checkcast     #45
167: invokestatic  #158
170: istore        19
172: aload_2
173: invokestatic  #47
176: aload_3
177: invokestatic  #47
180: aload         5
182: invokestatic  #47
185: aload         6
187: invokestatic  #47
190: new           #14
193: dup
194: invokespecial #15
197: ldc           #16
199: invokevirtual #17
202: iload         7
204: invokevirtual #18
207: ldc           #19
209: invokevirtual #17
212: iconst_0
213: invokevirtual #18
216: ldc           #16
218: invokevirtual #17
221: invokevirtual #20
224: iload         7
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #21
237: aload         8
239: invokestatic  #47
242: aload         9
244: invokestatic  #47
247: aload         10
249: invokestatic  #47
252: aload         12
254: invokestatic  #47
257: aload         13
259: invokestatic  #47
262: new           #14
265: dup
266: invokespecial #15
269: ldc           #16
271: invokevirtual #17
274: iload         14
276: invokevirtual #18
279: ldc           #19
281: invokevirtual #17
284: iconst_0
285: invokevirtual #18
288: ldc           #16
290: invokevirtual #17
293: invokevirtual #20
296: iload         14
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #21
309: aload         15
311: invokestatic  #47
314: new           #14
317: dup
318: invokespecial #15
321: ldc           #16
323: invokevirtual #17
326: iload         16
328: invokevirtual #18
331: ldc           #19
333: invokevirtual #17
336: iconst_0
337: invokevirtual #18
340: ldc           #16
342: invokevirtual #17
345: invokevirtual #20
348: iload         16
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #21
361: aload         17
363: invokestatic  #47
366: aload         18
368: invokestatic  #47
371: new           #14
374: dup
375: invokespecial #15
378: ldc           #16
380: invokevirtual #17
383: iload         19
385: invokevirtual #18
388: ldc           #19
390: invokevirtual #17
393: iconst_0
394: invokevirtual #18
397: ldc           #16
399: invokevirtual #17
402: invokevirtual #20
405: iload         19
407: ifne          414
410: iconst_1
411: goto          415
414: iconst_0
415: invokestatic  #21
418: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 1516
End line: 1560
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        java.lang.Class<?>[] wildcardClassArray0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        java.lang.Class<?> wildcardClass4 = null;
        java.lang.Class[] classArray6 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray7 = (java.lang.Class<?>[]) classArray6;
        wildcardClassArray7[0] = wildcardClass4;
        boolean boolean11 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray2, wildcardClassArray7, true);
        java.lang.Class<?>[] wildcardClassArray12 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray7);
        java.lang.Class[] classArray14 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        java.lang.Class<?> wildcardClass16 = null;
        java.lang.Class[] classArray18 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18;
        wildcardClassArray19[0] = wildcardClass16;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray14, wildcardClassArray19, true);
        java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray14);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray24);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray7);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray7);
        boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray6);
        org.junit.Assert.assertNotNull(wildcardClassArray7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClassArray19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: iconst_0
27: anewarray     #39
30: astore_2
31: aload_2
32: checkcast     #40
35: astore_3
36: aconst_null
37: astore        4
39: iconst_1
40: anewarray     #39
43: astore        5
45: aload         5
47: checkcast     #40
50: astore        6
52: aload         6
54: iconst_0
55: aload         4
57: aastore
58: aload_2
59: checkcast     #40
62: aload         6
64: iconst_1
65: invokestatic  #41
68: istore        7
70: aload         6
72: invokestatic  #42
75: astore        8
77: iconst_0
78: anewarray     #39
81: astore        9
83: aload         9
85: checkcast     #40
88: astore        10
90: aconst_null
91: astore        11
93: iconst_1
94: anewarray     #39
97: astore        12
99: aload         12
101: checkcast     #40
104: astore        13
106: aload         13
108: iconst_0
109: aload         11
111: aastore
112: aload         9
114: checkcast     #40
117: aload         13
119: iconst_1
120: invokestatic  #41
123: istore        14
125: aload         9
127: checkcast     #40
130: invokestatic  #42
133: astore        15
135: aload         6
137: aload         15
139: invokestatic  #43
142: istore        16
144: aload         6
146: checkcast     #44
149: invokestatic  #32
152: astore        17
154: aload         6
156: invokestatic  #42
159: astore        18
161: aload_1
162: aload         18
164: invokestatic  #43
167: istore        19
169: aload_2
170: invokestatic  #47
173: aload_3
174: invokestatic  #47
177: aload         5
179: invokestatic  #47
182: aload         6
184: invokestatic  #47
187: new           #14
190: dup
191: invokespecial #15
194: ldc           #16
196: invokevirtual #17
199: iload         7
201: invokevirtual #18
204: ldc           #19
206: invokevirtual #17
209: iconst_0
210: invokevirtual #18
213: ldc           #16
215: invokevirtual #17
218: invokevirtual #20
221: iload         7
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #21
234: aload         8
236: invokestatic  #47
239: aload         9
241: invokestatic  #47
244: aload         10
246: invokestatic  #47
249: aload         12
251: invokestatic  #47
254: aload         13
256: invokestatic  #47
259: new           #14
262: dup
263: invokespecial #15
266: ldc           #16
268: invokevirtual #17
271: iload         14
273: invokevirtual #18
276: ldc           #19
278: invokevirtual #17
281: iconst_0
282: invokevirtual #18
285: ldc           #16
287: invokevirtual #17
290: invokevirtual #20
293: iload         14
295: ifne          302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #21
306: aload         15
308: invokestatic  #47
311: new           #14
314: dup
315: invokespecial #15
318: ldc           #16
320: invokevirtual #17
323: iload         16
325: invokevirtual #18
328: ldc           #19
330: invokevirtual #17
333: iconst_0
334: invokevirtual #18
337: ldc           #16
339: invokevirtual #17
342: invokevirtual #20
345: iload         16
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #21
358: aload         17
360: invokestatic  #47
363: aload         18
365: invokestatic  #47
368: new           #14
371: dup
372: invokespecial #15
375: ldc           #16
377: invokevirtual #17
380: iload         19
382: invokevirtual #18
385: ldc           #19
387: invokevirtual #17
390: iconst_0
391: invokevirtual #18
394: ldc           #16
396: invokevirtual #17
399: invokevirtual #20
402: iload         19
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #21
415: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1563
End line: 1580
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 100L, 0L };
        long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, (long) (short) 1);
        long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray2, (long) '$');
        java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray2);
        java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray7);
        java.lang.reflect.Type[] typeArray9 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray7);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertNotNull(longArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[100, 0]");
        org.junit.Assert.assertNotNull(longArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, 0]");
        org.junit.Assert.assertNotNull(wildcardClassArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(typeArray9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: iconst_2
25: anewarray     #161
28: dup
29: iconst_0
30: ldc2_w        #78
33: invokestatic  #162
36: aastore
37: dup
38: iconst_1
39: lconst_0
40: invokestatic  #162
43: aastore
44: astore_1
45: aload_1
46: lconst_1
47: invokestatic  #163
50: astore_2
51: aload_1
52: ldc2_w        #164
55: invokestatic  #163
58: astore_3
59: aload_1
60: checkcast     #45
63: invokestatic  #59
66: astore        4
68: aload         4
70: invokestatic  #42
73: astore        5
75: aload         4
77: checkcast     #44
80: invokestatic  #32
83: astore        6
85: aload_1
86: invokestatic  #47
89: aload_2
90: invokestatic  #47
93: aload_2
94: invokestatic  #96
97: ldc           #166
99: invokestatic  #62
102: aload_3
103: invokestatic  #47
106: aload_3
107: invokestatic  #96
110: ldc           #166
112: invokestatic  #62
115: aload         4
117: invokestatic  #47
120: aload         5
122: invokestatic  #47
125: aload         6
127: invokestatic  #47
130: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1583
End line: 1666
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26);
        java.lang.Class[] classArray29 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29;
        java.lang.Class<?> wildcardClass31 = null;
        java.lang.Class[] classArray33 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass31;
        boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray34, true);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray34);
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class<?> wildcardClass43 = null;
        java.lang.Class[] classArray45 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45;
        wildcardClassArray46[0] = wildcardClass43;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray46, true);
        java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46);
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray34, wildcardClassArray51, true);
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray34, false);
        java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray34);
        java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray34);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClassArray30);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClassArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #167
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #44
145: invokestatic  #32
148: astore        16
150: aload         5
152: invokestatic  #53
155: astore        17
157: aload         17
159: invokestatic  #53
162: astore        18
164: iconst_0
165: anewarray     #39
168: astore        19
170: aload         19
172: checkcast     #40
175: astore        20
177: aconst_null
178: astore        21
180: iconst_1
181: anewarray     #39
184: astore        22
186: aload         22
188: checkcast     #40
191: astore        23
193: aload         23
195: iconst_0
196: aload         21
198: aastore
199: aload         19
201: checkcast     #40
204: aload         23
206: iconst_1
207: invokestatic  #41
210: istore        24
212: aload         23
214: invokestatic  #42
217: astore        25
219: iconst_0
220: anewarray     #39
223: astore        26
225: aload         26
227: checkcast     #40
230: astore        27
232: aconst_null
233: astore        28
235: iconst_1
236: anewarray     #39
239: astore        29
241: aload         29
243: checkcast     #40
246: astore        30
248: aload         30
250: iconst_0
251: aload         28
253: aastore
254: aload         26
256: checkcast     #40
259: aload         30
261: iconst_1
262: invokestatic  #41
265: istore        31
267: aload         30
269: invokestatic  #42
272: astore        32
274: aload         23
276: aload         32
278: iconst_1
279: invokestatic  #41
282: istore        33
284: aload         17
286: aload         23
288: iconst_0
289: invokestatic  #41
292: istore        34
294: aload         23
296: invokestatic  #42
299: astore        35
301: aload         23
303: invokestatic  #53
306: astore        36
308: aload_1
309: invokestatic  #47
312: aload_2
313: invokestatic  #47
316: aload         4
318: invokestatic  #47
321: aload         5
323: invokestatic  #47
326: new           #14
329: dup
330: invokespecial #15
333: ldc           #16
335: invokevirtual #17
338: iload         6
340: invokevirtual #18
343: ldc           #19
345: invokevirtual #17
348: iconst_0
349: invokevirtual #18
352: ldc           #16
354: invokevirtual #17
357: invokevirtual #20
360: iload         6
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #21
373: aload         7
375: invokestatic  #47
378: aload         8
380: invokestatic  #47
383: aload         9
385: invokestatic  #47
388: aload         11
390: invokestatic  #47
393: aload         12
395: invokestatic  #47
398: new           #14
401: dup
402: invokespecial #15
405: ldc           #16
407: invokevirtual #17
410: iload         13
412: invokevirtual #18
415: ldc           #19
417: invokevirtual #17
420: iconst_0
421: invokevirtual #18
424: ldc           #16
426: invokevirtual #17
429: invokevirtual #20
432: iload         13
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #21
445: aload         14
447: invokestatic  #47
450: new           #14
453: dup
454: invokespecial #15
457: ldc           #16
459: invokevirtual #17
462: iload         15
464: invokevirtual #18
467: ldc           #19
469: invokevirtual #17
472: iconst_0
473: invokevirtual #18
476: ldc           #16
478: invokevirtual #17
481: invokevirtual #20
484: iload         15
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #21
497: aload         16
499: invokestatic  #47
502: aload         17
504: invokestatic  #47
507: aload         18
509: invokestatic  #47
512: aload         19
514: invokestatic  #47
517: aload         20
519: invokestatic  #47
522: aload         22
524: invokestatic  #47
527: aload         23
529: invokestatic  #47
532: new           #14
535: dup
536: invokespecial #15
539: ldc           #16
541: invokevirtual #17
544: iload         24
546: invokevirtual #18
549: ldc           #19
551: invokevirtual #17
554: iconst_0
555: invokevirtual #18
558: ldc           #16
560: invokevirtual #17
563: invokevirtual #20
566: iload         24
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #21
579: aload         25
581: invokestatic  #47
584: aload         26
586: invokestatic  #47
589: aload         27
591: invokestatic  #47
594: aload         29
596: invokestatic  #47
599: aload         30
601: invokestatic  #47
604: new           #14
607: dup
608: invokespecial #15
611: ldc           #16
613: invokevirtual #17
616: iload         31
618: invokevirtual #18
621: ldc           #19
623: invokevirtual #17
626: iconst_0
627: invokevirtual #18
630: ldc           #16
632: invokevirtual #17
635: invokevirtual #20
638: iload         31
640: ifne          647
643: iconst_1
644: goto          648
647: iconst_0
648: invokestatic  #21
651: aload         32
653: invokestatic  #47
656: new           #14
659: dup
660: invokespecial #15
663: ldc           #16
665: invokevirtual #17
668: iload         33
670: invokevirtual #18
673: ldc           #19
675: invokevirtual #17
678: iconst_0
679: invokevirtual #18
682: ldc           #16
684: invokevirtual #17
687: invokevirtual #20
690: iload         33
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #21
703: new           #14
706: dup
707: invokespecial #15
710: ldc           #16
712: invokevirtual #17
715: iload         34
717: invokevirtual #18
720: ldc           #19
722: invokevirtual #17
725: iconst_0
726: invokevirtual #18
729: ldc           #16
731: invokevirtual #17
734: invokevirtual #20
737: iload         34
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #21
750: aload         35
752: invokestatic  #47
755: aload         36
757: invokestatic  #47
760: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1669
End line: 1746
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray1);
        java.lang.reflect.Type[] typeArray12 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray1);
        java.lang.Class[] classArray14 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        java.lang.Class<?> wildcardClass16 = null;
        java.lang.Class[] classArray18 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18;
        wildcardClassArray19[0] = wildcardClass16;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray14, wildcardClassArray19, true);
        java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray19);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray26);
        boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray19, wildcardClassArray36);
        boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray36, false);
        java.lang.Integer[] intArray40 = org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY;
        java.lang.Integer[] intArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray40);
        java.lang.Integer[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray40);
        int[] intArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42);
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42, (int) (byte) 1);
        int[] intArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42, (int) (byte) 0);
        int[] intArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray42);
        boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) classArray1, (java.lang.Object[]) intArray42);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClassArray19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #168
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload_1
67: checkcast     #40
70: invokestatic  #42
73: astore        7
75: aload_1
76: checkcast     #44
79: invokestatic  #32
82: astore        8
84: iconst_0
85: anewarray     #39
88: astore        9
90: aload         9
92: checkcast     #40
95: astore        10
97: aconst_null
98: astore        11
100: iconst_1
101: anewarray     #39
104: astore        12
106: aload         12
108: checkcast     #40
111: astore        13
113: aload         13
115: iconst_0
116: aload         11
118: aastore
119: aload         9
121: checkcast     #40
124: aload         13
126: iconst_1
127: invokestatic  #41
130: istore        14
132: aload         13
134: invokestatic  #42
137: astore        15
139: iconst_0
140: anewarray     #39
143: astore        16
145: aload         16
147: checkcast     #40
150: astore        17
152: aconst_null
153: astore        18
155: iconst_1
156: anewarray     #39
159: astore        19
161: aload         19
163: checkcast     #40
166: astore        20
168: aload         20
170: iconst_0
171: aload         18
173: aastore
174: aload         16
176: checkcast     #40
179: aload         20
181: iconst_1
182: invokestatic  #41
185: istore        21
187: aload         16
189: checkcast     #40
192: invokestatic  #42
195: astore        22
197: aload         13
199: aload         22
201: invokestatic  #43
204: istore        23
206: aload_1
207: checkcast     #40
210: aload         22
212: iconst_0
213: invokestatic  #41
216: istore        24
218: getstatic     #169
221: astore        25
223: aload         25
225: invokestatic  #170
228: astore        26
230: aload         25
232: invokestatic  #170
235: astore        27
237: aload         27
239: invokestatic  #171
242: astore        28
244: aload         27
246: iconst_1
247: invokestatic  #172
250: astore        29
252: aload         27
254: iconst_0
255: invokestatic  #172
258: astore        30
260: aload         27
262: invokestatic  #171
265: astore        31
267: aload_1
268: checkcast     #45
271: aload         27
273: checkcast     #45
276: invokestatic  #158
279: istore        32
281: aload_1
282: invokestatic  #47
285: aload_2
286: invokestatic  #47
289: aload         4
291: invokestatic  #47
294: aload         5
296: invokestatic  #47
299: new           #14
302: dup
303: invokespecial #15
306: ldc           #16
308: invokevirtual #17
311: iload         6
313: invokevirtual #18
316: ldc           #19
318: invokevirtual #17
321: iconst_0
322: invokevirtual #18
325: ldc           #16
327: invokevirtual #17
330: invokevirtual #20
333: iload         6
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #21
346: aload         7
348: invokestatic  #47
351: aload         8
353: invokestatic  #47
356: aload         9
358: invokestatic  #47
361: aload         10
363: invokestatic  #47
366: aload         12
368: invokestatic  #47
371: aload         13
373: invokestatic  #47
376: new           #14
379: dup
380: invokespecial #15
383: ldc           #16
385: invokevirtual #17
388: iload         14
390: invokevirtual #18
393: ldc           #19
395: invokevirtual #17
398: iconst_0
399: invokevirtual #18
402: ldc           #16
404: invokevirtual #17
407: invokevirtual #20
410: iload         14
412: ifne          419
415: iconst_1
416: goto          420
419: iconst_0
420: invokestatic  #21
423: aload         15
425: invokestatic  #47
428: aload         16
430: invokestatic  #47
433: aload         17
435: invokestatic  #47
438: aload         19
440: invokestatic  #47
443: aload         20
445: invokestatic  #47
448: new           #14
451: dup
452: invokespecial #15
455: ldc           #16
457: invokevirtual #17
460: iload         21
462: invokevirtual #18
465: ldc           #19
467: invokevirtual #17
470: iconst_0
471: invokevirtual #18
474: ldc           #16
476: invokevirtual #17
479: invokevirtual #20
482: iload         21
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #21
495: aload         22
497: invokestatic  #47
500: new           #14
503: dup
504: invokespecial #15
507: ldc           #16
509: invokevirtual #17
512: iload         23
514: invokevirtual #18
517: ldc           #19
519: invokevirtual #17
522: iconst_0
523: invokevirtual #18
526: ldc           #16
528: invokevirtual #17
531: invokevirtual #20
534: iload         23
536: ifne          543
539: iconst_1
540: goto          544
543: iconst_0
544: invokestatic  #21
547: new           #14
550: dup
551: invokespecial #15
554: ldc           #16
556: invokevirtual #17
559: iload         24
561: invokevirtual #18
564: ldc           #19
566: invokevirtual #17
569: iconst_1
570: invokevirtual #18
573: ldc           #16
575: invokevirtual #17
578: invokevirtual #20
581: iload         24
583: iconst_1
584: if_icmpne     591
587: iconst_1
588: goto          592
591: iconst_0
592: invokestatic  #21
595: aload         25
597: invokestatic  #47
600: aload         26
602: invokestatic  #47
605: aload         27
607: invokestatic  #47
610: aload         28
612: invokestatic  #47
615: aload         28
617: invokestatic  #147
620: ldc           #65
622: invokestatic  #62
625: aload         29
627: invokestatic  #47
630: aload         29
632: invokestatic  #147
635: ldc           #65
637: invokestatic  #62
640: aload         30
642: invokestatic  #47
645: aload         30
647: invokestatic  #147
650: ldc           #65
652: invokestatic  #62
655: aload         31
657: invokestatic  #47
660: aload         31
662: invokestatic  #147
665: ldc           #65
667: invokestatic  #62
670: new           #14
673: dup
674: invokespecial #15
677: ldc           #16
679: invokevirtual #17
682: iload         32
684: invokevirtual #18
687: ldc           #19
689: invokevirtual #17
692: iconst_1
693: invokevirtual #18
696: ldc           #16
698: invokevirtual #17
701: invokevirtual #20
704: iload         32
706: iconst_1
707: if_icmpne     714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #21
718: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1749
End line: 1846
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray31, (int) (short) 0, (int) (byte) 1);
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class<?> wildcardClass43 = null;
        java.lang.Class[] classArray45 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45;
        wildcardClassArray46[0] = wildcardClass43;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray46, true);
        java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46);
        java.lang.Class[] classArray53 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        java.lang.Class<?> wildcardClass55 = null;
        java.lang.Class[] classArray57 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass55;
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray53, wildcardClassArray58, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray58);
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray63, true);
        java.lang.Class<?>[] wildcardClassArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray66, false);
        boolean boolean70 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray39, wildcardClassArray66, false);
        java.lang.String str72 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) wildcardClassArray66, "{10.0,0.0,1.0,0.0,-1.0,10.0,100.0,-1.0}");
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClassArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "java.lang" + "'", str72, "java.lang");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #173
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: aload         20
199: iconst_0
200: iconst_1
201: invokestatic  #69
204: checkcast     #40
207: astore        23
209: iconst_0
210: anewarray     #39
213: astore        24
215: aload         24
217: checkcast     #40
220: astore        25
222: aconst_null
223: astore        26
225: iconst_1
226: anewarray     #39
229: astore        27
231: aload         27
233: checkcast     #40
236: astore        28
238: aload         28
240: iconst_0
241: aload         26
243: aastore
244: aload         24
246: checkcast     #40
249: aload         28
251: iconst_1
252: invokestatic  #41
255: istore        29
257: aload         28
259: invokestatic  #42
262: astore        30
264: iconst_0
265: anewarray     #39
268: astore        31
270: aload         31
272: checkcast     #40
275: astore        32
277: aconst_null
278: astore        33
280: iconst_1
281: anewarray     #39
284: astore        34
286: aload         34
288: checkcast     #40
291: astore        35
293: aload         35
295: iconst_0
296: aload         33
298: aastore
299: aload         31
301: checkcast     #40
304: aload         35
306: iconst_1
307: invokestatic  #41
310: istore        36
312: aload         35
314: invokestatic  #42
317: astore        37
319: aload         28
321: aload         37
323: iconst_1
324: invokestatic  #41
327: istore        38
329: getstatic     #52
332: astore        39
334: aload         28
336: aload         39
338: iconst_0
339: invokestatic  #41
342: istore        40
344: aload         23
346: aload         39
348: iconst_0
349: invokestatic  #41
352: istore        41
354: aload         39
356: ldc           #174
358: invokestatic  #175
361: astore        42
363: aload_1
364: invokestatic  #47
367: aload_2
368: invokestatic  #47
371: aload         4
373: invokestatic  #47
376: aload         5
378: invokestatic  #47
381: new           #14
384: dup
385: invokespecial #15
388: ldc           #16
390: invokevirtual #17
393: iload         6
395: invokevirtual #18
398: ldc           #19
400: invokevirtual #17
403: iconst_0
404: invokevirtual #18
407: ldc           #16
409: invokevirtual #17
412: invokevirtual #20
415: iload         6
417: ifne          424
420: iconst_1
421: goto          425
424: iconst_0
425: invokestatic  #21
428: aload         7
430: invokestatic  #47
433: aload         8
435: invokestatic  #47
438: aload         10
440: invokestatic  #47
443: aload         11
445: invokestatic  #47
448: new           #14
451: dup
452: invokespecial #15
455: ldc           #16
457: invokevirtual #17
460: iload         12
462: invokevirtual #18
465: ldc           #19
467: invokevirtual #17
470: iconst_0
471: invokevirtual #18
474: ldc           #16
476: invokevirtual #17
479: invokevirtual #20
482: iload         12
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #21
495: aload         13
497: invokestatic  #47
500: new           #14
503: dup
504: invokespecial #15
507: ldc           #16
509: invokevirtual #17
512: iload         14
514: invokevirtual #18
517: ldc           #19
519: invokevirtual #17
522: iconst_0
523: invokevirtual #18
526: ldc           #16
528: invokevirtual #17
531: invokevirtual #20
534: iload         14
536: ifne          543
539: iconst_1
540: goto          544
543: iconst_0
544: invokestatic  #21
547: aload         15
549: invokestatic  #47
552: aload         16
554: invokestatic  #47
557: aload         17
559: invokestatic  #47
562: aload         19
564: invokestatic  #47
567: aload         20
569: invokestatic  #47
572: new           #14
575: dup
576: invokespecial #15
579: ldc           #16
581: invokevirtual #17
584: iload         21
586: invokevirtual #18
589: ldc           #19
591: invokevirtual #17
594: iconst_0
595: invokevirtual #18
598: ldc           #16
600: invokevirtual #17
603: invokevirtual #20
606: iload         21
608: ifne          615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #21
619: new           #14
622: dup
623: invokespecial #15
626: ldc           #16
628: invokevirtual #17
631: iload         22
633: invokevirtual #18
636: ldc           #19
638: invokevirtual #17
641: iconst_0
642: invokevirtual #18
645: ldc           #16
647: invokevirtual #17
650: invokevirtual #20
653: iload         22
655: ifne          662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #21
666: aload         23
668: invokestatic  #47
671: aload         24
673: invokestatic  #47
676: aload         25
678: invokestatic  #47
681: aload         27
683: invokestatic  #47
686: aload         28
688: invokestatic  #47
691: new           #14
694: dup
695: invokespecial #15
698: ldc           #16
700: invokevirtual #17
703: iload         29
705: invokevirtual #18
708: ldc           #19
710: invokevirtual #17
713: iconst_0
714: invokevirtual #18
717: ldc           #16
719: invokevirtual #17
722: invokevirtual #20
725: iload         29
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #21
738: aload         30
740: invokestatic  #47
743: aload         31
745: invokestatic  #47
748: aload         32
750: invokestatic  #47
753: aload         34
755: invokestatic  #47
758: aload         35
760: invokestatic  #47
763: new           #14
766: dup
767: invokespecial #15
770: ldc           #16
772: invokevirtual #17
775: iload         36
777: invokevirtual #18
780: ldc           #19
782: invokevirtual #17
785: iconst_0
786: invokevirtual #18
789: ldc           #16
791: invokevirtual #17
794: invokevirtual #20
797: iload         36
799: ifne          806
802: iconst_1
803: goto          807
806: iconst_0
807: invokestatic  #21
810: aload         37
812: invokestatic  #47
815: new           #14
818: dup
819: invokespecial #15
822: ldc           #16
824: invokevirtual #17
827: iload         38
829: invokevirtual #18
832: ldc           #19
834: invokevirtual #17
837: iconst_0
838: invokevirtual #18
841: ldc           #16
843: invokevirtual #17
846: invokevirtual #20
849: iload         38
851: ifne          858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #21
862: aload         39
864: invokestatic  #47
867: new           #14
870: dup
871: invokespecial #15
874: ldc           #16
876: invokevirtual #17
879: iload         40
881: invokevirtual #18
884: ldc           #19
886: invokevirtual #17
889: iconst_0
890: invokevirtual #18
893: ldc           #16
895: invokevirtual #17
898: invokevirtual #20
901: iload         40
903: ifne          910
906: iconst_1
907: goto          911
910: iconst_0
911: invokestatic  #21
914: new           #14
917: dup
918: invokespecial #15
921: ldc           #16
923: invokevirtual #17
926: iload         41
928: invokevirtual #18
931: ldc           #19
933: invokevirtual #17
936: iconst_0
937: invokevirtual #18
940: ldc           #16
942: invokevirtual #17
945: invokevirtual #20
948: iload         41
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #21
961: new           #14
964: dup
965: invokespecial #15
968: ldc           #16
970: invokevirtual #17
973: aload         42
975: invokevirtual #17
978: ldc           #176
980: invokevirtual #17
983: invokevirtual #20
986: aload         42
988: ldc           #177
990: invokestatic  #178
993: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1849
End line: 1890
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(typeArray26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #44
145: invokestatic  #32
148: astore        16
150: aload         5
152: checkcast     #44
155: invokestatic  #32
158: astore        17
160: aload_1
161: invokestatic  #47
164: aload_2
165: invokestatic  #47
168: aload         4
170: invokestatic  #47
173: aload         5
175: invokestatic  #47
178: new           #14
181: dup
182: invokespecial #15
185: ldc           #16
187: invokevirtual #17
190: iload         6
192: invokevirtual #18
195: ldc           #19
197: invokevirtual #17
200: iconst_0
201: invokevirtual #18
204: ldc           #16
206: invokevirtual #17
209: invokevirtual #20
212: iload         6
214: ifne          221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #21
225: aload         7
227: invokestatic  #47
230: aload         8
232: invokestatic  #47
235: aload         9
237: invokestatic  #47
240: aload         11
242: invokestatic  #47
245: aload         12
247: invokestatic  #47
250: new           #14
253: dup
254: invokespecial #15
257: ldc           #16
259: invokevirtual #17
262: iload         13
264: invokevirtual #18
267: ldc           #19
269: invokevirtual #17
272: iconst_0
273: invokevirtual #18
276: ldc           #16
278: invokevirtual #17
281: invokevirtual #20
284: iload         13
286: ifne          293
289: iconst_1
290: goto          294
293: iconst_0
294: invokestatic  #21
297: aload         14
299: invokestatic  #47
302: new           #14
305: dup
306: invokespecial #15
309: ldc           #16
311: invokevirtual #17
314: iload         15
316: invokevirtual #18
319: ldc           #19
321: invokevirtual #17
324: iconst_0
325: invokevirtual #18
328: ldc           #16
330: invokevirtual #17
333: invokevirtual #20
336: iload         15
338: ifne          345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #21
349: aload         16
351: invokestatic  #47
354: aload         17
356: invokestatic  #47
359: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1893
End line: 1950
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.reflect.Type[] typeArray37 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray31);
        java.lang.reflect.Type[] typeArray38 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray37);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertNotNull(typeArray38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #180
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: aload         20
199: checkcast     #44
202: invokestatic  #32
205: astore        23
207: aload         23
209: invokestatic  #32
212: astore        24
214: aload_1
215: invokestatic  #47
218: aload_2
219: invokestatic  #47
222: aload         4
224: invokestatic  #47
227: aload         5
229: invokestatic  #47
232: new           #14
235: dup
236: invokespecial #15
239: ldc           #16
241: invokevirtual #17
244: iload         6
246: invokevirtual #18
249: ldc           #19
251: invokevirtual #17
254: iconst_0
255: invokevirtual #18
258: ldc           #16
260: invokevirtual #17
263: invokevirtual #20
266: iload         6
268: ifne          275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #21
279: aload         7
281: invokestatic  #47
284: aload         8
286: invokestatic  #47
289: aload         10
291: invokestatic  #47
294: aload         11
296: invokestatic  #47
299: new           #14
302: dup
303: invokespecial #15
306: ldc           #16
308: invokevirtual #17
311: iload         12
313: invokevirtual #18
316: ldc           #19
318: invokevirtual #17
321: iconst_0
322: invokevirtual #18
325: ldc           #16
327: invokevirtual #17
330: invokevirtual #20
333: iload         12
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #21
346: aload         13
348: invokestatic  #47
351: new           #14
354: dup
355: invokespecial #15
358: ldc           #16
360: invokevirtual #17
363: iload         14
365: invokevirtual #18
368: ldc           #19
370: invokevirtual #17
373: iconst_0
374: invokevirtual #18
377: ldc           #16
379: invokevirtual #17
382: invokevirtual #20
385: iload         14
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #21
398: aload         15
400: invokestatic  #47
403: aload         16
405: invokestatic  #47
408: aload         17
410: invokestatic  #47
413: aload         19
415: invokestatic  #47
418: aload         20
420: invokestatic  #47
423: new           #14
426: dup
427: invokespecial #15
430: ldc           #16
432: invokevirtual #17
435: iload         21
437: invokevirtual #18
440: ldc           #19
442: invokevirtual #17
445: iconst_0
446: invokevirtual #18
449: ldc           #16
451: invokevirtual #17
454: invokevirtual #20
457: iload         21
459: ifne          466
462: iconst_1
463: goto          467
466: iconst_0
467: invokestatic  #21
470: new           #14
473: dup
474: invokespecial #15
477: ldc           #16
479: invokevirtual #17
482: iload         22
484: invokevirtual #18
487: ldc           #19
489: invokevirtual #17
492: iconst_0
493: invokevirtual #18
496: ldc           #16
498: invokevirtual #17
501: invokevirtual #20
504: iload         22
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #21
517: aload         23
519: invokestatic  #47
522: aload         24
524: invokestatic  #47
527: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1953
End line: 2092
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43);
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        java.lang.Class<?> wildcardClass52 = null;
        java.lang.Class[] classArray54 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass52;
        boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray55, true);
        java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray55);
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray60, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63, false);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray63, true);
        java.lang.Class[] classArray69 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69;
        java.lang.Class<?> wildcardClass71 = null;
        java.lang.Class[] classArray73 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray74 = (java.lang.Class<?>[]) classArray73;
        wildcardClassArray74[0] = wildcardClass71;
        boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray69, wildcardClassArray74, true);
        java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        java.lang.Class<?> wildcardClass83 = null;
        java.lang.Class[] classArray85 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray86 = (java.lang.Class<?>[]) classArray85;
        wildcardClassArray86[0] = wildcardClass83;
        boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray81, wildcardClassArray86, true);
        java.lang.Class<?>[] wildcardClassArray91 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray81);
        boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray74, wildcardClassArray91);
        java.lang.reflect.Type[] typeArray93 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray94 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray95 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray94);
        java.lang.reflect.Type[] typeArray96 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.reflect.Type[]) wildcardClassArray31, (java.lang.reflect.Type[]) wildcardClassArray94);
        java.lang.String str97 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) typeArray96);
        java.lang.reflect.Type[] typeArray98 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray96);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(wildcardClassArray70);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "{<null>,<null>}" + "'", str97, "{<null>,<null>}");
        org.junit.Assert.assertNotNull(typeArray98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: iconst_0
198: anewarray     #39
201: astore        23
203: aload         23
205: checkcast     #40
208: astore        24
210: aconst_null
211: astore        25
213: iconst_1
214: anewarray     #39
217: astore        26
219: aload         26
221: checkcast     #40
224: astore        27
226: aload         27
228: iconst_0
229: aload         25
231: aastore
232: aload         23
234: checkcast     #40
237: aload         27
239: iconst_1
240: invokestatic  #41
243: istore        28
245: aload         27
247: invokestatic  #42
250: astore        29
252: iconst_0
253: anewarray     #39
256: astore        30
258: aload         30
260: checkcast     #40
263: astore        31
265: aconst_null
266: astore        32
268: iconst_1
269: anewarray     #39
272: astore        33
274: aload         33
276: checkcast     #40
279: astore        34
281: aload         34
283: iconst_0
284: aload         32
286: aastore
287: aload         30
289: checkcast     #40
292: aload         34
294: iconst_1
295: invokestatic  #41
298: istore        35
300: aload         34
302: invokestatic  #42
305: astore        36
307: aload         27
309: aload         36
311: iconst_1
312: invokestatic  #41
315: istore        37
317: getstatic     #52
320: astore        38
322: aload         27
324: aload         38
326: iconst_0
327: invokestatic  #41
330: istore        39
332: aload         20
334: aload         38
336: iconst_1
337: invokestatic  #41
340: istore        40
342: iconst_0
343: anewarray     #39
346: astore        41
348: aload         41
350: checkcast     #40
353: astore        42
355: aconst_null
356: astore        43
358: iconst_1
359: anewarray     #39
362: astore        44
364: aload         44
366: checkcast     #40
369: astore        45
371: aload         45
373: iconst_0
374: aload         43
376: aastore
377: aload         41
379: checkcast     #40
382: aload         45
384: iconst_1
385: invokestatic  #41
388: istore        46
390: aload         45
392: invokestatic  #42
395: astore        47
397: iconst_0
398: anewarray     #39
401: astore        48
403: aload         48
405: checkcast     #40
408: astore        49
410: aconst_null
411: astore        50
413: iconst_1
414: anewarray     #39
417: astore        51
419: aload         51
421: checkcast     #40
424: astore        52
426: aload         52
428: iconst_0
429: aload         50
431: aastore
432: aload         48
434: checkcast     #40
437: aload         52
439: iconst_1
440: invokestatic  #41
443: istore        53
445: aload         48
447: checkcast     #40
450: invokestatic  #42
453: astore        54
455: aload         45
457: aload         54
459: invokestatic  #43
462: istore        55
464: aload         45
466: checkcast     #44
469: invokestatic  #32
472: astore        56
474: aload         45
476: invokestatic  #53
479: astore        57
481: aload         57
483: invokestatic  #53
486: astore        58
488: aload         20
490: checkcast     #44
493: aload         57
495: checkcast     #44
498: invokestatic  #54
501: checkcast     #44
504: astore        59
506: aload         59
508: invokestatic  #182
511: astore        60
513: aload         59
515: invokestatic  #32
518: astore        61
520: aload_1
521: invokestatic  #47
524: aload_2
525: invokestatic  #47
528: aload         4
530: invokestatic  #47
533: aload         5
535: invokestatic  #47
538: new           #14
541: dup
542: invokespecial #15
545: ldc           #16
547: invokevirtual #17
550: iload         6
552: invokevirtual #18
555: ldc           #19
557: invokevirtual #17
560: iconst_0
561: invokevirtual #18
564: ldc           #16
566: invokevirtual #17
569: invokevirtual #20
572: iload         6
574: ifne          581
577: iconst_1
578: goto          582
581: iconst_0
582: invokestatic  #21
585: aload         7
587: invokestatic  #47
590: aload         8
592: invokestatic  #47
595: aload         10
597: invokestatic  #47
600: aload         11
602: invokestatic  #47
605: new           #14
608: dup
609: invokespecial #15
612: ldc           #16
614: invokevirtual #17
617: iload         12
619: invokevirtual #18
622: ldc           #19
624: invokevirtual #17
627: iconst_0
628: invokevirtual #18
631: ldc           #16
633: invokevirtual #17
636: invokevirtual #20
639: iload         12
641: ifne          648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #21
652: aload         13
654: invokestatic  #47
657: new           #14
660: dup
661: invokespecial #15
664: ldc           #16
666: invokevirtual #17
669: iload         14
671: invokevirtual #18
674: ldc           #19
676: invokevirtual #17
679: iconst_0
680: invokevirtual #18
683: ldc           #16
685: invokevirtual #17
688: invokevirtual #20
691: iload         14
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #21
704: aload         15
706: invokestatic  #47
709: aload         16
711: invokestatic  #47
714: aload         17
716: invokestatic  #47
719: aload         19
721: invokestatic  #47
724: aload         20
726: invokestatic  #47
729: new           #14
732: dup
733: invokespecial #15
736: ldc           #16
738: invokevirtual #17
741: iload         21
743: invokevirtual #18
746: ldc           #19
748: invokevirtual #17
751: iconst_0
752: invokevirtual #18
755: ldc           #16
757: invokevirtual #17
760: invokevirtual #20
763: iload         21
765: ifne          772
768: iconst_1
769: goto          773
772: iconst_0
773: invokestatic  #21
776: new           #14
779: dup
780: invokespecial #15
783: ldc           #16
785: invokevirtual #17
788: iload         22
790: invokevirtual #18
793: ldc           #19
795: invokevirtual #17
798: iconst_0
799: invokevirtual #18
802: ldc           #16
804: invokevirtual #17
807: invokevirtual #20
810: iload         22
812: ifne          819
815: iconst_1
816: goto          820
819: iconst_0
820: invokestatic  #21
823: aload         23
825: invokestatic  #47
828: aload         24
830: invokestatic  #47
833: aload         26
835: invokestatic  #47
838: aload         27
840: invokestatic  #47
843: new           #14
846: dup
847: invokespecial #15
850: ldc           #16
852: invokevirtual #17
855: iload         28
857: invokevirtual #18
860: ldc           #19
862: invokevirtual #17
865: iconst_0
866: invokevirtual #18
869: ldc           #16
871: invokevirtual #17
874: invokevirtual #20
877: iload         28
879: ifne          886
882: iconst_1
883: goto          887
886: iconst_0
887: invokestatic  #21
890: aload         29
892: invokestatic  #47
895: aload         30
897: invokestatic  #47
900: aload         31
902: invokestatic  #47
905: aload         33
907: invokestatic  #47
910: aload         34
912: invokestatic  #47
915: new           #14
918: dup
919: invokespecial #15
922: ldc           #16
924: invokevirtual #17
927: iload         35
929: invokevirtual #18
932: ldc           #19
934: invokevirtual #17
937: iconst_0
938: invokevirtual #18
941: ldc           #16
943: invokevirtual #17
946: invokevirtual #20
949: iload         35
951: ifne          958
954: iconst_1
955: goto          959
958: iconst_0
959: invokestatic  #21
962: aload         36
964: invokestatic  #47
967: new           #14
970: dup
971: invokespecial #15
974: ldc           #16
976: invokevirtual #17
979: iload         37
981: invokevirtual #18
984: ldc           #19
986: invokevirtual #17
989: iconst_0
990: invokevirtual #18
993: ldc           #16
995: invokevirtual #17
998: invokevirtual #20
1001: iload         37
1003: ifne          1010
1006: iconst_1
1007: goto          1011
1010: iconst_0
1011: invokestatic  #21
1014: aload         38
1016: invokestatic  #47
1019: new           #14
1022: dup
1023: invokespecial #15
1026: ldc           #16
1028: invokevirtual #17
1031: iload         39
1033: invokevirtual #18
1036: ldc           #19
1038: invokevirtual #17
1041: iconst_0
1042: invokevirtual #18
1045: ldc           #16
1047: invokevirtual #17
1050: invokevirtual #20
1053: iload         39
1055: ifne          1062
1058: iconst_1
1059: goto          1063
1062: iconst_0
1063: invokestatic  #21
1066: new           #14
1069: dup
1070: invokespecial #15
1073: ldc           #16
1075: invokevirtual #17
1078: iload         40
1080: invokevirtual #18
1083: ldc           #19
1085: invokevirtual #17
1088: iconst_0
1089: invokevirtual #18
1092: ldc           #16
1094: invokevirtual #17
1097: invokevirtual #20
1100: iload         40
1102: ifne          1109
1105: iconst_1
1106: goto          1110
1109: iconst_0
1110: invokestatic  #21
1113: aload         41
1115: invokestatic  #47
1118: aload         42
1120: invokestatic  #47
1123: aload         44
1125: invokestatic  #47
1128: aload         45
1130: invokestatic  #47
1133: new           #14
1136: dup
1137: invokespecial #15
1140: ldc           #16
1142: invokevirtual #17
1145: iload         46
1147: invokevirtual #18
1150: ldc           #19
1152: invokevirtual #17
1155: iconst_0
1156: invokevirtual #18
1159: ldc           #16
1161: invokevirtual #17
1164: invokevirtual #20
1167: iload         46
1169: ifne          1176
1172: iconst_1
1173: goto          1177
1176: iconst_0
1177: invokestatic  #21
1180: aload         47
1182: invokestatic  #47
1185: aload         48
1187: invokestatic  #47
1190: aload         49
1192: invokestatic  #47
1195: aload         51
1197: invokestatic  #47
1200: aload         52
1202: invokestatic  #47
1205: new           #14
1208: dup
1209: invokespecial #15
1212: ldc           #16
1214: invokevirtual #17
1217: iload         53
1219: invokevirtual #18
1222: ldc           #19
1224: invokevirtual #17
1227: iconst_0
1228: invokevirtual #18
1231: ldc           #16
1233: invokevirtual #17
1236: invokevirtual #20
1239: iload         53
1241: ifne          1248
1244: iconst_1
1245: goto          1249
1248: iconst_0
1249: invokestatic  #21
1252: aload         54
1254: invokestatic  #47
1257: new           #14
1260: dup
1261: invokespecial #15
1264: ldc           #16
1266: invokevirtual #17
1269: iload         55
1271: invokevirtual #18
1274: ldc           #19
1276: invokevirtual #17
1279: iconst_0
1280: invokevirtual #18
1283: ldc           #16
1285: invokevirtual #17
1288: invokevirtual #20
1291: iload         55
1293: ifne          1300
1296: iconst_1
1297: goto          1301
1300: iconst_0
1301: invokestatic  #21
1304: aload         56
1306: invokestatic  #47
1309: aload         57
1311: invokestatic  #47
1314: aload         58
1316: invokestatic  #47
1319: aload         59
1321: invokestatic  #47
1324: new           #14
1327: dup
1328: invokespecial #15
1331: ldc           #16
1333: invokevirtual #17
1336: aload         60
1338: invokevirtual #17
1341: ldc           #183
1343: invokevirtual #17
1346: invokevirtual #20
1349: aload         60
1351: ldc           #184
1353: invokestatic  #178
1356: aload         61
1358: invokestatic  #47
1361: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 2095
End line: 2170
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray1);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray13);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray31);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray38);
        boolean boolean49 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray48);
        boolean boolean51 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray48, false);
        boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray11, (java.lang.Class<?>[]) classArray13);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #185
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload_1
67: checkcast     #40
70: invokestatic  #53
73: astore        7
75: iconst_0
76: anewarray     #39
79: astore        8
81: aload         8
83: checkcast     #40
86: astore        9
88: aconst_null
89: astore        10
91: iconst_1
92: anewarray     #39
95: astore        11
97: aload         11
99: checkcast     #40
102: astore        12
104: aload         12
106: iconst_0
107: aload         10
109: aastore
110: aload         8
112: checkcast     #40
115: aload         12
117: iconst_1
118: invokestatic  #41
121: istore        13
123: aload         8
125: checkcast     #40
128: invokestatic  #42
131: astore        14
133: aload         8
135: checkcast     #44
138: invokestatic  #32
141: astore        15
143: iconst_0
144: anewarray     #39
147: astore        16
149: aload         16
151: checkcast     #40
154: astore        17
156: aconst_null
157: astore        18
159: iconst_1
160: anewarray     #39
163: astore        19
165: aload         19
167: checkcast     #40
170: astore        20
172: aload         20
174: iconst_0
175: aload         18
177: aastore
178: aload         16
180: checkcast     #40
183: aload         20
185: iconst_1
186: invokestatic  #41
189: istore        21
191: aload         20
193: invokestatic  #42
196: astore        22
198: iconst_0
199: anewarray     #39
202: astore        23
204: aload         23
206: checkcast     #40
209: astore        24
211: aconst_null
212: astore        25
214: iconst_1
215: anewarray     #39
218: astore        26
220: aload         26
222: checkcast     #40
225: astore        27
227: aload         27
229: iconst_0
230: aload         25
232: aastore
233: aload         23
235: checkcast     #40
238: aload         27
240: iconst_1
241: invokestatic  #41
244: istore        28
246: aload         23
248: checkcast     #40
251: invokestatic  #42
254: astore        29
256: aload         20
258: aload         29
260: invokestatic  #43
263: istore        30
265: aload         8
267: checkcast     #40
270: aload         29
272: iconst_0
273: invokestatic  #41
276: istore        31
278: aload         7
280: aload         8
282: checkcast     #40
285: invokestatic  #43
288: istore        32
290: aload_1
291: invokestatic  #47
294: aload_2
295: invokestatic  #47
298: aload         4
300: invokestatic  #47
303: aload         5
305: invokestatic  #47
308: new           #14
311: dup
312: invokespecial #15
315: ldc           #16
317: invokevirtual #17
320: iload         6
322: invokevirtual #18
325: ldc           #19
327: invokevirtual #17
330: iconst_0
331: invokevirtual #18
334: ldc           #16
336: invokevirtual #17
339: invokevirtual #20
342: iload         6
344: ifne          351
347: iconst_1
348: goto          352
351: iconst_0
352: invokestatic  #21
355: aload         7
357: invokestatic  #47
360: aload         8
362: invokestatic  #47
365: aload         9
367: invokestatic  #47
370: aload         11
372: invokestatic  #47
375: aload         12
377: invokestatic  #47
380: new           #14
383: dup
384: invokespecial #15
387: ldc           #16
389: invokevirtual #17
392: iload         13
394: invokevirtual #18
397: ldc           #19
399: invokevirtual #17
402: iconst_0
403: invokevirtual #18
406: ldc           #16
408: invokevirtual #17
411: invokevirtual #20
414: iload         13
416: ifne          423
419: iconst_1
420: goto          424
423: iconst_0
424: invokestatic  #21
427: aload         14
429: invokestatic  #47
432: aload         15
434: invokestatic  #47
437: aload         16
439: invokestatic  #47
442: aload         17
444: invokestatic  #47
447: aload         19
449: invokestatic  #47
452: aload         20
454: invokestatic  #47
457: new           #14
460: dup
461: invokespecial #15
464: ldc           #16
466: invokevirtual #17
469: iload         21
471: invokevirtual #18
474: ldc           #19
476: invokevirtual #17
479: iconst_0
480: invokevirtual #18
483: ldc           #16
485: invokevirtual #17
488: invokevirtual #20
491: iload         21
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #21
504: aload         22
506: invokestatic  #47
509: aload         23
511: invokestatic  #47
514: aload         24
516: invokestatic  #47
519: aload         26
521: invokestatic  #47
524: aload         27
526: invokestatic  #47
529: new           #14
532: dup
533: invokespecial #15
536: ldc           #16
538: invokevirtual #17
541: iload         28
543: invokevirtual #18
546: ldc           #19
548: invokevirtual #17
551: iconst_0
552: invokevirtual #18
555: ldc           #16
557: invokevirtual #17
560: invokevirtual #20
563: iload         28
565: ifne          572
568: iconst_1
569: goto          573
572: iconst_0
573: invokestatic  #21
576: aload         29
578: invokestatic  #47
581: new           #14
584: dup
585: invokespecial #15
588: ldc           #16
590: invokevirtual #17
593: iload         30
595: invokevirtual #18
598: ldc           #19
600: invokevirtual #17
603: iconst_0
604: invokevirtual #18
607: ldc           #16
609: invokevirtual #17
612: invokevirtual #20
615: iload         30
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #21
628: new           #14
631: dup
632: invokespecial #15
635: ldc           #16
637: invokevirtual #17
640: iload         31
642: invokevirtual #18
645: ldc           #19
647: invokevirtual #17
650: iconst_1
651: invokevirtual #18
654: ldc           #16
656: invokevirtual #17
659: invokevirtual #20
662: iload         31
664: iconst_1
665: if_icmpne     672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #21
676: new           #14
679: dup
680: invokespecial #15
683: ldc           #16
685: invokevirtual #17
688: iload         32
690: invokevirtual #18
693: ldc           #19
695: invokevirtual #17
698: iconst_1
699: invokevirtual #18
702: ldc           #16
704: invokevirtual #17
707: invokevirtual #20
710: iload         32
712: iconst_1
713: if_icmpne     720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #21
724: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 2173
End line: 2270
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray31, (int) (short) 0, (int) (byte) 1);
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class<?> wildcardClass43 = null;
        java.lang.Class[] classArray45 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45;
        wildcardClassArray46[0] = wildcardClass43;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray46, true);
        java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46);
        java.lang.Class[] classArray53 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        java.lang.Class<?> wildcardClass55 = null;
        java.lang.Class[] classArray57 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass55;
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray53, wildcardClassArray58, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray58);
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray63, true);
        java.lang.Class<?>[] wildcardClassArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray66, false);
        boolean boolean70 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray39, wildcardClassArray66, false);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray71 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.reflect.GenericDeclaration[]) wildcardClassArray66);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClassArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(genericDeclarationArray71);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: aload         20
199: iconst_0
200: iconst_1
201: invokestatic  #69
204: checkcast     #40
207: astore        23
209: iconst_0
210: anewarray     #39
213: astore        24
215: aload         24
217: checkcast     #40
220: astore        25
222: aconst_null
223: astore        26
225: iconst_1
226: anewarray     #39
229: astore        27
231: aload         27
233: checkcast     #40
236: astore        28
238: aload         28
240: iconst_0
241: aload         26
243: aastore
244: aload         24
246: checkcast     #40
249: aload         28
251: iconst_1
252: invokestatic  #41
255: istore        29
257: aload         28
259: invokestatic  #42
262: astore        30
264: iconst_0
265: anewarray     #39
268: astore        31
270: aload         31
272: checkcast     #40
275: astore        32
277: aconst_null
278: astore        33
280: iconst_1
281: anewarray     #39
284: astore        34
286: aload         34
288: checkcast     #40
291: astore        35
293: aload         35
295: iconst_0
296: aload         33
298: aastore
299: aload         31
301: checkcast     #40
304: aload         35
306: iconst_1
307: invokestatic  #41
310: istore        36
312: aload         35
314: invokestatic  #42
317: astore        37
319: aload         28
321: aload         37
323: iconst_1
324: invokestatic  #41
327: istore        38
329: getstatic     #52
332: astore        39
334: aload         28
336: aload         39
338: iconst_0
339: invokestatic  #41
342: istore        40
344: aload         23
346: aload         39
348: iconst_0
349: invokestatic  #41
352: istore        41
354: aload         39
356: checkcast     #187
359: invokestatic  #188
362: checkcast     #187
365: astore        42
367: aload_1
368: invokestatic  #47
371: aload_2
372: invokestatic  #47
375: aload         4
377: invokestatic  #47
380: aload         5
382: invokestatic  #47
385: new           #14
388: dup
389: invokespecial #15
392: ldc           #16
394: invokevirtual #17
397: iload         6
399: invokevirtual #18
402: ldc           #19
404: invokevirtual #17
407: iconst_0
408: invokevirtual #18
411: ldc           #16
413: invokevirtual #17
416: invokevirtual #20
419: iload         6
421: ifne          428
424: iconst_1
425: goto          429
428: iconst_0
429: invokestatic  #21
432: aload         7
434: invokestatic  #47
437: aload         8
439: invokestatic  #47
442: aload         10
444: invokestatic  #47
447: aload         11
449: invokestatic  #47
452: new           #14
455: dup
456: invokespecial #15
459: ldc           #16
461: invokevirtual #17
464: iload         12
466: invokevirtual #18
469: ldc           #19
471: invokevirtual #17
474: iconst_0
475: invokevirtual #18
478: ldc           #16
480: invokevirtual #17
483: invokevirtual #20
486: iload         12
488: ifne          495
491: iconst_1
492: goto          496
495: iconst_0
496: invokestatic  #21
499: aload         13
501: invokestatic  #47
504: new           #14
507: dup
508: invokespecial #15
511: ldc           #16
513: invokevirtual #17
516: iload         14
518: invokevirtual #18
521: ldc           #19
523: invokevirtual #17
526: iconst_0
527: invokevirtual #18
530: ldc           #16
532: invokevirtual #17
535: invokevirtual #20
538: iload         14
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #21
551: aload         15
553: invokestatic  #47
556: aload         16
558: invokestatic  #47
561: aload         17
563: invokestatic  #47
566: aload         19
568: invokestatic  #47
571: aload         20
573: invokestatic  #47
576: new           #14
579: dup
580: invokespecial #15
583: ldc           #16
585: invokevirtual #17
588: iload         21
590: invokevirtual #18
593: ldc           #19
595: invokevirtual #17
598: iconst_0
599: invokevirtual #18
602: ldc           #16
604: invokevirtual #17
607: invokevirtual #20
610: iload         21
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #21
623: new           #14
626: dup
627: invokespecial #15
630: ldc           #16
632: invokevirtual #17
635: iload         22
637: invokevirtual #18
640: ldc           #19
642: invokevirtual #17
645: iconst_0
646: invokevirtual #18
649: ldc           #16
651: invokevirtual #17
654: invokevirtual #20
657: iload         22
659: ifne          666
662: iconst_1
663: goto          667
666: iconst_0
667: invokestatic  #21
670: aload         23
672: invokestatic  #47
675: aload         24
677: invokestatic  #47
680: aload         25
682: invokestatic  #47
685: aload         27
687: invokestatic  #47
690: aload         28
692: invokestatic  #47
695: new           #14
698: dup
699: invokespecial #15
702: ldc           #16
704: invokevirtual #17
707: iload         29
709: invokevirtual #18
712: ldc           #19
714: invokevirtual #17
717: iconst_0
718: invokevirtual #18
721: ldc           #16
723: invokevirtual #17
726: invokevirtual #20
729: iload         29
731: ifne          738
734: iconst_1
735: goto          739
738: iconst_0
739: invokestatic  #21
742: aload         30
744: invokestatic  #47
747: aload         31
749: invokestatic  #47
752: aload         32
754: invokestatic  #47
757: aload         34
759: invokestatic  #47
762: aload         35
764: invokestatic  #47
767: new           #14
770: dup
771: invokespecial #15
774: ldc           #16
776: invokevirtual #17
779: iload         36
781: invokevirtual #18
784: ldc           #19
786: invokevirtual #17
789: iconst_0
790: invokevirtual #18
793: ldc           #16
795: invokevirtual #17
798: invokevirtual #20
801: iload         36
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #21
814: aload         37
816: invokestatic  #47
819: new           #14
822: dup
823: invokespecial #15
826: ldc           #16
828: invokevirtual #17
831: iload         38
833: invokevirtual #18
836: ldc           #19
838: invokevirtual #17
841: iconst_0
842: invokevirtual #18
845: ldc           #16
847: invokevirtual #17
850: invokevirtual #20
853: iload         38
855: ifne          862
858: iconst_1
859: goto          863
862: iconst_0
863: invokestatic  #21
866: aload         39
868: invokestatic  #47
871: new           #14
874: dup
875: invokespecial #15
878: ldc           #16
880: invokevirtual #17
883: iload         40
885: invokevirtual #18
888: ldc           #19
890: invokevirtual #17
893: iconst_0
894: invokevirtual #18
897: ldc           #16
899: invokevirtual #17
902: invokevirtual #20
905: iload         40
907: ifne          914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #21
918: new           #14
921: dup
922: invokespecial #15
925: ldc           #16
927: invokevirtual #17
930: iload         41
932: invokevirtual #18
935: ldc           #19
937: invokevirtual #17
940: iconst_0
941: invokevirtual #18
944: ldc           #16
946: invokevirtual #17
949: invokevirtual #20
952: iload         41
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #21
965: aload         42
967: invokestatic  #47
970: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 2273
End line: 2300
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.lang3.reflect.TypeUtils typeUtils0 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils1 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils2 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray5 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils0, typeUtils1, typeUtils2, typeUtils3, typeUtils4 };
        org.apache.commons.lang3.reflect.TypeUtils typeUtils6 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils7 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils8 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils9 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils10 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray11 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils6, typeUtils7, typeUtils8, typeUtils9, typeUtils10 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray12 = new org.apache.commons.lang3.reflect.TypeUtils[][] { typeUtilsArray5, typeUtilsArray11 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray13 = new org.apache.commons.lang3.reflect.TypeUtils[][] {};
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray14 = org.apache.commons.lang3.ArrayUtils.removeElements(typeUtilsArray12, typeUtilsArray13);
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray17 = org.apache.commons.lang3.ArrayUtils.subarray(typeUtilsArray12, (int) (short) 100, 6);
        java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) (short) 100, "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext");
        org.junit.Assert.assertNotNull(typeUtilsArray5);
        org.junit.Assert.assertNotNull(typeUtilsArray11);
        org.junit.Assert.assertNotNull(typeUtilsArray12);
        org.junit.Assert.assertNotNull(typeUtilsArray13);
        org.junit.Assert.assertNotNull(typeUtilsArray14);
        org.junit.Assert.assertNotNull(typeUtilsArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "java.lang" + "'", str19, "java.lang");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #189
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: invokespecial #28
31: astore_1
32: new           #27
35: dup
36: invokespecial #28
39: astore_2
40: new           #27
43: dup
44: invokespecial #28
47: astore_3
48: new           #27
51: dup
52: invokespecial #28
55: astore        4
57: new           #27
60: dup
61: invokespecial #28
64: astore        5
66: iconst_5
67: anewarray     #27
70: dup
71: iconst_0
72: aload_1
73: aastore
74: dup
75: iconst_1
76: aload_2
77: aastore
78: dup
79: iconst_2
80: aload_3
81: aastore
82: dup
83: iconst_3
84: aload         4
86: aastore
87: dup
88: iconst_4
89: aload         5
91: aastore
92: astore        6
94: new           #27
97: dup
98: invokespecial #28
101: astore        7
103: new           #27
106: dup
107: invokespecial #28
110: astore        8
112: new           #27
115: dup
116: invokespecial #28
119: astore        9
121: new           #27
124: dup
125: invokespecial #28
128: astore        10
130: new           #27
133: dup
134: invokespecial #28
137: astore        11
139: iconst_5
140: anewarray     #27
143: dup
144: iconst_0
145: aload         7
147: aastore
148: dup
149: iconst_1
150: aload         8
152: aastore
153: dup
154: iconst_2
155: aload         9
157: aastore
158: dup
159: iconst_3
160: aload         10
162: aastore
163: dup
164: iconst_4
165: aload         11
167: aastore
168: astore        12
170: iconst_2
171: anewarray     #68
174: dup
175: iconst_0
176: aload         6
178: aastore
179: dup
180: iconst_1
181: aload         12
183: aastore
184: astore        13
186: iconst_0
187: anewarray     #68
190: astore        14
192: aload         13
194: aload         14
196: invokestatic  #122
199: checkcast     #154
202: astore        15
204: aload         13
206: bipush        100
208: bipush        6
210: invokestatic  #69
213: checkcast     #154
216: astore        16
218: bipush        100
220: invokestatic  #103
223: ldc           #190
225: invokestatic  #191
228: astore        17
230: aload         6
232: invokestatic  #47
235: aload         12
237: invokestatic  #47
240: aload         13
242: invokestatic  #47
245: aload         14
247: invokestatic  #47
250: aload         15
252: invokestatic  #47
255: aload         16
257: invokestatic  #47
260: new           #14
263: dup
264: invokespecial #15
267: ldc           #16
269: invokevirtual #17
272: aload         17
274: invokevirtual #17
277: ldc           #176
279: invokevirtual #17
282: invokevirtual #20
285: aload         17
287: ldc           #177
289: invokestatic  #178
292: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 2303
End line: 2326
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray1);
        java.lang.reflect.Type[] typeArray12 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray1);
        java.lang.reflect.Type[] typeArray13 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray12);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertNotNull(typeArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #192
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload_1
67: checkcast     #40
70: invokestatic  #42
73: astore        7
75: aload_1
76: checkcast     #44
79: invokestatic  #32
82: astore        8
84: aload         8
86: invokestatic  #32
89: astore        9
91: aload_1
92: invokestatic  #47
95: aload_2
96: invokestatic  #47
99: aload         4
101: invokestatic  #47
104: aload         5
106: invokestatic  #47
109: new           #14
112: dup
113: invokespecial #15
116: ldc           #16
118: invokevirtual #17
121: iload         6
123: invokevirtual #18
126: ldc           #19
128: invokevirtual #17
131: iconst_0
132: invokevirtual #18
135: ldc           #16
137: invokevirtual #17
140: invokevirtual #20
143: iload         6
145: ifne          152
148: iconst_1
149: goto          153
152: iconst_0
153: invokestatic  #21
156: aload         7
158: invokestatic  #47
161: aload         8
163: invokestatic  #47
166: aload         9
168: invokestatic  #47
171: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 2329
End line: 2466
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43);
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        java.lang.Class<?> wildcardClass52 = null;
        java.lang.Class[] classArray54 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass52;
        boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray55, true);
        java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray55);
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray60, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63, false);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray63, true);
        java.lang.Class[] classArray69 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69;
        java.lang.Class<?> wildcardClass71 = null;
        java.lang.Class[] classArray73 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray74 = (java.lang.Class<?>[]) classArray73;
        wildcardClassArray74[0] = wildcardClass71;
        boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray69, wildcardClassArray74, true);
        java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        java.lang.Class<?> wildcardClass83 = null;
        java.lang.Class[] classArray85 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray86 = (java.lang.Class<?>[]) classArray85;
        wildcardClassArray86[0] = wildcardClass83;
        boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray81, wildcardClassArray86, true);
        java.lang.Class<?>[] wildcardClassArray91 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray81);
        boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray74, wildcardClassArray91);
        java.lang.reflect.Type[] typeArray93 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray94 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray95 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray94);
        java.lang.reflect.Type[] typeArray96 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.reflect.Type[]) wildcardClassArray31, (java.lang.reflect.Type[]) wildcardClassArray94);
        java.lang.String str98 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) wildcardClassArray94, "{{\b,\\b},{\n,\\n},{\t,\\t},{\f,\\f},{\r,\\r}}");
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(wildcardClassArray70);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Class[]" + "'", str98, "Class[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #193
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: iconst_0
198: anewarray     #39
201: astore        23
203: aload         23
205: checkcast     #40
208: astore        24
210: aconst_null
211: astore        25
213: iconst_1
214: anewarray     #39
217: astore        26
219: aload         26
221: checkcast     #40
224: astore        27
226: aload         27
228: iconst_0
229: aload         25
231: aastore
232: aload         23
234: checkcast     #40
237: aload         27
239: iconst_1
240: invokestatic  #41
243: istore        28
245: aload         27
247: invokestatic  #42
250: astore        29
252: iconst_0
253: anewarray     #39
256: astore        30
258: aload         30
260: checkcast     #40
263: astore        31
265: aconst_null
266: astore        32
268: iconst_1
269: anewarray     #39
272: astore        33
274: aload         33
276: checkcast     #40
279: astore        34
281: aload         34
283: iconst_0
284: aload         32
286: aastore
287: aload         30
289: checkcast     #40
292: aload         34
294: iconst_1
295: invokestatic  #41
298: istore        35
300: aload         34
302: invokestatic  #42
305: astore        36
307: aload         27
309: aload         36
311: iconst_1
312: invokestatic  #41
315: istore        37
317: getstatic     #52
320: astore        38
322: aload         27
324: aload         38
326: iconst_0
327: invokestatic  #41
330: istore        39
332: aload         20
334: aload         38
336: iconst_1
337: invokestatic  #41
340: istore        40
342: iconst_0
343: anewarray     #39
346: astore        41
348: aload         41
350: checkcast     #40
353: astore        42
355: aconst_null
356: astore        43
358: iconst_1
359: anewarray     #39
362: astore        44
364: aload         44
366: checkcast     #40
369: astore        45
371: aload         45
373: iconst_0
374: aload         43
376: aastore
377: aload         41
379: checkcast     #40
382: aload         45
384: iconst_1
385: invokestatic  #41
388: istore        46
390: aload         45
392: invokestatic  #42
395: astore        47
397: iconst_0
398: anewarray     #39
401: astore        48
403: aload         48
405: checkcast     #40
408: astore        49
410: aconst_null
411: astore        50
413: iconst_1
414: anewarray     #39
417: astore        51
419: aload         51
421: checkcast     #40
424: astore        52
426: aload         52
428: iconst_0
429: aload         50
431: aastore
432: aload         48
434: checkcast     #40
437: aload         52
439: iconst_1
440: invokestatic  #41
443: istore        53
445: aload         48
447: checkcast     #40
450: invokestatic  #42
453: astore        54
455: aload         45
457: aload         54
459: invokestatic  #43
462: istore        55
464: aload         45
466: checkcast     #44
469: invokestatic  #32
472: astore        56
474: aload         45
476: invokestatic  #53
479: astore        57
481: aload         57
483: invokestatic  #53
486: astore        58
488: aload         20
490: checkcast     #44
493: aload         57
495: checkcast     #44
498: invokestatic  #54
501: checkcast     #44
504: astore        59
506: aload         57
508: ldc           #194
510: invokestatic  #195
513: astore        60
515: aload_1
516: invokestatic  #47
519: aload_2
520: invokestatic  #47
523: aload         4
525: invokestatic  #47
528: aload         5
530: invokestatic  #47
533: new           #14
536: dup
537: invokespecial #15
540: ldc           #16
542: invokevirtual #17
545: iload         6
547: invokevirtual #18
550: ldc           #19
552: invokevirtual #17
555: iconst_0
556: invokevirtual #18
559: ldc           #16
561: invokevirtual #17
564: invokevirtual #20
567: iload         6
569: ifne          576
572: iconst_1
573: goto          577
576: iconst_0
577: invokestatic  #21
580: aload         7
582: invokestatic  #47
585: aload         8
587: invokestatic  #47
590: aload         10
592: invokestatic  #47
595: aload         11
597: invokestatic  #47
600: new           #14
603: dup
604: invokespecial #15
607: ldc           #16
609: invokevirtual #17
612: iload         12
614: invokevirtual #18
617: ldc           #19
619: invokevirtual #17
622: iconst_0
623: invokevirtual #18
626: ldc           #16
628: invokevirtual #17
631: invokevirtual #20
634: iload         12
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #21
647: aload         13
649: invokestatic  #47
652: new           #14
655: dup
656: invokespecial #15
659: ldc           #16
661: invokevirtual #17
664: iload         14
666: invokevirtual #18
669: ldc           #19
671: invokevirtual #17
674: iconst_0
675: invokevirtual #18
678: ldc           #16
680: invokevirtual #17
683: invokevirtual #20
686: iload         14
688: ifne          695
691: iconst_1
692: goto          696
695: iconst_0
696: invokestatic  #21
699: aload         15
701: invokestatic  #47
704: aload         16
706: invokestatic  #47
709: aload         17
711: invokestatic  #47
714: aload         19
716: invokestatic  #47
719: aload         20
721: invokestatic  #47
724: new           #14
727: dup
728: invokespecial #15
731: ldc           #16
733: invokevirtual #17
736: iload         21
738: invokevirtual #18
741: ldc           #19
743: invokevirtual #17
746: iconst_0
747: invokevirtual #18
750: ldc           #16
752: invokevirtual #17
755: invokevirtual #20
758: iload         21
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #21
771: new           #14
774: dup
775: invokespecial #15
778: ldc           #16
780: invokevirtual #17
783: iload         22
785: invokevirtual #18
788: ldc           #19
790: invokevirtual #17
793: iconst_0
794: invokevirtual #18
797: ldc           #16
799: invokevirtual #17
802: invokevirtual #20
805: iload         22
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #21
818: aload         23
820: invokestatic  #47
823: aload         24
825: invokestatic  #47
828: aload         26
830: invokestatic  #47
833: aload         27
835: invokestatic  #47
838: new           #14
841: dup
842: invokespecial #15
845: ldc           #16
847: invokevirtual #17
850: iload         28
852: invokevirtual #18
855: ldc           #19
857: invokevirtual #17
860: iconst_0
861: invokevirtual #18
864: ldc           #16
866: invokevirtual #17
869: invokevirtual #20
872: iload         28
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #21
885: aload         29
887: invokestatic  #47
890: aload         30
892: invokestatic  #47
895: aload         31
897: invokestatic  #47
900: aload         33
902: invokestatic  #47
905: aload         34
907: invokestatic  #47
910: new           #14
913: dup
914: invokespecial #15
917: ldc           #16
919: invokevirtual #17
922: iload         35
924: invokevirtual #18
927: ldc           #19
929: invokevirtual #17
932: iconst_0
933: invokevirtual #18
936: ldc           #16
938: invokevirtual #17
941: invokevirtual #20
944: iload         35
946: ifne          953
949: iconst_1
950: goto          954
953: iconst_0
954: invokestatic  #21
957: aload         36
959: invokestatic  #47
962: new           #14
965: dup
966: invokespecial #15
969: ldc           #16
971: invokevirtual #17
974: iload         37
976: invokevirtual #18
979: ldc           #19
981: invokevirtual #17
984: iconst_0
985: invokevirtual #18
988: ldc           #16
990: invokevirtual #17
993: invokevirtual #20
996: iload         37
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #21
1009: aload         38
1011: invokestatic  #47
1014: new           #14
1017: dup
1018: invokespecial #15
1021: ldc           #16
1023: invokevirtual #17
1026: iload         39
1028: invokevirtual #18
1031: ldc           #19
1033: invokevirtual #17
1036: iconst_0
1037: invokevirtual #18
1040: ldc           #16
1042: invokevirtual #17
1045: invokevirtual #20
1048: iload         39
1050: ifne          1057
1053: iconst_1
1054: goto          1058
1057: iconst_0
1058: invokestatic  #21
1061: new           #14
1064: dup
1065: invokespecial #15
1068: ldc           #16
1070: invokevirtual #17
1073: iload         40
1075: invokevirtual #18
1078: ldc           #19
1080: invokevirtual #17
1083: iconst_0
1084: invokevirtual #18
1087: ldc           #16
1089: invokevirtual #17
1092: invokevirtual #20
1095: iload         40
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #21
1108: aload         41
1110: invokestatic  #47
1113: aload         42
1115: invokestatic  #47
1118: aload         44
1120: invokestatic  #47
1123: aload         45
1125: invokestatic  #47
1128: new           #14
1131: dup
1132: invokespecial #15
1135: ldc           #16
1137: invokevirtual #17
1140: iload         46
1142: invokevirtual #18
1145: ldc           #19
1147: invokevirtual #17
1150: iconst_0
1151: invokevirtual #18
1154: ldc           #16
1156: invokevirtual #17
1159: invokevirtual #20
1162: iload         46
1164: ifne          1171
1167: iconst_1
1168: goto          1172
1171: iconst_0
1172: invokestatic  #21
1175: aload         47
1177: invokestatic  #47
1180: aload         48
1182: invokestatic  #47
1185: aload         49
1187: invokestatic  #47
1190: aload         51
1192: invokestatic  #47
1195: aload         52
1197: invokestatic  #47
1200: new           #14
1203: dup
1204: invokespecial #15
1207: ldc           #16
1209: invokevirtual #17
1212: iload         53
1214: invokevirtual #18
1217: ldc           #19
1219: invokevirtual #17
1222: iconst_0
1223: invokevirtual #18
1226: ldc           #16
1228: invokevirtual #17
1231: invokevirtual #20
1234: iload         53
1236: ifne          1243
1239: iconst_1
1240: goto          1244
1243: iconst_0
1244: invokestatic  #21
1247: aload         54
1249: invokestatic  #47
1252: new           #14
1255: dup
1256: invokespecial #15
1259: ldc           #16
1261: invokevirtual #17
1264: iload         55
1266: invokevirtual #18
1269: ldc           #19
1271: invokevirtual #17
1274: iconst_0
1275: invokevirtual #18
1278: ldc           #16
1280: invokevirtual #17
1283: invokevirtual #20
1286: iload         55
1288: ifne          1295
1291: iconst_1
1292: goto          1296
1295: iconst_0
1296: invokestatic  #21
1299: aload         56
1301: invokestatic  #47
1304: aload         57
1306: invokestatic  #47
1309: aload         58
1311: invokestatic  #47
1314: aload         59
1316: invokestatic  #47
1319: new           #14
1322: dup
1323: invokespecial #15
1326: ldc           #16
1328: invokevirtual #17
1331: aload         60
1333: invokevirtual #17
1336: ldc           #196
1338: invokevirtual #17
1341: invokevirtual #20
1344: aload         60
1346: ldc           #197
1348: invokestatic  #178
1351: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 2469
End line: 2528
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray31, (int) (short) 0, (int) (byte) 1);
        java.lang.reflect.Type[] typeArray40 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray39);
        java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getSimpleName((java.lang.Object) typeArray40, "{\\u0030\\u002E\\u0030}");
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Class[]" + "'", str42, "Class[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #198
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: aload         20
199: iconst_0
200: iconst_1
201: invokestatic  #69
204: checkcast     #40
207: astore        23
209: aload         23
211: checkcast     #44
214: invokestatic  #32
217: astore        24
219: aload         24
221: ldc           #199
223: invokestatic  #200
226: astore        25
228: aload_1
229: invokestatic  #47
232: aload_2
233: invokestatic  #47
236: aload         4
238: invokestatic  #47
241: aload         5
243: invokestatic  #47
246: new           #14
249: dup
250: invokespecial #15
253: ldc           #16
255: invokevirtual #17
258: iload         6
260: invokevirtual #18
263: ldc           #19
265: invokevirtual #17
268: iconst_0
269: invokevirtual #18
272: ldc           #16
274: invokevirtual #17
277: invokevirtual #20
280: iload         6
282: ifne          289
285: iconst_1
286: goto          290
289: iconst_0
290: invokestatic  #21
293: aload         7
295: invokestatic  #47
298: aload         8
300: invokestatic  #47
303: aload         10
305: invokestatic  #47
308: aload         11
310: invokestatic  #47
313: new           #14
316: dup
317: invokespecial #15
320: ldc           #16
322: invokevirtual #17
325: iload         12
327: invokevirtual #18
330: ldc           #19
332: invokevirtual #17
335: iconst_0
336: invokevirtual #18
339: ldc           #16
341: invokevirtual #17
344: invokevirtual #20
347: iload         12
349: ifne          356
352: iconst_1
353: goto          357
356: iconst_0
357: invokestatic  #21
360: aload         13
362: invokestatic  #47
365: new           #14
368: dup
369: invokespecial #15
372: ldc           #16
374: invokevirtual #17
377: iload         14
379: invokevirtual #18
382: ldc           #19
384: invokevirtual #17
387: iconst_0
388: invokevirtual #18
391: ldc           #16
393: invokevirtual #17
396: invokevirtual #20
399: iload         14
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #21
412: aload         15
414: invokestatic  #47
417: aload         16
419: invokestatic  #47
422: aload         17
424: invokestatic  #47
427: aload         19
429: invokestatic  #47
432: aload         20
434: invokestatic  #47
437: new           #14
440: dup
441: invokespecial #15
444: ldc           #16
446: invokevirtual #17
449: iload         21
451: invokevirtual #18
454: ldc           #19
456: invokevirtual #17
459: iconst_0
460: invokevirtual #18
463: ldc           #16
465: invokevirtual #17
468: invokevirtual #20
471: iload         21
473: ifne          480
476: iconst_1
477: goto          481
480: iconst_0
481: invokestatic  #21
484: new           #14
487: dup
488: invokespecial #15
491: ldc           #16
493: invokevirtual #17
496: iload         22
498: invokevirtual #18
501: ldc           #19
503: invokevirtual #17
506: iconst_0
507: invokevirtual #18
510: ldc           #16
512: invokevirtual #17
515: invokevirtual #20
518: iload         22
520: ifne          527
523: iconst_1
524: goto          528
527: iconst_0
528: invokestatic  #21
531: aload         23
533: invokestatic  #47
536: aload         24
538: invokestatic  #47
541: new           #14
544: dup
545: invokespecial #15
548: ldc           #16
550: invokevirtual #17
553: aload         25
555: invokevirtual #17
558: ldc           #196
560: invokevirtual #17
563: invokevirtual #20
566: aload         25
568: ldc           #197
570: invokestatic  #178
573: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 2531
End line: 2564
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.lang3.reflect.TypeUtils typeUtils0 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils1 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils2 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray5 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils0, typeUtils1, typeUtils2, typeUtils3, typeUtils4 };
        org.apache.commons.lang3.reflect.TypeUtils typeUtils6 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils7 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils8 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils9 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils10 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray11 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils6, typeUtils7, typeUtils8, typeUtils9, typeUtils10 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray12 = new org.apache.commons.lang3.reflect.TypeUtils[][] { typeUtilsArray5, typeUtilsArray11 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray13 = new org.apache.commons.lang3.reflect.TypeUtils[][] {};
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray14 = org.apache.commons.lang3.ArrayUtils.removeElements(typeUtilsArray12, typeUtilsArray13);
        org.apache.commons.lang3.reflect.TypeUtils typeUtils15 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils16 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray17 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils15, typeUtils16 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray18 = new org.apache.commons.lang3.reflect.TypeUtils[][] { typeUtilsArray17 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray19 = org.apache.commons.lang3.ArrayUtils.addAll(typeUtilsArray12, typeUtilsArray18);
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray20 = org.apache.commons.lang3.ArrayUtils.clone(typeUtilsArray19);
        org.junit.Assert.assertNotNull(typeUtilsArray5);
        org.junit.Assert.assertNotNull(typeUtilsArray11);
        org.junit.Assert.assertNotNull(typeUtilsArray12);
        org.junit.Assert.assertNotNull(typeUtilsArray13);
        org.junit.Assert.assertNotNull(typeUtilsArray14);
        org.junit.Assert.assertNotNull(typeUtilsArray17);
        org.junit.Assert.assertNotNull(typeUtilsArray18);
        org.junit.Assert.assertNotNull(typeUtilsArray19);
        org.junit.Assert.assertNotNull(typeUtilsArray20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #201
19: aastore
20: invokevirtual #7
23: pop
24: new           #27
27: dup
28: invokespecial #28
31: astore_1
32: new           #27
35: dup
36: invokespecial #28
39: astore_2
40: new           #27
43: dup
44: invokespecial #28
47: astore_3
48: new           #27
51: dup
52: invokespecial #28
55: astore        4
57: new           #27
60: dup
61: invokespecial #28
64: astore        5
66: iconst_5
67: anewarray     #27
70: dup
71: iconst_0
72: aload_1
73: aastore
74: dup
75: iconst_1
76: aload_2
77: aastore
78: dup
79: iconst_2
80: aload_3
81: aastore
82: dup
83: iconst_3
84: aload         4
86: aastore
87: dup
88: iconst_4
89: aload         5
91: aastore
92: astore        6
94: new           #27
97: dup
98: invokespecial #28
101: astore        7
103: new           #27
106: dup
107: invokespecial #28
110: astore        8
112: new           #27
115: dup
116: invokespecial #28
119: astore        9
121: new           #27
124: dup
125: invokespecial #28
128: astore        10
130: new           #27
133: dup
134: invokespecial #28
137: astore        11
139: iconst_5
140: anewarray     #27
143: dup
144: iconst_0
145: aload         7
147: aastore
148: dup
149: iconst_1
150: aload         8
152: aastore
153: dup
154: iconst_2
155: aload         9
157: aastore
158: dup
159: iconst_3
160: aload         10
162: aastore
163: dup
164: iconst_4
165: aload         11
167: aastore
168: astore        12
170: iconst_2
171: anewarray     #68
174: dup
175: iconst_0
176: aload         6
178: aastore
179: dup
180: iconst_1
181: aload         12
183: aastore
184: astore        13
186: iconst_0
187: anewarray     #68
190: astore        14
192: aload         13
194: aload         14
196: invokestatic  #122
199: checkcast     #154
202: astore        15
204: new           #27
207: dup
208: invokespecial #28
211: astore        16
213: new           #27
216: dup
217: invokespecial #28
220: astore        17
222: iconst_2
223: anewarray     #27
226: dup
227: iconst_0
228: aload         16
230: aastore
231: dup
232: iconst_1
233: aload         17
235: aastore
236: astore        18
238: iconst_1
239: anewarray     #68
242: dup
243: iconst_0
244: aload         18
246: aastore
247: astore        19
249: aload         13
251: aload         19
253: invokestatic  #54
256: checkcast     #154
259: astore        20
261: aload         20
263: invokestatic  #67
266: checkcast     #154
269: astore        21
271: aload         6
273: invokestatic  #47
276: aload         12
278: invokestatic  #47
281: aload         13
283: invokestatic  #47
286: aload         14
288: invokestatic  #47
291: aload         15
293: invokestatic  #47
296: aload         18
298: invokestatic  #47
301: aload         19
303: invokestatic  #47
306: aload         20
308: invokestatic  #47
311: aload         21
313: invokestatic  #47
316: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 2567
End line: 2610
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #202
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #44
145: invokestatic  #32
148: astore        16
150: aload         5
152: invokestatic  #42
155: astore        17
157: aload         17
159: checkcast     #45
162: invokestatic  #59
165: astore        18
167: aload_1
168: invokestatic  #47
171: aload_2
172: invokestatic  #47
175: aload         4
177: invokestatic  #47
180: aload         5
182: invokestatic  #47
185: new           #14
188: dup
189: invokespecial #15
192: ldc           #16
194: invokevirtual #17
197: iload         6
199: invokevirtual #18
202: ldc           #19
204: invokevirtual #17
207: iconst_0
208: invokevirtual #18
211: ldc           #16
213: invokevirtual #17
216: invokevirtual #20
219: iload         6
221: ifne          228
224: iconst_1
225: goto          229
228: iconst_0
229: invokestatic  #21
232: aload         7
234: invokestatic  #47
237: aload         8
239: invokestatic  #47
242: aload         9
244: invokestatic  #47
247: aload         11
249: invokestatic  #47
252: aload         12
254: invokestatic  #47
257: new           #14
260: dup
261: invokespecial #15
264: ldc           #16
266: invokevirtual #17
269: iload         13
271: invokevirtual #18
274: ldc           #19
276: invokevirtual #17
279: iconst_0
280: invokevirtual #18
283: ldc           #16
285: invokevirtual #17
288: invokevirtual #20
291: iload         13
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #21
304: aload         14
306: invokestatic  #47
309: new           #14
312: dup
313: invokespecial #15
316: ldc           #16
318: invokevirtual #17
321: iload         15
323: invokevirtual #18
326: ldc           #19
328: invokevirtual #17
331: iconst_0
332: invokevirtual #18
335: ldc           #16
337: invokevirtual #17
340: invokevirtual #20
343: iload         15
345: ifne          352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #21
356: aload         16
358: invokestatic  #47
361: aload         17
363: invokestatic  #47
366: aload         18
368: invokestatic  #47
371: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 2613
End line: 2654
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray18);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23, true);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23);
        java.lang.reflect.Type[] typeArray27 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(typeArray27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #203
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         12
123: invokestatic  #42
126: astore        14
128: aload         5
130: aload         14
132: iconst_1
133: invokestatic  #41
136: istore        15
138: aload         14
140: invokestatic  #42
143: astore        16
145: aload         16
147: checkcast     #44
150: invokestatic  #32
153: astore        17
155: aload_1
156: invokestatic  #47
159: aload_2
160: invokestatic  #47
163: aload         4
165: invokestatic  #47
168: aload         5
170: invokestatic  #47
173: new           #14
176: dup
177: invokespecial #15
180: ldc           #16
182: invokevirtual #17
185: iload         6
187: invokevirtual #18
190: ldc           #19
192: invokevirtual #17
195: iconst_0
196: invokevirtual #18
199: ldc           #16
201: invokevirtual #17
204: invokevirtual #20
207: iload         6
209: ifne          216
212: iconst_1
213: goto          217
216: iconst_0
217: invokestatic  #21
220: aload         7
222: invokestatic  #47
225: aload         8
227: invokestatic  #47
230: aload         9
232: invokestatic  #47
235: aload         11
237: invokestatic  #47
240: aload         12
242: invokestatic  #47
245: new           #14
248: dup
249: invokespecial #15
252: ldc           #16
254: invokevirtual #17
257: iload         13
259: invokevirtual #18
262: ldc           #19
264: invokevirtual #17
267: iconst_0
268: invokevirtual #18
271: ldc           #16
273: invokevirtual #17
276: invokevirtual #20
279: iload         13
281: ifne          288
284: iconst_1
285: goto          289
288: iconst_0
289: invokestatic  #21
292: aload         14
294: invokestatic  #47
297: new           #14
300: dup
301: invokespecial #15
304: ldc           #16
306: invokevirtual #17
309: iload         15
311: invokevirtual #18
314: ldc           #19
316: invokevirtual #17
319: iconst_0
320: invokevirtual #18
323: ldc           #16
325: invokevirtual #17
328: invokevirtual #20
331: iload         15
333: ifne          340
336: iconst_1
337: goto          341
340: iconst_0
341: invokestatic  #21
344: aload         16
346: invokestatic  #47
349: aload         17
351: invokestatic  #47
354: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 2657
End line: 2793
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        int[] intArray3 = new int[] { (byte) 0, '.', 2 };
        java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3);
        int[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray3);
        int[] intArray10 = new int[] { 100, 1, 10, (short) 1 };
        int[] intArray13 = org.apache.commons.lang3.ArrayUtils.add(intArray10, (int) (short) 1, (int) ' ');
        int[] intArray14 = org.apache.commons.lang3.ArrayUtils.addAll(intArray5, intArray10);
        int[] intArray19 = new int[] { 100, 1, 10, (short) 1 };
        int[] intArray22 = org.apache.commons.lang3.ArrayUtils.add(intArray19, (int) (short) 1, (int) ' ');
        int[] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray19);
        int[] intArray24 = new int[] {};
        int[] intArray25 = org.apache.commons.lang3.ArrayUtils.removeAll(intArray23, intArray24);
        int[] intArray26 = org.apache.commons.lang3.ArrayUtils.clone(intArray25);
        int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray26);
        int[] intArray28 = org.apache.commons.lang3.ArrayUtils.removeElements(intArray5, intArray26);
        boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray28, 100);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray28);
        java.lang.Class<?> wildcardClass33 = intArray28.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.lang.reflect.Type[][] typeArray35 = new java.lang.reflect.Type[][] { typeArray34 };
        java.lang.Class[] classArray37 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37;
        java.lang.Class<?> wildcardClass39 = null;
        java.lang.Class[] classArray41 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        wildcardClassArray42[0] = wildcardClass39;
        boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray37, wildcardClassArray42, true);
        java.lang.Class<?>[] wildcardClassArray47 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray42);
        java.lang.Class[] classArray49 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray50 = (java.lang.Class<?>[]) classArray49;
        java.lang.Class<?> wildcardClass51 = null;
        java.lang.Class[] classArray53 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass51;
        boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray49, wildcardClassArray54, true);
        java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray49);
        boolean boolean60 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray42, wildcardClassArray59);
        java.lang.reflect.Type[] typeArray61 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray42);
        java.lang.Class<?>[] wildcardClassArray62 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray42);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray62);
        java.lang.Class[] classArray65 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray66 = (java.lang.Class<?>[]) classArray65;
        java.lang.Class<?> wildcardClass67 = null;
        java.lang.Class[] classArray69 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69;
        wildcardClassArray70[0] = wildcardClass67;
        boolean boolean74 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray65, wildcardClassArray70, true);
        java.lang.Class<?>[] wildcardClassArray75 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray70);
        java.lang.Class[] classArray77 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        java.lang.Class<?> wildcardClass79 = null;
        java.lang.Class[] classArray81 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass79;
        boolean boolean86 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray77, wildcardClassArray82, true);
        java.lang.Class<?>[] wildcardClassArray87 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray82);
        boolean boolean89 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray70, wildcardClassArray87, true);
        boolean boolean91 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray62, wildcardClassArray70, false);
        java.lang.reflect.Type[] typeArray92 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray70);
        java.lang.reflect.Type[][] typeArray93 = org.apache.commons.lang3.ArrayUtils.add(typeArray35, (java.lang.reflect.Type[]) wildcardClassArray70);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 46, 2]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 46, 2]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 32, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 46, 2, 100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[100, 32, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 46, 2]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(wildcardClassArray38);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(wildcardClassArray50);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertNotNull(classArray65);
        org.junit.Assert.assertNotNull(wildcardClassArray66);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(wildcardClassArray70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertNotNull(typeArray93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #204
19: aastore
20: invokevirtual #7
23: pop
24: iconst_3
25: newarray       int
27: dup
28: iconst_0
29: iconst_0
30: iastore
31: dup
32: iconst_1
33: bipush        46
35: iastore
36: dup
37: iconst_2
38: iconst_2
39: iastore
40: astore_1
41: aload_1
42: invokestatic  #205
45: astore_2
46: aload_1
47: invokestatic  #139
50: astore_3
51: iconst_4
52: newarray       int
54: dup
55: iconst_0
56: bipush        100
58: iastore
59: dup
60: iconst_1
61: iconst_1
62: iastore
63: dup
64: iconst_2
65: bipush        10
67: iastore
68: dup
69: iconst_3
70: iconst_1
71: iastore
72: astore        4
74: aload         4
76: iconst_1
77: bipush        32
79: invokestatic  #206
82: astore        5
84: aload_3
85: aload         4
87: invokestatic  #207
90: astore        6
92: iconst_4
93: newarray       int
95: dup
96: iconst_0
97: bipush        100
99: iastore
100: dup
101: iconst_1
102: iconst_1
103: iastore
104: dup
105: iconst_2
106: bipush        10
108: iastore
109: dup
110: iconst_3
111: iconst_1
112: iastore
113: astore        7
115: aload         7
117: iconst_1
118: bipush        32
120: invokestatic  #206
123: astore        8
125: aload         7
127: invokestatic  #208
130: astore        9
132: iconst_0
133: newarray       int
135: astore        10
137: aload         9
139: aload         10
141: invokestatic  #209
144: astore        11
146: aload         11
148: invokestatic  #208
151: astore        12
153: aload         12
155: invokestatic  #208
158: astore        13
160: aload_3
161: aload         12
163: invokestatic  #210
166: astore        14
168: aload         14
170: invokestatic  #211
173: istore        15
175: aload         14
177: bipush        100
179: invokestatic  #212
182: istore        16
184: aload         14
186: invokestatic  #213
189: istore        17
191: aload         14
193: invokevirtual #71
196: astore        18
198: iconst_1
199: anewarray     #214
202: dup
203: iconst_0
204: aload         18
206: aastore
207: astore        19
209: iconst_1
210: anewarray     #44
213: dup
214: iconst_0
215: aload         19
217: aastore
218: astore        20
220: iconst_0
221: anewarray     #39
224: astore        21
226: aload         21
228: checkcast     #40
231: astore        22
233: aconst_null
234: astore        23
236: iconst_1
237: anewarray     #39
240: astore        24
242: aload         24
244: checkcast     #40
247: astore        25
249: aload         25
251: iconst_0
252: aload         23
254: aastore
255: aload         21
257: checkcast     #40
260: aload         25
262: iconst_1
263: invokestatic  #41
266: istore        26
268: aload         25
270: invokestatic  #42
273: astore        27
275: iconst_0
276: anewarray     #39
279: astore        28
281: aload         28
283: checkcast     #40
286: astore        29
288: aconst_null
289: astore        30
291: iconst_1
292: anewarray     #39
295: astore        31
297: aload         31
299: checkcast     #40
302: astore        32
304: aload         32
306: iconst_0
307: aload         30
309: aastore
310: aload         28
312: checkcast     #40
315: aload         32
317: iconst_1
318: invokestatic  #41
321: istore        33
323: aload         28
325: checkcast     #40
328: invokestatic  #42
331: astore        34
333: aload         25
335: aload         34
337: invokestatic  #43
340: istore        35
342: aload         25
344: checkcast     #44
347: invokestatic  #32
350: astore        36
352: aload         25
354: invokestatic  #53
357: astore        37
359: aload         37
361: invokestatic  #53
364: astore        38
366: iconst_0
367: anewarray     #39
370: astore        39
372: aload         39
374: checkcast     #40
377: astore        40
379: aconst_null
380: astore        41
382: iconst_1
383: anewarray     #39
386: astore        42
388: aload         42
390: checkcast     #40
393: astore        43
395: aload         43
397: iconst_0
398: aload         41
400: aastore
401: aload         39
403: checkcast     #40
406: aload         43
408: iconst_1
409: invokestatic  #41
412: istore        44
414: aload         43
416: invokestatic  #42
419: astore        45
421: iconst_0
422: anewarray     #39
425: astore        46
427: aload         46
429: checkcast     #40
432: astore        47
434: aconst_null
435: astore        48
437: iconst_1
438: anewarray     #39
441: astore        49
443: aload         49
445: checkcast     #40
448: astore        50
450: aload         50
452: iconst_0
453: aload         48
455: aastore
456: aload         46
458: checkcast     #40
461: aload         50
463: iconst_1
464: invokestatic  #41
467: istore        51
469: aload         50
471: invokestatic  #42
474: astore        52
476: aload         43
478: aload         52
480: iconst_1
481: invokestatic  #41
484: istore        53
486: aload         37
488: aload         43
490: iconst_0
491: invokestatic  #41
494: istore        54
496: aload         43
498: checkcast     #44
501: invokestatic  #32
504: astore        55
506: aload         20
508: aload         43
510: checkcast     #44
513: invokestatic  #155
516: checkcast     #215
519: astore        56
521: aload_1
522: invokestatic  #47
525: aload_1
526: invokestatic  #147
529: ldc           #216
531: invokestatic  #62
534: aload_2
535: invokestatic  #47
538: aload_3
539: invokestatic  #47
542: aload_3
543: invokestatic  #147
546: ldc           #216
548: invokestatic  #62
551: aload         4
553: invokestatic  #47
556: aload         4
558: invokestatic  #147
561: ldc           #217
563: invokestatic  #62
566: aload         5
568: invokestatic  #47
571: aload         5
573: invokestatic  #147
576: ldc           #218
578: invokestatic  #62
581: aload         6
583: invokestatic  #47
586: aload         6
588: invokestatic  #147
591: ldc           #219
593: invokestatic  #62
596: aload         7
598: invokestatic  #47
601: aload         7
603: invokestatic  #147
606: ldc           #217
608: invokestatic  #62
611: aload         8
613: invokestatic  #47
616: aload         8
618: invokestatic  #147
621: ldc           #218
623: invokestatic  #62
626: aload         9
628: invokestatic  #47
631: aload         9
633: invokestatic  #147
636: ldc           #217
638: invokestatic  #62
641: aload         10
643: invokestatic  #47
646: aload         10
648: invokestatic  #147
651: ldc           #65
653: invokestatic  #62
656: aload         11
658: invokestatic  #47
661: aload         11
663: invokestatic  #147
666: ldc           #217
668: invokestatic  #62
671: aload         12
673: invokestatic  #47
676: aload         12
678: invokestatic  #147
681: ldc           #217
683: invokestatic  #62
686: aload         13
688: invokestatic  #47
691: aload         13
693: invokestatic  #147
696: ldc           #217
698: invokestatic  #62
701: aload         14
703: invokestatic  #47
706: aload         14
708: invokestatic  #147
711: ldc           #216
713: invokestatic  #62
716: new           #14
719: dup
720: invokespecial #15
723: ldc           #16
725: invokevirtual #17
728: iload         15
730: invokevirtual #18
733: ldc           #19
735: invokevirtual #17
738: iconst_0
739: invokevirtual #18
742: ldc           #16
744: invokevirtual #17
747: invokevirtual #20
750: iload         15
752: ifne          759
755: iconst_1
756: goto          760
759: iconst_0
760: invokestatic  #21
763: new           #14
766: dup
767: invokespecial #15
770: ldc           #16
772: invokevirtual #17
775: iload         16
777: invokevirtual #48
780: ldc           #19
782: invokevirtual #17
785: iconst_m1
786: invokevirtual #48
789: ldc           #16
791: invokevirtual #17
794: invokevirtual #20
797: iload         16
799: iconst_m1
800: if_icmpne     807
803: iconst_1
804: goto          808
807: iconst_0
808: invokestatic  #21
811: new           #14
814: dup
815: invokespecial #15
818: ldc           #16
820: invokevirtual #17
823: iload         17
825: invokevirtual #18
828: ldc           #19
830: invokevirtual #17
833: iconst_1
834: invokevirtual #18
837: ldc           #16
839: invokevirtual #17
842: invokevirtual #20
845: iload         17
847: iconst_1
848: if_icmpne     855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #21
859: aload         18
861: invokestatic  #47
864: aload         19
866: invokestatic  #47
869: aload         20
871: invokestatic  #47
874: aload         21
876: invokestatic  #47
879: aload         22
881: invokestatic  #47
884: aload         24
886: invokestatic  #47
889: aload         25
891: invokestatic  #47
894: new           #14
897: dup
898: invokespecial #15
901: ldc           #16
903: invokevirtual #17
906: iload         26
908: invokevirtual #18
911: ldc           #19
913: invokevirtual #17
916: iconst_0
917: invokevirtual #18
920: ldc           #16
922: invokevirtual #17
925: invokevirtual #20
928: iload         26
930: ifne          937
933: iconst_1
934: goto          938
937: iconst_0
938: invokestatic  #21
941: aload         27
943: invokestatic  #47
946: aload         28
948: invokestatic  #47
951: aload         29
953: invokestatic  #47
956: aload         31
958: invokestatic  #47
961: aload         32
963: invokestatic  #47
966: new           #14
969: dup
970: invokespecial #15
973: ldc           #16
975: invokevirtual #17
978: iload         33
980: invokevirtual #18
983: ldc           #19
985: invokevirtual #17
988: iconst_0
989: invokevirtual #18
992: ldc           #16
994: invokevirtual #17
997: invokevirtual #20
1000: iload         33
1002: ifne          1009
1005: iconst_1
1006: goto          1010
1009: iconst_0
1010: invokestatic  #21
1013: aload         34
1015: invokestatic  #47
1018: new           #14
1021: dup
1022: invokespecial #15
1025: ldc           #16
1027: invokevirtual #17
1030: iload         35
1032: invokevirtual #18
1035: ldc           #19
1037: invokevirtual #17
1040: iconst_0
1041: invokevirtual #18
1044: ldc           #16
1046: invokevirtual #17
1049: invokevirtual #20
1052: iload         35
1054: ifne          1061
1057: iconst_1
1058: goto          1062
1061: iconst_0
1062: invokestatic  #21
1065: aload         36
1067: invokestatic  #47
1070: aload         37
1072: invokestatic  #47
1075: aload         38
1077: invokestatic  #47
1080: aload         39
1082: invokestatic  #47
1085: aload         40
1087: invokestatic  #47
1090: aload         42
1092: invokestatic  #47
1095: aload         43
1097: invokestatic  #47
1100: new           #14
1103: dup
1104: invokespecial #15
1107: ldc           #16
1109: invokevirtual #17
1112: iload         44
1114: invokevirtual #18
1117: ldc           #19
1119: invokevirtual #17
1122: iconst_0
1123: invokevirtual #18
1126: ldc           #16
1128: invokevirtual #17
1131: invokevirtual #20
1134: iload         44
1136: ifne          1143
1139: iconst_1
1140: goto          1144
1143: iconst_0
1144: invokestatic  #21
1147: aload         45
1149: invokestatic  #47
1152: aload         46
1154: invokestatic  #47
1157: aload         47
1159: invokestatic  #47
1162: aload         49
1164: invokestatic  #47
1167: aload         50
1169: invokestatic  #47
1172: new           #14
1175: dup
1176: invokespecial #15
1179: ldc           #16
1181: invokevirtual #17
1184: iload         51
1186: invokevirtual #18
1189: ldc           #19
1191: invokevirtual #17
1194: iconst_0
1195: invokevirtual #18
1198: ldc           #16
1200: invokevirtual #17
1203: invokevirtual #20
1206: iload         51
1208: ifne          1215
1211: iconst_1
1212: goto          1216
1215: iconst_0
1216: invokestatic  #21
1219: aload         52
1221: invokestatic  #47
1224: new           #14
1227: dup
1228: invokespecial #15
1231: ldc           #16
1233: invokevirtual #17
1236: iload         53
1238: invokevirtual #18
1241: ldc           #19
1243: invokevirtual #17
1246: iconst_0
1247: invokevirtual #18
1250: ldc           #16
1252: invokevirtual #17
1255: invokevirtual #20
1258: iload         53
1260: ifne          1267
1263: iconst_1
1264: goto          1268
1267: iconst_0
1268: invokestatic  #21
1271: new           #14
1274: dup
1275: invokespecial #15
1278: ldc           #16
1280: invokevirtual #17
1283: iload         54
1285: invokevirtual #18
1288: ldc           #19
1290: invokevirtual #17
1293: iconst_0
1294: invokevirtual #18
1297: ldc           #16
1299: invokevirtual #17
1302: invokevirtual #20
1305: iload         54
1307: ifne          1314
1310: iconst_1
1311: goto          1315
1314: iconst_0
1315: invokestatic  #21
1318: aload         55
1320: invokestatic  #47
1323: aload         56
1325: invokestatic  #47
1328: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 2796
End line: 2895
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray31, (int) (short) 0, (int) (byte) 1);
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class<?> wildcardClass43 = null;
        java.lang.Class[] classArray45 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45;
        wildcardClassArray46[0] = wildcardClass43;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray46, true);
        java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46);
        java.lang.Class[] classArray53 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        java.lang.Class<?> wildcardClass55 = null;
        java.lang.Class[] classArray57 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass55;
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray53, wildcardClassArray58, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray58);
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray63, true);
        java.lang.Class<?>[] wildcardClassArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray66, false);
        boolean boolean70 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray39, wildcardClassArray66, false);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray73 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.reflect.GenericDeclaration[]) wildcardClassArray66, (int) (byte) 1, (int) (short) -1);
        java.lang.Class<?>[] wildcardClassArray74 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray66);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClassArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(genericDeclarationArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #220
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: aload         20
199: iconst_0
200: iconst_1
201: invokestatic  #69
204: checkcast     #40
207: astore        23
209: iconst_0
210: anewarray     #39
213: astore        24
215: aload         24
217: checkcast     #40
220: astore        25
222: aconst_null
223: astore        26
225: iconst_1
226: anewarray     #39
229: astore        27
231: aload         27
233: checkcast     #40
236: astore        28
238: aload         28
240: iconst_0
241: aload         26
243: aastore
244: aload         24
246: checkcast     #40
249: aload         28
251: iconst_1
252: invokestatic  #41
255: istore        29
257: aload         28
259: invokestatic  #42
262: astore        30
264: iconst_0
265: anewarray     #39
268: astore        31
270: aload         31
272: checkcast     #40
275: astore        32
277: aconst_null
278: astore        33
280: iconst_1
281: anewarray     #39
284: astore        34
286: aload         34
288: checkcast     #40
291: astore        35
293: aload         35
295: iconst_0
296: aload         33
298: aastore
299: aload         31
301: checkcast     #40
304: aload         35
306: iconst_1
307: invokestatic  #41
310: istore        36
312: aload         35
314: invokestatic  #42
317: astore        37
319: aload         28
321: aload         37
323: iconst_1
324: invokestatic  #41
327: istore        38
329: getstatic     #52
332: astore        39
334: aload         28
336: aload         39
338: iconst_0
339: invokestatic  #41
342: istore        40
344: aload         23
346: aload         39
348: iconst_0
349: invokestatic  #41
352: istore        41
354: aload         39
356: checkcast     #187
359: iconst_1
360: iconst_m1
361: invokestatic  #69
364: checkcast     #187
367: astore        42
369: aload         39
371: invokestatic  #42
374: astore        43
376: aload_1
377: invokestatic  #47
380: aload_2
381: invokestatic  #47
384: aload         4
386: invokestatic  #47
389: aload         5
391: invokestatic  #47
394: new           #14
397: dup
398: invokespecial #15
401: ldc           #16
403: invokevirtual #17
406: iload         6
408: invokevirtual #18
411: ldc           #19
413: invokevirtual #17
416: iconst_0
417: invokevirtual #18
420: ldc           #16
422: invokevirtual #17
425: invokevirtual #20
428: iload         6
430: ifne          437
433: iconst_1
434: goto          438
437: iconst_0
438: invokestatic  #21
441: aload         7
443: invokestatic  #47
446: aload         8
448: invokestatic  #47
451: aload         10
453: invokestatic  #47
456: aload         11
458: invokestatic  #47
461: new           #14
464: dup
465: invokespecial #15
468: ldc           #16
470: invokevirtual #17
473: iload         12
475: invokevirtual #18
478: ldc           #19
480: invokevirtual #17
483: iconst_0
484: invokevirtual #18
487: ldc           #16
489: invokevirtual #17
492: invokevirtual #20
495: iload         12
497: ifne          504
500: iconst_1
501: goto          505
504: iconst_0
505: invokestatic  #21
508: aload         13
510: invokestatic  #47
513: new           #14
516: dup
517: invokespecial #15
520: ldc           #16
522: invokevirtual #17
525: iload         14
527: invokevirtual #18
530: ldc           #19
532: invokevirtual #17
535: iconst_0
536: invokevirtual #18
539: ldc           #16
541: invokevirtual #17
544: invokevirtual #20
547: iload         14
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #21
560: aload         15
562: invokestatic  #47
565: aload         16
567: invokestatic  #47
570: aload         17
572: invokestatic  #47
575: aload         19
577: invokestatic  #47
580: aload         20
582: invokestatic  #47
585: new           #14
588: dup
589: invokespecial #15
592: ldc           #16
594: invokevirtual #17
597: iload         21
599: invokevirtual #18
602: ldc           #19
604: invokevirtual #17
607: iconst_0
608: invokevirtual #18
611: ldc           #16
613: invokevirtual #17
616: invokevirtual #20
619: iload         21
621: ifne          628
624: iconst_1
625: goto          629
628: iconst_0
629: invokestatic  #21
632: new           #14
635: dup
636: invokespecial #15
639: ldc           #16
641: invokevirtual #17
644: iload         22
646: invokevirtual #18
649: ldc           #19
651: invokevirtual #17
654: iconst_0
655: invokevirtual #18
658: ldc           #16
660: invokevirtual #17
663: invokevirtual #20
666: iload         22
668: ifne          675
671: iconst_1
672: goto          676
675: iconst_0
676: invokestatic  #21
679: aload         23
681: invokestatic  #47
684: aload         24
686: invokestatic  #47
689: aload         25
691: invokestatic  #47
694: aload         27
696: invokestatic  #47
699: aload         28
701: invokestatic  #47
704: new           #14
707: dup
708: invokespecial #15
711: ldc           #16
713: invokevirtual #17
716: iload         29
718: invokevirtual #18
721: ldc           #19
723: invokevirtual #17
726: iconst_0
727: invokevirtual #18
730: ldc           #16
732: invokevirtual #17
735: invokevirtual #20
738: iload         29
740: ifne          747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #21
751: aload         30
753: invokestatic  #47
756: aload         31
758: invokestatic  #47
761: aload         32
763: invokestatic  #47
766: aload         34
768: invokestatic  #47
771: aload         35
773: invokestatic  #47
776: new           #14
779: dup
780: invokespecial #15
783: ldc           #16
785: invokevirtual #17
788: iload         36
790: invokevirtual #18
793: ldc           #19
795: invokevirtual #17
798: iconst_0
799: invokevirtual #18
802: ldc           #16
804: invokevirtual #17
807: invokevirtual #20
810: iload         36
812: ifne          819
815: iconst_1
816: goto          820
819: iconst_0
820: invokestatic  #21
823: aload         37
825: invokestatic  #47
828: new           #14
831: dup
832: invokespecial #15
835: ldc           #16
837: invokevirtual #17
840: iload         38
842: invokevirtual #18
845: ldc           #19
847: invokevirtual #17
850: iconst_0
851: invokevirtual #18
854: ldc           #16
856: invokevirtual #17
859: invokevirtual #20
862: iload         38
864: ifne          871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #21
875: aload         39
877: invokestatic  #47
880: new           #14
883: dup
884: invokespecial #15
887: ldc           #16
889: invokevirtual #17
892: iload         40
894: invokevirtual #18
897: ldc           #19
899: invokevirtual #17
902: iconst_0
903: invokevirtual #18
906: ldc           #16
908: invokevirtual #17
911: invokevirtual #20
914: iload         40
916: ifne          923
919: iconst_1
920: goto          924
923: iconst_0
924: invokestatic  #21
927: new           #14
930: dup
931: invokespecial #15
934: ldc           #16
936: invokevirtual #17
939: iload         41
941: invokevirtual #18
944: ldc           #19
946: invokevirtual #17
949: iconst_0
950: invokevirtual #18
953: ldc           #16
955: invokevirtual #17
958: invokevirtual #20
961: iload         41
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #21
974: aload         42
976: invokestatic  #47
979: aload         43
981: invokestatic  #47
984: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 2898
End line: 2973
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 1.0f, 1.0f, 1.0f, 0.0f, 1.0f };
        float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) '#');
        float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray7, (float) 3);
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.clone(floatArray7);
        float[] floatArray11 = null;
        float[] floatArray16 = new float[] { (byte) 1, ' ', 100, '4' };
        float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.removeElements(floatArray11, floatArray16);
        int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray16, (float) 100);
        float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray16, (float) 10);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray16);
        float[] floatArray23 = null;
        float[] floatArray28 = new float[] { (byte) 1, ' ', 100, '4' };
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.removeElements(floatArray23, floatArray28);
        int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray28, (float) 100);
        float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.add(floatArray28, (int) (short) 1, (float) '.');
        float[] floatArray35 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray16, floatArray28);
        java.lang.Float[] floatArray41 = new java.lang.Float[] { 1.0f, 1.0f, 1.0f, 0.0f, 1.0f };
        float[] floatArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41, (float) '#');
        float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41, (float) (short) 1);
        float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41, (float) (short) 0);
        float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41, (float) 0);
        float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41);
        float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41);
        float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.removeElements(floatArray16, floatArray51);
        float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray51);
        float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray51, (int) (short) 0, 5);
        java.lang.reflect.Type type57 = null;
        boolean boolean58 = org.apache.commons.lang3.reflect.TypeUtils.isInstance((java.lang.Object) floatArray51, type57);
        java.lang.String str60 = org.apache.commons.lang3.ClassUtils.getSimpleName((java.lang.Object) type57, "JavaPlatformAPISpecification");
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[1.0, 32.0, 100.0, 52.0]");
        org.junit.Assert.assertNull(floatArray17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[1.0, 32.0, 100.0, 52.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[1.0, 32.0, 100.0, 52.0]");
        org.junit.Assert.assertNull(floatArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, 46.0, 32.0, 100.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray35), "[1.0, 32.0, 100.0, 52.0, 1.0, 32.0, 100.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray43), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray47), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray49), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[32.0, 100.0, 52.0]");
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "JavaPlatformAPISpecification" + "'", str60, "JavaPlatformAPISpecification");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #221
19: aastore
20: invokevirtual #7
23: pop
24: iconst_5
25: anewarray     #125
28: dup
29: iconst_0
30: fconst_1
31: invokestatic  #126
34: aastore
35: dup
36: iconst_1
37: fconst_1
38: invokestatic  #126
41: aastore
42: dup
43: iconst_2
44: fconst_1
45: invokestatic  #126
48: aastore
49: dup
50: iconst_3
51: fconst_0
52: invokestatic  #126
55: aastore
56: dup
57: iconst_4
58: fconst_1
59: invokestatic  #126
62: aastore
63: astore_1
64: aload_1
65: ldc           #127
67: invokestatic  #128
70: astore_2
71: aload_2
72: ldc           #222
74: invokestatic  #223
77: astore_3
78: aload_2
79: invokestatic  #224
82: astore        4
84: aconst_null
85: astore        5
87: iconst_4
88: newarray       float
90: dup
91: iconst_0
92: fconst_1
93: fastore
94: dup
95: iconst_1
96: ldc           #131
98: fastore
99: dup
100: iconst_2
101: ldc           #132
103: fastore
104: dup
105: iconst_3
106: ldc           #133
108: fastore
109: astore        6
111: aload         5
113: aload         6
115: invokestatic  #134
118: astore        7
120: aload         6
122: ldc           #132
124: invokestatic  #135
127: istore        8
129: aload         6
131: ldc           #225
133: invokestatic  #223
136: astore        9
138: aload         6
140: invokestatic  #226
143: istore        10
145: aconst_null
146: astore        11
148: iconst_4
149: newarray       float
151: dup
152: iconst_0
153: fconst_1
154: fastore
155: dup
156: iconst_1
157: ldc           #131
159: fastore
160: dup
161: iconst_2
162: ldc           #132
164: fastore
165: dup
166: iconst_3
167: ldc           #133
169: fastore
170: astore        12
172: aload         11
174: aload         12
176: invokestatic  #134
179: astore        13
181: aload         12
183: ldc           #132
185: invokestatic  #135
188: istore        14
190: aload         12
192: iconst_1
193: ldc           #136
195: invokestatic  #137
198: astore        15
200: aload         6
202: aload         12
204: invokestatic  #227
207: astore        16
209: iconst_5
210: anewarray     #125
213: dup
214: iconst_0
215: fconst_1
216: invokestatic  #126
219: aastore
220: dup
221: iconst_1
222: fconst_1
223: invokestatic  #126
226: aastore
227: dup
228: iconst_2
229: fconst_1
230: invokestatic  #126
233: aastore
234: dup
235: iconst_3
236: fconst_0
237: invokestatic  #126
240: aastore
241: dup
242: iconst_4
243: fconst_1
244: invokestatic  #126
247: aastore
248: astore        17
250: aload         17
252: ldc           #127
254: invokestatic  #128
257: astore        18
259: aload         17
261: fconst_1
262: invokestatic  #128
265: astore        19
267: aload         17
269: fconst_0
270: invokestatic  #128
273: astore        20
275: aload         17
277: fconst_0
278: invokestatic  #128
281: astore        21
283: aload         17
285: invokestatic  #228
288: astore        22
290: aload         17
292: invokestatic  #228
295: astore        23
297: aload         6
299: aload         23
301: invokestatic  #134
304: astore        24
306: aload         4
308: aload         23
310: invokestatic  #227
313: astore        25
315: aload         23
317: iconst_0
318: iconst_5
319: invokestatic  #229
322: astore        26
324: aconst_null
325: astore        27
327: aload         23
329: aload         27
331: invokestatic  #91
334: istore        28
336: aload         27
338: ldc           #230
340: invokestatic  #200
343: astore        29
345: aload_1
346: invokestatic  #47
349: aload_2
350: invokestatic  #47
353: aload_2
354: invokestatic  #142
357: ldc           #143
359: invokestatic  #62
362: aload_3
363: invokestatic  #47
366: aload_3
367: invokestatic  #142
370: ldc           #143
372: invokestatic  #62
375: aload         4
377: invokestatic  #47
380: aload         4
382: invokestatic  #142
385: ldc           #143
387: invokestatic  #62
390: aload         6
392: invokestatic  #47
395: aload         6
397: invokestatic  #142
400: ldc           #144
402: invokestatic  #62
405: aload         7
407: invokestatic  #35
410: new           #14
413: dup
414: invokespecial #15
417: ldc           #16
419: invokevirtual #17
422: iload         8
424: invokevirtual #48
427: ldc           #19
429: invokevirtual #17
432: iconst_2
433: invokevirtual #48
436: ldc           #16
438: invokevirtual #17
441: invokevirtual #20
444: iload         8
446: iconst_2
447: if_icmpne     454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #21
458: aload         9
460: invokestatic  #47
463: aload         9
465: invokestatic  #142
468: ldc           #144
470: invokestatic  #62
473: new           #14
476: dup
477: invokespecial #15
480: ldc           #16
482: invokevirtual #17
485: iload         10
487: invokevirtual #18
490: ldc           #19
492: invokevirtual #17
495: iconst_1
496: invokevirtual #18
499: ldc           #16
501: invokevirtual #17
504: invokevirtual #20
507: iload         10
509: iconst_1
510: if_icmpne     517
513: iconst_1
514: goto          518
517: iconst_0
518: invokestatic  #21
521: aload         12
523: invokestatic  #47
526: aload         12
528: invokestatic  #142
531: ldc           #144
533: invokestatic  #62
536: aload         13
538: invokestatic  #35
541: new           #14
544: dup
545: invokespecial #15
548: ldc           #16
550: invokevirtual #17
553: iload         14
555: invokevirtual #48
558: ldc           #19
560: invokevirtual #17
563: iconst_2
564: invokevirtual #48
567: ldc           #16
569: invokevirtual #17
572: invokevirtual #20
575: iload         14
577: iconst_2
578: if_icmpne     585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #21
589: aload         15
591: invokestatic  #47
594: aload         15
596: invokestatic  #142
599: ldc           #145
601: invokestatic  #62
604: aload         16
606: invokestatic  #47
609: aload         16
611: invokestatic  #142
614: ldc           #231
616: invokestatic  #62
619: aload         17
621: invokestatic  #47
624: aload         18
626: invokestatic  #47
629: aload         18
631: invokestatic  #142
634: ldc           #143
636: invokestatic  #62
639: aload         19
641: invokestatic  #47
644: aload         19
646: invokestatic  #142
649: ldc           #143
651: invokestatic  #62
654: aload         20
656: invokestatic  #47
659: aload         20
661: invokestatic  #142
664: ldc           #143
666: invokestatic  #62
669: aload         21
671: invokestatic  #47
674: aload         21
676: invokestatic  #142
679: ldc           #143
681: invokestatic  #62
684: aload         22
686: invokestatic  #47
689: aload         22
691: invokestatic  #142
694: ldc           #143
696: invokestatic  #62
699: aload         23
701: invokestatic  #47
704: aload         23
706: invokestatic  #142
709: ldc           #143
711: invokestatic  #62
714: aload         24
716: invokestatic  #47
719: aload         24
721: invokestatic  #142
724: ldc           #232
726: invokestatic  #62
729: aload         25
731: invokestatic  #47
734: aload         25
736: invokestatic  #142
739: ldc           #233
741: invokestatic  #62
744: aload         26
746: invokestatic  #47
749: aload         26
751: invokestatic  #142
754: ldc           #143
756: invokestatic  #62
759: new           #14
762: dup
763: invokespecial #15
766: ldc           #16
768: invokevirtual #17
771: iload         28
773: invokevirtual #18
776: ldc           #19
778: invokevirtual #17
781: iconst_0
782: invokevirtual #18
785: ldc           #16
787: invokevirtual #17
790: invokevirtual #20
793: iload         28
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #21
806: new           #14
809: dup
810: invokespecial #15
813: ldc           #16
815: invokevirtual #17
818: aload         29
820: invokevirtual #17
823: ldc           #234
825: invokevirtual #17
828: invokevirtual #20
831: aload         29
833: ldc           #230
835: invokestatic  #178
838: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 2976
End line: 3085
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26);
        java.lang.Class[] classArray29 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29;
        java.lang.Class<?> wildcardClass31 = null;
        java.lang.Class[] classArray33 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass31;
        boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray34, true);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray34);
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class<?> wildcardClass43 = null;
        java.lang.Class[] classArray45 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45;
        wildcardClassArray46[0] = wildcardClass43;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray46, true);
        java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46);
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray34, wildcardClassArray51, true);
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray34, false);
        java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26);
        java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26);
        java.lang.Class[] classArray59 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        java.lang.Class[] classArray62 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray63 = (java.lang.Class<?>[]) classArray62;
        java.lang.Class<?> wildcardClass64 = null;
        java.lang.Class[] classArray66 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66;
        wildcardClassArray67[0] = wildcardClass64;
        boolean boolean71 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray62, wildcardClassArray67, true);
        boolean boolean72 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray59, (java.lang.Class<?>[]) classArray62);
        java.lang.Class<?>[] wildcardClassArray73 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray59);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) classArray59);
        boolean boolean75 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, (java.lang.Class<?>[]) classArray59);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClassArray30);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClassArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(wildcardClassArray67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #235
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #44
145: invokestatic  #32
148: astore        16
150: aload         5
152: invokestatic  #53
155: astore        17
157: aload         17
159: invokestatic  #53
162: astore        18
164: iconst_0
165: anewarray     #39
168: astore        19
170: aload         19
172: checkcast     #40
175: astore        20
177: aconst_null
178: astore        21
180: iconst_1
181: anewarray     #39
184: astore        22
186: aload         22
188: checkcast     #40
191: astore        23
193: aload         23
195: iconst_0
196: aload         21
198: aastore
199: aload         19
201: checkcast     #40
204: aload         23
206: iconst_1
207: invokestatic  #41
210: istore        24
212: aload         23
214: invokestatic  #42
217: astore        25
219: iconst_0
220: anewarray     #39
223: astore        26
225: aload         26
227: checkcast     #40
230: astore        27
232: aconst_null
233: astore        28
235: iconst_1
236: anewarray     #39
239: astore        29
241: aload         29
243: checkcast     #40
246: astore        30
248: aload         30
250: iconst_0
251: aload         28
253: aastore
254: aload         26
256: checkcast     #40
259: aload         30
261: iconst_1
262: invokestatic  #41
265: istore        31
267: aload         30
269: invokestatic  #42
272: astore        32
274: aload         23
276: aload         32
278: iconst_1
279: invokestatic  #41
282: istore        33
284: aload         17
286: aload         23
288: iconst_0
289: invokestatic  #41
292: istore        34
294: aload         17
296: invokestatic  #42
299: astore        35
301: aload         17
303: invokestatic  #53
306: astore        36
308: iconst_0
309: anewarray     #39
312: astore        37
314: aload         37
316: checkcast     #40
319: astore        38
321: iconst_0
322: anewarray     #39
325: astore        39
327: aload         39
329: checkcast     #40
332: astore        40
334: aconst_null
335: astore        41
337: iconst_1
338: anewarray     #39
341: astore        42
343: aload         42
345: checkcast     #40
348: astore        43
350: aload         43
352: iconst_0
353: aload         41
355: aastore
356: aload         39
358: checkcast     #40
361: aload         43
363: iconst_1
364: invokestatic  #41
367: istore        44
369: aload         37
371: checkcast     #40
374: aload         39
376: checkcast     #40
379: invokestatic  #43
382: istore        45
384: aload         37
386: checkcast     #40
389: invokestatic  #53
392: astore        46
394: aload         37
396: checkcast     #45
399: invokestatic  #236
402: aload         17
404: aload         37
406: checkcast     #40
409: invokestatic  #43
412: istore        47
414: aload_1
415: invokestatic  #47
418: aload_2
419: invokestatic  #47
422: aload         4
424: invokestatic  #47
427: aload         5
429: invokestatic  #47
432: new           #14
435: dup
436: invokespecial #15
439: ldc           #16
441: invokevirtual #17
444: iload         6
446: invokevirtual #18
449: ldc           #19
451: invokevirtual #17
454: iconst_0
455: invokevirtual #18
458: ldc           #16
460: invokevirtual #17
463: invokevirtual #20
466: iload         6
468: ifne          475
471: iconst_1
472: goto          476
475: iconst_0
476: invokestatic  #21
479: aload         7
481: invokestatic  #47
484: aload         8
486: invokestatic  #47
489: aload         9
491: invokestatic  #47
494: aload         11
496: invokestatic  #47
499: aload         12
501: invokestatic  #47
504: new           #14
507: dup
508: invokespecial #15
511: ldc           #16
513: invokevirtual #17
516: iload         13
518: invokevirtual #18
521: ldc           #19
523: invokevirtual #17
526: iconst_0
527: invokevirtual #18
530: ldc           #16
532: invokevirtual #17
535: invokevirtual #20
538: iload         13
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #21
551: aload         14
553: invokestatic  #47
556: new           #14
559: dup
560: invokespecial #15
563: ldc           #16
565: invokevirtual #17
568: iload         15
570: invokevirtual #18
573: ldc           #19
575: invokevirtual #17
578: iconst_0
579: invokevirtual #18
582: ldc           #16
584: invokevirtual #17
587: invokevirtual #20
590: iload         15
592: ifne          599
595: iconst_1
596: goto          600
599: iconst_0
600: invokestatic  #21
603: aload         16
605: invokestatic  #47
608: aload         17
610: invokestatic  #47
613: aload         18
615: invokestatic  #47
618: aload         19
620: invokestatic  #47
623: aload         20
625: invokestatic  #47
628: aload         22
630: invokestatic  #47
633: aload         23
635: invokestatic  #47
638: new           #14
641: dup
642: invokespecial #15
645: ldc           #16
647: invokevirtual #17
650: iload         24
652: invokevirtual #18
655: ldc           #19
657: invokevirtual #17
660: iconst_0
661: invokevirtual #18
664: ldc           #16
666: invokevirtual #17
669: invokevirtual #20
672: iload         24
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #21
685: aload         25
687: invokestatic  #47
690: aload         26
692: invokestatic  #47
695: aload         27
697: invokestatic  #47
700: aload         29
702: invokestatic  #47
705: aload         30
707: invokestatic  #47
710: new           #14
713: dup
714: invokespecial #15
717: ldc           #16
719: invokevirtual #17
722: iload         31
724: invokevirtual #18
727: ldc           #19
729: invokevirtual #17
732: iconst_0
733: invokevirtual #18
736: ldc           #16
738: invokevirtual #17
741: invokevirtual #20
744: iload         31
746: ifne          753
749: iconst_1
750: goto          754
753: iconst_0
754: invokestatic  #21
757: aload         32
759: invokestatic  #47
762: new           #14
765: dup
766: invokespecial #15
769: ldc           #16
771: invokevirtual #17
774: iload         33
776: invokevirtual #18
779: ldc           #19
781: invokevirtual #17
784: iconst_0
785: invokevirtual #18
788: ldc           #16
790: invokevirtual #17
793: invokevirtual #20
796: iload         33
798: ifne          805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #21
809: new           #14
812: dup
813: invokespecial #15
816: ldc           #16
818: invokevirtual #17
821: iload         34
823: invokevirtual #18
826: ldc           #19
828: invokevirtual #17
831: iconst_0
832: invokevirtual #18
835: ldc           #16
837: invokevirtual #17
840: invokevirtual #20
843: iload         34
845: ifne          852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #21
856: aload         35
858: invokestatic  #47
861: aload         36
863: invokestatic  #47
866: aload         37
868: invokestatic  #47
871: aload         38
873: invokestatic  #47
876: aload         39
878: invokestatic  #47
881: aload         40
883: invokestatic  #47
886: aload         42
888: invokestatic  #47
891: aload         43
893: invokestatic  #47
896: new           #14
899: dup
900: invokespecial #15
903: ldc           #16
905: invokevirtual #17
908: iload         44
910: invokevirtual #18
913: ldc           #19
915: invokevirtual #17
918: iconst_0
919: invokevirtual #18
922: ldc           #16
924: invokevirtual #17
927: invokevirtual #20
930: iload         44
932: ifne          939
935: iconst_1
936: goto          940
939: iconst_0
940: invokestatic  #21
943: new           #14
946: dup
947: invokespecial #15
950: ldc           #16
952: invokevirtual #17
955: iload         45
957: invokevirtual #18
960: ldc           #19
962: invokevirtual #17
965: iconst_1
966: invokevirtual #18
969: ldc           #16
971: invokevirtual #17
974: invokevirtual #20
977: iload         45
979: iconst_1
980: if_icmpne     987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #21
991: aload         46
993: invokestatic  #47
996: new           #14
999: dup
1000: invokespecial #15
1003: ldc           #16
1005: invokevirtual #17
1008: iload         47
1010: invokevirtual #18
1013: ldc           #19
1015: invokevirtual #17
1018: iconst_0
1019: invokevirtual #18
1022: ldc           #16
1024: invokevirtual #17
1027: invokevirtual #20
1030: iload         47
1032: ifne          1039
1035: iconst_1
1036: goto          1040
1039: iconst_0
1040: invokestatic  #21
1043: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 3088
End line: 3119
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        boolean[] booleanArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY;
        boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray0, 10, 0);
        boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0);
        java.lang.Boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray0);
        java.lang.Byte[] byteArray6 = null;
        java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6);
        byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray7);
        boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray5, (java.lang.Object[]) byteArray7);
        boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, true);
        java.lang.Class<?> wildcardClass14 = org.apache.commons.lang3.ClassUtils.getClass("boolean[]", true);
        boolean boolean15 = org.apache.commons.lang3.reflect.TypeUtils.isInstance((java.lang.Object) booleanArray5, (java.lang.reflect.Type) wildcardClass14);
        boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, true);
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]");
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[]");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #237
19: aastore
20: invokevirtual #7
23: pop
24: getstatic     #238
27: astore_1
28: aload_1
29: bipush        10
31: iconst_0
32: invokestatic  #239
35: astore_2
36: aload_1
37: invokestatic  #240
40: istore_3
41: aload_1
42: invokestatic  #241
45: astore        4
47: aconst_null
48: astore        5
50: aload         5
52: invokestatic  #242
55: astore        6
57: aload         6
59: invokestatic  #243
62: astore        7
64: aload         4
66: checkcast     #45
69: aload         6
71: checkcast     #45
74: invokestatic  #158
77: istore        8
79: aload         4
81: iconst_1
82: invokestatic  #244
85: astore        9
87: ldc           #245
89: iconst_1
90: invokestatic  #246
93: astore        10
95: aload         4
97: aload         10
99: invokestatic  #91
102: istore        11
104: aload         4
106: iconst_1
107: invokestatic  #244
110: astore        12
112: aload_1
113: invokestatic  #47
116: aload_1
117: invokestatic  #247
120: ldc           #65
122: invokestatic  #62
125: aload_2
126: invokestatic  #47
129: aload_2
130: invokestatic  #247
133: ldc           #65
135: invokestatic  #62
138: new           #14
141: dup
142: invokespecial #15
145: ldc           #16
147: invokevirtual #17
150: iload_3
151: invokevirtual #18
154: ldc           #19
156: invokevirtual #17
159: iconst_1
160: invokevirtual #18
163: ldc           #16
165: invokevirtual #17
168: invokevirtual #20
171: iload_3
172: iconst_1
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #21
184: aload         4
186: invokestatic  #47
189: aload         6
191: invokestatic  #47
194: aload         7
196: invokestatic  #47
199: aload         7
201: invokestatic  #248
204: ldc           #65
206: invokestatic  #62
209: new           #14
212: dup
213: invokespecial #15
216: ldc           #16
218: invokevirtual #17
221: iload         8
223: invokevirtual #18
226: ldc           #19
228: invokevirtual #17
231: iconst_1
232: invokevirtual #18
235: ldc           #16
237: invokevirtual #17
240: invokevirtual #20
243: iload         8
245: iconst_1
246: if_icmpne     253
249: iconst_1
250: goto          254
253: iconst_0
254: invokestatic  #21
257: aload         9
259: invokestatic  #47
262: aload         9
264: invokestatic  #247
267: ldc           #65
269: invokestatic  #62
272: aload         10
274: invokestatic  #47
277: new           #14
280: dup
281: invokespecial #15
284: ldc           #16
286: invokevirtual #17
289: iload         11
291: invokevirtual #18
294: ldc           #19
296: invokevirtual #17
299: iconst_0
300: invokevirtual #18
303: ldc           #16
305: invokevirtual #17
308: invokevirtual #20
311: iload         11
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #21
324: aload         12
326: invokestatic  #47
329: aload         12
331: invokestatic  #247
334: ldc           #65
336: invokestatic  #62
339: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 3122
End line: 3145
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray12 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray11);
        java.lang.reflect.Type[] typeArray13 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(typeArray13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #249
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: aload         7
75: invokestatic  #53
78: astore        8
80: aload         7
82: checkcast     #44
85: invokestatic  #32
88: astore        9
90: aload_1
91: invokestatic  #47
94: aload_2
95: invokestatic  #47
98: aload         4
100: invokestatic  #47
103: aload         5
105: invokestatic  #47
108: new           #14
111: dup
112: invokespecial #15
115: ldc           #16
117: invokevirtual #17
120: iload         6
122: invokevirtual #18
125: ldc           #19
127: invokevirtual #17
130: iconst_0
131: invokevirtual #18
134: ldc           #16
136: invokevirtual #17
139: invokevirtual #20
142: iload         6
144: ifne          151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #21
155: aload         7
157: invokestatic  #47
160: aload         8
162: invokestatic  #47
165: aload         9
167: invokestatic  #47
170: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 3148
End line: 3287
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43);
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        java.lang.Class<?> wildcardClass52 = null;
        java.lang.Class[] classArray54 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass52;
        boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray55, true);
        java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray55);
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray60, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63, false);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray63, true);
        java.lang.Class[] classArray69 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69;
        java.lang.Class<?> wildcardClass71 = null;
        java.lang.Class[] classArray73 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray74 = (java.lang.Class<?>[]) classArray73;
        wildcardClassArray74[0] = wildcardClass71;
        boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray69, wildcardClassArray74, true);
        java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        java.lang.Class<?> wildcardClass83 = null;
        java.lang.Class[] classArray85 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray86 = (java.lang.Class<?>[]) classArray85;
        wildcardClassArray86[0] = wildcardClass83;
        boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray81, wildcardClassArray86, true);
        java.lang.Class<?>[] wildcardClassArray91 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray81);
        boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray74, wildcardClassArray91);
        java.lang.reflect.Type[] typeArray93 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray94 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray95 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray94);
        java.lang.reflect.Type[] typeArray96 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.reflect.Type[]) wildcardClassArray31, (java.lang.reflect.Type[]) wildcardClassArray94);
        java.lang.Object[] objArray97 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) typeArray96);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(wildcardClassArray70);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[null, null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[null, null]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: iconst_0
67: anewarray     #39
70: astore        7
72: aload         7
74: checkcast     #40
77: astore        8
79: aconst_null
80: astore        9
82: iconst_1
83: anewarray     #39
86: astore        10
88: aload         10
90: checkcast     #40
93: astore        11
95: aload         11
97: iconst_0
98: aload         9
100: aastore
101: aload         7
103: checkcast     #40
106: aload         11
108: iconst_1
109: invokestatic  #41
112: istore        12
114: aload         11
116: invokestatic  #42
119: astore        13
121: aload         5
123: aload         11
125: invokestatic  #43
128: istore        14
130: aload         11
132: checkcast     #44
135: invokestatic  #32
138: astore        15
140: iconst_0
141: anewarray     #39
144: astore        16
146: aload         16
148: checkcast     #40
151: astore        17
153: aconst_null
154: astore        18
156: iconst_1
157: anewarray     #39
160: astore        19
162: aload         19
164: checkcast     #40
167: astore        20
169: aload         20
171: iconst_0
172: aload         18
174: aastore
175: aload         16
177: checkcast     #40
180: aload         20
182: iconst_1
183: invokestatic  #41
186: istore        21
188: aload         11
190: aload         20
192: invokestatic  #43
195: istore        22
197: iconst_0
198: anewarray     #39
201: astore        23
203: aload         23
205: checkcast     #40
208: astore        24
210: aconst_null
211: astore        25
213: iconst_1
214: anewarray     #39
217: astore        26
219: aload         26
221: checkcast     #40
224: astore        27
226: aload         27
228: iconst_0
229: aload         25
231: aastore
232: aload         23
234: checkcast     #40
237: aload         27
239: iconst_1
240: invokestatic  #41
243: istore        28
245: aload         27
247: invokestatic  #42
250: astore        29
252: iconst_0
253: anewarray     #39
256: astore        30
258: aload         30
260: checkcast     #40
263: astore        31
265: aconst_null
266: astore        32
268: iconst_1
269: anewarray     #39
272: astore        33
274: aload         33
276: checkcast     #40
279: astore        34
281: aload         34
283: iconst_0
284: aload         32
286: aastore
287: aload         30
289: checkcast     #40
292: aload         34
294: iconst_1
295: invokestatic  #41
298: istore        35
300: aload         34
302: invokestatic  #42
305: astore        36
307: aload         27
309: aload         36
311: iconst_1
312: invokestatic  #41
315: istore        37
317: getstatic     #52
320: astore        38
322: aload         27
324: aload         38
326: iconst_0
327: invokestatic  #41
330: istore        39
332: aload         20
334: aload         38
336: iconst_1
337: invokestatic  #41
340: istore        40
342: iconst_0
343: anewarray     #39
346: astore        41
348: aload         41
350: checkcast     #40
353: astore        42
355: aconst_null
356: astore        43
358: iconst_1
359: anewarray     #39
362: astore        44
364: aload         44
366: checkcast     #40
369: astore        45
371: aload         45
373: iconst_0
374: aload         43
376: aastore
377: aload         41
379: checkcast     #40
382: aload         45
384: iconst_1
385: invokestatic  #41
388: istore        46
390: aload         45
392: invokestatic  #42
395: astore        47
397: iconst_0
398: anewarray     #39
401: astore        48
403: aload         48
405: checkcast     #40
408: astore        49
410: aconst_null
411: astore        50
413: iconst_1
414: anewarray     #39
417: astore        51
419: aload         51
421: checkcast     #40
424: astore        52
426: aload         52
428: iconst_0
429: aload         50
431: aastore
432: aload         48
434: checkcast     #40
437: aload         52
439: iconst_1
440: invokestatic  #41
443: istore        53
445: aload         48
447: checkcast     #40
450: invokestatic  #42
453: astore        54
455: aload         45
457: aload         54
459: invokestatic  #43
462: istore        55
464: aload         45
466: checkcast     #44
469: invokestatic  #32
472: astore        56
474: aload         45
476: invokestatic  #53
479: astore        57
481: aload         57
483: invokestatic  #53
486: astore        58
488: aload         20
490: checkcast     #44
493: aload         57
495: checkcast     #44
498: invokestatic  #54
501: checkcast     #44
504: astore        59
506: aload         59
508: checkcast     #45
511: invokestatic  #251
514: astore        60
516: aload_1
517: invokestatic  #47
520: aload_2
521: invokestatic  #47
524: aload         4
526: invokestatic  #47
529: aload         5
531: invokestatic  #47
534: new           #14
537: dup
538: invokespecial #15
541: ldc           #16
543: invokevirtual #17
546: iload         6
548: invokevirtual #18
551: ldc           #19
553: invokevirtual #17
556: iconst_0
557: invokevirtual #18
560: ldc           #16
562: invokevirtual #17
565: invokevirtual #20
568: iload         6
570: ifne          577
573: iconst_1
574: goto          578
577: iconst_0
578: invokestatic  #21
581: aload         7
583: invokestatic  #47
586: aload         8
588: invokestatic  #47
591: aload         10
593: invokestatic  #47
596: aload         11
598: invokestatic  #47
601: new           #14
604: dup
605: invokespecial #15
608: ldc           #16
610: invokevirtual #17
613: iload         12
615: invokevirtual #18
618: ldc           #19
620: invokevirtual #17
623: iconst_0
624: invokevirtual #18
627: ldc           #16
629: invokevirtual #17
632: invokevirtual #20
635: iload         12
637: ifne          644
640: iconst_1
641: goto          645
644: iconst_0
645: invokestatic  #21
648: aload         13
650: invokestatic  #47
653: new           #14
656: dup
657: invokespecial #15
660: ldc           #16
662: invokevirtual #17
665: iload         14
667: invokevirtual #18
670: ldc           #19
672: invokevirtual #17
675: iconst_0
676: invokevirtual #18
679: ldc           #16
681: invokevirtual #17
684: invokevirtual #20
687: iload         14
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #21
700: aload         15
702: invokestatic  #47
705: aload         16
707: invokestatic  #47
710: aload         17
712: invokestatic  #47
715: aload         19
717: invokestatic  #47
720: aload         20
722: invokestatic  #47
725: new           #14
728: dup
729: invokespecial #15
732: ldc           #16
734: invokevirtual #17
737: iload         21
739: invokevirtual #18
742: ldc           #19
744: invokevirtual #17
747: iconst_0
748: invokevirtual #18
751: ldc           #16
753: invokevirtual #17
756: invokevirtual #20
759: iload         21
761: ifne          768
764: iconst_1
765: goto          769
768: iconst_0
769: invokestatic  #21
772: new           #14
775: dup
776: invokespecial #15
779: ldc           #16
781: invokevirtual #17
784: iload         22
786: invokevirtual #18
789: ldc           #19
791: invokevirtual #17
794: iconst_0
795: invokevirtual #18
798: ldc           #16
800: invokevirtual #17
803: invokevirtual #20
806: iload         22
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #21
819: aload         23
821: invokestatic  #47
824: aload         24
826: invokestatic  #47
829: aload         26
831: invokestatic  #47
834: aload         27
836: invokestatic  #47
839: new           #14
842: dup
843: invokespecial #15
846: ldc           #16
848: invokevirtual #17
851: iload         28
853: invokevirtual #18
856: ldc           #19
858: invokevirtual #17
861: iconst_0
862: invokevirtual #18
865: ldc           #16
867: invokevirtual #17
870: invokevirtual #20
873: iload         28
875: ifne          882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #21
886: aload         29
888: invokestatic  #47
891: aload         30
893: invokestatic  #47
896: aload         31
898: invokestatic  #47
901: aload         33
903: invokestatic  #47
906: aload         34
908: invokestatic  #47
911: new           #14
914: dup
915: invokespecial #15
918: ldc           #16
920: invokevirtual #17
923: iload         35
925: invokevirtual #18
928: ldc           #19
930: invokevirtual #17
933: iconst_0
934: invokevirtual #18
937: ldc           #16
939: invokevirtual #17
942: invokevirtual #20
945: iload         35
947: ifne          954
950: iconst_1
951: goto          955
954: iconst_0
955: invokestatic  #21
958: aload         36
960: invokestatic  #47
963: new           #14
966: dup
967: invokespecial #15
970: ldc           #16
972: invokevirtual #17
975: iload         37
977: invokevirtual #18
980: ldc           #19
982: invokevirtual #17
985: iconst_0
986: invokevirtual #18
989: ldc           #16
991: invokevirtual #17
994: invokevirtual #20
997: iload         37
999: ifne          1006
1002: iconst_1
1003: goto          1007
1006: iconst_0
1007: invokestatic  #21
1010: aload         38
1012: invokestatic  #47
1015: new           #14
1018: dup
1019: invokespecial #15
1022: ldc           #16
1024: invokevirtual #17
1027: iload         39
1029: invokevirtual #18
1032: ldc           #19
1034: invokevirtual #17
1037: iconst_0
1038: invokevirtual #18
1041: ldc           #16
1043: invokevirtual #17
1046: invokevirtual #20
1049: iload         39
1051: ifne          1058
1054: iconst_1
1055: goto          1059
1058: iconst_0
1059: invokestatic  #21
1062: new           #14
1065: dup
1066: invokespecial #15
1069: ldc           #16
1071: invokevirtual #17
1074: iload         40
1076: invokevirtual #18
1079: ldc           #19
1081: invokevirtual #17
1084: iconst_0
1085: invokevirtual #18
1088: ldc           #16
1090: invokevirtual #17
1093: invokevirtual #20
1096: iload         40
1098: ifne          1105
1101: iconst_1
1102: goto          1106
1105: iconst_0
1106: invokestatic  #21
1109: aload         41
1111: invokestatic  #47
1114: aload         42
1116: invokestatic  #47
1119: aload         44
1121: invokestatic  #47
1124: aload         45
1126: invokestatic  #47
1129: new           #14
1132: dup
1133: invokespecial #15
1136: ldc           #16
1138: invokevirtual #17
1141: iload         46
1143: invokevirtual #18
1146: ldc           #19
1148: invokevirtual #17
1151: iconst_0
1152: invokevirtual #18
1155: ldc           #16
1157: invokevirtual #17
1160: invokevirtual #20
1163: iload         46
1165: ifne          1172
1168: iconst_1
1169: goto          1173
1172: iconst_0
1173: invokestatic  #21
1176: aload         47
1178: invokestatic  #47
1181: aload         48
1183: invokestatic  #47
1186: aload         49
1188: invokestatic  #47
1191: aload         51
1193: invokestatic  #47
1196: aload         52
1198: invokestatic  #47
1201: new           #14
1204: dup
1205: invokespecial #15
1208: ldc           #16
1210: invokevirtual #17
1213: iload         53
1215: invokevirtual #18
1218: ldc           #19
1220: invokevirtual #17
1223: iconst_0
1224: invokevirtual #18
1227: ldc           #16
1229: invokevirtual #17
1232: invokevirtual #20
1235: iload         53
1237: ifne          1244
1240: iconst_1
1241: goto          1245
1244: iconst_0
1245: invokestatic  #21
1248: aload         54
1250: invokestatic  #47
1253: new           #14
1256: dup
1257: invokespecial #15
1260: ldc           #16
1262: invokevirtual #17
1265: iload         55
1267: invokevirtual #18
1270: ldc           #19
1272: invokevirtual #17
1275: iconst_0
1276: invokevirtual #18
1279: ldc           #16
1281: invokevirtual #17
1284: invokevirtual #20
1287: iload         55
1289: ifne          1296
1292: iconst_1
1293: goto          1297
1296: iconst_0
1297: invokestatic  #21
1300: aload         56
1302: invokestatic  #47
1305: aload         57
1307: invokestatic  #47
1310: aload         58
1312: invokestatic  #47
1315: aload         59
1317: invokestatic  #47
1320: aload         60
1322: invokestatic  #47
1325: aload         60
1327: invokestatic  #252
1330: ldc           #253
1332: invokestatic  #62
1335: aload         60
1337: invokestatic  #254
1340: ldc           #253
1342: invokestatic  #62
1345: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 3290
End line: 3379
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6);
        java.lang.Class[] classArray28 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28;
        java.lang.Class<?> wildcardClass30 = null;
        java.lang.Class[] classArray32 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass30;
        boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray33, true);
        java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray33);
        java.lang.Class[] classArray40 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray41 = (java.lang.Class<?>[]) classArray40;
        java.lang.Class<?> wildcardClass42 = null;
        java.lang.Class[] classArray44 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray45 = (java.lang.Class<?>[]) classArray44;
        wildcardClassArray45[0] = wildcardClass42;
        boolean boolean49 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray40, wildcardClassArray45, true);
        java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray45);
        boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray33, wildcardClassArray50, true);
        java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray33, wildcardClassArray53, false);
        java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray33);
        java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray56, 100, (int) (short) -1);
        java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray56);
        java.lang.Class<?>[] wildcardClassArray61 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray56);
        boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray61, false);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(wildcardClassArray29);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray38);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(wildcardClassArray41);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(wildcardClassArray45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #255
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #39
28: astore_1
29: aload_1
30: checkcast     #40
33: astore_2
34: aconst_null
35: astore_3
36: iconst_1
37: anewarray     #39
40: astore        4
42: aload         4
44: checkcast     #40
47: astore        5
49: aload         5
51: iconst_0
52: aload_3
53: aastore
54: aload_1
55: checkcast     #40
58: aload         5
60: iconst_1
61: invokestatic  #41
64: istore        6
66: aload         5
68: invokestatic  #42
71: astore        7
73: iconst_0
74: anewarray     #39
77: astore        8
79: aload         8
81: checkcast     #40
84: astore        9
86: aconst_null
87: astore        10
89: iconst_1
90: anewarray     #39
93: astore        11
95: aload         11
97: checkcast     #40
100: astore        12
102: aload         12
104: iconst_0
105: aload         10
107: aastore
108: aload         8
110: checkcast     #40
113: aload         12
115: iconst_1
116: invokestatic  #41
119: istore        13
121: aload         8
123: checkcast     #40
126: invokestatic  #42
129: astore        14
131: aload         5
133: aload         14
135: invokestatic  #43
138: istore        15
140: aload         5
142: checkcast     #44
145: invokestatic  #32
148: astore        16
150: aload         5
152: invokestatic  #53
155: astore        17
157: iconst_0
158: anewarray     #39
161: astore        18
163: aload         18
165: checkcast     #40
168: astore        19
170: aconst_null
171: astore        20
173: iconst_1
174: anewarray     #39
177: astore        21
179: aload         21
181: checkcast     #40
184: astore        22
186: aload         22
188: iconst_0
189: aload         20
191: aastore
192: aload         18
194: checkcast     #40
197: aload         22
199: iconst_1
200: invokestatic  #41
203: istore        23
205: aload         22
207: invokestatic  #42
210: astore        24
212: iconst_0
213: anewarray     #39
216: astore        25
218: aload         25
220: checkcast     #40
223: astore        26
225: aconst_null
226: astore        27
228: iconst_1
229: anewarray     #39
232: astore        28
234: aload         28
236: checkcast     #40
239: astore        29
241: aload         29
243: iconst_0
244: aload         27
246: aastore
247: aload         25
249: checkcast     #40
252: aload         29
254: iconst_1
255: invokestatic  #41
258: istore        30
260: aload         29
262: invokestatic  #42
265: astore        31
267: aload         22
269: aload         31
271: iconst_1
272: invokestatic  #41
275: istore        32
277: getstatic     #52
280: astore        33
282: aload         22
284: aload         33
286: iconst_0
287: invokestatic  #41
290: istore        34
292: aload         22
294: invokestatic  #42
297: astore        35
299: aload         35
301: bipush        100
303: iconst_m1
304: invokestatic  #69
307: checkcast     #40
310: astore        36
312: aload         35
314: invokestatic  #42
317: astore        37
319: aload         35
321: invokestatic  #53
324: astore        38
326: aload         17
328: aload         38
330: iconst_0
331: invokestatic  #41
334: istore        39
336: aload_1
337: invokestatic  #47
340: aload_2
341: invokestatic  #47
344: aload         4
346: invokestatic  #47
349: aload         5
351: invokestatic  #47
354: new           #14
357: dup
358: invokespecial #15
361: ldc           #16
363: invokevirtual #17
366: iload         6
368: invokevirtual #18
371: ldc           #19
373: invokevirtual #17
376: iconst_0
377: invokevirtual #18
380: ldc           #16
382: invokevirtual #17
385: invokevirtual #20
388: iload         6
390: ifne          397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #21
401: aload         7
403: invokestatic  #47
406: aload         8
408: invokestatic  #47
411: aload         9
413: invokestatic  #47
416: aload         11
418: invokestatic  #47
421: aload         12
423: invokestatic  #47
426: new           #14
429: dup
430: invokespecial #15
433: ldc           #16
435: invokevirtual #17
438: iload         13
440: invokevirtual #18
443: ldc           #19
445: invokevirtual #17
448: iconst_0
449: invokevirtual #18
452: ldc           #16
454: invokevirtual #17
457: invokevirtual #20
460: iload         13
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #21
473: aload         14
475: invokestatic  #47
478: new           #14
481: dup
482: invokespecial #15
485: ldc           #16
487: invokevirtual #17
490: iload         15
492: invokevirtual #18
495: ldc           #19
497: invokevirtual #17
500: iconst_0
501: invokevirtual #18
504: ldc           #16
506: invokevirtual #17
509: invokevirtual #20
512: iload         15
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #21
525: aload         16
527: invokestatic  #47
530: aload         17
532: invokestatic  #47
535: aload         18
537: invokestatic  #47
540: aload         19
542: invokestatic  #47
545: aload         21
547: invokestatic  #47
550: aload         22
552: invokestatic  #47
555: new           #14
558: dup
559: invokespecial #15
562: ldc           #16
564: invokevirtual #17
567: iload         23
569: invokevirtual #18
572: ldc           #19
574: invokevirtual #17
577: iconst_0
578: invokevirtual #18
581: ldc           #16
583: invokevirtual #17
586: invokevirtual #20
589: iload         23
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #21
602: aload         24
604: invokestatic  #47
607: aload         25
609: invokestatic  #47
612: aload         26
614: invokestatic  #47
617: aload         28
619: invokestatic  #47
622: aload         29
624: invokestatic  #47
627: new           #14
630: dup
631: invokespecial #15
634: ldc           #16
636: invokevirtual #17
639: iload         30
641: invokevirtual #18
644: ldc           #19
646: invokevirtual #17
649: iconst_0
650: invokevirtual #18
653: ldc           #16
655: invokevirtual #17
658: invokevirtual #20
661: iload         30
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #21
674: aload         31
676: invokestatic  #47
679: new           #14
682: dup
683: invokespecial #15
686: ldc           #16
688: invokevirtual #17
691: iload         32
693: invokevirtual #18
696: ldc           #19
698: invokevirtual #17
701: iconst_0
702: invokevirtual #18
705: ldc           #16
707: invokevirtual #17
710: invokevirtual #20
713: iload         32
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #21
726: aload         33
728: invokestatic  #47
731: new           #14
734: dup
735: invokespecial #15
738: ldc           #16
740: invokevirtual #17
743: iload         34
745: invokevirtual #18
748: ldc           #19
750: invokevirtual #17
753: iconst_0
754: invokevirtual #18
757: ldc           #16
759: invokevirtual #17
762: invokevirtual #20
765: iload         34
767: ifne          774
770: iconst_1
771: goto          775
774: iconst_0
775: invokestatic  #21
778: aload         35
780: invokestatic  #47
783: aload         36
785: invokestatic  #47
788: aload         37
790: invokestatic  #47
793: aload         38
795: invokestatic  #47
798: new           #14
801: dup
802: invokespecial #15
805: ldc           #16
807: invokevirtual #17
810: iload         39
812: invokevirtual #18
815: ldc           #19
817: invokevirtual #17
820: iconst_0
821: invokevirtual #18
824: ldc           #16
826: invokevirtual #17
829: invokevirtual #20
832: iload         39
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #21
845: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 3382
End line: 3421
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray23);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: aload         5
69: invokestatic  #42
72: astore        7
74: iconst_0
75: anewarray     #39
78: astore        8
80: aload         8
82: checkcast     #40
85: astore        9
87: aconst_null
88: astore        10
90: iconst_1
91: anewarray     #39
94: astore        11
96: aload         11
98: checkcast     #40
101: astore        12
103: aload         12
105: iconst_0
106: aload         10
108: aastore
109: aload         8
111: checkcast     #40
114: aload         12
116: iconst_1
117: invokestatic  #41
120: istore        13
122: aload         8
124: checkcast     #40
127: invokestatic  #42
130: astore        14
132: aload         5
134: aload         14
136: invokestatic  #43
139: istore        15
141: aload         14
143: checkcast     #44
146: invokestatic  #32
149: astore        16
151: aload_1
152: invokestatic  #47
155: aload_2
156: invokestatic  #47
159: aload         4
161: invokestatic  #47
164: aload         5
166: invokestatic  #47
169: new           #14
172: dup
173: invokespecial #15
176: ldc           #16
178: invokevirtual #17
181: iload         6
183: invokevirtual #18
186: ldc           #19
188: invokevirtual #17
191: iconst_0
192: invokevirtual #18
195: ldc           #16
197: invokevirtual #17
200: invokevirtual #20
203: iload         6
205: ifne          212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #21
216: aload         7
218: invokestatic  #47
221: aload         8
223: invokestatic  #47
226: aload         9
228: invokestatic  #47
231: aload         11
233: invokestatic  #47
236: aload         12
238: invokestatic  #47
241: new           #14
244: dup
245: invokespecial #15
248: ldc           #16
250: invokevirtual #17
253: iload         13
255: invokevirtual #18
258: ldc           #19
260: invokevirtual #17
263: iconst_0
264: invokevirtual #18
267: ldc           #16
269: invokevirtual #17
272: invokevirtual #20
275: iload         13
277: ifne          284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #21
288: aload         14
290: invokestatic  #47
293: new           #14
296: dup
297: invokespecial #15
300: ldc           #16
302: invokevirtual #17
305: iload         15
307: invokevirtual #18
310: ldc           #19
312: invokevirtual #17
315: iconst_0
316: invokevirtual #18
319: ldc           #16
321: invokevirtual #17
324: invokevirtual #20
327: iload         15
329: ifne          336
332: iconst_1
333: goto          337
336: iconst_0
337: invokestatic  #21
340: aload         16
342: invokestatic  #47
345: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 3424
End line: 3482
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray17);
        java.lang.Class<?>[] wildcardClassArray38 = null;
        boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray38, false);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #257
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: iconst_0
68: anewarray     #39
71: astore        7
73: aload         7
75: checkcast     #40
78: astore        8
80: aconst_null
81: astore        9
83: iconst_1
84: anewarray     #39
87: astore        10
89: aload         10
91: checkcast     #40
94: astore        11
96: aload         11
98: iconst_0
99: aload         9
101: aastore
102: aload         7
104: checkcast     #40
107: aload         11
109: iconst_1
110: invokestatic  #41
113: istore        12
115: aload         11
117: invokestatic  #42
120: astore        13
122: aload         5
124: aload         11
126: invokestatic  #43
129: istore        14
131: aload         11
133: checkcast     #44
136: invokestatic  #32
139: astore        15
141: iconst_0
142: anewarray     #39
145: astore        16
147: aload         16
149: checkcast     #40
152: astore        17
154: aconst_null
155: astore        18
157: iconst_1
158: anewarray     #39
161: astore        19
163: aload         19
165: checkcast     #40
168: astore        20
170: aload         20
172: iconst_0
173: aload         18
175: aastore
176: aload         16
178: checkcast     #40
181: aload         20
183: iconst_1
184: invokestatic  #41
187: istore        21
189: aload         11
191: aload         20
193: invokestatic  #43
196: istore        22
198: aload         11
200: invokestatic  #53
203: astore        23
205: aconst_null
206: astore        24
208: aload         11
210: aload         24
212: iconst_0
213: invokestatic  #41
216: istore        25
218: aload_1
219: invokestatic  #47
222: aload_2
223: invokestatic  #47
226: aload         4
228: invokestatic  #47
231: aload         5
233: invokestatic  #47
236: new           #14
239: dup
240: invokespecial #15
243: ldc           #16
245: invokevirtual #17
248: iload         6
250: invokevirtual #18
253: ldc           #19
255: invokevirtual #17
258: iconst_0
259: invokevirtual #18
262: ldc           #16
264: invokevirtual #17
267: invokevirtual #20
270: iload         6
272: ifne          279
275: iconst_1
276: goto          280
279: iconst_0
280: invokestatic  #21
283: aload         7
285: invokestatic  #47
288: aload         8
290: invokestatic  #47
293: aload         10
295: invokestatic  #47
298: aload         11
300: invokestatic  #47
303: new           #14
306: dup
307: invokespecial #15
310: ldc           #16
312: invokevirtual #17
315: iload         12
317: invokevirtual #18
320: ldc           #19
322: invokevirtual #17
325: iconst_0
326: invokevirtual #18
329: ldc           #16
331: invokevirtual #17
334: invokevirtual #20
337: iload         12
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #21
350: aload         13
352: invokestatic  #47
355: new           #14
358: dup
359: invokespecial #15
362: ldc           #16
364: invokevirtual #17
367: iload         14
369: invokevirtual #18
372: ldc           #19
374: invokevirtual #17
377: iconst_0
378: invokevirtual #18
381: ldc           #16
383: invokevirtual #17
386: invokevirtual #20
389: iload         14
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #21
402: aload         15
404: invokestatic  #47
407: aload         16
409: invokestatic  #47
412: aload         17
414: invokestatic  #47
417: aload         19
419: invokestatic  #47
422: aload         20
424: invokestatic  #47
427: new           #14
430: dup
431: invokespecial #15
434: ldc           #16
436: invokevirtual #17
439: iload         21
441: invokevirtual #18
444: ldc           #19
446: invokevirtual #17
449: iconst_0
450: invokevirtual #18
453: ldc           #16
455: invokevirtual #17
458: invokevirtual #20
461: iload         21
463: ifne          470
466: iconst_1
467: goto          471
470: iconst_0
471: invokestatic  #21
474: new           #14
477: dup
478: invokespecial #15
481: ldc           #16
483: invokevirtual #17
486: iload         22
488: invokevirtual #18
491: ldc           #19
493: invokevirtual #17
496: iconst_0
497: invokevirtual #18
500: ldc           #16
502: invokevirtual #17
505: invokevirtual #20
508: iload         22
510: ifne          517
513: iconst_1
514: goto          518
517: iconst_0
518: invokestatic  #21
521: aload         23
523: invokestatic  #47
526: new           #14
529: dup
530: invokespecial #15
533: ldc           #16
535: invokevirtual #17
538: iload         25
540: invokevirtual #18
543: ldc           #19
545: invokevirtual #17
548: iconst_0
549: invokevirtual #18
552: ldc           #16
554: invokevirtual #17
557: invokevirtual #20
560: iload         25
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #21
573: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 3485
End line: 3608
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.lang3.ClassUtils classUtils0 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils1 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils2 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray3 = new org.apache.commons.lang3.ClassUtils[] { classUtils0, classUtils1, classUtils2 };
        org.apache.commons.lang3.ClassUtils classUtils5 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray6 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray3, 0, classUtils5);
        org.apache.commons.lang3.ClassUtils classUtils7 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils8 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils9 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray10 = new org.apache.commons.lang3.ClassUtils[] { classUtils7, classUtils8, classUtils9 };
        org.apache.commons.lang3.ClassUtils classUtils12 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray13 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray10, 0, classUtils12);
        org.apache.commons.lang3.ClassUtils[] classUtilsArray14 = new org.apache.commons.lang3.ClassUtils[] { classUtils5, classUtils12 };
        org.apache.commons.lang3.ClassUtils[][] classUtilsArray15 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray14 };
        org.apache.commons.lang3.ClassUtils classUtils16 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils17 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils18 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils19 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils20 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray21 = new org.apache.commons.lang3.ClassUtils[] { classUtils18, classUtils19, classUtils20 };
        org.apache.commons.lang3.ClassUtils classUtils23 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray24 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray21, 0, classUtils23);
        org.apache.commons.lang3.ClassUtils classUtils25 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils26 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils27 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils28 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils29 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray30 = new org.apache.commons.lang3.ClassUtils[] { classUtils27, classUtils28, classUtils29 };
        org.apache.commons.lang3.ClassUtils classUtils32 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray33 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray30, 0, classUtils32);
        org.apache.commons.lang3.ClassUtils[] classUtilsArray34 = new org.apache.commons.lang3.ClassUtils[] { classUtils16, classUtils17, classUtils23, classUtils25, classUtils26, classUtils32 };
        org.apache.commons.lang3.ClassUtils classUtils35 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils36 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils37 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils38 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils39 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray40 = new org.apache.commons.lang3.ClassUtils[] { classUtils37, classUtils38, classUtils39 };
        org.apache.commons.lang3.ClassUtils classUtils42 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray43 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray40, 0, classUtils42);
        org.apache.commons.lang3.ClassUtils classUtils44 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils45 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils46 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils47 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils48 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray49 = new org.apache.commons.lang3.ClassUtils[] { classUtils46, classUtils47, classUtils48 };
        org.apache.commons.lang3.ClassUtils classUtils51 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray52 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray49, 0, classUtils51);
        org.apache.commons.lang3.ClassUtils[] classUtilsArray53 = new org.apache.commons.lang3.ClassUtils[] { classUtils35, classUtils36, classUtils42, classUtils44, classUtils45, classUtils51 };
        org.apache.commons.lang3.ClassUtils classUtils54 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils55 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils56 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils57 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils58 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray59 = new org.apache.commons.lang3.ClassUtils[] { classUtils56, classUtils57, classUtils58 };
        org.apache.commons.lang3.ClassUtils classUtils61 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray62 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray59, 0, classUtils61);
        org.apache.commons.lang3.ClassUtils classUtils63 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils64 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils65 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils66 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils67 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray68 = new org.apache.commons.lang3.ClassUtils[] { classUtils65, classUtils66, classUtils67 };
        org.apache.commons.lang3.ClassUtils classUtils70 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray71 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray68, 0, classUtils70);
        org.apache.commons.lang3.ClassUtils[] classUtilsArray72 = new org.apache.commons.lang3.ClassUtils[] { classUtils54, classUtils55, classUtils61, classUtils63, classUtils64, classUtils70 };
        org.apache.commons.lang3.ClassUtils classUtils73 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils74 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils75 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils76 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils77 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray78 = new org.apache.commons.lang3.ClassUtils[] { classUtils75, classUtils76, classUtils77 };
        org.apache.commons.lang3.ClassUtils classUtils80 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray81 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray78, 0, classUtils80);
        org.apache.commons.lang3.ClassUtils classUtils82 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils83 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils84 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils85 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils classUtils86 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray87 = new org.apache.commons.lang3.ClassUtils[] { classUtils84, classUtils85, classUtils86 };
        org.apache.commons.lang3.ClassUtils classUtils89 = new org.apache.commons.lang3.ClassUtils();
        org.apache.commons.lang3.ClassUtils[] classUtilsArray90 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray87, 0, classUtils89);
        org.apache.commons.lang3.ClassUtils[] classUtilsArray91 = new org.apache.commons.lang3.ClassUtils[] { classUtils73, classUtils74, classUtils80, classUtils82, classUtils83, classUtils89 };
        org.apache.commons.lang3.ClassUtils[][] classUtilsArray92 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray34, classUtilsArray53, classUtilsArray72, classUtilsArray91 };
        org.apache.commons.lang3.ClassUtils[][] classUtilsArray93 = org.apache.commons.lang3.ArrayUtils.removeElements(classUtilsArray15, classUtilsArray92);
        java.lang.Class<?>[] wildcardClassArray94 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) classUtilsArray15);
        java.lang.Class<?>[] wildcardClassArray95 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        java.lang.reflect.Type[] typeArray96 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray95);
        java.lang.reflect.Type[] typeArray97 = org.apache.commons.lang3.ArrayUtils.removeElements((java.lang.reflect.Type[]) wildcardClassArray94, typeArray96);
        org.junit.Assert.assertNotNull(classUtilsArray3);
        org.junit.Assert.assertNotNull(classUtilsArray6);
        org.junit.Assert.assertNotNull(classUtilsArray10);
        org.junit.Assert.assertNotNull(classUtilsArray13);
        org.junit.Assert.assertNotNull(classUtilsArray14);
        org.junit.Assert.assertNotNull(classUtilsArray15);
        org.junit.Assert.assertNotNull(classUtilsArray21);
        org.junit.Assert.assertNotNull(classUtilsArray24);
        org.junit.Assert.assertNotNull(classUtilsArray30);
        org.junit.Assert.assertNotNull(classUtilsArray33);
        org.junit.Assert.assertNotNull(classUtilsArray34);
        org.junit.Assert.assertNotNull(classUtilsArray40);
        org.junit.Assert.assertNotNull(classUtilsArray43);
        org.junit.Assert.assertNotNull(classUtilsArray49);
        org.junit.Assert.assertNotNull(classUtilsArray52);
        org.junit.Assert.assertNotNull(classUtilsArray53);
        org.junit.Assert.assertNotNull(classUtilsArray59);
        org.junit.Assert.assertNotNull(classUtilsArray62);
        org.junit.Assert.assertNotNull(classUtilsArray68);
        org.junit.Assert.assertNotNull(classUtilsArray71);
        org.junit.Assert.assertNotNull(classUtilsArray72);
        org.junit.Assert.assertNotNull(classUtilsArray78);
        org.junit.Assert.assertNotNull(classUtilsArray81);
        org.junit.Assert.assertNotNull(classUtilsArray87);
        org.junit.Assert.assertNotNull(classUtilsArray90);
        org.junit.Assert.assertNotNull(classUtilsArray91);
        org.junit.Assert.assertNotNull(classUtilsArray92);
        org.junit.Assert.assertNotNull(classUtilsArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertNotNull(typeArray97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #258
20: aastore
21: invokevirtual #7
24: pop
25: new           #259
28: dup
29: invokespecial #260
32: astore_1
33: new           #259
36: dup
37: invokespecial #260
40: astore_2
41: new           #259
44: dup
45: invokespecial #260
48: astore_3
49: iconst_3
50: anewarray     #259
53: dup
54: iconst_0
55: aload_1
56: aastore
57: dup
58: iconst_1
59: aload_2
60: aastore
61: dup
62: iconst_2
63: aload_3
64: aastore
65: astore        4
67: new           #259
70: dup
71: invokespecial #260
74: astore        5
76: aload         4
78: iconst_0
79: aload         5
81: invokestatic  #261
84: checkcast     #262
87: astore        6
89: new           #259
92: dup
93: invokespecial #260
96: astore        7
98: new           #259
101: dup
102: invokespecial #260
105: astore        8
107: new           #259
110: dup
111: invokespecial #260
114: astore        9
116: iconst_3
117: anewarray     #259
120: dup
121: iconst_0
122: aload         7
124: aastore
125: dup
126: iconst_1
127: aload         8
129: aastore
130: dup
131: iconst_2
132: aload         9
134: aastore
135: astore        10
137: new           #259
140: dup
141: invokespecial #260
144: astore        11
146: aload         10
148: iconst_0
149: aload         11
151: invokestatic  #261
154: checkcast     #262
157: astore        12
159: iconst_2
160: anewarray     #259
163: dup
164: iconst_0
165: aload         5
167: aastore
168: dup
169: iconst_1
170: aload         11
172: aastore
173: astore        13
175: iconst_1
176: anewarray     #262
179: dup
180: iconst_0
181: aload         13
183: aastore
184: astore        14
186: new           #259
189: dup
190: invokespecial #260
193: astore        15
195: new           #259
198: dup
199: invokespecial #260
202: astore        16
204: new           #259
207: dup
208: invokespecial #260
211: astore        17
213: new           #259
216: dup
217: invokespecial #260
220: astore        18
222: new           #259
225: dup
226: invokespecial #260
229: astore        19
231: iconst_3
232: anewarray     #259
235: dup
236: iconst_0
237: aload         17
239: aastore
240: dup
241: iconst_1
242: aload         18
244: aastore
245: dup
246: iconst_2
247: aload         19
249: aastore
250: astore        20
252: new           #259
255: dup
256: invokespecial #260
259: astore        21
261: aload         20
263: iconst_0
264: aload         21
266: invokestatic  #261
269: checkcast     #262
272: astore        22
274: new           #259
277: dup
278: invokespecial #260
281: astore        23
283: new           #259
286: dup
287: invokespecial #260
290: astore        24
292: new           #259
295: dup
296: invokespecial #260
299: astore        25
301: new           #259
304: dup
305: invokespecial #260
308: astore        26
310: new           #259
313: dup
314: invokespecial #260
317: astore        27
319: iconst_3
320: anewarray     #259
323: dup
324: iconst_0
325: aload         25
327: aastore
328: dup
329: iconst_1
330: aload         26
332: aastore
333: dup
334: iconst_2
335: aload         27
337: aastore
338: astore        28
340: new           #259
343: dup
344: invokespecial #260
347: astore        29
349: aload         28
351: iconst_0
352: aload         29
354: invokestatic  #261
357: checkcast     #262
360: astore        30
362: bipush        6
364: anewarray     #259
367: dup
368: iconst_0
369: aload         15
371: aastore
372: dup
373: iconst_1
374: aload         16
376: aastore
377: dup
378: iconst_2
379: aload         21
381: aastore
382: dup
383: iconst_3
384: aload         23
386: aastore
387: dup
388: iconst_4
389: aload         24
391: aastore
392: dup
393: iconst_5
394: aload         29
396: aastore
397: astore        31
399: new           #259
402: dup
403: invokespecial #260
406: astore        32
408: new           #259
411: dup
412: invokespecial #260
415: astore        33
417: new           #259
420: dup
421: invokespecial #260
424: astore        34
426: new           #259
429: dup
430: invokespecial #260
433: astore        35
435: new           #259
438: dup
439: invokespecial #260
442: astore        36
444: iconst_3
445: anewarray     #259
448: dup
449: iconst_0
450: aload         34
452: aastore
453: dup
454: iconst_1
455: aload         35
457: aastore
458: dup
459: iconst_2
460: aload         36
462: aastore
463: astore        37
465: new           #259
468: dup
469: invokespecial #260
472: astore        38
474: aload         37
476: iconst_0
477: aload         38
479: invokestatic  #261
482: checkcast     #262
485: astore        39
487: new           #259
490: dup
491: invokespecial #260
494: astore        40
496: new           #259
499: dup
500: invokespecial #260
503: astore        41
505: new           #259
508: dup
509: invokespecial #260
512: astore        42
514: new           #259
517: dup
518: invokespecial #260
521: astore        43
523: new           #259
526: dup
527: invokespecial #260
530: astore        44
532: iconst_3
533: anewarray     #259
536: dup
537: iconst_0
538: aload         42
540: aastore
541: dup
542: iconst_1
543: aload         43
545: aastore
546: dup
547: iconst_2
548: aload         44
550: aastore
551: astore        45
553: new           #259
556: dup
557: invokespecial #260
560: astore        46
562: aload         45
564: iconst_0
565: aload         46
567: invokestatic  #261
570: checkcast     #262
573: astore        47
575: bipush        6
577: anewarray     #259
580: dup
581: iconst_0
582: aload         32
584: aastore
585: dup
586: iconst_1
587: aload         33
589: aastore
590: dup
591: iconst_2
592: aload         38
594: aastore
595: dup
596: iconst_3
597: aload         40
599: aastore
600: dup
601: iconst_4
602: aload         41
604: aastore
605: dup
606: iconst_5
607: aload         46
609: aastore
610: astore        48
612: new           #259
615: dup
616: invokespecial #260
619: astore        49
621: new           #259
624: dup
625: invokespecial #260
628: astore        50
630: new           #259
633: dup
634: invokespecial #260
637: astore        51
639: new           #259
642: dup
643: invokespecial #260
646: astore        52
648: new           #259
651: dup
652: invokespecial #260
655: astore        53
657: iconst_3
658: anewarray     #259
661: dup
662: iconst_0
663: aload         51
665: aastore
666: dup
667: iconst_1
668: aload         52
670: aastore
671: dup
672: iconst_2
673: aload         53
675: aastore
676: astore        54
678: new           #259
681: dup
682: invokespecial #260
685: astore        55
687: aload         54
689: iconst_0
690: aload         55
692: invokestatic  #261
695: checkcast     #262
698: astore        56
700: new           #259
703: dup
704: invokespecial #260
707: astore        57
709: new           #259
712: dup
713: invokespecial #260
716: astore        58
718: new           #259
721: dup
722: invokespecial #260
725: astore        59
727: new           #259
730: dup
731: invokespecial #260
734: astore        60
736: new           #259
739: dup
740: invokespecial #260
743: astore        61
745: iconst_3
746: anewarray     #259
749: dup
750: iconst_0
751: aload         59
753: aastore
754: dup
755: iconst_1
756: aload         60
758: aastore
759: dup
760: iconst_2
761: aload         61
763: aastore
764: astore        62
766: new           #259
769: dup
770: invokespecial #260
773: astore        63
775: aload         62
777: iconst_0
778: aload         63
780: invokestatic  #261
783: checkcast     #262
786: astore        64
788: bipush        6
790: anewarray     #259
793: dup
794: iconst_0
795: aload         49
797: aastore
798: dup
799: iconst_1
800: aload         50
802: aastore
803: dup
804: iconst_2
805: aload         55
807: aastore
808: dup
809: iconst_3
810: aload         57
812: aastore
813: dup
814: iconst_4
815: aload         58
817: aastore
818: dup
819: iconst_5
820: aload         63
822: aastore
823: astore        65
825: new           #259
828: dup
829: invokespecial #260
832: astore        66
834: new           #259
837: dup
838: invokespecial #260
841: astore        67
843: new           #259
846: dup
847: invokespecial #260
850: astore        68
852: new           #259
855: dup
856: invokespecial #260
859: astore        69
861: new           #259
864: dup
865: invokespecial #260
868: astore        70
870: iconst_3
871: anewarray     #259
874: dup
875: iconst_0
876: aload         68
878: aastore
879: dup
880: iconst_1
881: aload         69
883: aastore
884: dup
885: iconst_2
886: aload         70
888: aastore
889: astore        71
891: new           #259
894: dup
895: invokespecial #260
898: astore        72
900: aload         71
902: iconst_0
903: aload         72
905: invokestatic  #261
908: checkcast     #262
911: astore        73
913: new           #259
916: dup
917: invokespecial #260
920: astore        74
922: new           #259
925: dup
926: invokespecial #260
929: astore        75
931: new           #259
934: dup
935: invokespecial #260
938: astore        76
940: new           #259
943: dup
944: invokespecial #260
947: astore        77
949: new           #259
952: dup
953: invokespecial #260
956: astore        78
958: iconst_3
959: anewarray     #259
962: dup
963: iconst_0
964: aload         76
966: aastore
967: dup
968: iconst_1
969: aload         77
971: aastore
972: dup
973: iconst_2
974: aload         78
976: aastore
977: astore        79
979: new           #259
982: dup
983: invokespecial #260
986: astore        80
988: aload         79
990: iconst_0
991: aload         80
993: invokestatic  #261
996: checkcast     #262
999: astore        81
1001: bipush        6
1003: anewarray     #259
1006: dup
1007: iconst_0
1008: aload         66
1010: aastore
1011: dup
1012: iconst_1
1013: aload         67
1015: aastore
1016: dup
1017: iconst_2
1018: aload         72
1020: aastore
1021: dup
1022: iconst_3
1023: aload         74
1025: aastore
1026: dup
1027: iconst_4
1028: aload         75
1030: aastore
1031: dup
1032: iconst_5
1033: aload         80
1035: aastore
1036: astore        82
1038: iconst_4
1039: anewarray     #262
1042: dup
1043: iconst_0
1044: aload         31
1046: aastore
1047: dup
1048: iconst_1
1049: aload         48
1051: aastore
1052: dup
1053: iconst_2
1054: aload         65
1056: aastore
1057: dup
1058: iconst_3
1059: aload         82
1061: aastore
1062: astore        83
1064: aload         14
1066: aload         83
1068: invokestatic  #122
1071: checkcast     #263
1074: astore        84
1076: aload         14
1078: checkcast     #45
1081: invokestatic  #59
1084: astore        85
1086: getstatic     #52
1089: astore        86
1091: aload         86
1093: checkcast     #44
1096: invokestatic  #32
1099: astore        87
1101: aload         85
1103: checkcast     #44
1106: aload         87
1108: invokestatic  #122
1111: checkcast     #44
1114: astore        88
1116: aload         4
1118: invokestatic  #47
1121: aload         6
1123: invokestatic  #47
1126: aload         10
1128: invokestatic  #47
1131: aload         12
1133: invokestatic  #47
1136: aload         13
1138: invokestatic  #47
1141: aload         14
1143: invokestatic  #47
1146: aload         20
1148: invokestatic  #47
1151: aload         22
1153: invokestatic  #47
1156: aload         28
1158: invokestatic  #47
1161: aload         30
1163: invokestatic  #47
1166: aload         31
1168: invokestatic  #47
1171: aload         37
1173: invokestatic  #47
1176: aload         39
1178: invokestatic  #47
1181: aload         45
1183: invokestatic  #47
1186: aload         47
1188: invokestatic  #47
1191: aload         48
1193: invokestatic  #47
1196: aload         54
1198: invokestatic  #47
1201: aload         56
1203: invokestatic  #47
1206: aload         62
1208: invokestatic  #47
1211: aload         64
1213: invokestatic  #47
1216: aload         65
1218: invokestatic  #47
1221: aload         71
1223: invokestatic  #47
1226: aload         73
1228: invokestatic  #47
1231: aload         79
1233: invokestatic  #47
1236: aload         81
1238: invokestatic  #47
1241: aload         82
1243: invokestatic  #47
1246: aload         83
1248: invokestatic  #47
1251: aload         84
1253: invokestatic  #47
1256: aload         85
1258: invokestatic  #47
1261: aload         86
1263: invokestatic  #47
1266: aload         87
1268: invokestatic  #47
1271: aload         88
1273: invokestatic  #47
1276: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 3611
End line: 3636
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.lang3.text.translate.OctalUnescaper octalUnescaper0 = new org.apache.commons.lang3.text.translate.OctalUnescaper();
        java.io.Writer writer3 = null;
        int int4 = octalUnescaper0.translate((java.lang.CharSequence) "boolean[]", 3, writer3);
        org.apache.commons.lang3.text.translate.OctalUnescaper octalUnescaper5 = new org.apache.commons.lang3.text.translate.OctalUnescaper();
        org.apache.commons.lang3.text.translate.OctalUnescaper[] octalUnescaperArray6 = new org.apache.commons.lang3.text.translate.OctalUnescaper[] { octalUnescaper0, octalUnescaper5 };
        org.apache.commons.lang3.text.translate.OctalUnescaper octalUnescaper7 = new org.apache.commons.lang3.text.translate.OctalUnescaper();
        java.io.Writer writer10 = null;
        int int11 = octalUnescaper7.translate((java.lang.CharSequence) "boolean[]", 3, writer10);
        org.apache.commons.lang3.text.translate.OctalUnescaper[] octalUnescaperArray12 = org.apache.commons.lang3.ArrayUtils.add(octalUnescaperArray6, octalUnescaper7);
        org.apache.commons.lang3.text.translate.AggregateTranslator aggregateTranslator13 = new org.apache.commons.lang3.text.translate.AggregateTranslator((org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) octalUnescaperArray12);
        java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) octalUnescaperArray12);
        java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14);
        java.lang.reflect.Type[] typeArray16 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray15);
        java.lang.reflect.Type[] typeArray17 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray15);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(octalUnescaperArray6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(octalUnescaperArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertNotNull(typeArray17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #264
20: aastore
21: invokevirtual #7
24: pop
25: new           #265
28: dup
29: invokespecial #266
32: astore_1
33: aconst_null
34: astore_2
35: aload_1
36: ldc           #245
38: iconst_3
39: aload_2
40: invokevirtual #267
43: istore_3
44: new           #265
47: dup
48: invokespecial #266
51: astore        4
53: iconst_2
54: anewarray     #265
57: dup
58: iconst_0
59: aload_1
60: aastore
61: dup
62: iconst_1
63: aload         4
65: aastore
66: astore        5
68: new           #265
71: dup
72: invokespecial #266
75: astore        6
77: aconst_null
78: astore        7
80: aload         6
82: ldc           #245
84: iconst_3
85: aload         7
87: invokevirtual #267
90: istore        8
92: aload         5
94: aload         6
96: invokestatic  #155
99: checkcast     #268
102: astore        9
104: new           #269
107: dup
108: aload         9
110: checkcast     #270
113: invokespecial #271
116: astore        10
118: aload         9
120: checkcast     #45
123: invokestatic  #59
126: astore        11
128: aload         11
130: invokestatic  #53
133: astore        12
135: aload         12
137: checkcast     #44
140: invokestatic  #32
143: astore        13
145: aload         12
147: checkcast     #44
150: invokestatic  #32
153: astore        14
155: new           #14
158: dup
159: invokespecial #15
162: ldc           #16
164: invokevirtual #17
167: iload_3
168: invokevirtual #48
171: ldc           #19
173: invokevirtual #17
176: iconst_0
177: invokevirtual #48
180: ldc           #16
182: invokevirtual #17
185: invokevirtual #20
188: iload_3
189: ifne          196
192: iconst_1
193: goto          197
196: iconst_0
197: invokestatic  #21
200: aload         5
202: invokestatic  #47
205: new           #14
208: dup
209: invokespecial #15
212: ldc           #16
214: invokevirtual #17
217: iload         8
219: invokevirtual #48
222: ldc           #19
224: invokevirtual #17
227: iconst_0
228: invokevirtual #48
231: ldc           #16
233: invokevirtual #17
236: invokevirtual #20
239: iload         8
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #21
252: aload         9
254: invokestatic  #47
257: aload         11
259: invokestatic  #47
262: aload         12
264: invokestatic  #47
267: aload         13
269: invokestatic  #47
272: aload         14
274: invokestatic  #47
277: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 3639
End line: 3741
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray31, (int) (short) 0, (int) (byte) 1);
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class<?> wildcardClass43 = null;
        java.lang.Class[] classArray45 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45;
        wildcardClassArray46[0] = wildcardClass43;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray46, true);
        java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46);
        java.lang.Class[] classArray53 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        java.lang.Class<?> wildcardClass55 = null;
        java.lang.Class[] classArray57 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass55;
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray53, wildcardClassArray58, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray58);
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray63, true);
        java.lang.Class<?>[] wildcardClassArray66 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray66, false);
        boolean boolean70 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray39, wildcardClassArray66, false);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray73 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.reflect.GenericDeclaration[]) wildcardClassArray66, (int) (byte) 1, (int) (short) -1);
        java.lang.Class<?>[] wildcardClassArray74 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray66);
        java.lang.Class<?>[] wildcardClassArray75 = null;
        boolean boolean76 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray66, wildcardClassArray75);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClassArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(genericDeclarationArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #272
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: iconst_0
68: anewarray     #39
71: astore        7
73: aload         7
75: checkcast     #40
78: astore        8
80: aconst_null
81: astore        9
83: iconst_1
84: anewarray     #39
87: astore        10
89: aload         10
91: checkcast     #40
94: astore        11
96: aload         11
98: iconst_0
99: aload         9
101: aastore
102: aload         7
104: checkcast     #40
107: aload         11
109: iconst_1
110: invokestatic  #41
113: istore        12
115: aload         11
117: invokestatic  #42
120: astore        13
122: aload         5
124: aload         11
126: invokestatic  #43
129: istore        14
131: aload         11
133: checkcast     #44
136: invokestatic  #32
139: astore        15
141: iconst_0
142: anewarray     #39
145: astore        16
147: aload         16
149: checkcast     #40
152: astore        17
154: aconst_null
155: astore        18
157: iconst_1
158: anewarray     #39
161: astore        19
163: aload         19
165: checkcast     #40
168: astore        20
170: aload         20
172: iconst_0
173: aload         18
175: aastore
176: aload         16
178: checkcast     #40
181: aload         20
183: iconst_1
184: invokestatic  #41
187: istore        21
189: aload         11
191: aload         20
193: invokestatic  #43
196: istore        22
198: aload         20
200: iconst_0
201: iconst_1
202: invokestatic  #69
205: checkcast     #40
208: astore        23
210: iconst_0
211: anewarray     #39
214: astore        24
216: aload         24
218: checkcast     #40
221: astore        25
223: aconst_null
224: astore        26
226: iconst_1
227: anewarray     #39
230: astore        27
232: aload         27
234: checkcast     #40
237: astore        28
239: aload         28
241: iconst_0
242: aload         26
244: aastore
245: aload         24
247: checkcast     #40
250: aload         28
252: iconst_1
253: invokestatic  #41
256: istore        29
258: aload         28
260: invokestatic  #42
263: astore        30
265: iconst_0
266: anewarray     #39
269: astore        31
271: aload         31
273: checkcast     #40
276: astore        32
278: aconst_null
279: astore        33
281: iconst_1
282: anewarray     #39
285: astore        34
287: aload         34
289: checkcast     #40
292: astore        35
294: aload         35
296: iconst_0
297: aload         33
299: aastore
300: aload         31
302: checkcast     #40
305: aload         35
307: iconst_1
308: invokestatic  #41
311: istore        36
313: aload         35
315: invokestatic  #42
318: astore        37
320: aload         28
322: aload         37
324: iconst_1
325: invokestatic  #41
328: istore        38
330: getstatic     #52
333: astore        39
335: aload         28
337: aload         39
339: iconst_0
340: invokestatic  #41
343: istore        40
345: aload         23
347: aload         39
349: iconst_0
350: invokestatic  #41
353: istore        41
355: aload         39
357: checkcast     #187
360: iconst_1
361: iconst_m1
362: invokestatic  #69
365: checkcast     #187
368: astore        42
370: aload         39
372: invokestatic  #53
375: astore        43
377: aconst_null
378: astore        44
380: aload         39
382: aload         44
384: invokestatic  #43
387: istore        45
389: aload_1
390: invokestatic  #47
393: aload_2
394: invokestatic  #47
397: aload         4
399: invokestatic  #47
402: aload         5
404: invokestatic  #47
407: new           #14
410: dup
411: invokespecial #15
414: ldc           #16
416: invokevirtual #17
419: iload         6
421: invokevirtual #18
424: ldc           #19
426: invokevirtual #17
429: iconst_0
430: invokevirtual #18
433: ldc           #16
435: invokevirtual #17
438: invokevirtual #20
441: iload         6
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #21
454: aload         7
456: invokestatic  #47
459: aload         8
461: invokestatic  #47
464: aload         10
466: invokestatic  #47
469: aload         11
471: invokestatic  #47
474: new           #14
477: dup
478: invokespecial #15
481: ldc           #16
483: invokevirtual #17
486: iload         12
488: invokevirtual #18
491: ldc           #19
493: invokevirtual #17
496: iconst_0
497: invokevirtual #18
500: ldc           #16
502: invokevirtual #17
505: invokevirtual #20
508: iload         12
510: ifne          517
513: iconst_1
514: goto          518
517: iconst_0
518: invokestatic  #21
521: aload         13
523: invokestatic  #47
526: new           #14
529: dup
530: invokespecial #15
533: ldc           #16
535: invokevirtual #17
538: iload         14
540: invokevirtual #18
543: ldc           #19
545: invokevirtual #17
548: iconst_0
549: invokevirtual #18
552: ldc           #16
554: invokevirtual #17
557: invokevirtual #20
560: iload         14
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #21
573: aload         15
575: invokestatic  #47
578: aload         16
580: invokestatic  #47
583: aload         17
585: invokestatic  #47
588: aload         19
590: invokestatic  #47
593: aload         20
595: invokestatic  #47
598: new           #14
601: dup
602: invokespecial #15
605: ldc           #16
607: invokevirtual #17
610: iload         21
612: invokevirtual #18
615: ldc           #19
617: invokevirtual #17
620: iconst_0
621: invokevirtual #18
624: ldc           #16
626: invokevirtual #17
629: invokevirtual #20
632: iload         21
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #21
645: new           #14
648: dup
649: invokespecial #15
652: ldc           #16
654: invokevirtual #17
657: iload         22
659: invokevirtual #18
662: ldc           #19
664: invokevirtual #17
667: iconst_0
668: invokevirtual #18
671: ldc           #16
673: invokevirtual #17
676: invokevirtual #20
679: iload         22
681: ifne          688
684: iconst_1
685: goto          689
688: iconst_0
689: invokestatic  #21
692: aload         23
694: invokestatic  #47
697: aload         24
699: invokestatic  #47
702: aload         25
704: invokestatic  #47
707: aload         27
709: invokestatic  #47
712: aload         28
714: invokestatic  #47
717: new           #14
720: dup
721: invokespecial #15
724: ldc           #16
726: invokevirtual #17
729: iload         29
731: invokevirtual #18
734: ldc           #19
736: invokevirtual #17
739: iconst_0
740: invokevirtual #18
743: ldc           #16
745: invokevirtual #17
748: invokevirtual #20
751: iload         29
753: ifne          760
756: iconst_1
757: goto          761
760: iconst_0
761: invokestatic  #21
764: aload         30
766: invokestatic  #47
769: aload         31
771: invokestatic  #47
774: aload         32
776: invokestatic  #47
779: aload         34
781: invokestatic  #47
784: aload         35
786: invokestatic  #47
789: new           #14
792: dup
793: invokespecial #15
796: ldc           #16
798: invokevirtual #17
801: iload         36
803: invokevirtual #18
806: ldc           #19
808: invokevirtual #17
811: iconst_0
812: invokevirtual #18
815: ldc           #16
817: invokevirtual #17
820: invokevirtual #20
823: iload         36
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #21
836: aload         37
838: invokestatic  #47
841: new           #14
844: dup
845: invokespecial #15
848: ldc           #16
850: invokevirtual #17
853: iload         38
855: invokevirtual #18
858: ldc           #19
860: invokevirtual #17
863: iconst_0
864: invokevirtual #18
867: ldc           #16
869: invokevirtual #17
872: invokevirtual #20
875: iload         38
877: ifne          884
880: iconst_1
881: goto          885
884: iconst_0
885: invokestatic  #21
888: aload         39
890: invokestatic  #47
893: new           #14
896: dup
897: invokespecial #15
900: ldc           #16
902: invokevirtual #17
905: iload         40
907: invokevirtual #18
910: ldc           #19
912: invokevirtual #17
915: iconst_0
916: invokevirtual #18
919: ldc           #16
921: invokevirtual #17
924: invokevirtual #20
927: iload         40
929: ifne          936
932: iconst_1
933: goto          937
936: iconst_0
937: invokestatic  #21
940: new           #14
943: dup
944: invokespecial #15
947: ldc           #16
949: invokevirtual #17
952: iload         41
954: invokevirtual #18
957: ldc           #19
959: invokevirtual #17
962: iconst_0
963: invokevirtual #18
966: ldc           #16
968: invokevirtual #17
971: invokevirtual #20
974: iload         41
976: ifne          983
979: iconst_1
980: goto          984
983: iconst_0
984: invokestatic  #21
987: aload         42
989: invokestatic  #47
992: aload         43
994: invokestatic  #47
997: new           #14
1000: dup
1001: invokespecial #15
1004: ldc           #16
1006: invokevirtual #17
1009: iload         45
1011: invokevirtual #18
1014: ldc           #19
1016: invokevirtual #17
1019: iconst_1
1020: invokevirtual #18
1023: ldc           #16
1025: invokevirtual #17
1028: invokevirtual #20
1031: iload         45
1033: iconst_1
1034: if_icmpne     1041
1037: iconst_1
1038: goto          1042
1041: iconst_0
1042: invokestatic  #21
1045: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 3744
End line: 3800
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        java.lang.Character[] charArray0 = new java.lang.Character[] {};
        java.lang.Character[] charArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0);
        char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1);
        java.lang.Class<?>[] wildcardClassArray3 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray1);
        java.lang.Class[] classArray5 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        java.lang.Class<?> wildcardClass7 = null;
        java.lang.Class[] classArray9 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9;
        wildcardClassArray10[0] = wildcardClass7;
        boolean boolean14 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray5, wildcardClassArray10, true);
        java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray10);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class<?> wildcardClass19 = null;
        java.lang.Class[] classArray21 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21;
        wildcardClassArray22[0] = wildcardClass19;
        boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray22, true);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray17);
        boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray10, wildcardClassArray27);
        java.lang.reflect.Type[] typeArray29 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray10);
        java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray10);
        boolean boolean31 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, wildcardClassArray10);
        java.lang.Class<?>[] wildcardClassArray32 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3);
        org.junit.Assert.assertNotNull(charArray0);
        org.junit.Assert.assertNotNull(charArray1);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(wildcardClassArray10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertNotNull(wildcardClassArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #273
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #56
29: astore_1
30: aload_1
31: invokestatic  #57
34: astore_2
35: aload_2
36: invokestatic  #58
39: astore_3
40: aload_2
41: checkcast     #45
44: invokestatic  #59
47: astore        4
49: iconst_0
50: anewarray     #39
53: astore        5
55: aload         5
57: checkcast     #40
60: astore        6
62: aconst_null
63: astore        7
65: iconst_1
66: anewarray     #39
69: astore        8
71: aload         8
73: checkcast     #40
76: astore        9
78: aload         9
80: iconst_0
81: aload         7
83: aastore
84: aload         5
86: checkcast     #40
89: aload         9
91: iconst_1
92: invokestatic  #41
95: istore        10
97: aload         9
99: invokestatic  #42
102: astore        11
104: iconst_0
105: anewarray     #39
108: astore        12
110: aload         12
112: checkcast     #40
115: astore        13
117: aconst_null
118: astore        14
120: iconst_1
121: anewarray     #39
124: astore        15
126: aload         15
128: checkcast     #40
131: astore        16
133: aload         16
135: iconst_0
136: aload         14
138: aastore
139: aload         12
141: checkcast     #40
144: aload         16
146: iconst_1
147: invokestatic  #41
150: istore        17
152: aload         12
154: checkcast     #40
157: invokestatic  #42
160: astore        18
162: aload         9
164: aload         18
166: invokestatic  #43
169: istore        19
171: aload         9
173: checkcast     #44
176: invokestatic  #32
179: astore        20
181: aload         9
183: invokestatic  #53
186: astore        21
188: aload         4
190: aload         9
192: invokestatic  #43
195: istore        22
197: aload         4
199: invokestatic  #53
202: astore        23
204: aload_1
205: invokestatic  #47
208: aload_2
209: invokestatic  #47
212: aload_3
213: invokestatic  #47
216: aload_3
217: invokestatic  #60
220: ldc           #61
222: invokestatic  #62
225: aload_3
226: invokestatic  #63
229: ldc           #61
231: invokestatic  #62
234: aload_3
235: invokestatic  #64
238: ldc           #65
240: invokestatic  #62
243: aload         4
245: invokestatic  #47
248: aload         5
250: invokestatic  #47
253: aload         6
255: invokestatic  #47
258: aload         8
260: invokestatic  #47
263: aload         9
265: invokestatic  #47
268: new           #14
271: dup
272: invokespecial #15
275: ldc           #16
277: invokevirtual #17
280: iload         10
282: invokevirtual #18
285: ldc           #19
287: invokevirtual #17
290: iconst_0
291: invokevirtual #18
294: ldc           #16
296: invokevirtual #17
299: invokevirtual #20
302: iload         10
304: ifne          311
307: iconst_1
308: goto          312
311: iconst_0
312: invokestatic  #21
315: aload         11
317: invokestatic  #47
320: aload         12
322: invokestatic  #47
325: aload         13
327: invokestatic  #47
330: aload         15
332: invokestatic  #47
335: aload         16
337: invokestatic  #47
340: new           #14
343: dup
344: invokespecial #15
347: ldc           #16
349: invokevirtual #17
352: iload         17
354: invokevirtual #18
357: ldc           #19
359: invokevirtual #17
362: iconst_0
363: invokevirtual #18
366: ldc           #16
368: invokevirtual #17
371: invokevirtual #20
374: iload         17
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #21
387: aload         18
389: invokestatic  #47
392: new           #14
395: dup
396: invokespecial #15
399: ldc           #16
401: invokevirtual #17
404: iload         19
406: invokevirtual #18
409: ldc           #19
411: invokevirtual #17
414: iconst_0
415: invokevirtual #18
418: ldc           #16
420: invokevirtual #17
423: invokevirtual #20
426: iload         19
428: ifne          435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #21
439: aload         20
441: invokestatic  #47
444: aload         21
446: invokestatic  #47
449: new           #14
452: dup
453: invokespecial #15
456: ldc           #16
458: invokevirtual #17
461: iload         22
463: invokevirtual #18
466: ldc           #19
468: invokevirtual #17
471: iconst_0
472: invokevirtual #18
475: ldc           #16
477: invokevirtual #17
480: invokevirtual #20
483: iload         22
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #21
496: aload         23
498: invokestatic  #47
501: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 3803
End line: 3834
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        java.lang.Class<?>[] wildcardClassArray0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        java.lang.Class[] classArray5 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        java.lang.Class<?> wildcardClass7 = null;
        java.lang.Class[] classArray9 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9;
        wildcardClassArray10[0] = wildcardClass7;
        boolean boolean14 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray5, wildcardClassArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray2, (java.lang.Class<?>[]) classArray5);
        java.lang.reflect.Type[] typeArray16 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray2);
        boolean boolean18 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, (java.lang.Class<?>[]) classArray2, false);
        java.util.Map<java.lang.Object, java.lang.Object> objMap19 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) classArray2);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(wildcardClassArray10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objMap19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #274
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_0
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: iconst_0
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aconst_null
51: astore        6
53: iconst_1
54: anewarray     #39
57: astore        7
59: aload         7
61: checkcast     #40
64: astore        8
66: aload         8
68: iconst_0
69: aload         6
71: aastore
72: aload         4
74: checkcast     #40
77: aload         8
79: iconst_1
80: invokestatic  #41
83: istore        9
85: aload_2
86: checkcast     #40
89: aload         4
91: checkcast     #40
94: invokestatic  #43
97: istore        10
99: aload_2
100: checkcast     #44
103: invokestatic  #32
106: astore        11
108: aload_1
109: aload_2
110: checkcast     #40
113: iconst_0
114: invokestatic  #41
117: istore        12
119: aload_2
120: checkcast     #45
123: invokestatic  #275
126: astore        13
128: aload_2
129: invokestatic  #47
132: aload_3
133: invokestatic  #47
136: aload         4
138: invokestatic  #47
141: aload         5
143: invokestatic  #47
146: aload         7
148: invokestatic  #47
151: aload         8
153: invokestatic  #47
156: new           #14
159: dup
160: invokespecial #15
163: ldc           #16
165: invokevirtual #17
168: iload         9
170: invokevirtual #18
173: ldc           #19
175: invokevirtual #17
178: iconst_0
179: invokevirtual #18
182: ldc           #16
184: invokevirtual #17
187: invokevirtual #20
190: iload         9
192: ifne          199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #21
203: new           #14
206: dup
207: invokespecial #15
210: ldc           #16
212: invokevirtual #17
215: iload         10
217: invokevirtual #18
220: ldc           #19
222: invokevirtual #17
225: iconst_1
226: invokevirtual #18
229: ldc           #16
231: invokevirtual #17
234: invokevirtual #20
237: iload         10
239: iconst_1
240: if_icmpne     247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #21
251: aload         11
253: invokestatic  #47
256: new           #14
259: dup
260: invokespecial #15
263: ldc           #16
265: invokevirtual #17
268: iload         12
270: invokevirtual #18
273: ldc           #19
275: invokevirtual #17
278: iconst_1
279: invokevirtual #18
282: ldc           #16
284: invokevirtual #17
287: invokevirtual #20
290: iload         12
292: iconst_1
293: if_icmpne     300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #21
304: aload         13
306: invokestatic  #47
309: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 3837
End line: 3873
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.lang3.reflect.TypeUtils[][][] typeUtilsArray0 = new org.apache.commons.lang3.reflect.TypeUtils[][][] {};
        org.apache.commons.lang3.reflect.TypeUtils[][][] typeUtilsArray1 = org.apache.commons.lang3.ArrayUtils.clone(typeUtilsArray0);
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils5 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils6 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils7 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray8 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils3, typeUtils4, typeUtils5, typeUtils6, typeUtils7 };
        org.apache.commons.lang3.reflect.TypeUtils typeUtils9 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils10 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils11 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils12 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils13 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray14 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils9, typeUtils10, typeUtils11, typeUtils12, typeUtils13 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray15 = new org.apache.commons.lang3.reflect.TypeUtils[][] { typeUtilsArray8, typeUtilsArray14 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray16 = new org.apache.commons.lang3.reflect.TypeUtils[][] {};
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray17 = org.apache.commons.lang3.ArrayUtils.removeElements(typeUtilsArray15, typeUtilsArray16);
        java.util.Map<java.lang.Object, java.lang.Object> objMap18 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) typeUtilsArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.reflect.TypeUtils[][][] typeUtilsArray19 = org.apache.commons.lang3.ArrayUtils.add(typeUtilsArray0, (int) (short) 1, typeUtilsArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeUtilsArray0);
        org.junit.Assert.assertNotNull(typeUtilsArray1);
        org.junit.Assert.assertNotNull(typeUtilsArray8);
        org.junit.Assert.assertNotNull(typeUtilsArray14);
        org.junit.Assert.assertNotNull(typeUtilsArray15);
        org.junit.Assert.assertNotNull(typeUtilsArray16);
        org.junit.Assert.assertNotNull(typeUtilsArray17);
        org.junit.Assert.assertNotNull(objMap18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #276
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #154
29: astore_1
30: aload_1
31: invokestatic  #67
34: checkcast     #277
37: astore_2
38: new           #27
41: dup
42: invokespecial #28
45: astore_3
46: new           #27
49: dup
50: invokespecial #28
53: astore        4
55: new           #27
58: dup
59: invokespecial #28
62: astore        5
64: new           #27
67: dup
68: invokespecial #28
71: astore        6
73: new           #27
76: dup
77: invokespecial #28
80: astore        7
82: iconst_5
83: anewarray     #27
86: dup
87: iconst_0
88: aload_3
89: aastore
90: dup
91: iconst_1
92: aload         4
94: aastore
95: dup
96: iconst_2
97: aload         5
99: aastore
100: dup
101: iconst_3
102: aload         6
104: aastore
105: dup
106: iconst_4
107: aload         7
109: aastore
110: astore        8
112: new           #27
115: dup
116: invokespecial #28
119: astore        9
121: new           #27
124: dup
125: invokespecial #28
128: astore        10
130: new           #27
133: dup
134: invokespecial #28
137: astore        11
139: new           #27
142: dup
143: invokespecial #28
146: astore        12
148: new           #27
151: dup
152: invokespecial #28
155: astore        13
157: iconst_5
158: anewarray     #27
161: dup
162: iconst_0
163: aload         9
165: aastore
166: dup
167: iconst_1
168: aload         10
170: aastore
171: dup
172: iconst_2
173: aload         11
175: aastore
176: dup
177: iconst_3
178: aload         12
180: aastore
181: dup
182: iconst_4
183: aload         13
185: aastore
186: astore        14
188: iconst_2
189: anewarray     #68
192: dup
193: iconst_0
194: aload         8
196: aastore
197: dup
198: iconst_1
199: aload         14
201: aastore
202: astore        15
204: iconst_0
205: anewarray     #68
208: astore        16
210: aload         15
212: aload         16
214: invokestatic  #122
217: checkcast     #154
220: astore        17
222: aload         16
224: checkcast     #45
227: invokestatic  #275
230: astore        18
232: aload_1
233: iconst_1
234: aload         16
236: invokestatic  #261
239: checkcast     #277
242: astore        19
244: ldc_w         #278
247: invokestatic  #10
250: goto          255
253: astore        19
255: aload_1
256: invokestatic  #47
259: aload_2
260: invokestatic  #47
263: aload         8
265: invokestatic  #47
268: aload         14
270: invokestatic  #47
273: aload         15
275: invokestatic  #47
278: aload         16
280: invokestatic  #47
283: aload         17
285: invokestatic  #47
288: aload         18
290: invokestatic  #47
293: return
Exception table:
from    to  target type
232   250   253   Class java/lang/IndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 3876
End line: 4014
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43);
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        java.lang.Class<?> wildcardClass52 = null;
        java.lang.Class[] classArray54 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass52;
        boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray55, true);
        java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray55);
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray60, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63, false);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray63, true);
        java.lang.Class[] classArray69 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69;
        java.lang.Class<?> wildcardClass71 = null;
        java.lang.Class[] classArray73 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray74 = (java.lang.Class<?>[]) classArray73;
        wildcardClassArray74[0] = wildcardClass71;
        boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray69, wildcardClassArray74, true);
        java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        java.lang.Class<?> wildcardClass83 = null;
        java.lang.Class[] classArray85 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray86 = (java.lang.Class<?>[]) classArray85;
        wildcardClassArray86[0] = wildcardClass83;
        boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray81, wildcardClassArray86, true);
        java.lang.Class<?>[] wildcardClassArray91 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray81);
        boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray74, wildcardClassArray91);
        java.lang.reflect.Type[] typeArray93 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray94 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray74);
        java.lang.Class<?>[] wildcardClassArray95 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray94);
        java.lang.reflect.Type[] typeArray96 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.reflect.Type[]) wildcardClassArray31, (java.lang.reflect.Type[]) wildcardClassArray94);
        java.lang.Class<?>[] wildcardClassArray97 = null;
        boolean boolean98 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray94, wildcardClassArray97);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray69);
        org.junit.Assert.assertNotNull(wildcardClassArray70);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(typeArray96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #280
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: iconst_0
68: anewarray     #39
71: astore        7
73: aload         7
75: checkcast     #40
78: astore        8
80: aconst_null
81: astore        9
83: iconst_1
84: anewarray     #39
87: astore        10
89: aload         10
91: checkcast     #40
94: astore        11
96: aload         11
98: iconst_0
99: aload         9
101: aastore
102: aload         7
104: checkcast     #40
107: aload         11
109: iconst_1
110: invokestatic  #41
113: istore        12
115: aload         11
117: invokestatic  #42
120: astore        13
122: aload         5
124: aload         11
126: invokestatic  #43
129: istore        14
131: aload         11
133: checkcast     #44
136: invokestatic  #32
139: astore        15
141: iconst_0
142: anewarray     #39
145: astore        16
147: aload         16
149: checkcast     #40
152: astore        17
154: aconst_null
155: astore        18
157: iconst_1
158: anewarray     #39
161: astore        19
163: aload         19
165: checkcast     #40
168: astore        20
170: aload         20
172: iconst_0
173: aload         18
175: aastore
176: aload         16
178: checkcast     #40
181: aload         20
183: iconst_1
184: invokestatic  #41
187: istore        21
189: aload         11
191: aload         20
193: invokestatic  #43
196: istore        22
198: iconst_0
199: anewarray     #39
202: astore        23
204: aload         23
206: checkcast     #40
209: astore        24
211: aconst_null
212: astore        25
214: iconst_1
215: anewarray     #39
218: astore        26
220: aload         26
222: checkcast     #40
225: astore        27
227: aload         27
229: iconst_0
230: aload         25
232: aastore
233: aload         23
235: checkcast     #40
238: aload         27
240: iconst_1
241: invokestatic  #41
244: istore        28
246: aload         27
248: invokestatic  #42
251: astore        29
253: iconst_0
254: anewarray     #39
257: astore        30
259: aload         30
261: checkcast     #40
264: astore        31
266: aconst_null
267: astore        32
269: iconst_1
270: anewarray     #39
273: astore        33
275: aload         33
277: checkcast     #40
280: astore        34
282: aload         34
284: iconst_0
285: aload         32
287: aastore
288: aload         30
290: checkcast     #40
293: aload         34
295: iconst_1
296: invokestatic  #41
299: istore        35
301: aload         34
303: invokestatic  #42
306: astore        36
308: aload         27
310: aload         36
312: iconst_1
313: invokestatic  #41
316: istore        37
318: getstatic     #52
321: astore        38
323: aload         27
325: aload         38
327: iconst_0
328: invokestatic  #41
331: istore        39
333: aload         20
335: aload         38
337: iconst_1
338: invokestatic  #41
341: istore        40
343: iconst_0
344: anewarray     #39
347: astore        41
349: aload         41
351: checkcast     #40
354: astore        42
356: aconst_null
357: astore        43
359: iconst_1
360: anewarray     #39
363: astore        44
365: aload         44
367: checkcast     #40
370: astore        45
372: aload         45
374: iconst_0
375: aload         43
377: aastore
378: aload         41
380: checkcast     #40
383: aload         45
385: iconst_1
386: invokestatic  #41
389: istore        46
391: aload         45
393: invokestatic  #42
396: astore        47
398: iconst_0
399: anewarray     #39
402: astore        48
404: aload         48
406: checkcast     #40
409: astore        49
411: aconst_null
412: astore        50
414: iconst_1
415: anewarray     #39
418: astore        51
420: aload         51
422: checkcast     #40
425: astore        52
427: aload         52
429: iconst_0
430: aload         50
432: aastore
433: aload         48
435: checkcast     #40
438: aload         52
440: iconst_1
441: invokestatic  #41
444: istore        53
446: aload         48
448: checkcast     #40
451: invokestatic  #42
454: astore        54
456: aload         45
458: aload         54
460: invokestatic  #43
463: istore        55
465: aload         45
467: checkcast     #44
470: invokestatic  #32
473: astore        56
475: aload         45
477: invokestatic  #53
480: astore        57
482: aload         57
484: invokestatic  #53
487: astore        58
489: aload         20
491: checkcast     #44
494: aload         57
496: checkcast     #44
499: invokestatic  #54
502: checkcast     #44
505: astore        59
507: aconst_null
508: astore        60
510: aload         57
512: aload         60
514: invokestatic  #43
517: istore        61
519: aload_1
520: invokestatic  #47
523: aload_2
524: invokestatic  #47
527: aload         4
529: invokestatic  #47
532: aload         5
534: invokestatic  #47
537: new           #14
540: dup
541: invokespecial #15
544: ldc           #16
546: invokevirtual #17
549: iload         6
551: invokevirtual #18
554: ldc           #19
556: invokevirtual #17
559: iconst_0
560: invokevirtual #18
563: ldc           #16
565: invokevirtual #17
568: invokevirtual #20
571: iload         6
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #21
584: aload         7
586: invokestatic  #47
589: aload         8
591: invokestatic  #47
594: aload         10
596: invokestatic  #47
599: aload         11
601: invokestatic  #47
604: new           #14
607: dup
608: invokespecial #15
611: ldc           #16
613: invokevirtual #17
616: iload         12
618: invokevirtual #18
621: ldc           #19
623: invokevirtual #17
626: iconst_0
627: invokevirtual #18
630: ldc           #16
632: invokevirtual #17
635: invokevirtual #20
638: iload         12
640: ifne          647
643: iconst_1
644: goto          648
647: iconst_0
648: invokestatic  #21
651: aload         13
653: invokestatic  #47
656: new           #14
659: dup
660: invokespecial #15
663: ldc           #16
665: invokevirtual #17
668: iload         14
670: invokevirtual #18
673: ldc           #19
675: invokevirtual #17
678: iconst_0
679: invokevirtual #18
682: ldc           #16
684: invokevirtual #17
687: invokevirtual #20
690: iload         14
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #21
703: aload         15
705: invokestatic  #47
708: aload         16
710: invokestatic  #47
713: aload         17
715: invokestatic  #47
718: aload         19
720: invokestatic  #47
723: aload         20
725: invokestatic  #47
728: new           #14
731: dup
732: invokespecial #15
735: ldc           #16
737: invokevirtual #17
740: iload         21
742: invokevirtual #18
745: ldc           #19
747: invokevirtual #17
750: iconst_0
751: invokevirtual #18
754: ldc           #16
756: invokevirtual #17
759: invokevirtual #20
762: iload         21
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #21
775: new           #14
778: dup
779: invokespecial #15
782: ldc           #16
784: invokevirtual #17
787: iload         22
789: invokevirtual #18
792: ldc           #19
794: invokevirtual #17
797: iconst_0
798: invokevirtual #18
801: ldc           #16
803: invokevirtual #17
806: invokevirtual #20
809: iload         22
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #21
822: aload         23
824: invokestatic  #47
827: aload         24
829: invokestatic  #47
832: aload         26
834: invokestatic  #47
837: aload         27
839: invokestatic  #47
842: new           #14
845: dup
846: invokespecial #15
849: ldc           #16
851: invokevirtual #17
854: iload         28
856: invokevirtual #18
859: ldc           #19
861: invokevirtual #17
864: iconst_0
865: invokevirtual #18
868: ldc           #16
870: invokevirtual #17
873: invokevirtual #20
876: iload         28
878: ifne          885
881: iconst_1
882: goto          886
885: iconst_0
886: invokestatic  #21
889: aload         29
891: invokestatic  #47
894: aload         30
896: invokestatic  #47
899: aload         31
901: invokestatic  #47
904: aload         33
906: invokestatic  #47
909: aload         34
911: invokestatic  #47
914: new           #14
917: dup
918: invokespecial #15
921: ldc           #16
923: invokevirtual #17
926: iload         35
928: invokevirtual #18
931: ldc           #19
933: invokevirtual #17
936: iconst_0
937: invokevirtual #18
940: ldc           #16
942: invokevirtual #17
945: invokevirtual #20
948: iload         35
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #21
961: aload         36
963: invokestatic  #47
966: new           #14
969: dup
970: invokespecial #15
973: ldc           #16
975: invokevirtual #17
978: iload         37
980: invokevirtual #18
983: ldc           #19
985: invokevirtual #17
988: iconst_0
989: invokevirtual #18
992: ldc           #16
994: invokevirtual #17
997: invokevirtual #20
1000: iload         37
1002: ifne          1009
1005: iconst_1
1006: goto          1010
1009: iconst_0
1010: invokestatic  #21
1013: aload         38
1015: invokestatic  #47
1018: new           #14
1021: dup
1022: invokespecial #15
1025: ldc           #16
1027: invokevirtual #17
1030: iload         39
1032: invokevirtual #18
1035: ldc           #19
1037: invokevirtual #17
1040: iconst_0
1041: invokevirtual #18
1044: ldc           #16
1046: invokevirtual #17
1049: invokevirtual #20
1052: iload         39
1054: ifne          1061
1057: iconst_1
1058: goto          1062
1061: iconst_0
1062: invokestatic  #21
1065: new           #14
1068: dup
1069: invokespecial #15
1072: ldc           #16
1074: invokevirtual #17
1077: iload         40
1079: invokevirtual #18
1082: ldc           #19
1084: invokevirtual #17
1087: iconst_0
1088: invokevirtual #18
1091: ldc           #16
1093: invokevirtual #17
1096: invokevirtual #20
1099: iload         40
1101: ifne          1108
1104: iconst_1
1105: goto          1109
1108: iconst_0
1109: invokestatic  #21
1112: aload         41
1114: invokestatic  #47
1117: aload         42
1119: invokestatic  #47
1122: aload         44
1124: invokestatic  #47
1127: aload         45
1129: invokestatic  #47
1132: new           #14
1135: dup
1136: invokespecial #15
1139: ldc           #16
1141: invokevirtual #17
1144: iload         46
1146: invokevirtual #18
1149: ldc           #19
1151: invokevirtual #17
1154: iconst_0
1155: invokevirtual #18
1158: ldc           #16
1160: invokevirtual #17
1163: invokevirtual #20
1166: iload         46
1168: ifne          1175
1171: iconst_1
1172: goto          1176
1175: iconst_0
1176: invokestatic  #21
1179: aload         47
1181: invokestatic  #47
1184: aload         48
1186: invokestatic  #47
1189: aload         49
1191: invokestatic  #47
1194: aload         51
1196: invokestatic  #47
1199: aload         52
1201: invokestatic  #47
1204: new           #14
1207: dup
1208: invokespecial #15
1211: ldc           #16
1213: invokevirtual #17
1216: iload         53
1218: invokevirtual #18
1221: ldc           #19
1223: invokevirtual #17
1226: iconst_0
1227: invokevirtual #18
1230: ldc           #16
1232: invokevirtual #17
1235: invokevirtual #20
1238: iload         53
1240: ifne          1247
1243: iconst_1
1244: goto          1248
1247: iconst_0
1248: invokestatic  #21
1251: aload         54
1253: invokestatic  #47
1256: new           #14
1259: dup
1260: invokespecial #15
1263: ldc           #16
1265: invokevirtual #17
1268: iload         55
1270: invokevirtual #18
1273: ldc           #19
1275: invokevirtual #17
1278: iconst_0
1279: invokevirtual #18
1282: ldc           #16
1284: invokevirtual #17
1287: invokevirtual #20
1290: iload         55
1292: ifne          1299
1295: iconst_1
1296: goto          1300
1299: iconst_0
1300: invokestatic  #21
1303: aload         56
1305: invokestatic  #47
1308: aload         57
1310: invokestatic  #47
1313: aload         58
1315: invokestatic  #47
1318: aload         59
1320: invokestatic  #47
1323: new           #14
1326: dup
1327: invokespecial #15
1330: ldc           #16
1332: invokevirtual #17
1335: iload         61
1337: invokevirtual #18
1340: ldc           #19
1342: invokevirtual #17
1345: iconst_0
1346: invokevirtual #18
1349: ldc           #16
1351: invokevirtual #17
1354: invokevirtual #20
1357: iload         61
1359: ifne          1366
1362: iconst_1
1363: goto          1367
1366: iconst_0
1367: invokestatic  #21
1370: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 4017
End line: 4057
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.lang3.reflect.TypeUtils typeUtils0 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils1 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils2 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils5 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray6 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils0, typeUtils1, typeUtils2, typeUtils3, typeUtils4, typeUtils5 };
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray7 = org.apache.commons.lang3.ArrayUtils.clone(typeUtilsArray6);
        java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) typeUtilsArray6);
        int[] intArray13 = new int[] { 100, 1, 10, (short) 1 };
        int[] intArray16 = org.apache.commons.lang3.ArrayUtils.add(intArray13, (int) (short) 1, (int) ' ');
        int[] intArray17 = org.apache.commons.lang3.ArrayUtils.clone(intArray13);
        int[] intArray18 = new int[] {};
        int[] intArray19 = org.apache.commons.lang3.ArrayUtils.removeAll(intArray17, intArray18);
        int[] intArray20 = org.apache.commons.lang3.ArrayUtils.clone(intArray19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray21 = org.apache.commons.lang3.ArrayUtils.removeAll(typeUtilsArray6, intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeUtilsArray6);
        org.junit.Assert.assertNotNull(typeUtilsArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 32, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 1, 10, 1]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[100, 1, 10, 1]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: invokespecial #28
32: astore_1
33: new           #27
36: dup
37: invokespecial #28
40: astore_2
41: new           #27
44: dup
45: invokespecial #28
48: astore_3
49: new           #27
52: dup
53: invokespecial #28
56: astore        4
58: new           #27
61: dup
62: invokespecial #28
65: astore        5
67: new           #27
70: dup
71: invokespecial #28
74: astore        6
76: bipush        6
78: anewarray     #27
81: dup
82: iconst_0
83: aload_1
84: aastore
85: dup
86: iconst_1
87: aload_2
88: aastore
89: dup
90: iconst_2
91: aload_3
92: aastore
93: dup
94: iconst_3
95: aload         4
97: aastore
98: dup
99: iconst_4
100: aload         5
102: aastore
103: dup
104: iconst_5
105: aload         6
107: aastore
108: astore        7
110: aload         7
112: invokestatic  #67
115: checkcast     #68
118: astore        8
120: aload         7
122: checkcast     #45
125: invokestatic  #251
128: astore        9
130: iconst_4
131: newarray       int
133: dup
134: iconst_0
135: bipush        100
137: iastore
138: dup
139: iconst_1
140: iconst_1
141: iastore
142: dup
143: iconst_2
144: bipush        10
146: iastore
147: dup
148: iconst_3
149: iconst_1
150: iastore
151: astore        10
153: aload         10
155: iconst_1
156: bipush        32
158: invokestatic  #206
161: astore        11
163: aload         10
165: invokestatic  #208
168: astore        12
170: iconst_0
171: newarray       int
173: astore        13
175: aload         12
177: aload         13
179: invokestatic  #209
182: astore        14
184: aload         14
186: invokestatic  #208
189: astore        15
191: aload         7
193: aload         15
195: invokestatic  #282
198: checkcast     #68
201: astore        16
203: ldc_w         #283
206: invokestatic  #10
209: goto          214
212: astore        16
214: aload         7
216: invokestatic  #47
219: aload         8
221: invokestatic  #47
224: aload         9
226: invokestatic  #47
229: aload         10
231: invokestatic  #47
234: aload         10
236: invokestatic  #147
239: ldc           #217
241: invokestatic  #62
244: aload         11
246: invokestatic  #47
249: aload         11
251: invokestatic  #147
254: ldc           #218
256: invokestatic  #62
259: aload         12
261: invokestatic  #47
264: aload         12
266: invokestatic  #147
269: ldc           #217
271: invokestatic  #62
274: aload         13
276: invokestatic  #47
279: aload         13
281: invokestatic  #147
284: ldc           #65
286: invokestatic  #62
289: aload         14
291: invokestatic  #47
294: aload         14
296: invokestatic  #147
299: ldc           #217
301: invokestatic  #62
304: aload         15
306: invokestatic  #47
309: aload         15
311: invokestatic  #147
314: ldc           #217
316: invokestatic  #62
319: return
Exception table:
from    to  target type
191   209   212   Class java/lang/IndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 4060
End line: 4105
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26);
        java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(wildcardClassArray28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #284
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: aload         5
69: invokestatic  #42
72: astore        7
74: iconst_0
75: anewarray     #39
78: astore        8
80: aload         8
82: checkcast     #40
85: astore        9
87: aconst_null
88: astore        10
90: iconst_1
91: anewarray     #39
94: astore        11
96: aload         11
98: checkcast     #40
101: astore        12
103: aload         12
105: iconst_0
106: aload         10
108: aastore
109: aload         8
111: checkcast     #40
114: aload         12
116: iconst_1
117: invokestatic  #41
120: istore        13
122: aload         8
124: checkcast     #40
127: invokestatic  #42
130: astore        14
132: aload         5
134: aload         14
136: invokestatic  #43
139: istore        15
141: aload         5
143: checkcast     #44
146: invokestatic  #32
149: astore        16
151: aload         5
153: invokestatic  #42
156: astore        17
158: aload         17
160: invokestatic  #42
163: astore        18
165: aload         18
167: invokestatic  #53
170: astore        19
172: aload_1
173: invokestatic  #47
176: aload_2
177: invokestatic  #47
180: aload         4
182: invokestatic  #47
185: aload         5
187: invokestatic  #47
190: new           #14
193: dup
194: invokespecial #15
197: ldc           #16
199: invokevirtual #17
202: iload         6
204: invokevirtual #18
207: ldc           #19
209: invokevirtual #17
212: iconst_0
213: invokevirtual #18
216: ldc           #16
218: invokevirtual #17
221: invokevirtual #20
224: iload         6
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #21
237: aload         7
239: invokestatic  #47
242: aload         8
244: invokestatic  #47
247: aload         9
249: invokestatic  #47
252: aload         11
254: invokestatic  #47
257: aload         12
259: invokestatic  #47
262: new           #14
265: dup
266: invokespecial #15
269: ldc           #16
271: invokevirtual #17
274: iload         13
276: invokevirtual #18
279: ldc           #19
281: invokevirtual #17
284: iconst_0
285: invokevirtual #18
288: ldc           #16
290: invokevirtual #17
293: invokevirtual #20
296: iload         13
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #21
309: aload         14
311: invokestatic  #47
314: new           #14
317: dup
318: invokespecial #15
321: ldc           #16
323: invokevirtual #17
326: iload         15
328: invokevirtual #18
331: ldc           #19
333: invokevirtual #17
336: iconst_0
337: invokevirtual #18
340: ldc           #16
342: invokevirtual #17
345: invokevirtual #20
348: iload         15
350: ifne          357
353: iconst_1
354: goto          358
357: iconst_0
358: invokestatic  #21
361: aload         16
363: invokestatic  #47
366: aload         17
368: invokestatic  #47
371: aload         18
373: invokestatic  #47
376: aload         19
378: invokestatic  #47
381: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 4108
End line: 4182
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        java.lang.reflect.Type type0 = null;
        java.lang.Short[] shortArray7 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray7);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray7, (short) (byte) 1);
        short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray10);
        java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray18, (short) (byte) 1);
        short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray21);
        boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray11, shortArray21);
        java.lang.Short[] shortArray30 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray30);
        short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray30, (short) (byte) 1);
        short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray33);
        short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.removeElements(shortArray11, shortArray34);
        short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.add(shortArray35, (short) (byte) 100);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray35, (short) -1);
        short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray35);
        java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray47);
        short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray47, (short) (byte) 1);
        short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray50);
        boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray50);
        short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.remove(shortArray50, 1);
        short[] shortArray55 = org.apache.commons.lang3.ArrayUtils.removeElements(shortArray35, shortArray50);
        short[] shortArray56 = org.apache.commons.lang3.ArrayUtils.clone(shortArray55);
        java.lang.Class<?> wildcardClass57 = shortArray56.getClass();
        boolean boolean58 = org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type0, (java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = org.apache.commons.lang3.reflect.TypeUtils.isArrayType(type0);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray8);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray19);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertNotNull(shortArray31);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[]");
        org.junit.Assert.assertNotNull(shortArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[100]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]");
        org.junit.Assert.assertNotNull(shortArray47);
        org.junit.Assert.assertNotNull(shortArray48);
        org.junit.Assert.assertNotNull(shortArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shortArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray54), "[1, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray55), "[]");
        org.junit.Assert.assertNotNull(shortArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray56), "[]");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #285
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: bipush        6
29: anewarray     #102
32: dup
33: iconst_0
34: iconst_1
35: invokestatic  #103
38: aastore
39: dup
40: iconst_1
41: iconst_0
42: invokestatic  #103
45: aastore
46: dup
47: iconst_2
48: iconst_0
49: invokestatic  #103
52: aastore
53: dup
54: iconst_3
55: iconst_m1
56: invokestatic  #103
59: aastore
60: dup
61: iconst_4
62: iconst_m1
63: invokestatic  #103
66: aastore
67: dup
68: iconst_5
69: iconst_1
70: invokestatic  #103
73: aastore
74: astore_2
75: aload_2
76: invokestatic  #104
79: astore_3
80: aload_2
81: iconst_1
82: invokestatic  #105
85: astore        4
87: aload         4
89: invokestatic  #286
92: astore        5
94: bipush        6
96: anewarray     #102
99: dup
100: iconst_0
101: iconst_1
102: invokestatic  #103
105: aastore
106: dup
107: iconst_1
108: iconst_0
109: invokestatic  #103
112: aastore
113: dup
114: iconst_2
115: iconst_0
116: invokestatic  #103
119: aastore
120: dup
121: iconst_3
122: iconst_m1
123: invokestatic  #103
126: aastore
127: dup
128: iconst_4
129: iconst_m1
130: invokestatic  #103
133: aastore
134: dup
135: iconst_5
136: iconst_1
137: invokestatic  #103
140: aastore
141: astore        6
143: aload         6
145: invokestatic  #104
148: astore        7
150: aload         6
152: iconst_1
153: invokestatic  #105
156: astore        8
158: aload         8
160: invokestatic  #286
163: astore        9
165: aload         5
167: aload         8
169: invokestatic  #287
172: istore        10
174: bipush        6
176: anewarray     #102
179: dup
180: iconst_0
181: iconst_1
182: invokestatic  #103
185: aastore
186: dup
187: iconst_1
188: iconst_0
189: invokestatic  #103
192: aastore
193: dup
194: iconst_2
195: iconst_0
196: invokestatic  #103
199: aastore
200: dup
201: iconst_3
202: iconst_m1
203: invokestatic  #103
206: aastore
207: dup
208: iconst_4
209: iconst_m1
210: invokestatic  #103
213: aastore
214: dup
215: iconst_5
216: iconst_1
217: invokestatic  #103
220: aastore
221: astore        11
223: aload         11
225: invokestatic  #104
228: astore        12
230: aload         11
232: iconst_1
233: invokestatic  #105
236: astore        13
238: aload         13
240: invokestatic  #286
243: astore        14
245: aload         5
247: aload         14
249: invokestatic  #288
252: astore        15
254: aload         15
256: bipush        100
258: invokestatic  #289
261: astore        16
263: aload         15
265: iconst_m1
266: invokestatic  #290
269: istore        17
271: aload         15
273: invokestatic  #286
276: astore        18
278: bipush        6
280: anewarray     #102
283: dup
284: iconst_0
285: iconst_1
286: invokestatic  #103
289: aastore
290: dup
291: iconst_1
292: iconst_0
293: invokestatic  #103
296: aastore
297: dup
298: iconst_2
299: iconst_0
300: invokestatic  #103
303: aastore
304: dup
305: iconst_3
306: iconst_m1
307: invokestatic  #103
310: aastore
311: dup
312: iconst_4
313: iconst_m1
314: invokestatic  #103
317: aastore
318: dup
319: iconst_5
320: iconst_1
321: invokestatic  #103
324: aastore
325: astore        19
327: aload         19
329: invokestatic  #104
332: astore        20
334: aload         19
336: iconst_1
337: invokestatic  #105
340: astore        21
342: aload         21
344: invokestatic  #286
347: astore        22
349: aload         21
351: invokestatic  #291
354: istore        23
356: aload         21
358: iconst_1
359: invokestatic  #292
362: astore        24
364: aload         15
366: aload         21
368: invokestatic  #288
371: astore        25
373: aload         25
375: invokestatic  #293
378: astore        26
380: aload         26
382: invokevirtual #71
385: astore        27
387: aload_1
388: aload         27
390: invokestatic  #294
393: istore        28
395: aload_1
396: invokestatic  #13
399: istore        29
401: aload_2
402: invokestatic  #47
405: aload_3
406: invokestatic  #47
409: aload         4
411: invokestatic  #47
414: aload         4
416: invokestatic  #106
419: ldc           #107
421: invokestatic  #62
424: aload         5
426: invokestatic  #47
429: aload         5
431: invokestatic  #106
434: ldc           #107
436: invokestatic  #62
439: aload         6
441: invokestatic  #47
444: aload         7
446: invokestatic  #47
449: aload         8
451: invokestatic  #47
454: aload         8
456: invokestatic  #106
459: ldc           #107
461: invokestatic  #62
464: aload         9
466: invokestatic  #47
469: aload         9
471: invokestatic  #106
474: ldc           #107
476: invokestatic  #62
479: new           #14
482: dup
483: invokespecial #15
486: ldc           #16
488: invokevirtual #17
491: iload         10
493: invokevirtual #18
496: ldc           #19
498: invokevirtual #17
501: iconst_1
502: invokevirtual #18
505: ldc           #16
507: invokevirtual #17
510: invokevirtual #20
513: iload         10
515: iconst_1
516: if_icmpne     523
519: iconst_1
520: goto          524
523: iconst_0
524: invokestatic  #21
527: aload         11
529: invokestatic  #47
532: aload         12
534: invokestatic  #47
537: aload         13
539: invokestatic  #47
542: aload         13
544: invokestatic  #106
547: ldc           #107
549: invokestatic  #62
552: aload         14
554: invokestatic  #47
557: aload         14
559: invokestatic  #106
562: ldc           #107
564: invokestatic  #62
567: aload         15
569: invokestatic  #47
572: aload         15
574: invokestatic  #106
577: ldc           #65
579: invokestatic  #62
582: aload         16
584: invokestatic  #47
587: aload         16
589: invokestatic  #106
592: ldc_w         #295
595: invokestatic  #62
598: new           #14
601: dup
602: invokespecial #15
605: ldc           #16
607: invokevirtual #17
610: iload         17
612: invokevirtual #48
615: ldc           #19
617: invokevirtual #17
620: iconst_m1
621: invokevirtual #48
624: ldc           #16
626: invokevirtual #17
629: invokevirtual #20
632: iload         17
634: iconst_m1
635: if_icmpne     642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #21
646: aload         18
648: invokestatic  #47
651: aload         18
653: invokestatic  #106
656: ldc           #65
658: invokestatic  #62
661: aload         19
663: invokestatic  #47
666: aload         20
668: invokestatic  #47
671: aload         21
673: invokestatic  #47
676: aload         21
678: invokestatic  #106
681: ldc           #107
683: invokestatic  #62
686: aload         22
688: invokestatic  #47
691: aload         22
693: invokestatic  #106
696: ldc           #107
698: invokestatic  #62
701: new           #14
704: dup
705: invokespecial #15
708: ldc           #16
710: invokevirtual #17
713: iload         23
715: invokevirtual #18
718: ldc           #19
720: invokevirtual #17
723: iconst_0
724: invokevirtual #18
727: ldc           #16
729: invokevirtual #17
732: invokevirtual #20
735: iload         23
737: ifne          744
740: iconst_1
741: goto          745
744: iconst_0
745: invokestatic  #21
748: aload         24
750: invokestatic  #47
753: aload         24
755: invokestatic  #106
758: ldc_w         #296
761: invokestatic  #62
764: aload         25
766: invokestatic  #47
769: aload         25
771: invokestatic  #106
774: ldc           #65
776: invokestatic  #62
779: aload         26
781: invokestatic  #47
784: aload         26
786: invokestatic  #106
789: ldc           #65
791: invokestatic  #62
794: aload         27
796: invokestatic  #47
799: new           #14
802: dup
803: invokespecial #15
806: ldc           #16
808: invokevirtual #17
811: iload         28
813: invokevirtual #18
816: ldc           #19
818: invokevirtual #17
821: iconst_1
822: invokevirtual #18
825: ldc           #16
827: invokevirtual #17
830: invokevirtual #20
833: iload         28
835: iconst_1
836: if_icmpne     843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #21
847: new           #14
850: dup
851: invokespecial #15
854: ldc           #16
856: invokevirtual #17
859: iload         29
861: invokevirtual #18
864: ldc           #19
866: invokevirtual #17
869: iconst_0
870: invokevirtual #18
873: ldc           #16
875: invokevirtual #17
878: invokevirtual #20
881: iload         29
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #21
894: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 4185
End line: 4210
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.lang3.text.translate.OctalUnescaper octalUnescaper0 = new org.apache.commons.lang3.text.translate.OctalUnescaper();
        java.io.Writer writer3 = null;
        int int4 = octalUnescaper0.translate((java.lang.CharSequence) "boolean[]", 3, writer3);
        org.apache.commons.lang3.text.translate.OctalUnescaper octalUnescaper5 = new org.apache.commons.lang3.text.translate.OctalUnescaper();
        org.apache.commons.lang3.text.translate.OctalUnescaper[] octalUnescaperArray6 = new org.apache.commons.lang3.text.translate.OctalUnescaper[] { octalUnescaper0, octalUnescaper5 };
        org.apache.commons.lang3.text.translate.OctalUnescaper octalUnescaper7 = new org.apache.commons.lang3.text.translate.OctalUnescaper();
        java.io.Writer writer10 = null;
        int int11 = octalUnescaper7.translate((java.lang.CharSequence) "boolean[]", 3, writer10);
        org.apache.commons.lang3.text.translate.OctalUnescaper[] octalUnescaperArray12 = org.apache.commons.lang3.ArrayUtils.add(octalUnescaperArray6, octalUnescaper7);
        org.apache.commons.lang3.text.translate.AggregateTranslator aggregateTranslator13 = new org.apache.commons.lang3.text.translate.AggregateTranslator((org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) octalUnescaperArray12);
        java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) octalUnescaperArray12);
        java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14);
        java.lang.reflect.Type[] typeArray16 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray15);
        java.lang.reflect.Type[] typeArray17 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray16);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(octalUnescaperArray6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(octalUnescaperArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertNotNull(typeArray17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #297
20: aastore
21: invokevirtual #7
24: pop
25: new           #265
28: dup
29: invokespecial #266
32: astore_1
33: aconst_null
34: astore_2
35: aload_1
36: ldc           #245
38: iconst_3
39: aload_2
40: invokevirtual #267
43: istore_3
44: new           #265
47: dup
48: invokespecial #266
51: astore        4
53: iconst_2
54: anewarray     #265
57: dup
58: iconst_0
59: aload_1
60: aastore
61: dup
62: iconst_1
63: aload         4
65: aastore
66: astore        5
68: new           #265
71: dup
72: invokespecial #266
75: astore        6
77: aconst_null
78: astore        7
80: aload         6
82: ldc           #245
84: iconst_3
85: aload         7
87: invokevirtual #267
90: istore        8
92: aload         5
94: aload         6
96: invokestatic  #155
99: checkcast     #268
102: astore        9
104: new           #269
107: dup
108: aload         9
110: checkcast     #270
113: invokespecial #271
116: astore        10
118: aload         9
120: checkcast     #45
123: invokestatic  #59
126: astore        11
128: aload         11
130: invokestatic  #53
133: astore        12
135: aload         12
137: checkcast     #44
140: invokestatic  #32
143: astore        13
145: aload         13
147: invokestatic  #32
150: astore        14
152: new           #14
155: dup
156: invokespecial #15
159: ldc           #16
161: invokevirtual #17
164: iload_3
165: invokevirtual #48
168: ldc           #19
170: invokevirtual #17
173: iconst_0
174: invokevirtual #48
177: ldc           #16
179: invokevirtual #17
182: invokevirtual #20
185: iload_3
186: ifne          193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #21
197: aload         5
199: invokestatic  #47
202: new           #14
205: dup
206: invokespecial #15
209: ldc           #16
211: invokevirtual #17
214: iload         8
216: invokevirtual #48
219: ldc           #19
221: invokevirtual #17
224: iconst_0
225: invokevirtual #48
228: ldc           #16
230: invokevirtual #17
233: invokevirtual #20
236: iload         8
238: ifne          245
241: iconst_1
242: goto          246
245: iconst_0
246: invokestatic  #21
249: aload         9
251: invokestatic  #47
254: aload         11
256: invokestatic  #47
259: aload         12
261: invokestatic  #47
264: aload         13
266: invokestatic  #47
269: aload         14
271: invokestatic  #47
274: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 4213
End line: 4295
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class[] classArray4 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4;
        java.lang.Class<?> wildcardClass6 = null;
        java.lang.Class[] classArray8 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray9 = (java.lang.Class<?>[]) classArray8;
        wildcardClassArray9[0] = wildcardClass6;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray4, wildcardClassArray9, true);
        boolean boolean14 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, (java.lang.Class<?>[]) classArray4);
        java.lang.Class[] classArray16 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        java.lang.Class<?> wildcardClass18 = null;
        java.lang.Class[] classArray20 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        wildcardClassArray21[0] = wildcardClass18;
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray16, wildcardClassArray21, true);
        java.lang.Class[] classArray27 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray28 = (java.lang.Class<?>[]) classArray27;
        java.lang.Class<?> wildcardClass29 = null;
        java.lang.Class[] classArray31 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass29;
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray27, wildcardClassArray32, true);
        java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray32);
        boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray32);
        java.lang.reflect.Type[] typeArray39 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray32);
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class<?> wildcardClass43 = null;
        java.lang.Class[] classArray45 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45;
        wildcardClassArray46[0] = wildcardClass43;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray46, true);
        boolean boolean51 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray32, wildcardClassArray46);
        java.lang.Class<?>[] wildcardClassArray52 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray32);
        java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray52);
        boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray53);
        java.lang.Class<?>[] wildcardClassArray55 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray53);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray8);
        org.junit.Assert.assertNotNull(wildcardClassArray9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(wildcardClassArray28);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClassArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #298
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: iconst_0
36: anewarray     #39
39: astore_3
40: aload_3
41: checkcast     #40
44: astore        4
46: aconst_null
47: astore        5
49: iconst_1
50: anewarray     #39
53: astore        6
55: aload         6
57: checkcast     #40
60: astore        7
62: aload         7
64: iconst_0
65: aload         5
67: aastore
68: aload_3
69: checkcast     #40
72: aload         7
74: iconst_1
75: invokestatic  #41
78: istore        8
80: aload_1
81: checkcast     #40
84: aload_3
85: checkcast     #40
88: invokestatic  #43
91: istore        9
93: iconst_0
94: anewarray     #39
97: astore        10
99: aload         10
101: checkcast     #40
104: astore        11
106: aconst_null
107: astore        12
109: iconst_1
110: anewarray     #39
113: astore        13
115: aload         13
117: checkcast     #40
120: astore        14
122: aload         14
124: iconst_0
125: aload         12
127: aastore
128: aload         10
130: checkcast     #40
133: aload         14
135: iconst_1
136: invokestatic  #41
139: istore        15
141: iconst_0
142: anewarray     #39
145: astore        16
147: aload         16
149: checkcast     #40
152: astore        17
154: aconst_null
155: astore        18
157: iconst_1
158: anewarray     #39
161: astore        19
163: aload         19
165: checkcast     #40
168: astore        20
170: aload         20
172: iconst_0
173: aload         18
175: aastore
176: aload         16
178: checkcast     #40
181: aload         20
183: iconst_1
184: invokestatic  #41
187: istore        21
189: aload         20
191: invokestatic  #42
194: astore        22
196: aload         14
198: aload         20
200: invokestatic  #43
203: istore        23
205: aload         20
207: checkcast     #44
210: invokestatic  #32
213: astore        24
215: iconst_0
216: anewarray     #39
219: astore        25
221: aload         25
223: checkcast     #40
226: astore        26
228: aconst_null
229: astore        27
231: iconst_1
232: anewarray     #39
235: astore        28
237: aload         28
239: checkcast     #40
242: astore        29
244: aload         29
246: iconst_0
247: aload         27
249: aastore
250: aload         25
252: checkcast     #40
255: aload         29
257: iconst_1
258: invokestatic  #41
261: istore        30
263: aload         20
265: aload         29
267: invokestatic  #43
270: istore        31
272: aload         20
274: invokestatic  #42
277: astore        32
279: aload         32
281: invokestatic  #42
284: astore        33
286: aload_1
287: checkcast     #40
290: aload         33
292: invokestatic  #43
295: istore        34
297: aload         33
299: invokestatic  #53
302: astore        35
304: aload_1
305: invokestatic  #47
308: aload_2
309: invokestatic  #47
312: aload_3
313: invokestatic  #47
316: aload         4
318: invokestatic  #47
321: aload         6
323: invokestatic  #47
326: aload         7
328: invokestatic  #47
331: new           #14
334: dup
335: invokespecial #15
338: ldc           #16
340: invokevirtual #17
343: iload         8
345: invokevirtual #18
348: ldc           #19
350: invokevirtual #17
353: iconst_0
354: invokevirtual #18
357: ldc           #16
359: invokevirtual #17
362: invokevirtual #20
365: iload         8
367: ifne          374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #21
378: new           #14
381: dup
382: invokespecial #15
385: ldc           #16
387: invokevirtual #17
390: iload         9
392: invokevirtual #18
395: ldc           #19
397: invokevirtual #17
400: iconst_1
401: invokevirtual #18
404: ldc           #16
406: invokevirtual #17
409: invokevirtual #20
412: iload         9
414: iconst_1
415: if_icmpne     422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #21
426: aload         10
428: invokestatic  #47
431: aload         11
433: invokestatic  #47
436: aload         13
438: invokestatic  #47
441: aload         14
443: invokestatic  #47
446: new           #14
449: dup
450: invokespecial #15
453: ldc           #16
455: invokevirtual #17
458: iload         15
460: invokevirtual #18
463: ldc           #19
465: invokevirtual #17
468: iconst_0
469: invokevirtual #18
472: ldc           #16
474: invokevirtual #17
477: invokevirtual #20
480: iload         15
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #21
493: aload         16
495: invokestatic  #47
498: aload         17
500: invokestatic  #47
503: aload         19
505: invokestatic  #47
508: aload         20
510: invokestatic  #47
513: new           #14
516: dup
517: invokespecial #15
520: ldc           #16
522: invokevirtual #17
525: iload         21
527: invokevirtual #18
530: ldc           #19
532: invokevirtual #17
535: iconst_0
536: invokevirtual #18
539: ldc           #16
541: invokevirtual #17
544: invokevirtual #20
547: iload         21
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #21
560: aload         22
562: invokestatic  #47
565: new           #14
568: dup
569: invokespecial #15
572: ldc           #16
574: invokevirtual #17
577: iload         23
579: invokevirtual #18
582: ldc           #19
584: invokevirtual #17
587: iconst_0
588: invokevirtual #18
591: ldc           #16
593: invokevirtual #17
596: invokevirtual #20
599: iload         23
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #21
612: aload         24
614: invokestatic  #47
617: aload         25
619: invokestatic  #47
622: aload         26
624: invokestatic  #47
627: aload         28
629: invokestatic  #47
632: aload         29
634: invokestatic  #47
637: new           #14
640: dup
641: invokespecial #15
644: ldc           #16
646: invokevirtual #17
649: iload         30
651: invokevirtual #18
654: ldc           #19
656: invokevirtual #17
659: iconst_0
660: invokevirtual #18
663: ldc           #16
665: invokevirtual #17
668: invokevirtual #20
671: iload         30
673: ifne          680
676: iconst_1
677: goto          681
680: iconst_0
681: invokestatic  #21
684: new           #14
687: dup
688: invokespecial #15
691: ldc           #16
693: invokevirtual #17
696: iload         31
698: invokevirtual #18
701: ldc           #19
703: invokevirtual #17
706: iconst_0
707: invokevirtual #18
710: ldc           #16
712: invokevirtual #17
715: invokevirtual #20
718: iload         31
720: ifne          727
723: iconst_1
724: goto          728
727: iconst_0
728: invokestatic  #21
731: aload         32
733: invokestatic  #47
736: aload         33
738: invokestatic  #47
741: new           #14
744: dup
745: invokespecial #15
748: ldc           #16
750: invokevirtual #17
753: iload         34
755: invokevirtual #18
758: ldc           #19
760: invokevirtual #17
763: iconst_0
764: invokevirtual #18
767: ldc           #16
769: invokevirtual #17
772: invokevirtual #20
775: iload         34
777: ifne          784
780: iconst_1
781: goto          785
784: iconst_0
785: invokestatic  #21
788: aload         35
790: invokestatic  #47
793: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 4298
End line: 4383
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        java.lang.Class<?>[] wildcardClassArray0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        java.lang.Class[] classArray5 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        java.lang.Class<?> wildcardClass7 = null;
        java.lang.Class[] classArray9 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9;
        wildcardClassArray10[0] = wildcardClass7;
        boolean boolean14 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray5, wildcardClassArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray2, (java.lang.Class<?>[]) classArray5);
        java.lang.reflect.Type[] typeArray16 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray2);
        boolean boolean18 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, (java.lang.Class<?>[]) classArray2, false);
        java.lang.Class<?>[] wildcardClassArray19 = null;
        java.lang.Character[] charArray20 = new java.lang.Character[] {};
        java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20);
        char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray21);
        java.lang.Class[] classArray25 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25;
        java.lang.Class<?> wildcardClass27 = null;
        java.lang.Class[] classArray29 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29;
        wildcardClassArray30[0] = wildcardClass27;
        boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray25, wildcardClassArray30, true);
        java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray30);
        java.lang.Class[] classArray37 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37;
        java.lang.Class<?> wildcardClass39 = null;
        java.lang.Class[] classArray41 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        wildcardClassArray42[0] = wildcardClass39;
        boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray37, wildcardClassArray42, true);
        java.lang.Class<?>[] wildcardClassArray47 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray37);
        boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray47);
        java.lang.reflect.Type[] typeArray49 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray30);
        java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray30);
        boolean boolean51 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray23, wildcardClassArray30);
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray19, wildcardClassArray23, false);
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray19, true);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(wildcardClassArray10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClassArray30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(wildcardClassArray38);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertNotNull(wildcardClassArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #299
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_0
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: iconst_0
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aconst_null
51: astore        6
53: iconst_1
54: anewarray     #39
57: astore        7
59: aload         7
61: checkcast     #40
64: astore        8
66: aload         8
68: iconst_0
69: aload         6
71: aastore
72: aload         4
74: checkcast     #40
77: aload         8
79: iconst_1
80: invokestatic  #41
83: istore        9
85: aload_2
86: checkcast     #40
89: aload         4
91: checkcast     #40
94: invokestatic  #43
97: istore        10
99: aload_2
100: checkcast     #44
103: invokestatic  #32
106: astore        11
108: aload_1
109: aload_2
110: checkcast     #40
113: iconst_0
114: invokestatic  #41
117: istore        12
119: aconst_null
120: astore        13
122: iconst_0
123: anewarray     #56
126: astore        14
128: aload         14
130: invokestatic  #57
133: astore        15
135: aload         15
137: invokestatic  #58
140: astore        16
142: aload         15
144: checkcast     #45
147: invokestatic  #59
150: astore        17
152: iconst_0
153: anewarray     #39
156: astore        18
158: aload         18
160: checkcast     #40
163: astore        19
165: aconst_null
166: astore        20
168: iconst_1
169: anewarray     #39
172: astore        21
174: aload         21
176: checkcast     #40
179: astore        22
181: aload         22
183: iconst_0
184: aload         20
186: aastore
187: aload         18
189: checkcast     #40
192: aload         22
194: iconst_1
195: invokestatic  #41
198: istore        23
200: aload         22
202: invokestatic  #42
205: astore        24
207: iconst_0
208: anewarray     #39
211: astore        25
213: aload         25
215: checkcast     #40
218: astore        26
220: aconst_null
221: astore        27
223: iconst_1
224: anewarray     #39
227: astore        28
229: aload         28
231: checkcast     #40
234: astore        29
236: aload         29
238: iconst_0
239: aload         27
241: aastore
242: aload         25
244: checkcast     #40
247: aload         29
249: iconst_1
250: invokestatic  #41
253: istore        30
255: aload         25
257: checkcast     #40
260: invokestatic  #42
263: astore        31
265: aload         22
267: aload         31
269: invokestatic  #43
272: istore        32
274: aload         22
276: checkcast     #44
279: invokestatic  #32
282: astore        33
284: aload         22
286: invokestatic  #53
289: astore        34
291: aload         17
293: aload         22
295: invokestatic  #43
298: istore        35
300: aload         13
302: aload         17
304: iconst_0
305: invokestatic  #41
308: istore        36
310: aload_1
311: aload         13
313: iconst_1
314: invokestatic  #41
317: istore        37
319: aload_2
320: invokestatic  #47
323: aload_3
324: invokestatic  #47
327: aload         4
329: invokestatic  #47
332: aload         5
334: invokestatic  #47
337: aload         7
339: invokestatic  #47
342: aload         8
344: invokestatic  #47
347: new           #14
350: dup
351: invokespecial #15
354: ldc           #16
356: invokevirtual #17
359: iload         9
361: invokevirtual #18
364: ldc           #19
366: invokevirtual #17
369: iconst_0
370: invokevirtual #18
373: ldc           #16
375: invokevirtual #17
378: invokevirtual #20
381: iload         9
383: ifne          390
386: iconst_1
387: goto          391
390: iconst_0
391: invokestatic  #21
394: new           #14
397: dup
398: invokespecial #15
401: ldc           #16
403: invokevirtual #17
406: iload         10
408: invokevirtual #18
411: ldc           #19
413: invokevirtual #17
416: iconst_1
417: invokevirtual #18
420: ldc           #16
422: invokevirtual #17
425: invokevirtual #20
428: iload         10
430: iconst_1
431: if_icmpne     438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #21
442: aload         11
444: invokestatic  #47
447: new           #14
450: dup
451: invokespecial #15
454: ldc           #16
456: invokevirtual #17
459: iload         12
461: invokevirtual #18
464: ldc           #19
466: invokevirtual #17
469: iconst_1
470: invokevirtual #18
473: ldc           #16
475: invokevirtual #17
478: invokevirtual #20
481: iload         12
483: iconst_1
484: if_icmpne     491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #21
495: aload         14
497: invokestatic  #47
500: aload         15
502: invokestatic  #47
505: aload         16
507: invokestatic  #47
510: aload         16
512: invokestatic  #60
515: ldc           #61
517: invokestatic  #62
520: aload         16
522: invokestatic  #63
525: ldc           #61
527: invokestatic  #62
530: aload         16
532: invokestatic  #64
535: ldc           #65
537: invokestatic  #62
540: aload         17
542: invokestatic  #47
545: aload         18
547: invokestatic  #47
550: aload         19
552: invokestatic  #47
555: aload         21
557: invokestatic  #47
560: aload         22
562: invokestatic  #47
565: new           #14
568: dup
569: invokespecial #15
572: ldc           #16
574: invokevirtual #17
577: iload         23
579: invokevirtual #18
582: ldc           #19
584: invokevirtual #17
587: iconst_0
588: invokevirtual #18
591: ldc           #16
593: invokevirtual #17
596: invokevirtual #20
599: iload         23
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #21
612: aload         24
614: invokestatic  #47
617: aload         25
619: invokestatic  #47
622: aload         26
624: invokestatic  #47
627: aload         28
629: invokestatic  #47
632: aload         29
634: invokestatic  #47
637: new           #14
640: dup
641: invokespecial #15
644: ldc           #16
646: invokevirtual #17
649: iload         30
651: invokevirtual #18
654: ldc           #19
656: invokevirtual #17
659: iconst_0
660: invokevirtual #18
663: ldc           #16
665: invokevirtual #17
668: invokevirtual #20
671: iload         30
673: ifne          680
676: iconst_1
677: goto          681
680: iconst_0
681: invokestatic  #21
684: aload         31
686: invokestatic  #47
689: new           #14
692: dup
693: invokespecial #15
696: ldc           #16
698: invokevirtual #17
701: iload         32
703: invokevirtual #18
706: ldc           #19
708: invokevirtual #17
711: iconst_0
712: invokevirtual #18
715: ldc           #16
717: invokevirtual #17
720: invokevirtual #20
723: iload         32
725: ifne          732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #21
736: aload         33
738: invokestatic  #47
741: aload         34
743: invokestatic  #47
746: new           #14
749: dup
750: invokespecial #15
753: ldc           #16
755: invokevirtual #17
758: iload         35
760: invokevirtual #18
763: ldc           #19
765: invokevirtual #17
768: iconst_0
769: invokevirtual #18
772: ldc           #16
774: invokevirtual #17
777: invokevirtual #20
780: iload         35
782: ifne          789
785: iconst_1
786: goto          790
789: iconst_0
790: invokestatic  #21
793: new           #14
796: dup
797: invokespecial #15
800: ldc           #16
802: invokevirtual #17
805: iload         36
807: invokevirtual #18
810: ldc           #19
812: invokevirtual #17
815: iconst_1
816: invokevirtual #18
819: ldc           #16
821: invokevirtual #17
824: invokevirtual #20
827: iload         36
829: iconst_1
830: if_icmpne     837
833: iconst_1
834: goto          838
837: iconst_0
838: invokestatic  #21
841: new           #14
844: dup
845: invokespecial #15
848: ldc           #16
850: invokevirtual #17
853: iload         37
855: invokevirtual #18
858: ldc           #19
860: invokevirtual #17
863: iconst_1
864: invokevirtual #18
867: ldc           #16
869: invokevirtual #17
872: invokevirtual #20
875: iload         37
877: iconst_1
878: if_icmpne     885
881: iconst_1
882: goto          886
885: iconst_0
886: invokestatic  #21
889: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 4386
End line: 4479
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6);
        boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(wildcardClassArray26);
        java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26);
        org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) wildcardClassArray28);
        boolean[] booleanArray31 = new boolean[] { false };
        java.lang.Boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray31);
        int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray31, true);
        java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { false, false, true, true, false, false };
        java.lang.Boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray41);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray42);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray42, true);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.removeElements(booleanArray31, booleanArray45);
        boolean[] booleanArray52 = new boolean[] { true, false, false, false, true };
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray52);
        int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray52, false);
        boolean[] booleanArray61 = new boolean[] { true, false, false, false, true };
        org.apache.commons.lang3.ArrayUtils.reverse(booleanArray61);
        boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.removeElements(booleanArray52, booleanArray61);
        boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.add(booleanArray63, true);
        boolean[] booleanArray66 = org.apache.commons.lang3.ArrayUtils.removeElements(booleanArray46, booleanArray63);
        boolean[] booleanArray68 = org.apache.commons.lang3.ArrayUtils.add(booleanArray66, true);
        boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray68, false);
        int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray28, (java.lang.Object) booleanArray68, (int) (byte) -1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray28);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, true, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, true, true, false, false]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[true, false, false, false, true]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[true, false, false, false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[true]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #300
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: aload         5
69: invokestatic  #42
72: astore        7
74: iconst_0
75: anewarray     #39
78: astore        8
80: aload         8
82: checkcast     #40
85: astore        9
87: aconst_null
88: astore        10
90: iconst_1
91: anewarray     #39
94: astore        11
96: aload         11
98: checkcast     #40
101: astore        12
103: aload         12
105: iconst_0
106: aload         10
108: aastore
109: aload         8
111: checkcast     #40
114: aload         12
116: iconst_1
117: invokestatic  #41
120: istore        13
122: aload         8
124: checkcast     #40
127: invokestatic  #42
130: astore        14
132: aload         5
134: aload         14
136: invokestatic  #43
139: istore        15
141: aload         5
143: checkcast     #44
146: invokestatic  #32
149: astore        16
151: aload         5
153: invokestatic  #53
156: astore        17
158: aload         17
160: invokestatic  #50
163: istore        18
165: aload         17
167: invokestatic  #42
170: astore        19
172: aload         19
174: checkcast     #45
177: invokestatic  #236
180: iconst_1
181: newarray       boolean
183: dup
184: iconst_0
185: iconst_0
186: bastore
187: astore        20
189: aload         20
191: invokestatic  #241
194: astore        21
196: aload         20
198: iconst_1
199: invokestatic  #301
202: istore        22
204: bipush        6
206: anewarray     #115
209: dup
210: iconst_0
211: iconst_0
212: invokestatic  #123
215: aastore
216: dup
217: iconst_1
218: iconst_0
219: invokestatic  #123
222: aastore
223: dup
224: iconst_2
225: iconst_1
226: invokestatic  #123
229: aastore
230: dup
231: iconst_3
232: iconst_1
233: invokestatic  #123
236: aastore
237: dup
238: iconst_4
239: iconst_0
240: invokestatic  #123
243: aastore
244: dup
245: iconst_5
246: iconst_0
247: invokestatic  #123
250: aastore
251: astore        23
253: aload         23
255: invokestatic  #302
258: astore        24
260: aload         24
262: invokestatic  #303
265: astore        25
267: aload         24
269: iconst_1
270: invokestatic  #244
273: astore        26
275: aload         20
277: aload         26
279: invokestatic  #304
282: astore        27
284: iconst_5
285: newarray       boolean
287: dup
288: iconst_0
289: iconst_1
290: bastore
291: dup
292: iconst_1
293: iconst_0
294: bastore
295: dup
296: iconst_2
297: iconst_0
298: bastore
299: dup
300: iconst_3
301: iconst_0
302: bastore
303: dup
304: iconst_4
305: iconst_1
306: bastore
307: astore        28
309: aload         28
311: invokestatic  #305
314: aload         28
316: iconst_0
317: invokestatic  #306
320: istore        29
322: iconst_5
323: newarray       boolean
325: dup
326: iconst_0
327: iconst_1
328: bastore
329: dup
330: iconst_1
331: iconst_0
332: bastore
333: dup
334: iconst_2
335: iconst_0
336: bastore
337: dup
338: iconst_3
339: iconst_0
340: bastore
341: dup
342: iconst_4
343: iconst_1
344: bastore
345: astore        30
347: aload         30
349: invokestatic  #305
352: aload         28
354: aload         30
356: invokestatic  #304
359: astore        31
361: aload         31
363: iconst_1
364: invokestatic  #307
367: astore        32
369: aload         27
371: aload         31
373: invokestatic  #304
376: astore        33
378: aload         33
380: iconst_1
381: invokestatic  #307
384: astore        34
386: aload         34
388: iconst_0
389: invokestatic  #308
392: astore        35
394: aload         19
396: checkcast     #45
399: aload         34
401: iconst_m1
402: invokestatic  #46
405: istore        36
407: aload_1
408: invokestatic  #47
411: aload_2
412: invokestatic  #47
415: aload         4
417: invokestatic  #47
420: aload         5
422: invokestatic  #47
425: new           #14
428: dup
429: invokespecial #15
432: ldc           #16
434: invokevirtual #17
437: iload         6
439: invokevirtual #18
442: ldc           #19
444: invokevirtual #17
447: iconst_0
448: invokevirtual #18
451: ldc           #16
453: invokevirtual #17
456: invokevirtual #20
459: iload         6
461: ifne          468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #21
472: aload         7
474: invokestatic  #47
477: aload         8
479: invokestatic  #47
482: aload         9
484: invokestatic  #47
487: aload         11
489: invokestatic  #47
492: aload         12
494: invokestatic  #47
497: new           #14
500: dup
501: invokespecial #15
504: ldc           #16
506: invokevirtual #17
509: iload         13
511: invokevirtual #18
514: ldc           #19
516: invokevirtual #17
519: iconst_0
520: invokevirtual #18
523: ldc           #16
525: invokevirtual #17
528: invokevirtual #20
531: iload         13
533: ifne          540
536: iconst_1
537: goto          541
540: iconst_0
541: invokestatic  #21
544: aload         14
546: invokestatic  #47
549: new           #14
552: dup
553: invokespecial #15
556: ldc           #16
558: invokevirtual #17
561: iload         15
563: invokevirtual #18
566: ldc           #19
568: invokevirtual #17
571: iconst_0
572: invokevirtual #18
575: ldc           #16
577: invokevirtual #17
580: invokevirtual #20
583: iload         15
585: ifne          592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #21
596: aload         16
598: invokestatic  #47
601: aload         17
603: invokestatic  #47
606: new           #14
609: dup
610: invokespecial #15
613: ldc           #16
615: invokevirtual #17
618: iload         18
620: invokevirtual #18
623: ldc           #19
625: invokevirtual #17
628: iconst_1
629: invokevirtual #18
632: ldc           #16
634: invokevirtual #17
637: invokevirtual #20
640: iload         18
642: iconst_1
643: if_icmpne     650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #21
654: aload         19
656: invokestatic  #47
659: aload         20
661: invokestatic  #47
664: aload         20
666: invokestatic  #247
669: ldc_w         #309
672: invokestatic  #62
675: aload         21
677: invokestatic  #47
680: new           #14
683: dup
684: invokespecial #15
687: ldc           #16
689: invokevirtual #17
692: iload         22
694: invokevirtual #48
697: ldc           #19
699: invokevirtual #17
702: iconst_m1
703: invokevirtual #48
706: ldc           #16
708: invokevirtual #17
711: invokevirtual #20
714: iload         22
716: iconst_m1
717: if_icmpne     724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #21
728: aload         23
730: invokestatic  #47
733: aload         24
735: invokestatic  #47
738: aload         25
740: invokestatic  #47
743: aload         25
745: invokestatic  #247
748: ldc_w         #310
751: invokestatic  #62
754: aload         26
756: invokestatic  #47
759: aload         26
761: invokestatic  #247
764: ldc_w         #310
767: invokestatic  #62
770: aload         27
772: invokestatic  #47
775: aload         27
777: invokestatic  #247
780: ldc           #65
782: invokestatic  #62
785: aload         28
787: invokestatic  #47
790: aload         28
792: invokestatic  #247
795: ldc_w         #311
798: invokestatic  #62
801: new           #14
804: dup
805: invokespecial #15
808: ldc           #16
810: invokevirtual #17
813: iload         29
815: invokevirtual #48
818: ldc           #19
820: invokevirtual #17
823: iconst_1
824: invokevirtual #48
827: ldc           #16
829: invokevirtual #17
832: invokevirtual #20
835: iload         29
837: iconst_1
838: if_icmpne     845
841: iconst_1
842: goto          846
845: iconst_0
846: invokestatic  #21
849: aload         30
851: invokestatic  #47
854: aload         30
856: invokestatic  #247
859: ldc_w         #311
862: invokestatic  #62
865: aload         31
867: invokestatic  #47
870: aload         31
872: invokestatic  #247
875: ldc           #65
877: invokestatic  #62
880: aload         32
882: invokestatic  #47
885: aload         32
887: invokestatic  #247
890: ldc_w         #312
893: invokestatic  #62
896: aload         33
898: invokestatic  #47
901: aload         33
903: invokestatic  #247
906: ldc           #65
908: invokestatic  #62
911: aload         34
913: invokestatic  #47
916: aload         34
918: invokestatic  #247
921: ldc_w         #312
924: invokestatic  #62
927: aload         35
929: invokestatic  #47
932: aload         35
934: invokestatic  #247
937: ldc_w         #312
940: invokestatic  #62
943: new           #14
946: dup
947: invokespecial #15
950: ldc           #16
952: invokevirtual #17
955: iload         36
957: invokevirtual #48
960: ldc           #19
962: invokevirtual #17
965: iconst_m1
966: invokevirtual #48
969: ldc           #16
971: invokevirtual #17
974: invokevirtual #20
977: iload         36
979: iconst_m1
980: if_icmpne     987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #21
991: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 4482
End line: 4520
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) (byte) 1);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray17);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) (byte) 1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray10, shortArray20);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, 10, (int) 'a');
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray25, (short) (byte) 100);
        java.lang.reflect.Type type28 = null;
        boolean boolean29 = org.apache.commons.lang3.reflect.TypeUtils.isInstance((java.lang.Object) shortArray25, type28);
        boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray25);
        int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) (byte) 1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #313
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: anewarray     #102
30: dup
31: iconst_0
32: iconst_1
33: invokestatic  #103
36: aastore
37: dup
38: iconst_1
39: iconst_0
40: invokestatic  #103
43: aastore
44: dup
45: iconst_2
46: iconst_0
47: invokestatic  #103
50: aastore
51: dup
52: iconst_3
53: iconst_m1
54: invokestatic  #103
57: aastore
58: dup
59: iconst_4
60: iconst_m1
61: invokestatic  #103
64: aastore
65: dup
66: iconst_5
67: iconst_1
68: invokestatic  #103
71: aastore
72: astore_1
73: aload_1
74: invokestatic  #104
77: astore_2
78: aload_1
79: iconst_1
80: invokestatic  #105
83: astore_3
84: aload_3
85: invokestatic  #286
88: astore        4
90: bipush        6
92: anewarray     #102
95: dup
96: iconst_0
97: iconst_1
98: invokestatic  #103
101: aastore
102: dup
103: iconst_1
104: iconst_0
105: invokestatic  #103
108: aastore
109: dup
110: iconst_2
111: iconst_0
112: invokestatic  #103
115: aastore
116: dup
117: iconst_3
118: iconst_m1
119: invokestatic  #103
122: aastore
123: dup
124: iconst_4
125: iconst_m1
126: invokestatic  #103
129: aastore
130: dup
131: iconst_5
132: iconst_1
133: invokestatic  #103
136: aastore
137: astore        5
139: aload         5
141: invokestatic  #104
144: astore        6
146: aload         5
148: iconst_1
149: invokestatic  #105
152: astore        7
154: aload         7
156: invokestatic  #286
159: astore        8
161: aload         4
163: aload         7
165: invokestatic  #287
168: istore        9
170: aload         7
172: bipush        10
174: bipush        97
176: invokestatic  #314
179: astore        10
181: aload         10
183: bipush        100
185: invokestatic  #315
188: astore        11
190: aconst_null
191: astore        12
193: aload         10
195: aload         12
197: invokestatic  #91
200: istore        13
202: aload         10
204: invokestatic  #291
207: istore        14
209: aload         10
211: iconst_1
212: iconst_0
213: invokestatic  #316
216: istore        15
218: aload_1
219: invokestatic  #47
222: aload_2
223: invokestatic  #47
226: aload_3
227: invokestatic  #47
230: aload_3
231: invokestatic  #106
234: ldc           #107
236: invokestatic  #62
239: aload         4
241: invokestatic  #47
244: aload         4
246: invokestatic  #106
249: ldc           #107
251: invokestatic  #62
254: aload         5
256: invokestatic  #47
259: aload         6
261: invokestatic  #47
264: aload         7
266: invokestatic  #47
269: aload         7
271: invokestatic  #106
274: ldc           #107
276: invokestatic  #62
279: aload         8
281: invokestatic  #47
284: aload         8
286: invokestatic  #106
289: ldc           #107
291: invokestatic  #62
294: new           #14
297: dup
298: invokespecial #15
301: ldc           #16
303: invokevirtual #17
306: iload         9
308: invokevirtual #18
311: ldc           #19
313: invokevirtual #17
316: iconst_1
317: invokevirtual #18
320: ldc           #16
322: invokevirtual #17
325: invokevirtual #20
328: iload         9
330: iconst_1
331: if_icmpne     338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #21
342: aload         10
344: invokestatic  #47
347: aload         10
349: invokestatic  #106
352: ldc           #65
354: invokestatic  #62
357: aload         11
359: invokestatic  #47
362: aload         11
364: invokestatic  #106
367: ldc           #65
369: invokestatic  #62
372: new           #14
375: dup
376: invokespecial #15
379: ldc           #16
381: invokevirtual #17
384: iload         13
386: invokevirtual #18
389: ldc           #19
391: invokevirtual #17
394: iconst_0
395: invokevirtual #18
398: ldc           #16
400: invokevirtual #17
403: invokevirtual #20
406: iload         13
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #21
419: new           #14
422: dup
423: invokespecial #15
426: ldc           #16
428: invokevirtual #17
431: iload         14
433: invokevirtual #18
436: ldc           #19
438: invokevirtual #17
441: iconst_1
442: invokevirtual #18
445: ldc           #16
447: invokevirtual #17
450: invokevirtual #20
453: iload         14
455: iconst_1
456: if_icmpne     463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #21
467: new           #14
470: dup
471: invokespecial #15
474: ldc           #16
476: invokevirtual #17
479: iload         15
481: invokevirtual #48
484: ldc           #19
486: invokevirtual #17
489: iconst_m1
490: invokevirtual #48
493: ldc           #16
495: invokevirtual #17
498: invokevirtual #20
501: iload         15
503: iconst_m1
504: if_icmpne     511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #21
515: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 4523
End line: 4632
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ArrayUtils.subarray(wildcardClassArray31, (int) (short) 0, (int) (byte) 1);
        java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray39);
        java.lang.Class[] classArray42 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        java.lang.Class<?> wildcardClass44 = null;
        java.lang.Class[] classArray46 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        wildcardClassArray47[0] = wildcardClass44;
        boolean boolean51 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray42, wildcardClassArray47, true);
        java.lang.Class[] classArray53 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        java.lang.Class<?> wildcardClass55 = null;
        java.lang.Class[] classArray57 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass55;
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray53, wildcardClassArray58, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray58);
        boolean boolean64 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray47, wildcardClassArray58);
        java.lang.reflect.Type[] typeArray65 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray58);
        java.lang.Class[] classArray67 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray68 = (java.lang.Class<?>[]) classArray67;
        java.lang.Class<?> wildcardClass69 = null;
        java.lang.Class[] classArray71 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray72 = (java.lang.Class<?>[]) classArray71;
        wildcardClassArray72[0] = wildcardClass69;
        boolean boolean76 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray67, wildcardClassArray72, true);
        boolean boolean77 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray58, wildcardClassArray72);
        boolean boolean79 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray40, wildcardClassArray58, true);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(wildcardClassArray40);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertNotNull(classArray67);
        org.junit.Assert.assertNotNull(wildcardClassArray68);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(wildcardClassArray72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #317
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: iconst_0
68: anewarray     #39
71: astore        7
73: aload         7
75: checkcast     #40
78: astore        8
80: aconst_null
81: astore        9
83: iconst_1
84: anewarray     #39
87: astore        10
89: aload         10
91: checkcast     #40
94: astore        11
96: aload         11
98: iconst_0
99: aload         9
101: aastore
102: aload         7
104: checkcast     #40
107: aload         11
109: iconst_1
110: invokestatic  #41
113: istore        12
115: aload         11
117: invokestatic  #42
120: astore        13
122: aload         5
124: aload         11
126: invokestatic  #43
129: istore        14
131: aload         11
133: checkcast     #44
136: invokestatic  #32
139: astore        15
141: iconst_0
142: anewarray     #39
145: astore        16
147: aload         16
149: checkcast     #40
152: astore        17
154: aconst_null
155: astore        18
157: iconst_1
158: anewarray     #39
161: astore        19
163: aload         19
165: checkcast     #40
168: astore        20
170: aload         20
172: iconst_0
173: aload         18
175: aastore
176: aload         16
178: checkcast     #40
181: aload         20
183: iconst_1
184: invokestatic  #41
187: istore        21
189: aload         11
191: aload         20
193: invokestatic  #43
196: istore        22
198: aload         20
200: iconst_0
201: iconst_1
202: invokestatic  #69
205: checkcast     #40
208: astore        23
210: aload         23
212: checkcast     #45
215: invokestatic  #59
218: astore        24
220: iconst_0
221: anewarray     #39
224: astore        25
226: aload         25
228: checkcast     #40
231: astore        26
233: aconst_null
234: astore        27
236: iconst_1
237: anewarray     #39
240: astore        28
242: aload         28
244: checkcast     #40
247: astore        29
249: aload         29
251: iconst_0
252: aload         27
254: aastore
255: aload         25
257: checkcast     #40
260: aload         29
262: iconst_1
263: invokestatic  #41
266: istore        30
268: iconst_0
269: anewarray     #39
272: astore        31
274: aload         31
276: checkcast     #40
279: astore        32
281: aconst_null
282: astore        33
284: iconst_1
285: anewarray     #39
288: astore        34
290: aload         34
292: checkcast     #40
295: astore        35
297: aload         35
299: iconst_0
300: aload         33
302: aastore
303: aload         31
305: checkcast     #40
308: aload         35
310: iconst_1
311: invokestatic  #41
314: istore        36
316: aload         35
318: invokestatic  #42
321: astore        37
323: aload         29
325: aload         35
327: invokestatic  #43
330: istore        38
332: aload         35
334: checkcast     #44
337: invokestatic  #32
340: astore        39
342: iconst_0
343: anewarray     #39
346: astore        40
348: aload         40
350: checkcast     #40
353: astore        41
355: aconst_null
356: astore        42
358: iconst_1
359: anewarray     #39
362: astore        43
364: aload         43
366: checkcast     #40
369: astore        44
371: aload         44
373: iconst_0
374: aload         42
376: aastore
377: aload         40
379: checkcast     #40
382: aload         44
384: iconst_1
385: invokestatic  #41
388: istore        45
390: aload         35
392: aload         44
394: invokestatic  #43
397: istore        46
399: aload         24
401: aload         35
403: iconst_1
404: invokestatic  #41
407: istore        47
409: aload_1
410: invokestatic  #47
413: aload_2
414: invokestatic  #47
417: aload         4
419: invokestatic  #47
422: aload         5
424: invokestatic  #47
427: new           #14
430: dup
431: invokespecial #15
434: ldc           #16
436: invokevirtual #17
439: iload         6
441: invokevirtual #18
444: ldc           #19
446: invokevirtual #17
449: iconst_0
450: invokevirtual #18
453: ldc           #16
455: invokevirtual #17
458: invokevirtual #20
461: iload         6
463: ifne          470
466: iconst_1
467: goto          471
470: iconst_0
471: invokestatic  #21
474: aload         7
476: invokestatic  #47
479: aload         8
481: invokestatic  #47
484: aload         10
486: invokestatic  #47
489: aload         11
491: invokestatic  #47
494: new           #14
497: dup
498: invokespecial #15
501: ldc           #16
503: invokevirtual #17
506: iload         12
508: invokevirtual #18
511: ldc           #19
513: invokevirtual #17
516: iconst_0
517: invokevirtual #18
520: ldc           #16
522: invokevirtual #17
525: invokevirtual #20
528: iload         12
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #21
541: aload         13
543: invokestatic  #47
546: new           #14
549: dup
550: invokespecial #15
553: ldc           #16
555: invokevirtual #17
558: iload         14
560: invokevirtual #18
563: ldc           #19
565: invokevirtual #17
568: iconst_0
569: invokevirtual #18
572: ldc           #16
574: invokevirtual #17
577: invokevirtual #20
580: iload         14
582: ifne          589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #21
593: aload         15
595: invokestatic  #47
598: aload         16
600: invokestatic  #47
603: aload         17
605: invokestatic  #47
608: aload         19
610: invokestatic  #47
613: aload         20
615: invokestatic  #47
618: new           #14
621: dup
622: invokespecial #15
625: ldc           #16
627: invokevirtual #17
630: iload         21
632: invokevirtual #18
635: ldc           #19
637: invokevirtual #17
640: iconst_0
641: invokevirtual #18
644: ldc           #16
646: invokevirtual #17
649: invokevirtual #20
652: iload         21
654: ifne          661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #21
665: new           #14
668: dup
669: invokespecial #15
672: ldc           #16
674: invokevirtual #17
677: iload         22
679: invokevirtual #18
682: ldc           #19
684: invokevirtual #17
687: iconst_0
688: invokevirtual #18
691: ldc           #16
693: invokevirtual #17
696: invokevirtual #20
699: iload         22
701: ifne          708
704: iconst_1
705: goto          709
708: iconst_0
709: invokestatic  #21
712: aload         23
714: invokestatic  #47
717: aload         24
719: invokestatic  #47
722: aload         25
724: invokestatic  #47
727: aload         26
729: invokestatic  #47
732: aload         28
734: invokestatic  #47
737: aload         29
739: invokestatic  #47
742: new           #14
745: dup
746: invokespecial #15
749: ldc           #16
751: invokevirtual #17
754: iload         30
756: invokevirtual #18
759: ldc           #19
761: invokevirtual #17
764: iconst_0
765: invokevirtual #18
768: ldc           #16
770: invokevirtual #17
773: invokevirtual #20
776: iload         30
778: ifne          785
781: iconst_1
782: goto          786
785: iconst_0
786: invokestatic  #21
789: aload         31
791: invokestatic  #47
794: aload         32
796: invokestatic  #47
799: aload         34
801: invokestatic  #47
804: aload         35
806: invokestatic  #47
809: new           #14
812: dup
813: invokespecial #15
816: ldc           #16
818: invokevirtual #17
821: iload         36
823: invokevirtual #18
826: ldc           #19
828: invokevirtual #17
831: iconst_0
832: invokevirtual #18
835: ldc           #16
837: invokevirtual #17
840: invokevirtual #20
843: iload         36
845: ifne          852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #21
856: aload         37
858: invokestatic  #47
861: new           #14
864: dup
865: invokespecial #15
868: ldc           #16
870: invokevirtual #17
873: iload         38
875: invokevirtual #18
878: ldc           #19
880: invokevirtual #17
883: iconst_0
884: invokevirtual #18
887: ldc           #16
889: invokevirtual #17
892: invokevirtual #20
895: iload         38
897: ifne          904
900: iconst_1
901: goto          905
904: iconst_0
905: invokestatic  #21
908: aload         39
910: invokestatic  #47
913: aload         40
915: invokestatic  #47
918: aload         41
920: invokestatic  #47
923: aload         43
925: invokestatic  #47
928: aload         44
930: invokestatic  #47
933: new           #14
936: dup
937: invokespecial #15
940: ldc           #16
942: invokevirtual #17
945: iload         45
947: invokevirtual #18
950: ldc           #19
952: invokevirtual #17
955: iconst_0
956: invokevirtual #18
959: ldc           #16
961: invokevirtual #17
964: invokevirtual #20
967: iload         45
969: ifne          976
972: iconst_1
973: goto          977
976: iconst_0
977: invokestatic  #21
980: new           #14
983: dup
984: invokespecial #15
987: ldc           #16
989: invokevirtual #17
992: iload         46
994: invokevirtual #18
997: ldc           #19
999: invokevirtual #17
1002: iconst_0
1003: invokevirtual #18
1006: ldc           #16
1008: invokevirtual #17
1011: invokevirtual #20
1014: iload         46
1016: ifne          1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #21
1027: new           #14
1030: dup
1031: invokespecial #15
1034: ldc           #16
1036: invokevirtual #17
1039: iload         47
1041: invokevirtual #18
1044: ldc           #19
1046: invokevirtual #17
1049: iconst_0
1050: invokevirtual #18
1053: ldc           #16
1055: invokevirtual #17
1058: invokevirtual #20
1061: iload         47
1063: ifne          1070
1066: iconst_1
1067: goto          1071
1070: iconst_0
1071: invokestatic  #21
1074: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 4635
End line: 4671
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6);
        short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) (byte) 1);
        short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray9);
        java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 1, (short) 0, (short) 0, (short) -1, (short) -1, (short) 1 };
        java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray17);
        short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) (byte) 1);
        short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray20);
        boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray10, shortArray20);
        short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray20, 10, (int) 'a');
        short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray25, (short) (byte) 100);
        java.lang.reflect.Type type28 = null;
        boolean boolean29 = org.apache.commons.lang3.reflect.TypeUtils.isInstance((java.lang.Object) shortArray25, type28);
        int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray25, (short) (byte) 1, (int) '#');
        org.junit.Assert.assertNotNull(shortArray6);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertNotNull(shortArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray17);
        org.junit.Assert.assertNotNull(shortArray18);
        org.junit.Assert.assertNotNull(shortArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 0, 0, -1, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(shortArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]");
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #318
20: aastore
21: invokevirtual #7
24: pop
25: bipush        6
27: anewarray     #102
30: dup
31: iconst_0
32: iconst_1
33: invokestatic  #103
36: aastore
37: dup
38: iconst_1
39: iconst_0
40: invokestatic  #103
43: aastore
44: dup
45: iconst_2
46: iconst_0
47: invokestatic  #103
50: aastore
51: dup
52: iconst_3
53: iconst_m1
54: invokestatic  #103
57: aastore
58: dup
59: iconst_4
60: iconst_m1
61: invokestatic  #103
64: aastore
65: dup
66: iconst_5
67: iconst_1
68: invokestatic  #103
71: aastore
72: astore_1
73: aload_1
74: invokestatic  #104
77: astore_2
78: aload_1
79: iconst_1
80: invokestatic  #105
83: astore_3
84: aload_3
85: invokestatic  #286
88: astore        4
90: bipush        6
92: anewarray     #102
95: dup
96: iconst_0
97: iconst_1
98: invokestatic  #103
101: aastore
102: dup
103: iconst_1
104: iconst_0
105: invokestatic  #103
108: aastore
109: dup
110: iconst_2
111: iconst_0
112: invokestatic  #103
115: aastore
116: dup
117: iconst_3
118: iconst_m1
119: invokestatic  #103
122: aastore
123: dup
124: iconst_4
125: iconst_m1
126: invokestatic  #103
129: aastore
130: dup
131: iconst_5
132: iconst_1
133: invokestatic  #103
136: aastore
137: astore        5
139: aload         5
141: invokestatic  #104
144: astore        6
146: aload         5
148: iconst_1
149: invokestatic  #105
152: astore        7
154: aload         7
156: invokestatic  #286
159: astore        8
161: aload         4
163: aload         7
165: invokestatic  #287
168: istore        9
170: aload         7
172: bipush        10
174: bipush        97
176: invokestatic  #314
179: astore        10
181: aload         10
183: bipush        100
185: invokestatic  #315
188: astore        11
190: aconst_null
191: astore        12
193: aload         10
195: aload         12
197: invokestatic  #91
200: istore        13
202: aload         10
204: iconst_1
205: bipush        35
207: invokestatic  #316
210: istore        14
212: aload_1
213: invokestatic  #47
216: aload_2
217: invokestatic  #47
220: aload_3
221: invokestatic  #47
224: aload_3
225: invokestatic  #106
228: ldc           #107
230: invokestatic  #62
233: aload         4
235: invokestatic  #47
238: aload         4
240: invokestatic  #106
243: ldc           #107
245: invokestatic  #62
248: aload         5
250: invokestatic  #47
253: aload         6
255: invokestatic  #47
258: aload         7
260: invokestatic  #47
263: aload         7
265: invokestatic  #106
268: ldc           #107
270: invokestatic  #62
273: aload         8
275: invokestatic  #47
278: aload         8
280: invokestatic  #106
283: ldc           #107
285: invokestatic  #62
288: new           #14
291: dup
292: invokespecial #15
295: ldc           #16
297: invokevirtual #17
300: iload         9
302: invokevirtual #18
305: ldc           #19
307: invokevirtual #17
310: iconst_1
311: invokevirtual #18
314: ldc           #16
316: invokevirtual #17
319: invokevirtual #20
322: iload         9
324: iconst_1
325: if_icmpne     332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #21
336: aload         10
338: invokestatic  #47
341: aload         10
343: invokestatic  #106
346: ldc           #65
348: invokestatic  #62
351: aload         11
353: invokestatic  #47
356: aload         11
358: invokestatic  #106
361: ldc           #65
363: invokestatic  #62
366: new           #14
369: dup
370: invokespecial #15
373: ldc           #16
375: invokevirtual #17
378: iload         13
380: invokevirtual #18
383: ldc           #19
385: invokevirtual #17
388: iconst_0
389: invokevirtual #18
392: ldc           #16
394: invokevirtual #17
397: invokevirtual #20
400: iload         13
402: ifne          409
405: iconst_1
406: goto          410
409: iconst_0
410: invokestatic  #21
413: new           #14
416: dup
417: invokespecial #15
420: ldc           #16
422: invokevirtual #17
425: iload         14
427: invokevirtual #48
430: ldc           #19
432: invokevirtual #17
435: iconst_m1
436: invokevirtual #48
439: ldc           #16
441: invokevirtual #17
444: invokevirtual #20
447: iload         14
449: iconst_m1
450: if_icmpne     457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #21
461: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 4674
End line: 4693
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.lang3.reflect.TypeUtils typeUtils0 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils1 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils2 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray5 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils0, typeUtils1, typeUtils2, typeUtils3, typeUtils4 };
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray8 = org.apache.commons.lang3.ArrayUtils.subarray(typeUtilsArray5, 4, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray10 = org.apache.commons.lang3.ArrayUtils.remove(typeUtilsArray5, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeUtilsArray5);
        org.junit.Assert.assertNotNull(typeUtilsArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #319
20: aastore
21: invokevirtual #7
24: pop
25: new           #27
28: dup
29: invokespecial #28
32: astore_1
33: new           #27
36: dup
37: invokespecial #28
40: astore_2
41: new           #27
44: dup
45: invokespecial #28
48: astore_3
49: new           #27
52: dup
53: invokespecial #28
56: astore        4
58: new           #27
61: dup
62: invokespecial #28
65: astore        5
67: iconst_5
68: anewarray     #27
71: dup
72: iconst_0
73: aload_1
74: aastore
75: dup
76: iconst_1
77: aload_2
78: aastore
79: dup
80: iconst_2
81: aload_3
82: aastore
83: dup
84: iconst_3
85: aload         4
87: aastore
88: dup
89: iconst_4
90: aload         5
92: aastore
93: astore        6
95: aload         6
97: iconst_4
98: iconst_1
99: invokestatic  #69
102: checkcast     #68
105: astore        7
107: aload         6
109: iconst_m1
110: invokestatic  #320
113: checkcast     #68
116: astore        8
118: ldc_w         #321
121: invokestatic  #10
124: goto          129
127: astore        8
129: aload         6
131: invokestatic  #47
134: aload         7
136: invokestatic  #47
139: return
Exception table:
from    to  target type
107   124   127   Class java/lang/IndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 4696
End line: 4818
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26);
        java.lang.Class[] classArray29 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29;
        java.lang.Class<?> wildcardClass31 = null;
        java.lang.Class[] classArray33 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass31;
        boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray34, true);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray34);
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class<?> wildcardClass43 = null;
        java.lang.Class[] classArray45 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45;
        wildcardClassArray46[0] = wildcardClass43;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray46, true);
        java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46);
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray34, wildcardClassArray51, true);
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray34, false);
        java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray34);
        java.lang.Class[] classArray58 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        java.lang.Class<?> wildcardClass60 = null;
        java.lang.Class[] classArray62 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray63 = (java.lang.Class<?>[]) classArray62;
        wildcardClassArray63[0] = wildcardClass60;
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray58, wildcardClassArray63, true);
        java.lang.Class<?>[] wildcardClassArray68 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray63);
        boolean boolean69 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray34, wildcardClassArray63);
        java.lang.reflect.Type[] typeArray70 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray63);
        char[] charArray76 = new char[] { '#', '4', ' ', '4', ' ' };
        char[] charArray81 = new char[] { '#', 'a', '4', ' ' };
        boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray76, charArray81);
        boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray76);
        char[] charArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray76);
        int int86 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray63, (java.lang.Object) charArray76, 4);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClassArray30);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray45);
        org.junit.Assert.assertNotNull(wildcardClassArray46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "#4 4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "#4 4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, 4,  , 4,  ]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a, 4,  ]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "#4 4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "#4 4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[#, 4,  , 4,  ]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #322
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: aload         5
69: invokestatic  #42
72: astore        7
74: iconst_0
75: anewarray     #39
78: astore        8
80: aload         8
82: checkcast     #40
85: astore        9
87: aconst_null
88: astore        10
90: iconst_1
91: anewarray     #39
94: astore        11
96: aload         11
98: checkcast     #40
101: astore        12
103: aload         12
105: iconst_0
106: aload         10
108: aastore
109: aload         8
111: checkcast     #40
114: aload         12
116: iconst_1
117: invokestatic  #41
120: istore        13
122: aload         8
124: checkcast     #40
127: invokestatic  #42
130: astore        14
132: aload         5
134: aload         14
136: invokestatic  #43
139: istore        15
141: aload         5
143: checkcast     #44
146: invokestatic  #32
149: astore        16
151: aload         5
153: invokestatic  #53
156: astore        17
158: aload         17
160: invokestatic  #53
163: astore        18
165: iconst_0
166: anewarray     #39
169: astore        19
171: aload         19
173: checkcast     #40
176: astore        20
178: aconst_null
179: astore        21
181: iconst_1
182: anewarray     #39
185: astore        22
187: aload         22
189: checkcast     #40
192: astore        23
194: aload         23
196: iconst_0
197: aload         21
199: aastore
200: aload         19
202: checkcast     #40
205: aload         23
207: iconst_1
208: invokestatic  #41
211: istore        24
213: aload         23
215: invokestatic  #42
218: astore        25
220: iconst_0
221: anewarray     #39
224: astore        26
226: aload         26
228: checkcast     #40
231: astore        27
233: aconst_null
234: astore        28
236: iconst_1
237: anewarray     #39
240: astore        29
242: aload         29
244: checkcast     #40
247: astore        30
249: aload         30
251: iconst_0
252: aload         28
254: aastore
255: aload         26
257: checkcast     #40
260: aload         30
262: iconst_1
263: invokestatic  #41
266: istore        31
268: aload         30
270: invokestatic  #42
273: astore        32
275: aload         23
277: aload         32
279: iconst_1
280: invokestatic  #41
283: istore        33
285: aload         17
287: aload         23
289: iconst_0
290: invokestatic  #41
293: istore        34
295: aload         23
297: invokestatic  #42
300: astore        35
302: iconst_0
303: anewarray     #39
306: astore        36
308: aload         36
310: checkcast     #40
313: astore        37
315: aconst_null
316: astore        38
318: iconst_1
319: anewarray     #39
322: astore        39
324: aload         39
326: checkcast     #40
329: astore        40
331: aload         40
333: iconst_0
334: aload         38
336: aastore
337: aload         36
339: checkcast     #40
342: aload         40
344: iconst_1
345: invokestatic  #41
348: istore        41
350: aload         40
352: invokestatic  #42
355: astore        42
357: aload         23
359: aload         40
361: invokestatic  #43
364: istore        43
366: aload         40
368: checkcast     #44
371: invokestatic  #32
374: astore        44
376: iconst_5
377: newarray       char
379: dup
380: iconst_0
381: bipush        35
383: castore
384: dup
385: iconst_1
386: bipush        52
388: castore
389: dup
390: iconst_2
391: bipush        32
393: castore
394: dup
395: iconst_3
396: bipush        52
398: castore
399: dup
400: iconst_4
401: bipush        32
403: castore
404: astore        45
406: iconst_4
407: newarray       char
409: dup
410: iconst_0
411: bipush        35
413: castore
414: dup
415: iconst_1
416: bipush        97
418: castore
419: dup
420: iconst_2
421: bipush        52
423: castore
424: dup
425: iconst_3
426: bipush        32
428: castore
429: astore        46
431: aload         45
433: aload         46
435: invokestatic  #74
438: istore        47
440: aload         45
442: invokestatic  #323
445: istore        48
447: aload         45
449: invokestatic  #75
452: astore        49
454: aload         40
456: checkcast     #45
459: aload         45
461: iconst_4
462: invokestatic  #46
465: istore        50
467: aload_1
468: invokestatic  #47
471: aload_2
472: invokestatic  #47
475: aload         4
477: invokestatic  #47
480: aload         5
482: invokestatic  #47
485: new           #14
488: dup
489: invokespecial #15
492: ldc           #16
494: invokevirtual #17
497: iload         6
499: invokevirtual #18
502: ldc           #19
504: invokevirtual #17
507: iconst_0
508: invokevirtual #18
511: ldc           #16
513: invokevirtual #17
516: invokevirtual #20
519: iload         6
521: ifne          528
524: iconst_1
525: goto          529
528: iconst_0
529: invokestatic  #21
532: aload         7
534: invokestatic  #47
537: aload         8
539: invokestatic  #47
542: aload         9
544: invokestatic  #47
547: aload         11
549: invokestatic  #47
552: aload         12
554: invokestatic  #47
557: new           #14
560: dup
561: invokespecial #15
564: ldc           #16
566: invokevirtual #17
569: iload         13
571: invokevirtual #18
574: ldc           #19
576: invokevirtual #17
579: iconst_0
580: invokevirtual #18
583: ldc           #16
585: invokevirtual #17
588: invokevirtual #20
591: iload         13
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #21
604: aload         14
606: invokestatic  #47
609: new           #14
612: dup
613: invokespecial #15
616: ldc           #16
618: invokevirtual #17
621: iload         15
623: invokevirtual #18
626: ldc           #19
628: invokevirtual #17
631: iconst_0
632: invokevirtual #18
635: ldc           #16
637: invokevirtual #17
640: invokevirtual #20
643: iload         15
645: ifne          652
648: iconst_1
649: goto          653
652: iconst_0
653: invokestatic  #21
656: aload         16
658: invokestatic  #47
661: aload         17
663: invokestatic  #47
666: aload         18
668: invokestatic  #47
671: aload         19
673: invokestatic  #47
676: aload         20
678: invokestatic  #47
681: aload         22
683: invokestatic  #47
686: aload         23
688: invokestatic  #47
691: new           #14
694: dup
695: invokespecial #15
698: ldc           #16
700: invokevirtual #17
703: iload         24
705: invokevirtual #18
708: ldc           #19
710: invokevirtual #17
713: iconst_0
714: invokevirtual #18
717: ldc           #16
719: invokevirtual #17
722: invokevirtual #20
725: iload         24
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #21
738: aload         25
740: invokestatic  #47
743: aload         26
745: invokestatic  #47
748: aload         27
750: invokestatic  #47
753: aload         29
755: invokestatic  #47
758: aload         30
760: invokestatic  #47
763: new           #14
766: dup
767: invokespecial #15
770: ldc           #16
772: invokevirtual #17
775: iload         31
777: invokevirtual #18
780: ldc           #19
782: invokevirtual #17
785: iconst_0
786: invokevirtual #18
789: ldc           #16
791: invokevirtual #17
794: invokevirtual #20
797: iload         31
799: ifne          806
802: iconst_1
803: goto          807
806: iconst_0
807: invokestatic  #21
810: aload         32
812: invokestatic  #47
815: new           #14
818: dup
819: invokespecial #15
822: ldc           #16
824: invokevirtual #17
827: iload         33
829: invokevirtual #18
832: ldc           #19
834: invokevirtual #17
837: iconst_0
838: invokevirtual #18
841: ldc           #16
843: invokevirtual #17
846: invokevirtual #20
849: iload         33
851: ifne          858
854: iconst_1
855: goto          859
858: iconst_0
859: invokestatic  #21
862: new           #14
865: dup
866: invokespecial #15
869: ldc           #16
871: invokevirtual #17
874: iload         34
876: invokevirtual #18
879: ldc           #19
881: invokevirtual #17
884: iconst_0
885: invokevirtual #18
888: ldc           #16
890: invokevirtual #17
893: invokevirtual #20
896: iload         34
898: ifne          905
901: iconst_1
902: goto          906
905: iconst_0
906: invokestatic  #21
909: aload         35
911: invokestatic  #47
914: aload         36
916: invokestatic  #47
919: aload         37
921: invokestatic  #47
924: aload         39
926: invokestatic  #47
929: aload         40
931: invokestatic  #47
934: new           #14
937: dup
938: invokespecial #15
941: ldc           #16
943: invokevirtual #17
946: iload         41
948: invokevirtual #18
951: ldc           #19
953: invokevirtual #17
956: iconst_0
957: invokevirtual #18
960: ldc           #16
962: invokevirtual #17
965: invokevirtual #20
968: iload         41
970: ifne          977
973: iconst_1
974: goto          978
977: iconst_0
978: invokestatic  #21
981: aload         42
983: invokestatic  #47
986: new           #14
989: dup
990: invokespecial #15
993: ldc           #16
995: invokevirtual #17
998: iload         43
1000: invokevirtual #18
1003: ldc           #19
1005: invokevirtual #17
1008: iconst_0
1009: invokevirtual #18
1012: ldc           #16
1014: invokevirtual #17
1017: invokevirtual #20
1020: iload         43
1022: ifne          1029
1025: iconst_1
1026: goto          1030
1029: iconst_0
1030: invokestatic  #21
1033: aload         44
1035: invokestatic  #47
1038: aload         45
1040: invokestatic  #47
1043: aload         45
1045: invokestatic  #60
1048: ldc           #92
1050: invokestatic  #62
1053: aload         45
1055: invokestatic  #63
1058: ldc           #92
1060: invokestatic  #62
1063: aload         45
1065: invokestatic  #64
1068: ldc           #93
1070: invokestatic  #62
1073: aload         46
1075: invokestatic  #47
1078: aload         46
1080: invokestatic  #60
1083: ldc           #94
1085: invokestatic  #62
1088: aload         46
1090: invokestatic  #63
1093: ldc           #94
1095: invokestatic  #62
1098: aload         46
1100: invokestatic  #64
1103: ldc           #95
1105: invokestatic  #62
1108: new           #14
1111: dup
1112: invokespecial #15
1115: ldc           #16
1117: invokevirtual #17
1120: iload         47
1122: invokevirtual #18
1125: ldc           #19
1127: invokevirtual #17
1130: iconst_0
1131: invokevirtual #18
1134: ldc           #16
1136: invokevirtual #17
1139: invokevirtual #20
1142: iload         47
1144: ifne          1151
1147: iconst_1
1148: goto          1152
1151: iconst_0
1152: invokestatic  #21
1155: new           #14
1158: dup
1159: invokespecial #15
1162: ldc           #16
1164: invokevirtual #17
1167: iload         48
1169: invokevirtual #18
1172: ldc           #19
1174: invokevirtual #17
1177: iconst_0
1178: invokevirtual #18
1181: ldc           #16
1183: invokevirtual #17
1186: invokevirtual #20
1189: iload         48
1191: ifne          1198
1194: iconst_1
1195: goto          1199
1198: iconst_0
1199: invokestatic  #21
1202: aload         49
1204: invokestatic  #47
1207: aload         49
1209: invokestatic  #60
1212: ldc           #92
1214: invokestatic  #62
1217: aload         49
1219: invokestatic  #63
1222: ldc           #92
1224: invokestatic  #62
1227: aload         49
1229: invokestatic  #64
1232: ldc           #93
1234: invokestatic  #62
1237: new           #14
1240: dup
1241: invokespecial #15
1244: ldc           #16
1246: invokevirtual #17
1249: iload         50
1251: invokevirtual #48
1254: ldc           #19
1256: invokevirtual #17
1259: iconst_m1
1260: invokevirtual #48
1263: ldc           #16
1265: invokevirtual #17
1268: invokevirtual #20
1271: iload         50
1273: iconst_m1
1274: if_icmpne     1281
1277: iconst_1
1278: goto          1282
1281: iconst_0
1282: invokestatic  #21
1285: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 4821
End line: 4944
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class[] classArray12 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        java.lang.Class<?> wildcardClass14 = null;
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray17, true);
        java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17);
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray17);
        java.lang.reflect.Type[] typeArray24 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray17);
        java.lang.Class[] classArray26 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        java.lang.Class<?> wildcardClass28 = null;
        java.lang.Class[] classArray30 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        wildcardClassArray31[0] = wildcardClass28;
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray26, wildcardClassArray31, true);
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray31);
        java.lang.Class[] classArray38 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray43, true);
        java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43);
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        java.lang.Class<?> wildcardClass52 = null;
        java.lang.Class[] classArray54 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass52;
        boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray55, true);
        java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray55);
        boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray60, true);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY;
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63, false);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray63, true);
        java.lang.Class<?>[] wildcardClassArray68 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray63);
        java.lang.Class<?>[] wildcardClassArray69 = null;
        java.lang.Class[] classArray71 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray72 = (java.lang.Class<?>[]) classArray71;
        java.lang.Class[] classArray74 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        java.lang.Class<?> wildcardClass76 = null;
        java.lang.Class[] classArray78 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass76;
        boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray74, wildcardClassArray79, true);
        boolean boolean84 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray71, (java.lang.Class<?>[]) classArray74);
        boolean boolean85 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray69, (java.lang.Class<?>[]) classArray74);
        java.lang.Class<?>[] wildcardClassArray86 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray74);
        boolean boolean88 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray63, (java.lang.Class<?>[]) classArray74, true);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray68);
        org.junit.Assert.assertNotNull(classArray71);
        org.junit.Assert.assertNotNull(wildcardClassArray72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #324
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: iconst_0
68: anewarray     #39
71: astore        7
73: aload         7
75: checkcast     #40
78: astore        8
80: aconst_null
81: astore        9
83: iconst_1
84: anewarray     #39
87: astore        10
89: aload         10
91: checkcast     #40
94: astore        11
96: aload         11
98: iconst_0
99: aload         9
101: aastore
102: aload         7
104: checkcast     #40
107: aload         11
109: iconst_1
110: invokestatic  #41
113: istore        12
115: aload         11
117: invokestatic  #42
120: astore        13
122: aload         5
124: aload         11
126: invokestatic  #43
129: istore        14
131: aload         11
133: checkcast     #44
136: invokestatic  #32
139: astore        15
141: iconst_0
142: anewarray     #39
145: astore        16
147: aload         16
149: checkcast     #40
152: astore        17
154: aconst_null
155: astore        18
157: iconst_1
158: anewarray     #39
161: astore        19
163: aload         19
165: checkcast     #40
168: astore        20
170: aload         20
172: iconst_0
173: aload         18
175: aastore
176: aload         16
178: checkcast     #40
181: aload         20
183: iconst_1
184: invokestatic  #41
187: istore        21
189: aload         11
191: aload         20
193: invokestatic  #43
196: istore        22
198: iconst_0
199: anewarray     #39
202: astore        23
204: aload         23
206: checkcast     #40
209: astore        24
211: aconst_null
212: astore        25
214: iconst_1
215: anewarray     #39
218: astore        26
220: aload         26
222: checkcast     #40
225: astore        27
227: aload         27
229: iconst_0
230: aload         25
232: aastore
233: aload         23
235: checkcast     #40
238: aload         27
240: iconst_1
241: invokestatic  #41
244: istore        28
246: aload         27
248: invokestatic  #42
251: astore        29
253: iconst_0
254: anewarray     #39
257: astore        30
259: aload         30
261: checkcast     #40
264: astore        31
266: aconst_null
267: astore        32
269: iconst_1
270: anewarray     #39
273: astore        33
275: aload         33
277: checkcast     #40
280: astore        34
282: aload         34
284: iconst_0
285: aload         32
287: aastore
288: aload         30
290: checkcast     #40
293: aload         34
295: iconst_1
296: invokestatic  #41
299: istore        35
301: aload         34
303: invokestatic  #42
306: astore        36
308: aload         27
310: aload         36
312: iconst_1
313: invokestatic  #41
316: istore        37
318: getstatic     #52
321: astore        38
323: aload         27
325: aload         38
327: iconst_0
328: invokestatic  #41
331: istore        39
333: aload         20
335: aload         38
337: iconst_1
338: invokestatic  #41
341: istore        40
343: aload         38
345: invokestatic  #53
348: astore        41
350: aconst_null
351: astore        42
353: iconst_0
354: anewarray     #39
357: astore        43
359: aload         43
361: checkcast     #40
364: astore        44
366: iconst_0
367: anewarray     #39
370: astore        45
372: aload         45
374: checkcast     #40
377: astore        46
379: aconst_null
380: astore        47
382: iconst_1
383: anewarray     #39
386: astore        48
388: aload         48
390: checkcast     #40
393: astore        49
395: aload         49
397: iconst_0
398: aload         47
400: aastore
401: aload         45
403: checkcast     #40
406: aload         49
408: iconst_1
409: invokestatic  #41
412: istore        50
414: aload         43
416: checkcast     #40
419: aload         45
421: checkcast     #40
424: invokestatic  #43
427: istore        51
429: aload         42
431: aload         45
433: checkcast     #40
436: invokestatic  #43
439: istore        52
441: aload         45
443: checkcast     #40
446: invokestatic  #42
449: astore        53
451: aload         38
453: aload         45
455: checkcast     #40
458: iconst_1
459: invokestatic  #41
462: istore        54
464: aload_1
465: invokestatic  #47
468: aload_2
469: invokestatic  #47
472: aload         4
474: invokestatic  #47
477: aload         5
479: invokestatic  #47
482: new           #14
485: dup
486: invokespecial #15
489: ldc           #16
491: invokevirtual #17
494: iload         6
496: invokevirtual #18
499: ldc           #19
501: invokevirtual #17
504: iconst_0
505: invokevirtual #18
508: ldc           #16
510: invokevirtual #17
513: invokevirtual #20
516: iload         6
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #21
529: aload         7
531: invokestatic  #47
534: aload         8
536: invokestatic  #47
539: aload         10
541: invokestatic  #47
544: aload         11
546: invokestatic  #47
549: new           #14
552: dup
553: invokespecial #15
556: ldc           #16
558: invokevirtual #17
561: iload         12
563: invokevirtual #18
566: ldc           #19
568: invokevirtual #17
571: iconst_0
572: invokevirtual #18
575: ldc           #16
577: invokevirtual #17
580: invokevirtual #20
583: iload         12
585: ifne          592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #21
596: aload         13
598: invokestatic  #47
601: new           #14
604: dup
605: invokespecial #15
608: ldc           #16
610: invokevirtual #17
613: iload         14
615: invokevirtual #18
618: ldc           #19
620: invokevirtual #17
623: iconst_0
624: invokevirtual #18
627: ldc           #16
629: invokevirtual #17
632: invokevirtual #20
635: iload         14
637: ifne          644
640: iconst_1
641: goto          645
644: iconst_0
645: invokestatic  #21
648: aload         15
650: invokestatic  #47
653: aload         16
655: invokestatic  #47
658: aload         17
660: invokestatic  #47
663: aload         19
665: invokestatic  #47
668: aload         20
670: invokestatic  #47
673: new           #14
676: dup
677: invokespecial #15
680: ldc           #16
682: invokevirtual #17
685: iload         21
687: invokevirtual #18
690: ldc           #19
692: invokevirtual #17
695: iconst_0
696: invokevirtual #18
699: ldc           #16
701: invokevirtual #17
704: invokevirtual #20
707: iload         21
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #21
720: new           #14
723: dup
724: invokespecial #15
727: ldc           #16
729: invokevirtual #17
732: iload         22
734: invokevirtual #18
737: ldc           #19
739: invokevirtual #17
742: iconst_0
743: invokevirtual #18
746: ldc           #16
748: invokevirtual #17
751: invokevirtual #20
754: iload         22
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #21
767: aload         23
769: invokestatic  #47
772: aload         24
774: invokestatic  #47
777: aload         26
779: invokestatic  #47
782: aload         27
784: invokestatic  #47
787: new           #14
790: dup
791: invokespecial #15
794: ldc           #16
796: invokevirtual #17
799: iload         28
801: invokevirtual #18
804: ldc           #19
806: invokevirtual #17
809: iconst_0
810: invokevirtual #18
813: ldc           #16
815: invokevirtual #17
818: invokevirtual #20
821: iload         28
823: ifne          830
826: iconst_1
827: goto          831
830: iconst_0
831: invokestatic  #21
834: aload         29
836: invokestatic  #47
839: aload         30
841: invokestatic  #47
844: aload         31
846: invokestatic  #47
849: aload         33
851: invokestatic  #47
854: aload         34
856: invokestatic  #47
859: new           #14
862: dup
863: invokespecial #15
866: ldc           #16
868: invokevirtual #17
871: iload         35
873: invokevirtual #18
876: ldc           #19
878: invokevirtual #17
881: iconst_0
882: invokevirtual #18
885: ldc           #16
887: invokevirtual #17
890: invokevirtual #20
893: iload         35
895: ifne          902
898: iconst_1
899: goto          903
902: iconst_0
903: invokestatic  #21
906: aload         36
908: invokestatic  #47
911: new           #14
914: dup
915: invokespecial #15
918: ldc           #16
920: invokevirtual #17
923: iload         37
925: invokevirtual #18
928: ldc           #19
930: invokevirtual #17
933: iconst_0
934: invokevirtual #18
937: ldc           #16
939: invokevirtual #17
942: invokevirtual #20
945: iload         37
947: ifne          954
950: iconst_1
951: goto          955
954: iconst_0
955: invokestatic  #21
958: aload         38
960: invokestatic  #47
963: new           #14
966: dup
967: invokespecial #15
970: ldc           #16
972: invokevirtual #17
975: iload         39
977: invokevirtual #18
980: ldc           #19
982: invokevirtual #17
985: iconst_0
986: invokevirtual #18
989: ldc           #16
991: invokevirtual #17
994: invokevirtual #20
997: iload         39
999: ifne          1006
1002: iconst_1
1003: goto          1007
1006: iconst_0
1007: invokestatic  #21
1010: new           #14
1013: dup
1014: invokespecial #15
1017: ldc           #16
1019: invokevirtual #17
1022: iload         40
1024: invokevirtual #18
1027: ldc           #19
1029: invokevirtual #17
1032: iconst_0
1033: invokevirtual #18
1036: ldc           #16
1038: invokevirtual #17
1041: invokevirtual #20
1044: iload         40
1046: ifne          1053
1049: iconst_1
1050: goto          1054
1053: iconst_0
1054: invokestatic  #21
1057: aload         41
1059: invokestatic  #47
1062: aload         43
1064: invokestatic  #47
1067: aload         44
1069: invokestatic  #47
1072: aload         45
1074: invokestatic  #47
1077: aload         46
1079: invokestatic  #47
1082: aload         48
1084: invokestatic  #47
1087: aload         49
1089: invokestatic  #47
1092: new           #14
1095: dup
1096: invokespecial #15
1099: ldc           #16
1101: invokevirtual #17
1104: iload         50
1106: invokevirtual #18
1109: ldc           #19
1111: invokevirtual #17
1114: iconst_0
1115: invokevirtual #18
1118: ldc           #16
1120: invokevirtual #17
1123: invokevirtual #20
1126: iload         50
1128: ifne          1135
1131: iconst_1
1132: goto          1136
1135: iconst_0
1136: invokestatic  #21
1139: new           #14
1142: dup
1143: invokespecial #15
1146: ldc           #16
1148: invokevirtual #17
1151: iload         51
1153: invokevirtual #18
1156: ldc           #19
1158: invokevirtual #17
1161: iconst_1
1162: invokevirtual #18
1165: ldc           #16
1167: invokevirtual #17
1170: invokevirtual #20
1173: iload         51
1175: iconst_1
1176: if_icmpne     1183
1179: iconst_1
1180: goto          1184
1183: iconst_0
1184: invokestatic  #21
1187: new           #14
1190: dup
1191: invokespecial #15
1194: ldc           #16
1196: invokevirtual #17
1199: iload         52
1201: invokevirtual #18
1204: ldc           #19
1206: invokevirtual #17
1209: iconst_1
1210: invokevirtual #18
1213: ldc           #16
1215: invokevirtual #17
1218: invokevirtual #20
1221: iload         52
1223: iconst_1
1224: if_icmpne     1231
1227: iconst_1
1228: goto          1232
1231: iconst_0
1232: invokestatic  #21
1235: aload         53
1237: invokestatic  #47
1240: new           #14
1243: dup
1244: invokespecial #15
1247: ldc           #16
1249: invokevirtual #17
1252: iload         54
1254: invokevirtual #18
1257: ldc           #19
1259: invokevirtual #17
1262: iconst_1
1263: invokevirtual #18
1266: ldc           #16
1268: invokevirtual #17
1271: invokevirtual #20
1274: iload         54
1276: iconst_1
1277: if_icmpne     1284
1280: iconst_1
1281: goto          1285
1284: iconst_0
1285: invokestatic  #21
1288: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 4947
End line: 4990
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class<?> wildcardClass3 = null;
        java.lang.Class[] classArray5 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5;
        wildcardClassArray6[0] = wildcardClass3;
        boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray6, true);
        java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6);
        java.lang.Class[] classArray13 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        java.lang.Class<?> wildcardClass15 = null;
        java.lang.Class[] classArray17 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        wildcardClassArray18[0] = wildcardClass15;
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray13, wildcardClassArray18, true);
        java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray13);
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray23);
        java.lang.reflect.Type[] typeArray25 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray27 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.reflect.GenericDeclaration[]) wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(genericDeclarationArray27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #325
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: aconst_null
36: astore_3
37: iconst_1
38: anewarray     #39
41: astore        4
43: aload         4
45: checkcast     #40
48: astore        5
50: aload         5
52: iconst_0
53: aload_3
54: aastore
55: aload_1
56: checkcast     #40
59: aload         5
61: iconst_1
62: invokestatic  #41
65: istore        6
67: aload         5
69: invokestatic  #42
72: astore        7
74: iconst_0
75: anewarray     #39
78: astore        8
80: aload         8
82: checkcast     #40
85: astore        9
87: aconst_null
88: astore        10
90: iconst_1
91: anewarray     #39
94: astore        11
96: aload         11
98: checkcast     #40
101: astore        12
103: aload         12
105: iconst_0
106: aload         10
108: aastore
109: aload         8
111: checkcast     #40
114: aload         12
116: iconst_1
117: invokestatic  #41
120: istore        13
122: aload         8
124: checkcast     #40
127: invokestatic  #42
130: astore        14
132: aload         5
134: aload         14
136: invokestatic  #43
139: istore        15
141: aload         5
143: checkcast     #44
146: invokestatic  #32
149: astore        16
151: aload         5
153: invokestatic  #53
156: astore        17
158: aload         17
160: checkcast     #187
163: invokestatic  #188
166: checkcast     #187
169: astore        18
171: aload_1
172: invokestatic  #47
175: aload_2
176: invokestatic  #47
179: aload         4
181: invokestatic  #47
184: aload         5
186: invokestatic  #47
189: new           #14
192: dup
193: invokespecial #15
196: ldc           #16
198: invokevirtual #17
201: iload         6
203: invokevirtual #18
206: ldc           #19
208: invokevirtual #17
211: iconst_0
212: invokevirtual #18
215: ldc           #16
217: invokevirtual #17
220: invokevirtual #20
223: iload         6
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #21
236: aload         7
238: invokestatic  #47
241: aload         8
243: invokestatic  #47
246: aload         9
248: invokestatic  #47
251: aload         11
253: invokestatic  #47
256: aload         12
258: invokestatic  #47
261: new           #14
264: dup
265: invokespecial #15
268: ldc           #16
270: invokevirtual #17
273: iload         13
275: invokevirtual #18
278: ldc           #19
280: invokevirtual #17
283: iconst_0
284: invokevirtual #18
287: ldc           #16
289: invokevirtual #17
292: invokevirtual #20
295: iload         13
297: ifne          304
300: iconst_1
301: goto          305
304: iconst_0
305: invokestatic  #21
308: aload         14
310: invokestatic  #47
313: new           #14
316: dup
317: invokespecial #15
320: ldc           #16
322: invokevirtual #17
325: iload         15
327: invokevirtual #18
330: ldc           #19
332: invokevirtual #17
335: iconst_0
336: invokevirtual #18
339: ldc           #16
341: invokevirtual #17
344: invokevirtual #20
347: iload         15
349: ifne          356
352: iconst_1
353: goto          357
356: iconst_0
357: invokestatic  #21
360: aload         16
362: invokestatic  #47
365: aload         17
367: invokestatic  #47
370: aload         18
372: invokestatic  #47
375: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 4993
End line: 5008
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { false, true, false };
        boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray3, true);
        java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray5);
        boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray5, false);
        java.lang.reflect.Type type9 = null;
        boolean boolean10 = org.apache.commons.lang3.reflect.TypeUtils.isInstance((java.lang.Object) boolean8, type9);
        org.junit.Assert.assertNotNull(booleanArray3);
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true, false]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #326
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: anewarray     #115
29: dup
30: iconst_0
31: iconst_0
32: invokestatic  #123
35: aastore
36: dup
37: iconst_1
38: iconst_1
39: invokestatic  #123
42: aastore
43: dup
44: iconst_2
45: iconst_0
46: invokestatic  #123
49: aastore
50: astore_1
51: aload_1
52: iconst_1
53: invokestatic  #244
56: astore_2
57: aload_2
58: invokestatic  #241
61: astore_3
62: aload_2
63: iconst_0
64: invokestatic  #327
67: istore        4
69: aconst_null
70: astore        5
72: iload         4
74: invokestatic  #123
77: aload         5
79: invokestatic  #91
82: istore        6
84: aload_1
85: invokestatic  #47
88: aload_2
89: invokestatic  #47
92: aload_2
93: invokestatic  #247
96: ldc_w         #328
99: invokestatic  #62
102: aload_3
103: invokestatic  #47
106: new           #14
109: dup
110: invokespecial #15
113: ldc           #16
115: invokevirtual #17
118: iload         4
120: invokevirtual #18
123: ldc           #19
125: invokevirtual #17
128: iconst_1
129: invokevirtual #18
132: ldc           #16
134: invokevirtual #17
137: invokevirtual #20
140: iload         4
142: iconst_1
143: if_icmpne     150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #21
154: new           #14
157: dup
158: invokespecial #15
161: ldc           #16
163: invokevirtual #17
166: iload         6
168: invokevirtual #18
171: ldc           #19
173: invokevirtual #17
176: iconst_0
177: invokevirtual #18
180: ldc           #16
182: invokevirtual #17
185: invokevirtual #20
188: iload         6
190: ifne          197
193: iconst_1
194: goto          198
197: iconst_0
198: invokestatic  #21
201: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 5011
End line: 5059
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.lang3.reflect.TypeUtils[][][] typeUtilsArray0 = new org.apache.commons.lang3.reflect.TypeUtils[][][] {};
        org.apache.commons.lang3.reflect.TypeUtils[][][] typeUtilsArray1 = org.apache.commons.lang3.ArrayUtils.clone(typeUtilsArray0);
        org.apache.commons.lang3.reflect.TypeUtils typeUtils2 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils3 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils4 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils5 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils6 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray7 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils2, typeUtils3, typeUtils4, typeUtils5, typeUtils6 };
        org.apache.commons.lang3.reflect.TypeUtils typeUtils8 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils9 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils10 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils11 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils typeUtils12 = new org.apache.commons.lang3.reflect.TypeUtils();
        org.apache.commons.lang3.reflect.TypeUtils[] typeUtilsArray13 = new org.apache.commons.lang3.reflect.TypeUtils[] { typeUtils8, typeUtils9, typeUtils10, typeUtils11, typeUtils12 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray14 = new org.apache.commons.lang3.reflect.TypeUtils[][] { typeUtilsArray7, typeUtilsArray13 };
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray15 = new org.apache.commons.lang3.reflect.TypeUtils[][] {};
        org.apache.commons.lang3.reflect.TypeUtils[][] typeUtilsArray16 = org.apache.commons.lang3.ArrayUtils.removeElements(typeUtilsArray14, typeUtilsArray15);
        java.lang.Float[] floatArray22 = new java.lang.Float[] { 1.0f, 1.0f, 1.0f, 0.0f, 1.0f };
        float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) '#');
        float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) (short) 1);
        float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) (short) 0);
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) 0);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22);
        boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) typeUtilsArray16, (java.lang.Object) floatArray22);
        org.apache.commons.lang3.reflect.TypeUtils[][][] typeUtilsArray33 = org.apache.commons.lang3.ArrayUtils.add(typeUtilsArray0, typeUtilsArray16);
        org.junit.Assert.assertNotNull(typeUtilsArray0);
        org.junit.Assert.assertNotNull(typeUtilsArray1);
        org.junit.Assert.assertNotNull(typeUtilsArray7);
        org.junit.Assert.assertNotNull(typeUtilsArray13);
        org.junit.Assert.assertNotNull(typeUtilsArray14);
        org.junit.Assert.assertNotNull(typeUtilsArray15);
        org.junit.Assert.assertNotNull(typeUtilsArray16);
        org.junit.Assert.assertNotNull(floatArray22);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[1.0, 1.0, 1.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeUtilsArray33);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #329
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #154
29: astore_1
30: aload_1
31: invokestatic  #67
34: checkcast     #277
37: astore_2
38: new           #27
41: dup
42: invokespecial #28
45: astore_3
46: new           #27
49: dup
50: invokespecial #28
53: astore        4
55: new           #27
58: dup
59: invokespecial #28
62: astore        5
64: new           #27
67: dup
68: invokespecial #28
71: astore        6
73: new           #27
76: dup
77: invokespecial #28
80: astore        7
82: iconst_5
83: anewarray     #27
86: dup
87: iconst_0
88: aload_3
89: aastore
90: dup
91: iconst_1
92: aload         4
94: aastore
95: dup
96: iconst_2
97: aload         5
99: aastore
100: dup
101: iconst_3
102: aload         6
104: aastore
105: dup
106: iconst_4
107: aload         7
109: aastore
110: astore        8
112: new           #27
115: dup
116: invokespecial #28
119: astore        9
121: new           #27
124: dup
125: invokespecial #28
128: astore        10
130: new           #27
133: dup
134: invokespecial #28
137: astore        11
139: new           #27
142: dup
143: invokespecial #28
146: astore        12
148: new           #27
151: dup
152: invokespecial #28
155: astore        13
157: iconst_5
158: anewarray     #27
161: dup
162: iconst_0
163: aload         9
165: aastore
166: dup
167: iconst_1
168: aload         10
170: aastore
171: dup
172: iconst_2
173: aload         11
175: aastore
176: dup
177: iconst_3
178: aload         12
180: aastore
181: dup
182: iconst_4
183: aload         13
185: aastore
186: astore        14
188: iconst_2
189: anewarray     #68
192: dup
193: iconst_0
194: aload         8
196: aastore
197: dup
198: iconst_1
199: aload         14
201: aastore
202: astore        15
204: iconst_0
205: anewarray     #68
208: astore        16
210: aload         15
212: aload         16
214: invokestatic  #122
217: checkcast     #154
220: astore        17
222: iconst_5
223: anewarray     #125
226: dup
227: iconst_0
228: fconst_1
229: invokestatic  #126
232: aastore
233: dup
234: iconst_1
235: fconst_1
236: invokestatic  #126
239: aastore
240: dup
241: iconst_2
242: fconst_1
243: invokestatic  #126
246: aastore
247: dup
248: iconst_3
249: fconst_0
250: invokestatic  #126
253: aastore
254: dup
255: iconst_4
256: fconst_1
257: invokestatic  #126
260: aastore
261: astore        18
263: aload         18
265: ldc           #127
267: invokestatic  #128
270: astore        19
272: aload         18
274: fconst_1
275: invokestatic  #128
278: astore        20
280: aload         18
282: fconst_0
283: invokestatic  #128
286: astore        21
288: aload         18
290: fconst_0
291: invokestatic  #128
294: astore        22
296: aload         18
298: invokestatic  #228
301: astore        23
303: aload         17
305: aload         18
307: invokestatic  #330
310: istore        24
312: aload_1
313: aload         17
315: invokestatic  #155
318: checkcast     #277
321: astore        25
323: aload_1
324: invokestatic  #47
327: aload_2
328: invokestatic  #47
331: aload         8
333: invokestatic  #47
336: aload         14
338: invokestatic  #47
341: aload         15
343: invokestatic  #47
346: aload         16
348: invokestatic  #47
351: aload         17
353: invokestatic  #47
356: aload         18
358: invokestatic  #47
361: aload         19
363: invokestatic  #47
366: aload         19
368: invokestatic  #142
371: ldc           #143
373: invokestatic  #62
376: aload         20
378: invokestatic  #47
381: aload         20
383: invokestatic  #142
386: ldc           #143
388: invokestatic  #62
391: aload         21
393: invokestatic  #47
396: aload         21
398: invokestatic  #142
401: ldc           #143
403: invokestatic  #62
406: aload         22
408: invokestatic  #47
411: aload         22
413: invokestatic  #142
416: ldc           #143
418: invokestatic  #62
421: aload         23
423: invokestatic  #47
426: aload         23
428: invokestatic  #142
431: ldc           #143
433: invokestatic  #62
436: new           #14
439: dup
440: invokespecial #15
443: ldc           #16
445: invokevirtual #17
448: iload         24
450: invokevirtual #18
453: ldc           #19
455: invokevirtual #17
458: iconst_0
459: invokevirtual #18
462: ldc           #16
464: invokevirtual #17
467: invokevirtual #20
470: iload         24
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #21
483: aload         25
485: invokestatic  #47
488: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 5062
End line: 5069
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        java.lang.reflect.Type type0 = null;
        java.lang.reflect.Type type1 = null;
        boolean boolean2 = org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type0, type1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #331
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: aload_1
30: aload_2
31: invokestatic  #294
34: istore_3
35: new           #14
38: dup
39: invokespecial #15
42: ldc           #16
44: invokevirtual #17
47: iload_3
48: invokevirtual #18
51: ldc           #19
53: invokevirtual #17
56: iconst_1
57: invokevirtual #18
60: ldc           #16
62: invokevirtual #17
65: invokevirtual #20
68: iload_3
69: iconst_1
70: if_icmpne     77
73: iconst_1
74: goto          78
77: iconst_0
78: invokestatic  #21
81: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 5072
End line: 5116
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) typeArray26);
        java.lang.reflect.Type[] typeArray28 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray26);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(typeArray28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #332
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aload         16
165: checkcast     #45
168: invokestatic  #59
171: astore        17
173: aload         16
175: invokestatic  #32
178: astore        18
180: aload_2
181: invokestatic  #47
184: aload_3
185: invokestatic  #47
188: aload         4
190: invokestatic  #47
193: aload         5
195: invokestatic  #47
198: aload         6
200: invokestatic  #47
203: aload         7
205: invokestatic  #47
208: new           #14
211: dup
212: invokespecial #15
215: ldc           #16
217: invokevirtual #17
220: iload         8
222: invokevirtual #18
225: ldc           #19
227: invokevirtual #17
230: iconst_1
231: invokevirtual #18
234: ldc           #16
236: invokevirtual #17
239: invokevirtual #20
242: iload         8
244: iconst_1
245: if_icmpne     252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #21
256: new           #14
259: dup
260: invokespecial #15
263: ldc           #16
265: invokevirtual #17
268: iload         9
270: invokevirtual #18
273: ldc           #19
275: invokevirtual #17
278: iconst_0
279: invokevirtual #18
282: ldc           #16
284: invokevirtual #17
287: invokevirtual #20
290: iload         9
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #21
303: aload         10
305: invokestatic  #47
308: aload         11
310: invokestatic  #47
313: aload         12
315: invokestatic  #47
318: aload         13
320: invokestatic  #47
323: new           #14
326: dup
327: invokespecial #15
330: ldc           #16
332: invokevirtual #17
335: iload         14
337: invokevirtual #18
340: ldc           #19
342: invokevirtual #17
345: iconst_1
346: invokevirtual #18
349: ldc           #16
351: invokevirtual #17
354: invokevirtual #20
357: iload         14
359: iconst_1
360: if_icmpne     367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #21
371: new           #14
374: dup
375: invokespecial #15
378: ldc           #16
380: invokevirtual #17
383: iload         15
385: invokevirtual #18
388: ldc           #19
390: invokevirtual #17
393: iconst_1
394: invokevirtual #18
397: ldc           #16
399: invokevirtual #17
402: invokevirtual #20
405: iload         15
407: iconst_1
408: if_icmpne     415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #21
419: aload         16
421: invokestatic  #47
424: aload         17
426: invokestatic  #47
429: aload         18
431: invokestatic  #47
434: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 5119
End line: 5215
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        java.lang.Object[] objArray0 = null;
        char[] charArray5 = new char[] { '#', '#', 'a', '#' };
        boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray5);
        char[] charArray11 = new char[] { '#', '#', 'a', '#' };
        boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray11);
        boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray5, charArray11);
        java.lang.Character[] charArray14 = org.apache.commons.lang3.ArrayUtils.toObject(charArray11);
        char[] charArray20 = new char[] { ' ', ' ', '4', '4', ' ' };
        int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray20, ' ');
        org.apache.commons.lang3.ArrayUtils.reverse(charArray20);
        char[] charArray25 = org.apache.commons.lang3.ArrayUtils.add(charArray20, 'a');
        boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray11, charArray25);
        char[] charArray29 = org.apache.commons.lang3.ArrayUtils.subarray(charArray25, (int) 'a', (int) (short) 0);
        char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray29);
        boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(objArray0, (java.lang.Object) charArray30);
        char[] charArray36 = new char[] { '#', '#', 'a', '#' };
        boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray36);
        char[] charArray42 = new char[] { '#', '#', 'a', '#' };
        boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray42);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray36, charArray42);
        java.lang.Character[] charArray45 = org.apache.commons.lang3.ArrayUtils.toObject(charArray42);
        int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray42, '#', (int) (short) 10);
        char[] charArray49 = org.apache.commons.lang3.ArrayUtils.addAll(charArray30, charArray42);
        char[] charArray50 = org.apache.commons.lang3.ArrayUtils.clone(charArray42);
        boolean[] booleanArray51 = new boolean[] {};
        boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.add(booleanArray51, false);
        int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray53, true, (int) (byte) 1);
        int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, true);
        boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.add(booleanArray53, true);
        java.lang.Class<?> wildcardClass61 = booleanArray53.getClass();
        boolean boolean62 = org.apache.commons.lang3.reflect.TypeUtils.isInstance((java.lang.Object) charArray50, (java.lang.reflect.Type) wildcardClass61);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[#, #, a, #]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[#, #, a, #]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 44  ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 44  ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, 4,  ,  ]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 44  a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 44  a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, 4,  ,  , a]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, #, a, #]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, #, a, #]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[#, #, a, #]");
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[#, #, a, #]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_4
28: newarray       char
30: dup
31: iconst_0
32: bipush        35
34: castore
35: dup
36: iconst_1
37: bipush        35
39: castore
40: dup
41: iconst_2
42: bipush        97
44: castore
45: dup
46: iconst_3
47: bipush        35
49: castore
50: astore_2
51: aload_2
52: invokestatic  #323
55: istore_3
56: iconst_4
57: newarray       char
59: dup
60: iconst_0
61: bipush        35
63: castore
64: dup
65: iconst_1
66: bipush        35
68: castore
69: dup
70: iconst_2
71: bipush        97
73: castore
74: dup
75: iconst_3
76: bipush        35
78: castore
79: astore        4
81: aload         4
83: invokestatic  #323
86: istore        5
88: aload_2
89: aload         4
91: invokestatic  #74
94: istore        6
96: aload         4
98: invokestatic  #334
101: astore        7
103: iconst_5
104: newarray       char
106: dup
107: iconst_0
108: bipush        32
110: castore
111: dup
112: iconst_1
113: bipush        32
115: castore
116: dup
117: iconst_2
118: bipush        52
120: castore
121: dup
122: iconst_3
123: bipush        52
125: castore
126: dup
127: iconst_4
128: bipush        32
130: castore
131: astore        8
133: aload         8
135: bipush        32
137: invokestatic  #335
140: istore        9
142: aload         8
144: invokestatic  #336
147: aload         8
149: bipush        97
151: invokestatic  #337
154: astore        10
156: aload         4
158: aload         10
160: invokestatic  #74
163: istore        11
165: aload         10
167: bipush        97
169: iconst_0
170: invokestatic  #338
173: astore        12
175: aload         12
177: invokestatic  #339
180: astore        13
182: aload_1
183: aload         13
185: invokestatic  #340
188: istore        14
190: iconst_4
191: newarray       char
193: dup
194: iconst_0
195: bipush        35
197: castore
198: dup
199: iconst_1
200: bipush        35
202: castore
203: dup
204: iconst_2
205: bipush        97
207: castore
208: dup
209: iconst_3
210: bipush        35
212: castore
213: astore        15
215: aload         15
217: invokestatic  #323
220: istore        16
222: iconst_4
223: newarray       char
225: dup
226: iconst_0
227: bipush        35
229: castore
230: dup
231: iconst_1
232: bipush        35
234: castore
235: dup
236: iconst_2
237: bipush        97
239: castore
240: dup
241: iconst_3
242: bipush        35
244: castore
245: astore        17
247: aload         17
249: invokestatic  #323
252: istore        18
254: aload         15
256: aload         17
258: invokestatic  #74
261: istore        19
263: aload         17
265: invokestatic  #334
268: astore        20
270: aload         17
272: bipush        35
274: bipush        10
276: invokestatic  #119
279: istore        21
281: aload         13
283: aload         17
285: invokestatic  #341
288: astore        22
290: aload         17
292: invokestatic  #339
295: astore        23
297: iconst_0
298: newarray       boolean
300: astore        24
302: aload         24
304: iconst_0
305: invokestatic  #307
308: astore        25
310: aload         25
312: iconst_1
313: iconst_1
314: invokestatic  #342
317: istore        26
319: aload         25
321: iconst_1
322: invokestatic  #306
325: istore        27
327: aload         25
329: iconst_1
330: invokestatic  #307
333: astore        28
335: aload         25
337: invokevirtual #71
340: astore        29
342: aload         23
344: aload         29
346: invokestatic  #91
349: istore        30
351: aload_2
352: invokestatic  #47
355: aload_2
356: invokestatic  #60
359: ldc_w         #343
362: invokestatic  #62
365: aload_2
366: invokestatic  #63
369: ldc_w         #343
372: invokestatic  #62
375: aload_2
376: invokestatic  #64
379: ldc_w         #344
382: invokestatic  #62
385: new           #14
388: dup
389: invokespecial #15
392: ldc           #16
394: invokevirtual #17
397: iload_3
398: invokevirtual #18
401: ldc           #19
403: invokevirtual #17
406: iconst_0
407: invokevirtual #18
410: ldc           #16
412: invokevirtual #17
415: invokevirtual #20
418: iload_3
419: ifne          426
422: iconst_1
423: goto          427
426: iconst_0
427: invokestatic  #21
430: aload         4
432: invokestatic  #47
435: aload         4
437: invokestatic  #60
440: ldc_w         #343
443: invokestatic  #62
446: aload         4
448: invokestatic  #63
451: ldc_w         #343
454: invokestatic  #62
457: aload         4
459: invokestatic  #64
462: ldc_w         #344
465: invokestatic  #62
468: new           #14
471: dup
472: invokespecial #15
475: ldc           #16
477: invokevirtual #17
480: iload         5
482: invokevirtual #18
485: ldc           #19
487: invokevirtual #17
490: iconst_0
491: invokevirtual #18
494: ldc           #16
496: invokevirtual #17
499: invokevirtual #20
502: iload         5
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #21
515: new           #14
518: dup
519: invokespecial #15
522: ldc           #16
524: invokevirtual #17
527: iload         6
529: invokevirtual #18
532: ldc           #19
534: invokevirtual #17
537: iconst_1
538: invokevirtual #18
541: ldc           #16
543: invokevirtual #17
546: invokevirtual #20
549: iload         6
551: iconst_1
552: if_icmpne     559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #21
563: aload         7
565: invokestatic  #47
568: aload         8
570: invokestatic  #47
573: aload         8
575: invokestatic  #60
578: ldc_w         #345
581: invokestatic  #62
584: aload         8
586: invokestatic  #63
589: ldc_w         #345
592: invokestatic  #62
595: aload         8
597: invokestatic  #64
600: ldc_w         #346
603: invokestatic  #62
606: new           #14
609: dup
610: invokespecial #15
613: ldc           #16
615: invokevirtual #17
618: iload         9
620: invokevirtual #48
623: ldc           #19
625: invokevirtual #17
628: iconst_4
629: invokevirtual #48
632: ldc           #16
634: invokevirtual #17
637: invokevirtual #20
640: iload         9
642: iconst_4
643: if_icmpne     650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #21
654: aload         10
656: invokestatic  #47
659: aload         10
661: invokestatic  #60
664: ldc_w         #347
667: invokestatic  #62
670: aload         10
672: invokestatic  #63
675: ldc_w         #347
678: invokestatic  #62
681: aload         10
683: invokestatic  #64
686: ldc_w         #348
689: invokestatic  #62
692: new           #14
695: dup
696: invokespecial #15
699: ldc           #16
701: invokevirtual #17
704: iload         11
706: invokevirtual #18
709: ldc           #19
711: invokevirtual #17
714: iconst_0
715: invokevirtual #18
718: ldc           #16
720: invokevirtual #17
723: invokevirtual #20
726: iload         11
728: ifne          735
731: iconst_1
732: goto          736
735: iconst_0
736: invokestatic  #21
739: aload         12
741: invokestatic  #47
744: aload         12
746: invokestatic  #60
749: ldc           #61
751: invokestatic  #62
754: aload         12
756: invokestatic  #63
759: ldc           #61
761: invokestatic  #62
764: aload         12
766: invokestatic  #64
769: ldc           #65
771: invokestatic  #62
774: aload         13
776: invokestatic  #47
779: aload         13
781: invokestatic  #60
784: ldc           #61
786: invokestatic  #62
789: aload         13
791: invokestatic  #63
794: ldc           #61
796: invokestatic  #62
799: aload         13
801: invokestatic  #64
804: ldc           #65
806: invokestatic  #62
809: new           #14
812: dup
813: invokespecial #15
816: ldc           #16
818: invokevirtual #17
821: iload         14
823: invokevirtual #18
826: ldc           #19
828: invokevirtual #17
831: iconst_0
832: invokevirtual #18
835: ldc           #16
837: invokevirtual #17
840: invokevirtual #20
843: iload         14
845: ifne          852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #21
856: aload         15
858: invokestatic  #47
861: aload         15
863: invokestatic  #60
866: ldc_w         #343
869: invokestatic  #62
872: aload         15
874: invokestatic  #63
877: ldc_w         #343
880: invokestatic  #62
883: aload         15
885: invokestatic  #64
888: ldc_w         #344
891: invokestatic  #62
894: new           #14
897: dup
898: invokespecial #15
901: ldc           #16
903: invokevirtual #17
906: iload         16
908: invokevirtual #18
911: ldc           #19
913: invokevirtual #17
916: iconst_0
917: invokevirtual #18
920: ldc           #16
922: invokevirtual #17
925: invokevirtual #20
928: iload         16
930: ifne          937
933: iconst_1
934: goto          938
937: iconst_0
938: invokestatic  #21
941: aload         17
943: invokestatic  #47
946: aload         17
948: invokestatic  #60
951: ldc_w         #343
954: invokestatic  #62
957: aload         17
959: invokestatic  #63
962: ldc_w         #343
965: invokestatic  #62
968: aload         17
970: invokestatic  #64
973: ldc_w         #344
976: invokestatic  #62
979: new           #14
982: dup
983: invokespecial #15
986: ldc           #16
988: invokevirtual #17
991: iload         18
993: invokevirtual #18
996: ldc           #19
998: invokevirtual #17
1001: iconst_0
1002: invokevirtual #18
1005: ldc           #16
1007: invokevirtual #17
1010: invokevirtual #20
1013: iload         18
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #21
1026: new           #14
1029: dup
1030: invokespecial #15
1033: ldc           #16
1035: invokevirtual #17
1038: iload         19
1040: invokevirtual #18
1043: ldc           #19
1045: invokevirtual #17
1048: iconst_1
1049: invokevirtual #18
1052: ldc           #16
1054: invokevirtual #17
1057: invokevirtual #20
1060: iload         19
1062: iconst_1
1063: if_icmpne     1070
1066: iconst_1
1067: goto          1071
1070: iconst_0
1071: invokestatic  #21
1074: aload         20
1076: invokestatic  #47
1079: new           #14
1082: dup
1083: invokespecial #15
1086: ldc           #16
1088: invokevirtual #17
1091: iload         21
1093: invokevirtual #48
1096: ldc           #19
1098: invokevirtual #17
1101: iconst_3
1102: invokevirtual #48
1105: ldc           #16
1107: invokevirtual #17
1110: invokevirtual #20
1113: iload         21
1115: iconst_3
1116: if_icmpne     1123
1119: iconst_1
1120: goto          1124
1123: iconst_0
1124: invokestatic  #21
1127: aload         22
1129: invokestatic  #47
1132: aload         22
1134: invokestatic  #60
1137: ldc_w         #343
1140: invokestatic  #62
1143: aload         22
1145: invokestatic  #63
1148: ldc_w         #343
1151: invokestatic  #62
1154: aload         22
1156: invokestatic  #64
1159: ldc_w         #344
1162: invokestatic  #62
1165: aload         23
1167: invokestatic  #47
1170: aload         23
1172: invokestatic  #60
1175: ldc_w         #343
1178: invokestatic  #62
1181: aload         23
1183: invokestatic  #63
1186: ldc_w         #343
1189: invokestatic  #62
1192: aload         23
1194: invokestatic  #64
1197: ldc_w         #344
1200: invokestatic  #62
1203: aload         24
1205: invokestatic  #47
1208: aload         24
1210: invokestatic  #247
1213: ldc           #65
1215: invokestatic  #62
1218: aload         25
1220: invokestatic  #47
1223: aload         25
1225: invokestatic  #247
1228: ldc_w         #309
1231: invokestatic  #62
1234: new           #14
1237: dup
1238: invokespecial #15
1241: ldc           #16
1243: invokevirtual #17
1246: iload         26
1248: invokevirtual #48
1251: ldc           #19
1253: invokevirtual #17
1256: iconst_m1
1257: invokevirtual #48
1260: ldc           #16
1262: invokevirtual #17
1265: invokevirtual #20
1268: iload         26
1270: iconst_m1
1271: if_icmpne     1278
1274: iconst_1
1275: goto          1279
1278: iconst_0
1279: invokestatic  #21
1282: new           #14
1285: dup
1286: invokespecial #15
1289: ldc           #16
1291: invokevirtual #17
1294: iload         27
1296: invokevirtual #48
1299: ldc           #19
1301: invokevirtual #17
1304: iconst_m1
1305: invokevirtual #48
1308: ldc           #16
1310: invokevirtual #17
1313: invokevirtual #20
1316: iload         27
1318: iconst_m1
1319: if_icmpne     1326
1322: iconst_1
1323: goto          1327
1326: iconst_0
1327: invokestatic  #21
1330: aload         28
1332: invokestatic  #47
1335: aload         28
1337: invokestatic  #247
1340: ldc_w         #349
1343: invokestatic  #62
1346: aload         29
1348: invokestatic  #47
1351: new           #14
1354: dup
1355: invokespecial #15
1358: ldc           #16
1360: invokevirtual #17
1363: iload         30
1365: invokevirtual #18
1368: ldc           #19
1370: invokevirtual #17
1373: iconst_0
1374: invokevirtual #18
1377: ldc           #16
1379: invokevirtual #17
1382: invokevirtual #20
1385: iload         30
1387: ifne          1394
1390: iconst_1
1391: goto          1395
1394: iconst_0
1395: invokestatic  #21
1398: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 5218
End line: 5242
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap0 = null;
        java.util.Map[] mapArray2 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[] wildcardTypeVariableMapArray3 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[]) mapArray2;
        wildcardTypeVariableMapArray3[0] = wildcardTypeVariableMap0;
        java.util.Map[][] mapArray7 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray8 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][]) mapArray7;
        wildcardTypeVariableMapArray8[0] = wildcardTypeVariableMapArray3;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray11 = org.apache.commons.lang3.ArrayUtils.toArray(wildcardTypeVariableMapArray8);
        java.lang.Class<?>[] wildcardClassArray12 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardTypeVariableMapArray11);
        java.lang.reflect.Type[] typeArray13 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray12);
        java.lang.reflect.Type[] typeArray14 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray13);
        org.junit.Assert.assertNotNull(mapArray2);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray3);
        org.junit.Assert.assertNotNull(mapArray7);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray8);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertNotNull(typeArray14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #351
31: astore_2
32: aload_2
33: checkcast     #352
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_1
42: anewarray     #352
45: astore        4
47: aload         4
49: checkcast     #353
52: astore        5
54: aload         5
56: iconst_0
57: aload_3
58: aastore
59: aload         5
61: invokestatic  #188
64: checkcast     #353
67: astore        6
69: aload         6
71: checkcast     #45
74: invokestatic  #59
77: astore        7
79: aload         7
81: checkcast     #44
84: invokestatic  #32
87: astore        8
89: aload         8
91: invokestatic  #32
94: astore        9
96: aload_2
97: invokestatic  #47
100: aload_3
101: invokestatic  #47
104: aload         4
106: invokestatic  #47
109: aload         5
111: invokestatic  #47
114: aload         6
116: invokestatic  #47
119: aload         7
121: invokestatic  #47
124: aload         8
126: invokestatic  #47
129: aload         9
131: invokestatic  #47
134: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 5245
End line: 5334
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) classArray7);
        java.lang.Class<?> wildcardClass27 = null;
        java.lang.Class[] classArray29 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29;
        wildcardClassArray30[0] = wildcardClass27;
        java.lang.Class[] classArray34 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        java.lang.Class[] classArray37 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37;
        boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray34, (java.lang.Class<?>[]) classArray37, true);
        boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, (java.lang.Class<?>[]) classArray34, true);
        java.lang.Class[] classArray44 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray45 = (java.lang.Class<?>[]) classArray44;
        java.lang.Class[] classArray47 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47;
        boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray44, (java.lang.Class<?>[]) classArray47, true);
        boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray34, (java.lang.Class<?>[]) classArray44, false);
        java.lang.reflect.Type[] typeArray53 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray44);
        java.lang.reflect.Type[] typeArray54 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray44);
        java.lang.Object[] objArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) classArray44);
        java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray44);
        boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, (java.lang.Class<?>[]) classArray44, true);
        java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNotNull(wildcardClassArray30);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(classArray37);
        org.junit.Assert.assertNotNull(wildcardClassArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(wildcardClassArray45);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #354
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         4
155: checkcast     #45
158: invokestatic  #59
161: astore        16
163: aconst_null
164: astore        17
166: iconst_1
167: anewarray     #39
170: astore        18
172: aload         18
174: checkcast     #40
177: astore        19
179: aload         19
181: iconst_0
182: aload         17
184: aastore
185: iconst_0
186: anewarray     #39
189: astore        20
191: aload         20
193: checkcast     #40
196: astore        21
198: iconst_0
199: anewarray     #39
202: astore        22
204: aload         22
206: checkcast     #40
209: astore        23
211: aload         20
213: checkcast     #40
216: aload         22
218: checkcast     #40
221: iconst_1
222: invokestatic  #41
225: istore        24
227: aload         19
229: aload         20
231: checkcast     #40
234: iconst_1
235: invokestatic  #41
238: istore        25
240: iconst_0
241: anewarray     #39
244: astore        26
246: aload         26
248: checkcast     #40
251: astore        27
253: iconst_0
254: anewarray     #39
257: astore        28
259: aload         28
261: checkcast     #40
264: astore        29
266: aload         26
268: checkcast     #40
271: aload         28
273: checkcast     #40
276: iconst_1
277: invokestatic  #41
280: istore        30
282: aload         20
284: checkcast     #40
287: aload         26
289: checkcast     #40
292: iconst_0
293: invokestatic  #41
296: istore        31
298: aload         26
300: checkcast     #44
303: invokestatic  #32
306: astore        32
308: aload         26
310: checkcast     #44
313: invokestatic  #32
316: astore        33
318: aload         26
320: checkcast     #45
323: invokestatic  #251
326: astore        34
328: aload         26
330: checkcast     #40
333: invokestatic  #53
336: astore        35
338: aload         16
340: aload         26
342: checkcast     #40
345: iconst_1
346: invokestatic  #41
349: istore        36
351: aload         16
353: invokestatic  #53
356: astore        37
358: aload_2
359: invokestatic  #47
362: aload_3
363: invokestatic  #47
366: aload         4
368: invokestatic  #47
371: aload         5
373: invokestatic  #47
376: aload         6
378: invokestatic  #47
381: aload         7
383: invokestatic  #47
386: new           #14
389: dup
390: invokespecial #15
393: ldc           #16
395: invokevirtual #17
398: iload         8
400: invokevirtual #18
403: ldc           #19
405: invokevirtual #17
408: iconst_1
409: invokevirtual #18
412: ldc           #16
414: invokevirtual #17
417: invokevirtual #20
420: iload         8
422: iconst_1
423: if_icmpne     430
426: iconst_1
427: goto          431
430: iconst_0
431: invokestatic  #21
434: new           #14
437: dup
438: invokespecial #15
441: ldc           #16
443: invokevirtual #17
446: iload         9
448: invokevirtual #18
451: ldc           #19
453: invokevirtual #17
456: iconst_0
457: invokevirtual #18
460: ldc           #16
462: invokevirtual #17
465: invokevirtual #20
468: iload         9
470: ifne          477
473: iconst_1
474: goto          478
477: iconst_0
478: invokestatic  #21
481: aload         10
483: invokestatic  #47
486: aload         11
488: invokestatic  #47
491: aload         12
493: invokestatic  #47
496: aload         13
498: invokestatic  #47
501: new           #14
504: dup
505: invokespecial #15
508: ldc           #16
510: invokevirtual #17
513: iload         14
515: invokevirtual #18
518: ldc           #19
520: invokevirtual #17
523: iconst_1
524: invokevirtual #18
527: ldc           #16
529: invokevirtual #17
532: invokevirtual #20
535: iload         14
537: iconst_1
538: if_icmpne     545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #21
549: new           #14
552: dup
553: invokespecial #15
556: ldc           #16
558: invokevirtual #17
561: iload         15
563: invokevirtual #18
566: ldc           #19
568: invokevirtual #17
571: iconst_1
572: invokevirtual #18
575: ldc           #16
577: invokevirtual #17
580: invokevirtual #20
583: iload         15
585: iconst_1
586: if_icmpne     593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #21
597: aload         16
599: invokestatic  #47
602: aload         18
604: invokestatic  #47
607: aload         19
609: invokestatic  #47
612: aload         20
614: invokestatic  #47
617: aload         21
619: invokestatic  #47
622: aload         22
624: invokestatic  #47
627: aload         23
629: invokestatic  #47
632: new           #14
635: dup
636: invokespecial #15
639: ldc           #16
641: invokevirtual #17
644: iload         24
646: invokevirtual #18
649: ldc           #19
651: invokevirtual #17
654: iconst_1
655: invokevirtual #18
658: ldc           #16
660: invokevirtual #17
663: invokevirtual #20
666: iload         24
668: iconst_1
669: if_icmpne     676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #21
680: new           #14
683: dup
684: invokespecial #15
687: ldc           #16
689: invokevirtual #17
692: iload         25
694: invokevirtual #18
697: ldc           #19
699: invokevirtual #17
702: iconst_0
703: invokevirtual #18
706: ldc           #16
708: invokevirtual #17
711: invokevirtual #20
714: iload         25
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #21
727: aload         26
729: invokestatic  #47
732: aload         27
734: invokestatic  #47
737: aload         28
739: invokestatic  #47
742: aload         29
744: invokestatic  #47
747: new           #14
750: dup
751: invokespecial #15
754: ldc           #16
756: invokevirtual #17
759: iload         30
761: invokevirtual #18
764: ldc           #19
766: invokevirtual #17
769: iconst_1
770: invokevirtual #18
773: ldc           #16
775: invokevirtual #17
778: invokevirtual #20
781: iload         30
783: iconst_1
784: if_icmpne     791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #21
795: new           #14
798: dup
799: invokespecial #15
802: ldc           #16
804: invokevirtual #17
807: iload         31
809: invokevirtual #18
812: ldc           #19
814: invokevirtual #17
817: iconst_1
818: invokevirtual #18
821: ldc           #16
823: invokevirtual #17
826: invokevirtual #20
829: iload         31
831: iconst_1
832: if_icmpne     839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #21
843: aload         32
845: invokestatic  #47
848: aload         33
850: invokestatic  #47
853: aload         34
855: invokestatic  #47
858: aload         34
860: invokestatic  #252
863: ldc           #65
865: invokestatic  #62
868: aload         34
870: invokestatic  #254
873: ldc           #65
875: invokestatic  #62
878: aload         35
880: invokestatic  #47
883: new           #14
886: dup
887: invokespecial #15
890: ldc           #16
892: invokevirtual #17
895: iload         36
897: invokevirtual #18
900: ldc           #19
902: invokevirtual #17
905: iconst_1
906: invokevirtual #18
909: ldc           #16
911: invokevirtual #17
914: invokevirtual #20
917: iload         36
919: iconst_1
920: if_icmpne     927
923: iconst_1
924: goto          928
927: iconst_0
928: invokestatic  #21
931: aload         37
933: invokestatic  #47
936: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 5337
End line: 5476
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap27 = null;
        java.util.Map[] mapArray29 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[] wildcardTypeVariableMapArray30 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[]) mapArray29;
        wildcardTypeVariableMapArray30[0] = wildcardTypeVariableMap27;
        java.util.Map[][] mapArray34 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray35 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][]) mapArray34;
        wildcardTypeVariableMapArray35[0] = wildcardTypeVariableMapArray30;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray38 = org.apache.commons.lang3.ArrayUtils.toArray(wildcardTypeVariableMapArray35);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardTypeVariableMapArray38);
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        java.lang.Class[] classArray47 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47;
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray47, (java.lang.Class<?>[]) classArray50, true);
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, (java.lang.Class<?>[]) classArray47, true);
        java.lang.Class[] classArray57 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        java.lang.Class[] classArray60 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray57, (java.lang.Class<?>[]) classArray60, true);
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray47, (java.lang.Class<?>[]) classArray57, false);
        boolean boolean66 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray39, (java.lang.Class<?>[]) classArray47);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray39);
        java.lang.Class<?> wildcardClass68 = null;
        java.lang.Class[] classArray70 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray71 = (java.lang.Class<?>[]) classArray70;
        wildcardClassArray71[0] = wildcardClass68;
        java.lang.Class[] classArray75 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        java.lang.Class[] classArray78 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        boolean boolean81 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray75, (java.lang.Class<?>[]) classArray78, true);
        boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray71, (java.lang.Class<?>[]) classArray75, true);
        java.lang.Class[] classArray85 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray86 = (java.lang.Class<?>[]) classArray85;
        java.lang.Class[] classArray88 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray89 = (java.lang.Class<?>[]) classArray88;
        boolean boolean91 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray85, (java.lang.Class<?>[]) classArray88, true);
        boolean boolean93 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray75, (java.lang.Class<?>[]) classArray85, false);
        java.lang.reflect.Type[] typeArray94 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray85);
        java.lang.Class<?>[] wildcardClassArray95 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) typeArray94);
        java.lang.Class<?>[] wildcardClassArray96 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray95);
        boolean boolean97 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray95);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(mapArray29);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray30);
        org.junit.Assert.assertNotNull(mapArray34);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray35);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(wildcardClassArray71);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertNotNull(classArray88);
        org.junit.Assert.assertNotNull(wildcardClassArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(typeArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(wildcardClassArray96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #355
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aconst_null
164: astore        17
166: iconst_1
167: anewarray     #351
170: astore        18
172: aload         18
174: checkcast     #352
177: astore        19
179: aload         19
181: iconst_0
182: aload         17
184: aastore
185: iconst_1
186: anewarray     #352
189: astore        20
191: aload         20
193: checkcast     #353
196: astore        21
198: aload         21
200: iconst_0
201: aload         19
203: aastore
204: aload         21
206: invokestatic  #188
209: checkcast     #353
212: astore        22
214: aload         22
216: checkcast     #45
219: invokestatic  #59
222: astore        23
224: aconst_null
225: astore        24
227: iconst_1
228: anewarray     #39
231: astore        25
233: aload         25
235: checkcast     #40
238: astore        26
240: aload         26
242: iconst_0
243: aload         24
245: aastore
246: iconst_0
247: anewarray     #39
250: astore        27
252: aload         27
254: checkcast     #40
257: astore        28
259: iconst_0
260: anewarray     #39
263: astore        29
265: aload         29
267: checkcast     #40
270: astore        30
272: aload         27
274: checkcast     #40
277: aload         29
279: checkcast     #40
282: iconst_1
283: invokestatic  #41
286: istore        31
288: aload         26
290: aload         27
292: checkcast     #40
295: iconst_1
296: invokestatic  #41
299: istore        32
301: iconst_0
302: anewarray     #39
305: astore        33
307: aload         33
309: checkcast     #40
312: astore        34
314: iconst_0
315: anewarray     #39
318: astore        35
320: aload         35
322: checkcast     #40
325: astore        36
327: aload         33
329: checkcast     #40
332: aload         35
334: checkcast     #40
337: iconst_1
338: invokestatic  #41
341: istore        37
343: aload         27
345: checkcast     #40
348: aload         33
350: checkcast     #40
353: iconst_0
354: invokestatic  #41
357: istore        38
359: aload         23
361: aload         27
363: checkcast     #40
366: invokestatic  #43
369: istore        39
371: aload         10
373: checkcast     #40
376: aload         23
378: invokestatic  #43
381: istore        40
383: aconst_null
384: astore        41
386: iconst_1
387: anewarray     #39
390: astore        42
392: aload         42
394: checkcast     #40
397: astore        43
399: aload         43
401: iconst_0
402: aload         41
404: aastore
405: iconst_0
406: anewarray     #39
409: astore        44
411: aload         44
413: checkcast     #40
416: astore        45
418: iconst_0
419: anewarray     #39
422: astore        46
424: aload         46
426: checkcast     #40
429: astore        47
431: aload         44
433: checkcast     #40
436: aload         46
438: checkcast     #40
441: iconst_1
442: invokestatic  #41
445: istore        48
447: aload         43
449: aload         44
451: checkcast     #40
454: iconst_1
455: invokestatic  #41
458: istore        49
460: iconst_0
461: anewarray     #39
464: astore        50
466: aload         50
468: checkcast     #40
471: astore        51
473: iconst_0
474: anewarray     #39
477: astore        52
479: aload         52
481: checkcast     #40
484: astore        53
486: aload         50
488: checkcast     #40
491: aload         52
493: checkcast     #40
496: iconst_1
497: invokestatic  #41
500: istore        54
502: aload         44
504: checkcast     #40
507: aload         50
509: checkcast     #40
512: iconst_0
513: invokestatic  #41
516: istore        55
518: aload         50
520: checkcast     #44
523: invokestatic  #32
526: astore        56
528: aload         56
530: checkcast     #45
533: invokestatic  #59
536: astore        57
538: aload         57
540: invokestatic  #42
543: astore        58
545: aload         10
547: checkcast     #40
550: aload         57
552: invokestatic  #43
555: istore        59
557: aload_2
558: invokestatic  #47
561: aload_3
562: invokestatic  #47
565: aload         4
567: invokestatic  #47
570: aload         5
572: invokestatic  #47
575: aload         6
577: invokestatic  #47
580: aload         7
582: invokestatic  #47
585: new           #14
588: dup
589: invokespecial #15
592: ldc           #16
594: invokevirtual #17
597: iload         8
599: invokevirtual #18
602: ldc           #19
604: invokevirtual #17
607: iconst_1
608: invokevirtual #18
611: ldc           #16
613: invokevirtual #17
616: invokevirtual #20
619: iload         8
621: iconst_1
622: if_icmpne     629
625: iconst_1
626: goto          630
629: iconst_0
630: invokestatic  #21
633: new           #14
636: dup
637: invokespecial #15
640: ldc           #16
642: invokevirtual #17
645: iload         9
647: invokevirtual #18
650: ldc           #19
652: invokevirtual #17
655: iconst_0
656: invokevirtual #18
659: ldc           #16
661: invokevirtual #17
664: invokevirtual #20
667: iload         9
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #21
680: aload         10
682: invokestatic  #47
685: aload         11
687: invokestatic  #47
690: aload         12
692: invokestatic  #47
695: aload         13
697: invokestatic  #47
700: new           #14
703: dup
704: invokespecial #15
707: ldc           #16
709: invokevirtual #17
712: iload         14
714: invokevirtual #18
717: ldc           #19
719: invokevirtual #17
722: iconst_1
723: invokevirtual #18
726: ldc           #16
728: invokevirtual #17
731: invokevirtual #20
734: iload         14
736: iconst_1
737: if_icmpne     744
740: iconst_1
741: goto          745
744: iconst_0
745: invokestatic  #21
748: new           #14
751: dup
752: invokespecial #15
755: ldc           #16
757: invokevirtual #17
760: iload         15
762: invokevirtual #18
765: ldc           #19
767: invokevirtual #17
770: iconst_1
771: invokevirtual #18
774: ldc           #16
776: invokevirtual #17
779: invokevirtual #20
782: iload         15
784: iconst_1
785: if_icmpne     792
788: iconst_1
789: goto          793
792: iconst_0
793: invokestatic  #21
796: aload         16
798: invokestatic  #47
801: aload         18
803: invokestatic  #47
806: aload         19
808: invokestatic  #47
811: aload         20
813: invokestatic  #47
816: aload         21
818: invokestatic  #47
821: aload         22
823: invokestatic  #47
826: aload         23
828: invokestatic  #47
831: aload         25
833: invokestatic  #47
836: aload         26
838: invokestatic  #47
841: aload         27
843: invokestatic  #47
846: aload         28
848: invokestatic  #47
851: aload         29
853: invokestatic  #47
856: aload         30
858: invokestatic  #47
861: new           #14
864: dup
865: invokespecial #15
868: ldc           #16
870: invokevirtual #17
873: iload         31
875: invokevirtual #18
878: ldc           #19
880: invokevirtual #17
883: iconst_1
884: invokevirtual #18
887: ldc           #16
889: invokevirtual #17
892: invokevirtual #20
895: iload         31
897: iconst_1
898: if_icmpne     905
901: iconst_1
902: goto          906
905: iconst_0
906: invokestatic  #21
909: new           #14
912: dup
913: invokespecial #15
916: ldc           #16
918: invokevirtual #17
921: iload         32
923: invokevirtual #18
926: ldc           #19
928: invokevirtual #17
931: iconst_0
932: invokevirtual #18
935: ldc           #16
937: invokevirtual #17
940: invokevirtual #20
943: iload         32
945: ifne          952
948: iconst_1
949: goto          953
952: iconst_0
953: invokestatic  #21
956: aload         33
958: invokestatic  #47
961: aload         34
963: invokestatic  #47
966: aload         35
968: invokestatic  #47
971: aload         36
973: invokestatic  #47
976: new           #14
979: dup
980: invokespecial #15
983: ldc           #16
985: invokevirtual #17
988: iload         37
990: invokevirtual #18
993: ldc           #19
995: invokevirtual #17
998: iconst_1
999: invokevirtual #18
1002: ldc           #16
1004: invokevirtual #17
1007: invokevirtual #20
1010: iload         37
1012: iconst_1
1013: if_icmpne     1020
1016: iconst_1
1017: goto          1021
1020: iconst_0
1021: invokestatic  #21
1024: new           #14
1027: dup
1028: invokespecial #15
1031: ldc           #16
1033: invokevirtual #17
1036: iload         38
1038: invokevirtual #18
1041: ldc           #19
1043: invokevirtual #17
1046: iconst_1
1047: invokevirtual #18
1050: ldc           #16
1052: invokevirtual #17
1055: invokevirtual #20
1058: iload         38
1060: iconst_1
1061: if_icmpne     1068
1064: iconst_1
1065: goto          1069
1068: iconst_0
1069: invokestatic  #21
1072: new           #14
1075: dup
1076: invokespecial #15
1079: ldc           #16
1081: invokevirtual #17
1084: iload         39
1086: invokevirtual #18
1089: ldc           #19
1091: invokevirtual #17
1094: iconst_0
1095: invokevirtual #18
1098: ldc           #16
1100: invokevirtual #17
1103: invokevirtual #20
1106: iload         39
1108: ifne          1115
1111: iconst_1
1112: goto          1116
1115: iconst_0
1116: invokestatic  #21
1119: new           #14
1122: dup
1123: invokespecial #15
1126: ldc           #16
1128: invokevirtual #17
1131: iload         40
1133: invokevirtual #18
1136: ldc           #19
1138: invokevirtual #17
1141: iconst_0
1142: invokevirtual #18
1145: ldc           #16
1147: invokevirtual #17
1150: invokevirtual #20
1153: iload         40
1155: ifne          1162
1158: iconst_1
1159: goto          1163
1162: iconst_0
1163: invokestatic  #21
1166: aload         42
1168: invokestatic  #47
1171: aload         43
1173: invokestatic  #47
1176: aload         44
1178: invokestatic  #47
1181: aload         45
1183: invokestatic  #47
1186: aload         46
1188: invokestatic  #47
1191: aload         47
1193: invokestatic  #47
1196: new           #14
1199: dup
1200: invokespecial #15
1203: ldc           #16
1205: invokevirtual #17
1208: iload         48
1210: invokevirtual #18
1213: ldc           #19
1215: invokevirtual #17
1218: iconst_1
1219: invokevirtual #18
1222: ldc           #16
1224: invokevirtual #17
1227: invokevirtual #20
1230: iload         48
1232: iconst_1
1233: if_icmpne     1240
1236: iconst_1
1237: goto          1241
1240: iconst_0
1241: invokestatic  #21
1244: new           #14
1247: dup
1248: invokespecial #15
1251: ldc           #16
1253: invokevirtual #17
1256: iload         49
1258: invokevirtual #18
1261: ldc           #19
1263: invokevirtual #17
1266: iconst_0
1267: invokevirtual #18
1270: ldc           #16
1272: invokevirtual #17
1275: invokevirtual #20
1278: iload         49
1280: ifne          1287
1283: iconst_1
1284: goto          1288
1287: iconst_0
1288: invokestatic  #21
1291: aload         50
1293: invokestatic  #47
1296: aload         51
1298: invokestatic  #47
1301: aload         52
1303: invokestatic  #47
1306: aload         53
1308: invokestatic  #47
1311: new           #14
1314: dup
1315: invokespecial #15
1318: ldc           #16
1320: invokevirtual #17
1323: iload         54
1325: invokevirtual #18
1328: ldc           #19
1330: invokevirtual #17
1333: iconst_1
1334: invokevirtual #18
1337: ldc           #16
1339: invokevirtual #17
1342: invokevirtual #20
1345: iload         54
1347: iconst_1
1348: if_icmpne     1355
1351: iconst_1
1352: goto          1356
1355: iconst_0
1356: invokestatic  #21
1359: new           #14
1362: dup
1363: invokespecial #15
1366: ldc           #16
1368: invokevirtual #17
1371: iload         55
1373: invokevirtual #18
1376: ldc           #19
1378: invokevirtual #17
1381: iconst_1
1382: invokevirtual #18
1385: ldc           #16
1387: invokevirtual #17
1390: invokevirtual #20
1393: iload         55
1395: iconst_1
1396: if_icmpne     1403
1399: iconst_1
1400: goto          1404
1403: iconst_0
1404: invokestatic  #21
1407: aload         56
1409: invokestatic  #47
1412: aload         57
1414: invokestatic  #47
1417: aload         58
1419: invokestatic  #47
1422: new           #14
1425: dup
1426: invokespecial #15
1429: ldc           #16
1431: invokevirtual #17
1434: iload         59
1436: invokevirtual #18
1439: ldc           #19
1441: invokevirtual #17
1444: iconst_1
1445: invokevirtual #18
1448: ldc           #16
1450: invokevirtual #17
1453: invokevirtual #20
1456: iload         59
1458: iconst_1
1459: if_icmpne     1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #21
1470: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 5479
End line: 5525
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray7);
        java.lang.Class[] classArray18 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18;
        java.lang.Class[] classArray21 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21;
        boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray18, (java.lang.Class<?>[]) classArray21, true);
        java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray18);
        boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray16, wildcardClassArray25, false);
        java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray16);
        java.lang.reflect.Type[] typeArray29 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray28);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray16);
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNotNull(wildcardClassArray19);
        org.junit.Assert.assertNotNull(classArray21);
        org.junit.Assert.assertNotNull(wildcardClassArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray28);
        org.junit.Assert.assertNotNull(typeArray29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #356
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: aload         4
97: checkcast     #40
100: invokestatic  #53
103: astore        10
105: iconst_0
106: anewarray     #39
109: astore        11
111: aload         11
113: checkcast     #40
116: astore        12
118: iconst_0
119: anewarray     #39
122: astore        13
124: aload         13
126: checkcast     #40
129: astore        14
131: aload         11
133: checkcast     #40
136: aload         13
138: checkcast     #40
141: iconst_1
142: invokestatic  #41
145: istore        15
147: aload         11
149: checkcast     #40
152: invokestatic  #53
155: astore        16
157: aload         10
159: aload         16
161: iconst_0
162: invokestatic  #41
165: istore        17
167: aload         10
169: invokestatic  #53
172: astore        18
174: aload         18
176: checkcast     #44
179: invokestatic  #32
182: astore        19
184: aload_2
185: invokestatic  #47
188: aload_3
189: invokestatic  #47
192: aload         4
194: invokestatic  #47
197: aload         5
199: invokestatic  #47
202: aload         6
204: invokestatic  #47
207: aload         7
209: invokestatic  #47
212: new           #14
215: dup
216: invokespecial #15
219: ldc           #16
221: invokevirtual #17
224: iload         8
226: invokevirtual #18
229: ldc           #19
231: invokevirtual #17
234: iconst_1
235: invokevirtual #18
238: ldc           #16
240: invokevirtual #17
243: invokevirtual #20
246: iload         8
248: iconst_1
249: if_icmpne     256
252: iconst_1
253: goto          257
256: iconst_0
257: invokestatic  #21
260: new           #14
263: dup
264: invokespecial #15
267: ldc           #16
269: invokevirtual #17
272: iload         9
274: invokevirtual #18
277: ldc           #19
279: invokevirtual #17
282: iconst_0
283: invokevirtual #18
286: ldc           #16
288: invokevirtual #17
291: invokevirtual #20
294: iload         9
296: ifne          303
299: iconst_1
300: goto          304
303: iconst_0
304: invokestatic  #21
307: aload         10
309: invokestatic  #47
312: aload         11
314: invokestatic  #47
317: aload         12
319: invokestatic  #47
322: aload         13
324: invokestatic  #47
327: aload         14
329: invokestatic  #47
332: new           #14
335: dup
336: invokespecial #15
339: ldc           #16
341: invokevirtual #17
344: iload         15
346: invokevirtual #18
349: ldc           #19
351: invokevirtual #17
354: iconst_1
355: invokevirtual #18
358: ldc           #16
360: invokevirtual #17
363: invokevirtual #20
366: iload         15
368: iconst_1
369: if_icmpne     376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #21
380: aload         16
382: invokestatic  #47
385: new           #14
388: dup
389: invokespecial #15
392: ldc           #16
394: invokevirtual #17
397: iload         17
399: invokevirtual #18
402: ldc           #19
404: invokevirtual #17
407: iconst_1
408: invokevirtual #18
411: ldc           #16
413: invokevirtual #17
416: invokevirtual #20
419: iload         17
421: iconst_1
422: if_icmpne     429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #21
433: aload         18
435: invokestatic  #47
438: aload         19
440: invokestatic  #47
443: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 5528
End line: 5572
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.reflect.Type[] typeArray27 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.reflect.Type[] typeArray28 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray27);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(typeArray28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #357
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aload         10
165: checkcast     #44
168: invokestatic  #32
171: astore        17
173: aload         17
175: invokestatic  #32
178: astore        18
180: aload_2
181: invokestatic  #47
184: aload_3
185: invokestatic  #47
188: aload         4
190: invokestatic  #47
193: aload         5
195: invokestatic  #47
198: aload         6
200: invokestatic  #47
203: aload         7
205: invokestatic  #47
208: new           #14
211: dup
212: invokespecial #15
215: ldc           #16
217: invokevirtual #17
220: iload         8
222: invokevirtual #18
225: ldc           #19
227: invokevirtual #17
230: iconst_1
231: invokevirtual #18
234: ldc           #16
236: invokevirtual #17
239: invokevirtual #20
242: iload         8
244: iconst_1
245: if_icmpne     252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #21
256: new           #14
259: dup
260: invokespecial #15
263: ldc           #16
265: invokevirtual #17
268: iload         9
270: invokevirtual #18
273: ldc           #19
275: invokevirtual #17
278: iconst_0
279: invokevirtual #18
282: ldc           #16
284: invokevirtual #17
287: invokevirtual #20
290: iload         9
292: ifne          299
295: iconst_1
296: goto          300
299: iconst_0
300: invokestatic  #21
303: aload         10
305: invokestatic  #47
308: aload         11
310: invokestatic  #47
313: aload         12
315: invokestatic  #47
318: aload         13
320: invokestatic  #47
323: new           #14
326: dup
327: invokespecial #15
330: ldc           #16
332: invokevirtual #17
335: iload         14
337: invokevirtual #18
340: ldc           #19
342: invokevirtual #17
345: iconst_1
346: invokevirtual #18
349: ldc           #16
351: invokevirtual #17
354: invokevirtual #20
357: iload         14
359: iconst_1
360: if_icmpne     367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #21
371: new           #14
374: dup
375: invokespecial #15
378: ldc           #16
380: invokevirtual #17
383: iload         15
385: invokevirtual #18
388: ldc           #19
390: invokevirtual #17
393: iconst_1
394: invokevirtual #18
397: ldc           #16
399: invokevirtual #17
402: invokevirtual #20
405: iload         15
407: iconst_1
408: if_icmpne     415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #21
419: aload         16
421: invokestatic  #47
424: aload         17
426: invokestatic  #47
429: aload         18
431: invokestatic  #47
434: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 5575
End line: 5600
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        java.lang.Class<?>[] wildcardClassArray0 = null;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap1 = null;
        java.util.Map[] mapArray3 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[] wildcardTypeVariableMapArray4 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[]) mapArray3;
        wildcardTypeVariableMapArray4[0] = wildcardTypeVariableMap1;
        java.util.Map[][] mapArray8 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray9 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][]) mapArray8;
        wildcardTypeVariableMapArray9[0] = wildcardTypeVariableMapArray4;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray12 = org.apache.commons.lang3.ArrayUtils.toArray(wildcardTypeVariableMapArray9);
        java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardTypeVariableMapArray12);
        java.lang.reflect.Type[] typeArray14 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray13);
        boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray13, true);
        org.junit.Assert.assertNotNull(mapArray3);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray4);
        org.junit.Assert.assertNotNull(mapArray8);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray9);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #358
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: iconst_1
30: anewarray     #351
33: astore_3
34: aload_3
35: checkcast     #352
38: astore        4
40: aload         4
42: iconst_0
43: aload_2
44: aastore
45: iconst_1
46: anewarray     #352
49: astore        5
51: aload         5
53: checkcast     #353
56: astore        6
58: aload         6
60: iconst_0
61: aload         4
63: aastore
64: aload         6
66: invokestatic  #188
69: checkcast     #353
72: astore        7
74: aload         7
76: checkcast     #45
79: invokestatic  #59
82: astore        8
84: aload         8
86: checkcast     #44
89: invokestatic  #32
92: astore        9
94: aload_1
95: aload         8
97: iconst_1
98: invokestatic  #41
101: istore        10
103: aload_3
104: invokestatic  #47
107: aload         4
109: invokestatic  #47
112: aload         5
114: invokestatic  #47
117: aload         6
119: invokestatic  #47
122: aload         7
124: invokestatic  #47
127: aload         8
129: invokestatic  #47
132: aload         9
134: invokestatic  #47
137: new           #14
140: dup
141: invokespecial #15
144: ldc           #16
146: invokevirtual #17
149: iload         10
151: invokevirtual #18
154: ldc           #19
156: invokevirtual #17
159: iconst_0
160: invokevirtual #18
163: ldc           #16
165: invokevirtual #17
168: invokevirtual #20
171: iload         10
173: ifne          180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #21
184: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 5603
End line: 5664
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.reflect.Type[] typeArray27 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.Object[] objArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) classArray17);
        java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray17);
        char[] charArray34 = new char[] { '#', '#', 'a', '#' };
        boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray34);
        int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray34, 'a');
        boolean boolean38 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) classArray17, (java.lang.Object) 'a');
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray17);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray29);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[#, #, a, #]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #359
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aload         10
165: checkcast     #44
168: invokestatic  #32
171: astore        17
173: aload         10
175: checkcast     #45
178: invokestatic  #251
181: astore        18
183: aload         10
185: checkcast     #40
188: invokestatic  #53
191: astore        19
193: iconst_4
194: newarray       char
196: dup
197: iconst_0
198: bipush        35
200: castore
201: dup
202: iconst_1
203: bipush        35
205: castore
206: dup
207: iconst_2
208: bipush        97
210: castore
211: dup
212: iconst_3
213: bipush        35
215: castore
216: astore        20
218: aload         20
220: invokestatic  #323
223: istore        21
225: aload         20
227: bipush        97
229: invokestatic  #360
232: istore        22
234: aload         10
236: checkcast     #45
239: bipush        97
241: invokestatic  #361
244: invokestatic  #340
247: istore        23
249: aload         10
251: checkcast     #40
254: invokestatic  #53
257: astore        24
259: aload_2
260: invokestatic  #47
263: aload_3
264: invokestatic  #47
267: aload         4
269: invokestatic  #47
272: aload         5
274: invokestatic  #47
277: aload         6
279: invokestatic  #47
282: aload         7
284: invokestatic  #47
287: new           #14
290: dup
291: invokespecial #15
294: ldc           #16
296: invokevirtual #17
299: iload         8
301: invokevirtual #18
304: ldc           #19
306: invokevirtual #17
309: iconst_1
310: invokevirtual #18
313: ldc           #16
315: invokevirtual #17
318: invokevirtual #20
321: iload         8
323: iconst_1
324: if_icmpne     331
327: iconst_1
328: goto          332
331: iconst_0
332: invokestatic  #21
335: new           #14
338: dup
339: invokespecial #15
342: ldc           #16
344: invokevirtual #17
347: iload         9
349: invokevirtual #18
352: ldc           #19
354: invokevirtual #17
357: iconst_0
358: invokevirtual #18
361: ldc           #16
363: invokevirtual #17
366: invokevirtual #20
369: iload         9
371: ifne          378
374: iconst_1
375: goto          379
378: iconst_0
379: invokestatic  #21
382: aload         10
384: invokestatic  #47
387: aload         11
389: invokestatic  #47
392: aload         12
394: invokestatic  #47
397: aload         13
399: invokestatic  #47
402: new           #14
405: dup
406: invokespecial #15
409: ldc           #16
411: invokevirtual #17
414: iload         14
416: invokevirtual #18
419: ldc           #19
421: invokevirtual #17
424: iconst_1
425: invokevirtual #18
428: ldc           #16
430: invokevirtual #17
433: invokevirtual #20
436: iload         14
438: iconst_1
439: if_icmpne     446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #21
450: new           #14
453: dup
454: invokespecial #15
457: ldc           #16
459: invokevirtual #17
462: iload         15
464: invokevirtual #18
467: ldc           #19
469: invokevirtual #17
472: iconst_1
473: invokevirtual #18
476: ldc           #16
478: invokevirtual #17
481: invokevirtual #20
484: iload         15
486: iconst_1
487: if_icmpne     494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #21
498: aload         16
500: invokestatic  #47
503: aload         17
505: invokestatic  #47
508: aload         18
510: invokestatic  #47
513: aload         18
515: invokestatic  #252
518: ldc           #65
520: invokestatic  #62
523: aload         18
525: invokestatic  #254
528: ldc           #65
530: invokestatic  #62
533: aload         19
535: invokestatic  #47
538: aload         20
540: invokestatic  #47
543: aload         20
545: invokestatic  #60
548: ldc_w         #343
551: invokestatic  #62
554: aload         20
556: invokestatic  #63
559: ldc_w         #343
562: invokestatic  #62
565: aload         20
567: invokestatic  #64
570: ldc_w         #344
573: invokestatic  #62
576: new           #14
579: dup
580: invokespecial #15
583: ldc           #16
585: invokevirtual #17
588: iload         21
590: invokevirtual #18
593: ldc           #19
595: invokevirtual #17
598: iconst_0
599: invokevirtual #18
602: ldc           #16
604: invokevirtual #17
607: invokevirtual #20
610: iload         21
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #21
623: new           #14
626: dup
627: invokespecial #15
630: ldc           #16
632: invokevirtual #17
635: iload         22
637: invokevirtual #48
640: ldc           #19
642: invokevirtual #17
645: iconst_2
646: invokevirtual #48
649: ldc           #16
651: invokevirtual #17
654: invokevirtual #20
657: iload         22
659: iconst_2
660: if_icmpne     667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #21
671: new           #14
674: dup
675: invokespecial #15
678: ldc           #16
680: invokevirtual #17
683: iload         23
685: invokevirtual #18
688: ldc           #19
690: invokevirtual #17
693: iconst_0
694: invokevirtual #18
697: ldc           #16
699: invokevirtual #17
702: invokevirtual #20
705: iload         23
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #21
718: aload         24
720: invokestatic  #47
723: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 5667
End line: 5720
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.Character[] charArray31 = new java.lang.Character[] { '#', '#', '4', ' ' };
        char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray31);
        java.lang.Class<?>[] wildcardClassArray33 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray31);
        java.lang.reflect.Type[] typeArray34 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray33);
        boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "##4 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "##4 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[#, #, 4,  ]");
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #362
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: iconst_4
164: anewarray     #56
167: dup
168: iconst_0
169: bipush        35
171: invokestatic  #361
174: aastore
175: dup
176: iconst_1
177: bipush        35
179: invokestatic  #361
182: aastore
183: dup
184: iconst_2
185: bipush        52
187: invokestatic  #361
190: aastore
191: dup
192: iconst_3
193: bipush        32
195: invokestatic  #361
198: aastore
199: astore        17
201: aload         17
203: invokestatic  #58
206: astore        18
208: aload         17
210: checkcast     #45
213: invokestatic  #59
216: astore        19
218: aload         19
220: checkcast     #44
223: invokestatic  #32
226: astore        20
228: aload         10
230: checkcast     #40
233: aload         19
235: invokestatic  #43
238: istore        21
240: aload_2
241: invokestatic  #47
244: aload_3
245: invokestatic  #47
248: aload         4
250: invokestatic  #47
253: aload         5
255: invokestatic  #47
258: aload         6
260: invokestatic  #47
263: aload         7
265: invokestatic  #47
268: new           #14
271: dup
272: invokespecial #15
275: ldc           #16
277: invokevirtual #17
280: iload         8
282: invokevirtual #18
285: ldc           #19
287: invokevirtual #17
290: iconst_1
291: invokevirtual #18
294: ldc           #16
296: invokevirtual #17
299: invokevirtual #20
302: iload         8
304: iconst_1
305: if_icmpne     312
308: iconst_1
309: goto          313
312: iconst_0
313: invokestatic  #21
316: new           #14
319: dup
320: invokespecial #15
323: ldc           #16
325: invokevirtual #17
328: iload         9
330: invokevirtual #18
333: ldc           #19
335: invokevirtual #17
338: iconst_0
339: invokevirtual #18
342: ldc           #16
344: invokevirtual #17
347: invokevirtual #20
350: iload         9
352: ifne          359
355: iconst_1
356: goto          360
359: iconst_0
360: invokestatic  #21
363: aload         10
365: invokestatic  #47
368: aload         11
370: invokestatic  #47
373: aload         12
375: invokestatic  #47
378: aload         13
380: invokestatic  #47
383: new           #14
386: dup
387: invokespecial #15
390: ldc           #16
392: invokevirtual #17
395: iload         14
397: invokevirtual #18
400: ldc           #19
402: invokevirtual #17
405: iconst_1
406: invokevirtual #18
409: ldc           #16
411: invokevirtual #17
414: invokevirtual #20
417: iload         14
419: iconst_1
420: if_icmpne     427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #21
431: new           #14
434: dup
435: invokespecial #15
438: ldc           #16
440: invokevirtual #17
443: iload         15
445: invokevirtual #18
448: ldc           #19
450: invokevirtual #17
453: iconst_1
454: invokevirtual #18
457: ldc           #16
459: invokevirtual #17
462: invokevirtual #20
465: iload         15
467: iconst_1
468: if_icmpne     475
471: iconst_1
472: goto          476
475: iconst_0
476: invokestatic  #21
479: aload         16
481: invokestatic  #47
484: aload         17
486: invokestatic  #47
489: aload         18
491: invokestatic  #47
494: aload         18
496: invokestatic  #60
499: ldc_w         #363
502: invokestatic  #62
505: aload         18
507: invokestatic  #63
510: ldc_w         #363
513: invokestatic  #62
516: aload         18
518: invokestatic  #64
521: ldc_w         #364
524: invokestatic  #62
527: aload         19
529: invokestatic  #47
532: aload         20
534: invokestatic  #47
537: new           #14
540: dup
541: invokespecial #15
544: ldc           #16
546: invokevirtual #17
549: iload         21
551: invokevirtual #18
554: ldc           #19
556: invokevirtual #17
559: iconst_0
560: invokevirtual #18
563: ldc           #16
565: invokevirtual #17
568: invokevirtual #20
571: iload         21
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #21
584: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 5723
End line: 5775
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.reflect.Type[] typeArray27 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.Object[] objArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) classArray17);
        java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray17);
        java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray17);
        java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray17);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray29);
        org.junit.Assert.assertNotNull(wildcardClassArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #365
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aload         10
165: checkcast     #44
168: invokestatic  #32
171: astore        17
173: aload         10
175: checkcast     #45
178: invokestatic  #251
181: astore        18
183: aload         10
185: checkcast     #40
188: invokestatic  #53
191: astore        19
193: aload         10
195: checkcast     #40
198: invokestatic  #53
201: astore        20
203: aload         10
205: checkcast     #40
208: invokestatic  #42
211: astore        21
213: aload_2
214: invokestatic  #47
217: aload_3
218: invokestatic  #47
221: aload         4
223: invokestatic  #47
226: aload         5
228: invokestatic  #47
231: aload         6
233: invokestatic  #47
236: aload         7
238: invokestatic  #47
241: new           #14
244: dup
245: invokespecial #15
248: ldc           #16
250: invokevirtual #17
253: iload         8
255: invokevirtual #18
258: ldc           #19
260: invokevirtual #17
263: iconst_1
264: invokevirtual #18
267: ldc           #16
269: invokevirtual #17
272: invokevirtual #20
275: iload         8
277: iconst_1
278: if_icmpne     285
281: iconst_1
282: goto          286
285: iconst_0
286: invokestatic  #21
289: new           #14
292: dup
293: invokespecial #15
296: ldc           #16
298: invokevirtual #17
301: iload         9
303: invokevirtual #18
306: ldc           #19
308: invokevirtual #17
311: iconst_0
312: invokevirtual #18
315: ldc           #16
317: invokevirtual #17
320: invokevirtual #20
323: iload         9
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #21
336: aload         10
338: invokestatic  #47
341: aload         11
343: invokestatic  #47
346: aload         12
348: invokestatic  #47
351: aload         13
353: invokestatic  #47
356: new           #14
359: dup
360: invokespecial #15
363: ldc           #16
365: invokevirtual #17
368: iload         14
370: invokevirtual #18
373: ldc           #19
375: invokevirtual #17
378: iconst_1
379: invokevirtual #18
382: ldc           #16
384: invokevirtual #17
387: invokevirtual #20
390: iload         14
392: iconst_1
393: if_icmpne     400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #21
404: new           #14
407: dup
408: invokespecial #15
411: ldc           #16
413: invokevirtual #17
416: iload         15
418: invokevirtual #18
421: ldc           #19
423: invokevirtual #17
426: iconst_1
427: invokevirtual #18
430: ldc           #16
432: invokevirtual #17
435: invokevirtual #20
438: iload         15
440: iconst_1
441: if_icmpne     448
444: iconst_1
445: goto          449
448: iconst_0
449: invokestatic  #21
452: aload         16
454: invokestatic  #47
457: aload         17
459: invokestatic  #47
462: aload         18
464: invokestatic  #47
467: aload         18
469: invokestatic  #252
472: ldc           #65
474: invokestatic  #62
477: aload         18
479: invokestatic  #254
482: ldc           #65
484: invokestatic  #62
487: aload         19
489: invokestatic  #47
492: aload         20
494: invokestatic  #47
497: aload         21
499: invokestatic  #47
502: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 5778
End line: 5797
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        float[] floatArray1 = new float[] { 10.0f };
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray1);
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) floatArray3);
        java.lang.reflect.Type[] typeArray7 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray6);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray1), "[10.0]");
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[10.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertNotNull(typeArray7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #366
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       float
28: dup
29: iconst_0
30: ldc           #225
32: fastore
33: astore_1
34: aload_1
35: invokestatic  #367
38: astore_2
39: aload_2
40: invokestatic  #368
43: astore_3
44: aload_3
45: invokestatic  #369
48: astore        4
50: aload_3
51: invokestatic  #369
54: astore        5
56: aload_3
57: checkcast     #45
60: invokestatic  #59
63: astore        6
65: aload         6
67: checkcast     #44
70: invokestatic  #32
73: astore        7
75: aload_1
76: invokestatic  #47
79: aload_1
80: invokestatic  #142
83: ldc_w         #370
86: invokestatic  #62
89: aload_2
90: invokestatic  #47
93: aload_2
94: invokestatic  #142
97: ldc_w         #370
100: invokestatic  #62
103: aload_3
104: invokestatic  #47
107: aload         4
109: invokestatic  #47
112: aload         5
114: invokestatic  #47
117: aload         6
119: invokestatic  #47
122: aload         7
124: invokestatic  #47
127: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 5800
End line: 5848
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.reflect.Type[] typeArray27 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.Object[] objArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) classArray17);
        java.lang.String str30 = org.apache.commons.lang3.ClassUtils.getSimpleName((java.lang.Object) objArray28, "\\u005C\\u0075\\u0030\\u0030\\u0036\\u0038\\u005C\\u0075\\u0030\\u0030\\u0036\\u0039\\u005C\\u0075\\u0030\\u0030\\u0032\\u0031");
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Object[]" + "'", str30, "Object[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #371
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aload         10
165: checkcast     #44
168: invokestatic  #32
171: astore        17
173: aload         10
175: checkcast     #45
178: invokestatic  #251
181: astore        18
183: aload         18
185: ldc_w         #372
188: invokestatic  #200
191: astore        19
193: aload_2
194: invokestatic  #47
197: aload_3
198: invokestatic  #47
201: aload         4
203: invokestatic  #47
206: aload         5
208: invokestatic  #47
211: aload         6
213: invokestatic  #47
216: aload         7
218: invokestatic  #47
221: new           #14
224: dup
225: invokespecial #15
228: ldc           #16
230: invokevirtual #17
233: iload         8
235: invokevirtual #18
238: ldc           #19
240: invokevirtual #17
243: iconst_1
244: invokevirtual #18
247: ldc           #16
249: invokevirtual #17
252: invokevirtual #20
255: iload         8
257: iconst_1
258: if_icmpne     265
261: iconst_1
262: goto          266
265: iconst_0
266: invokestatic  #21
269: new           #14
272: dup
273: invokespecial #15
276: ldc           #16
278: invokevirtual #17
281: iload         9
283: invokevirtual #18
286: ldc           #19
288: invokevirtual #17
291: iconst_0
292: invokevirtual #18
295: ldc           #16
297: invokevirtual #17
300: invokevirtual #20
303: iload         9
305: ifne          312
308: iconst_1
309: goto          313
312: iconst_0
313: invokestatic  #21
316: aload         10
318: invokestatic  #47
321: aload         11
323: invokestatic  #47
326: aload         12
328: invokestatic  #47
331: aload         13
333: invokestatic  #47
336: new           #14
339: dup
340: invokespecial #15
343: ldc           #16
345: invokevirtual #17
348: iload         14
350: invokevirtual #18
353: ldc           #19
355: invokevirtual #17
358: iconst_1
359: invokevirtual #18
362: ldc           #16
364: invokevirtual #17
367: invokevirtual #20
370: iload         14
372: iconst_1
373: if_icmpne     380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #21
384: new           #14
387: dup
388: invokespecial #15
391: ldc           #16
393: invokevirtual #17
396: iload         15
398: invokevirtual #18
401: ldc           #19
403: invokevirtual #17
406: iconst_1
407: invokevirtual #18
410: ldc           #16
412: invokevirtual #17
415: invokevirtual #20
418: iload         15
420: iconst_1
421: if_icmpne     428
424: iconst_1
425: goto          429
428: iconst_0
429: invokestatic  #21
432: aload         16
434: invokestatic  #47
437: aload         17
439: invokestatic  #47
442: aload         18
444: invokestatic  #47
447: aload         18
449: invokestatic  #252
452: ldc           #65
454: invokestatic  #62
457: aload         18
459: invokestatic  #254
462: ldc           #65
464: invokestatic  #62
467: new           #14
470: dup
471: invokespecial #15
474: ldc           #16
476: invokevirtual #17
479: aload         19
481: invokevirtual #17
484: ldc_w         #373
487: invokevirtual #17
490: invokevirtual #20
493: aload         19
495: ldc_w         #374
498: invokestatic  #178
501: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 5851
End line: 5875
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap0 = null;
        java.util.Map[] mapArray2 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[] wildcardTypeVariableMapArray3 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[]) mapArray2;
        wildcardTypeVariableMapArray3[0] = wildcardTypeVariableMap0;
        java.util.Map[][] mapArray7 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray8 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][]) mapArray7;
        wildcardTypeVariableMapArray8[0] = wildcardTypeVariableMapArray3;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray11 = org.apache.commons.lang3.ArrayUtils.toArray(wildcardTypeVariableMapArray8);
        java.lang.Class<?>[] wildcardClassArray12 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardTypeVariableMapArray11);
        java.lang.reflect.Type[] typeArray13 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray12);
        java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray12);
        org.junit.Assert.assertNotNull(mapArray2);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray3);
        org.junit.Assert.assertNotNull(mapArray7);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray8);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #375
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #351
31: astore_2
32: aload_2
33: checkcast     #352
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_1
42: anewarray     #352
45: astore        4
47: aload         4
49: checkcast     #353
52: astore        5
54: aload         5
56: iconst_0
57: aload_3
58: aastore
59: aload         5
61: invokestatic  #188
64: checkcast     #353
67: astore        6
69: aload         6
71: checkcast     #45
74: invokestatic  #59
77: astore        7
79: aload         7
81: checkcast     #44
84: invokestatic  #32
87: astore        8
89: aload         7
91: checkcast     #45
94: invokestatic  #59
97: astore        9
99: aload_2
100: invokestatic  #47
103: aload_3
104: invokestatic  #47
107: aload         4
109: invokestatic  #47
112: aload         5
114: invokestatic  #47
117: aload         6
119: invokestatic  #47
122: aload         7
124: invokestatic  #47
127: aload         8
129: invokestatic  #47
132: aload         9
134: invokestatic  #47
137: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 5878
End line: 6019
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.reflect.Type[] typeArray27 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.Object[] objArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) classArray17);
        java.lang.Class<?> wildcardClass29 = null;
        java.lang.Class[] classArray31 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass29;
        java.lang.Class[] classArray36 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray37 = (java.lang.Class<?>[]) classArray36;
        java.lang.Class[] classArray39 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39;
        boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray36, (java.lang.Class<?>[]) classArray39, true);
        boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray32, (java.lang.Class<?>[]) classArray36, true);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        java.lang.Class[] classArray49 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray50 = (java.lang.Class<?>[]) classArray49;
        boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray46, (java.lang.Class<?>[]) classArray49, true);
        boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray36, (java.lang.Class<?>[]) classArray46, false);
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap55 = null;
        java.util.Map[] mapArray57 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[] wildcardTypeVariableMapArray58 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[]) mapArray57;
        wildcardTypeVariableMapArray58[0] = wildcardTypeVariableMap55;
        java.util.Map[][] mapArray62 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray63 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][]) mapArray62;
        wildcardTypeVariableMapArray63[0] = wildcardTypeVariableMapArray58;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray66 = org.apache.commons.lang3.ArrayUtils.toArray(wildcardTypeVariableMapArray63);
        java.lang.Class<?>[] wildcardClassArray67 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardTypeVariableMapArray66);
        java.lang.Class<?> wildcardClass68 = null;
        java.lang.Class[] classArray70 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray71 = (java.lang.Class<?>[]) classArray70;
        wildcardClassArray71[0] = wildcardClass68;
        java.lang.Class[] classArray75 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        java.lang.Class[] classArray78 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        boolean boolean81 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray75, (java.lang.Class<?>[]) classArray78, true);
        boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray71, (java.lang.Class<?>[]) classArray75, true);
        java.lang.Class[] classArray85 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray86 = (java.lang.Class<?>[]) classArray85;
        java.lang.Class[] classArray88 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray89 = (java.lang.Class<?>[]) classArray88;
        boolean boolean91 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray85, (java.lang.Class<?>[]) classArray88, true);
        boolean boolean93 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray75, (java.lang.Class<?>[]) classArray85, false);
        boolean boolean94 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray67, (java.lang.Class<?>[]) classArray75);
        boolean boolean95 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray46, (java.lang.Class<?>[]) classArray75);
        boolean boolean96 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray75);
        java.lang.Class<?>[] wildcardClassArray97 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray75);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(wildcardClassArray37);
        org.junit.Assert.assertNotNull(classArray39);
        org.junit.Assert.assertNotNull(wildcardClassArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(classArray49);
        org.junit.Assert.assertNotNull(wildcardClassArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(mapArray57);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray58);
        org.junit.Assert.assertNotNull(mapArray62);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray63);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray66);
        org.junit.Assert.assertNotNull(wildcardClassArray67);
        org.junit.Assert.assertNotNull(classArray70);
        org.junit.Assert.assertNotNull(wildcardClassArray71);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(classArray85);
        org.junit.Assert.assertNotNull(wildcardClassArray86);
        org.junit.Assert.assertNotNull(classArray88);
        org.junit.Assert.assertNotNull(wildcardClassArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #376
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aload         10
165: checkcast     #44
168: invokestatic  #32
171: astore        17
173: aload         10
175: checkcast     #45
178: invokestatic  #251
181: astore        18
183: aconst_null
184: astore        19
186: iconst_1
187: anewarray     #39
190: astore        20
192: aload         20
194: checkcast     #40
197: astore        21
199: aload         21
201: iconst_0
202: aload         19
204: aastore
205: iconst_0
206: anewarray     #39
209: astore        22
211: aload         22
213: checkcast     #40
216: astore        23
218: iconst_0
219: anewarray     #39
222: astore        24
224: aload         24
226: checkcast     #40
229: astore        25
231: aload         22
233: checkcast     #40
236: aload         24
238: checkcast     #40
241: iconst_1
242: invokestatic  #41
245: istore        26
247: aload         21
249: aload         22
251: checkcast     #40
254: iconst_1
255: invokestatic  #41
258: istore        27
260: iconst_0
261: anewarray     #39
264: astore        28
266: aload         28
268: checkcast     #40
271: astore        29
273: iconst_0
274: anewarray     #39
277: astore        30
279: aload         30
281: checkcast     #40
284: astore        31
286: aload         28
288: checkcast     #40
291: aload         30
293: checkcast     #40
296: iconst_1
297: invokestatic  #41
300: istore        32
302: aload         22
304: checkcast     #40
307: aload         28
309: checkcast     #40
312: iconst_0
313: invokestatic  #41
316: istore        33
318: aconst_null
319: astore        34
321: iconst_1
322: anewarray     #351
325: astore        35
327: aload         35
329: checkcast     #352
332: astore        36
334: aload         36
336: iconst_0
337: aload         34
339: aastore
340: iconst_1
341: anewarray     #352
344: astore        37
346: aload         37
348: checkcast     #353
351: astore        38
353: aload         38
355: iconst_0
356: aload         36
358: aastore
359: aload         38
361: invokestatic  #188
364: checkcast     #353
367: astore        39
369: aload         39
371: checkcast     #45
374: invokestatic  #59
377: astore        40
379: aconst_null
380: astore        41
382: iconst_1
383: anewarray     #39
386: astore        42
388: aload         42
390: checkcast     #40
393: astore        43
395: aload         43
397: iconst_0
398: aload         41
400: aastore
401: iconst_0
402: anewarray     #39
405: astore        44
407: aload         44
409: checkcast     #40
412: astore        45
414: iconst_0
415: anewarray     #39
418: astore        46
420: aload         46
422: checkcast     #40
425: astore        47
427: aload         44
429: checkcast     #40
432: aload         46
434: checkcast     #40
437: iconst_1
438: invokestatic  #41
441: istore        48
443: aload         43
445: aload         44
447: checkcast     #40
450: iconst_1
451: invokestatic  #41
454: istore        49
456: iconst_0
457: anewarray     #39
460: astore        50
462: aload         50
464: checkcast     #40
467: astore        51
469: iconst_0
470: anewarray     #39
473: astore        52
475: aload         52
477: checkcast     #40
480: astore        53
482: aload         50
484: checkcast     #40
487: aload         52
489: checkcast     #40
492: iconst_1
493: invokestatic  #41
496: istore        54
498: aload         44
500: checkcast     #40
503: aload         50
505: checkcast     #40
508: iconst_0
509: invokestatic  #41
512: istore        55
514: aload         40
516: aload         44
518: checkcast     #40
521: invokestatic  #43
524: istore        56
526: aload         28
528: checkcast     #40
531: aload         44
533: checkcast     #40
536: invokestatic  #43
539: istore        57
541: aload         10
543: checkcast     #40
546: aload         44
548: checkcast     #40
551: invokestatic  #43
554: istore        58
556: aload         44
558: checkcast     #40
561: invokestatic  #42
564: astore        59
566: aload_2
567: invokestatic  #47
570: aload_3
571: invokestatic  #47
574: aload         4
576: invokestatic  #47
579: aload         5
581: invokestatic  #47
584: aload         6
586: invokestatic  #47
589: aload         7
591: invokestatic  #47
594: new           #14
597: dup
598: invokespecial #15
601: ldc           #16
603: invokevirtual #17
606: iload         8
608: invokevirtual #18
611: ldc           #19
613: invokevirtual #17
616: iconst_1
617: invokevirtual #18
620: ldc           #16
622: invokevirtual #17
625: invokevirtual #20
628: iload         8
630: iconst_1
631: if_icmpne     638
634: iconst_1
635: goto          639
638: iconst_0
639: invokestatic  #21
642: new           #14
645: dup
646: invokespecial #15
649: ldc           #16
651: invokevirtual #17
654: iload         9
656: invokevirtual #18
659: ldc           #19
661: invokevirtual #17
664: iconst_0
665: invokevirtual #18
668: ldc           #16
670: invokevirtual #17
673: invokevirtual #20
676: iload         9
678: ifne          685
681: iconst_1
682: goto          686
685: iconst_0
686: invokestatic  #21
689: aload         10
691: invokestatic  #47
694: aload         11
696: invokestatic  #47
699: aload         12
701: invokestatic  #47
704: aload         13
706: invokestatic  #47
709: new           #14
712: dup
713: invokespecial #15
716: ldc           #16
718: invokevirtual #17
721: iload         14
723: invokevirtual #18
726: ldc           #19
728: invokevirtual #17
731: iconst_1
732: invokevirtual #18
735: ldc           #16
737: invokevirtual #17
740: invokevirtual #20
743: iload         14
745: iconst_1
746: if_icmpne     753
749: iconst_1
750: goto          754
753: iconst_0
754: invokestatic  #21
757: new           #14
760: dup
761: invokespecial #15
764: ldc           #16
766: invokevirtual #17
769: iload         15
771: invokevirtual #18
774: ldc           #19
776: invokevirtual #17
779: iconst_1
780: invokevirtual #18
783: ldc           #16
785: invokevirtual #17
788: invokevirtual #20
791: iload         15
793: iconst_1
794: if_icmpne     801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #21
805: aload         16
807: invokestatic  #47
810: aload         17
812: invokestatic  #47
815: aload         18
817: invokestatic  #47
820: aload         18
822: invokestatic  #252
825: ldc           #65
827: invokestatic  #62
830: aload         18
832: invokestatic  #254
835: ldc           #65
837: invokestatic  #62
840: aload         20
842: invokestatic  #47
845: aload         21
847: invokestatic  #47
850: aload         22
852: invokestatic  #47
855: aload         23
857: invokestatic  #47
860: aload         24
862: invokestatic  #47
865: aload         25
867: invokestatic  #47
870: new           #14
873: dup
874: invokespecial #15
877: ldc           #16
879: invokevirtual #17
882: iload         26
884: invokevirtual #18
887: ldc           #19
889: invokevirtual #17
892: iconst_1
893: invokevirtual #18
896: ldc           #16
898: invokevirtual #17
901: invokevirtual #20
904: iload         26
906: iconst_1
907: if_icmpne     914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #21
918: new           #14
921: dup
922: invokespecial #15
925: ldc           #16
927: invokevirtual #17
930: iload         27
932: invokevirtual #18
935: ldc           #19
937: invokevirtual #17
940: iconst_0
941: invokevirtual #18
944: ldc           #16
946: invokevirtual #17
949: invokevirtual #20
952: iload         27
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #21
965: aload         28
967: invokestatic  #47
970: aload         29
972: invokestatic  #47
975: aload         30
977: invokestatic  #47
980: aload         31
982: invokestatic  #47
985: new           #14
988: dup
989: invokespecial #15
992: ldc           #16
994: invokevirtual #17
997: iload         32
999: invokevirtual #18
1002: ldc           #19
1004: invokevirtual #17
1007: iconst_1
1008: invokevirtual #18
1011: ldc           #16
1013: invokevirtual #17
1016: invokevirtual #20
1019: iload         32
1021: iconst_1
1022: if_icmpne     1029
1025: iconst_1
1026: goto          1030
1029: iconst_0
1030: invokestatic  #21
1033: new           #14
1036: dup
1037: invokespecial #15
1040: ldc           #16
1042: invokevirtual #17
1045: iload         33
1047: invokevirtual #18
1050: ldc           #19
1052: invokevirtual #17
1055: iconst_1
1056: invokevirtual #18
1059: ldc           #16
1061: invokevirtual #17
1064: invokevirtual #20
1067: iload         33
1069: iconst_1
1070: if_icmpne     1077
1073: iconst_1
1074: goto          1078
1077: iconst_0
1078: invokestatic  #21
1081: aload         35
1083: invokestatic  #47
1086: aload         36
1088: invokestatic  #47
1091: aload         37
1093: invokestatic  #47
1096: aload         38
1098: invokestatic  #47
1101: aload         39
1103: invokestatic  #47
1106: aload         40
1108: invokestatic  #47
1111: aload         42
1113: invokestatic  #47
1116: aload         43
1118: invokestatic  #47
1121: aload         44
1123: invokestatic  #47
1126: aload         45
1128: invokestatic  #47
1131: aload         46
1133: invokestatic  #47
1136: aload         47
1138: invokestatic  #47
1141: new           #14
1144: dup
1145: invokespecial #15
1148: ldc           #16
1150: invokevirtual #17
1153: iload         48
1155: invokevirtual #18
1158: ldc           #19
1160: invokevirtual #17
1163: iconst_1
1164: invokevirtual #18
1167: ldc           #16
1169: invokevirtual #17
1172: invokevirtual #20
1175: iload         48
1177: iconst_1
1178: if_icmpne     1185
1181: iconst_1
1182: goto          1186
1185: iconst_0
1186: invokestatic  #21
1189: new           #14
1192: dup
1193: invokespecial #15
1196: ldc           #16
1198: invokevirtual #17
1201: iload         49
1203: invokevirtual #18
1206: ldc           #19
1208: invokevirtual #17
1211: iconst_0
1212: invokevirtual #18
1215: ldc           #16
1217: invokevirtual #17
1220: invokevirtual #20
1223: iload         49
1225: ifne          1232
1228: iconst_1
1229: goto          1233
1232: iconst_0
1233: invokestatic  #21
1236: aload         50
1238: invokestatic  #47
1241: aload         51
1243: invokestatic  #47
1246: aload         52
1248: invokestatic  #47
1251: aload         53
1253: invokestatic  #47
1256: new           #14
1259: dup
1260: invokespecial #15
1263: ldc           #16
1265: invokevirtual #17
1268: iload         54
1270: invokevirtual #18
1273: ldc           #19
1275: invokevirtual #17
1278: iconst_1
1279: invokevirtual #18
1282: ldc           #16
1284: invokevirtual #17
1287: invokevirtual #20
1290: iload         54
1292: iconst_1
1293: if_icmpne     1300
1296: iconst_1
1297: goto          1301
1300: iconst_0
1301: invokestatic  #21
1304: new           #14
1307: dup
1308: invokespecial #15
1311: ldc           #16
1313: invokevirtual #17
1316: iload         55
1318: invokevirtual #18
1321: ldc           #19
1323: invokevirtual #17
1326: iconst_1
1327: invokevirtual #18
1330: ldc           #16
1332: invokevirtual #17
1335: invokevirtual #20
1338: iload         55
1340: iconst_1
1341: if_icmpne     1348
1344: iconst_1
1345: goto          1349
1348: iconst_0
1349: invokestatic  #21
1352: new           #14
1355: dup
1356: invokespecial #15
1359: ldc           #16
1361: invokevirtual #17
1364: iload         56
1366: invokevirtual #18
1369: ldc           #19
1371: invokevirtual #17
1374: iconst_0
1375: invokevirtual #18
1378: ldc           #16
1380: invokevirtual #17
1383: invokevirtual #20
1386: iload         56
1388: ifne          1395
1391: iconst_1
1392: goto          1396
1395: iconst_0
1396: invokestatic  #21
1399: new           #14
1402: dup
1403: invokespecial #15
1406: ldc           #16
1408: invokevirtual #17
1411: iload         57
1413: invokevirtual #18
1416: ldc           #19
1418: invokevirtual #17
1421: iconst_1
1422: invokevirtual #18
1425: ldc           #16
1427: invokevirtual #17
1430: invokevirtual #20
1433: iload         57
1435: iconst_1
1436: if_icmpne     1443
1439: iconst_1
1440: goto          1444
1443: iconst_0
1444: invokestatic  #21
1447: new           #14
1450: dup
1451: invokespecial #15
1454: ldc           #16
1456: invokevirtual #17
1459: iload         58
1461: invokevirtual #18
1464: ldc           #19
1466: invokevirtual #17
1469: iconst_1
1470: invokevirtual #18
1473: ldc           #16
1475: invokevirtual #17
1478: invokevirtual #20
1481: iload         58
1483: iconst_1
1484: if_icmpne     1491
1487: iconst_1
1488: goto          1492
1491: iconst_0
1492: invokestatic  #21
1495: aload         59
1497: invokestatic  #47
1500: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 6022
End line: 6104
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.reflect.Type[] typeArray27 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.Object[] objArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) classArray17);
        java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray17);
        boolean[] booleanArray30 = new boolean[] {};
        boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.add(booleanArray30, false);
        boolean[] booleanArray33 = new boolean[] {};
        boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, false);
        boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.removeElements(booleanArray32, booleanArray33);
        int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray33, true, (int) (byte) 100);
        boolean[] booleanArray40 = new boolean[] {};
        boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray40, false);
        boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray33, booleanArray40);
        boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray33, false);
        boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45);
        java.lang.reflect.Type[] typeArray47 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.reflect.Type[]) wildcardClassArray29, (java.lang.Object) booleanArray45);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray29);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]");
        org.junit.Assert.assertNotNull(typeArray47);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #377
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aload         10
165: checkcast     #44
168: invokestatic  #32
171: astore        17
173: aload         10
175: checkcast     #45
178: invokestatic  #251
181: astore        18
183: aload         10
185: checkcast     #40
188: invokestatic  #53
191: astore        19
193: iconst_0
194: newarray       boolean
196: astore        20
198: aload         20
200: iconst_0
201: invokestatic  #307
204: astore        21
206: iconst_0
207: newarray       boolean
209: astore        22
211: aload         22
213: iconst_0
214: invokestatic  #307
217: astore        23
219: aload         21
221: aload         22
223: invokestatic  #304
226: astore        24
228: aload         22
230: iconst_1
231: bipush        100
233: invokestatic  #342
236: istore        25
238: iconst_0
239: newarray       boolean
241: astore        26
243: aload         26
245: iconst_0
246: invokestatic  #307
249: astore        27
251: aload         22
253: aload         26
255: invokestatic  #378
258: astore        28
260: aload         22
262: iconst_0
263: invokestatic  #308
266: astore        29
268: aload         29
270: invokestatic  #379
273: astore        30
275: aload         19
277: checkcast     #44
280: aload         29
282: invokestatic  #121
285: checkcast     #44
288: astore        31
290: aload_2
291: invokestatic  #47
294: aload_3
295: invokestatic  #47
298: aload         4
300: invokestatic  #47
303: aload         5
305: invokestatic  #47
308: aload         6
310: invokestatic  #47
313: aload         7
315: invokestatic  #47
318: new           #14
321: dup
322: invokespecial #15
325: ldc           #16
327: invokevirtual #17
330: iload         8
332: invokevirtual #18
335: ldc           #19
337: invokevirtual #17
340: iconst_1
341: invokevirtual #18
344: ldc           #16
346: invokevirtual #17
349: invokevirtual #20
352: iload         8
354: iconst_1
355: if_icmpne     362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #21
366: new           #14
369: dup
370: invokespecial #15
373: ldc           #16
375: invokevirtual #17
378: iload         9
380: invokevirtual #18
383: ldc           #19
385: invokevirtual #17
388: iconst_0
389: invokevirtual #18
392: ldc           #16
394: invokevirtual #17
397: invokevirtual #20
400: iload         9
402: ifne          409
405: iconst_1
406: goto          410
409: iconst_0
410: invokestatic  #21
413: aload         10
415: invokestatic  #47
418: aload         11
420: invokestatic  #47
423: aload         12
425: invokestatic  #47
428: aload         13
430: invokestatic  #47
433: new           #14
436: dup
437: invokespecial #15
440: ldc           #16
442: invokevirtual #17
445: iload         14
447: invokevirtual #18
450: ldc           #19
452: invokevirtual #17
455: iconst_1
456: invokevirtual #18
459: ldc           #16
461: invokevirtual #17
464: invokevirtual #20
467: iload         14
469: iconst_1
470: if_icmpne     477
473: iconst_1
474: goto          478
477: iconst_0
478: invokestatic  #21
481: new           #14
484: dup
485: invokespecial #15
488: ldc           #16
490: invokevirtual #17
493: iload         15
495: invokevirtual #18
498: ldc           #19
500: invokevirtual #17
503: iconst_1
504: invokevirtual #18
507: ldc           #16
509: invokevirtual #17
512: invokevirtual #20
515: iload         15
517: iconst_1
518: if_icmpne     525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #21
529: aload         16
531: invokestatic  #47
534: aload         17
536: invokestatic  #47
539: aload         18
541: invokestatic  #47
544: aload         18
546: invokestatic  #252
549: ldc           #65
551: invokestatic  #62
554: aload         18
556: invokestatic  #254
559: ldc           #65
561: invokestatic  #62
564: aload         19
566: invokestatic  #47
569: aload         20
571: invokestatic  #47
574: aload         20
576: invokestatic  #247
579: ldc           #65
581: invokestatic  #62
584: aload         21
586: invokestatic  #47
589: aload         21
591: invokestatic  #247
594: ldc_w         #309
597: invokestatic  #62
600: aload         22
602: invokestatic  #47
605: aload         22
607: invokestatic  #247
610: ldc           #65
612: invokestatic  #62
615: aload         23
617: invokestatic  #47
620: aload         23
622: invokestatic  #247
625: ldc_w         #309
628: invokestatic  #62
631: aload         24
633: invokestatic  #47
636: aload         24
638: invokestatic  #247
641: ldc_w         #309
644: invokestatic  #62
647: new           #14
650: dup
651: invokespecial #15
654: ldc           #16
656: invokevirtual #17
659: iload         25
661: invokevirtual #48
664: ldc           #19
666: invokevirtual #17
669: iconst_m1
670: invokevirtual #48
673: ldc           #16
675: invokevirtual #17
678: invokevirtual #20
681: iload         25
683: iconst_m1
684: if_icmpne     691
687: iconst_1
688: goto          692
691: iconst_0
692: invokestatic  #21
695: aload         26
697: invokestatic  #47
700: aload         26
702: invokestatic  #247
705: ldc           #65
707: invokestatic  #62
710: aload         27
712: invokestatic  #47
715: aload         27
717: invokestatic  #247
720: ldc_w         #309
723: invokestatic  #62
726: aload         28
728: invokestatic  #47
731: aload         28
733: invokestatic  #247
736: ldc           #65
738: invokestatic  #62
741: aload         29
743: invokestatic  #47
746: aload         29
748: invokestatic  #247
751: ldc           #65
753: invokestatic  #62
756: aload         30
758: invokestatic  #47
761: aload         30
763: invokestatic  #247
766: ldc           #65
768: invokestatic  #62
771: aload         31
773: invokestatic  #47
776: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 6107
End line: 6155
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        float[] floatArray2 = new float[] { (byte) 1, (byte) 1 };
        int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray2, (float) ' ', (int) 'a');
        float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray2, (int) (byte) 10, (int) '#');
        float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, 0);
        float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10);
        float[] floatArray14 = new float[] { (byte) 1, (byte) 1 };
        int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, (float) ' ', (int) 'a');
        int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray14, (float) (byte) -1, (int) (short) 10);
        float[] floatArray23 = new float[] { (byte) 1, (byte) 1 };
        int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray23, (float) ' ', (int) 'a');
        float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray23, (int) (byte) 10, (int) '#');
        float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.removeElements(floatArray14, floatArray29);
        float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray14);
        java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10);
        java.lang.Class<?>[] wildcardClassArray33 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) floatArray32);
        java.lang.reflect.Type[] typeArray34 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray33);
        java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray33);
        java.lang.reflect.Type[] typeArray36 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray35);
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(floatArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[]");
        org.junit.Assert.assertNotNull(floatArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[1.0]");
        org.junit.Assert.assertNotNull(floatArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(floatArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[]");
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[1.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(typeArray36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #380
20: aastore
21: invokevirtual #7
24: pop
25: iconst_2
26: newarray       float
28: dup
29: iconst_0
30: fconst_1
31: fastore
32: dup
33: iconst_1
34: fconst_1
35: fastore
36: astore_1
37: aload_1
38: ldc           #131
40: bipush        97
42: invokestatic  #381
45: istore_2
46: aload_1
47: bipush        10
49: bipush        35
51: invokestatic  #229
54: astore_3
55: aload_1
56: iconst_0
57: invokestatic  #382
60: astore        4
62: aload         4
64: invokestatic  #367
67: astore        5
69: iconst_2
70: newarray       float
72: dup
73: iconst_0
74: fconst_1
75: fastore
76: dup
77: iconst_1
78: fconst_1
79: fastore
80: astore        6
82: aload         6
84: ldc           #131
86: bipush        97
88: invokestatic  #381
91: istore        7
93: aload         6
95: ldc           #129
97: bipush        10
99: invokestatic  #138
102: istore        8
104: iconst_2
105: newarray       float
107: dup
108: iconst_0
109: fconst_1
110: fastore
111: dup
112: iconst_1
113: fconst_1
114: fastore
115: astore        9
117: aload         9
119: ldc           #131
121: bipush        97
123: invokestatic  #381
126: istore        10
128: aload         9
130: bipush        10
132: bipush        35
134: invokestatic  #229
137: astore        11
139: aload         6
141: aload         11
143: invokestatic  #134
146: astore        12
148: aload         4
150: aload         6
152: invokestatic  #227
155: astore        13
157: aload         4
159: invokestatic  #368
162: astore        14
164: aload         14
166: checkcast     #45
169: invokestatic  #59
172: astore        15
174: aload         15
176: checkcast     #44
179: invokestatic  #32
182: astore        16
184: aload         15
186: invokestatic  #42
189: astore        17
191: aload         17
193: checkcast     #44
196: invokestatic  #32
199: astore        18
201: aload_1
202: invokestatic  #47
205: aload_1
206: invokestatic  #142
209: ldc_w         #383
212: invokestatic  #62
215: new           #14
218: dup
219: invokespecial #15
222: ldc           #16
224: invokevirtual #17
227: iload_2
228: invokevirtual #48
231: ldc           #19
233: invokevirtual #17
236: iconst_m1
237: invokevirtual #48
240: ldc           #16
242: invokevirtual #17
245: invokevirtual #20
248: iload_2
249: iconst_m1
250: if_icmpne     257
253: iconst_1
254: goto          258
257: iconst_0
258: invokestatic  #21
261: aload_3
262: invokestatic  #47
265: aload_3
266: invokestatic  #142
269: ldc           #65
271: invokestatic  #62
274: aload         4
276: invokestatic  #47
279: aload         4
281: invokestatic  #142
284: ldc_w         #384
287: invokestatic  #62
290: aload         5
292: invokestatic  #47
295: aload         5
297: invokestatic  #142
300: ldc_w         #384
303: invokestatic  #62
306: aload         6
308: invokestatic  #47
311: aload         6
313: invokestatic  #142
316: ldc_w         #383
319: invokestatic  #62
322: new           #14
325: dup
326: invokespecial #15
329: ldc           #16
331: invokevirtual #17
334: iload         7
336: invokevirtual #48
339: ldc           #19
341: invokevirtual #17
344: iconst_m1
345: invokevirtual #48
348: ldc           #16
350: invokevirtual #17
353: invokevirtual #20
356: iload         7
358: iconst_m1
359: if_icmpne     366
362: iconst_1
363: goto          367
366: iconst_0
367: invokestatic  #21
370: new           #14
373: dup
374: invokespecial #15
377: ldc           #16
379: invokevirtual #17
382: iload         8
384: invokevirtual #48
387: ldc           #19
389: invokevirtual #17
392: iconst_m1
393: invokevirtual #48
396: ldc           #16
398: invokevirtual #17
401: invokevirtual #20
404: iload         8
406: iconst_m1
407: if_icmpne     414
410: iconst_1
411: goto          415
414: iconst_0
415: invokestatic  #21
418: aload         9
420: invokestatic  #47
423: aload         9
425: invokestatic  #142
428: ldc_w         #383
431: invokestatic  #62
434: new           #14
437: dup
438: invokespecial #15
441: ldc           #16
443: invokevirtual #17
446: iload         10
448: invokevirtual #48
451: ldc           #19
453: invokevirtual #17
456: iconst_m1
457: invokevirtual #48
460: ldc           #16
462: invokevirtual #17
465: invokevirtual #20
468: iload         10
470: iconst_m1
471: if_icmpne     478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #21
482: aload         11
484: invokestatic  #47
487: aload         11
489: invokestatic  #142
492: ldc           #65
494: invokestatic  #62
497: aload         12
499: invokestatic  #47
502: aload         12
504: invokestatic  #142
507: ldc_w         #383
510: invokestatic  #62
513: aload         13
515: invokestatic  #47
518: aload         13
520: invokestatic  #142
523: ldc_w         #385
526: invokestatic  #62
529: aload         14
531: invokestatic  #47
534: aload         15
536: invokestatic  #47
539: aload         16
541: invokestatic  #47
544: aload         17
546: invokestatic  #47
549: aload         18
551: invokestatic  #47
554: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 6158
End line: 6288
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        float[] floatArray1 = new float[] { 10.0f };
        float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray1);
        java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2);
        java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3);
        java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) floatArray3);
        java.lang.Class<?> wildcardClass7 = null;
        java.lang.Class[] classArray9 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9;
        wildcardClassArray10[0] = wildcardClass7;
        java.lang.Class[] classArray14 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        boolean boolean20 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray14, (java.lang.Class<?>[]) classArray17, true);
        boolean boolean22 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray10, (java.lang.Class<?>[]) classArray14, true);
        java.lang.Class[] classArray24 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray25 = (java.lang.Class<?>[]) classArray24;
        java.lang.Class[] classArray27 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray28 = (java.lang.Class<?>[]) classArray27;
        boolean boolean30 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray24, (java.lang.Class<?>[]) classArray27, true);
        boolean boolean32 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray14, (java.lang.Class<?>[]) classArray24, false);
        java.lang.Class<?>[] wildcardClassArray33 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) classArray14);
        java.lang.Class<?> wildcardClass34 = null;
        java.lang.Class[] classArray36 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray37 = (java.lang.Class<?>[]) classArray36;
        wildcardClassArray37[0] = wildcardClass34;
        java.lang.Class[] classArray41 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41;
        java.lang.Class[] classArray44 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray45 = (java.lang.Class<?>[]) classArray44;
        boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, (java.lang.Class<?>[]) classArray44, true);
        boolean boolean49 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray37, (java.lang.Class<?>[]) classArray41, true);
        java.lang.Class[] classArray51 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51;
        java.lang.Class[] classArray54 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        boolean boolean57 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray51, (java.lang.Class<?>[]) classArray54, true);
        boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, (java.lang.Class<?>[]) classArray51, false);
        java.lang.reflect.Type[] typeArray60 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray51);
        java.lang.reflect.Type[] typeArray61 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray51);
        java.lang.Object[] objArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) classArray51);
        java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray51);
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray33, (java.lang.Class<?>[]) classArray51, true);
        java.lang.Class<?> wildcardClass66 = null;
        java.lang.Class[] classArray68 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray69 = (java.lang.Class<?>[]) classArray68;
        wildcardClassArray69[0] = wildcardClass66;
        java.lang.Class[] classArray73 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray74 = (java.lang.Class<?>[]) classArray73;
        java.lang.Class[] classArray76 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        boolean boolean79 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray73, (java.lang.Class<?>[]) classArray76, true);
        boolean boolean81 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray69, (java.lang.Class<?>[]) classArray73, true);
        java.lang.Class<?>[] wildcardClassArray82 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray73);
        java.lang.Class<?>[] wildcardClassArray83 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray82);
        boolean boolean85 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray51, wildcardClassArray82, false);
        boolean boolean87 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray82, false);
        org.junit.Assert.assertNotNull(floatArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray1), "[10.0]");
        org.junit.Assert.assertNotNull(floatArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[10.0]");
        org.junit.Assert.assertNotNull(floatArray3);
        org.junit.Assert.assertNotNull(floatArray4);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertNotNull(wildcardClassArray6);
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNotNull(wildcardClassArray10);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray24);
        org.junit.Assert.assertNotNull(wildcardClassArray25);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(wildcardClassArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(wildcardClassArray37);
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNotNull(wildcardClassArray42);
        org.junit.Assert.assertNotNull(classArray44);
        org.junit.Assert.assertNotNull(wildcardClassArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(classArray51);
        org.junit.Assert.assertNotNull(wildcardClassArray52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(classArray68);
        org.junit.Assert.assertNotNull(wildcardClassArray69);
        org.junit.Assert.assertNotNull(classArray73);
        org.junit.Assert.assertNotNull(wildcardClassArray74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #386
20: aastore
21: invokevirtual #7
24: pop
25: iconst_1
26: newarray       float
28: dup
29: iconst_0
30: ldc           #225
32: fastore
33: astore_1
34: aload_1
35: invokestatic  #367
38: astore_2
39: aload_2
40: invokestatic  #368
43: astore_3
44: aload_3
45: invokestatic  #369
48: astore        4
50: aload_3
51: invokestatic  #369
54: astore        5
56: aload_3
57: checkcast     #45
60: invokestatic  #59
63: astore        6
65: aconst_null
66: astore        7
68: iconst_1
69: anewarray     #39
72: astore        8
74: aload         8
76: checkcast     #40
79: astore        9
81: aload         9
83: iconst_0
84: aload         7
86: aastore
87: iconst_0
88: anewarray     #39
91: astore        10
93: aload         10
95: checkcast     #40
98: astore        11
100: iconst_0
101: anewarray     #39
104: astore        12
106: aload         12
108: checkcast     #40
111: astore        13
113: aload         10
115: checkcast     #40
118: aload         12
120: checkcast     #40
123: iconst_1
124: invokestatic  #41
127: istore        14
129: aload         9
131: aload         10
133: checkcast     #40
136: iconst_1
137: invokestatic  #41
140: istore        15
142: iconst_0
143: anewarray     #39
146: astore        16
148: aload         16
150: checkcast     #40
153: astore        17
155: iconst_0
156: anewarray     #39
159: astore        18
161: aload         18
163: checkcast     #40
166: astore        19
168: aload         16
170: checkcast     #40
173: aload         18
175: checkcast     #40
178: iconst_1
179: invokestatic  #41
182: istore        20
184: aload         10
186: checkcast     #40
189: aload         16
191: checkcast     #40
194: iconst_0
195: invokestatic  #41
198: istore        21
200: aload         10
202: checkcast     #45
205: invokestatic  #59
208: astore        22
210: aconst_null
211: astore        23
213: iconst_1
214: anewarray     #39
217: astore        24
219: aload         24
221: checkcast     #40
224: astore        25
226: aload         25
228: iconst_0
229: aload         23
231: aastore
232: iconst_0
233: anewarray     #39
236: astore        26
238: aload         26
240: checkcast     #40
243: astore        27
245: iconst_0
246: anewarray     #39
249: astore        28
251: aload         28
253: checkcast     #40
256: astore        29
258: aload         26
260: checkcast     #40
263: aload         28
265: checkcast     #40
268: iconst_1
269: invokestatic  #41
272: istore        30
274: aload         25
276: aload         26
278: checkcast     #40
281: iconst_1
282: invokestatic  #41
285: istore        31
287: iconst_0
288: anewarray     #39
291: astore        32
293: aload         32
295: checkcast     #40
298: astore        33
300: iconst_0
301: anewarray     #39
304: astore        34
306: aload         34
308: checkcast     #40
311: astore        35
313: aload         32
315: checkcast     #40
318: aload         34
320: checkcast     #40
323: iconst_1
324: invokestatic  #41
327: istore        36
329: aload         26
331: checkcast     #40
334: aload         32
336: checkcast     #40
339: iconst_0
340: invokestatic  #41
343: istore        37
345: aload         32
347: checkcast     #44
350: invokestatic  #32
353: astore        38
355: aload         32
357: checkcast     #44
360: invokestatic  #32
363: astore        39
365: aload         32
367: checkcast     #45
370: invokestatic  #251
373: astore        40
375: aload         32
377: checkcast     #40
380: invokestatic  #53
383: astore        41
385: aload         22
387: aload         32
389: checkcast     #40
392: iconst_1
393: invokestatic  #41
396: istore        42
398: aconst_null
399: astore        43
401: iconst_1
402: anewarray     #39
405: astore        44
407: aload         44
409: checkcast     #40
412: astore        45
414: aload         45
416: iconst_0
417: aload         43
419: aastore
420: iconst_0
421: anewarray     #39
424: astore        46
426: aload         46
428: checkcast     #40
431: astore        47
433: iconst_0
434: anewarray     #39
437: astore        48
439: aload         48
441: checkcast     #40
444: astore        49
446: aload         46
448: checkcast     #40
451: aload         48
453: checkcast     #40
456: iconst_1
457: invokestatic  #41
460: istore        50
462: aload         45
464: aload         46
466: checkcast     #40
469: iconst_1
470: invokestatic  #41
473: istore        51
475: aload         46
477: checkcast     #40
480: invokestatic  #53
483: astore        52
485: aload         52
487: invokestatic  #53
490: astore        53
492: aload         32
494: checkcast     #40
497: aload         52
499: iconst_0
500: invokestatic  #41
503: istore        54
505: aload         6
507: aload         52
509: iconst_0
510: invokestatic  #41
513: istore        55
515: aload_1
516: invokestatic  #47
519: aload_1
520: invokestatic  #142
523: ldc_w         #370
526: invokestatic  #62
529: aload_2
530: invokestatic  #47
533: aload_2
534: invokestatic  #142
537: ldc_w         #370
540: invokestatic  #62
543: aload_3
544: invokestatic  #47
547: aload         4
549: invokestatic  #47
552: aload         5
554: invokestatic  #47
557: aload         6
559: invokestatic  #47
562: aload         8
564: invokestatic  #47
567: aload         9
569: invokestatic  #47
572: aload         10
574: invokestatic  #47
577: aload         11
579: invokestatic  #47
582: aload         12
584: invokestatic  #47
587: aload         13
589: invokestatic  #47
592: new           #14
595: dup
596: invokespecial #15
599: ldc           #16
601: invokevirtual #17
604: iload         14
606: invokevirtual #18
609: ldc           #19
611: invokevirtual #17
614: iconst_1
615: invokevirtual #18
618: ldc           #16
620: invokevirtual #17
623: invokevirtual #20
626: iload         14
628: iconst_1
629: if_icmpne     636
632: iconst_1
633: goto          637
636: iconst_0
637: invokestatic  #21
640: new           #14
643: dup
644: invokespecial #15
647: ldc           #16
649: invokevirtual #17
652: iload         15
654: invokevirtual #18
657: ldc           #19
659: invokevirtual #17
662: iconst_0
663: invokevirtual #18
666: ldc           #16
668: invokevirtual #17
671: invokevirtual #20
674: iload         15
676: ifne          683
679: iconst_1
680: goto          684
683: iconst_0
684: invokestatic  #21
687: aload         16
689: invokestatic  #47
692: aload         17
694: invokestatic  #47
697: aload         18
699: invokestatic  #47
702: aload         19
704: invokestatic  #47
707: new           #14
710: dup
711: invokespecial #15
714: ldc           #16
716: invokevirtual #17
719: iload         20
721: invokevirtual #18
724: ldc           #19
726: invokevirtual #17
729: iconst_1
730: invokevirtual #18
733: ldc           #16
735: invokevirtual #17
738: invokevirtual #20
741: iload         20
743: iconst_1
744: if_icmpne     751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #21
755: new           #14
758: dup
759: invokespecial #15
762: ldc           #16
764: invokevirtual #17
767: iload         21
769: invokevirtual #18
772: ldc           #19
774: invokevirtual #17
777: iconst_1
778: invokevirtual #18
781: ldc           #16
783: invokevirtual #17
786: invokevirtual #20
789: iload         21
791: iconst_1
792: if_icmpne     799
795: iconst_1
796: goto          800
799: iconst_0
800: invokestatic  #21
803: aload         22
805: invokestatic  #47
808: aload         24
810: invokestatic  #47
813: aload         25
815: invokestatic  #47
818: aload         26
820: invokestatic  #47
823: aload         27
825: invokestatic  #47
828: aload         28
830: invokestatic  #47
833: aload         29
835: invokestatic  #47
838: new           #14
841: dup
842: invokespecial #15
845: ldc           #16
847: invokevirtual #17
850: iload         30
852: invokevirtual #18
855: ldc           #19
857: invokevirtual #17
860: iconst_1
861: invokevirtual #18
864: ldc           #16
866: invokevirtual #17
869: invokevirtual #20
872: iload         30
874: iconst_1
875: if_icmpne     882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #21
886: new           #14
889: dup
890: invokespecial #15
893: ldc           #16
895: invokevirtual #17
898: iload         31
900: invokevirtual #18
903: ldc           #19
905: invokevirtual #17
908: iconst_0
909: invokevirtual #18
912: ldc           #16
914: invokevirtual #17
917: invokevirtual #20
920: iload         31
922: ifne          929
925: iconst_1
926: goto          930
929: iconst_0
930: invokestatic  #21
933: aload         32
935: invokestatic  #47
938: aload         33
940: invokestatic  #47
943: aload         34
945: invokestatic  #47
948: aload         35
950: invokestatic  #47
953: new           #14
956: dup
957: invokespecial #15
960: ldc           #16
962: invokevirtual #17
965: iload         36
967: invokevirtual #18
970: ldc           #19
972: invokevirtual #17
975: iconst_1
976: invokevirtual #18
979: ldc           #16
981: invokevirtual #17
984: invokevirtual #20
987: iload         36
989: iconst_1
990: if_icmpne     997
993: iconst_1
994: goto          998
997: iconst_0
998: invokestatic  #21
1001: new           #14
1004: dup
1005: invokespecial #15
1008: ldc           #16
1010: invokevirtual #17
1013: iload         37
1015: invokevirtual #18
1018: ldc           #19
1020: invokevirtual #17
1023: iconst_1
1024: invokevirtual #18
1027: ldc           #16
1029: invokevirtual #17
1032: invokevirtual #20
1035: iload         37
1037: iconst_1
1038: if_icmpne     1045
1041: iconst_1
1042: goto          1046
1045: iconst_0
1046: invokestatic  #21
1049: aload         38
1051: invokestatic  #47
1054: aload         39
1056: invokestatic  #47
1059: aload         40
1061: invokestatic  #47
1064: aload         40
1066: invokestatic  #252
1069: ldc           #65
1071: invokestatic  #62
1074: aload         40
1076: invokestatic  #254
1079: ldc           #65
1081: invokestatic  #62
1084: aload         41
1086: invokestatic  #47
1089: new           #14
1092: dup
1093: invokespecial #15
1096: ldc           #16
1098: invokevirtual #17
1101: iload         42
1103: invokevirtual #18
1106: ldc           #19
1108: invokevirtual #17
1111: iconst_1
1112: invokevirtual #18
1115: ldc           #16
1117: invokevirtual #17
1120: invokevirtual #20
1123: iload         42
1125: iconst_1
1126: if_icmpne     1133
1129: iconst_1
1130: goto          1134
1133: iconst_0
1134: invokestatic  #21
1137: aload         44
1139: invokestatic  #47
1142: aload         45
1144: invokestatic  #47
1147: aload         46
1149: invokestatic  #47
1152: aload         47
1154: invokestatic  #47
1157: aload         48
1159: invokestatic  #47
1162: aload         49
1164: invokestatic  #47
1167: new           #14
1170: dup
1171: invokespecial #15
1174: ldc           #16
1176: invokevirtual #17
1179: iload         50
1181: invokevirtual #18
1184: ldc           #19
1186: invokevirtual #17
1189: iconst_1
1190: invokevirtual #18
1193: ldc           #16
1195: invokevirtual #17
1198: invokevirtual #20
1201: iload         50
1203: iconst_1
1204: if_icmpne     1211
1207: iconst_1
1208: goto          1212
1211: iconst_0
1212: invokestatic  #21
1215: new           #14
1218: dup
1219: invokespecial #15
1222: ldc           #16
1224: invokevirtual #17
1227: iload         51
1229: invokevirtual #18
1232: ldc           #19
1234: invokevirtual #17
1237: iconst_0
1238: invokevirtual #18
1241: ldc           #16
1243: invokevirtual #17
1246: invokevirtual #20
1249: iload         51
1251: ifne          1258
1254: iconst_1
1255: goto          1259
1258: iconst_0
1259: invokestatic  #21
1262: aload         52
1264: invokestatic  #47
1267: aload         53
1269: invokestatic  #47
1272: new           #14
1275: dup
1276: invokespecial #15
1279: ldc           #16
1281: invokevirtual #17
1284: iload         54
1286: invokevirtual #18
1289: ldc           #19
1291: invokevirtual #17
1294: iconst_1
1295: invokevirtual #18
1298: ldc           #16
1300: invokevirtual #17
1303: invokevirtual #20
1306: iload         54
1308: iconst_1
1309: if_icmpne     1316
1312: iconst_1
1313: goto          1317
1316: iconst_0
1317: invokestatic  #21
1320: new           #14
1323: dup
1324: invokespecial #15
1327: ldc           #16
1329: invokevirtual #17
1332: iload         55
1334: invokevirtual #18
1337: ldc           #19
1339: invokevirtual #17
1342: iconst_0
1343: invokevirtual #18
1346: ldc           #16
1348: invokevirtual #17
1351: invokevirtual #20
1354: iload         55
1356: ifne          1363
1359: iconst_1
1360: goto          1364
1363: iconst_0
1364: invokestatic  #21
1367: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 6291
End line: 6391
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap27 = null;
        java.util.Map[] mapArray29 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[] wildcardTypeVariableMapArray30 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[]) mapArray29;
        wildcardTypeVariableMapArray30[0] = wildcardTypeVariableMap27;
        java.util.Map[][] mapArray34 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray35 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][]) mapArray34;
        wildcardTypeVariableMapArray35[0] = wildcardTypeVariableMapArray30;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray38 = org.apache.commons.lang3.ArrayUtils.toArray(wildcardTypeVariableMapArray35);
        java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardTypeVariableMapArray38);
        java.lang.Class<?> wildcardClass40 = null;
        java.lang.Class[] classArray42 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42;
        wildcardClassArray43[0] = wildcardClass40;
        java.lang.Class[] classArray47 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47;
        java.lang.Class[] classArray50 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50;
        boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray47, (java.lang.Class<?>[]) classArray50, true);
        boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, (java.lang.Class<?>[]) classArray47, true);
        java.lang.Class[] classArray57 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        java.lang.Class[] classArray60 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray57, (java.lang.Class<?>[]) classArray60, true);
        boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray47, (java.lang.Class<?>[]) classArray57, false);
        boolean boolean66 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray39, (java.lang.Class<?>[]) classArray47);
        boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray39);
        java.lang.Class<?>[] wildcardClassArray68 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives((java.lang.Class<?>[]) classArray17);
        java.lang.reflect.Type[] typeArray69 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray68);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(mapArray29);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray30);
        org.junit.Assert.assertNotNull(mapArray34);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray35);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNotNull(wildcardClassArray43);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNotNull(wildcardClassArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClassArray68);
        org.junit.Assert.assertNotNull(typeArray69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aconst_null
164: astore        17
166: iconst_1
167: anewarray     #351
170: astore        18
172: aload         18
174: checkcast     #352
177: astore        19
179: aload         19
181: iconst_0
182: aload         17
184: aastore
185: iconst_1
186: anewarray     #352
189: astore        20
191: aload         20
193: checkcast     #353
196: astore        21
198: aload         21
200: iconst_0
201: aload         19
203: aastore
204: aload         21
206: invokestatic  #188
209: checkcast     #353
212: astore        22
214: aload         22
216: checkcast     #45
219: invokestatic  #59
222: astore        23
224: aconst_null
225: astore        24
227: iconst_1
228: anewarray     #39
231: astore        25
233: aload         25
235: checkcast     #40
238: astore        26
240: aload         26
242: iconst_0
243: aload         24
245: aastore
246: iconst_0
247: anewarray     #39
250: astore        27
252: aload         27
254: checkcast     #40
257: astore        28
259: iconst_0
260: anewarray     #39
263: astore        29
265: aload         29
267: checkcast     #40
270: astore        30
272: aload         27
274: checkcast     #40
277: aload         29
279: checkcast     #40
282: iconst_1
283: invokestatic  #41
286: istore        31
288: aload         26
290: aload         27
292: checkcast     #40
295: iconst_1
296: invokestatic  #41
299: istore        32
301: iconst_0
302: anewarray     #39
305: astore        33
307: aload         33
309: checkcast     #40
312: astore        34
314: iconst_0
315: anewarray     #39
318: astore        35
320: aload         35
322: checkcast     #40
325: astore        36
327: aload         33
329: checkcast     #40
332: aload         35
334: checkcast     #40
337: iconst_1
338: invokestatic  #41
341: istore        37
343: aload         27
345: checkcast     #40
348: aload         33
350: checkcast     #40
353: iconst_0
354: invokestatic  #41
357: istore        38
359: aload         23
361: aload         27
363: checkcast     #40
366: invokestatic  #43
369: istore        39
371: aload         10
373: checkcast     #40
376: aload         23
378: invokestatic  #43
381: istore        40
383: aload         10
385: checkcast     #40
388: invokestatic  #53
391: astore        41
393: aload         41
395: checkcast     #44
398: invokestatic  #32
401: astore        42
403: aload_2
404: invokestatic  #47
407: aload_3
408: invokestatic  #47
411: aload         4
413: invokestatic  #47
416: aload         5
418: invokestatic  #47
421: aload         6
423: invokestatic  #47
426: aload         7
428: invokestatic  #47
431: new           #14
434: dup
435: invokespecial #15
438: ldc           #16
440: invokevirtual #17
443: iload         8
445: invokevirtual #18
448: ldc           #19
450: invokevirtual #17
453: iconst_1
454: invokevirtual #18
457: ldc           #16
459: invokevirtual #17
462: invokevirtual #20
465: iload         8
467: iconst_1
468: if_icmpne     475
471: iconst_1
472: goto          476
475: iconst_0
476: invokestatic  #21
479: new           #14
482: dup
483: invokespecial #15
486: ldc           #16
488: invokevirtual #17
491: iload         9
493: invokevirtual #18
496: ldc           #19
498: invokevirtual #17
501: iconst_0
502: invokevirtual #18
505: ldc           #16
507: invokevirtual #17
510: invokevirtual #20
513: iload         9
515: ifne          522
518: iconst_1
519: goto          523
522: iconst_0
523: invokestatic  #21
526: aload         10
528: invokestatic  #47
531: aload         11
533: invokestatic  #47
536: aload         12
538: invokestatic  #47
541: aload         13
543: invokestatic  #47
546: new           #14
549: dup
550: invokespecial #15
553: ldc           #16
555: invokevirtual #17
558: iload         14
560: invokevirtual #18
563: ldc           #19
565: invokevirtual #17
568: iconst_1
569: invokevirtual #18
572: ldc           #16
574: invokevirtual #17
577: invokevirtual #20
580: iload         14
582: iconst_1
583: if_icmpne     590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #21
594: new           #14
597: dup
598: invokespecial #15
601: ldc           #16
603: invokevirtual #17
606: iload         15
608: invokevirtual #18
611: ldc           #19
613: invokevirtual #17
616: iconst_1
617: invokevirtual #18
620: ldc           #16
622: invokevirtual #17
625: invokevirtual #20
628: iload         15
630: iconst_1
631: if_icmpne     638
634: iconst_1
635: goto          639
638: iconst_0
639: invokestatic  #21
642: aload         16
644: invokestatic  #47
647: aload         18
649: invokestatic  #47
652: aload         19
654: invokestatic  #47
657: aload         20
659: invokestatic  #47
662: aload         21
664: invokestatic  #47
667: aload         22
669: invokestatic  #47
672: aload         23
674: invokestatic  #47
677: aload         25
679: invokestatic  #47
682: aload         26
684: invokestatic  #47
687: aload         27
689: invokestatic  #47
692: aload         28
694: invokestatic  #47
697: aload         29
699: invokestatic  #47
702: aload         30
704: invokestatic  #47
707: new           #14
710: dup
711: invokespecial #15
714: ldc           #16
716: invokevirtual #17
719: iload         31
721: invokevirtual #18
724: ldc           #19
726: invokevirtual #17
729: iconst_1
730: invokevirtual #18
733: ldc           #16
735: invokevirtual #17
738: invokevirtual #20
741: iload         31
743: iconst_1
744: if_icmpne     751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #21
755: new           #14
758: dup
759: invokespecial #15
762: ldc           #16
764: invokevirtual #17
767: iload         32
769: invokevirtual #18
772: ldc           #19
774: invokevirtual #17
777: iconst_0
778: invokevirtual #18
781: ldc           #16
783: invokevirtual #17
786: invokevirtual #20
789: iload         32
791: ifne          798
794: iconst_1
795: goto          799
798: iconst_0
799: invokestatic  #21
802: aload         33
804: invokestatic  #47
807: aload         34
809: invokestatic  #47
812: aload         35
814: invokestatic  #47
817: aload         36
819: invokestatic  #47
822: new           #14
825: dup
826: invokespecial #15
829: ldc           #16
831: invokevirtual #17
834: iload         37
836: invokevirtual #18
839: ldc           #19
841: invokevirtual #17
844: iconst_1
845: invokevirtual #18
848: ldc           #16
850: invokevirtual #17
853: invokevirtual #20
856: iload         37
858: iconst_1
859: if_icmpne     866
862: iconst_1
863: goto          867
866: iconst_0
867: invokestatic  #21
870: new           #14
873: dup
874: invokespecial #15
877: ldc           #16
879: invokevirtual #17
882: iload         38
884: invokevirtual #18
887: ldc           #19
889: invokevirtual #17
892: iconst_1
893: invokevirtual #18
896: ldc           #16
898: invokevirtual #17
901: invokevirtual #20
904: iload         38
906: iconst_1
907: if_icmpne     914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #21
918: new           #14
921: dup
922: invokespecial #15
925: ldc           #16
927: invokevirtual #17
930: iload         39
932: invokevirtual #18
935: ldc           #19
937: invokevirtual #17
940: iconst_0
941: invokevirtual #18
944: ldc           #16
946: invokevirtual #17
949: invokevirtual #20
952: iload         39
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #21
965: new           #14
968: dup
969: invokespecial #15
972: ldc           #16
974: invokevirtual #17
977: iload         40
979: invokevirtual #18
982: ldc           #19
984: invokevirtual #17
987: iconst_0
988: invokevirtual #18
991: ldc           #16
993: invokevirtual #17
996: invokevirtual #20
999: iload         40
1001: ifne          1008
1004: iconst_1
1005: goto          1009
1008: iconst_0
1009: invokestatic  #21
1012: aload         41
1014: invokestatic  #47
1017: aload         42
1019: invokestatic  #47
1022: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 6394
End line: 6411
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        int[] intArray3 = new int[] { 'a', (byte) -1, (byte) 0 };
        java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3);
        boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray3);
        java.lang.Integer[] intArray6 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3);
        java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray6);
        java.lang.reflect.Type type8 = null;
        boolean boolean9 = org.apache.commons.lang3.reflect.TypeUtils.isInstance((java.lang.Object) intArray6, type8);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[97, -1, 0]");
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #388
20: aastore
21: invokevirtual #7
24: pop
25: iconst_3
26: newarray       int
28: dup
29: iconst_0
30: bipush        97
32: iastore
33: dup
34: iconst_1
35: iconst_m1
36: iastore
37: dup
38: iconst_2
39: iconst_0
40: iastore
41: astore_1
42: aload_1
43: invokestatic  #205
46: astore_2
47: aload_1
48: invokestatic  #211
51: istore_3
52: aload_1
53: invokestatic  #205
56: astore        4
58: aload         4
60: invokestatic  #170
63: astore        5
65: aconst_null
66: astore        6
68: aload         4
70: aload         6
72: invokestatic  #91
75: istore        7
77: aload_1
78: invokestatic  #47
81: aload_1
82: invokestatic  #147
85: ldc_w         #389
88: invokestatic  #62
91: aload_2
92: invokestatic  #47
95: new           #14
98: dup
99: invokespecial #15
102: ldc           #16
104: invokevirtual #17
107: iload_3
108: invokevirtual #18
111: ldc           #19
113: invokevirtual #17
116: iconst_0
117: invokevirtual #18
120: ldc           #16
122: invokevirtual #17
125: invokevirtual #20
128: iload_3
129: ifne          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #21
140: aload         4
142: invokestatic  #47
145: aload         5
147: invokestatic  #47
150: new           #14
153: dup
154: invokespecial #15
157: ldc           #16
159: invokevirtual #17
162: iload         7
164: invokevirtual #18
167: ldc           #19
169: invokevirtual #17
172: iconst_0
173: invokevirtual #18
176: ldc           #16
178: invokevirtual #17
181: invokevirtual #20
184: iload         7
186: ifne          193
189: iconst_1
190: goto          194
193: iconst_0
194: invokestatic  #21
197: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 6414
End line: 6431
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class[] classArray4 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4;
        boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, (java.lang.Class<?>[]) classArray4, true);
        java.lang.reflect.Type[] typeArray8 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray4);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(typeArray8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #390
20: aastore
21: invokevirtual #7
24: pop
25: iconst_0
26: anewarray     #39
29: astore_1
30: aload_1
31: checkcast     #40
34: astore_2
35: iconst_0
36: anewarray     #39
39: astore_3
40: aload_3
41: checkcast     #40
44: astore        4
46: aload_1
47: checkcast     #40
50: aload_3
51: checkcast     #40
54: iconst_1
55: invokestatic  #41
58: istore        5
60: aload_3
61: checkcast     #44
64: invokestatic  #32
67: astore        6
69: aload_1
70: invokestatic  #47
73: aload_2
74: invokestatic  #47
77: aload_3
78: invokestatic  #47
81: aload         4
83: invokestatic  #47
86: new           #14
89: dup
90: invokespecial #15
93: ldc           #16
95: invokevirtual #17
98: iload         5
100: invokevirtual #18
103: ldc           #19
105: invokevirtual #17
108: iconst_1
109: invokevirtual #18
112: ldc           #16
114: invokevirtual #17
117: invokevirtual #20
120: iload         5
122: iconst_1
123: if_icmpne     130
126: iconst_1
127: goto          131
130: iconst_0
131: invokestatic  #21
134: aload         6
136: invokestatic  #47
139: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 6434
End line: 6514
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap0 = null;
        java.util.Map[] mapArray2 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[] wildcardTypeVariableMapArray3 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[]) mapArray2;
        wildcardTypeVariableMapArray3[0] = wildcardTypeVariableMap0;
        java.util.Map[][] mapArray7 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray8 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][]) mapArray7;
        wildcardTypeVariableMapArray8[0] = wildcardTypeVariableMapArray3;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray11 = org.apache.commons.lang3.ArrayUtils.toArray(wildcardTypeVariableMapArray8);
        java.lang.Class<?>[] wildcardClassArray12 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardTypeVariableMapArray11);
        java.lang.Class<?> wildcardClass13 = null;
        java.lang.Class[] classArray15 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray16 = (java.lang.Class<?>[]) classArray15;
        wildcardClassArray16[0] = wildcardClass13;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        java.lang.Class[] classArray23 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23;
        boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray20, (java.lang.Class<?>[]) classArray23, true);
        boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray16, (java.lang.Class<?>[]) classArray20, true);
        java.lang.Class[] classArray30 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30;
        java.lang.Class[] classArray33 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray30, (java.lang.Class<?>[]) classArray33, true);
        boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray20, (java.lang.Class<?>[]) classArray30, false);
        boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray12, (java.lang.Class<?>[]) classArray20);
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> wildcardTypeVariableMap40 = null;
        java.util.Map[] mapArray42 = new java.util.Map[1];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[] wildcardTypeVariableMapArray43 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[]) mapArray42;
        wildcardTypeVariableMapArray43[0] = wildcardTypeVariableMap40;
        java.util.Map[][] mapArray47 = new java.util.Map[1][];
        @SuppressWarnings("unchecked")
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray48 = (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][]) mapArray47;
        wildcardTypeVariableMapArray48[0] = wildcardTypeVariableMapArray43;
        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>[][] wildcardTypeVariableMapArray51 = org.apache.commons.lang3.ArrayUtils.toArray(wildcardTypeVariableMapArray48);
        java.lang.Class<?>[] wildcardClassArray52 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardTypeVariableMapArray51);
        boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray12, wildcardClassArray52, true);
        java.lang.reflect.Type[] typeArray55 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray12);
        java.lang.reflect.Type[] typeArray56 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) wildcardClassArray12);
        org.junit.Assert.assertNotNull(mapArray2);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray3);
        org.junit.Assert.assertNotNull(mapArray7);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray8);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(classArray15);
        org.junit.Assert.assertNotNull(wildcardClassArray16);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(wildcardClassArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(mapArray42);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray43);
        org.junit.Assert.assertNotNull(mapArray47);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray48);
        org.junit.Assert.assertNotNull(wildcardTypeVariableMapArray51);
        org.junit.Assert.assertNotNull(wildcardClassArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertNotNull(typeArray56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #391
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #351
31: astore_2
32: aload_2
33: checkcast     #352
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_1
42: anewarray     #352
45: astore        4
47: aload         4
49: checkcast     #353
52: astore        5
54: aload         5
56: iconst_0
57: aload_3
58: aastore
59: aload         5
61: invokestatic  #188
64: checkcast     #353
67: astore        6
69: aload         6
71: checkcast     #45
74: invokestatic  #59
77: astore        7
79: aconst_null
80: astore        8
82: iconst_1
83: anewarray     #39
86: astore        9
88: aload         9
90: checkcast     #40
93: astore        10
95: aload         10
97: iconst_0
98: aload         8
100: aastore
101: iconst_0
102: anewarray     #39
105: astore        11
107: aload         11
109: checkcast     #40
112: astore        12
114: iconst_0
115: anewarray     #39
118: astore        13
120: aload         13
122: checkcast     #40
125: astore        14
127: aload         11
129: checkcast     #40
132: aload         13
134: checkcast     #40
137: iconst_1
138: invokestatic  #41
141: istore        15
143: aload         10
145: aload         11
147: checkcast     #40
150: iconst_1
151: invokestatic  #41
154: istore        16
156: iconst_0
157: anewarray     #39
160: astore        17
162: aload         17
164: checkcast     #40
167: astore        18
169: iconst_0
170: anewarray     #39
173: astore        19
175: aload         19
177: checkcast     #40
180: astore        20
182: aload         17
184: checkcast     #40
187: aload         19
189: checkcast     #40
192: iconst_1
193: invokestatic  #41
196: istore        21
198: aload         11
200: checkcast     #40
203: aload         17
205: checkcast     #40
208: iconst_0
209: invokestatic  #41
212: istore        22
214: aload         7
216: aload         11
218: checkcast     #40
221: invokestatic  #43
224: istore        23
226: aconst_null
227: astore        24
229: iconst_1
230: anewarray     #351
233: astore        25
235: aload         25
237: checkcast     #352
240: astore        26
242: aload         26
244: iconst_0
245: aload         24
247: aastore
248: iconst_1
249: anewarray     #352
252: astore        27
254: aload         27
256: checkcast     #353
259: astore        28
261: aload         28
263: iconst_0
264: aload         26
266: aastore
267: aload         28
269: invokestatic  #188
272: checkcast     #353
275: astore        29
277: aload         29
279: checkcast     #45
282: invokestatic  #59
285: astore        30
287: aload         7
289: aload         30
291: iconst_1
292: invokestatic  #41
295: istore        31
297: aload         7
299: checkcast     #44
302: invokestatic  #32
305: astore        32
307: aload         7
309: checkcast     #44
312: invokestatic  #32
315: astore        33
317: aload_2
318: invokestatic  #47
321: aload_3
322: invokestatic  #47
325: aload         4
327: invokestatic  #47
330: aload         5
332: invokestatic  #47
335: aload         6
337: invokestatic  #47
340: aload         7
342: invokestatic  #47
345: aload         9
347: invokestatic  #47
350: aload         10
352: invokestatic  #47
355: aload         11
357: invokestatic  #47
360: aload         12
362: invokestatic  #47
365: aload         13
367: invokestatic  #47
370: aload         14
372: invokestatic  #47
375: new           #14
378: dup
379: invokespecial #15
382: ldc           #16
384: invokevirtual #17
387: iload         15
389: invokevirtual #18
392: ldc           #19
394: invokevirtual #17
397: iconst_1
398: invokevirtual #18
401: ldc           #16
403: invokevirtual #17
406: invokevirtual #20
409: iload         15
411: iconst_1
412: if_icmpne     419
415: iconst_1
416: goto          420
419: iconst_0
420: invokestatic  #21
423: new           #14
426: dup
427: invokespecial #15
430: ldc           #16
432: invokevirtual #17
435: iload         16
437: invokevirtual #18
440: ldc           #19
442: invokevirtual #17
445: iconst_0
446: invokevirtual #18
449: ldc           #16
451: invokevirtual #17
454: invokevirtual #20
457: iload         16
459: ifne          466
462: iconst_1
463: goto          467
466: iconst_0
467: invokestatic  #21
470: aload         17
472: invokestatic  #47
475: aload         18
477: invokestatic  #47
480: aload         19
482: invokestatic  #47
485: aload         20
487: invokestatic  #47
490: new           #14
493: dup
494: invokespecial #15
497: ldc           #16
499: invokevirtual #17
502: iload         21
504: invokevirtual #18
507: ldc           #19
509: invokevirtual #17
512: iconst_1
513: invokevirtual #18
516: ldc           #16
518: invokevirtual #17
521: invokevirtual #20
524: iload         21
526: iconst_1
527: if_icmpne     534
530: iconst_1
531: goto          535
534: iconst_0
535: invokestatic  #21
538: new           #14
541: dup
542: invokespecial #15
545: ldc           #16
547: invokevirtual #17
550: iload         22
552: invokevirtual #18
555: ldc           #19
557: invokevirtual #17
560: iconst_1
561: invokevirtual #18
564: ldc           #16
566: invokevirtual #17
569: invokevirtual #20
572: iload         22
574: iconst_1
575: if_icmpne     582
578: iconst_1
579: goto          583
582: iconst_0
583: invokestatic  #21
586: new           #14
589: dup
590: invokespecial #15
593: ldc           #16
595: invokevirtual #17
598: iload         23
600: invokevirtual #18
603: ldc           #19
605: invokevirtual #17
608: iconst_0
609: invokevirtual #18
612: ldc           #16
614: invokevirtual #17
617: invokevirtual #20
620: iload         23
622: ifne          629
625: iconst_1
626: goto          630
629: iconst_0
630: invokestatic  #21
633: aload         25
635: invokestatic  #47
638: aload         26
640: invokestatic  #47
643: aload         27
645: invokestatic  #47
648: aload         28
650: invokestatic  #47
653: aload         29
655: invokestatic  #47
658: aload         30
660: invokestatic  #47
663: new           #14
666: dup
667: invokespecial #15
670: ldc           #16
672: invokevirtual #17
675: iload         31
677: invokevirtual #18
680: ldc           #19
682: invokevirtual #17
685: iconst_1
686: invokevirtual #18
689: ldc           #16
691: invokevirtual #17
694: invokevirtual #20
697: iload         31
699: iconst_1
700: if_icmpne     707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #21
711: aload         32
713: invokestatic  #47
716: aload         33
718: invokestatic  #47
721: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 6517
End line: 6633
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.Class<?> wildcardClass26 = null;
        java.lang.Class[] classArray28 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28;
        wildcardClassArray29[0] = wildcardClass26;
        java.lang.Class[] classArray33 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        java.lang.Class[] classArray36 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray37 = (java.lang.Class<?>[]) classArray36;
        boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray33, (java.lang.Class<?>[]) classArray36, true);
        boolean boolean41 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray29, (java.lang.Class<?>[]) classArray33, true);
        java.lang.Class[] classArray43 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray44 = (java.lang.Class<?>[]) classArray43;
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        boolean boolean49 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray43, (java.lang.Class<?>[]) classArray46, true);
        boolean boolean51 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray33, (java.lang.Class<?>[]) classArray43, false);
        java.lang.reflect.Type[] typeArray52 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray43);
        boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray43, false);
        char[] charArray59 = new char[] { '#', '#', 'a', '#' };
        boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray59);
        char[] charArray65 = new char[] { '#', '#', 'a', '#' };
        boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray65);
        boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray59, charArray65);
        char[] charArray73 = new char[] { ' ', ' ', '4', '4', ' ' };
        int int75 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray73, ' ');
        char[] charArray76 = org.apache.commons.lang3.ArrayUtils.addAll(charArray59, charArray73);
        char[] charArray77 = org.apache.commons.lang3.ArrayUtils.clone(charArray59);
        int int80 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray77, ' ', (int) '#');
        int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray77, ' ');
        int int83 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) classArray17, (java.lang.Object) int82);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(wildcardClassArray29);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(classArray36);
        org.junit.Assert.assertNotNull(wildcardClassArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(wildcardClassArray44);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, #, a, #]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, #, a, #]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "  44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "  44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ ,  , 4, 4,  ]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4 + "'", int75 == 4);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "##a#  44 ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "##a#  44 ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[#, #, a, #,  ,  , 4, 4,  ]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "##a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "##a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, #, a, #]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #392
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aconst_null
154: astore        16
156: iconst_1
157: anewarray     #39
160: astore        17
162: aload         17
164: checkcast     #40
167: astore        18
169: aload         18
171: iconst_0
172: aload         16
174: aastore
175: iconst_0
176: anewarray     #39
179: astore        19
181: aload         19
183: checkcast     #40
186: astore        20
188: iconst_0
189: anewarray     #39
192: astore        21
194: aload         21
196: checkcast     #40
199: astore        22
201: aload         19
203: checkcast     #40
206: aload         21
208: checkcast     #40
211: iconst_1
212: invokestatic  #41
215: istore        23
217: aload         18
219: aload         19
221: checkcast     #40
224: iconst_1
225: invokestatic  #41
228: istore        24
230: iconst_0
231: anewarray     #39
234: astore        25
236: aload         25
238: checkcast     #40
241: astore        26
243: iconst_0
244: anewarray     #39
247: astore        27
249: aload         27
251: checkcast     #40
254: astore        28
256: aload         25
258: checkcast     #40
261: aload         27
263: checkcast     #40
266: iconst_1
267: invokestatic  #41
270: istore        29
272: aload         19
274: checkcast     #40
277: aload         25
279: checkcast     #40
282: iconst_0
283: invokestatic  #41
286: istore        30
288: aload         25
290: checkcast     #44
293: invokestatic  #32
296: astore        31
298: aload         10
300: checkcast     #40
303: aload         25
305: checkcast     #40
308: iconst_0
309: invokestatic  #41
312: istore        32
314: iconst_4
315: newarray       char
317: dup
318: iconst_0
319: bipush        35
321: castore
322: dup
323: iconst_1
324: bipush        35
326: castore
327: dup
328: iconst_2
329: bipush        97
331: castore
332: dup
333: iconst_3
334: bipush        35
336: castore
337: astore        33
339: aload         33
341: invokestatic  #323
344: istore        34
346: iconst_4
347: newarray       char
349: dup
350: iconst_0
351: bipush        35
353: castore
354: dup
355: iconst_1
356: bipush        35
358: castore
359: dup
360: iconst_2
361: bipush        97
363: castore
364: dup
365: iconst_3
366: bipush        35
368: castore
369: astore        35
371: aload         35
373: invokestatic  #323
376: istore        36
378: aload         33
380: aload         35
382: invokestatic  #74
385: istore        37
387: iconst_5
388: newarray       char
390: dup
391: iconst_0
392: bipush        32
394: castore
395: dup
396: iconst_1
397: bipush        32
399: castore
400: dup
401: iconst_2
402: bipush        52
404: castore
405: dup
406: iconst_3
407: bipush        52
409: castore
410: dup
411: iconst_4
412: bipush        32
414: castore
415: astore        38
417: aload         38
419: bipush        32
421: invokestatic  #335
424: istore        39
426: aload         33
428: aload         38
430: invokestatic  #341
433: astore        40
435: aload         33
437: invokestatic  #339
440: astore        41
442: aload         41
444: bipush        32
446: bipush        35
448: invokestatic  #119
451: istore        42
453: aload         41
455: bipush        32
457: invokestatic  #360
460: istore        43
462: aload         10
464: checkcast     #45
467: iload         43
469: invokestatic  #393
472: invokestatic  #394
475: istore        44
477: aload_2
478: invokestatic  #47
481: aload_3
482: invokestatic  #47
485: aload         4
487: invokestatic  #47
490: aload         5
492: invokestatic  #47
495: aload         6
497: invokestatic  #47
500: aload         7
502: invokestatic  #47
505: new           #14
508: dup
509: invokespecial #15
512: ldc           #16
514: invokevirtual #17
517: iload         8
519: invokevirtual #18
522: ldc           #19
524: invokevirtual #17
527: iconst_1
528: invokevirtual #18
531: ldc           #16
533: invokevirtual #17
536: invokevirtual #20
539: iload         8
541: iconst_1
542: if_icmpne     549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #21
553: new           #14
556: dup
557: invokespecial #15
560: ldc           #16
562: invokevirtual #17
565: iload         9
567: invokevirtual #18
570: ldc           #19
572: invokevirtual #17
575: iconst_0
576: invokevirtual #18
579: ldc           #16
581: invokevirtual #17
584: invokevirtual #20
587: iload         9
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #21
600: aload         10
602: invokestatic  #47
605: aload         11
607: invokestatic  #47
610: aload         12
612: invokestatic  #47
615: aload         13
617: invokestatic  #47
620: new           #14
623: dup
624: invokespecial #15
627: ldc           #16
629: invokevirtual #17
632: iload         14
634: invokevirtual #18
637: ldc           #19
639: invokevirtual #17
642: iconst_1
643: invokevirtual #18
646: ldc           #16
648: invokevirtual #17
651: invokevirtual #20
654: iload         14
656: iconst_1
657: if_icmpne     664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #21
668: new           #14
671: dup
672: invokespecial #15
675: ldc           #16
677: invokevirtual #17
680: iload         15
682: invokevirtual #18
685: ldc           #19
687: invokevirtual #17
690: iconst_1
691: invokevirtual #18
694: ldc           #16
696: invokevirtual #17
699: invokevirtual #20
702: iload         15
704: iconst_1
705: if_icmpne     712
708: iconst_1
709: goto          713
712: iconst_0
713: invokestatic  #21
716: aload         17
718: invokestatic  #47
721: aload         18
723: invokestatic  #47
726: aload         19
728: invokestatic  #47
731: aload         20
733: invokestatic  #47
736: aload         21
738: invokestatic  #47
741: aload         22
743: invokestatic  #47
746: new           #14
749: dup
750: invokespecial #15
753: ldc           #16
755: invokevirtual #17
758: iload         23
760: invokevirtual #18
763: ldc           #19
765: invokevirtual #17
768: iconst_1
769: invokevirtual #18
772: ldc           #16
774: invokevirtual #17
777: invokevirtual #20
780: iload         23
782: iconst_1
783: if_icmpne     790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #21
794: new           #14
797: dup
798: invokespecial #15
801: ldc           #16
803: invokevirtual #17
806: iload         24
808: invokevirtual #18
811: ldc           #19
813: invokevirtual #17
816: iconst_0
817: invokevirtual #18
820: ldc           #16
822: invokevirtual #17
825: invokevirtual #20
828: iload         24
830: ifne          837
833: iconst_1
834: goto          838
837: iconst_0
838: invokestatic  #21
841: aload         25
843: invokestatic  #47
846: aload         26
848: invokestatic  #47
851: aload         27
853: invokestatic  #47
856: aload         28
858: invokestatic  #47
861: new           #14
864: dup
865: invokespecial #15
868: ldc           #16
870: invokevirtual #17
873: iload         29
875: invokevirtual #18
878: ldc           #19
880: invokevirtual #17
883: iconst_1
884: invokevirtual #18
887: ldc           #16
889: invokevirtual #17
892: invokevirtual #20
895: iload         29
897: iconst_1
898: if_icmpne     905
901: iconst_1
902: goto          906
905: iconst_0
906: invokestatic  #21
909: new           #14
912: dup
913: invokespecial #15
916: ldc           #16
918: invokevirtual #17
921: iload         30
923: invokevirtual #18
926: ldc           #19
928: invokevirtual #17
931: iconst_1
932: invokevirtual #18
935: ldc           #16
937: invokevirtual #17
940: invokevirtual #20
943: iload         30
945: iconst_1
946: if_icmpne     953
949: iconst_1
950: goto          954
953: iconst_0
954: invokestatic  #21
957: aload         31
959: invokestatic  #47
962: new           #14
965: dup
966: invokespecial #15
969: ldc           #16
971: invokevirtual #17
974: iload         32
976: invokevirtual #18
979: ldc           #19
981: invokevirtual #17
984: iconst_1
985: invokevirtual #18
988: ldc           #16
990: invokevirtual #17
993: invokevirtual #20
996: iload         32
998: iconst_1
999: if_icmpne     1006
1002: iconst_1
1003: goto          1007
1006: iconst_0
1007: invokestatic  #21
1010: aload         33
1012: invokestatic  #47
1015: aload         33
1017: invokestatic  #60
1020: ldc_w         #343
1023: invokestatic  #62
1026: aload         33
1028: invokestatic  #63
1031: ldc_w         #343
1034: invokestatic  #62
1037: aload         33
1039: invokestatic  #64
1042: ldc_w         #344
1045: invokestatic  #62
1048: new           #14
1051: dup
1052: invokespecial #15
1055: ldc           #16
1057: invokevirtual #17
1060: iload         34
1062: invokevirtual #18
1065: ldc           #19
1067: invokevirtual #17
1070: iconst_0
1071: invokevirtual #18
1074: ldc           #16
1076: invokevirtual #17
1079: invokevirtual #20
1082: iload         34
1084: ifne          1091
1087: iconst_1
1088: goto          1092
1091: iconst_0
1092: invokestatic  #21
1095: aload         35
1097: invokestatic  #47
1100: aload         35
1102: invokestatic  #60
1105: ldc_w         #343
1108: invokestatic  #62
1111: aload         35
1113: invokestatic  #63
1116: ldc_w         #343
1119: invokestatic  #62
1122: aload         35
1124: invokestatic  #64
1127: ldc_w         #344
1130: invokestatic  #62
1133: new           #14
1136: dup
1137: invokespecial #15
1140: ldc           #16
1142: invokevirtual #17
1145: iload         36
1147: invokevirtual #18
1150: ldc           #19
1152: invokevirtual #17
1155: iconst_0
1156: invokevirtual #18
1159: ldc           #16
1161: invokevirtual #17
1164: invokevirtual #20
1167: iload         36
1169: ifne          1176
1172: iconst_1
1173: goto          1177
1176: iconst_0
1177: invokestatic  #21
1180: new           #14
1183: dup
1184: invokespecial #15
1187: ldc           #16
1189: invokevirtual #17
1192: iload         37
1194: invokevirtual #18
1197: ldc           #19
1199: invokevirtual #17
1202: iconst_1
1203: invokevirtual #18
1206: ldc           #16
1208: invokevirtual #17
1211: invokevirtual #20
1214: iload         37
1216: iconst_1
1217: if_icmpne     1224
1220: iconst_1
1221: goto          1225
1224: iconst_0
1225: invokestatic  #21
1228: aload         38
1230: invokestatic  #47
1233: aload         38
1235: invokestatic  #60
1238: ldc_w         #395
1241: invokestatic  #62
1244: aload         38
1246: invokestatic  #63
1249: ldc_w         #395
1252: invokestatic  #62
1255: aload         38
1257: invokestatic  #64
1260: ldc_w         #396
1263: invokestatic  #62
1266: new           #14
1269: dup
1270: invokespecial #15
1273: ldc           #16
1275: invokevirtual #17
1278: iload         39
1280: invokevirtual #48
1283: ldc           #19
1285: invokevirtual #17
1288: iconst_4
1289: invokevirtual #48
1292: ldc           #16
1294: invokevirtual #17
1297: invokevirtual #20
1300: iload         39
1302: iconst_4
1303: if_icmpne     1310
1306: iconst_1
1307: goto          1311
1310: iconst_0
1311: invokestatic  #21
1314: aload         40
1316: invokestatic  #47
1319: aload         40
1321: invokestatic  #60
1324: ldc_w         #397
1327: invokestatic  #62
1330: aload         40
1332: invokestatic  #63
1335: ldc_w         #397
1338: invokestatic  #62
1341: aload         40
1343: invokestatic  #64
1346: ldc_w         #398
1349: invokestatic  #62
1352: aload         41
1354: invokestatic  #47
1357: aload         41
1359: invokestatic  #60
1362: ldc_w         #343
1365: invokestatic  #62
1368: aload         41
1370: invokestatic  #63
1373: ldc_w         #343
1376: invokestatic  #62
1379: aload         41
1381: invokestatic  #64
1384: ldc_w         #344
1387: invokestatic  #62
1390: new           #14
1393: dup
1394: invokespecial #15
1397: ldc           #16
1399: invokevirtual #17
1402: iload         42
1404: invokevirtual #48
1407: ldc           #19
1409: invokevirtual #17
1412: iconst_m1
1413: invokevirtual #48
1416: ldc           #16
1418: invokevirtual #17
1421: invokevirtual #20
1424: iload         42
1426: iconst_m1
1427: if_icmpne     1434
1430: iconst_1
1431: goto          1435
1434: iconst_0
1435: invokestatic  #21
1438: new           #14
1441: dup
1442: invokespecial #15
1445: ldc           #16
1447: invokevirtual #17
1450: iload         43
1452: invokevirtual #48
1455: ldc           #19
1457: invokevirtual #17
1460: iconst_m1
1461: invokevirtual #48
1464: ldc           #16
1466: invokevirtual #17
1469: invokevirtual #20
1472: iload         43
1474: iconst_m1
1475: if_icmpne     1482
1478: iconst_1
1479: goto          1483
1482: iconst_0
1483: invokestatic  #21
1486: new           #14
1489: dup
1490: invokespecial #15
1493: ldc           #16
1495: invokevirtual #17
1498: iload         44
1500: invokevirtual #48
1503: ldc           #19
1505: invokevirtual #17
1508: iconst_m1
1509: invokevirtual #48
1512: ldc           #16
1514: invokevirtual #17
1517: invokevirtual #20
1520: iload         44
1522: iconst_m1
1523: if_icmpne     1530
1526: iconst_1
1527: goto          1531
1530: iconst_0
1531: invokestatic  #21
1534: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 6636
End line: 6705
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        java.lang.Class<?> wildcardClass0 = null;
        java.lang.Class[] classArray2 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2;
        wildcardClassArray3[0] = wildcardClass0;
        java.lang.Class[] classArray7 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7;
        java.lang.Class[] classArray10 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray10, true);
        boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, (java.lang.Class<?>[]) classArray7, true);
        java.lang.Class[] classArray17 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17;
        java.lang.Class[] classArray20 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, (java.lang.Class<?>[]) classArray20, true);
        boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray7, (java.lang.Class<?>[]) classArray17, false);
        java.lang.reflect.Type[] typeArray26 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds((java.lang.reflect.Type[]) classArray17);
        java.lang.reflect.Type[] typeArray27 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray26);
        java.lang.reflect.Type[] typeArray28 = org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(typeArray26);
        int[] intArray31 = new int[] { 0, 'a' };
        java.lang.Integer[] intArray32 = org.apache.commons.lang3.ArrayUtils.toObject(intArray31);
        int[] intArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31);
        int[] intArray36 = org.apache.commons.lang3.ArrayUtils.subarray(intArray31, (int) (byte) 0, 10);
        java.lang.Integer[] intArray37 = org.apache.commons.lang3.ArrayUtils.toObject(intArray31);
        int[] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray31, (int) (byte) 10);
        int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray39, 0, (int) (short) 100);
        java.lang.Integer[] intArray43 = org.apache.commons.lang3.ArrayUtils.toObject(intArray39);
        boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) typeArray28, (java.lang.Object[]) intArray43);
        int[] intArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray43);
        org.junit.Assert.assertNotNull(classArray2);
        org.junit.Assert.assertNotNull(wildcardClassArray3);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 97]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 97]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 97]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 97, 10]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 97, 10]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: iconst_1
28: anewarray     #39
31: astore_2
32: aload_2
33: checkcast     #40
36: astore_3
37: aload_3
38: iconst_0
39: aload_1
40: aastore
41: iconst_0
42: anewarray     #39
45: astore        4
47: aload         4
49: checkcast     #40
52: astore        5
54: iconst_0
55: anewarray     #39
58: astore        6
60: aload         6
62: checkcast     #40
65: astore        7
67: aload         4
69: checkcast     #40
72: aload         6
74: checkcast     #40
77: iconst_1
78: invokestatic  #41
81: istore        8
83: aload_3
84: aload         4
86: checkcast     #40
89: iconst_1
90: invokestatic  #41
93: istore        9
95: iconst_0
96: anewarray     #39
99: astore        10
101: aload         10
103: checkcast     #40
106: astore        11
108: iconst_0
109: anewarray     #39
112: astore        12
114: aload         12
116: checkcast     #40
119: astore        13
121: aload         10
123: checkcast     #40
126: aload         12
128: checkcast     #40
131: iconst_1
132: invokestatic  #41
135: istore        14
137: aload         4
139: checkcast     #40
142: aload         10
144: checkcast     #40
147: iconst_0
148: invokestatic  #41
151: istore        15
153: aload         10
155: checkcast     #44
158: invokestatic  #32
161: astore        16
163: aload         16
165: invokestatic  #32
168: astore        17
170: aload         16
172: invokestatic  #32
175: astore        18
177: iconst_2
178: newarray       int
180: dup
181: iconst_0
182: iconst_0
183: iastore
184: dup
185: iconst_1
186: bipush        97
188: iastore
189: astore        19
191: aload         19
193: invokestatic  #205
196: astore        20
198: aload         19
200: invokestatic  #139
203: astore        21
205: aload         19
207: iconst_0
208: bipush        10
210: invokestatic  #400
213: astore        22
215: aload         19
217: invokestatic  #205
220: astore        23
222: aload         19
224: bipush        10
226: invokestatic  #401
229: astore        24
231: aload         24
233: iconst_0
234: bipush        100
236: invokestatic  #402
239: istore        25
241: aload         24
243: invokestatic  #205
246: astore        26
248: aload         18
250: checkcast     #45
253: aload         26
255: checkcast     #45
258: invokestatic  #158
261: istore        27
263: aload         26
265: invokestatic  #171
268: astore        28
270: aload_2
271: invokestatic  #47
274: aload_3
275: invokestatic  #47
278: aload         4
280: invokestatic  #47
283: aload         5
285: invokestatic  #47
288: aload         6
290: invokestatic  #47
293: aload         7
295: invokestatic  #47
298: new           #14
301: dup
302: invokespecial #15
305: ldc           #16
307: invokevirtual #17
310: iload         8
312: invokevirtual #18
315: ldc           #19
317: invokevirtual #17
320: iconst_1
321: invokevirtual #18
324: ldc           #16
326: invokevirtual #17
329: invokevirtual #20
332: iload         8
334: iconst_1
335: if_icmpne     342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #21
346: new           #14
349: dup
350: invokespecial #15
353: ldc           #16
355: invokevirtual #17
358: iload         9
360: invokevirtual #18
363: ldc           #19
365: invokevirtual #17
368: iconst_0
369: invokevirtual #18
372: ldc           #16
374: invokevirtual #17
377: invokevirtual #20
380: iload         9
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #21
393: aload         10
395: invokestatic  #47
398: aload         11
400: invokestatic  #47
403: aload         12
405: invokestatic  #47
408: aload         13
410: invokestatic  #47
413: new           #14
416: dup
417: invokespecial #15
420: ldc           #16
422: invokevirtual #17
425: iload         14
427: invokevirtual #18
430: ldc           #19
432: invokevirtual #17
435: iconst_1
436: invokevirtual #18
439: ldc           #16
441: invokevirtual #17
444: invokevirtual #20
447: iload         14
449: iconst_1
450: if_icmpne     457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #21
461: new           #14
464: dup
465: invokespecial #15
468: ldc           #16
470: invokevirtual #17
473: iload         15
475: invokevirtual #18
478: ldc           #19
480: invokevirtual #17
483: iconst_1
484: invokevirtual #18
487: ldc           #16
489: invokevirtual #17
492: invokevirtual #20
495: iload         15
497: iconst_1
498: if_icmpne     505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #21
509: aload         16
511: invokestatic  #47
514: aload         17
516: invokestatic  #47
519: aload         18
521: invokestatic  #47
524: aload         19
526: invokestatic  #47
529: aload         19
531: invokestatic  #147
534: ldc_w         #403
537: invokestatic  #62
540: aload         20
542: invokestatic  #47
545: aload         21
547: invokestatic  #47
550: aload         21
552: invokestatic  #147
555: ldc_w         #403
558: invokestatic  #62
561: aload         22
563: invokestatic  #47
566: aload         22
568: invokestatic  #147
571: ldc_w         #403
574: invokestatic  #62
577: aload         23
579: invokestatic  #47
582: aload         24
584: invokestatic  #47
587: aload         24
589: invokestatic  #147
592: ldc_w         #404
595: invokestatic  #62
598: new           #14
601: dup
602: invokespecial #15
605: ldc           #16
607: invokevirtual #17
610: iload         25
612: invokevirtual #48
615: ldc           #19
617: invokevirtual #17
620: iconst_0
621: invokevirtual #48
624: ldc           #16
626: invokevirtual #17
629: invokevirtual #20
632: iload         25
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #21
645: aload         26
647: invokestatic  #47
650: new           #14
653: dup
654: invokespecial #15
657: ldc           #16
659: invokevirtual #17
662: iload         27
664: invokevirtual #18
667: ldc           #19
669: invokevirtual #17
672: iconst_0
673: invokevirtual #18
676: ldc           #16
678: invokevirtual #17
681: invokevirtual #20
684: iload         27
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #21
697: aload         28
699: invokestatic  #47
702: aload         28
704: invokestatic  #147
707: ldc_w         #404
710: invokestatic  #62
713: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtilsTest.class
Class name: TypeUtilsTest
Method name: testGetTypeArguments
Start line: 471
End line: 507
Method source code: 
    public void testGetTypeArguments() {
        Map<TypeVariable<?>, Type> typeVarAssigns;
        TypeVariable<?> treeSetTypeVar;
        Type typeArg;

        typeVarAssigns = TypeUtils.getTypeArguments(Integer.class, Comparable.class);
        treeSetTypeVar = Comparable.class.getTypeParameters()[0];
        Assert.assertTrue("Type var assigns for Comparable from Integer: " + typeVarAssigns,
                typeVarAssigns.containsKey(treeSetTypeVar));
        typeArg = typeVarAssigns.get(treeSetTypeVar);
        Assert.assertEquals("Type argument of Comparable from Integer: " + typeArg, Integer.class,
                typeVarAssigns.get(treeSetTypeVar));

        typeVarAssigns = TypeUtils.getTypeArguments(int.class, Comparable.class);
        treeSetTypeVar = Comparable.class.getTypeParameters()[0];
        Assert.assertTrue("Type var assigns for Comparable from int: " + typeVarAssigns,
                typeVarAssigns.containsKey(treeSetTypeVar));
        typeArg = typeVarAssigns.get(treeSetTypeVar);
        Assert.assertEquals("Type argument of Comparable from int: " + typeArg, Integer.class,
                typeVarAssigns.get(treeSetTypeVar));

        Collection<Integer> col = Arrays.asList(new Integer[0]);
        typeVarAssigns = TypeUtils.getTypeArguments(List.class, Collection.class);
        treeSetTypeVar = Comparable.class.getTypeParameters()[0];
        Assert.assertFalse("Type var assigns for Collection from List: " + typeVarAssigns,
                typeVarAssigns.containsKey(treeSetTypeVar));

        typeVarAssigns = TypeUtils.getTypeArguments(AAAClass.BBBClass.class, AAClass.BBClass.class);
        Assert.assertTrue(typeVarAssigns.size() == 2);
        Assert.assertEquals(String.class, typeVarAssigns.get(AAClass.class.getTypeParameters()[0]));
        Assert.assertEquals(String.class, typeVarAssigns.get(AAClass.BBClass.class.getTypeParameters()[0]));

        typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);
        Assert.assertEquals(2, typeVarAssigns.size());
        Assert.assertEquals(String.class, typeVarAssigns.get(This.class.getTypeParameters()[0]));
        Assert.assertEquals(Other.class.getTypeParameters()[0], typeVarAssigns.get(This.class.getTypeParameters()[1]));
    }
Method byte code: 
0: ldc           #42
2: ldc           #47
4: invokestatic  #84
7: astore_1
8: ldc           #47
10: invokevirtual #85
13: iconst_0
14: aaload
15: astore_2
16: new           #70
19: dup
20: invokespecial #71
23: ldc           #86
25: invokevirtual #73
28: aload_1
29: invokevirtual #87
32: invokevirtual #80
35: aload_1
36: aload_2
37: invokeinterface #88,  2
42: invokestatic  #81
45: aload_1
46: aload_2
47: invokeinterface #89,  2
52: checkcast     #90
55: astore_3
56: new           #70
59: dup
60: invokespecial #71
63: ldc           #91
65: invokevirtual #73
68: aload_3
69: invokevirtual #87
72: invokevirtual #80
75: ldc           #42
77: aload_1
78: aload_2
79: invokeinterface #89,  2
84: invokestatic  #92
87: getstatic     #37
90: ldc           #47
92: invokestatic  #84
95: astore_1
96: ldc           #47
98: invokevirtual #85
101: iconst_0
102: aaload
103: astore_2
104: new           #70
107: dup
108: invokespecial #71
111: ldc           #93
113: invokevirtual #73
116: aload_1
117: invokevirtual #87
120: invokevirtual #80
123: aload_1
124: aload_2
125: invokeinterface #88,  2
130: invokestatic  #81
133: aload_1
134: aload_2
135: invokeinterface #89,  2
140: checkcast     #90
143: astore_3
144: new           #70
147: dup
148: invokespecial #71
151: ldc           #94
153: invokevirtual #73
156: aload_3
157: invokevirtual #87
160: invokevirtual #80
163: ldc           #42
165: aload_1
166: aload_2
167: invokeinterface #89,  2
172: invokestatic  #92
175: iconst_0
176: anewarray     #42
179: invokestatic  #95
182: astore        4
184: ldc           #5
186: ldc           #96
188: invokestatic  #84
191: astore_1
192: ldc           #47
194: invokevirtual #85
197: iconst_0
198: aaload
199: astore_2
200: new           #70
203: dup
204: invokespecial #71
207: ldc           #97
209: invokevirtual #73
212: aload_1
213: invokevirtual #87
216: invokevirtual #80
219: aload_1
220: aload_2
221: invokeinterface #88,  2
226: invokestatic  #31
229: ldc           #98
231: ldc           #99
233: invokestatic  #84
236: astore_1
237: aload_1
238: invokeinterface #100,  1
243: iconst_2
244: if_icmpne     251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #24
255: ldc           #101
257: aload_1
258: ldc           #62
260: invokevirtual #85
263: iconst_0
264: aaload
265: invokeinterface #89,  2
270: invokestatic  #102
273: ldc           #101
275: aload_1
276: ldc           #99
278: invokevirtual #85
281: iconst_0
282: aaload
283: invokeinterface #89,  2
288: invokestatic  #102
291: ldc           #103
293: ldc           #104
295: invokestatic  #84
298: astore_1
299: ldc2_w        #105
302: aload_1
303: invokeinterface #100,  1
308: i2l
309: invokestatic  #107
312: ldc           #101
314: aload_1
315: ldc           #104
317: invokevirtual #85
320: iconst_0
321: aaload
322: invokeinterface #89,  2
327: invokestatic  #102
330: ldc           #103
332: invokevirtual #85
335: iconst_0
336: aaload
337: aload_1
338: ldc           #104
340: invokevirtual #85
343: iconst_1
344: aaload
345: invokeinterface #89,  2
350: invokestatic  #102
353: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtilsTest.class
Class name: TypeUtilsTest
Method name: testTypesSatisfyVariables
Start line: 510
End line: 670
Method source code: 
    public void testTypesSatisfyVariables() throws SecurityException, NoSuchFieldException,
            NoSuchMethodException {
        Map<TypeVariable<?>, Type> typeVarAssigns = new HashMap<TypeVariable<?>, Type>();
        Integer max = TypeUtilsTest.stub();
        typeVarAssigns.put(getClass().getMethod("stub").getTypeParameters()[0], Integer.class);
        Assert.assertTrue(TypeUtils.typesSatisfyVariables(typeVarAssigns));
        typeVarAssigns.clear();
        typeVarAssigns.put(getClass().getMethod("stub2").getTypeParameters()[0], Integer.class);
        Assert.assertTrue(TypeUtils.typesSatisfyVariables(typeVarAssigns));
        typeVarAssigns.clear();
        typeVarAssigns.put(getClass().getMethod("stub3").getTypeParameters()[0], Integer.class);
        Assert.assertTrue(TypeUtils.typesSatisfyVariables(typeVarAssigns));
    }

    @Test
    public void testDetermineTypeVariableAssignments() throws SecurityException,
            NoSuchFieldException, NoSuchMethodException {
        ParameterizedType iterableType = (ParameterizedType) getClass().getField("iterable")
                .getGenericType();
        Map<TypeVariable<?>, Type> typeVarAssigns = TypeUtils.determineTypeArguments(TreeSet.class,
                iterableType);
        TypeVariable<?> treeSetTypeVar = TreeSet.class.getTypeParameters()[0];
        Assert.assertTrue(typeVarAssigns.containsKey(treeSetTypeVar));
        Assert.assertEquals(iterableType.getActualTypeArguments()[0], typeVarAssigns
                .get(treeSetTypeVar));
    }

    @Test
    public void testGetRawType() throws SecurityException, NoSuchFieldException {
        Type stringParentFieldType = GenericTypeHolder.class.getDeclaredField("stringParent")
                .getGenericType();
        Type integerParentFieldType = GenericTypeHolder.class.getDeclaredField("integerParent")
                .getGenericType();
        Type foosFieldType = GenericTypeHolder.class.getDeclaredField("foos").getGenericType();
        Type genericParentT = GenericParent.class.getTypeParameters()[0];
        Assert.assertEquals(GenericParent.class, TypeUtils.getRawType(stringParentFieldType, null));
        Assert
                .assertEquals(GenericParent.class, TypeUtils.getRawType(integerParentFieldType,
                        null));
        Assert.assertEquals(List.class, TypeUtils.getRawType(foosFieldType, null));
        Assert.assertEquals(String.class, TypeUtils.getRawType(genericParentT,
                StringParameterizedChild.class));
        Assert.assertEquals(String.class, TypeUtils.getRawType(genericParentT,
                stringParentFieldType));
        Assert.assertEquals(Foo.class, TypeUtils.getRawType(Iterable.class.getTypeParameters()[0],
                foosFieldType));
        Assert.assertEquals(Foo.class, TypeUtils.getRawType(List.class.getTypeParameters()[0],
                foosFieldType));
        Assert.assertNull(TypeUtils.getRawType(genericParentT, GenericParent.class));
        Assert.assertEquals(GenericParent[].class, TypeUtils.getRawType(GenericTypeHolder.class
                .getDeclaredField("barParents").getGenericType(), null));
    }

    @Test
    public void testIsArrayTypeClasses() {
        Assert.assertTrue(TypeUtils.isArrayType(boolean[].class));
        Assert.assertTrue(TypeUtils.isArrayType(byte[].class));
        Assert.assertTrue(TypeUtils.isArrayType(short[].class));
        Assert.assertTrue(TypeUtils.isArrayType(int[].class));
        Assert.assertTrue(TypeUtils.isArrayType(char[].class));
        Assert.assertTrue(TypeUtils.isArrayType(long[].class));
        Assert.assertTrue(TypeUtils.isArrayType(float[].class));
        Assert.assertTrue(TypeUtils.isArrayType(double[].class));
        Assert.assertTrue(TypeUtils.isArrayType(Object[].class));
        Assert.assertTrue(TypeUtils.isArrayType(String[].class));

        Assert.assertFalse(TypeUtils.isArrayType(boolean.class));
        Assert.assertFalse(TypeUtils.isArrayType(byte.class));
        Assert.assertFalse(TypeUtils.isArrayType(short.class));
        Assert.assertFalse(TypeUtils.isArrayType(int.class));
        Assert.assertFalse(TypeUtils.isArrayType(char.class));
        Assert.assertFalse(TypeUtils.isArrayType(long.class));
        Assert.assertFalse(TypeUtils.isArrayType(float.class));
        Assert.assertFalse(TypeUtils.isArrayType(double.class));
        Assert.assertFalse(TypeUtils.isArrayType(Object.class));
        Assert.assertFalse(TypeUtils.isArrayType(String.class));
    }

    @Test
    public void testIsArrayGenericTypes() throws Exception {
        Method method = getClass().getMethod("dummyMethod", List.class, List.class, List.class,
                List.class, List.class, List.class, List.class, List[].class, List[].class,
                List[].class, List[].class, List[].class, List[].class, List[].class);

        Type[] types = method.getGenericParameterTypes();

        Assert.assertFalse(TypeUtils.isArrayType(types[0]));
        Assert.assertFalse(TypeUtils.isArrayType(types[1]));
        Assert.assertFalse(TypeUtils.isArrayType(types[2]));
        Assert.assertFalse(TypeUtils.isArrayType(types[3]));
        Assert.assertFalse(TypeUtils.isArrayType(types[4]));
        Assert.assertFalse(TypeUtils.isArrayType(types[5]));
        Assert.assertFalse(TypeUtils.isArrayType(types[6]));
        Assert.assertTrue(TypeUtils.isArrayType(types[7]));
        Assert.assertTrue(TypeUtils.isArrayType(types[8]));
        Assert.assertTrue(TypeUtils.isArrayType(types[9]));
        Assert.assertTrue(TypeUtils.isArrayType(types[10]));
        Assert.assertTrue(TypeUtils.isArrayType(types[11]));
        Assert.assertTrue(TypeUtils.isArrayType(types[12]));
        Assert.assertTrue(TypeUtils.isArrayType(types[13]));
    }

    @Test
    public void testGetPrimitiveArrayComponentType() throws Exception {
        Assert.assertEquals(boolean.class, TypeUtils.getArrayComponentType(boolean[].class));
        Assert.assertEquals(byte.class, TypeUtils.getArrayComponentType(byte[].class));
        Assert.assertEquals(short.class, TypeUtils.getArrayComponentType(short[].class));
        Assert.assertEquals(int.class, TypeUtils.getArrayComponentType(int[].class));
        Assert.assertEquals(char.class, TypeUtils.getArrayComponentType(char[].class));
        Assert.assertEquals(long.class, TypeUtils.getArrayComponentType(long[].class));
        Assert.assertEquals(float.class, TypeUtils.getArrayComponentType(float[].class));
        Assert.assertEquals(double.class, TypeUtils.getArrayComponentType(double[].class));

        Assert.assertNull(TypeUtils.getArrayComponentType(boolean.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(byte.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(short.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(int.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(char.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(long.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(float.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(double.class));
    }

    @Test
    public void testGetArrayComponentType() throws Exception {
        Method method = getClass().getMethod("dummyMethod", List.class, List.class, List.class,
                List.class, List.class, List.class, List.class, List[].class, List[].class,
                List[].class, List[].class, List[].class, List[].class, List[].class);

        Type[] types = method.getGenericParameterTypes();

        Assert.assertNull(TypeUtils.getArrayComponentType(types[0]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[1]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[2]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[3]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[4]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[5]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[6]));
        Assert.assertEquals(types[0], TypeUtils.getArrayComponentType(types[7]));
        Assert.assertEquals(types[1], TypeUtils.getArrayComponentType(types[8]));
        Assert.assertEquals(types[2], TypeUtils.getArrayComponentType(types[9]));
        Assert.assertEquals(types[3], TypeUtils.getArrayComponentType(types[10]));
        Assert.assertEquals(types[4], TypeUtils.getArrayComponentType(types[11]));
        Assert.assertEquals(types[5], TypeUtils.getArrayComponentType(types[12]));
        Assert.assertEquals(types[6], TypeUtils.getArrayComponentType(types[13]));
    }

    public Iterable<? extends Map<Integer, ? extends Collection<?>>> iterable;

    public static <G extends Comparable<G>> G stub() {
        return null;
    }

    public static <G extends Comparable<? super G>> G stub2() {
        return null;
    }

    public static <T extends Comparable<? extends T>> T stub3() {
        return null;
    }
}
Method byte code: 
0: new           #108
3: dup
4: invokespecial #109
7: astore_1
8: invokestatic  #110
11: checkcast     #42
14: astore_2
15: aload_1
16: aload_0
17: invokevirtual #2
20: ldc           #111
22: iconst_0
23: anewarray     #4
26: invokevirtual #7
29: invokevirtual #112
32: iconst_0
33: aaload
34: ldc           #42
36: invokeinterface #113,  3
41: pop
42: aload_1
43: invokestatic  #114
46: invokestatic  #24
49: aload_1
50: invokeinterface #115,  1
55: aload_1
56: aload_0
57: invokevirtual #2
60: ldc           #116
62: iconst_0
63: anewarray     #4
66: invokevirtual #7
69: invokevirtual #112
72: iconst_0
73: aaload
74: ldc           #42
76: invokeinterface #113,  3
81: pop
82: aload_1
83: invokestatic  #114
86: invokestatic  #24
89: aload_1
90: invokeinterface #115,  1
95: aload_1
96: aload_0
97: invokevirtual #2
100: ldc           #117
102: iconst_0
103: anewarray     #4
106: invokevirtual #7
109: invokevirtual #112
112: iconst_0
113: aaload
114: ldc           #42
116: invokeinterface #113,  3
121: pop
122: aload_1
123: invokestatic  #114
126: invokestatic  #24
129: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtilsTest.class
Class name: TypeUtilsTest
Method name: testDetermineTypeVariableAssignments
Start line: 525
End line: 670
Method source code: 
    public void testDetermineTypeVariableAssignments() throws SecurityException,
            NoSuchFieldException, NoSuchMethodException {
        ParameterizedType iterableType = (ParameterizedType) getClass().getField("iterable")
                .getGenericType();
        Map<TypeVariable<?>, Type> typeVarAssigns = TypeUtils.determineTypeArguments(TreeSet.class,
                iterableType);
        TypeVariable<?> treeSetTypeVar = TreeSet.class.getTypeParameters()[0];
        Assert.assertTrue(typeVarAssigns.containsKey(treeSetTypeVar));
        Assert.assertEquals(iterableType.getActualTypeArguments()[0], typeVarAssigns
                .get(treeSetTypeVar));
    }

    @Test
    public void testGetRawType() throws SecurityException, NoSuchFieldException {
        Type stringParentFieldType = GenericTypeHolder.class.getDeclaredField("stringParent")
                .getGenericType();
        Type integerParentFieldType = GenericTypeHolder.class.getDeclaredField("integerParent")
                .getGenericType();
        Type foosFieldType = GenericTypeHolder.class.getDeclaredField("foos").getGenericType();
        Type genericParentT = GenericParent.class.getTypeParameters()[0];
        Assert.assertEquals(GenericParent.class, TypeUtils.getRawType(stringParentFieldType, null));
        Assert
                .assertEquals(GenericParent.class, TypeUtils.getRawType(integerParentFieldType,
                        null));
        Assert.assertEquals(List.class, TypeUtils.getRawType(foosFieldType, null));
        Assert.assertEquals(String.class, TypeUtils.getRawType(genericParentT,
                StringParameterizedChild.class));
        Assert.assertEquals(String.class, TypeUtils.getRawType(genericParentT,
                stringParentFieldType));
        Assert.assertEquals(Foo.class, TypeUtils.getRawType(Iterable.class.getTypeParameters()[0],
                foosFieldType));
        Assert.assertEquals(Foo.class, TypeUtils.getRawType(List.class.getTypeParameters()[0],
                foosFieldType));
        Assert.assertNull(TypeUtils.getRawType(genericParentT, GenericParent.class));
        Assert.assertEquals(GenericParent[].class, TypeUtils.getRawType(GenericTypeHolder.class
                .getDeclaredField("barParents").getGenericType(), null));
    }

    @Test
    public void testIsArrayTypeClasses() {
        Assert.assertTrue(TypeUtils.isArrayType(boolean[].class));
        Assert.assertTrue(TypeUtils.isArrayType(byte[].class));
        Assert.assertTrue(TypeUtils.isArrayType(short[].class));
        Assert.assertTrue(TypeUtils.isArrayType(int[].class));
        Assert.assertTrue(TypeUtils.isArrayType(char[].class));
        Assert.assertTrue(TypeUtils.isArrayType(long[].class));
        Assert.assertTrue(TypeUtils.isArrayType(float[].class));
        Assert.assertTrue(TypeUtils.isArrayType(double[].class));
        Assert.assertTrue(TypeUtils.isArrayType(Object[].class));
        Assert.assertTrue(TypeUtils.isArrayType(String[].class));

        Assert.assertFalse(TypeUtils.isArrayType(boolean.class));
        Assert.assertFalse(TypeUtils.isArrayType(byte.class));
        Assert.assertFalse(TypeUtils.isArrayType(short.class));
        Assert.assertFalse(TypeUtils.isArrayType(int.class));
        Assert.assertFalse(TypeUtils.isArrayType(char.class));
        Assert.assertFalse(TypeUtils.isArrayType(long.class));
        Assert.assertFalse(TypeUtils.isArrayType(float.class));
        Assert.assertFalse(TypeUtils.isArrayType(double.class));
        Assert.assertFalse(TypeUtils.isArrayType(Object.class));
        Assert.assertFalse(TypeUtils.isArrayType(String.class));
    }

    @Test
    public void testIsArrayGenericTypes() throws Exception {
        Method method = getClass().getMethod("dummyMethod", List.class, List.class, List.class,
                List.class, List.class, List.class, List.class, List[].class, List[].class,
                List[].class, List[].class, List[].class, List[].class, List[].class);

        Type[] types = method.getGenericParameterTypes();

        Assert.assertFalse(TypeUtils.isArrayType(types[0]));
        Assert.assertFalse(TypeUtils.isArrayType(types[1]));
        Assert.assertFalse(TypeUtils.isArrayType(types[2]));
        Assert.assertFalse(TypeUtils.isArrayType(types[3]));
        Assert.assertFalse(TypeUtils.isArrayType(types[4]));
        Assert.assertFalse(TypeUtils.isArrayType(types[5]));
        Assert.assertFalse(TypeUtils.isArrayType(types[6]));
        Assert.assertTrue(TypeUtils.isArrayType(types[7]));
        Assert.assertTrue(TypeUtils.isArrayType(types[8]));
        Assert.assertTrue(TypeUtils.isArrayType(types[9]));
        Assert.assertTrue(TypeUtils.isArrayType(types[10]));
        Assert.assertTrue(TypeUtils.isArrayType(types[11]));
        Assert.assertTrue(TypeUtils.isArrayType(types[12]));
        Assert.assertTrue(TypeUtils.isArrayType(types[13]));
    }

    @Test
    public void testGetPrimitiveArrayComponentType() throws Exception {
        Assert.assertEquals(boolean.class, TypeUtils.getArrayComponentType(boolean[].class));
        Assert.assertEquals(byte.class, TypeUtils.getArrayComponentType(byte[].class));
        Assert.assertEquals(short.class, TypeUtils.getArrayComponentType(short[].class));
        Assert.assertEquals(int.class, TypeUtils.getArrayComponentType(int[].class));
        Assert.assertEquals(char.class, TypeUtils.getArrayComponentType(char[].class));
        Assert.assertEquals(long.class, TypeUtils.getArrayComponentType(long[].class));
        Assert.assertEquals(float.class, TypeUtils.getArrayComponentType(float[].class));
        Assert.assertEquals(double.class, TypeUtils.getArrayComponentType(double[].class));

        Assert.assertNull(TypeUtils.getArrayComponentType(boolean.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(byte.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(short.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(int.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(char.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(long.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(float.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(double.class));
    }

    @Test
    public void testGetArrayComponentType() throws Exception {
        Method method = getClass().getMethod("dummyMethod", List.class, List.class, List.class,
                List.class, List.class, List.class, List.class, List[].class, List[].class,
                List[].class, List[].class, List[].class, List[].class, List[].class);

        Type[] types = method.getGenericParameterTypes();

        Assert.assertNull(TypeUtils.getArrayComponentType(types[0]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[1]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[2]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[3]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[4]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[5]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[6]));
        Assert.assertEquals(types[0], TypeUtils.getArrayComponentType(types[7]));
        Assert.assertEquals(types[1], TypeUtils.getArrayComponentType(types[8]));
        Assert.assertEquals(types[2], TypeUtils.getArrayComponentType(types[9]));
        Assert.assertEquals(types[3], TypeUtils.getArrayComponentType(types[10]));
        Assert.assertEquals(types[4], TypeUtils.getArrayComponentType(types[11]));
        Assert.assertEquals(types[5], TypeUtils.getArrayComponentType(types[12]));
        Assert.assertEquals(types[6], TypeUtils.getArrayComponentType(types[13]));
    }

    public Iterable<? extends Map<Integer, ? extends Collection<?>>> iterable;

    public static <G extends Comparable<G>> G stub() {
        return null;
    }

    public static <G extends Comparable<? super G>> G stub2() {
        return null;
    }

    public static <T extends Comparable<? extends T>> T stub3() {
        return null;
    }
}
Method byte code: 
0: aload_0
1: invokevirtual #2
4: ldc           #118
6: invokevirtual #11
9: invokevirtual #12
12: checkcast     #119
15: astore_1
16: ldc           #120
18: aload_1
19: invokestatic  #121
22: astore_2
23: ldc           #120
25: invokevirtual #85
28: iconst_0
29: aaload
30: astore_3
31: aload_2
32: aload_3
33: invokeinterface #88,  2
38: invokestatic  #24
41: aload_1
42: invokeinterface #122,  1
47: iconst_0
48: aaload
49: aload_2
50: aload_3
51: invokeinterface #89,  2
56: invokestatic  #102
59: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtilsTest.class
Class name: TypeUtilsTest
Method name: testGetRawType
Start line: 538
End line: 561
Method source code: 
    public void testGetRawType() throws SecurityException, NoSuchFieldException {
        Type stringParentFieldType = GenericTypeHolder.class.getDeclaredField("stringParent")
                .getGenericType();
        Type integerParentFieldType = GenericTypeHolder.class.getDeclaredField("integerParent")
                .getGenericType();
        Type foosFieldType = GenericTypeHolder.class.getDeclaredField("foos").getGenericType();
        Type genericParentT = GenericParent.class.getTypeParameters()[0];
        Assert.assertEquals(GenericParent.class, TypeUtils.getRawType(stringParentFieldType, null));
        Assert
                .assertEquals(GenericParent.class, TypeUtils.getRawType(integerParentFieldType,
                        null));
        Assert.assertEquals(List.class, TypeUtils.getRawType(foosFieldType, null));
        Assert.assertEquals(String.class, TypeUtils.getRawType(genericParentT,
                StringParameterizedChild.class));
        Assert.assertEquals(String.class, TypeUtils.getRawType(genericParentT,
                stringParentFieldType));
        Assert.assertEquals(Foo.class, TypeUtils.getRawType(Iterable.class.getTypeParameters()[0],
                foosFieldType));
        Assert.assertEquals(Foo.class, TypeUtils.getRawType(List.class.getTypeParameters()[0],
                foosFieldType));
        Assert.assertNull(TypeUtils.getRawType(genericParentT, GenericParent.class));
        Assert.assertEquals(GenericParent[].class, TypeUtils.getRawType(GenericTypeHolder.class
                .getDeclaredField("barParents").getGenericType(), null));
    }
Method byte code: 
0: ldc           #123
2: ldc           #124
4: invokevirtual #125
7: invokevirtual #12
10: astore_1
11: ldc           #123
13: ldc           #126
15: invokevirtual #125
18: invokevirtual #12
21: astore_2
22: ldc           #123
24: ldc           #127
26: invokevirtual #125
29: invokevirtual #12
32: astore_3
33: ldc           #128
35: invokevirtual #85
38: iconst_0
39: aaload
40: astore        4
42: ldc           #128
44: aload_1
45: aconst_null
46: invokestatic  #129
49: invokestatic  #102
52: ldc           #128
54: aload_2
55: aconst_null
56: invokestatic  #129
59: invokestatic  #102
62: ldc           #5
64: aload_3
65: aconst_null
66: invokestatic  #129
69: invokestatic  #102
72: ldc           #101
74: aload         4
76: ldc           #130
78: invokestatic  #129
81: invokestatic  #102
84: ldc           #101
86: aload         4
88: aload_1
89: invokestatic  #129
92: invokestatic  #102
95: ldc           #131
97: ldc           #132
99: invokevirtual #85
102: iconst_0
103: aaload
104: aload_3
105: invokestatic  #129
108: invokestatic  #102
111: ldc           #131
113: ldc           #5
115: invokevirtual #85
118: iconst_0
119: aaload
120: aload_3
121: invokestatic  #129
124: invokestatic  #102
127: aload         4
129: ldc           #128
131: invokestatic  #129
134: invokestatic  #133
137: ldc           #134
139: ldc           #123
141: ldc           #135
143: invokevirtual #125
146: invokevirtual #12
149: aconst_null
150: invokestatic  #129
153: invokestatic  #102
156: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtilsTest.class
Class name: TypeUtilsTest
Method name: testIsArrayTypeClasses
Start line: 564
End line: 586
Method source code: 
    public void testIsArrayTypeClasses() {
        Assert.assertTrue(TypeUtils.isArrayType(boolean[].class));
        Assert.assertTrue(TypeUtils.isArrayType(byte[].class));
        Assert.assertTrue(TypeUtils.isArrayType(short[].class));
        Assert.assertTrue(TypeUtils.isArrayType(int[].class));
        Assert.assertTrue(TypeUtils.isArrayType(char[].class));
        Assert.assertTrue(TypeUtils.isArrayType(long[].class));
        Assert.assertTrue(TypeUtils.isArrayType(float[].class));
        Assert.assertTrue(TypeUtils.isArrayType(double[].class));
        Assert.assertTrue(TypeUtils.isArrayType(Object[].class));
        Assert.assertTrue(TypeUtils.isArrayType(String[].class));

        Assert.assertFalse(TypeUtils.isArrayType(boolean.class));
        Assert.assertFalse(TypeUtils.isArrayType(byte.class));
        Assert.assertFalse(TypeUtils.isArrayType(short.class));
        Assert.assertFalse(TypeUtils.isArrayType(int.class));
        Assert.assertFalse(TypeUtils.isArrayType(char.class));
        Assert.assertFalse(TypeUtils.isArrayType(long.class));
        Assert.assertFalse(TypeUtils.isArrayType(float.class));
        Assert.assertFalse(TypeUtils.isArrayType(double.class));
        Assert.assertFalse(TypeUtils.isArrayType(Object.class));
        Assert.assertFalse(TypeUtils.isArrayType(String.class));
    }
Method byte code: 
0: ldc           #136
2: invokestatic  #137
5: invokestatic  #24
8: ldc           #138
10: invokestatic  #137
13: invokestatic  #24
16: ldc           #139
18: invokestatic  #137
21: invokestatic  #24
24: ldc           #50
26: invokestatic  #137
29: invokestatic  #24
32: ldc           #140
34: invokestatic  #137
37: invokestatic  #24
40: ldc           #51
42: invokestatic  #137
45: invokestatic  #24
48: ldc           #141
50: invokestatic  #137
53: invokestatic  #24
56: ldc           #142
58: invokestatic  #137
61: invokestatic  #24
64: ldc           #55
66: invokestatic  #137
69: invokestatic  #24
72: ldc           #143
74: invokestatic  #137
77: invokestatic  #24
80: getstatic     #144
83: invokestatic  #137
86: invokestatic  #25
89: getstatic     #35
92: invokestatic  #137
95: invokestatic  #25
98: getstatic     #36
101: invokestatic  #137
104: invokestatic  #25
107: getstatic     #37
110: invokestatic  #137
113: invokestatic  #25
116: getstatic     #33
119: invokestatic  #137
122: invokestatic  #25
125: getstatic     #38
128: invokestatic  #137
131: invokestatic  #25
134: getstatic     #39
137: invokestatic  #137
140: invokestatic  #25
143: getstatic     #34
146: invokestatic  #137
149: invokestatic  #25
152: ldc           #29
154: invokestatic  #137
157: invokestatic  #25
160: ldc           #101
162: invokestatic  #137
165: invokestatic  #25
168: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtilsTest.class
Class name: TypeUtilsTest
Method name: testIsArrayGenericTypes
Start line: 589
End line: 610
Method source code: 
    public void testIsArrayGenericTypes() throws Exception {
        Method method = getClass().getMethod("dummyMethod", List.class, List.class, List.class,
                List.class, List.class, List.class, List.class, List[].class, List[].class,
                List[].class, List[].class, List[].class, List[].class, List[].class);

        Type[] types = method.getGenericParameterTypes();

        Assert.assertFalse(TypeUtils.isArrayType(types[0]));
        Assert.assertFalse(TypeUtils.isArrayType(types[1]));
        Assert.assertFalse(TypeUtils.isArrayType(types[2]));
        Assert.assertFalse(TypeUtils.isArrayType(types[3]));
        Assert.assertFalse(TypeUtils.isArrayType(types[4]));
        Assert.assertFalse(TypeUtils.isArrayType(types[5]));
        Assert.assertFalse(TypeUtils.isArrayType(types[6]));
        Assert.assertTrue(TypeUtils.isArrayType(types[7]));
        Assert.assertTrue(TypeUtils.isArrayType(types[8]));
        Assert.assertTrue(TypeUtils.isArrayType(types[9]));
        Assert.assertTrue(TypeUtils.isArrayType(types[10]));
        Assert.assertTrue(TypeUtils.isArrayType(types[11]));
        Assert.assertTrue(TypeUtils.isArrayType(types[12]));
        Assert.assertTrue(TypeUtils.isArrayType(types[13]));
    }
Method byte code: 
0: aload_0
1: invokevirtual #2
4: ldc           #3
6: bipush        14
8: anewarray     #4
11: dup
12: iconst_0
13: ldc           #5
15: aastore
16: dup
17: iconst_1
18: ldc           #5
20: aastore
21: dup
22: iconst_2
23: ldc           #5
25: aastore
26: dup
27: iconst_3
28: ldc           #5
30: aastore
31: dup
32: iconst_4
33: ldc           #5
35: aastore
36: dup
37: iconst_5
38: ldc           #5
40: aastore
41: dup
42: bipush        6
44: ldc           #5
46: aastore
47: dup
48: bipush        7
50: ldc           #6
52: aastore
53: dup
54: bipush        8
56: ldc           #6
58: aastore
59: dup
60: bipush        9
62: ldc           #6
64: aastore
65: dup
66: bipush        10
68: ldc           #6
70: aastore
71: dup
72: bipush        11
74: ldc           #6
76: aastore
77: dup
78: bipush        12
80: ldc           #6
82: aastore
83: dup
84: bipush        13
86: ldc           #6
88: aastore
89: invokevirtual #7
92: astore_1
93: aload_1
94: invokevirtual #8
97: astore_2
98: aload_2
99: iconst_0
100: aaload
101: invokestatic  #137
104: invokestatic  #25
107: aload_2
108: iconst_1
109: aaload
110: invokestatic  #137
113: invokestatic  #25
116: aload_2
117: iconst_2
118: aaload
119: invokestatic  #137
122: invokestatic  #25
125: aload_2
126: iconst_3
127: aaload
128: invokestatic  #137
131: invokestatic  #25
134: aload_2
135: iconst_4
136: aaload
137: invokestatic  #137
140: invokestatic  #25
143: aload_2
144: iconst_5
145: aaload
146: invokestatic  #137
149: invokestatic  #25
152: aload_2
153: bipush        6
155: aaload
156: invokestatic  #137
159: invokestatic  #25
162: aload_2
163: bipush        7
165: aaload
166: invokestatic  #137
169: invokestatic  #24
172: aload_2
173: bipush        8
175: aaload
176: invokestatic  #137
179: invokestatic  #24
182: aload_2
183: bipush        9
185: aaload
186: invokestatic  #137
189: invokestatic  #24
192: aload_2
193: bipush        10
195: aaload
196: invokestatic  #137
199: invokestatic  #24
202: aload_2
203: bipush        11
205: aaload
206: invokestatic  #137
209: invokestatic  #24
212: aload_2
213: bipush        12
215: aaload
216: invokestatic  #137
219: invokestatic  #24
222: aload_2
223: bipush        13
225: aaload
226: invokestatic  #137
229: invokestatic  #24
232: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtilsTest.class
Class name: TypeUtilsTest
Method name: testGetPrimitiveArrayComponentType
Start line: 613
End line: 631
Method source code: 
    public void testGetPrimitiveArrayComponentType() throws Exception {
        Assert.assertEquals(boolean.class, TypeUtils.getArrayComponentType(boolean[].class));
        Assert.assertEquals(byte.class, TypeUtils.getArrayComponentType(byte[].class));
        Assert.assertEquals(short.class, TypeUtils.getArrayComponentType(short[].class));
        Assert.assertEquals(int.class, TypeUtils.getArrayComponentType(int[].class));
        Assert.assertEquals(char.class, TypeUtils.getArrayComponentType(char[].class));
        Assert.assertEquals(long.class, TypeUtils.getArrayComponentType(long[].class));
        Assert.assertEquals(float.class, TypeUtils.getArrayComponentType(float[].class));
        Assert.assertEquals(double.class, TypeUtils.getArrayComponentType(double[].class));

        Assert.assertNull(TypeUtils.getArrayComponentType(boolean.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(byte.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(short.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(int.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(char.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(long.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(float.class));
        Assert.assertNull(TypeUtils.getArrayComponentType(double.class));
    }
Method byte code: 
0: getstatic     #144
3: ldc           #136
5: invokestatic  #145
8: invokestatic  #102
11: getstatic     #35
14: ldc           #138
16: invokestatic  #145
19: invokestatic  #102
22: getstatic     #36
25: ldc           #139
27: invokestatic  #145
30: invokestatic  #102
33: getstatic     #37
36: ldc           #50
38: invokestatic  #145
41: invokestatic  #102
44: getstatic     #33
47: ldc           #140
49: invokestatic  #145
52: invokestatic  #102
55: getstatic     #38
58: ldc           #51
60: invokestatic  #145
63: invokestatic  #102
66: getstatic     #39
69: ldc           #141
71: invokestatic  #145
74: invokestatic  #102
77: getstatic     #34
80: ldc           #142
82: invokestatic  #145
85: invokestatic  #102
88: getstatic     #144
91: invokestatic  #145
94: invokestatic  #133
97: getstatic     #35
100: invokestatic  #145
103: invokestatic  #133
106: getstatic     #36
109: invokestatic  #145
112: invokestatic  #133
115: getstatic     #37
118: invokestatic  #145
121: invokestatic  #133
124: getstatic     #33
127: invokestatic  #145
130: invokestatic  #133
133: getstatic     #38
136: invokestatic  #145
139: invokestatic  #133
142: getstatic     #39
145: invokestatic  #145
148: invokestatic  #133
151: getstatic     #34
154: invokestatic  #145
157: invokestatic  #133
160: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtilsTest.class
Class name: TypeUtilsTest
Method name: testGetArrayComponentType
Start line: 634
End line: 655
Method source code: 
    public void testGetArrayComponentType() throws Exception {
        Method method = getClass().getMethod("dummyMethod", List.class, List.class, List.class,
                List.class, List.class, List.class, List.class, List[].class, List[].class,
                List[].class, List[].class, List[].class, List[].class, List[].class);

        Type[] types = method.getGenericParameterTypes();

        Assert.assertNull(TypeUtils.getArrayComponentType(types[0]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[1]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[2]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[3]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[4]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[5]));
        Assert.assertNull(TypeUtils.getArrayComponentType(types[6]));
        Assert.assertEquals(types[0], TypeUtils.getArrayComponentType(types[7]));
        Assert.assertEquals(types[1], TypeUtils.getArrayComponentType(types[8]));
        Assert.assertEquals(types[2], TypeUtils.getArrayComponentType(types[9]));
        Assert.assertEquals(types[3], TypeUtils.getArrayComponentType(types[10]));
        Assert.assertEquals(types[4], TypeUtils.getArrayComponentType(types[11]));
        Assert.assertEquals(types[5], TypeUtils.getArrayComponentType(types[12]));
        Assert.assertEquals(types[6], TypeUtils.getArrayComponentType(types[13]));
    }
Method byte code: 
0: aload_0
1: invokevirtual #2
4: ldc           #3
6: bipush        14
8: anewarray     #4
11: dup
12: iconst_0
13: ldc           #5
15: aastore
16: dup
17: iconst_1
18: ldc           #5
20: aastore
21: dup
22: iconst_2
23: ldc           #5
25: aastore
26: dup
27: iconst_3
28: ldc           #5
30: aastore
31: dup
32: iconst_4
33: ldc           #5
35: aastore
36: dup
37: iconst_5
38: ldc           #5
40: aastore
41: dup
42: bipush        6
44: ldc           #5
46: aastore
47: dup
48: bipush        7
50: ldc           #6
52: aastore
53: dup
54: bipush        8
56: ldc           #6
58: aastore
59: dup
60: bipush        9
62: ldc           #6
64: aastore
65: dup
66: bipush        10
68: ldc           #6
70: aastore
71: dup
72: bipush        11
74: ldc           #6
76: aastore
77: dup
78: bipush        12
80: ldc           #6
82: aastore
83: dup
84: bipush        13
86: ldc           #6
88: aastore
89: invokevirtual #7
92: astore_1
93: aload_1
94: invokevirtual #8
97: astore_2
98: aload_2
99: iconst_0
100: aaload
101: invokestatic  #145
104: invokestatic  #133
107: aload_2
108: iconst_1
109: aaload
110: invokestatic  #145
113: invokestatic  #133
116: aload_2
117: iconst_2
118: aaload
119: invokestatic  #145
122: invokestatic  #133
125: aload_2
126: iconst_3
127: aaload
128: invokestatic  #145
131: invokestatic  #133
134: aload_2
135: iconst_4
136: aaload
137: invokestatic  #145
140: invokestatic  #133
143: aload_2
144: iconst_5
145: aaload
146: invokestatic  #145
149: invokestatic  #133
152: aload_2
153: bipush        6
155: aaload
156: invokestatic  #145
159: invokestatic  #133
162: aload_2
163: iconst_0
164: aaload
165: aload_2
166: bipush        7
168: aaload
169: invokestatic  #145
172: invokestatic  #102
175: aload_2
176: iconst_1
177: aaload
178: aload_2
179: bipush        8
181: aaload
182: invokestatic  #145
185: invokestatic  #102
188: aload_2
189: iconst_2
190: aaload
191: aload_2
192: bipush        9
194: aaload
195: invokestatic  #145
198: invokestatic  #102
201: aload_2
202: iconst_3
203: aaload
204: aload_2
205: bipush        10
207: aaload
208: invokestatic  #145
211: invokestatic  #102
214: aload_2
215: iconst_4
216: aaload
217: aload_2
218: bipush        11
220: aaload
221: invokestatic  #145
224: invokestatic  #102
227: aload_2
228: iconst_5
229: aaload
230: aload_2
231: bipush        12
233: aaload
234: invokestatic  #145
237: invokestatic  #102
240: aload_2
241: bipush        6
243: aaload
244: aload_2
245: bipush        13
247: aaload
248: invokestatic  #145
251: invokestatic  #102
254: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test00
Start line: 24
End line: 30
Method source code: 
  public void test00()  throws Throwable  {
      Class<String> class0 = String.class;
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(parameterizedType0).getRawType();
      boolean boolean0 = TypeUtils.isAssignable(class0, parameterizedType0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #3
5: new           #4
8: dup
9: invokespecial #5
12: invokestatic  #6
15: checkcast     #3
18: astore_2
19: aload_1
20: invokestatic  #7
23: aload_2
24: invokeinterface #8,  2
29: checkcast     #3
32: invokeinterface #9,  1
37: pop
38: aload_1
39: aload_2
40: invokestatic  #10
43: istore_3
44: iload_3
45: invokestatic  #11
48: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test01
Start line: 33
End line: 45
Method source code: 
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeUtils.getTypeArguments((ParameterizedType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.reflect.TypeUtils", e);
      }
  }
Method byte code: 
0: aconst_null
1: checkcast     #3
4: invokestatic  #12
7: pop
8: ldc           #13
10: invokestatic  #14
13: goto          23
16: astore_1
17: ldc           #16
19: aload_1
20: invokestatic  #17
23: return
Exception table:
from    to  target type
0    13    16   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test02
Start line: 48
End line: 57
Method source code: 
  public void test02()  throws Throwable  {
      Class<String> class0 = String.class;
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn((Type[]) null).when(parameterizedType0).getActualTypeArguments();
      doReturn((Type) null).when(parameterizedType0).getOwnerType();
      doReturn(class0).when(parameterizedType0).getRawType();
      Class<Object> class1 = Object.class;
      Map<TypeVariable<?>, Type> map0 = TypeUtils.getTypeArguments((Type) parameterizedType0, (Class<?>) class1);
      assertTrue(map0.isEmpty());
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #3
5: new           #4
8: dup
9: invokespecial #5
12: invokestatic  #6
15: checkcast     #3
18: astore_2
19: aconst_null
20: checkcast     #18
23: invokestatic  #7
26: aload_2
27: invokeinterface #8,  2
32: checkcast     #3
35: invokeinterface #19,  1
40: pop
41: aconst_null
42: checkcast     #20
45: invokestatic  #7
48: aload_2
49: invokeinterface #8,  2
54: checkcast     #3
57: invokeinterface #21,  1
62: pop
63: aload_1
64: invokestatic  #7
67: aload_2
68: invokeinterface #8,  2
73: checkcast     #3
76: invokeinterface #9,  1
81: pop
82: ldc           #22
84: astore_3
85: aload_2
86: aload_3
87: invokestatic  #23
90: astore        4
92: aload         4
94: invokeinterface #24,  1
99: invokestatic  #11
102: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test03
Start line: 60
End line: 62
Method source code: 
  public void test03()  throws Throwable  {
      TypeUtils typeUtils0 = new TypeUtils();
  }
Method byte code: 
0: new           #25
3: dup
4: invokespecial #26
7: astore_1
8: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test04
Start line: 65
End line: 75
Method source code: 
  public void test04()  throws Throwable  {
      Type[] typeArray0 = new Type[1];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getLowerBounds();
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      WildcardType wildcardType1 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType1).getLowerBounds();
      doReturn(typeArray0).when(wildcardType1).getUpperBounds();
      boolean boolean0 = TypeUtils.isAssignable(wildcardType0, wildcardType1);
      assertTrue(boolean0);
  }
Method byte code: 
0: iconst_1
1: anewarray     #20
4: astore_1
5: ldc           #27
7: new           #4
10: dup
11: invokespecial #5
14: invokestatic  #6
17: checkcast     #27
20: astore_2
21: aload_1
22: invokestatic  #7
25: aload_2
26: invokeinterface #8,  2
31: checkcast     #27
34: invokeinterface #28,  1
39: pop
40: aload_1
41: invokestatic  #7
44: aload_2
45: invokeinterface #8,  2
50: checkcast     #27
53: invokeinterface #29,  1
58: pop
59: ldc           #27
61: new           #4
64: dup
65: invokespecial #5
68: invokestatic  #6
71: checkcast     #27
74: astore_3
75: aload_1
76: invokestatic  #7
79: aload_3
80: invokeinterface #8,  2
85: checkcast     #27
88: invokeinterface #28,  1
93: pop
94: aload_1
95: invokestatic  #7
98: aload_3
99: invokeinterface #8,  2
104: checkcast     #27
107: invokeinterface #29,  1
112: pop
113: aload_2
114: aload_3
115: invokestatic  #10
118: istore        4
120: iload         4
122: invokestatic  #11
125: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test05
Start line: 78
End line: 85
Method source code: 
  public void test05()  throws Throwable  {
      Type[] typeArray0 = new Type[0];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getLowerBounds();
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      boolean boolean0 = TypeUtils.isInstance(wildcardType0, wildcardType0);
      assertTrue(boolean0);
  }
Method byte code: 
0: iconst_0
1: anewarray     #20
4: astore_1
5: ldc           #27
7: new           #4
10: dup
11: invokespecial #5
14: invokestatic  #6
17: checkcast     #27
20: astore_2
21: aload_1
22: invokestatic  #7
25: aload_2
26: invokeinterface #8,  2
31: checkcast     #27
34: invokeinterface #28,  1
39: pop
40: aload_1
41: invokestatic  #7
44: aload_2
45: invokeinterface #8,  2
50: checkcast     #27
53: invokeinterface #29,  1
58: pop
59: aload_2
60: aload_2
61: invokestatic  #30
64: istore_3
65: iload_3
66: invokestatic  #11
69: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test06
Start line: 88
End line: 102
Method source code: 
  public void test06()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(type0).toString();
      // Undeclared exception!
      try { 
        TypeUtils.isInstance(type0, type0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // found an unhandled type: null
         //
         verifyException("org.apache.commons.lang3.reflect.TypeUtils", e);
      }
  }
Method byte code: 
0: ldc           #20
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #20
15: astore_1
16: aconst_null
17: checkcast     #2
20: invokestatic  #7
23: aload_1
24: invokeinterface #8,  2
29: checkcast     #20
32: invokevirtual #31
35: pop
36: aload_1
37: aload_1
38: invokestatic  #30
41: pop
42: ldc           #32
44: invokestatic  #14
47: goto          57
50: astore_2
51: ldc           #16
53: aload_2
54: invokestatic  #17
57: return
Exception table:
from    to  target type
36    47    50   Class java/lang/IllegalStateException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test07
Start line: 105
End line: 112
Method source code: 
  public void test07()  throws Throwable  {
      Type[] typeArray0 = new Type[4];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getLowerBounds();
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      boolean boolean0 = TypeUtils.isInstance(wildcardType0, wildcardType0);
      assertFalse(boolean0);
  }
Method byte code: 
0: iconst_4
1: anewarray     #20
4: astore_1
5: ldc           #27
7: new           #4
10: dup
11: invokespecial #5
14: invokestatic  #6
17: checkcast     #27
20: astore_2
21: aload_1
22: invokestatic  #7
25: aload_2
26: invokeinterface #8,  2
31: checkcast     #27
34: invokeinterface #28,  1
39: pop
40: aload_1
41: invokestatic  #7
44: aload_2
45: invokeinterface #8,  2
50: checkcast     #27
53: invokeinterface #29,  1
58: pop
59: aload_2
60: aload_2
61: invokestatic  #30
64: istore_3
65: iload_3
66: invokestatic  #34
69: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test08
Start line: 115
End line: 130
Method source code: 
  public void test08()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(type0).toString();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        TypeUtils.isAssignable(type0, class0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // found an unhandled type: Mock for Type, hashCode: 682375598
         //
         verifyException("org.apache.commons.lang3.reflect.TypeUtils", e);
      }
  }
Method byte code: 
0: ldc           #20
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #20
15: astore_1
16: aconst_null
17: checkcast     #2
20: invokestatic  #7
23: aload_1
24: invokeinterface #8,  2
29: checkcast     #20
32: invokevirtual #31
35: pop
36: ldc           #2
38: astore_2
39: aload_1
40: aload_2
41: invokestatic  #10
44: pop
45: ldc           #32
47: invokestatic  #14
50: goto          60
53: astore_3
54: ldc           #16
56: aload_3
57: invokestatic  #17
60: return
Exception table:
from    to  target type
39    50    53   Class java/lang/IllegalStateException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test09
Start line: 133
End line: 139
Method source code: 
  public void test09()  throws Throwable  {
      Class<String> class0 = String.class;
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(parameterizedType0).getRawType();
      boolean boolean0 = TypeUtils.isAssignable(parameterizedType0, class0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #3
5: new           #4
8: dup
9: invokespecial #5
12: invokestatic  #6
15: checkcast     #3
18: astore_2
19: aload_1
20: invokestatic  #7
23: aload_2
24: invokeinterface #8,  2
29: checkcast     #3
32: invokeinterface #9,  1
37: pop
38: aload_2
39: aload_1
40: invokestatic  #10
43: istore_3
44: iload_3
45: invokestatic  #11
48: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test10
Start line: 142
End line: 147
Method source code: 
  public void test10()  throws Throwable  {
      Class<String> class0 = String.class;
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = TypeUtils.isAssignable(wildcardType0, class0);
      assertFalse(boolean0);
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #27
5: new           #4
8: dup
9: invokespecial #5
12: invokestatic  #6
15: checkcast     #27
18: astore_2
19: aload_2
20: aload_1
21: invokestatic  #10
24: istore_3
25: iload_3
26: invokestatic  #34
29: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test11
Start line: 150
End line: 154
Method source code: 
  public void test11()  throws Throwable  {
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = TypeUtils.isAssignable((Type) null, parameterizedType0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #3
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #3
15: astore_1
16: aconst_null
17: checkcast     #20
20: aload_1
21: invokestatic  #10
24: istore_2
25: iload_2
26: invokestatic  #11
29: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test12
Start line: 157
End line: 161
Method source code: 
  public void test12()  throws Throwable  {
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = TypeUtils.isAssignable(parameterizedType0, parameterizedType0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #3
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #3
15: astore_1
16: aload_1
17: aload_1
18: invokestatic  #10
21: istore_2
22: iload_2
23: invokestatic  #11
26: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test13
Start line: 164
End line: 170
Method source code: 
  public void test13()  throws Throwable  {
      Class<String> class0 = String.class;
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(parameterizedType0).getRawType();
      boolean boolean0 = TypeUtils.isInstance(class0, parameterizedType0);
      assertFalse(boolean0);
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #3
5: new           #4
8: dup
9: invokespecial #5
12: invokestatic  #6
15: checkcast     #3
18: astore_2
19: aload_1
20: invokestatic  #7
23: aload_2
24: invokeinterface #8,  2
29: checkcast     #3
32: invokeinterface #9,  1
37: pop
38: aload_1
39: aload_2
40: invokestatic  #30
43: istore_3
44: iload_3
45: invokestatic  #34
48: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test14
Start line: 173
End line: 177
Method source code: 
  public void test14()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = TypeUtils.isAssignable((Type) null, wildcardType0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #27
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #27
15: astore_1
16: aconst_null
17: checkcast     #20
20: aload_1
21: invokestatic  #10
24: istore_2
25: iload_2
26: invokestatic  #11
29: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test15
Start line: 180
End line: 184
Method source code: 
  public void test15()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = TypeUtils.isAssignable(wildcardType0, wildcardType0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #27
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #27
15: astore_1
16: aload_1
17: aload_1
18: invokestatic  #10
21: istore_2
22: iload_2
23: invokestatic  #11
26: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test16
Start line: 187
End line: 194
Method source code: 
  public void test16()  throws Throwable  {
      Type[] typeArray0 = new Type[0];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      Class<String> class0 = String.class;
      Map<TypeVariable<?>, Type> map0 = TypeUtils.getTypeArguments((Type) wildcardType0, (Class<?>) class0);
      assertNull(map0);
  }
Method byte code: 
0: iconst_0
1: anewarray     #20
4: astore_1
5: ldc           #27
7: new           #4
10: dup
11: invokespecial #5
14: invokestatic  #6
17: checkcast     #27
20: astore_2
21: aload_1
22: invokestatic  #7
25: aload_2
26: invokeinterface #8,  2
31: checkcast     #27
34: invokeinterface #29,  1
39: pop
40: ldc           #2
42: astore_3
43: aload_2
44: aload_3
45: invokestatic  #23
48: astore        4
50: aload         4
52: invokestatic  #35
55: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test17
Start line: 197
End line: 213
Method source code: 
  public void test17()  throws Throwable  {
      Type[] typeArray0 = new Type[9];
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      doReturn(typeArray0).when(wildcardType0).getUpperBounds();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        TypeUtils.getTypeArguments((Type) wildcardType0, (Class<?>) class0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // found an unhandled type: null
         //
         verifyException("org.apache.commons.lang3.reflect.TypeUtils", e);
      }
  }
Method byte code: 
0: bipush        9
2: anewarray     #20
5: astore_1
6: ldc           #27
8: new           #4
11: dup
12: invokespecial #5
15: invokestatic  #6
18: checkcast     #27
21: astore_2
22: aload_1
23: invokestatic  #7
26: aload_2
27: invokeinterface #8,  2
32: checkcast     #27
35: invokeinterface #29,  1
40: pop
41: ldc           #22
43: astore_3
44: aload_2
45: aload_3
46: invokestatic  #23
49: pop
50: ldc           #32
52: invokestatic  #14
55: goto          67
58: astore        4
60: ldc           #16
62: aload         4
64: invokestatic  #17
67: return
Exception table:
from    to  target type
44    55    58   Class java/lang/IllegalStateException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test18
Start line: 216
End line: 223
Method source code: 
  public void test18()  throws Throwable  {
      Class<String> class0 = String.class;
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(parameterizedType0).getRawType();
      Class<Integer> class1 = Integer.class;
      Map<TypeVariable<?>, Type> map0 = TypeUtils.getTypeArguments((Type) parameterizedType0, (Class<?>) class1);
      assertNull(map0);
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #3
5: new           #4
8: dup
9: invokespecial #5
12: invokestatic  #6
15: checkcast     #3
18: astore_2
19: aload_1
20: invokestatic  #7
23: aload_2
24: invokeinterface #8,  2
29: checkcast     #3
32: invokeinterface #9,  1
37: pop
38: ldc           #36
40: astore_3
41: aload_2
42: aload_3
43: invokestatic  #23
46: astore        4
48: aload         4
50: invokestatic  #35
53: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test19
Start line: 226
End line: 241
Method source code: 
  public void test19()  throws Throwable  {
      Class<String> class0 = String.class;
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn(class0, (Type) null).when(parameterizedType0).getRawType();
      // Undeclared exception!
      try { 
        TypeUtils.determineTypeArguments(class0, parameterizedType0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Wait... What!? Type of rawType: null
         //
         verifyException("org.apache.commons.lang3.reflect.TypeUtils", e);
      }
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #3
5: new           #4
8: dup
9: invokespecial #5
12: invokestatic  #6
15: checkcast     #3
18: astore_2
19: aload_1
20: iconst_1
21: anewarray     #22
24: dup
25: iconst_0
26: aconst_null
27: checkcast     #20
30: aastore
31: invokestatic  #37
34: aload_2
35: invokeinterface #8,  2
40: checkcast     #3
43: invokeinterface #9,  1
48: pop
49: aload_1
50: aload_2
51: invokestatic  #38
54: pop
55: ldc           #32
57: invokestatic  #14
60: goto          70
63: astore_3
64: ldc           #16
66: aload_3
67: invokestatic  #17
70: return
Exception table:
from    to  target type
49    60    63   Class java/lang/IllegalStateException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test20
Start line: 244
End line: 249
Method source code: 
  public void test20()  throws Throwable  {
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      Map<TypeVariable<?>, Type> map0 = TypeUtils.getTypeArguments((Type) class0, (Class<?>) class1);
      assertTrue(map0.isEmpty());
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #22
5: astore_2
6: aload_1
7: aload_2
8: invokestatic  #23
11: astore_3
12: aload_3
13: invokeinterface #24,  1
18: invokestatic  #11
21: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test21
Start line: 252
End line: 259
Method source code: 
  public void test21()  throws Throwable  {
      Class<String> class0 = String.class;
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(parameterizedType0).getRawType();
      Class<Object> class1 = Object.class;
      Map<TypeVariable<?>, Type> map0 = TypeUtils.determineTypeArguments(class1, parameterizedType0);
      assertNull(map0);
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: ldc           #3
5: new           #4
8: dup
9: invokespecial #5
12: invokestatic  #6
15: checkcast     #3
18: astore_2
19: aload_1
20: invokestatic  #7
23: aload_2
24: invokeinterface #8,  2
29: checkcast     #3
32: invokeinterface #9,  1
37: pop
38: ldc           #22
40: astore_3
41: aload_3
42: aload_2
43: invokestatic  #38
46: astore        4
48: aload         4
50: invokestatic  #35
53: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test22
Start line: 262
End line: 265
Method source code: 
  public void test22()  throws Throwable  {
      boolean boolean0 = TypeUtils.isInstance((Object) null, (Type) null);
      assertFalse(boolean0);
  }
Method byte code: 
0: aconst_null
1: aconst_null
2: checkcast     #20
5: invokestatic  #30
8: istore_1
9: iload_1
10: invokestatic  #34
13: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test23
Start line: 268
End line: 272
Method source code: 
  public void test23()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = TypeUtils.isInstance((Object) null, wildcardType0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #27
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #27
15: astore_1
16: aconst_null
17: aload_1
18: invokestatic  #30
21: istore_2
22: iload_2
23: invokestatic  #11
26: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test24
Start line: 275
End line: 279
Method source code: 
  public void test24()  throws Throwable  {
      Class<Object> class0 = Object.class;
      boolean boolean0 = TypeUtils.isInstance((Object) null, class0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #22
2: astore_1
3: aconst_null
4: aload_1
5: invokestatic  #30
8: istore_2
9: iload_2
10: invokestatic  #11
13: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test25
Start line: 282
End line: 288
Method source code: 
  public void test25()  throws Throwable  {
      Class<String> class0 = String.class;
      Type[] typeArray0 = new Type[4];
      typeArray0[1] = (Type) class0;
      Type[] typeArray1 = TypeUtils.normalizeUpperBounds(typeArray0);
      assertEquals(1, typeArray1.length);
  }
Method byte code: 
0: ldc           #2
2: astore_1
3: iconst_4
4: anewarray     #20
7: astore_2
8: aload_2
9: iconst_1
10: aload_1
11: aastore
12: aload_2
13: invokestatic  #39
16: astore_3
17: lconst_1
18: aload_3
19: arraylength
20: i2l
21: invokestatic  #40
24: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test26
Start line: 291
End line: 298
Method source code: 
  public void test26()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Map<TypeVariable<?>, Type> map0 = TypeUtils.getTypeArguments((Type) class0, (Class<?>) class0);
      assertNotNull(map0);
      
      boolean boolean0 = TypeUtils.typesSatisfyVariables(map0);
      assertTrue(boolean0);
  }
Method byte code: 
0: ldc           #22
2: astore_1
3: aload_1
4: aload_1
5: invokestatic  #23
8: astore_2
9: aload_2
10: invokestatic  #41
13: aload_2
14: invokestatic  #42
17: istore_3
18: iload_3
19: invokestatic  #11
22: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test27
Start line: 301
End line: 315
Method source code: 
  public void test27()  throws Throwable  {
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn((Type) null).when(parameterizedType0).getRawType();
      // Undeclared exception!
      try { 
        TypeUtils.isInstance(parameterizedType0, parameterizedType0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Wait... What!? Type of rawType: null
         //
         verifyException("org.apache.commons.lang3.reflect.TypeUtils", e);
      }
  }
Method byte code: 
0: ldc           #3
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #3
15: astore_1
16: aconst_null
17: checkcast     #20
20: invokestatic  #7
23: aload_1
24: invokeinterface #8,  2
29: checkcast     #3
32: invokeinterface #9,  1
37: pop
38: aload_1
39: aload_1
40: invokestatic  #30
43: pop
44: ldc           #32
46: invokestatic  #14
49: goto          59
52: astore_2
53: ldc           #16
55: aload_2
56: invokestatic  #17
59: return
Exception table:
from    to  target type
38    49    52   Class java/lang/IllegalStateException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test28
Start line: 318
End line: 332
Method source code: 
  public void test28()  throws Throwable  {
      ParameterizedType parameterizedType0 = mock(ParameterizedType.class, new ViolatedAssumptionAnswer());
      doReturn((Type) null).when(parameterizedType0).getRawType();
      // Undeclared exception!
      try { 
        TypeUtils.getRawType(parameterizedType0, parameterizedType0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Wait... What!? Type of rawType: null
         //
         verifyException("org.apache.commons.lang3.reflect.TypeUtils", e);
      }
  }
Method byte code: 
0: ldc           #3
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #3
15: astore_1
16: aconst_null
17: checkcast     #20
20: invokestatic  #7
23: aload_1
24: invokeinterface #8,  2
29: checkcast     #3
32: invokeinterface #9,  1
37: pop
38: aload_1
39: aload_1
40: invokestatic  #43
43: pop
44: ldc           #32
46: invokestatic  #14
49: goto          59
52: astore_2
53: ldc           #16
55: aload_2
56: invokestatic  #17
59: return
Exception table:
from    to  target type
38    49    52   Class java/lang/IllegalStateException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test29
Start line: 335
End line: 339
Method source code: 
  public void test29()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<?> class1 = TypeUtils.getRawType(class0, class0);
      assertFalse(class1.isEnum());
  }
Method byte code: 
0: ldc           #22
2: astore_1
3: aload_1
4: aload_1
5: invokestatic  #43
8: astore_2
9: aload_2
10: invokevirtual #44
13: invokestatic  #34
16: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test30
Start line: 342
End line: 346
Method source code: 
  public void test30()  throws Throwable  {
      WildcardType wildcardType0 = mock(WildcardType.class, new ViolatedAssumptionAnswer());
      Class<?> class0 = TypeUtils.getRawType(wildcardType0, wildcardType0);
      assertNull(class0);
  }
Method byte code: 
0: ldc           #27
2: new           #4
5: dup
6: invokespecial #5
9: invokestatic  #6
12: checkcast     #27
15: astore_1
16: aload_1
17: aload_1
18: invokestatic  #43
21: astore_2
22: aload_2
23: invokestatic  #35
26: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test31
Start line: 349
End line: 361
Method source code: 
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        TypeUtils.getRawType((Type) null, (Type) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unknown type: null
         //
         verifyException("org.apache.commons.lang3.reflect.TypeUtils", e);
      }
  }
Method byte code: 
0: aconst_null
1: checkcast     #20
4: aconst_null
5: checkcast     #20
8: invokestatic  #43
11: pop
12: ldc           #45
14: invokestatic  #14
17: goto          27
20: astore_1
21: ldc           #16
23: aload_1
24: invokestatic  #17
27: return
Exception table:
from    to  target type
0    17    20   Class java/lang/IllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test32
Start line: 364
End line: 368
Method source code: 
  public void test32()  throws Throwable  {
      Class<Object> class0 = Object.class;
      boolean boolean0 = TypeUtils.isArrayType(class0);
      assertFalse(boolean0);
  }
Method byte code: 
0: ldc           #22
2: astore_1
3: aload_1
4: invokestatic  #47
7: istore_2
8: iload_2
9: invokestatic  #34
12: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test33
Start line: 371
End line: 374
Method source code: 
  public void test33()  throws Throwable  {
      boolean boolean0 = TypeUtils.isArrayType((Type) null);
      assertFalse(boolean0);
  }
Method byte code: 
0: aconst_null
1: checkcast     #20
4: invokestatic  #47
7: istore_1
8: iload_1
9: invokestatic  #34
12: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test34
Start line: 377
End line: 380
Method source code: 
  public void test34()  throws Throwable  {
      Type type0 = TypeUtils.getArrayComponentType((Type) null);
      assertNull(type0);
  }
Method byte code: 
0: aconst_null
1: checkcast     #20
4: invokestatic  #48
7: astore_1
8: aload_1
9: invokestatic  #35
12: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/src/test/java/org/apache/commons/lang3/reflect/TypeUtils_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/lang/15/target/test-classes/org/apache/commons/lang3/reflect/TypeUtils_ESTest.class
Class name: TypeUtils_ESTest
Method name: test35
Start line: 383
End line: 387
Method source code: 
  public void test35()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Type type0 = TypeUtils.getArrayComponentType(class0);
      assertNull(type0);
  }
Method byte code: 
0: ldc           #22
2: astore_1
3: aload_1
4: invokestatic  #48
7: astore_2
8: aload_2
9: invokestatic  #35
12: return
}
