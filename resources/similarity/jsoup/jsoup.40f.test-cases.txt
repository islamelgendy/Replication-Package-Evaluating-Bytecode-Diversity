Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test01
Start line: 12
End line: 35
Method source code: 
    public void test01() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test01");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings7 = new org.jsoup.nodes.Document.OutputSettings();
        int int8 = outputSettings7.indentAmount();
        org.jsoup.nodes.Attribute attribute11 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings12 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean13 = attribute11.shouldCollapseAttribute(outputSettings12);
        org.jsoup.nodes.Entities.EscapeMode escapeMode14 = outputSettings12.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = outputSettings7.escapeMode(escapeMode14);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, 0, outputSettings15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + escapeMode14 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode14.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #13
45: dup
46: invokespecial #14
49: astore_3
50: aload_3
51: invokevirtual #15
54: istore        4
56: new           #16
59: dup
60: ldc           #17
62: ldc           #18
64: invokespecial #19
67: astore        5
69: new           #13
72: dup
73: invokespecial #14
76: astore        6
78: aload         5
80: aload         6
82: invokevirtual #20
85: istore        7
87: aload         6
89: invokevirtual #21
92: astore        8
94: aload_3
95: aload         8
97: invokevirtual #22
100: astore        9
102: aload_1
103: aload_2
104: iconst_0
105: aload         9
107: invokevirtual #23
110: ldc           #24
112: invokestatic  #25
115: goto          120
118: astore        10
120: new           #27
123: dup
124: invokespecial #28
127: ldc           #29
129: invokevirtual #30
132: iload         4
134: invokevirtual #31
137: ldc           #32
139: invokevirtual #30
142: iconst_1
143: invokevirtual #31
146: ldc           #29
148: invokevirtual #30
151: invokevirtual #33
154: iload         4
156: iconst_1
157: if_icmpne     164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #34
168: new           #27
171: dup
172: invokespecial #28
175: ldc           #29
177: invokevirtual #30
180: iload         7
182: invokevirtual #35
185: ldc           #32
187: invokevirtual #30
190: iconst_0
191: invokevirtual #35
194: ldc           #29
196: invokevirtual #30
199: invokevirtual #33
202: iload         7
204: ifne          211
207: iconst_1
208: goto          212
211: iconst_0
212: invokestatic  #34
215: new           #27
218: dup
219: invokespecial #28
222: ldc           #29
224: invokevirtual #30
227: aload         8
229: invokevirtual #36
232: ldc           #32
234: invokevirtual #30
237: getstatic     #37
240: invokevirtual #36
243: ldc           #29
245: invokevirtual #30
248: invokevirtual #33
251: aload         8
253: getstatic     #37
256: invokevirtual #38
259: invokestatic  #34
262: aload         9
264: invokestatic  #39
267: return
Exception table:
from    to  target type
102   115   118   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test02
Start line: 38
End line: 59
Method source code: 
    public void test02() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test02");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Attribute attribute9 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Attribute attribute10 = attribute9.clone();
        attribute10.setKey(" class=\"\"");
        org.jsoup.nodes.Document.OutputSettings outputSettings13 = new org.jsoup.nodes.Document.OutputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = outputSettings13.outline(false);
        boolean boolean16 = attribute10.shouldCollapseAttribute(outputSettings15);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) (byte) 1, outputSettings15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(attribute10);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #40
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #16
45: dup
46: ldc           #17
48: ldc           #18
50: invokespecial #19
53: astore_3
54: aload_3
55: invokevirtual #41
58: astore        4
60: aload         4
62: ldc           #42
64: invokevirtual #43
67: new           #13
70: dup
71: invokespecial #14
74: astore        5
76: aload         5
78: iconst_0
79: invokevirtual #44
82: astore        6
84: aload         4
86: aload         6
88: invokevirtual #20
91: istore        7
93: aload_1
94: aload_2
95: iconst_1
96: aload         6
98: invokevirtual #23
101: ldc           #24
103: invokestatic  #25
106: goto          111
109: astore        8
111: aload         4
113: invokestatic  #39
116: aload         6
118: invokestatic  #39
121: new           #27
124: dup
125: invokespecial #28
128: ldc           #29
130: invokevirtual #30
133: iload         7
135: invokevirtual #35
138: ldc           #32
140: invokevirtual #30
143: iconst_0
144: invokevirtual #35
147: ldc           #29
149: invokevirtual #30
152: invokevirtual #33
155: iload         7
157: ifne          164
160: iconst_1
161: goto          165
164: iconst_0
165: invokestatic  #34
168: return
Exception table:
from    to  target type
93   106   109   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test03
Start line: 62
End line: 95
Method source code: 
    public void test03() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test03");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings7 = new org.jsoup.nodes.Document.OutputSettings();
        int int8 = outputSettings7.indentAmount();
        org.jsoup.nodes.Attribute attribute11 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings12 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean13 = attribute11.shouldCollapseAttribute(outputSettings12);
        org.jsoup.nodes.Entities.EscapeMode escapeMode14 = outputSettings12.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = outputSettings7.escapeMode(escapeMode14);
        org.jsoup.nodes.Attribute attribute18 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean20 = attribute18.shouldCollapseAttribute(outputSettings19);
        org.jsoup.nodes.Entities.EscapeMode escapeMode21 = outputSettings19.escapeMode();
        java.util.Map<java.lang.Character, java.lang.String> charMap22 = escapeMode21.getMap();
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = outputSettings15.escapeMode(escapeMode21);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) (short) 100, outputSettings15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + escapeMode14 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode14.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + escapeMode21 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode21.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(charMap22);
        org.junit.Assert.assertNotNull(outputSettings23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #45
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #13
45: dup
46: invokespecial #14
49: astore_3
50: aload_3
51: invokevirtual #15
54: istore        4
56: new           #16
59: dup
60: ldc           #17
62: ldc           #18
64: invokespecial #19
67: astore        5
69: new           #13
72: dup
73: invokespecial #14
76: astore        6
78: aload         5
80: aload         6
82: invokevirtual #20
85: istore        7
87: aload         6
89: invokevirtual #21
92: astore        8
94: aload_3
95: aload         8
97: invokevirtual #22
100: astore        9
102: new           #16
105: dup
106: ldc           #17
108: ldc           #18
110: invokespecial #19
113: astore        10
115: new           #13
118: dup
119: invokespecial #14
122: astore        11
124: aload         10
126: aload         11
128: invokevirtual #20
131: istore        12
133: aload         11
135: invokevirtual #21
138: astore        13
140: aload         13
142: invokevirtual #46
145: astore        14
147: aload         9
149: aload         13
151: invokevirtual #22
154: astore        15
156: aload_1
157: aload_2
158: bipush        100
160: aload         9
162: invokevirtual #23
165: ldc           #24
167: invokestatic  #25
170: goto          175
173: astore        16
175: new           #27
178: dup
179: invokespecial #28
182: ldc           #29
184: invokevirtual #30
187: iload         4
189: invokevirtual #31
192: ldc           #32
194: invokevirtual #30
197: iconst_1
198: invokevirtual #31
201: ldc           #29
203: invokevirtual #30
206: invokevirtual #33
209: iload         4
211: iconst_1
212: if_icmpne     219
215: iconst_1
216: goto          220
219: iconst_0
220: invokestatic  #34
223: new           #27
226: dup
227: invokespecial #28
230: ldc           #29
232: invokevirtual #30
235: iload         7
237: invokevirtual #35
240: ldc           #32
242: invokevirtual #30
245: iconst_0
246: invokevirtual #35
249: ldc           #29
251: invokevirtual #30
254: invokevirtual #33
257: iload         7
259: ifne          266
262: iconst_1
263: goto          267
266: iconst_0
267: invokestatic  #34
270: new           #27
273: dup
274: invokespecial #28
277: ldc           #29
279: invokevirtual #30
282: aload         8
284: invokevirtual #36
287: ldc           #32
289: invokevirtual #30
292: getstatic     #37
295: invokevirtual #36
298: ldc           #29
300: invokevirtual #30
303: invokevirtual #33
306: aload         8
308: getstatic     #37
311: invokevirtual #38
314: invokestatic  #34
317: aload         9
319: invokestatic  #39
322: new           #27
325: dup
326: invokespecial #28
329: ldc           #29
331: invokevirtual #30
334: iload         12
336: invokevirtual #35
339: ldc           #32
341: invokevirtual #30
344: iconst_0
345: invokevirtual #35
348: ldc           #29
350: invokevirtual #30
353: invokevirtual #33
356: iload         12
358: ifne          365
361: iconst_1
362: goto          366
365: iconst_0
366: invokestatic  #34
369: new           #27
372: dup
373: invokespecial #28
376: ldc           #29
378: invokevirtual #30
381: aload         13
383: invokevirtual #36
386: ldc           #32
388: invokevirtual #30
391: getstatic     #37
394: invokevirtual #36
397: ldc           #29
399: invokevirtual #30
402: invokevirtual #33
405: aload         13
407: getstatic     #37
410: invokevirtual #38
413: invokestatic  #34
416: aload         14
418: invokestatic  #39
421: aload         15
423: invokestatic  #39
426: return
Exception table:
from    to  target type
156   170   173   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test04
Start line: 98
End line: 121
Method source code: 
    public void test04() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test04");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Attribute attribute9 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Attribute attribute10 = attribute9.clone();
        attribute10.setKey(" class=\"\"");
        org.jsoup.nodes.Document.OutputSettings outputSettings13 = new org.jsoup.nodes.Document.OutputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = outputSettings13.outline(false);
        boolean boolean16 = attribute10.shouldCollapseAttribute(outputSettings15);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax17 = outputSettings15.syntax();
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) (short) -1, outputSettings15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(attribute10);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + syntax17 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax17.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #47
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #16
45: dup
46: ldc           #17
48: ldc           #18
50: invokespecial #19
53: astore_3
54: aload_3
55: invokevirtual #41
58: astore        4
60: aload         4
62: ldc           #42
64: invokevirtual #43
67: new           #13
70: dup
71: invokespecial #14
74: astore        5
76: aload         5
78: iconst_0
79: invokevirtual #44
82: astore        6
84: aload         4
86: aload         6
88: invokevirtual #20
91: istore        7
93: aload         6
95: invokevirtual #48
98: astore        8
100: aload_1
101: aload_2
102: iconst_m1
103: aload         6
105: invokevirtual #23
108: ldc           #24
110: invokestatic  #25
113: goto          118
116: astore        9
118: aload         4
120: invokestatic  #39
123: aload         6
125: invokestatic  #39
128: new           #27
131: dup
132: invokespecial #28
135: ldc           #29
137: invokevirtual #30
140: iload         7
142: invokevirtual #35
145: ldc           #32
147: invokevirtual #30
150: iconst_0
151: invokevirtual #35
154: ldc           #29
156: invokevirtual #30
159: invokevirtual #33
162: iload         7
164: ifne          171
167: iconst_1
168: goto          172
171: iconst_0
172: invokestatic  #34
175: new           #27
178: dup
179: invokespecial #28
182: ldc           #29
184: invokevirtual #30
187: aload         8
189: invokevirtual #36
192: ldc           #32
194: invokevirtual #30
197: getstatic     #49
200: invokevirtual #36
203: ldc           #29
205: invokevirtual #30
208: invokevirtual #33
211: aload         8
213: getstatic     #49
216: invokevirtual #50
219: invokestatic  #34
222: return
Exception table:
from    to  target type
100   113   116   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test05
Start line: 124
End line: 209
Method source code: 
    public void test05() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test05");
        org.jsoup.nodes.Document document1 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element3 = document1.toggleClass("");
        int int4 = document1.childNodeSize();
        org.jsoup.nodes.Document.QuirksMode quirksMode5 = org.jsoup.nodes.Document.QuirksMode.quirks;
        org.jsoup.nodes.Document document6 = document1.quirksMode(quirksMode5);
        org.jsoup.nodes.Document.QuirksMode quirksMode7 = org.jsoup.nodes.Document.QuirksMode.quirks;
        org.jsoup.nodes.Document document8 = document6.quirksMode(quirksMode7);
        java.lang.StringBuilder stringBuilder9 = null;
        org.jsoup.nodes.DocumentType documentType15 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder16 = null;
        org.jsoup.nodes.TextNode textNode20 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str21 = textNode20.getWholeText();
        java.lang.String str23 = textNode20.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder24 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType26 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document29 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document31 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element33 = document31.toggleClass("");
        java.lang.String str34 = element33.tagName();
        org.jsoup.nodes.Element element36 = element33.toggleClass("");
        boolean boolean37 = isOnlyOfType26.matches((org.jsoup.nodes.Element) document29, element33);
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements42 = document40.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element44 = document40.text(" ");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements49 = document47.getElementsContainingText("#data");
        boolean boolean50 = isOnlyOfType26.matches((org.jsoup.nodes.Element) document40, (org.jsoup.nodes.Element) document47);
        org.jsoup.nodes.Comment comment53 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean55 = comment53.hasAttr("hi!");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element59 = document57.toggleClass("");
        org.jsoup.nodes.Node node60 = document57.clone();
        org.jsoup.nodes.Node node61 = comment53.doClone(node60);
        java.lang.StringBuilder stringBuilder62 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = null;
        comment53.outerHtmlTail(stringBuilder62, 10, outputSettings64);
        java.lang.String str66 = comment53.getData();
        java.lang.String str67 = comment53.nodeName();
        java.lang.StringBuilder stringBuilder68 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings70 = new org.jsoup.nodes.Document.OutputSettings();
        int int71 = outputSettings70.indentAmount();
        comment53.outerHtmlTail(stringBuilder68, 0, outputSettings70);
        boolean boolean73 = document47.equals((java.lang.Object) outputSettings70);
        textNode20.outerHtmlTail(stringBuilder24, (int) (short) 100, outputSettings70);
        documentType15.outerHtmlTail(stringBuilder16, (int) (short) 1, outputSettings70);
        // The following exception was thrown during execution in test generation
        try {
            document6.indent(stringBuilder9, 10, outputSettings70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document1);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + quirksMode5 + "' != '" + org.jsoup.nodes.Document.QuirksMode.quirks + "'", quirksMode5.equals(org.jsoup.nodes.Document.QuirksMode.quirks));
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertTrue("'" + quirksMode7 + "' != '" + org.jsoup.nodes.Document.QuirksMode.quirks + "'", quirksMode7.equals(org.jsoup.nodes.Document.QuirksMode.quirks));
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#root" + "'", str34, "#root");
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(elements42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(elements49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#comment" + "'", str67, "#comment");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #51
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #52
26: invokestatic  #53
29: astore_1
30: aload_1
31: ldc           #9
33: invokevirtual #54
36: astore_2
37: aload_1
38: invokevirtual #55
41: istore_3
42: getstatic     #56
45: astore        4
47: aload_1
48: aload         4
50: invokevirtual #57
53: astore        5
55: getstatic     #56
58: astore        6
60: aload         5
62: aload         6
64: invokevirtual #57
67: astore        7
69: aconst_null
70: astore        8
72: new           #8
75: dup
76: ldc           #9
78: ldc           #10
80: ldc           #11
82: ldc           #9
84: invokespecial #12
87: astore        9
89: aconst_null
90: astore        10
92: new           #58
95: dup
96: ldc           #9
98: ldc           #59
100: invokespecial #60
103: astore        11
105: aload         11
107: invokevirtual #61
110: astore        12
112: aload         11
114: ldc           #62
116: invokevirtual #63
119: astore        13
121: aconst_null
122: astore        14
124: new           #64
127: dup
128: invokespecial #65
131: astore        15
133: ldc           #9
135: ldc           #9
137: invokestatic  #66
140: astore        16
142: ldc           #52
144: invokestatic  #53
147: astore        17
149: aload         17
151: ldc           #9
153: invokevirtual #54
156: astore        18
158: aload         18
160: invokevirtual #67
163: astore        19
165: aload         18
167: ldc           #9
169: invokevirtual #68
172: astore        20
174: aload         15
176: aload         16
178: aload         18
180: invokevirtual #69
183: istore        21
185: ldc           #59
187: ldc           #52
189: invokestatic  #70
192: astore        22
194: aload         22
196: bipush        100
198: invokevirtual #71
201: astore        23
203: aload         22
205: ldc           #72
207: invokevirtual #73
210: astore        24
212: ldc           #74
214: ldc           #52
216: invokestatic  #70
219: astore        25
221: aload         25
223: ldc           #75
225: invokevirtual #76
228: astore        26
230: aload         15
232: aload         22
234: aload         25
236: invokevirtual #69
239: istore        27
241: new           #77
244: dup
245: ldc           #52
247: ldc           #52
249: invokespecial #78
252: astore        28
254: aload         28
256: ldc           #52
258: invokevirtual #79
261: istore        29
263: ldc           #52
265: invokestatic  #53
268: astore        30
270: aload         30
272: ldc           #9
274: invokevirtual #54
277: astore        31
279: aload         30
281: invokevirtual #80
284: astore        32
286: aload         28
288: aload         32
290: invokevirtual #81
293: astore        33
295: aconst_null
296: astore        34
298: aconst_null
299: astore        35
301: aload         28
303: aload         34
305: bipush        10
307: aload         35
309: invokevirtual #82
312: aload         28
314: invokevirtual #83
317: astore        36
319: aload         28
321: invokevirtual #84
324: astore        37
326: aconst_null
327: astore        38
329: new           #13
332: dup
333: invokespecial #14
336: astore        39
338: aload         39
340: invokevirtual #15
343: istore        40
345: aload         28
347: aload         38
349: iconst_0
350: aload         39
352: invokevirtual #82
355: aload         25
357: aload         39
359: invokevirtual #85
362: istore        41
364: aload         11
366: aload         14
368: bipush        100
370: aload         39
372: invokevirtual #86
375: aload         9
377: aload         10
379: iconst_1
380: aload         39
382: invokevirtual #87
385: aload         5
387: aload         8
389: bipush        10
391: aload         39
393: invokevirtual #88
396: ldc           #24
398: invokestatic  #25
401: goto          406
404: astore        42
406: aload_1
407: invokestatic  #39
410: aload_2
411: invokestatic  #39
414: new           #27
417: dup
418: invokespecial #28
421: ldc           #29
423: invokevirtual #30
426: iload_3
427: invokevirtual #31
430: ldc           #32
432: invokevirtual #30
435: iconst_1
436: invokevirtual #31
439: ldc           #29
441: invokevirtual #30
444: invokevirtual #33
447: iload_3
448: iconst_1
449: if_icmpne     456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #34
460: new           #27
463: dup
464: invokespecial #28
467: ldc           #29
469: invokevirtual #30
472: aload         4
474: invokevirtual #36
477: ldc           #32
479: invokevirtual #30
482: getstatic     #56
485: invokevirtual #36
488: ldc           #29
490: invokevirtual #30
493: invokevirtual #33
496: aload         4
498: getstatic     #56
501: invokevirtual #89
504: invokestatic  #34
507: aload         5
509: invokestatic  #39
512: new           #27
515: dup
516: invokespecial #28
519: ldc           #29
521: invokevirtual #30
524: aload         6
526: invokevirtual #36
529: ldc           #32
531: invokevirtual #30
534: getstatic     #56
537: invokevirtual #36
540: ldc           #29
542: invokevirtual #30
545: invokevirtual #33
548: aload         6
550: getstatic     #56
553: invokevirtual #89
556: invokestatic  #34
559: aload         7
561: invokestatic  #39
564: new           #27
567: dup
568: invokespecial #28
571: ldc           #29
573: invokevirtual #30
576: aload         12
578: invokevirtual #30
581: ldc           #90
583: invokevirtual #30
586: invokevirtual #33
589: aload         12
591: ldc           #9
593: invokestatic  #91
596: new           #27
599: dup
600: invokespecial #28
603: ldc           #29
605: invokevirtual #30
608: aload         13
610: invokevirtual #30
613: ldc           #90
615: invokevirtual #30
618: invokevirtual #33
621: aload         13
623: ldc           #9
625: invokestatic  #91
628: aload         16
630: invokestatic  #39
633: aload         17
635: invokestatic  #39
638: aload         18
640: invokestatic  #39
643: new           #27
646: dup
647: invokespecial #28
650: ldc           #29
652: invokevirtual #30
655: aload         19
657: invokevirtual #30
660: ldc           #92
662: invokevirtual #30
665: invokevirtual #33
668: aload         19
670: ldc           #17
672: invokestatic  #91
675: aload         20
677: invokestatic  #39
680: new           #27
683: dup
684: invokespecial #28
687: ldc           #29
689: invokevirtual #30
692: iload         21
694: invokevirtual #35
697: ldc           #32
699: invokevirtual #30
702: iconst_0
703: invokevirtual #35
706: ldc           #29
708: invokevirtual #30
711: invokevirtual #33
714: iload         21
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #34
727: aload         22
729: invokestatic  #39
732: aload         23
734: invokestatic  #39
737: aload         24
739: invokestatic  #39
742: aload         25
744: invokestatic  #39
747: aload         26
749: invokestatic  #39
752: new           #27
755: dup
756: invokespecial #28
759: ldc           #29
761: invokevirtual #30
764: iload         27
766: invokevirtual #35
769: ldc           #32
771: invokevirtual #30
774: iconst_0
775: invokevirtual #35
778: ldc           #29
780: invokevirtual #30
783: invokevirtual #33
786: iload         27
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #34
799: new           #27
802: dup
803: invokespecial #28
806: ldc           #29
808: invokevirtual #30
811: iload         29
813: invokevirtual #35
816: ldc           #32
818: invokevirtual #30
821: iconst_0
822: invokevirtual #35
825: ldc           #29
827: invokevirtual #30
830: invokevirtual #33
833: iload         29
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #34
846: aload         30
848: invokestatic  #39
851: aload         31
853: invokestatic  #39
856: aload         32
858: invokestatic  #39
861: aload         33
863: invokestatic  #39
866: new           #27
869: dup
870: invokespecial #28
873: ldc           #29
875: invokevirtual #30
878: aload         36
880: invokevirtual #30
883: ldc           #93
885: invokevirtual #30
888: invokevirtual #33
891: aload         36
893: ldc           #52
895: invokestatic  #91
898: new           #27
901: dup
902: invokespecial #28
905: ldc           #29
907: invokevirtual #30
910: aload         37
912: invokevirtual #30
915: ldc           #94
917: invokevirtual #30
920: invokevirtual #33
923: aload         37
925: ldc           #95
927: invokestatic  #91
930: new           #27
933: dup
934: invokespecial #28
937: ldc           #29
939: invokevirtual #30
942: iload         40
944: invokevirtual #31
947: ldc           #32
949: invokevirtual #30
952: iconst_1
953: invokevirtual #31
956: ldc           #29
958: invokevirtual #30
961: invokevirtual #33
964: iload         40
966: iconst_1
967: if_icmpne     974
970: iconst_1
971: goto          975
974: iconst_0
975: invokestatic  #34
978: new           #27
981: dup
982: invokespecial #28
985: ldc           #29
987: invokevirtual #30
990: iload         41
992: invokevirtual #35
995: ldc           #32
997: invokevirtual #30
1000: iconst_0
1001: invokevirtual #35
1004: ldc           #29
1006: invokevirtual #30
1009: invokevirtual #33
1012: iload         41
1014: ifne          1021
1017: iconst_1
1018: goto          1022
1021: iconst_0
1022: invokestatic  #34
1025: return
Exception table:
from    to  target type
385   401   404   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test06
Start line: 212
End line: 298
Method source code: 
    public void test06() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test06");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        java.lang.String str70 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder71 = null;
        org.jsoup.parser.Parser parser75 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean76 = parser75.isTrackErrors();
        org.jsoup.nodes.Document document77 = org.jsoup.Jsoup.parse(" ", "#text", parser75);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = document77.getOutputSettings();
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder71, (int) (short) 100, outputSettings78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#doctype" + "'", str70, "#doctype");
        org.junit.Assert.assertNotNull(parser75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(outputSettings78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #96
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #58
45: dup
46: ldc           #9
48: ldc           #59
50: invokespecial #60
53: astore_3
54: aload_3
55: invokevirtual #61
58: astore        4
60: aload_3
61: ldc           #62
63: invokevirtual #63
66: astore        5
68: aconst_null
69: astore        6
71: new           #64
74: dup
75: invokespecial #65
78: astore        7
80: ldc           #9
82: ldc           #9
84: invokestatic  #66
87: astore        8
89: ldc           #52
91: invokestatic  #53
94: astore        9
96: aload         9
98: ldc           #9
100: invokevirtual #54
103: astore        10
105: aload         10
107: invokevirtual #67
110: astore        11
112: aload         10
114: ldc           #9
116: invokevirtual #68
119: astore        12
121: aload         7
123: aload         8
125: aload         10
127: invokevirtual #69
130: istore        13
132: ldc           #59
134: ldc           #52
136: invokestatic  #70
139: astore        14
141: aload         14
143: bipush        100
145: invokevirtual #71
148: astore        15
150: aload         14
152: ldc           #72
154: invokevirtual #73
157: astore        16
159: ldc           #74
161: ldc           #52
163: invokestatic  #70
166: astore        17
168: aload         17
170: ldc           #75
172: invokevirtual #76
175: astore        18
177: aload         7
179: aload         14
181: aload         17
183: invokevirtual #69
186: istore        19
188: new           #77
191: dup
192: ldc           #52
194: ldc           #52
196: invokespecial #78
199: astore        20
201: aload         20
203: ldc           #52
205: invokevirtual #79
208: istore        21
210: ldc           #52
212: invokestatic  #53
215: astore        22
217: aload         22
219: ldc           #9
221: invokevirtual #54
224: astore        23
226: aload         22
228: invokevirtual #80
231: astore        24
233: aload         20
235: aload         24
237: invokevirtual #81
240: astore        25
242: aconst_null
243: astore        26
245: aconst_null
246: astore        27
248: aload         20
250: aload         26
252: bipush        10
254: aload         27
256: invokevirtual #82
259: aload         20
261: invokevirtual #83
264: astore        28
266: aload         20
268: invokevirtual #84
271: astore        29
273: aconst_null
274: astore        30
276: new           #13
279: dup
280: invokespecial #14
283: astore        31
285: aload         31
287: invokevirtual #15
290: istore        32
292: aload         20
294: aload         30
296: iconst_0
297: aload         31
299: invokevirtual #82
302: aload         17
304: aload         31
306: invokevirtual #85
309: istore        33
311: aload_3
312: aload         6
314: bipush        100
316: aload         31
318: invokevirtual #86
321: aload_1
322: aload_2
323: iconst_1
324: aload         31
326: invokevirtual #87
329: aconst_null
330: astore        34
332: new           #13
335: dup
336: invokespecial #14
339: astore        35
341: aload         35
343: invokevirtual #15
346: istore        36
348: aload_1
349: aload         34
351: iconst_0
352: aload         35
354: invokevirtual #87
357: aload_1
358: invokevirtual #97
361: astore        37
363: aconst_null
364: astore        38
366: invokestatic  #98
369: astore        39
371: aload         39
373: invokevirtual #99
376: istore        40
378: ldc           #72
380: ldc           #74
382: aload         39
384: invokestatic  #100
387: astore        41
389: aload         41
391: invokevirtual #101
394: astore        42
396: aload_1
397: aload         38
399: bipush        100
401: aload         42
403: invokevirtual #23
406: ldc           #24
408: invokestatic  #25
411: goto          416
414: astore        43
416: new           #27
419: dup
420: invokespecial #28
423: ldc           #29
425: invokevirtual #30
428: aload         4
430: invokevirtual #30
433: ldc           #90
435: invokevirtual #30
438: invokevirtual #33
441: aload         4
443: ldc           #9
445: invokestatic  #91
448: new           #27
451: dup
452: invokespecial #28
455: ldc           #29
457: invokevirtual #30
460: aload         5
462: invokevirtual #30
465: ldc           #90
467: invokevirtual #30
470: invokevirtual #33
473: aload         5
475: ldc           #9
477: invokestatic  #91
480: aload         8
482: invokestatic  #39
485: aload         9
487: invokestatic  #39
490: aload         10
492: invokestatic  #39
495: new           #27
498: dup
499: invokespecial #28
502: ldc           #29
504: invokevirtual #30
507: aload         11
509: invokevirtual #30
512: ldc           #92
514: invokevirtual #30
517: invokevirtual #33
520: aload         11
522: ldc           #17
524: invokestatic  #91
527: aload         12
529: invokestatic  #39
532: new           #27
535: dup
536: invokespecial #28
539: ldc           #29
541: invokevirtual #30
544: iload         13
546: invokevirtual #35
549: ldc           #32
551: invokevirtual #30
554: iconst_0
555: invokevirtual #35
558: ldc           #29
560: invokevirtual #30
563: invokevirtual #33
566: iload         13
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #34
579: aload         14
581: invokestatic  #39
584: aload         15
586: invokestatic  #39
589: aload         16
591: invokestatic  #39
594: aload         17
596: invokestatic  #39
599: aload         18
601: invokestatic  #39
604: new           #27
607: dup
608: invokespecial #28
611: ldc           #29
613: invokevirtual #30
616: iload         19
618: invokevirtual #35
621: ldc           #32
623: invokevirtual #30
626: iconst_0
627: invokevirtual #35
630: ldc           #29
632: invokevirtual #30
635: invokevirtual #33
638: iload         19
640: ifne          647
643: iconst_1
644: goto          648
647: iconst_0
648: invokestatic  #34
651: new           #27
654: dup
655: invokespecial #28
658: ldc           #29
660: invokevirtual #30
663: iload         21
665: invokevirtual #35
668: ldc           #32
670: invokevirtual #30
673: iconst_0
674: invokevirtual #35
677: ldc           #29
679: invokevirtual #30
682: invokevirtual #33
685: iload         21
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #34
698: aload         22
700: invokestatic  #39
703: aload         23
705: invokestatic  #39
708: aload         24
710: invokestatic  #39
713: aload         25
715: invokestatic  #39
718: new           #27
721: dup
722: invokespecial #28
725: ldc           #29
727: invokevirtual #30
730: aload         28
732: invokevirtual #30
735: ldc           #93
737: invokevirtual #30
740: invokevirtual #33
743: aload         28
745: ldc           #52
747: invokestatic  #91
750: new           #27
753: dup
754: invokespecial #28
757: ldc           #29
759: invokevirtual #30
762: aload         29
764: invokevirtual #30
767: ldc           #94
769: invokevirtual #30
772: invokevirtual #33
775: aload         29
777: ldc           #95
779: invokestatic  #91
782: new           #27
785: dup
786: invokespecial #28
789: ldc           #29
791: invokevirtual #30
794: iload         32
796: invokevirtual #31
799: ldc           #32
801: invokevirtual #30
804: iconst_1
805: invokevirtual #31
808: ldc           #29
810: invokevirtual #30
813: invokevirtual #33
816: iload         32
818: iconst_1
819: if_icmpne     826
822: iconst_1
823: goto          827
826: iconst_0
827: invokestatic  #34
830: new           #27
833: dup
834: invokespecial #28
837: ldc           #29
839: invokevirtual #30
842: iload         33
844: invokevirtual #35
847: ldc           #32
849: invokevirtual #30
852: iconst_0
853: invokevirtual #35
856: ldc           #29
858: invokevirtual #30
861: invokevirtual #33
864: iload         33
866: ifne          873
869: iconst_1
870: goto          874
873: iconst_0
874: invokestatic  #34
877: new           #27
880: dup
881: invokespecial #28
884: ldc           #29
886: invokevirtual #30
889: iload         36
891: invokevirtual #31
894: ldc           #32
896: invokevirtual #30
899: iconst_1
900: invokevirtual #31
903: ldc           #29
905: invokevirtual #30
908: invokevirtual #33
911: iload         36
913: iconst_1
914: if_icmpne     921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #34
925: new           #27
928: dup
929: invokespecial #28
932: ldc           #29
934: invokevirtual #30
937: aload         37
939: invokevirtual #30
942: ldc           #102
944: invokevirtual #30
947: invokevirtual #33
950: aload         37
952: ldc           #103
954: invokestatic  #91
957: aload         39
959: invokestatic  #39
962: new           #27
965: dup
966: invokespecial #28
969: ldc           #29
971: invokevirtual #30
974: iload         40
976: invokevirtual #35
979: ldc           #32
981: invokevirtual #30
984: iconst_0
985: invokevirtual #35
988: ldc           #29
990: invokevirtual #30
993: invokevirtual #33
996: iload         40
998: ifne          1005
1001: iconst_1
1002: goto          1006
1005: iconst_0
1006: invokestatic  #34
1009: aload         41
1011: invokestatic  #39
1014: aload         42
1016: invokestatic  #39
1019: return
Exception table:
from    to  target type
396   411   414   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test07
Start line: 301
End line: 314
Method source code: 
    public void test07() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test07");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings7 = null;
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) (short) 10, outputSettings7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #104
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: aconst_null
43: astore_3
44: aload_1
45: aload_2
46: bipush        10
48: aload_3
49: invokevirtual #23
52: ldc           #24
54: invokestatic  #25
57: goto          62
60: astore        4
62: return
Exception table:
from    to  target type
44    57    60   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test08
Start line: 317
End line: 394
Method source code: 
    public void test08() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test08");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[:eq(10)]", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", ":matchesOwn(null", " #comment=\"#root\"");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.DocumentType documentType11 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder12 = null;
        org.jsoup.nodes.TextNode textNode16 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str17 = textNode16.getWholeText();
        java.lang.String str19 = textNode16.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder20 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType22 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document25 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document27 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element29 = document27.toggleClass("");
        java.lang.String str30 = element29.tagName();
        org.jsoup.nodes.Element element32 = element29.toggleClass("");
        boolean boolean33 = isOnlyOfType22.matches((org.jsoup.nodes.Element) document25, element29);
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element40 = document36.text(" ");
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements45 = document43.getElementsContainingText("#data");
        boolean boolean46 = isOnlyOfType22.matches((org.jsoup.nodes.Element) document36, (org.jsoup.nodes.Element) document43);
        org.jsoup.nodes.Comment comment49 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean51 = comment49.hasAttr("hi!");
        org.jsoup.nodes.Document document53 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element55 = document53.toggleClass("");
        org.jsoup.nodes.Node node56 = document53.clone();
        org.jsoup.nodes.Node node57 = comment49.doClone(node56);
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = null;
        comment49.outerHtmlTail(stringBuilder58, 10, outputSettings60);
        java.lang.String str62 = comment49.getData();
        java.lang.String str63 = comment49.nodeName();
        java.lang.StringBuilder stringBuilder64 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings66 = new org.jsoup.nodes.Document.OutputSettings();
        int int67 = outputSettings66.indentAmount();
        comment49.outerHtmlTail(stringBuilder64, 0, outputSettings66);
        boolean boolean69 = document43.equals((java.lang.Object) outputSettings66);
        textNode16.outerHtmlTail(stringBuilder20, (int) (short) 100, outputSettings66);
        documentType11.outerHtmlTail(stringBuilder12, (int) (short) 1, outputSettings66);
        java.lang.StringBuilder stringBuilder72 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings74 = new org.jsoup.nodes.Document.OutputSettings();
        int int75 = outputSettings74.indentAmount();
        documentType11.outerHtmlTail(stringBuilder72, 0, outputSettings74);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) ' ', outputSettings74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#root" + "'", str30, "#root");
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(elements45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#comment" + "'", str63, "#comment");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #105
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #106
30: ldc           #10
32: ldc           #107
34: ldc           #108
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #8
45: dup
46: ldc           #9
48: ldc           #10
50: ldc           #11
52: ldc           #9
54: invokespecial #12
57: astore_3
58: aconst_null
59: astore        4
61: new           #58
64: dup
65: ldc           #9
67: ldc           #59
69: invokespecial #60
72: astore        5
74: aload         5
76: invokevirtual #61
79: astore        6
81: aload         5
83: ldc           #62
85: invokevirtual #63
88: astore        7
90: aconst_null
91: astore        8
93: new           #64
96: dup
97: invokespecial #65
100: astore        9
102: ldc           #9
104: ldc           #9
106: invokestatic  #66
109: astore        10
111: ldc           #52
113: invokestatic  #53
116: astore        11
118: aload         11
120: ldc           #9
122: invokevirtual #54
125: astore        12
127: aload         12
129: invokevirtual #67
132: astore        13
134: aload         12
136: ldc           #9
138: invokevirtual #68
141: astore        14
143: aload         9
145: aload         10
147: aload         12
149: invokevirtual #69
152: istore        15
154: ldc           #59
156: ldc           #52
158: invokestatic  #70
161: astore        16
163: aload         16
165: bipush        100
167: invokevirtual #71
170: astore        17
172: aload         16
174: ldc           #72
176: invokevirtual #73
179: astore        18
181: ldc           #74
183: ldc           #52
185: invokestatic  #70
188: astore        19
190: aload         19
192: ldc           #75
194: invokevirtual #76
197: astore        20
199: aload         9
201: aload         16
203: aload         19
205: invokevirtual #69
208: istore        21
210: new           #77
213: dup
214: ldc           #52
216: ldc           #52
218: invokespecial #78
221: astore        22
223: aload         22
225: ldc           #52
227: invokevirtual #79
230: istore        23
232: ldc           #52
234: invokestatic  #53
237: astore        24
239: aload         24
241: ldc           #9
243: invokevirtual #54
246: astore        25
248: aload         24
250: invokevirtual #80
253: astore        26
255: aload         22
257: aload         26
259: invokevirtual #81
262: astore        27
264: aconst_null
265: astore        28
267: aconst_null
268: astore        29
270: aload         22
272: aload         28
274: bipush        10
276: aload         29
278: invokevirtual #82
281: aload         22
283: invokevirtual #83
286: astore        30
288: aload         22
290: invokevirtual #84
293: astore        31
295: aconst_null
296: astore        32
298: new           #13
301: dup
302: invokespecial #14
305: astore        33
307: aload         33
309: invokevirtual #15
312: istore        34
314: aload         22
316: aload         32
318: iconst_0
319: aload         33
321: invokevirtual #82
324: aload         19
326: aload         33
328: invokevirtual #85
331: istore        35
333: aload         5
335: aload         8
337: bipush        100
339: aload         33
341: invokevirtual #86
344: aload_3
345: aload         4
347: iconst_1
348: aload         33
350: invokevirtual #87
353: aconst_null
354: astore        36
356: new           #13
359: dup
360: invokespecial #14
363: astore        37
365: aload         37
367: invokevirtual #15
370: istore        38
372: aload_3
373: aload         36
375: iconst_0
376: aload         37
378: invokevirtual #87
381: aload_1
382: aload_2
383: bipush        32
385: aload         37
387: invokevirtual #23
390: ldc           #24
392: invokestatic  #25
395: goto          400
398: astore        39
400: new           #27
403: dup
404: invokespecial #28
407: ldc           #29
409: invokevirtual #30
412: aload         6
414: invokevirtual #30
417: ldc           #90
419: invokevirtual #30
422: invokevirtual #33
425: aload         6
427: ldc           #9
429: invokestatic  #91
432: new           #27
435: dup
436: invokespecial #28
439: ldc           #29
441: invokevirtual #30
444: aload         7
446: invokevirtual #30
449: ldc           #90
451: invokevirtual #30
454: invokevirtual #33
457: aload         7
459: ldc           #9
461: invokestatic  #91
464: aload         10
466: invokestatic  #39
469: aload         11
471: invokestatic  #39
474: aload         12
476: invokestatic  #39
479: new           #27
482: dup
483: invokespecial #28
486: ldc           #29
488: invokevirtual #30
491: aload         13
493: invokevirtual #30
496: ldc           #92
498: invokevirtual #30
501: invokevirtual #33
504: aload         13
506: ldc           #17
508: invokestatic  #91
511: aload         14
513: invokestatic  #39
516: new           #27
519: dup
520: invokespecial #28
523: ldc           #29
525: invokevirtual #30
528: iload         15
530: invokevirtual #35
533: ldc           #32
535: invokevirtual #30
538: iconst_0
539: invokevirtual #35
542: ldc           #29
544: invokevirtual #30
547: invokevirtual #33
550: iload         15
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #34
563: aload         16
565: invokestatic  #39
568: aload         17
570: invokestatic  #39
573: aload         18
575: invokestatic  #39
578: aload         19
580: invokestatic  #39
583: aload         20
585: invokestatic  #39
588: new           #27
591: dup
592: invokespecial #28
595: ldc           #29
597: invokevirtual #30
600: iload         21
602: invokevirtual #35
605: ldc           #32
607: invokevirtual #30
610: iconst_0
611: invokevirtual #35
614: ldc           #29
616: invokevirtual #30
619: invokevirtual #33
622: iload         21
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #34
635: new           #27
638: dup
639: invokespecial #28
642: ldc           #29
644: invokevirtual #30
647: iload         23
649: invokevirtual #35
652: ldc           #32
654: invokevirtual #30
657: iconst_0
658: invokevirtual #35
661: ldc           #29
663: invokevirtual #30
666: invokevirtual #33
669: iload         23
671: ifne          678
674: iconst_1
675: goto          679
678: iconst_0
679: invokestatic  #34
682: aload         24
684: invokestatic  #39
687: aload         25
689: invokestatic  #39
692: aload         26
694: invokestatic  #39
697: aload         27
699: invokestatic  #39
702: new           #27
705: dup
706: invokespecial #28
709: ldc           #29
711: invokevirtual #30
714: aload         30
716: invokevirtual #30
719: ldc           #93
721: invokevirtual #30
724: invokevirtual #33
727: aload         30
729: ldc           #52
731: invokestatic  #91
734: new           #27
737: dup
738: invokespecial #28
741: ldc           #29
743: invokevirtual #30
746: aload         31
748: invokevirtual #30
751: ldc           #94
753: invokevirtual #30
756: invokevirtual #33
759: aload         31
761: ldc           #95
763: invokestatic  #91
766: new           #27
769: dup
770: invokespecial #28
773: ldc           #29
775: invokevirtual #30
778: iload         34
780: invokevirtual #31
783: ldc           #32
785: invokevirtual #30
788: iconst_1
789: invokevirtual #31
792: ldc           #29
794: invokevirtual #30
797: invokevirtual #33
800: iload         34
802: iconst_1
803: if_icmpne     810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #34
814: new           #27
817: dup
818: invokespecial #28
821: ldc           #29
823: invokevirtual #30
826: iload         35
828: invokevirtual #35
831: ldc           #32
833: invokevirtual #30
836: iconst_0
837: invokevirtual #35
840: ldc           #29
842: invokevirtual #30
845: invokevirtual #33
848: iload         35
850: ifne          857
853: iconst_1
854: goto          858
857: iconst_0
858: invokestatic  #34
861: new           #27
864: dup
865: invokespecial #28
868: ldc           #29
870: invokevirtual #30
873: iload         38
875: invokevirtual #31
878: ldc           #32
880: invokevirtual #30
883: iconst_1
884: invokevirtual #31
887: ldc           #29
889: invokevirtual #30
892: invokevirtual #33
895: iload         38
897: iconst_1
898: if_icmpne     905
901: iconst_1
902: goto          906
905: iconst_0
906: invokestatic  #34
909: return
Exception table:
from    to  target type
381   395   398   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test09
Start line: 397
End line: 472
Method source code: 
    public void test09() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test09");
        org.jsoup.nodes.DocumentType documentType5 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str6 = documentType5.outerHtml();
        java.lang.StringBuilder stringBuilder7 = null;
        org.jsoup.nodes.TextNode textNode11 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str12 = textNode11.getWholeText();
        java.lang.String str14 = textNode11.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder15 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType17 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document20 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element24 = document22.toggleClass("");
        java.lang.String str25 = element24.tagName();
        org.jsoup.nodes.Element element27 = element24.toggleClass("");
        boolean boolean28 = isOnlyOfType17.matches((org.jsoup.nodes.Element) document20, element24);
        org.jsoup.nodes.Document document31 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements33 = document31.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element35 = document31.text(" ");
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements40 = document38.getElementsContainingText("#data");
        boolean boolean41 = isOnlyOfType17.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document38);
        org.jsoup.nodes.Comment comment44 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean46 = comment44.hasAttr("hi!");
        org.jsoup.nodes.Document document48 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element50 = document48.toggleClass("");
        org.jsoup.nodes.Node node51 = document48.clone();
        org.jsoup.nodes.Node node52 = comment44.doClone(node51);
        java.lang.StringBuilder stringBuilder53 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = null;
        comment44.outerHtmlTail(stringBuilder53, 10, outputSettings55);
        java.lang.String str57 = comment44.getData();
        java.lang.String str58 = comment44.nodeName();
        java.lang.StringBuilder stringBuilder59 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings61 = new org.jsoup.nodes.Document.OutputSettings();
        int int62 = outputSettings61.indentAmount();
        comment44.outerHtmlTail(stringBuilder59, 0, outputSettings61);
        boolean boolean64 = document38.equals((java.lang.Object) outputSettings61);
        textNode11.outerHtmlTail(stringBuilder15, (int) (short) 100, outputSettings61);
        documentType5.outerHtmlTail(stringBuilder7, 0, outputSettings61);
        java.lang.String str67 = org.jsoup.nodes.Entities.escape("<html>\n <head></head>\n <body>\n  #comment\n </body>\n</html>", outputSettings61);
        java.nio.charset.Charset charset68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document.OutputSettings outputSettings69 = outputSettings61.charset(charset68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str6, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#root" + "'", str25, "#root");
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(elements33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(elements40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "#comment" + "'", str58, "#comment");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  #comment\n &lt;/body&gt;\n&lt;/html&gt;" + "'", str67, "&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  #comment\n &lt;/body&gt;\n&lt;/html&gt;");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #109
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #110
44: astore_2
45: aconst_null
46: astore_3
47: new           #58
50: dup
51: ldc           #9
53: ldc           #59
55: invokespecial #60
58: astore        4
60: aload         4
62: invokevirtual #61
65: astore        5
67: aload         4
69: ldc           #62
71: invokevirtual #63
74: astore        6
76: aconst_null
77: astore        7
79: new           #64
82: dup
83: invokespecial #65
86: astore        8
88: ldc           #9
90: ldc           #9
92: invokestatic  #66
95: astore        9
97: ldc           #52
99: invokestatic  #53
102: astore        10
104: aload         10
106: ldc           #9
108: invokevirtual #54
111: astore        11
113: aload         11
115: invokevirtual #67
118: astore        12
120: aload         11
122: ldc           #9
124: invokevirtual #68
127: astore        13
129: aload         8
131: aload         9
133: aload         11
135: invokevirtual #69
138: istore        14
140: ldc           #59
142: ldc           #52
144: invokestatic  #70
147: astore        15
149: aload         15
151: bipush        100
153: invokevirtual #71
156: astore        16
158: aload         15
160: ldc           #72
162: invokevirtual #73
165: astore        17
167: ldc           #74
169: ldc           #52
171: invokestatic  #70
174: astore        18
176: aload         18
178: ldc           #75
180: invokevirtual #76
183: astore        19
185: aload         8
187: aload         15
189: aload         18
191: invokevirtual #69
194: istore        20
196: new           #77
199: dup
200: ldc           #52
202: ldc           #52
204: invokespecial #78
207: astore        21
209: aload         21
211: ldc           #52
213: invokevirtual #79
216: istore        22
218: ldc           #52
220: invokestatic  #53
223: astore        23
225: aload         23
227: ldc           #9
229: invokevirtual #54
232: astore        24
234: aload         23
236: invokevirtual #80
239: astore        25
241: aload         21
243: aload         25
245: invokevirtual #81
248: astore        26
250: aconst_null
251: astore        27
253: aconst_null
254: astore        28
256: aload         21
258: aload         27
260: bipush        10
262: aload         28
264: invokevirtual #82
267: aload         21
269: invokevirtual #83
272: astore        29
274: aload         21
276: invokevirtual #84
279: astore        30
281: aconst_null
282: astore        31
284: new           #13
287: dup
288: invokespecial #14
291: astore        32
293: aload         32
295: invokevirtual #15
298: istore        33
300: aload         21
302: aload         31
304: iconst_0
305: aload         32
307: invokevirtual #82
310: aload         18
312: aload         32
314: invokevirtual #85
317: istore        34
319: aload         4
321: aload         7
323: bipush        100
325: aload         32
327: invokevirtual #86
330: aload_1
331: aload_3
332: iconst_0
333: aload         32
335: invokevirtual #87
338: ldc           #111
340: aload         32
342: invokestatic  #112
345: astore        35
347: aconst_null
348: astore        36
350: aload         32
352: aload         36
354: invokevirtual #113
357: astore        37
359: ldc           #24
361: invokestatic  #25
364: goto          369
367: astore        37
369: new           #27
372: dup
373: invokespecial #28
376: ldc           #29
378: invokevirtual #30
381: aload_2
382: invokevirtual #30
385: ldc           #114
387: invokevirtual #30
390: invokevirtual #33
393: aload_2
394: ldc           #115
396: invokestatic  #91
399: new           #27
402: dup
403: invokespecial #28
406: ldc           #29
408: invokevirtual #30
411: aload         5
413: invokevirtual #30
416: ldc           #90
418: invokevirtual #30
421: invokevirtual #33
424: aload         5
426: ldc           #9
428: invokestatic  #91
431: new           #27
434: dup
435: invokespecial #28
438: ldc           #29
440: invokevirtual #30
443: aload         6
445: invokevirtual #30
448: ldc           #90
450: invokevirtual #30
453: invokevirtual #33
456: aload         6
458: ldc           #9
460: invokestatic  #91
463: aload         9
465: invokestatic  #39
468: aload         10
470: invokestatic  #39
473: aload         11
475: invokestatic  #39
478: new           #27
481: dup
482: invokespecial #28
485: ldc           #29
487: invokevirtual #30
490: aload         12
492: invokevirtual #30
495: ldc           #92
497: invokevirtual #30
500: invokevirtual #33
503: aload         12
505: ldc           #17
507: invokestatic  #91
510: aload         13
512: invokestatic  #39
515: new           #27
518: dup
519: invokespecial #28
522: ldc           #29
524: invokevirtual #30
527: iload         14
529: invokevirtual #35
532: ldc           #32
534: invokevirtual #30
537: iconst_0
538: invokevirtual #35
541: ldc           #29
543: invokevirtual #30
546: invokevirtual #33
549: iload         14
551: ifne          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #34
562: aload         15
564: invokestatic  #39
567: aload         16
569: invokestatic  #39
572: aload         17
574: invokestatic  #39
577: aload         18
579: invokestatic  #39
582: aload         19
584: invokestatic  #39
587: new           #27
590: dup
591: invokespecial #28
594: ldc           #29
596: invokevirtual #30
599: iload         20
601: invokevirtual #35
604: ldc           #32
606: invokevirtual #30
609: iconst_0
610: invokevirtual #35
613: ldc           #29
615: invokevirtual #30
618: invokevirtual #33
621: iload         20
623: ifne          630
626: iconst_1
627: goto          631
630: iconst_0
631: invokestatic  #34
634: new           #27
637: dup
638: invokespecial #28
641: ldc           #29
643: invokevirtual #30
646: iload         22
648: invokevirtual #35
651: ldc           #32
653: invokevirtual #30
656: iconst_0
657: invokevirtual #35
660: ldc           #29
662: invokevirtual #30
665: invokevirtual #33
668: iload         22
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #34
681: aload         23
683: invokestatic  #39
686: aload         24
688: invokestatic  #39
691: aload         25
693: invokestatic  #39
696: aload         26
698: invokestatic  #39
701: new           #27
704: dup
705: invokespecial #28
708: ldc           #29
710: invokevirtual #30
713: aload         29
715: invokevirtual #30
718: ldc           #93
720: invokevirtual #30
723: invokevirtual #33
726: aload         29
728: ldc           #52
730: invokestatic  #91
733: new           #27
736: dup
737: invokespecial #28
740: ldc           #29
742: invokevirtual #30
745: aload         30
747: invokevirtual #30
750: ldc           #94
752: invokevirtual #30
755: invokevirtual #33
758: aload         30
760: ldc           #95
762: invokestatic  #91
765: new           #27
768: dup
769: invokespecial #28
772: ldc           #29
774: invokevirtual #30
777: iload         33
779: invokevirtual #31
782: ldc           #32
784: invokevirtual #30
787: iconst_1
788: invokevirtual #31
791: ldc           #29
793: invokevirtual #30
796: invokevirtual #33
799: iload         33
801: iconst_1
802: if_icmpne     809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #34
813: new           #27
816: dup
817: invokespecial #28
820: ldc           #29
822: invokevirtual #30
825: iload         34
827: invokevirtual #35
830: ldc           #32
832: invokevirtual #30
835: iconst_0
836: invokevirtual #35
839: ldc           #29
841: invokevirtual #30
844: invokevirtual #33
847: iload         34
849: ifne          856
852: iconst_1
853: goto          857
856: iconst_0
857: invokestatic  #34
860: new           #27
863: dup
864: invokespecial #28
867: ldc           #29
869: invokevirtual #30
872: aload         35
874: invokevirtual #30
877: ldc           #116
879: invokevirtual #30
882: invokevirtual #33
885: aload         35
887: ldc           #117
889: invokestatic  #91
892: return
Exception table:
from    to  target type
350   364   367   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test10
Start line: 475
End line: 496
Method source code: 
    public void test10() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test10");
        org.jsoup.nodes.DataNode dataNode2 = org.jsoup.nodes.DataNode.createFromEncoded("", "");
        java.lang.String str3 = dataNode2.nodeName();
        java.lang.String str4 = dataNode2.toString();
        org.jsoup.nodes.DocumentType documentType9 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str10 = documentType9.nodeName();
        java.lang.String str11 = documentType9.nodeName();
        // The following exception was thrown during execution in test generation
        try {
            dataNode2.removeChild((org.jsoup.nodes.Node) documentType9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must be true");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(dataNode2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "#data" + "'", str3, "#data");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#doctype" + "'", str10, "#doctype");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#doctype" + "'", str11, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #118
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #9
26: ldc           #9
28: invokestatic  #119
31: astore_1
32: aload_1
33: invokevirtual #120
36: astore_2
37: aload_1
38: invokevirtual #121
41: astore_3
42: new           #8
45: dup
46: ldc           #9
48: ldc           #10
50: ldc           #11
52: ldc           #9
54: invokespecial #12
57: astore        4
59: aload         4
61: invokevirtual #97
64: astore        5
66: aload         4
68: invokevirtual #97
71: astore        6
73: aload_1
74: aload         4
76: invokevirtual #122
79: ldc           #123
81: invokestatic  #25
84: goto          89
87: astore        7
89: aload_1
90: invokestatic  #39
93: new           #27
96: dup
97: invokespecial #28
100: ldc           #29
102: invokevirtual #30
105: aload_2
106: invokevirtual #30
109: ldc           #125
111: invokevirtual #30
114: invokevirtual #33
117: aload_2
118: ldc           #75
120: invokestatic  #91
123: new           #27
126: dup
127: invokespecial #28
130: ldc           #29
132: invokevirtual #30
135: aload_3
136: invokevirtual #30
139: ldc           #90
141: invokevirtual #30
144: invokevirtual #33
147: aload_3
148: ldc           #9
150: invokestatic  #91
153: new           #27
156: dup
157: invokespecial #28
160: ldc           #29
162: invokevirtual #30
165: aload         5
167: invokevirtual #30
170: ldc           #102
172: invokevirtual #30
175: invokevirtual #33
178: aload         5
180: ldc           #103
182: invokestatic  #91
185: new           #27
188: dup
189: invokespecial #28
192: ldc           #29
194: invokevirtual #30
197: aload         6
199: invokevirtual #30
202: ldc           #102
204: invokevirtual #30
207: invokevirtual #33
210: aload         6
212: ldc           #103
214: invokestatic  #91
217: return
Exception table:
from    to  target type
73    84    87   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test11
Start line: 499
End line: 577
Method source code: 
    public void test11() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test11");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings67.escapeMode(escapeMode70);
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = outputSettings71.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings75 = outputSettings73.prettyPrint(true);
        java.nio.charset.Charset charset76 = outputSettings73.charset();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertNotNull(outputSettings73);
        org.junit.Assert.assertNotNull(outputSettings75);
        org.junit.Assert.assertNotNull(charset76);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #126
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #58
45: dup
46: ldc           #9
48: ldc           #59
50: invokespecial #60
53: astore_3
54: aload_3
55: invokevirtual #61
58: astore        4
60: aload_3
61: ldc           #62
63: invokevirtual #63
66: astore        5
68: aconst_null
69: astore        6
71: new           #64
74: dup
75: invokespecial #65
78: astore        7
80: ldc           #9
82: ldc           #9
84: invokestatic  #66
87: astore        8
89: ldc           #52
91: invokestatic  #53
94: astore        9
96: aload         9
98: ldc           #9
100: invokevirtual #54
103: astore        10
105: aload         10
107: invokevirtual #67
110: astore        11
112: aload         10
114: ldc           #9
116: invokevirtual #68
119: astore        12
121: aload         7
123: aload         8
125: aload         10
127: invokevirtual #69
130: istore        13
132: ldc           #59
134: ldc           #52
136: invokestatic  #70
139: astore        14
141: aload         14
143: bipush        100
145: invokevirtual #71
148: astore        15
150: aload         14
152: ldc           #72
154: invokevirtual #73
157: astore        16
159: ldc           #74
161: ldc           #52
163: invokestatic  #70
166: astore        17
168: aload         17
170: ldc           #75
172: invokevirtual #76
175: astore        18
177: aload         7
179: aload         14
181: aload         17
183: invokevirtual #69
186: istore        19
188: new           #77
191: dup
192: ldc           #52
194: ldc           #52
196: invokespecial #78
199: astore        20
201: aload         20
203: ldc           #52
205: invokevirtual #79
208: istore        21
210: ldc           #52
212: invokestatic  #53
215: astore        22
217: aload         22
219: ldc           #9
221: invokevirtual #54
224: astore        23
226: aload         22
228: invokevirtual #80
231: astore        24
233: aload         20
235: aload         24
237: invokevirtual #81
240: astore        25
242: aconst_null
243: astore        26
245: aconst_null
246: astore        27
248: aload         20
250: aload         26
252: bipush        10
254: aload         27
256: invokevirtual #82
259: aload         20
261: invokevirtual #83
264: astore        28
266: aload         20
268: invokevirtual #84
271: astore        29
273: aconst_null
274: astore        30
276: new           #13
279: dup
280: invokespecial #14
283: astore        31
285: aload         31
287: invokevirtual #15
290: istore        32
292: aload         20
294: aload         30
296: iconst_0
297: aload         31
299: invokevirtual #82
302: aload         17
304: aload         31
306: invokevirtual #85
309: istore        33
311: aload_3
312: aload         6
314: bipush        100
316: aload         31
318: invokevirtual #86
321: aload_1
322: aload_2
323: iconst_1
324: aload         31
326: invokevirtual #87
329: aconst_null
330: astore        34
332: new           #13
335: dup
336: invokespecial #14
339: astore        35
341: aload         35
343: invokevirtual #15
346: istore        36
348: aload_1
349: aload         34
351: iconst_0
352: aload         35
354: invokevirtual #87
357: getstatic     #127
360: astore        37
362: aload         35
364: aload         37
366: invokevirtual #22
369: astore        38
371: aload         38
373: iconst_0
374: invokevirtual #128
377: astore        39
379: aload         39
381: iconst_1
382: invokevirtual #128
385: astore        40
387: aload         39
389: invokevirtual #129
392: astore        41
394: new           #27
397: dup
398: invokespecial #28
401: ldc           #29
403: invokevirtual #30
406: aload         4
408: invokevirtual #30
411: ldc           #90
413: invokevirtual #30
416: invokevirtual #33
419: aload         4
421: ldc           #9
423: invokestatic  #91
426: new           #27
429: dup
430: invokespecial #28
433: ldc           #29
435: invokevirtual #30
438: aload         5
440: invokevirtual #30
443: ldc           #90
445: invokevirtual #30
448: invokevirtual #33
451: aload         5
453: ldc           #9
455: invokestatic  #91
458: aload         8
460: invokestatic  #39
463: aload         9
465: invokestatic  #39
468: aload         10
470: invokestatic  #39
473: new           #27
476: dup
477: invokespecial #28
480: ldc           #29
482: invokevirtual #30
485: aload         11
487: invokevirtual #30
490: ldc           #92
492: invokevirtual #30
495: invokevirtual #33
498: aload         11
500: ldc           #17
502: invokestatic  #91
505: aload         12
507: invokestatic  #39
510: new           #27
513: dup
514: invokespecial #28
517: ldc           #29
519: invokevirtual #30
522: iload         13
524: invokevirtual #35
527: ldc           #32
529: invokevirtual #30
532: iconst_0
533: invokevirtual #35
536: ldc           #29
538: invokevirtual #30
541: invokevirtual #33
544: iload         13
546: ifne          553
549: iconst_1
550: goto          554
553: iconst_0
554: invokestatic  #34
557: aload         14
559: invokestatic  #39
562: aload         15
564: invokestatic  #39
567: aload         16
569: invokestatic  #39
572: aload         17
574: invokestatic  #39
577: aload         18
579: invokestatic  #39
582: new           #27
585: dup
586: invokespecial #28
589: ldc           #29
591: invokevirtual #30
594: iload         19
596: invokevirtual #35
599: ldc           #32
601: invokevirtual #30
604: iconst_0
605: invokevirtual #35
608: ldc           #29
610: invokevirtual #30
613: invokevirtual #33
616: iload         19
618: ifne          625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #34
629: new           #27
632: dup
633: invokespecial #28
636: ldc           #29
638: invokevirtual #30
641: iload         21
643: invokevirtual #35
646: ldc           #32
648: invokevirtual #30
651: iconst_0
652: invokevirtual #35
655: ldc           #29
657: invokevirtual #30
660: invokevirtual #33
663: iload         21
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #34
676: aload         22
678: invokestatic  #39
681: aload         23
683: invokestatic  #39
686: aload         24
688: invokestatic  #39
691: aload         25
693: invokestatic  #39
696: new           #27
699: dup
700: invokespecial #28
703: ldc           #29
705: invokevirtual #30
708: aload         28
710: invokevirtual #30
713: ldc           #93
715: invokevirtual #30
718: invokevirtual #33
721: aload         28
723: ldc           #52
725: invokestatic  #91
728: new           #27
731: dup
732: invokespecial #28
735: ldc           #29
737: invokevirtual #30
740: aload         29
742: invokevirtual #30
745: ldc           #94
747: invokevirtual #30
750: invokevirtual #33
753: aload         29
755: ldc           #95
757: invokestatic  #91
760: new           #27
763: dup
764: invokespecial #28
767: ldc           #29
769: invokevirtual #30
772: iload         32
774: invokevirtual #31
777: ldc           #32
779: invokevirtual #30
782: iconst_1
783: invokevirtual #31
786: ldc           #29
788: invokevirtual #30
791: invokevirtual #33
794: iload         32
796: iconst_1
797: if_icmpne     804
800: iconst_1
801: goto          805
804: iconst_0
805: invokestatic  #34
808: new           #27
811: dup
812: invokespecial #28
815: ldc           #29
817: invokevirtual #30
820: iload         33
822: invokevirtual #35
825: ldc           #32
827: invokevirtual #30
830: iconst_0
831: invokevirtual #35
834: ldc           #29
836: invokevirtual #30
839: invokevirtual #33
842: iload         33
844: ifne          851
847: iconst_1
848: goto          852
851: iconst_0
852: invokestatic  #34
855: new           #27
858: dup
859: invokespecial #28
862: ldc           #29
864: invokevirtual #30
867: iload         36
869: invokevirtual #31
872: ldc           #32
874: invokevirtual #30
877: iconst_1
878: invokevirtual #31
881: ldc           #29
883: invokevirtual #30
886: invokevirtual #33
889: iload         36
891: iconst_1
892: if_icmpne     899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #34
903: new           #27
906: dup
907: invokespecial #28
910: ldc           #29
912: invokevirtual #30
915: aload         37
917: invokevirtual #36
920: ldc           #32
922: invokevirtual #30
925: getstatic     #127
928: invokevirtual #36
931: ldc           #29
933: invokevirtual #30
936: invokevirtual #33
939: aload         37
941: getstatic     #127
944: invokevirtual #38
947: invokestatic  #34
950: aload         38
952: invokestatic  #39
955: aload         39
957: invokestatic  #39
960: aload         40
962: invokestatic  #39
965: aload         41
967: invokestatic  #39
970: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test12
Start line: 580
End line: 630
Method source code: 
    public void test12() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test12");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", " #comment=\"#root\"", "[^]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node10 = textNode9.parentNode;
        java.lang.String str11 = textNode9.nodeName();
        java.lang.String str12 = textNode9.nodeName();
        textNode9.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes15 = textNode9.attributes();
        java.lang.StringBuilder stringBuilder16 = null;
        org.jsoup.nodes.TextNode textNode20 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node21 = textNode20.parentNode;
        java.lang.String str22 = textNode20.nodeName();
        java.lang.String str23 = textNode20.nodeName();
        textNode20.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes26 = textNode20.attributes();
        java.lang.StringBuilder stringBuilder27 = null;
        org.jsoup.nodes.Attribute attribute31 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean33 = attribute31.shouldCollapseAttribute(outputSettings32);
        org.jsoup.nodes.Entities.EscapeMode escapeMode34 = outputSettings32.escapeMode();
        textNode20.outerHtmlTail(stringBuilder27, (int) (short) -1, outputSettings32);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax36 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = outputSettings32.syntax(syntax36);
        textNode9.outerHtmlTail(stringBuilder16, (int) (short) 1, outputSettings32);
        org.jsoup.nodes.Entities.EscapeMode escapeMode39 = outputSettings32.escapeMode();
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) (short) -1, outputSettings32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(textNode9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#text" + "'", str11, "#text");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#text" + "'", str12, "#text");
        org.junit.Assert.assertNotNull(attributes15);
        org.junit.Assert.assertNotNull(textNode20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#text" + "'", str22, "#text");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#text" + "'", str23, "#text");
        org.junit.Assert.assertNotNull(attributes26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + escapeMode34 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode34.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax36 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax36.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertTrue("'" + escapeMode39 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode39.equals(org.jsoup.nodes.Entities.EscapeMode.base));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #130
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #108
32: ldc           #59
34: ldc           #131
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: ldc           #52
44: ldc           #52
46: invokestatic  #132
49: astore_3
50: aload_3
51: getfield      #133
54: astore        4
56: aload_3
57: invokevirtual #134
60: astore        5
62: aload_3
63: invokevirtual #134
66: astore        6
68: aload_3
69: ldc           #135
71: invokevirtual #136
74: aload_3
75: invokevirtual #137
78: astore        7
80: aconst_null
81: astore        8
83: ldc           #52
85: ldc           #52
87: invokestatic  #132
90: astore        9
92: aload         9
94: getfield      #133
97: astore        10
99: aload         9
101: invokevirtual #134
104: astore        11
106: aload         9
108: invokevirtual #134
111: astore        12
113: aload         9
115: ldc           #135
117: invokevirtual #136
120: aload         9
122: invokevirtual #137
125: astore        13
127: aconst_null
128: astore        14
130: new           #16
133: dup
134: ldc           #17
136: ldc           #18
138: invokespecial #19
141: astore        15
143: new           #13
146: dup
147: invokespecial #14
150: astore        16
152: aload         15
154: aload         16
156: invokevirtual #20
159: istore        17
161: aload         16
163: invokevirtual #21
166: astore        18
168: aload         9
170: aload         14
172: iconst_m1
173: aload         16
175: invokevirtual #86
178: getstatic     #49
181: astore        19
183: aload         16
185: aload         19
187: invokevirtual #138
190: astore        20
192: aload_3
193: aload         8
195: iconst_1
196: aload         16
198: invokevirtual #86
201: aload         16
203: invokevirtual #21
206: astore        21
208: aload_1
209: aload_2
210: iconst_m1
211: aload         16
213: invokevirtual #23
216: ldc           #24
218: invokestatic  #25
221: goto          226
224: astore        22
226: aload_3
227: invokestatic  #39
230: aload         4
232: invokestatic  #139
235: new           #27
238: dup
239: invokespecial #28
242: ldc           #29
244: invokevirtual #30
247: aload         5
249: invokevirtual #30
252: ldc           #140
254: invokevirtual #30
257: invokevirtual #33
260: aload         5
262: ldc           #74
264: invokestatic  #91
267: new           #27
270: dup
271: invokespecial #28
274: ldc           #29
276: invokevirtual #30
279: aload         6
281: invokevirtual #30
284: ldc           #140
286: invokevirtual #30
289: invokevirtual #33
292: aload         6
294: ldc           #74
296: invokestatic  #91
299: aload         7
301: invokestatic  #39
304: aload         9
306: invokestatic  #39
309: aload         10
311: invokestatic  #139
314: new           #27
317: dup
318: invokespecial #28
321: ldc           #29
323: invokevirtual #30
326: aload         11
328: invokevirtual #30
331: ldc           #140
333: invokevirtual #30
336: invokevirtual #33
339: aload         11
341: ldc           #74
343: invokestatic  #91
346: new           #27
349: dup
350: invokespecial #28
353: ldc           #29
355: invokevirtual #30
358: aload         12
360: invokevirtual #30
363: ldc           #140
365: invokevirtual #30
368: invokevirtual #33
371: aload         12
373: ldc           #74
375: invokestatic  #91
378: aload         13
380: invokestatic  #39
383: new           #27
386: dup
387: invokespecial #28
390: ldc           #29
392: invokevirtual #30
395: iload         17
397: invokevirtual #35
400: ldc           #32
402: invokevirtual #30
405: iconst_0
406: invokevirtual #35
409: ldc           #29
411: invokevirtual #30
414: invokevirtual #33
417: iload         17
419: ifne          426
422: iconst_1
423: goto          427
426: iconst_0
427: invokestatic  #34
430: new           #27
433: dup
434: invokespecial #28
437: ldc           #29
439: invokevirtual #30
442: aload         18
444: invokevirtual #36
447: ldc           #32
449: invokevirtual #30
452: getstatic     #37
455: invokevirtual #36
458: ldc           #29
460: invokevirtual #30
463: invokevirtual #33
466: aload         18
468: getstatic     #37
471: invokevirtual #38
474: invokestatic  #34
477: new           #27
480: dup
481: invokespecial #28
484: ldc           #29
486: invokevirtual #30
489: aload         19
491: invokevirtual #36
494: ldc           #32
496: invokevirtual #30
499: getstatic     #49
502: invokevirtual #36
505: ldc           #29
507: invokevirtual #30
510: invokevirtual #33
513: aload         19
515: getstatic     #49
518: invokevirtual #50
521: invokestatic  #34
524: aload         20
526: invokestatic  #39
529: new           #27
532: dup
533: invokespecial #28
536: ldc           #29
538: invokevirtual #30
541: aload         21
543: invokevirtual #36
546: ldc           #32
548: invokevirtual #30
551: getstatic     #37
554: invokevirtual #36
557: ldc           #29
559: invokevirtual #30
562: invokevirtual #33
565: aload         21
567: getstatic     #37
570: invokevirtual #38
573: invokestatic  #34
576: return
Exception table:
from    to  target type
208   221   224   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test13
Start line: 633
End line: 721
Method source code: 
    public void test13() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test13");
        org.jsoup.nodes.Attribute attribute2 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Attribute attribute3 = attribute2.clone();
        attribute3.setKey(" class=\"\"");
        boolean boolean6 = attribute3.isDataAttribute();
        java.lang.String str7 = attribute3.toString();
        boolean boolean8 = attribute3.isDataAttribute();
        org.jsoup.nodes.DocumentType documentType13 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.nodes.TextNode textNode18 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str19 = textNode18.getWholeText();
        java.lang.String str21 = textNode18.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder22 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType24 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document27 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element31 = document29.toggleClass("");
        java.lang.String str32 = element31.tagName();
        org.jsoup.nodes.Element element34 = element31.toggleClass("");
        boolean boolean35 = isOnlyOfType24.matches((org.jsoup.nodes.Element) document27, element31);
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements40 = document38.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element42 = document38.text(" ");
        org.jsoup.nodes.Document document45 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements47 = document45.getElementsContainingText("#data");
        boolean boolean48 = isOnlyOfType24.matches((org.jsoup.nodes.Element) document38, (org.jsoup.nodes.Element) document45);
        org.jsoup.nodes.Comment comment51 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean53 = comment51.hasAttr("hi!");
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element57 = document55.toggleClass("");
        org.jsoup.nodes.Node node58 = document55.clone();
        org.jsoup.nodes.Node node59 = comment51.doClone(node58);
        java.lang.StringBuilder stringBuilder60 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings62 = null;
        comment51.outerHtmlTail(stringBuilder60, 10, outputSettings62);
        java.lang.String str64 = comment51.getData();
        java.lang.String str65 = comment51.nodeName();
        java.lang.StringBuilder stringBuilder66 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings68 = new org.jsoup.nodes.Document.OutputSettings();
        int int69 = outputSettings68.indentAmount();
        comment51.outerHtmlTail(stringBuilder66, 0, outputSettings68);
        boolean boolean71 = document45.equals((java.lang.Object) outputSettings68);
        textNode18.outerHtmlTail(stringBuilder22, (int) (short) 100, outputSettings68);
        documentType13.outerHtmlTail(stringBuilder14, (int) (short) 1, outputSettings68);
        java.lang.StringBuilder stringBuilder74 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = new org.jsoup.nodes.Document.OutputSettings();
        int int77 = outputSettings76.indentAmount();
        documentType13.outerHtmlTail(stringBuilder74, 0, outputSettings76);
        org.jsoup.nodes.Entities.EscapeMode escapeMode79 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings76.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings82 = outputSettings80.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings84 = outputSettings82.prettyPrint(true);
        boolean boolean85 = attribute3.shouldCollapseAttribute(outputSettings84);
        org.junit.Assert.assertNotNull(attribute3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class=\"\"=\"data-\"" + "'", str7, "class=\"\"=\"data-\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#root" + "'", str32, "#root");
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(elements40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(elements47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#comment" + "'", str65, "#comment");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode79 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode79.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertNotNull(outputSettings82);
        org.junit.Assert.assertNotNull(outputSettings84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #141
19: aastore
20: invokevirtual #7
23: pop
24: new           #16
27: dup
28: ldc           #17
30: ldc           #18
32: invokespecial #19
35: astore_1
36: aload_1
37: invokevirtual #41
40: astore_2
41: aload_2
42: ldc           #42
44: invokevirtual #43
47: aload_2
48: invokevirtual #142
51: istore_3
52: aload_2
53: invokevirtual #143
56: astore        4
58: aload_2
59: invokevirtual #142
62: istore        5
64: new           #8
67: dup
68: ldc           #9
70: ldc           #10
72: ldc           #11
74: ldc           #9
76: invokespecial #12
79: astore        6
81: aconst_null
82: astore        7
84: new           #58
87: dup
88: ldc           #9
90: ldc           #59
92: invokespecial #60
95: astore        8
97: aload         8
99: invokevirtual #61
102: astore        9
104: aload         8
106: ldc           #62
108: invokevirtual #63
111: astore        10
113: aconst_null
114: astore        11
116: new           #64
119: dup
120: invokespecial #65
123: astore        12
125: ldc           #9
127: ldc           #9
129: invokestatic  #66
132: astore        13
134: ldc           #52
136: invokestatic  #53
139: astore        14
141: aload         14
143: ldc           #9
145: invokevirtual #54
148: astore        15
150: aload         15
152: invokevirtual #67
155: astore        16
157: aload         15
159: ldc           #9
161: invokevirtual #68
164: astore        17
166: aload         12
168: aload         13
170: aload         15
172: invokevirtual #69
175: istore        18
177: ldc           #59
179: ldc           #52
181: invokestatic  #70
184: astore        19
186: aload         19
188: bipush        100
190: invokevirtual #71
193: astore        20
195: aload         19
197: ldc           #72
199: invokevirtual #73
202: astore        21
204: ldc           #74
206: ldc           #52
208: invokestatic  #70
211: astore        22
213: aload         22
215: ldc           #75
217: invokevirtual #76
220: astore        23
222: aload         12
224: aload         19
226: aload         22
228: invokevirtual #69
231: istore        24
233: new           #77
236: dup
237: ldc           #52
239: ldc           #52
241: invokespecial #78
244: astore        25
246: aload         25
248: ldc           #52
250: invokevirtual #79
253: istore        26
255: ldc           #52
257: invokestatic  #53
260: astore        27
262: aload         27
264: ldc           #9
266: invokevirtual #54
269: astore        28
271: aload         27
273: invokevirtual #80
276: astore        29
278: aload         25
280: aload         29
282: invokevirtual #81
285: astore        30
287: aconst_null
288: astore        31
290: aconst_null
291: astore        32
293: aload         25
295: aload         31
297: bipush        10
299: aload         32
301: invokevirtual #82
304: aload         25
306: invokevirtual #83
309: astore        33
311: aload         25
313: invokevirtual #84
316: astore        34
318: aconst_null
319: astore        35
321: new           #13
324: dup
325: invokespecial #14
328: astore        36
330: aload         36
332: invokevirtual #15
335: istore        37
337: aload         25
339: aload         35
341: iconst_0
342: aload         36
344: invokevirtual #82
347: aload         22
349: aload         36
351: invokevirtual #85
354: istore        38
356: aload         8
358: aload         11
360: bipush        100
362: aload         36
364: invokevirtual #86
367: aload         6
369: aload         7
371: iconst_1
372: aload         36
374: invokevirtual #87
377: aconst_null
378: astore        39
380: new           #13
383: dup
384: invokespecial #14
387: astore        40
389: aload         40
391: invokevirtual #15
394: istore        41
396: aload         6
398: aload         39
400: iconst_0
401: aload         40
403: invokevirtual #87
406: getstatic     #127
409: astore        42
411: aload         40
413: aload         42
415: invokevirtual #22
418: astore        43
420: aload         43
422: iconst_0
423: invokevirtual #128
426: astore        44
428: aload         44
430: iconst_1
431: invokevirtual #128
434: astore        45
436: aload_2
437: aload         45
439: invokevirtual #20
442: istore        46
444: aload_2
445: invokestatic  #39
448: new           #27
451: dup
452: invokespecial #28
455: ldc           #29
457: invokevirtual #30
460: iload_3
461: invokevirtual #35
464: ldc           #32
466: invokevirtual #30
469: iconst_0
470: invokevirtual #35
473: ldc           #29
475: invokevirtual #30
478: invokevirtual #33
481: iload_3
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #34
493: new           #27
496: dup
497: invokespecial #28
500: ldc           #29
502: invokevirtual #30
505: aload         4
507: invokevirtual #30
510: ldc           #144
512: invokevirtual #30
515: invokevirtual #33
518: aload         4
520: ldc           #62
522: invokestatic  #91
525: new           #27
528: dup
529: invokespecial #28
532: ldc           #29
534: invokevirtual #30
537: iload         5
539: invokevirtual #35
542: ldc           #32
544: invokevirtual #30
547: iconst_0
548: invokevirtual #35
551: ldc           #29
553: invokevirtual #30
556: invokevirtual #33
559: iload         5
561: ifne          568
564: iconst_1
565: goto          569
568: iconst_0
569: invokestatic  #34
572: new           #27
575: dup
576: invokespecial #28
579: ldc           #29
581: invokevirtual #30
584: aload         9
586: invokevirtual #30
589: ldc           #90
591: invokevirtual #30
594: invokevirtual #33
597: aload         9
599: ldc           #9
601: invokestatic  #91
604: new           #27
607: dup
608: invokespecial #28
611: ldc           #29
613: invokevirtual #30
616: aload         10
618: invokevirtual #30
621: ldc           #90
623: invokevirtual #30
626: invokevirtual #33
629: aload         10
631: ldc           #9
633: invokestatic  #91
636: aload         13
638: invokestatic  #39
641: aload         14
643: invokestatic  #39
646: aload         15
648: invokestatic  #39
651: new           #27
654: dup
655: invokespecial #28
658: ldc           #29
660: invokevirtual #30
663: aload         16
665: invokevirtual #30
668: ldc           #92
670: invokevirtual #30
673: invokevirtual #33
676: aload         16
678: ldc           #17
680: invokestatic  #91
683: aload         17
685: invokestatic  #39
688: new           #27
691: dup
692: invokespecial #28
695: ldc           #29
697: invokevirtual #30
700: iload         18
702: invokevirtual #35
705: ldc           #32
707: invokevirtual #30
710: iconst_0
711: invokevirtual #35
714: ldc           #29
716: invokevirtual #30
719: invokevirtual #33
722: iload         18
724: ifne          731
727: iconst_1
728: goto          732
731: iconst_0
732: invokestatic  #34
735: aload         19
737: invokestatic  #39
740: aload         20
742: invokestatic  #39
745: aload         21
747: invokestatic  #39
750: aload         22
752: invokestatic  #39
755: aload         23
757: invokestatic  #39
760: new           #27
763: dup
764: invokespecial #28
767: ldc           #29
769: invokevirtual #30
772: iload         24
774: invokevirtual #35
777: ldc           #32
779: invokevirtual #30
782: iconst_0
783: invokevirtual #35
786: ldc           #29
788: invokevirtual #30
791: invokevirtual #33
794: iload         24
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #34
807: new           #27
810: dup
811: invokespecial #28
814: ldc           #29
816: invokevirtual #30
819: iload         26
821: invokevirtual #35
824: ldc           #32
826: invokevirtual #30
829: iconst_0
830: invokevirtual #35
833: ldc           #29
835: invokevirtual #30
838: invokevirtual #33
841: iload         26
843: ifne          850
846: iconst_1
847: goto          851
850: iconst_0
851: invokestatic  #34
854: aload         27
856: invokestatic  #39
859: aload         28
861: invokestatic  #39
864: aload         29
866: invokestatic  #39
869: aload         30
871: invokestatic  #39
874: new           #27
877: dup
878: invokespecial #28
881: ldc           #29
883: invokevirtual #30
886: aload         33
888: invokevirtual #30
891: ldc           #93
893: invokevirtual #30
896: invokevirtual #33
899: aload         33
901: ldc           #52
903: invokestatic  #91
906: new           #27
909: dup
910: invokespecial #28
913: ldc           #29
915: invokevirtual #30
918: aload         34
920: invokevirtual #30
923: ldc           #94
925: invokevirtual #30
928: invokevirtual #33
931: aload         34
933: ldc           #95
935: invokestatic  #91
938: new           #27
941: dup
942: invokespecial #28
945: ldc           #29
947: invokevirtual #30
950: iload         37
952: invokevirtual #31
955: ldc           #32
957: invokevirtual #30
960: iconst_1
961: invokevirtual #31
964: ldc           #29
966: invokevirtual #30
969: invokevirtual #33
972: iload         37
974: iconst_1
975: if_icmpne     982
978: iconst_1
979: goto          983
982: iconst_0
983: invokestatic  #34
986: new           #27
989: dup
990: invokespecial #28
993: ldc           #29
995: invokevirtual #30
998: iload         38
1000: invokevirtual #35
1003: ldc           #32
1005: invokevirtual #30
1008: iconst_0
1009: invokevirtual #35
1012: ldc           #29
1014: invokevirtual #30
1017: invokevirtual #33
1020: iload         38
1022: ifne          1029
1025: iconst_1
1026: goto          1030
1029: iconst_0
1030: invokestatic  #34
1033: new           #27
1036: dup
1037: invokespecial #28
1040: ldc           #29
1042: invokevirtual #30
1045: iload         41
1047: invokevirtual #31
1050: ldc           #32
1052: invokevirtual #30
1055: iconst_1
1056: invokevirtual #31
1059: ldc           #29
1061: invokevirtual #30
1064: invokevirtual #33
1067: iload         41
1069: iconst_1
1070: if_icmpne     1077
1073: iconst_1
1074: goto          1078
1077: iconst_0
1078: invokestatic  #34
1081: new           #27
1084: dup
1085: invokespecial #28
1088: ldc           #29
1090: invokevirtual #30
1093: aload         42
1095: invokevirtual #36
1098: ldc           #32
1100: invokevirtual #30
1103: getstatic     #127
1106: invokevirtual #36
1109: ldc           #29
1111: invokevirtual #30
1114: invokevirtual #33
1117: aload         42
1119: getstatic     #127
1122: invokevirtual #38
1125: invokestatic  #34
1128: aload         43
1130: invokestatic  #39
1133: aload         44
1135: invokestatic  #39
1138: aload         45
1140: invokestatic  #39
1143: new           #27
1146: dup
1147: invokespecial #28
1150: ldc           #29
1152: invokevirtual #30
1155: iload         46
1157: invokevirtual #35
1160: ldc           #32
1162: invokevirtual #30
1165: iconst_0
1166: invokevirtual #35
1169: ldc           #29
1171: invokevirtual #30
1174: invokevirtual #33
1177: iload         46
1179: ifne          1186
1182: iconst_1
1183: goto          1187
1186: iconst_0
1187: invokestatic  #34
1190: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test14
Start line: 724
End line: 775
Method source code: 
    public void test14() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test14");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings8 = new org.jsoup.nodes.Document.OutputSettings();
        int int9 = outputSettings8.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder10 = outputSettings8.encoder();
        documentType4.outerHtmlTail(stringBuilder6, (int) (short) 1, outputSettings8);
        java.lang.StringBuilder stringBuilder12 = null;
        org.jsoup.nodes.Comment comment16 = new org.jsoup.nodes.Comment("hi!", "hi!");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element20 = document18.toggleClass("");
        java.lang.String str21 = element20.tagName();
        org.jsoup.nodes.Element element23 = element20.toggleClass("");
        org.jsoup.select.Elements elements25 = element23.getElementsContainingOwnText("hi!");
        comment16.setParentNode((org.jsoup.nodes.Node) element23);
        java.util.List<org.jsoup.nodes.Node> nodeList27 = comment16.childNodes;
        java.lang.StringBuilder stringBuilder28 = null;
        org.jsoup.nodes.TextNode textNode32 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node33 = textNode32.parentNode;
        java.lang.String str34 = textNode32.nodeName();
        java.lang.String str35 = textNode32.nodeName();
        textNode32.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes38 = textNode32.attributes();
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean40 = attributes38.equals((java.lang.Object) outputSettings39);
        comment16.outerHtmlTail(stringBuilder28, 0, outputSettings39);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder12, (int) (byte) 0, outputSettings39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder10);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#root" + "'", str21, "#root");
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(elements25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(textNode32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#text" + "'", str34, "#text");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#text" + "'", str35, "#text");
        org.junit.Assert.assertNotNull(attributes38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #145
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #97
44: astore_2
45: aconst_null
46: astore_3
47: new           #13
50: dup
51: invokespecial #14
54: astore        4
56: aload         4
58: invokevirtual #15
61: istore        5
63: aload         4
65: invokevirtual #146
68: astore        6
70: aload_1
71: aload_3
72: iconst_1
73: aload         4
75: invokevirtual #87
78: aconst_null
79: astore        7
81: new           #77
84: dup
85: ldc           #52
87: ldc           #52
89: invokespecial #78
92: astore        8
94: ldc           #52
96: invokestatic  #53
99: astore        9
101: aload         9
103: ldc           #9
105: invokevirtual #54
108: astore        10
110: aload         10
112: invokevirtual #67
115: astore        11
117: aload         10
119: ldc           #9
121: invokevirtual #68
124: astore        12
126: aload         12
128: ldc           #52
130: invokevirtual #147
133: astore        13
135: aload         8
137: aload         12
139: invokevirtual #148
142: aload         8
144: getfield      #149
147: astore        14
149: aconst_null
150: astore        15
152: ldc           #52
154: ldc           #52
156: invokestatic  #132
159: astore        16
161: aload         16
163: getfield      #133
166: astore        17
168: aload         16
170: invokevirtual #134
173: astore        18
175: aload         16
177: invokevirtual #134
180: astore        19
182: aload         16
184: ldc           #135
186: invokevirtual #136
189: aload         16
191: invokevirtual #137
194: astore        20
196: new           #13
199: dup
200: invokespecial #14
203: astore        21
205: aload         20
207: aload         21
209: invokevirtual #150
212: istore        22
214: aload         8
216: aload         15
218: iconst_0
219: aload         21
221: invokevirtual #82
224: aload_1
225: aload         7
227: iconst_0
228: aload         21
230: invokevirtual #23
233: ldc           #24
235: invokestatic  #25
238: goto          243
241: astore        23
243: new           #27
246: dup
247: invokespecial #28
250: ldc           #29
252: invokevirtual #30
255: aload_2
256: invokevirtual #30
259: ldc           #102
261: invokevirtual #30
264: invokevirtual #33
267: aload_2
268: ldc           #103
270: invokestatic  #91
273: new           #27
276: dup
277: invokespecial #28
280: ldc           #29
282: invokevirtual #30
285: iload         5
287: invokevirtual #31
290: ldc           #32
292: invokevirtual #30
295: iconst_1
296: invokevirtual #31
299: ldc           #29
301: invokevirtual #30
304: invokevirtual #33
307: iload         5
309: iconst_1
310: if_icmpne     317
313: iconst_1
314: goto          318
317: iconst_0
318: invokestatic  #34
321: aload         6
323: invokestatic  #39
326: aload         9
328: invokestatic  #39
331: aload         10
333: invokestatic  #39
336: new           #27
339: dup
340: invokespecial #28
343: ldc           #29
345: invokevirtual #30
348: aload         11
350: invokevirtual #30
353: ldc           #92
355: invokevirtual #30
358: invokevirtual #33
361: aload         11
363: ldc           #17
365: invokestatic  #91
368: aload         12
370: invokestatic  #39
373: aload         13
375: invokestatic  #39
378: aload         14
380: invokestatic  #39
383: aload         16
385: invokestatic  #39
388: aload         17
390: invokestatic  #139
393: new           #27
396: dup
397: invokespecial #28
400: ldc           #29
402: invokevirtual #30
405: aload         18
407: invokevirtual #30
410: ldc           #140
412: invokevirtual #30
415: invokevirtual #33
418: aload         18
420: ldc           #74
422: invokestatic  #91
425: new           #27
428: dup
429: invokespecial #28
432: ldc           #29
434: invokevirtual #30
437: aload         19
439: invokevirtual #30
442: ldc           #140
444: invokevirtual #30
447: invokevirtual #33
450: aload         19
452: ldc           #74
454: invokestatic  #91
457: aload         20
459: invokestatic  #39
462: new           #27
465: dup
466: invokespecial #28
469: ldc           #29
471: invokevirtual #30
474: iload         22
476: invokevirtual #35
479: ldc           #32
481: invokevirtual #30
484: iconst_0
485: invokevirtual #35
488: ldc           #29
490: invokevirtual #30
493: invokevirtual #33
496: iload         22
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #34
509: return
Exception table:
from    to  target type
224   238   241   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test15
Start line: 778
End line: 880
Method source code: 
    public void test15() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test15");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType70 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document72 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element74 = document72.toggleClass("");
        org.jsoup.nodes.Node node75 = document72.clone();
        org.jsoup.select.Elements elements77 = document72.getElementsByIndexEquals((int) '#');
        org.jsoup.nodes.Element element79 = document72.toggleClass("");
        org.jsoup.nodes.Document document81 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element83 = document81.toggleClass("");
        org.jsoup.nodes.Node node84 = document81.clone();
        org.jsoup.nodes.Element element85 = document81.body();
        org.jsoup.select.Elements elements86 = element85.children();
        org.jsoup.nodes.Element element88 = element85.text("#root");
        boolean boolean89 = isOnlyOfType70.matches(element79, element85);
        org.jsoup.nodes.Node node90 = element85.unwrap();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node91 = documentType4.after((org.jsoup.nodes.Node) element85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(document72);
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(elements77);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(document81);
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(element85);
        org.junit.Assert.assertNotNull(elements86);
        org.junit.Assert.assertNotNull(element88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(node90);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #151
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #58
45: dup
46: ldc           #9
48: ldc           #59
50: invokespecial #60
53: astore_3
54: aload_3
55: invokevirtual #61
58: astore        4
60: aload_3
61: ldc           #62
63: invokevirtual #63
66: astore        5
68: aconst_null
69: astore        6
71: new           #64
74: dup
75: invokespecial #65
78: astore        7
80: ldc           #9
82: ldc           #9
84: invokestatic  #66
87: astore        8
89: ldc           #52
91: invokestatic  #53
94: astore        9
96: aload         9
98: ldc           #9
100: invokevirtual #54
103: astore        10
105: aload         10
107: invokevirtual #67
110: astore        11
112: aload         10
114: ldc           #9
116: invokevirtual #68
119: astore        12
121: aload         7
123: aload         8
125: aload         10
127: invokevirtual #69
130: istore        13
132: ldc           #59
134: ldc           #52
136: invokestatic  #70
139: astore        14
141: aload         14
143: bipush        100
145: invokevirtual #71
148: astore        15
150: aload         14
152: ldc           #72
154: invokevirtual #73
157: astore        16
159: ldc           #74
161: ldc           #52
163: invokestatic  #70
166: astore        17
168: aload         17
170: ldc           #75
172: invokevirtual #76
175: astore        18
177: aload         7
179: aload         14
181: aload         17
183: invokevirtual #69
186: istore        19
188: new           #77
191: dup
192: ldc           #52
194: ldc           #52
196: invokespecial #78
199: astore        20
201: aload         20
203: ldc           #52
205: invokevirtual #79
208: istore        21
210: ldc           #52
212: invokestatic  #53
215: astore        22
217: aload         22
219: ldc           #9
221: invokevirtual #54
224: astore        23
226: aload         22
228: invokevirtual #80
231: astore        24
233: aload         20
235: aload         24
237: invokevirtual #81
240: astore        25
242: aconst_null
243: astore        26
245: aconst_null
246: astore        27
248: aload         20
250: aload         26
252: bipush        10
254: aload         27
256: invokevirtual #82
259: aload         20
261: invokevirtual #83
264: astore        28
266: aload         20
268: invokevirtual #84
271: astore        29
273: aconst_null
274: astore        30
276: new           #13
279: dup
280: invokespecial #14
283: astore        31
285: aload         31
287: invokevirtual #15
290: istore        32
292: aload         20
294: aload         30
296: iconst_0
297: aload         31
299: invokevirtual #82
302: aload         17
304: aload         31
306: invokevirtual #85
309: istore        33
311: aload_3
312: aload         6
314: bipush        100
316: aload         31
318: invokevirtual #86
321: aload_1
322: aload_2
323: iconst_1
324: aload         31
326: invokevirtual #87
329: aconst_null
330: astore        34
332: new           #13
335: dup
336: invokespecial #14
339: astore        35
341: aload         35
343: invokevirtual #15
346: istore        36
348: aload_1
349: aload         34
351: iconst_0
352: aload         35
354: invokevirtual #87
357: new           #64
360: dup
361: invokespecial #65
364: astore        37
366: ldc           #52
368: invokestatic  #53
371: astore        38
373: aload         38
375: ldc           #9
377: invokevirtual #54
380: astore        39
382: aload         38
384: invokevirtual #80
387: astore        40
389: aload         38
391: bipush        35
393: invokevirtual #152
396: astore        41
398: aload         38
400: ldc           #9
402: invokevirtual #54
405: astore        42
407: ldc           #52
409: invokestatic  #53
412: astore        43
414: aload         43
416: ldc           #9
418: invokevirtual #54
421: astore        44
423: aload         43
425: invokevirtual #80
428: astore        45
430: aload         43
432: invokevirtual #153
435: astore        46
437: aload         46
439: invokevirtual #154
442: astore        47
444: aload         46
446: ldc           #17
448: invokevirtual #155
451: astore        48
453: aload         37
455: aload         42
457: aload         46
459: invokevirtual #69
462: istore        49
464: aload         46
466: invokevirtual #156
469: astore        50
471: aload_1
472: aload         46
474: invokevirtual #157
477: astore        51
479: ldc           #158
481: invokestatic  #25
484: goto          489
487: astore        51
489: new           #27
492: dup
493: invokespecial #28
496: ldc           #29
498: invokevirtual #30
501: aload         4
503: invokevirtual #30
506: ldc           #90
508: invokevirtual #30
511: invokevirtual #33
514: aload         4
516: ldc           #9
518: invokestatic  #91
521: new           #27
524: dup
525: invokespecial #28
528: ldc           #29
530: invokevirtual #30
533: aload         5
535: invokevirtual #30
538: ldc           #90
540: invokevirtual #30
543: invokevirtual #33
546: aload         5
548: ldc           #9
550: invokestatic  #91
553: aload         8
555: invokestatic  #39
558: aload         9
560: invokestatic  #39
563: aload         10
565: invokestatic  #39
568: new           #27
571: dup
572: invokespecial #28
575: ldc           #29
577: invokevirtual #30
580: aload         11
582: invokevirtual #30
585: ldc           #92
587: invokevirtual #30
590: invokevirtual #33
593: aload         11
595: ldc           #17
597: invokestatic  #91
600: aload         12
602: invokestatic  #39
605: new           #27
608: dup
609: invokespecial #28
612: ldc           #29
614: invokevirtual #30
617: iload         13
619: invokevirtual #35
622: ldc           #32
624: invokevirtual #30
627: iconst_0
628: invokevirtual #35
631: ldc           #29
633: invokevirtual #30
636: invokevirtual #33
639: iload         13
641: ifne          648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #34
652: aload         14
654: invokestatic  #39
657: aload         15
659: invokestatic  #39
662: aload         16
664: invokestatic  #39
667: aload         17
669: invokestatic  #39
672: aload         18
674: invokestatic  #39
677: new           #27
680: dup
681: invokespecial #28
684: ldc           #29
686: invokevirtual #30
689: iload         19
691: invokevirtual #35
694: ldc           #32
696: invokevirtual #30
699: iconst_0
700: invokevirtual #35
703: ldc           #29
705: invokevirtual #30
708: invokevirtual #33
711: iload         19
713: ifne          720
716: iconst_1
717: goto          721
720: iconst_0
721: invokestatic  #34
724: new           #27
727: dup
728: invokespecial #28
731: ldc           #29
733: invokevirtual #30
736: iload         21
738: invokevirtual #35
741: ldc           #32
743: invokevirtual #30
746: iconst_0
747: invokevirtual #35
750: ldc           #29
752: invokevirtual #30
755: invokevirtual #33
758: iload         21
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #34
771: aload         22
773: invokestatic  #39
776: aload         23
778: invokestatic  #39
781: aload         24
783: invokestatic  #39
786: aload         25
788: invokestatic  #39
791: new           #27
794: dup
795: invokespecial #28
798: ldc           #29
800: invokevirtual #30
803: aload         28
805: invokevirtual #30
808: ldc           #93
810: invokevirtual #30
813: invokevirtual #33
816: aload         28
818: ldc           #52
820: invokestatic  #91
823: new           #27
826: dup
827: invokespecial #28
830: ldc           #29
832: invokevirtual #30
835: aload         29
837: invokevirtual #30
840: ldc           #94
842: invokevirtual #30
845: invokevirtual #33
848: aload         29
850: ldc           #95
852: invokestatic  #91
855: new           #27
858: dup
859: invokespecial #28
862: ldc           #29
864: invokevirtual #30
867: iload         32
869: invokevirtual #31
872: ldc           #32
874: invokevirtual #30
877: iconst_1
878: invokevirtual #31
881: ldc           #29
883: invokevirtual #30
886: invokevirtual #33
889: iload         32
891: iconst_1
892: if_icmpne     899
895: iconst_1
896: goto          900
899: iconst_0
900: invokestatic  #34
903: new           #27
906: dup
907: invokespecial #28
910: ldc           #29
912: invokevirtual #30
915: iload         33
917: invokevirtual #35
920: ldc           #32
922: invokevirtual #30
925: iconst_0
926: invokevirtual #35
929: ldc           #29
931: invokevirtual #30
934: invokevirtual #33
937: iload         33
939: ifne          946
942: iconst_1
943: goto          947
946: iconst_0
947: invokestatic  #34
950: new           #27
953: dup
954: invokespecial #28
957: ldc           #29
959: invokevirtual #30
962: iload         36
964: invokevirtual #31
967: ldc           #32
969: invokevirtual #30
972: iconst_1
973: invokevirtual #31
976: ldc           #29
978: invokevirtual #30
981: invokevirtual #33
984: iload         36
986: iconst_1
987: if_icmpne     994
990: iconst_1
991: goto          995
994: iconst_0
995: invokestatic  #34
998: aload         38
1000: invokestatic  #39
1003: aload         39
1005: invokestatic  #39
1008: aload         40
1010: invokestatic  #39
1013: aload         41
1015: invokestatic  #39
1018: aload         42
1020: invokestatic  #39
1023: aload         43
1025: invokestatic  #39
1028: aload         44
1030: invokestatic  #39
1033: aload         45
1035: invokestatic  #39
1038: aload         46
1040: invokestatic  #39
1043: aload         47
1045: invokestatic  #39
1048: aload         48
1050: invokestatic  #39
1053: new           #27
1056: dup
1057: invokespecial #28
1060: ldc           #29
1062: invokevirtual #30
1065: iload         49
1067: invokevirtual #35
1070: ldc           #32
1072: invokevirtual #30
1075: iconst_1
1076: invokevirtual #35
1079: ldc           #29
1081: invokevirtual #30
1084: invokevirtual #33
1087: iload         49
1089: iconst_1
1090: if_icmpne     1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #34
1101: aload         50
1103: invokestatic  #39
1106: return
Exception table:
from    to  target type
471   484   487   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test16
Start line: 883
End line: 950
Method source code: 
    public void test16() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test16");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.outerHtml();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str11 = textNode10.getWholeText();
        java.lang.String str13 = textNode10.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType16 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document19 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element23 = document21.toggleClass("");
        java.lang.String str24 = element23.tagName();
        org.jsoup.nodes.Element element26 = element23.toggleClass("");
        boolean boolean27 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document19, element23);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements32 = document30.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element34 = document30.text(" ");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements39 = document37.getElementsContainingText("#data");
        boolean boolean40 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document37);
        org.jsoup.nodes.Comment comment43 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean45 = comment43.hasAttr("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element49 = document47.toggleClass("");
        org.jsoup.nodes.Node node50 = document47.clone();
        org.jsoup.nodes.Node node51 = comment43.doClone(node50);
        java.lang.StringBuilder stringBuilder52 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = null;
        comment43.outerHtmlTail(stringBuilder52, 10, outputSettings54);
        java.lang.String str56 = comment43.getData();
        java.lang.String str57 = comment43.nodeName();
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = new org.jsoup.nodes.Document.OutputSettings();
        int int61 = outputSettings60.indentAmount();
        comment43.outerHtmlTail(stringBuilder58, 0, outputSettings60);
        boolean boolean63 = document37.equals((java.lang.Object) outputSettings60);
        textNode10.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings60);
        documentType4.outerHtmlTail(stringBuilder6, 0, outputSettings60);
        java.nio.charset.CharsetEncoder charsetEncoder66 = outputSettings60.encoder();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str5, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#root" + "'", str24, "#root");
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charsetEncoder66);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #159
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #110
44: astore_2
45: aconst_null
46: astore_3
47: new           #58
50: dup
51: ldc           #9
53: ldc           #59
55: invokespecial #60
58: astore        4
60: aload         4
62: invokevirtual #61
65: astore        5
67: aload         4
69: ldc           #62
71: invokevirtual #63
74: astore        6
76: aconst_null
77: astore        7
79: new           #64
82: dup
83: invokespecial #65
86: astore        8
88: ldc           #9
90: ldc           #9
92: invokestatic  #66
95: astore        9
97: ldc           #52
99: invokestatic  #53
102: astore        10
104: aload         10
106: ldc           #9
108: invokevirtual #54
111: astore        11
113: aload         11
115: invokevirtual #67
118: astore        12
120: aload         11
122: ldc           #9
124: invokevirtual #68
127: astore        13
129: aload         8
131: aload         9
133: aload         11
135: invokevirtual #69
138: istore        14
140: ldc           #59
142: ldc           #52
144: invokestatic  #70
147: astore        15
149: aload         15
151: bipush        100
153: invokevirtual #71
156: astore        16
158: aload         15
160: ldc           #72
162: invokevirtual #73
165: astore        17
167: ldc           #74
169: ldc           #52
171: invokestatic  #70
174: astore        18
176: aload         18
178: ldc           #75
180: invokevirtual #76
183: astore        19
185: aload         8
187: aload         15
189: aload         18
191: invokevirtual #69
194: istore        20
196: new           #77
199: dup
200: ldc           #52
202: ldc           #52
204: invokespecial #78
207: astore        21
209: aload         21
211: ldc           #52
213: invokevirtual #79
216: istore        22
218: ldc           #52
220: invokestatic  #53
223: astore        23
225: aload         23
227: ldc           #9
229: invokevirtual #54
232: astore        24
234: aload         23
236: invokevirtual #80
239: astore        25
241: aload         21
243: aload         25
245: invokevirtual #81
248: astore        26
250: aconst_null
251: astore        27
253: aconst_null
254: astore        28
256: aload         21
258: aload         27
260: bipush        10
262: aload         28
264: invokevirtual #82
267: aload         21
269: invokevirtual #83
272: astore        29
274: aload         21
276: invokevirtual #84
279: astore        30
281: aconst_null
282: astore        31
284: new           #13
287: dup
288: invokespecial #14
291: astore        32
293: aload         32
295: invokevirtual #15
298: istore        33
300: aload         21
302: aload         31
304: iconst_0
305: aload         32
307: invokevirtual #82
310: aload         18
312: aload         32
314: invokevirtual #85
317: istore        34
319: aload         4
321: aload         7
323: bipush        100
325: aload         32
327: invokevirtual #86
330: aload_1
331: aload_3
332: iconst_0
333: aload         32
335: invokevirtual #87
338: aload         32
340: invokevirtual #146
343: astore        35
345: new           #27
348: dup
349: invokespecial #28
352: ldc           #29
354: invokevirtual #30
357: aload_2
358: invokevirtual #30
361: ldc           #114
363: invokevirtual #30
366: invokevirtual #33
369: aload_2
370: ldc           #115
372: invokestatic  #91
375: new           #27
378: dup
379: invokespecial #28
382: ldc           #29
384: invokevirtual #30
387: aload         5
389: invokevirtual #30
392: ldc           #90
394: invokevirtual #30
397: invokevirtual #33
400: aload         5
402: ldc           #9
404: invokestatic  #91
407: new           #27
410: dup
411: invokespecial #28
414: ldc           #29
416: invokevirtual #30
419: aload         6
421: invokevirtual #30
424: ldc           #90
426: invokevirtual #30
429: invokevirtual #33
432: aload         6
434: ldc           #9
436: invokestatic  #91
439: aload         9
441: invokestatic  #39
444: aload         10
446: invokestatic  #39
449: aload         11
451: invokestatic  #39
454: new           #27
457: dup
458: invokespecial #28
461: ldc           #29
463: invokevirtual #30
466: aload         12
468: invokevirtual #30
471: ldc           #92
473: invokevirtual #30
476: invokevirtual #33
479: aload         12
481: ldc           #17
483: invokestatic  #91
486: aload         13
488: invokestatic  #39
491: new           #27
494: dup
495: invokespecial #28
498: ldc           #29
500: invokevirtual #30
503: iload         14
505: invokevirtual #35
508: ldc           #32
510: invokevirtual #30
513: iconst_0
514: invokevirtual #35
517: ldc           #29
519: invokevirtual #30
522: invokevirtual #33
525: iload         14
527: ifne          534
530: iconst_1
531: goto          535
534: iconst_0
535: invokestatic  #34
538: aload         15
540: invokestatic  #39
543: aload         16
545: invokestatic  #39
548: aload         17
550: invokestatic  #39
553: aload         18
555: invokestatic  #39
558: aload         19
560: invokestatic  #39
563: new           #27
566: dup
567: invokespecial #28
570: ldc           #29
572: invokevirtual #30
575: iload         20
577: invokevirtual #35
580: ldc           #32
582: invokevirtual #30
585: iconst_0
586: invokevirtual #35
589: ldc           #29
591: invokevirtual #30
594: invokevirtual #33
597: iload         20
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #34
610: new           #27
613: dup
614: invokespecial #28
617: ldc           #29
619: invokevirtual #30
622: iload         22
624: invokevirtual #35
627: ldc           #32
629: invokevirtual #30
632: iconst_0
633: invokevirtual #35
636: ldc           #29
638: invokevirtual #30
641: invokevirtual #33
644: iload         22
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #34
657: aload         23
659: invokestatic  #39
662: aload         24
664: invokestatic  #39
667: aload         25
669: invokestatic  #39
672: aload         26
674: invokestatic  #39
677: new           #27
680: dup
681: invokespecial #28
684: ldc           #29
686: invokevirtual #30
689: aload         29
691: invokevirtual #30
694: ldc           #93
696: invokevirtual #30
699: invokevirtual #33
702: aload         29
704: ldc           #52
706: invokestatic  #91
709: new           #27
712: dup
713: invokespecial #28
716: ldc           #29
718: invokevirtual #30
721: aload         30
723: invokevirtual #30
726: ldc           #94
728: invokevirtual #30
731: invokevirtual #33
734: aload         30
736: ldc           #95
738: invokestatic  #91
741: new           #27
744: dup
745: invokespecial #28
748: ldc           #29
750: invokevirtual #30
753: iload         33
755: invokevirtual #31
758: ldc           #32
760: invokevirtual #30
763: iconst_1
764: invokevirtual #31
767: ldc           #29
769: invokevirtual #30
772: invokevirtual #33
775: iload         33
777: iconst_1
778: if_icmpne     785
781: iconst_1
782: goto          786
785: iconst_0
786: invokestatic  #34
789: new           #27
792: dup
793: invokespecial #28
796: ldc           #29
798: invokevirtual #30
801: iload         34
803: invokevirtual #35
806: ldc           #32
808: invokevirtual #30
811: iconst_0
812: invokevirtual #35
815: ldc           #29
817: invokevirtual #30
820: invokevirtual #33
823: iload         34
825: ifne          832
828: iconst_1
829: goto          833
832: iconst_0
833: invokestatic  #34
836: aload         35
838: invokestatic  #39
841: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test17
Start line: 953
End line: 957
Method source code: 
    public void test17() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test17");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("\n#comment", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>=\"[[class=&quot;&quot;=data-]*=:containsown(#document]\"", "", "head");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #160
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #161
30: ldc           #162
32: ldc           #9
34: ldc           #163
36: invokespecial #12
39: astore_1
40: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test18
Start line: 960
End line: 1067
Method source code: 
    public void test18() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test18");
        org.jsoup.nodes.TextNode textNode2 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        boolean boolean3 = textNode2.isBlank();
        java.lang.String str4 = textNode2.baseUri;
        org.jsoup.nodes.Attributes attributes5 = textNode2.attributes();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.Attribute attribute10 = new org.jsoup.nodes.Attribute("#root", "data-");
        java.lang.String str11 = attribute10.html();
        java.lang.String str13 = attribute10.setValue("");
        org.jsoup.nodes.Attribute attribute16 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings17 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean18 = attribute16.shouldCollapseAttribute(outputSettings17);
        org.jsoup.nodes.Entities.EscapeMode escapeMode19 = outputSettings17.escapeMode();
        boolean boolean20 = attribute10.shouldCollapseAttribute(outputSettings17);
        textNode2.outerHtmlTail(stringBuilder6, (int) '#', outputSettings17);
        boolean boolean22 = textNode2.isBlank();
        java.lang.StringBuilder stringBuilder23 = null;
        org.jsoup.nodes.DocumentType documentType29 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder30 = null;
        org.jsoup.nodes.TextNode textNode34 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str35 = textNode34.getWholeText();
        java.lang.String str37 = textNode34.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder38 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType40 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document43 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document45 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element47 = document45.toggleClass("");
        java.lang.String str48 = element47.tagName();
        org.jsoup.nodes.Element element50 = element47.toggleClass("");
        boolean boolean51 = isOnlyOfType40.matches((org.jsoup.nodes.Element) document43, element47);
        org.jsoup.nodes.Document document54 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements56 = document54.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element58 = document54.text(" ");
        org.jsoup.nodes.Document document61 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements63 = document61.getElementsContainingText("#data");
        boolean boolean64 = isOnlyOfType40.matches((org.jsoup.nodes.Element) document54, (org.jsoup.nodes.Element) document61);
        org.jsoup.nodes.Comment comment67 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean69 = comment67.hasAttr("hi!");
        org.jsoup.nodes.Document document71 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element73 = document71.toggleClass("");
        org.jsoup.nodes.Node node74 = document71.clone();
        org.jsoup.nodes.Node node75 = comment67.doClone(node74);
        java.lang.StringBuilder stringBuilder76 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = null;
        comment67.outerHtmlTail(stringBuilder76, 10, outputSettings78);
        java.lang.String str80 = comment67.getData();
        java.lang.String str81 = comment67.nodeName();
        java.lang.StringBuilder stringBuilder82 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings84 = new org.jsoup.nodes.Document.OutputSettings();
        int int85 = outputSettings84.indentAmount();
        comment67.outerHtmlTail(stringBuilder82, 0, outputSettings84);
        boolean boolean87 = document61.equals((java.lang.Object) outputSettings84);
        textNode34.outerHtmlTail(stringBuilder38, (int) (short) 100, outputSettings84);
        documentType29.outerHtmlTail(stringBuilder30, (int) (short) 1, outputSettings84);
        java.lang.StringBuilder stringBuilder90 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings92 = new org.jsoup.nodes.Document.OutputSettings();
        int int93 = outputSettings92.indentAmount();
        documentType29.outerHtmlTail(stringBuilder90, 0, outputSettings92);
        org.jsoup.nodes.Entities.EscapeMode escapeMode95 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings96 = outputSettings92.escapeMode(escapeMode95);
        org.jsoup.nodes.Document.OutputSettings outputSettings98 = outputSettings96.prettyPrint(false);
        // The following exception was thrown during execution in test generation
        try {
            textNode2.outerHtmlHead(stringBuilder23, (int) (short) 10, outputSettings96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(textNode2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(attributes5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#root=\"data-\"" + "'", str11, "#root=\"data-\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "data-" + "'", str13, "data-");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + escapeMode19 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode19.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#root" + "'", str48, "#root");
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(document54);
        org.junit.Assert.assertNotNull(elements56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(elements63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "#comment" + "'", str81, "#comment");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode95 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode95.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings96);
        org.junit.Assert.assertNotNull(outputSettings98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #164
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #52
26: ldc           #52
28: invokestatic  #132
31: astore_1
32: aload_1
33: invokevirtual #165
36: istore_2
37: aload_1
38: getfield      #166
41: astore_3
42: aload_1
43: invokevirtual #137
46: astore        4
48: aconst_null
49: astore        5
51: new           #16
54: dup
55: ldc           #17
57: ldc           #18
59: invokespecial #19
62: astore        6
64: aload         6
66: invokevirtual #167
69: astore        7
71: aload         6
73: ldc           #9
75: invokevirtual #168
78: astore        8
80: new           #16
83: dup
84: ldc           #17
86: ldc           #18
88: invokespecial #19
91: astore        9
93: new           #13
96: dup
97: invokespecial #14
100: astore        10
102: aload         9
104: aload         10
106: invokevirtual #20
109: istore        11
111: aload         10
113: invokevirtual #21
116: astore        12
118: aload         6
120: aload         10
122: invokevirtual #20
125: istore        13
127: aload_1
128: aload         5
130: bipush        35
132: aload         10
134: invokevirtual #86
137: aload_1
138: invokevirtual #165
141: istore        14
143: aconst_null
144: astore        15
146: new           #8
149: dup
150: ldc           #9
152: ldc           #10
154: ldc           #11
156: ldc           #9
158: invokespecial #12
161: astore        16
163: aconst_null
164: astore        17
166: new           #58
169: dup
170: ldc           #9
172: ldc           #59
174: invokespecial #60
177: astore        18
179: aload         18
181: invokevirtual #61
184: astore        19
186: aload         18
188: ldc           #62
190: invokevirtual #63
193: astore        20
195: aconst_null
196: astore        21
198: new           #64
201: dup
202: invokespecial #65
205: astore        22
207: ldc           #9
209: ldc           #9
211: invokestatic  #66
214: astore        23
216: ldc           #52
218: invokestatic  #53
221: astore        24
223: aload         24
225: ldc           #9
227: invokevirtual #54
230: astore        25
232: aload         25
234: invokevirtual #67
237: astore        26
239: aload         25
241: ldc           #9
243: invokevirtual #68
246: astore        27
248: aload         22
250: aload         23
252: aload         25
254: invokevirtual #69
257: istore        28
259: ldc           #59
261: ldc           #52
263: invokestatic  #70
266: astore        29
268: aload         29
270: bipush        100
272: invokevirtual #71
275: astore        30
277: aload         29
279: ldc           #72
281: invokevirtual #73
284: astore        31
286: ldc           #74
288: ldc           #52
290: invokestatic  #70
293: astore        32
295: aload         32
297: ldc           #75
299: invokevirtual #76
302: astore        33
304: aload         22
306: aload         29
308: aload         32
310: invokevirtual #69
313: istore        34
315: new           #77
318: dup
319: ldc           #52
321: ldc           #52
323: invokespecial #78
326: astore        35
328: aload         35
330: ldc           #52
332: invokevirtual #79
335: istore        36
337: ldc           #52
339: invokestatic  #53
342: astore        37
344: aload         37
346: ldc           #9
348: invokevirtual #54
351: astore        38
353: aload         37
355: invokevirtual #80
358: astore        39
360: aload         35
362: aload         39
364: invokevirtual #81
367: astore        40
369: aconst_null
370: astore        41
372: aconst_null
373: astore        42
375: aload         35
377: aload         41
379: bipush        10
381: aload         42
383: invokevirtual #82
386: aload         35
388: invokevirtual #83
391: astore        43
393: aload         35
395: invokevirtual #84
398: astore        44
400: aconst_null
401: astore        45
403: new           #13
406: dup
407: invokespecial #14
410: astore        46
412: aload         46
414: invokevirtual #15
417: istore        47
419: aload         35
421: aload         45
423: iconst_0
424: aload         46
426: invokevirtual #82
429: aload         32
431: aload         46
433: invokevirtual #85
436: istore        48
438: aload         18
440: aload         21
442: bipush        100
444: aload         46
446: invokevirtual #86
449: aload         16
451: aload         17
453: iconst_1
454: aload         46
456: invokevirtual #87
459: aconst_null
460: astore        49
462: new           #13
465: dup
466: invokespecial #14
469: astore        50
471: aload         50
473: invokevirtual #15
476: istore        51
478: aload         16
480: aload         49
482: iconst_0
483: aload         50
485: invokevirtual #87
488: getstatic     #127
491: astore        52
493: aload         50
495: aload         52
497: invokevirtual #22
500: astore        53
502: aload         53
504: iconst_0
505: invokevirtual #128
508: astore        54
510: aload_1
511: aload         15
513: bipush        10
515: aload         53
517: invokevirtual #169
520: ldc           #24
522: invokestatic  #25
525: goto          530
528: astore        55
530: aload_1
531: invokestatic  #39
534: new           #27
537: dup
538: invokespecial #28
541: ldc           #29
543: invokevirtual #30
546: iload_2
547: invokevirtual #35
550: ldc           #32
552: invokevirtual #30
555: iconst_0
556: invokevirtual #35
559: ldc           #29
561: invokevirtual #30
564: invokevirtual #33
567: iload_2
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #34
579: new           #27
582: dup
583: invokespecial #28
586: ldc           #29
588: invokevirtual #30
591: aload_3
592: invokevirtual #30
595: ldc           #93
597: invokevirtual #30
600: invokevirtual #33
603: aload_3
604: ldc           #52
606: invokestatic  #91
609: aload         4
611: invokestatic  #39
614: new           #27
617: dup
618: invokespecial #28
621: ldc           #29
623: invokevirtual #30
626: aload         7
628: invokevirtual #30
631: ldc           #170
633: invokevirtual #30
636: invokevirtual #33
639: aload         7
641: ldc           #135
643: invokestatic  #91
646: new           #27
649: dup
650: invokespecial #28
653: ldc           #29
655: invokevirtual #30
658: aload         8
660: invokevirtual #30
663: ldc           #171
665: invokevirtual #30
668: invokevirtual #33
671: aload         8
673: ldc           #18
675: invokestatic  #91
678: new           #27
681: dup
682: invokespecial #28
685: ldc           #29
687: invokevirtual #30
690: iload         11
692: invokevirtual #35
695: ldc           #32
697: invokevirtual #30
700: iconst_0
701: invokevirtual #35
704: ldc           #29
706: invokevirtual #30
709: invokevirtual #33
712: iload         11
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #34
725: new           #27
728: dup
729: invokespecial #28
732: ldc           #29
734: invokevirtual #30
737: aload         12
739: invokevirtual #36
742: ldc           #32
744: invokevirtual #30
747: getstatic     #37
750: invokevirtual #36
753: ldc           #29
755: invokevirtual #30
758: invokevirtual #33
761: aload         12
763: getstatic     #37
766: invokevirtual #38
769: invokestatic  #34
772: new           #27
775: dup
776: invokespecial #28
779: ldc           #29
781: invokevirtual #30
784: iload         13
786: invokevirtual #35
789: ldc           #32
791: invokevirtual #30
794: iconst_0
795: invokevirtual #35
798: ldc           #29
800: invokevirtual #30
803: invokevirtual #33
806: iload         13
808: ifne          815
811: iconst_1
812: goto          816
815: iconst_0
816: invokestatic  #34
819: new           #27
822: dup
823: invokespecial #28
826: ldc           #29
828: invokevirtual #30
831: iload         14
833: invokevirtual #35
836: ldc           #32
838: invokevirtual #30
841: iconst_0
842: invokevirtual #35
845: ldc           #29
847: invokevirtual #30
850: invokevirtual #33
853: iload         14
855: ifne          862
858: iconst_1
859: goto          863
862: iconst_0
863: invokestatic  #34
866: new           #27
869: dup
870: invokespecial #28
873: ldc           #29
875: invokevirtual #30
878: aload         19
880: invokevirtual #30
883: ldc           #90
885: invokevirtual #30
888: invokevirtual #33
891: aload         19
893: ldc           #9
895: invokestatic  #91
898: new           #27
901: dup
902: invokespecial #28
905: ldc           #29
907: invokevirtual #30
910: aload         20
912: invokevirtual #30
915: ldc           #90
917: invokevirtual #30
920: invokevirtual #33
923: aload         20
925: ldc           #9
927: invokestatic  #91
930: aload         23
932: invokestatic  #39
935: aload         24
937: invokestatic  #39
940: aload         25
942: invokestatic  #39
945: new           #27
948: dup
949: invokespecial #28
952: ldc           #29
954: invokevirtual #30
957: aload         26
959: invokevirtual #30
962: ldc           #92
964: invokevirtual #30
967: invokevirtual #33
970: aload         26
972: ldc           #17
974: invokestatic  #91
977: aload         27
979: invokestatic  #39
982: new           #27
985: dup
986: invokespecial #28
989: ldc           #29
991: invokevirtual #30
994: iload         28
996: invokevirtual #35
999: ldc           #32
1001: invokevirtual #30
1004: iconst_0
1005: invokevirtual #35
1008: ldc           #29
1010: invokevirtual #30
1013: invokevirtual #33
1016: iload         28
1018: ifne          1025
1021: iconst_1
1022: goto          1026
1025: iconst_0
1026: invokestatic  #34
1029: aload         29
1031: invokestatic  #39
1034: aload         30
1036: invokestatic  #39
1039: aload         31
1041: invokestatic  #39
1044: aload         32
1046: invokestatic  #39
1049: aload         33
1051: invokestatic  #39
1054: new           #27
1057: dup
1058: invokespecial #28
1061: ldc           #29
1063: invokevirtual #30
1066: iload         34
1068: invokevirtual #35
1071: ldc           #32
1073: invokevirtual #30
1076: iconst_0
1077: invokevirtual #35
1080: ldc           #29
1082: invokevirtual #30
1085: invokevirtual #33
1088: iload         34
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #34
1101: new           #27
1104: dup
1105: invokespecial #28
1108: ldc           #29
1110: invokevirtual #30
1113: iload         36
1115: invokevirtual #35
1118: ldc           #32
1120: invokevirtual #30
1123: iconst_0
1124: invokevirtual #35
1127: ldc           #29
1129: invokevirtual #30
1132: invokevirtual #33
1135: iload         36
1137: ifne          1144
1140: iconst_1
1141: goto          1145
1144: iconst_0
1145: invokestatic  #34
1148: aload         37
1150: invokestatic  #39
1153: aload         38
1155: invokestatic  #39
1158: aload         39
1160: invokestatic  #39
1163: aload         40
1165: invokestatic  #39
1168: new           #27
1171: dup
1172: invokespecial #28
1175: ldc           #29
1177: invokevirtual #30
1180: aload         43
1182: invokevirtual #30
1185: ldc           #93
1187: invokevirtual #30
1190: invokevirtual #33
1193: aload         43
1195: ldc           #52
1197: invokestatic  #91
1200: new           #27
1203: dup
1204: invokespecial #28
1207: ldc           #29
1209: invokevirtual #30
1212: aload         44
1214: invokevirtual #30
1217: ldc           #94
1219: invokevirtual #30
1222: invokevirtual #33
1225: aload         44
1227: ldc           #95
1229: invokestatic  #91
1232: new           #27
1235: dup
1236: invokespecial #28
1239: ldc           #29
1241: invokevirtual #30
1244: iload         47
1246: invokevirtual #31
1249: ldc           #32
1251: invokevirtual #30
1254: iconst_1
1255: invokevirtual #31
1258: ldc           #29
1260: invokevirtual #30
1263: invokevirtual #33
1266: iload         47
1268: iconst_1
1269: if_icmpne     1276
1272: iconst_1
1273: goto          1277
1276: iconst_0
1277: invokestatic  #34
1280: new           #27
1283: dup
1284: invokespecial #28
1287: ldc           #29
1289: invokevirtual #30
1292: iload         48
1294: invokevirtual #35
1297: ldc           #32
1299: invokevirtual #30
1302: iconst_0
1303: invokevirtual #35
1306: ldc           #29
1308: invokevirtual #30
1311: invokevirtual #33
1314: iload         48
1316: ifne          1323
1319: iconst_1
1320: goto          1324
1323: iconst_0
1324: invokestatic  #34
1327: new           #27
1330: dup
1331: invokespecial #28
1334: ldc           #29
1336: invokevirtual #30
1339: iload         51
1341: invokevirtual #31
1344: ldc           #32
1346: invokevirtual #30
1349: iconst_1
1350: invokevirtual #31
1353: ldc           #29
1355: invokevirtual #30
1358: invokevirtual #33
1361: iload         51
1363: iconst_1
1364: if_icmpne     1371
1367: iconst_1
1368: goto          1372
1371: iconst_0
1372: invokestatic  #34
1375: new           #27
1378: dup
1379: invokespecial #28
1382: ldc           #29
1384: invokevirtual #30
1387: aload         52
1389: invokevirtual #36
1392: ldc           #32
1394: invokevirtual #30
1397: getstatic     #127
1400: invokevirtual #36
1403: ldc           #29
1405: invokevirtual #30
1408: invokevirtual #33
1411: aload         52
1413: getstatic     #127
1416: invokevirtual #38
1419: invokestatic  #34
1422: aload         53
1424: invokestatic  #39
1427: aload         54
1429: invokestatic  #39
1432: return
Exception table:
from    to  target type
510   525   528   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test19
Start line: 1070
End line: 1093
Method source code: 
    public void test19() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test19");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[^]\n<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "[hi!*=#root]", ":matches(null", ":nth-of-type(1n+1)");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Attribute attribute9 = new org.jsoup.nodes.Attribute("#root", "data-");
        boolean boolean10 = attribute9.isDataAttribute();
        org.jsoup.nodes.Document document13 = org.jsoup.parser.Parser.parseBodyFragment("#text", "data-");
        org.jsoup.nodes.Document document14 = document13.ownerDocument();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document14.getOutputSettings();
        boolean boolean16 = attribute9.shouldCollapseAttribute(outputSettings15);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, 100, outputSettings15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(document14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #172
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #173
30: ldc           #174
32: ldc           #175
34: ldc           #176
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #16
45: dup
46: ldc           #17
48: ldc           #18
50: invokespecial #19
53: astore_3
54: aload_3
55: invokevirtual #142
58: istore        4
60: ldc           #74
62: ldc           #18
64: invokestatic  #66
67: astore        5
69: aload         5
71: invokevirtual #177
74: astore        6
76: aload         6
78: invokevirtual #101
81: astore        7
83: aload_3
84: aload         7
86: invokevirtual #20
89: istore        8
91: aload_1
92: aload_2
93: bipush        100
95: aload         7
97: invokevirtual #23
100: ldc           #24
102: invokestatic  #25
105: goto          110
108: astore        9
110: new           #27
113: dup
114: invokespecial #28
117: ldc           #29
119: invokevirtual #30
122: iload         4
124: invokevirtual #35
127: ldc           #32
129: invokevirtual #30
132: iconst_0
133: invokevirtual #35
136: ldc           #29
138: invokevirtual #30
141: invokevirtual #33
144: iload         4
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #34
157: aload         5
159: invokestatic  #39
162: aload         6
164: invokestatic  #39
167: aload         7
169: invokestatic  #39
172: new           #27
175: dup
176: invokespecial #28
179: ldc           #29
181: invokevirtual #30
184: iload         8
186: invokevirtual #35
189: ldc           #32
191: invokevirtual #30
194: iconst_0
195: invokevirtual #35
198: ldc           #29
200: invokevirtual #30
203: invokevirtual #33
206: iload         8
208: ifne          215
211: iconst_1
212: goto          216
215: iconst_0
216: invokestatic  #34
219: return
Exception table:
from    to  target type
91   105   108   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test20
Start line: 1096
End line: 1120
Method source code: 
    public void test20() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test20");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings8 = new org.jsoup.nodes.Document.OutputSettings();
        int int9 = outputSettings8.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder10 = outputSettings8.encoder();
        documentType4.outerHtmlTail(stringBuilder6, (int) (short) 1, outputSettings8);
        java.lang.String str12 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = null;
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder13, (int) '#', outputSettings15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#doctype" + "'", str12, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #178
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #97
44: astore_2
45: aconst_null
46: astore_3
47: new           #13
50: dup
51: invokespecial #14
54: astore        4
56: aload         4
58: invokevirtual #15
61: istore        5
63: aload         4
65: invokevirtual #146
68: astore        6
70: aload_1
71: aload_3
72: iconst_1
73: aload         4
75: invokevirtual #87
78: aload_1
79: invokevirtual #97
82: astore        7
84: aconst_null
85: astore        8
87: aconst_null
88: astore        9
90: aload_1
91: aload         8
93: bipush        35
95: aload         9
97: invokevirtual #23
100: ldc           #24
102: invokestatic  #25
105: goto          110
108: astore        10
110: new           #27
113: dup
114: invokespecial #28
117: ldc           #29
119: invokevirtual #30
122: aload_2
123: invokevirtual #30
126: ldc           #102
128: invokevirtual #30
131: invokevirtual #33
134: aload_2
135: ldc           #103
137: invokestatic  #91
140: new           #27
143: dup
144: invokespecial #28
147: ldc           #29
149: invokevirtual #30
152: iload         5
154: invokevirtual #31
157: ldc           #32
159: invokevirtual #30
162: iconst_1
163: invokevirtual #31
166: ldc           #29
168: invokevirtual #30
171: invokevirtual #33
174: iload         5
176: iconst_1
177: if_icmpne     184
180: iconst_1
181: goto          185
184: iconst_0
185: invokestatic  #34
188: aload         6
190: invokestatic  #39
193: new           #27
196: dup
197: invokespecial #28
200: ldc           #29
202: invokevirtual #30
205: aload         7
207: invokevirtual #30
210: ldc           #102
212: invokevirtual #30
215: invokevirtual #33
218: aload         7
220: ldc           #103
222: invokestatic  #91
225: return
Exception table:
from    to  target type
90   105   108   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test21
Start line: 1123
End line: 1192
Method source code: 
    public void test21() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test21");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[#data!=:last-child]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]", " #comment=\"#root\"", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) 'a', outputSettings59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #180
30: ldc           #131
32: ldc           #108
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #58
45: dup
46: ldc           #9
48: ldc           #59
50: invokespecial #60
53: astore_3
54: aload_3
55: invokevirtual #61
58: astore        4
60: aload_3
61: ldc           #62
63: invokevirtual #63
66: astore        5
68: aconst_null
69: astore        6
71: new           #64
74: dup
75: invokespecial #65
78: astore        7
80: ldc           #9
82: ldc           #9
84: invokestatic  #66
87: astore        8
89: ldc           #52
91: invokestatic  #53
94: astore        9
96: aload         9
98: ldc           #9
100: invokevirtual #54
103: astore        10
105: aload         10
107: invokevirtual #67
110: astore        11
112: aload         10
114: ldc           #9
116: invokevirtual #68
119: astore        12
121: aload         7
123: aload         8
125: aload         10
127: invokevirtual #69
130: istore        13
132: ldc           #59
134: ldc           #52
136: invokestatic  #70
139: astore        14
141: aload         14
143: bipush        100
145: invokevirtual #71
148: astore        15
150: aload         14
152: ldc           #72
154: invokevirtual #73
157: astore        16
159: ldc           #74
161: ldc           #52
163: invokestatic  #70
166: astore        17
168: aload         17
170: ldc           #75
172: invokevirtual #76
175: astore        18
177: aload         7
179: aload         14
181: aload         17
183: invokevirtual #69
186: istore        19
188: new           #77
191: dup
192: ldc           #52
194: ldc           #52
196: invokespecial #78
199: astore        20
201: aload         20
203: ldc           #52
205: invokevirtual #79
208: istore        21
210: ldc           #52
212: invokestatic  #53
215: astore        22
217: aload         22
219: ldc           #9
221: invokevirtual #54
224: astore        23
226: aload         22
228: invokevirtual #80
231: astore        24
233: aload         20
235: aload         24
237: invokevirtual #81
240: astore        25
242: aconst_null
243: astore        26
245: aconst_null
246: astore        27
248: aload         20
250: aload         26
252: bipush        10
254: aload         27
256: invokevirtual #82
259: aload         20
261: invokevirtual #83
264: astore        28
266: aload         20
268: invokevirtual #84
271: astore        29
273: aconst_null
274: astore        30
276: new           #13
279: dup
280: invokespecial #14
283: astore        31
285: aload         31
287: invokevirtual #15
290: istore        32
292: aload         20
294: aload         30
296: iconst_0
297: aload         31
299: invokevirtual #82
302: aload         17
304: aload         31
306: invokevirtual #85
309: istore        33
311: aload_3
312: aload         6
314: bipush        100
316: aload         31
318: invokevirtual #86
321: aload_1
322: aload_2
323: bipush        97
325: aload         31
327: invokevirtual #23
330: ldc           #24
332: invokestatic  #25
335: goto          340
338: astore        34
340: new           #27
343: dup
344: invokespecial #28
347: ldc           #29
349: invokevirtual #30
352: aload         4
354: invokevirtual #30
357: ldc           #90
359: invokevirtual #30
362: invokevirtual #33
365: aload         4
367: ldc           #9
369: invokestatic  #91
372: new           #27
375: dup
376: invokespecial #28
379: ldc           #29
381: invokevirtual #30
384: aload         5
386: invokevirtual #30
389: ldc           #90
391: invokevirtual #30
394: invokevirtual #33
397: aload         5
399: ldc           #9
401: invokestatic  #91
404: aload         8
406: invokestatic  #39
409: aload         9
411: invokestatic  #39
414: aload         10
416: invokestatic  #39
419: new           #27
422: dup
423: invokespecial #28
426: ldc           #29
428: invokevirtual #30
431: aload         11
433: invokevirtual #30
436: ldc           #92
438: invokevirtual #30
441: invokevirtual #33
444: aload         11
446: ldc           #17
448: invokestatic  #91
451: aload         12
453: invokestatic  #39
456: new           #27
459: dup
460: invokespecial #28
463: ldc           #29
465: invokevirtual #30
468: iload         13
470: invokevirtual #35
473: ldc           #32
475: invokevirtual #30
478: iconst_0
479: invokevirtual #35
482: ldc           #29
484: invokevirtual #30
487: invokevirtual #33
490: iload         13
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #34
503: aload         14
505: invokestatic  #39
508: aload         15
510: invokestatic  #39
513: aload         16
515: invokestatic  #39
518: aload         17
520: invokestatic  #39
523: aload         18
525: invokestatic  #39
528: new           #27
531: dup
532: invokespecial #28
535: ldc           #29
537: invokevirtual #30
540: iload         19
542: invokevirtual #35
545: ldc           #32
547: invokevirtual #30
550: iconst_0
551: invokevirtual #35
554: ldc           #29
556: invokevirtual #30
559: invokevirtual #33
562: iload         19
564: ifne          571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #34
575: new           #27
578: dup
579: invokespecial #28
582: ldc           #29
584: invokevirtual #30
587: iload         21
589: invokevirtual #35
592: ldc           #32
594: invokevirtual #30
597: iconst_0
598: invokevirtual #35
601: ldc           #29
603: invokevirtual #30
606: invokevirtual #33
609: iload         21
611: ifne          618
614: iconst_1
615: goto          619
618: iconst_0
619: invokestatic  #34
622: aload         22
624: invokestatic  #39
627: aload         23
629: invokestatic  #39
632: aload         24
634: invokestatic  #39
637: aload         25
639: invokestatic  #39
642: new           #27
645: dup
646: invokespecial #28
649: ldc           #29
651: invokevirtual #30
654: aload         28
656: invokevirtual #30
659: ldc           #93
661: invokevirtual #30
664: invokevirtual #33
667: aload         28
669: ldc           #52
671: invokestatic  #91
674: new           #27
677: dup
678: invokespecial #28
681: ldc           #29
683: invokevirtual #30
686: aload         29
688: invokevirtual #30
691: ldc           #94
693: invokevirtual #30
696: invokevirtual #33
699: aload         29
701: ldc           #95
703: invokestatic  #91
706: new           #27
709: dup
710: invokespecial #28
713: ldc           #29
715: invokevirtual #30
718: iload         32
720: invokevirtual #31
723: ldc           #32
725: invokevirtual #30
728: iconst_1
729: invokevirtual #31
732: ldc           #29
734: invokevirtual #30
737: invokevirtual #33
740: iload         32
742: iconst_1
743: if_icmpne     750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #34
754: new           #27
757: dup
758: invokespecial #28
761: ldc           #29
763: invokevirtual #30
766: iload         33
768: invokevirtual #35
771: ldc           #32
773: invokevirtual #30
776: iconst_0
777: invokevirtual #35
780: ldc           #29
782: invokevirtual #30
785: invokevirtual #33
788: iload         33
790: ifne          797
793: iconst_1
794: goto          798
797: iconst_0
798: invokestatic  #34
801: return
Exception table:
from    to  target type
321   335   338   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test22
Start line: 1195
End line: 1288
Method source code: 
    public void test22() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test22");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        java.lang.String str70 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder71 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = new org.jsoup.nodes.Document.OutputSettings();
        int int74 = outputSettings73.indentAmount();
        org.jsoup.nodes.Attribute attribute77 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean79 = attribute77.shouldCollapseAttribute(outputSettings78);
        org.jsoup.nodes.Entities.EscapeMode escapeMode80 = outputSettings78.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings81 = outputSettings73.escapeMode(escapeMode80);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax82 = org.jsoup.nodes.Document.OutputSettings.Syntax.xml;
        org.jsoup.nodes.Document.OutputSettings outputSettings83 = outputSettings81.syntax(syntax82);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder71, (int) ' ', outputSettings83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#doctype" + "'", str70, "#doctype");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + escapeMode80 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode80.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings81);
        org.junit.Assert.assertTrue("'" + syntax82 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.xml + "'", syntax82.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.xml));
        org.junit.Assert.assertNotNull(outputSettings83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #58
45: dup
46: ldc           #9
48: ldc           #59
50: invokespecial #60
53: astore_3
54: aload_3
55: invokevirtual #61
58: astore        4
60: aload_3
61: ldc           #62
63: invokevirtual #63
66: astore        5
68: aconst_null
69: astore        6
71: new           #64
74: dup
75: invokespecial #65
78: astore        7
80: ldc           #9
82: ldc           #9
84: invokestatic  #66
87: astore        8
89: ldc           #52
91: invokestatic  #53
94: astore        9
96: aload         9
98: ldc           #9
100: invokevirtual #54
103: astore        10
105: aload         10
107: invokevirtual #67
110: astore        11
112: aload         10
114: ldc           #9
116: invokevirtual #68
119: astore        12
121: aload         7
123: aload         8
125: aload         10
127: invokevirtual #69
130: istore        13
132: ldc           #59
134: ldc           #52
136: invokestatic  #70
139: astore        14
141: aload         14
143: bipush        100
145: invokevirtual #71
148: astore        15
150: aload         14
152: ldc           #72
154: invokevirtual #73
157: astore        16
159: ldc           #74
161: ldc           #52
163: invokestatic  #70
166: astore        17
168: aload         17
170: ldc           #75
172: invokevirtual #76
175: astore        18
177: aload         7
179: aload         14
181: aload         17
183: invokevirtual #69
186: istore        19
188: new           #77
191: dup
192: ldc           #52
194: ldc           #52
196: invokespecial #78
199: astore        20
201: aload         20
203: ldc           #52
205: invokevirtual #79
208: istore        21
210: ldc           #52
212: invokestatic  #53
215: astore        22
217: aload         22
219: ldc           #9
221: invokevirtual #54
224: astore        23
226: aload         22
228: invokevirtual #80
231: astore        24
233: aload         20
235: aload         24
237: invokevirtual #81
240: astore        25
242: aconst_null
243: astore        26
245: aconst_null
246: astore        27
248: aload         20
250: aload         26
252: bipush        10
254: aload         27
256: invokevirtual #82
259: aload         20
261: invokevirtual #83
264: astore        28
266: aload         20
268: invokevirtual #84
271: astore        29
273: aconst_null
274: astore        30
276: new           #13
279: dup
280: invokespecial #14
283: astore        31
285: aload         31
287: invokevirtual #15
290: istore        32
292: aload         20
294: aload         30
296: iconst_0
297: aload         31
299: invokevirtual #82
302: aload         17
304: aload         31
306: invokevirtual #85
309: istore        33
311: aload_3
312: aload         6
314: bipush        100
316: aload         31
318: invokevirtual #86
321: aload_1
322: aload_2
323: iconst_1
324: aload         31
326: invokevirtual #87
329: aconst_null
330: astore        34
332: new           #13
335: dup
336: invokespecial #14
339: astore        35
341: aload         35
343: invokevirtual #15
346: istore        36
348: aload_1
349: aload         34
351: iconst_0
352: aload         35
354: invokevirtual #87
357: aload_1
358: invokevirtual #97
361: astore        37
363: aconst_null
364: astore        38
366: new           #13
369: dup
370: invokespecial #14
373: astore        39
375: aload         39
377: invokevirtual #15
380: istore        40
382: new           #16
385: dup
386: ldc           #17
388: ldc           #18
390: invokespecial #19
393: astore        41
395: new           #13
398: dup
399: invokespecial #14
402: astore        42
404: aload         41
406: aload         42
408: invokevirtual #20
411: istore        43
413: aload         42
415: invokevirtual #21
418: astore        44
420: aload         39
422: aload         44
424: invokevirtual #22
427: astore        45
429: getstatic     #182
432: astore        46
434: aload         45
436: aload         46
438: invokevirtual #138
441: astore        47
443: aload_1
444: aload         38
446: bipush        32
448: aload         47
450: invokevirtual #23
453: ldc           #24
455: invokestatic  #25
458: goto          463
461: astore        48
463: new           #27
466: dup
467: invokespecial #28
470: ldc           #29
472: invokevirtual #30
475: aload         4
477: invokevirtual #30
480: ldc           #90
482: invokevirtual #30
485: invokevirtual #33
488: aload         4
490: ldc           #9
492: invokestatic  #91
495: new           #27
498: dup
499: invokespecial #28
502: ldc           #29
504: invokevirtual #30
507: aload         5
509: invokevirtual #30
512: ldc           #90
514: invokevirtual #30
517: invokevirtual #33
520: aload         5
522: ldc           #9
524: invokestatic  #91
527: aload         8
529: invokestatic  #39
532: aload         9
534: invokestatic  #39
537: aload         10
539: invokestatic  #39
542: new           #27
545: dup
546: invokespecial #28
549: ldc           #29
551: invokevirtual #30
554: aload         11
556: invokevirtual #30
559: ldc           #92
561: invokevirtual #30
564: invokevirtual #33
567: aload         11
569: ldc           #17
571: invokestatic  #91
574: aload         12
576: invokestatic  #39
579: new           #27
582: dup
583: invokespecial #28
586: ldc           #29
588: invokevirtual #30
591: iload         13
593: invokevirtual #35
596: ldc           #32
598: invokevirtual #30
601: iconst_0
602: invokevirtual #35
605: ldc           #29
607: invokevirtual #30
610: invokevirtual #33
613: iload         13
615: ifne          622
618: iconst_1
619: goto          623
622: iconst_0
623: invokestatic  #34
626: aload         14
628: invokestatic  #39
631: aload         15
633: invokestatic  #39
636: aload         16
638: invokestatic  #39
641: aload         17
643: invokestatic  #39
646: aload         18
648: invokestatic  #39
651: new           #27
654: dup
655: invokespecial #28
658: ldc           #29
660: invokevirtual #30
663: iload         19
665: invokevirtual #35
668: ldc           #32
670: invokevirtual #30
673: iconst_0
674: invokevirtual #35
677: ldc           #29
679: invokevirtual #30
682: invokevirtual #33
685: iload         19
687: ifne          694
690: iconst_1
691: goto          695
694: iconst_0
695: invokestatic  #34
698: new           #27
701: dup
702: invokespecial #28
705: ldc           #29
707: invokevirtual #30
710: iload         21
712: invokevirtual #35
715: ldc           #32
717: invokevirtual #30
720: iconst_0
721: invokevirtual #35
724: ldc           #29
726: invokevirtual #30
729: invokevirtual #33
732: iload         21
734: ifne          741
737: iconst_1
738: goto          742
741: iconst_0
742: invokestatic  #34
745: aload         22
747: invokestatic  #39
750: aload         23
752: invokestatic  #39
755: aload         24
757: invokestatic  #39
760: aload         25
762: invokestatic  #39
765: new           #27
768: dup
769: invokespecial #28
772: ldc           #29
774: invokevirtual #30
777: aload         28
779: invokevirtual #30
782: ldc           #93
784: invokevirtual #30
787: invokevirtual #33
790: aload         28
792: ldc           #52
794: invokestatic  #91
797: new           #27
800: dup
801: invokespecial #28
804: ldc           #29
806: invokevirtual #30
809: aload         29
811: invokevirtual #30
814: ldc           #94
816: invokevirtual #30
819: invokevirtual #33
822: aload         29
824: ldc           #95
826: invokestatic  #91
829: new           #27
832: dup
833: invokespecial #28
836: ldc           #29
838: invokevirtual #30
841: iload         32
843: invokevirtual #31
846: ldc           #32
848: invokevirtual #30
851: iconst_1
852: invokevirtual #31
855: ldc           #29
857: invokevirtual #30
860: invokevirtual #33
863: iload         32
865: iconst_1
866: if_icmpne     873
869: iconst_1
870: goto          874
873: iconst_0
874: invokestatic  #34
877: new           #27
880: dup
881: invokespecial #28
884: ldc           #29
886: invokevirtual #30
889: iload         33
891: invokevirtual #35
894: ldc           #32
896: invokevirtual #30
899: iconst_0
900: invokevirtual #35
903: ldc           #29
905: invokevirtual #30
908: invokevirtual #33
911: iload         33
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #34
924: new           #27
927: dup
928: invokespecial #28
931: ldc           #29
933: invokevirtual #30
936: iload         36
938: invokevirtual #31
941: ldc           #32
943: invokevirtual #30
946: iconst_1
947: invokevirtual #31
950: ldc           #29
952: invokevirtual #30
955: invokevirtual #33
958: iload         36
960: iconst_1
961: if_icmpne     968
964: iconst_1
965: goto          969
968: iconst_0
969: invokestatic  #34
972: new           #27
975: dup
976: invokespecial #28
979: ldc           #29
981: invokevirtual #30
984: aload         37
986: invokevirtual #30
989: ldc           #102
991: invokevirtual #30
994: invokevirtual #33
997: aload         37
999: ldc           #103
1001: invokestatic  #91
1004: new           #27
1007: dup
1008: invokespecial #28
1011: ldc           #29
1013: invokevirtual #30
1016: iload         40
1018: invokevirtual #31
1021: ldc           #32
1023: invokevirtual #30
1026: iconst_1
1027: invokevirtual #31
1030: ldc           #29
1032: invokevirtual #30
1035: invokevirtual #33
1038: iload         40
1040: iconst_1
1041: if_icmpne     1048
1044: iconst_1
1045: goto          1049
1048: iconst_0
1049: invokestatic  #34
1052: new           #27
1055: dup
1056: invokespecial #28
1059: ldc           #29
1061: invokevirtual #30
1064: iload         43
1066: invokevirtual #35
1069: ldc           #32
1071: invokevirtual #30
1074: iconst_0
1075: invokevirtual #35
1078: ldc           #29
1080: invokevirtual #30
1083: invokevirtual #33
1086: iload         43
1088: ifne          1095
1091: iconst_1
1092: goto          1096
1095: iconst_0
1096: invokestatic  #34
1099: new           #27
1102: dup
1103: invokespecial #28
1106: ldc           #29
1108: invokevirtual #30
1111: aload         44
1113: invokevirtual #36
1116: ldc           #32
1118: invokevirtual #30
1121: getstatic     #37
1124: invokevirtual #36
1127: ldc           #29
1129: invokevirtual #30
1132: invokevirtual #33
1135: aload         44
1137: getstatic     #37
1140: invokevirtual #38
1143: invokestatic  #34
1146: aload         45
1148: invokestatic  #39
1151: new           #27
1154: dup
1155: invokespecial #28
1158: ldc           #29
1160: invokevirtual #30
1163: aload         46
1165: invokevirtual #36
1168: ldc           #32
1170: invokevirtual #30
1173: getstatic     #182
1176: invokevirtual #36
1179: ldc           #29
1181: invokevirtual #30
1184: invokevirtual #33
1187: aload         46
1189: getstatic     #182
1192: invokevirtual #50
1195: invokestatic  #34
1198: aload         47
1200: invokestatic  #39
1203: return
Exception table:
from    to  target type
443   458   461   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test23
Start line: 1291
End line: 1314
Method source code: 
    public void test23() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test23");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("\n<!--<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>-->", "", "[$=:nth-of-type(10n+10)]", ":last-of-type");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.DataNode dataNode9 = new org.jsoup.nodes.DataNode("[^]", "<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>");
        org.jsoup.nodes.DataNode dataNode11 = dataNode9.setWholeData(" ");
        java.lang.StringBuilder stringBuilder12 = null;
        org.jsoup.nodes.Attribute attribute16 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings17 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean18 = attribute16.shouldCollapseAttribute(outputSettings17);
        org.jsoup.nodes.Document.OutputSettings outputSettings20 = outputSettings17.outline(true);
        dataNode11.outerHtmlTail(stringBuilder12, (int) '#', outputSettings20);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) 'a', outputSettings20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(dataNode11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(outputSettings20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #183
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #184
30: ldc           #9
32: ldc           #185
34: ldc           #186
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #187
45: dup
46: ldc           #59
48: ldc           #188
50: invokespecial #189
53: astore_3
54: aload_3
55: ldc           #72
57: invokevirtual #190
60: astore        4
62: aconst_null
63: astore        5
65: new           #16
68: dup
69: ldc           #17
71: ldc           #18
73: invokespecial #19
76: astore        6
78: new           #13
81: dup
82: invokespecial #14
85: astore        7
87: aload         6
89: aload         7
91: invokevirtual #20
94: istore        8
96: aload         7
98: iconst_1
99: invokevirtual #44
102: astore        9
104: aload         4
106: aload         5
108: bipush        35
110: aload         9
112: invokevirtual #191
115: aload_1
116: aload_2
117: bipush        97
119: aload         9
121: invokevirtual #23
124: ldc           #24
126: invokestatic  #25
129: goto          134
132: astore        10
134: aload         4
136: invokestatic  #39
139: new           #27
142: dup
143: invokespecial #28
146: ldc           #29
148: invokevirtual #30
151: iload         8
153: invokevirtual #35
156: ldc           #32
158: invokevirtual #30
161: iconst_0
162: invokevirtual #35
165: ldc           #29
167: invokevirtual #30
170: invokevirtual #33
173: iload         8
175: ifne          182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #34
186: aload         9
188: invokestatic  #39
191: return
Exception table:
from    to  target type
115   129   132   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test24
Start line: 1317
End line: 1325
Method source code: 
    public void test24() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test24");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.outerHtml();
        java.lang.String str6 = documentType4.nodeName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str5, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "#doctype" + "'", str6, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #192
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #110
44: astore_2
45: aload_1
46: invokevirtual #97
49: astore_3
50: new           #27
53: dup
54: invokespecial #28
57: ldc           #29
59: invokevirtual #30
62: aload_2
63: invokevirtual #30
66: ldc           #114
68: invokevirtual #30
71: invokevirtual #33
74: aload_2
75: ldc           #115
77: invokestatic  #91
80: new           #27
83: dup
84: invokespecial #28
87: ldc           #29
89: invokevirtual #30
92: aload_3
93: invokevirtual #30
96: ldc           #102
98: invokevirtual #30
101: invokevirtual #33
104: aload_3
105: ldc           #103
107: invokestatic  #91
110: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test25
Start line: 1328
End line: 1437
Method source code: 
    public void test25() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test25");
        org.jsoup.nodes.Document document2 = org.jsoup.parser.Parser.parseBodyFragmentRelaxed("hi!", "[^]");
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element6 = document4.toggleClass("");
        org.jsoup.nodes.Node node7 = document4.clone();
        boolean boolean8 = document4.isBlock();
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = document10.dataset();
        java.lang.String str12 = document10.text();
        document4.setParentNode((org.jsoup.nodes.Node) document10);
        org.jsoup.nodes.Element element14 = document2.prependChild((org.jsoup.nodes.Node) document4);
        org.jsoup.select.Elements elements15 = element14.getAllElements();
        org.jsoup.nodes.Element element17 = element14.child(1);
        java.lang.StringBuilder stringBuilder18 = null;
        org.jsoup.nodes.DocumentType documentType24 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder25 = null;
        org.jsoup.nodes.TextNode textNode29 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str30 = textNode29.getWholeText();
        java.lang.String str32 = textNode29.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder33 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType35 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document38 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element42 = document40.toggleClass("");
        java.lang.String str43 = element42.tagName();
        org.jsoup.nodes.Element element45 = element42.toggleClass("");
        boolean boolean46 = isOnlyOfType35.matches((org.jsoup.nodes.Element) document38, element42);
        org.jsoup.nodes.Document document49 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements51 = document49.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element53 = document49.text(" ");
        org.jsoup.nodes.Document document56 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements58 = document56.getElementsContainingText("#data");
        boolean boolean59 = isOnlyOfType35.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document56);
        org.jsoup.nodes.Comment comment62 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean64 = comment62.hasAttr("hi!");
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element68 = document66.toggleClass("");
        org.jsoup.nodes.Node node69 = document66.clone();
        org.jsoup.nodes.Node node70 = comment62.doClone(node69);
        java.lang.StringBuilder stringBuilder71 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = null;
        comment62.outerHtmlTail(stringBuilder71, 10, outputSettings73);
        java.lang.String str75 = comment62.getData();
        java.lang.String str76 = comment62.nodeName();
        java.lang.StringBuilder stringBuilder77 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings79 = new org.jsoup.nodes.Document.OutputSettings();
        int int80 = outputSettings79.indentAmount();
        comment62.outerHtmlTail(stringBuilder77, 0, outputSettings79);
        boolean boolean82 = document56.equals((java.lang.Object) outputSettings79);
        textNode29.outerHtmlTail(stringBuilder33, (int) (short) 100, outputSettings79);
        documentType24.outerHtmlTail(stringBuilder25, (int) (short) 1, outputSettings79);
        java.lang.StringBuilder stringBuilder85 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings87 = new org.jsoup.nodes.Document.OutputSettings();
        int int88 = outputSettings87.indentAmount();
        documentType24.outerHtmlTail(stringBuilder85, 0, outputSettings87);
        org.jsoup.nodes.Entities.EscapeMode escapeMode90 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings91 = outputSettings87.escapeMode(escapeMode90);
        org.jsoup.nodes.Document.OutputSettings outputSettings93 = outputSettings91.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings95 = outputSettings93.prettyPrint(true);
        int int96 = outputSettings93.indentAmount();
        // The following exception was thrown during execution in test generation
        try {
            element14.outerHtmlTail(stringBuilder18, (int) '#', outputSettings93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document2);
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(elements15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#root" + "'", str43, "#root");
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertNotNull(elements51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(elements58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "#comment" + "'", str76, "#comment");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode90 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode90.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings91);
        org.junit.Assert.assertNotNull(outputSettings93);
        org.junit.Assert.assertNotNull(outputSettings95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #193
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #52
26: ldc           #59
28: invokestatic  #194
31: astore_1
32: ldc           #52
34: invokestatic  #53
37: astore_2
38: aload_2
39: ldc           #9
41: invokevirtual #54
44: astore_3
45: aload_2
46: invokevirtual #80
49: astore        4
51: aload_2
52: invokevirtual #195
55: istore        5
57: ldc           #52
59: invokestatic  #53
62: astore        6
64: aload         6
66: invokevirtual #196
69: astore        7
71: aload         6
73: invokevirtual #197
76: astore        8
78: aload_2
79: aload         6
81: invokevirtual #198
84: aload_1
85: aload_2
86: invokevirtual #199
89: astore        9
91: aload         9
93: invokevirtual #200
96: astore        10
98: aload         9
100: iconst_1
101: invokevirtual #201
104: astore        11
106: aconst_null
107: astore        12
109: new           #8
112: dup
113: ldc           #9
115: ldc           #10
117: ldc           #11
119: ldc           #9
121: invokespecial #12
124: astore        13
126: aconst_null
127: astore        14
129: new           #58
132: dup
133: ldc           #9
135: ldc           #59
137: invokespecial #60
140: astore        15
142: aload         15
144: invokevirtual #61
147: astore        16
149: aload         15
151: ldc           #62
153: invokevirtual #63
156: astore        17
158: aconst_null
159: astore        18
161: new           #64
164: dup
165: invokespecial #65
168: astore        19
170: ldc           #9
172: ldc           #9
174: invokestatic  #66
177: astore        20
179: ldc           #52
181: invokestatic  #53
184: astore        21
186: aload         21
188: ldc           #9
190: invokevirtual #54
193: astore        22
195: aload         22
197: invokevirtual #67
200: astore        23
202: aload         22
204: ldc           #9
206: invokevirtual #68
209: astore        24
211: aload         19
213: aload         20
215: aload         22
217: invokevirtual #69
220: istore        25
222: ldc           #59
224: ldc           #52
226: invokestatic  #70
229: astore        26
231: aload         26
233: bipush        100
235: invokevirtual #71
238: astore        27
240: aload         26
242: ldc           #72
244: invokevirtual #73
247: astore        28
249: ldc           #74
251: ldc           #52
253: invokestatic  #70
256: astore        29
258: aload         29
260: ldc           #75
262: invokevirtual #76
265: astore        30
267: aload         19
269: aload         26
271: aload         29
273: invokevirtual #69
276: istore        31
278: new           #77
281: dup
282: ldc           #52
284: ldc           #52
286: invokespecial #78
289: astore        32
291: aload         32
293: ldc           #52
295: invokevirtual #79
298: istore        33
300: ldc           #52
302: invokestatic  #53
305: astore        34
307: aload         34
309: ldc           #9
311: invokevirtual #54
314: astore        35
316: aload         34
318: invokevirtual #80
321: astore        36
323: aload         32
325: aload         36
327: invokevirtual #81
330: astore        37
332: aconst_null
333: astore        38
335: aconst_null
336: astore        39
338: aload         32
340: aload         38
342: bipush        10
344: aload         39
346: invokevirtual #82
349: aload         32
351: invokevirtual #83
354: astore        40
356: aload         32
358: invokevirtual #84
361: astore        41
363: aconst_null
364: astore        42
366: new           #13
369: dup
370: invokespecial #14
373: astore        43
375: aload         43
377: invokevirtual #15
380: istore        44
382: aload         32
384: aload         42
386: iconst_0
387: aload         43
389: invokevirtual #82
392: aload         29
394: aload         43
396: invokevirtual #85
399: istore        45
401: aload         15
403: aload         18
405: bipush        100
407: aload         43
409: invokevirtual #86
412: aload         13
414: aload         14
416: iconst_1
417: aload         43
419: invokevirtual #87
422: aconst_null
423: astore        46
425: new           #13
428: dup
429: invokespecial #14
432: astore        47
434: aload         47
436: invokevirtual #15
439: istore        48
441: aload         13
443: aload         46
445: iconst_0
446: aload         47
448: invokevirtual #87
451: getstatic     #127
454: astore        49
456: aload         47
458: aload         49
460: invokevirtual #22
463: astore        50
465: aload         50
467: iconst_0
468: invokevirtual #128
471: astore        51
473: aload         51
475: iconst_1
476: invokevirtual #128
479: astore        52
481: aload         51
483: invokevirtual #15
486: istore        53
488: aload         9
490: aload         12
492: bipush        35
494: aload         51
496: invokevirtual #202
499: ldc           #24
501: invokestatic  #25
504: goto          509
507: astore        54
509: aload_1
510: invokestatic  #39
513: aload_2
514: invokestatic  #39
517: aload_3
518: invokestatic  #39
521: aload         4
523: invokestatic  #39
526: new           #27
529: dup
530: invokespecial #28
533: ldc           #29
535: invokevirtual #30
538: iload         5
540: invokevirtual #35
543: ldc           #32
545: invokevirtual #30
548: iconst_0
549: invokevirtual #35
552: ldc           #29
554: invokevirtual #30
557: invokevirtual #33
560: iload         5
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #34
573: aload         6
575: invokestatic  #39
578: aload         7
580: invokestatic  #39
583: new           #27
586: dup
587: invokespecial #28
590: ldc           #29
592: invokevirtual #30
595: aload         8
597: invokevirtual #30
600: ldc           #93
602: invokevirtual #30
605: invokevirtual #33
608: aload         8
610: ldc           #52
612: invokestatic  #91
615: aload         9
617: invokestatic  #39
620: aload         10
622: invokestatic  #39
625: aload         11
627: invokestatic  #39
630: new           #27
633: dup
634: invokespecial #28
637: ldc           #29
639: invokevirtual #30
642: aload         16
644: invokevirtual #30
647: ldc           #90
649: invokevirtual #30
652: invokevirtual #33
655: aload         16
657: ldc           #9
659: invokestatic  #91
662: new           #27
665: dup
666: invokespecial #28
669: ldc           #29
671: invokevirtual #30
674: aload         17
676: invokevirtual #30
679: ldc           #90
681: invokevirtual #30
684: invokevirtual #33
687: aload         17
689: ldc           #9
691: invokestatic  #91
694: aload         20
696: invokestatic  #39
699: aload         21
701: invokestatic  #39
704: aload         22
706: invokestatic  #39
709: new           #27
712: dup
713: invokespecial #28
716: ldc           #29
718: invokevirtual #30
721: aload         23
723: invokevirtual #30
726: ldc           #92
728: invokevirtual #30
731: invokevirtual #33
734: aload         23
736: ldc           #17
738: invokestatic  #91
741: aload         24
743: invokestatic  #39
746: new           #27
749: dup
750: invokespecial #28
753: ldc           #29
755: invokevirtual #30
758: iload         25
760: invokevirtual #35
763: ldc           #32
765: invokevirtual #30
768: iconst_0
769: invokevirtual #35
772: ldc           #29
774: invokevirtual #30
777: invokevirtual #33
780: iload         25
782: ifne          789
785: iconst_1
786: goto          790
789: iconst_0
790: invokestatic  #34
793: aload         26
795: invokestatic  #39
798: aload         27
800: invokestatic  #39
803: aload         28
805: invokestatic  #39
808: aload         29
810: invokestatic  #39
813: aload         30
815: invokestatic  #39
818: new           #27
821: dup
822: invokespecial #28
825: ldc           #29
827: invokevirtual #30
830: iload         31
832: invokevirtual #35
835: ldc           #32
837: invokevirtual #30
840: iconst_0
841: invokevirtual #35
844: ldc           #29
846: invokevirtual #30
849: invokevirtual #33
852: iload         31
854: ifne          861
857: iconst_1
858: goto          862
861: iconst_0
862: invokestatic  #34
865: new           #27
868: dup
869: invokespecial #28
872: ldc           #29
874: invokevirtual #30
877: iload         33
879: invokevirtual #35
882: ldc           #32
884: invokevirtual #30
887: iconst_0
888: invokevirtual #35
891: ldc           #29
893: invokevirtual #30
896: invokevirtual #33
899: iload         33
901: ifne          908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #34
912: aload         34
914: invokestatic  #39
917: aload         35
919: invokestatic  #39
922: aload         36
924: invokestatic  #39
927: aload         37
929: invokestatic  #39
932: new           #27
935: dup
936: invokespecial #28
939: ldc           #29
941: invokevirtual #30
944: aload         40
946: invokevirtual #30
949: ldc           #93
951: invokevirtual #30
954: invokevirtual #33
957: aload         40
959: ldc           #52
961: invokestatic  #91
964: new           #27
967: dup
968: invokespecial #28
971: ldc           #29
973: invokevirtual #30
976: aload         41
978: invokevirtual #30
981: ldc           #94
983: invokevirtual #30
986: invokevirtual #33
989: aload         41
991: ldc           #95
993: invokestatic  #91
996: new           #27
999: dup
1000: invokespecial #28
1003: ldc           #29
1005: invokevirtual #30
1008: iload         44
1010: invokevirtual #31
1013: ldc           #32
1015: invokevirtual #30
1018: iconst_1
1019: invokevirtual #31
1022: ldc           #29
1024: invokevirtual #30
1027: invokevirtual #33
1030: iload         44
1032: iconst_1
1033: if_icmpne     1040
1036: iconst_1
1037: goto          1041
1040: iconst_0
1041: invokestatic  #34
1044: new           #27
1047: dup
1048: invokespecial #28
1051: ldc           #29
1053: invokevirtual #30
1056: iload         45
1058: invokevirtual #35
1061: ldc           #32
1063: invokevirtual #30
1066: iconst_0
1067: invokevirtual #35
1070: ldc           #29
1072: invokevirtual #30
1075: invokevirtual #33
1078: iload         45
1080: ifne          1087
1083: iconst_1
1084: goto          1088
1087: iconst_0
1088: invokestatic  #34
1091: new           #27
1094: dup
1095: invokespecial #28
1098: ldc           #29
1100: invokevirtual #30
1103: iload         48
1105: invokevirtual #31
1108: ldc           #32
1110: invokevirtual #30
1113: iconst_1
1114: invokevirtual #31
1117: ldc           #29
1119: invokevirtual #30
1122: invokevirtual #33
1125: iload         48
1127: iconst_1
1128: if_icmpne     1135
1131: iconst_1
1132: goto          1136
1135: iconst_0
1136: invokestatic  #34
1139: new           #27
1142: dup
1143: invokespecial #28
1146: ldc           #29
1148: invokevirtual #30
1151: aload         49
1153: invokevirtual #36
1156: ldc           #32
1158: invokevirtual #30
1161: getstatic     #127
1164: invokevirtual #36
1167: ldc           #29
1169: invokevirtual #30
1172: invokevirtual #33
1175: aload         49
1177: getstatic     #127
1180: invokevirtual #38
1183: invokestatic  #34
1186: aload         50
1188: invokestatic  #39
1191: aload         51
1193: invokestatic  #39
1196: aload         52
1198: invokestatic  #39
1201: new           #27
1204: dup
1205: invokespecial #28
1208: ldc           #29
1210: invokevirtual #30
1213: iload         53
1215: invokevirtual #31
1218: ldc           #32
1220: invokevirtual #30
1223: iconst_1
1224: invokevirtual #31
1227: ldc           #29
1229: invokevirtual #30
1232: invokevirtual #33
1235: iload         53
1237: iconst_1
1238: if_icmpne     1245
1241: iconst_1
1242: goto          1246
1245: iconst_0
1246: invokestatic  #34
1249: return
Exception table:
from    to  target type
488   504   507   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test26
Start line: 1440
End line: 1444
Method source code: 
    public void test26() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test26");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[:eq(10)]", "class=\"\"=\"data-\"", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]", "[:first-child*=[^]\n<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #203
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #106
30: ldc           #62
32: ldc           #131
34: ldc           #204
36: invokespecial #12
39: astore_1
40: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test27
Start line: 1447
End line: 1526
Method source code: 
    public void test27() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test27");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings67.escapeMode(escapeMode70);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document.OutputSettings outputSettings73 = outputSettings67.charset(":lt(32)");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: :lt(32)");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings71);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #205
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #58
45: dup
46: ldc           #9
48: ldc           #59
50: invokespecial #60
53: astore_3
54: aload_3
55: invokevirtual #61
58: astore        4
60: aload_3
61: ldc           #62
63: invokevirtual #63
66: astore        5
68: aconst_null
69: astore        6
71: new           #64
74: dup
75: invokespecial #65
78: astore        7
80: ldc           #9
82: ldc           #9
84: invokestatic  #66
87: astore        8
89: ldc           #52
91: invokestatic  #53
94: astore        9
96: aload         9
98: ldc           #9
100: invokevirtual #54
103: astore        10
105: aload         10
107: invokevirtual #67
110: astore        11
112: aload         10
114: ldc           #9
116: invokevirtual #68
119: astore        12
121: aload         7
123: aload         8
125: aload         10
127: invokevirtual #69
130: istore        13
132: ldc           #59
134: ldc           #52
136: invokestatic  #70
139: astore        14
141: aload         14
143: bipush        100
145: invokevirtual #71
148: astore        15
150: aload         14
152: ldc           #72
154: invokevirtual #73
157: astore        16
159: ldc           #74
161: ldc           #52
163: invokestatic  #70
166: astore        17
168: aload         17
170: ldc           #75
172: invokevirtual #76
175: astore        18
177: aload         7
179: aload         14
181: aload         17
183: invokevirtual #69
186: istore        19
188: new           #77
191: dup
192: ldc           #52
194: ldc           #52
196: invokespecial #78
199: astore        20
201: aload         20
203: ldc           #52
205: invokevirtual #79
208: istore        21
210: ldc           #52
212: invokestatic  #53
215: astore        22
217: aload         22
219: ldc           #9
221: invokevirtual #54
224: astore        23
226: aload         22
228: invokevirtual #80
231: astore        24
233: aload         20
235: aload         24
237: invokevirtual #81
240: astore        25
242: aconst_null
243: astore        26
245: aconst_null
246: astore        27
248: aload         20
250: aload         26
252: bipush        10
254: aload         27
256: invokevirtual #82
259: aload         20
261: invokevirtual #83
264: astore        28
266: aload         20
268: invokevirtual #84
271: astore        29
273: aconst_null
274: astore        30
276: new           #13
279: dup
280: invokespecial #14
283: astore        31
285: aload         31
287: invokevirtual #15
290: istore        32
292: aload         20
294: aload         30
296: iconst_0
297: aload         31
299: invokevirtual #82
302: aload         17
304: aload         31
306: invokevirtual #85
309: istore        33
311: aload_3
312: aload         6
314: bipush        100
316: aload         31
318: invokevirtual #86
321: aload_1
322: aload_2
323: iconst_1
324: aload         31
326: invokevirtual #87
329: aconst_null
330: astore        34
332: new           #13
335: dup
336: invokespecial #14
339: astore        35
341: aload         35
343: invokevirtual #15
346: istore        36
348: aload_1
349: aload         34
351: iconst_0
352: aload         35
354: invokevirtual #87
357: getstatic     #127
360: astore        37
362: aload         35
364: aload         37
366: invokevirtual #22
369: astore        38
371: aload         35
373: ldc           #206
375: invokevirtual #207
378: astore        39
380: ldc           #208
382: invokestatic  #25
385: goto          390
388: astore        39
390: new           #27
393: dup
394: invokespecial #28
397: ldc           #29
399: invokevirtual #30
402: aload         4
404: invokevirtual #30
407: ldc           #90
409: invokevirtual #30
412: invokevirtual #33
415: aload         4
417: ldc           #9
419: invokestatic  #91
422: new           #27
425: dup
426: invokespecial #28
429: ldc           #29
431: invokevirtual #30
434: aload         5
436: invokevirtual #30
439: ldc           #90
441: invokevirtual #30
444: invokevirtual #33
447: aload         5
449: ldc           #9
451: invokestatic  #91
454: aload         8
456: invokestatic  #39
459: aload         9
461: invokestatic  #39
464: aload         10
466: invokestatic  #39
469: new           #27
472: dup
473: invokespecial #28
476: ldc           #29
478: invokevirtual #30
481: aload         11
483: invokevirtual #30
486: ldc           #92
488: invokevirtual #30
491: invokevirtual #33
494: aload         11
496: ldc           #17
498: invokestatic  #91
501: aload         12
503: invokestatic  #39
506: new           #27
509: dup
510: invokespecial #28
513: ldc           #29
515: invokevirtual #30
518: iload         13
520: invokevirtual #35
523: ldc           #32
525: invokevirtual #30
528: iconst_0
529: invokevirtual #35
532: ldc           #29
534: invokevirtual #30
537: invokevirtual #33
540: iload         13
542: ifne          549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #34
553: aload         14
555: invokestatic  #39
558: aload         15
560: invokestatic  #39
563: aload         16
565: invokestatic  #39
568: aload         17
570: invokestatic  #39
573: aload         18
575: invokestatic  #39
578: new           #27
581: dup
582: invokespecial #28
585: ldc           #29
587: invokevirtual #30
590: iload         19
592: invokevirtual #35
595: ldc           #32
597: invokevirtual #30
600: iconst_0
601: invokevirtual #35
604: ldc           #29
606: invokevirtual #30
609: invokevirtual #33
612: iload         19
614: ifne          621
617: iconst_1
618: goto          622
621: iconst_0
622: invokestatic  #34
625: new           #27
628: dup
629: invokespecial #28
632: ldc           #29
634: invokevirtual #30
637: iload         21
639: invokevirtual #35
642: ldc           #32
644: invokevirtual #30
647: iconst_0
648: invokevirtual #35
651: ldc           #29
653: invokevirtual #30
656: invokevirtual #33
659: iload         21
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #34
672: aload         22
674: invokestatic  #39
677: aload         23
679: invokestatic  #39
682: aload         24
684: invokestatic  #39
687: aload         25
689: invokestatic  #39
692: new           #27
695: dup
696: invokespecial #28
699: ldc           #29
701: invokevirtual #30
704: aload         28
706: invokevirtual #30
709: ldc           #93
711: invokevirtual #30
714: invokevirtual #33
717: aload         28
719: ldc           #52
721: invokestatic  #91
724: new           #27
727: dup
728: invokespecial #28
731: ldc           #29
733: invokevirtual #30
736: aload         29
738: invokevirtual #30
741: ldc           #94
743: invokevirtual #30
746: invokevirtual #33
749: aload         29
751: ldc           #95
753: invokestatic  #91
756: new           #27
759: dup
760: invokespecial #28
763: ldc           #29
765: invokevirtual #30
768: iload         32
770: invokevirtual #31
773: ldc           #32
775: invokevirtual #30
778: iconst_1
779: invokevirtual #31
782: ldc           #29
784: invokevirtual #30
787: invokevirtual #33
790: iload         32
792: iconst_1
793: if_icmpne     800
796: iconst_1
797: goto          801
800: iconst_0
801: invokestatic  #34
804: new           #27
807: dup
808: invokespecial #28
811: ldc           #29
813: invokevirtual #30
816: iload         33
818: invokevirtual #35
821: ldc           #32
823: invokevirtual #30
826: iconst_0
827: invokevirtual #35
830: ldc           #29
832: invokevirtual #30
835: invokevirtual #33
838: iload         33
840: ifne          847
843: iconst_1
844: goto          848
847: iconst_0
848: invokestatic  #34
851: new           #27
854: dup
855: invokespecial #28
858: ldc           #29
860: invokevirtual #30
863: iload         36
865: invokevirtual #31
868: ldc           #32
870: invokevirtual #30
873: iconst_1
874: invokevirtual #31
877: ldc           #29
879: invokevirtual #30
882: invokevirtual #33
885: iload         36
887: iconst_1
888: if_icmpne     895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #34
899: new           #27
902: dup
903: invokespecial #28
906: ldc           #29
908: invokevirtual #30
911: aload         37
913: invokevirtual #36
916: ldc           #32
918: invokevirtual #30
921: getstatic     #127
924: invokevirtual #36
927: ldc           #29
929: invokevirtual #30
932: invokevirtual #33
935: aload         37
937: getstatic     #127
940: invokevirtual #38
943: invokestatic  #34
946: aload         38
948: invokestatic  #39
951: return
Exception table:
from    to  target type
371   385   388   Class java/nio/charset/IllegalCharsetNameException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test28
Start line: 1529
End line: 1635
Method source code: 
    public void test28() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test28");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.outerHtml();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str11 = textNode10.getWholeText();
        java.lang.String str13 = textNode10.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType16 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document19 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element23 = document21.toggleClass("");
        java.lang.String str24 = element23.tagName();
        org.jsoup.nodes.Element element26 = element23.toggleClass("");
        boolean boolean27 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document19, element23);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements32 = document30.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element34 = document30.text(" ");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements39 = document37.getElementsContainingText("#data");
        boolean boolean40 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document37);
        org.jsoup.nodes.Comment comment43 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean45 = comment43.hasAttr("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element49 = document47.toggleClass("");
        org.jsoup.nodes.Node node50 = document47.clone();
        org.jsoup.nodes.Node node51 = comment43.doClone(node50);
        java.lang.StringBuilder stringBuilder52 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = null;
        comment43.outerHtmlTail(stringBuilder52, 10, outputSettings54);
        java.lang.String str56 = comment43.getData();
        java.lang.String str57 = comment43.nodeName();
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = new org.jsoup.nodes.Document.OutputSettings();
        int int61 = outputSettings60.indentAmount();
        comment43.outerHtmlTail(stringBuilder58, 0, outputSettings60);
        boolean boolean63 = document37.equals((java.lang.Object) outputSettings60);
        textNode10.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings60);
        documentType4.outerHtmlTail(stringBuilder6, 0, outputSettings60);
        java.lang.String str66 = documentType4.nodeName();
        java.util.List<org.jsoup.nodes.Node> nodeList67 = null;
        documentType4.childNodes = nodeList67;
        java.lang.StringBuilder stringBuilder69 = null;
        org.jsoup.parser.Parser parser74 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean75 = parser74.isTrackErrors();
        org.jsoup.nodes.Document document76 = org.jsoup.Jsoup.parse(" ", "#text", parser74);
        org.jsoup.nodes.Document.OutputSettings outputSettings77 = document76.getOutputSettings();
        java.lang.String str78 = org.jsoup.nodes.Entities.escape(":empty", outputSettings77);
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings77.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode81 = outputSettings77.escapeMode();
        org.jsoup.nodes.Attribute attribute84 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Attribute attribute85 = attribute84.clone();
        attribute85.setKey(" class=\"\"");
        org.jsoup.nodes.Document.OutputSettings outputSettings88 = new org.jsoup.nodes.Document.OutputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings90 = outputSettings88.outline(false);
        boolean boolean91 = attribute85.shouldCollapseAttribute(outputSettings90);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax92 = outputSettings90.syntax();
        java.nio.charset.Charset charset93 = outputSettings90.charset();
        org.jsoup.nodes.Document.OutputSettings outputSettings94 = outputSettings77.charset(charset93);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder69, (int) (byte) 10, outputSettings77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str5, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#root" + "'", str24, "#root");
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#doctype" + "'", str66, "#doctype");
        org.junit.Assert.assertNotNull(parser74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(document76);
        org.junit.Assert.assertNotNull(outputSettings77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ":empty" + "'", str78, ":empty");
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertTrue("'" + escapeMode81 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode81.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(attribute85);
        org.junit.Assert.assertNotNull(outputSettings90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + syntax92 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax92.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(charset93);
        org.junit.Assert.assertNotNull(outputSettings94);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #210
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #110
44: astore_2
45: aconst_null
46: astore_3
47: new           #58
50: dup
51: ldc           #9
53: ldc           #59
55: invokespecial #60
58: astore        4
60: aload         4
62: invokevirtual #61
65: astore        5
67: aload         4
69: ldc           #62
71: invokevirtual #63
74: astore        6
76: aconst_null
77: astore        7
79: new           #64
82: dup
83: invokespecial #65
86: astore        8
88: ldc           #9
90: ldc           #9
92: invokestatic  #66
95: astore        9
97: ldc           #52
99: invokestatic  #53
102: astore        10
104: aload         10
106: ldc           #9
108: invokevirtual #54
111: astore        11
113: aload         11
115: invokevirtual #67
118: astore        12
120: aload         11
122: ldc           #9
124: invokevirtual #68
127: astore        13
129: aload         8
131: aload         9
133: aload         11
135: invokevirtual #69
138: istore        14
140: ldc           #59
142: ldc           #52
144: invokestatic  #70
147: astore        15
149: aload         15
151: bipush        100
153: invokevirtual #71
156: astore        16
158: aload         15
160: ldc           #72
162: invokevirtual #73
165: astore        17
167: ldc           #74
169: ldc           #52
171: invokestatic  #70
174: astore        18
176: aload         18
178: ldc           #75
180: invokevirtual #76
183: astore        19
185: aload         8
187: aload         15
189: aload         18
191: invokevirtual #69
194: istore        20
196: new           #77
199: dup
200: ldc           #52
202: ldc           #52
204: invokespecial #78
207: astore        21
209: aload         21
211: ldc           #52
213: invokevirtual #79
216: istore        22
218: ldc           #52
220: invokestatic  #53
223: astore        23
225: aload         23
227: ldc           #9
229: invokevirtual #54
232: astore        24
234: aload         23
236: invokevirtual #80
239: astore        25
241: aload         21
243: aload         25
245: invokevirtual #81
248: astore        26
250: aconst_null
251: astore        27
253: aconst_null
254: astore        28
256: aload         21
258: aload         27
260: bipush        10
262: aload         28
264: invokevirtual #82
267: aload         21
269: invokevirtual #83
272: astore        29
274: aload         21
276: invokevirtual #84
279: astore        30
281: aconst_null
282: astore        31
284: new           #13
287: dup
288: invokespecial #14
291: astore        32
293: aload         32
295: invokevirtual #15
298: istore        33
300: aload         21
302: aload         31
304: iconst_0
305: aload         32
307: invokevirtual #82
310: aload         18
312: aload         32
314: invokevirtual #85
317: istore        34
319: aload         4
321: aload         7
323: bipush        100
325: aload         32
327: invokevirtual #86
330: aload_1
331: aload_3
332: iconst_0
333: aload         32
335: invokevirtual #87
338: aload_1
339: invokevirtual #97
342: astore        35
344: aconst_null
345: astore        36
347: aload_1
348: aload         36
350: putfield      #211
353: aconst_null
354: astore        37
356: invokestatic  #98
359: astore        38
361: aload         38
363: invokevirtual #99
366: istore        39
368: ldc           #72
370: ldc           #74
372: aload         38
374: invokestatic  #100
377: astore        40
379: aload         40
381: invokevirtual #101
384: astore        41
386: ldc           #212
388: aload         41
390: invokestatic  #112
393: astore        42
395: aload         41
397: iconst_0
398: invokevirtual #128
401: astore        43
403: aload         41
405: invokevirtual #21
408: astore        44
410: new           #16
413: dup
414: ldc           #17
416: ldc           #18
418: invokespecial #19
421: astore        45
423: aload         45
425: invokevirtual #41
428: astore        46
430: aload         46
432: ldc           #42
434: invokevirtual #43
437: new           #13
440: dup
441: invokespecial #14
444: astore        47
446: aload         47
448: iconst_0
449: invokevirtual #44
452: astore        48
454: aload         46
456: aload         48
458: invokevirtual #20
461: istore        49
463: aload         48
465: invokevirtual #48
468: astore        50
470: aload         48
472: invokevirtual #129
475: astore        51
477: aload         41
479: aload         51
481: invokevirtual #113
484: astore        52
486: aload_1
487: aload         37
489: bipush        10
491: aload         41
493: invokevirtual #23
496: ldc           #24
498: invokestatic  #25
501: goto          506
504: astore        53
506: new           #27
509: dup
510: invokespecial #28
513: ldc           #29
515: invokevirtual #30
518: aload_2
519: invokevirtual #30
522: ldc           #114
524: invokevirtual #30
527: invokevirtual #33
530: aload_2
531: ldc           #115
533: invokestatic  #91
536: new           #27
539: dup
540: invokespecial #28
543: ldc           #29
545: invokevirtual #30
548: aload         5
550: invokevirtual #30
553: ldc           #90
555: invokevirtual #30
558: invokevirtual #33
561: aload         5
563: ldc           #9
565: invokestatic  #91
568: new           #27
571: dup
572: invokespecial #28
575: ldc           #29
577: invokevirtual #30
580: aload         6
582: invokevirtual #30
585: ldc           #90
587: invokevirtual #30
590: invokevirtual #33
593: aload         6
595: ldc           #9
597: invokestatic  #91
600: aload         9
602: invokestatic  #39
605: aload         10
607: invokestatic  #39
610: aload         11
612: invokestatic  #39
615: new           #27
618: dup
619: invokespecial #28
622: ldc           #29
624: invokevirtual #30
627: aload         12
629: invokevirtual #30
632: ldc           #92
634: invokevirtual #30
637: invokevirtual #33
640: aload         12
642: ldc           #17
644: invokestatic  #91
647: aload         13
649: invokestatic  #39
652: new           #27
655: dup
656: invokespecial #28
659: ldc           #29
661: invokevirtual #30
664: iload         14
666: invokevirtual #35
669: ldc           #32
671: invokevirtual #30
674: iconst_0
675: invokevirtual #35
678: ldc           #29
680: invokevirtual #30
683: invokevirtual #33
686: iload         14
688: ifne          695
691: iconst_1
692: goto          696
695: iconst_0
696: invokestatic  #34
699: aload         15
701: invokestatic  #39
704: aload         16
706: invokestatic  #39
709: aload         17
711: invokestatic  #39
714: aload         18
716: invokestatic  #39
719: aload         19
721: invokestatic  #39
724: new           #27
727: dup
728: invokespecial #28
731: ldc           #29
733: invokevirtual #30
736: iload         20
738: invokevirtual #35
741: ldc           #32
743: invokevirtual #30
746: iconst_0
747: invokevirtual #35
750: ldc           #29
752: invokevirtual #30
755: invokevirtual #33
758: iload         20
760: ifne          767
763: iconst_1
764: goto          768
767: iconst_0
768: invokestatic  #34
771: new           #27
774: dup
775: invokespecial #28
778: ldc           #29
780: invokevirtual #30
783: iload         22
785: invokevirtual #35
788: ldc           #32
790: invokevirtual #30
793: iconst_0
794: invokevirtual #35
797: ldc           #29
799: invokevirtual #30
802: invokevirtual #33
805: iload         22
807: ifne          814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #34
818: aload         23
820: invokestatic  #39
823: aload         24
825: invokestatic  #39
828: aload         25
830: invokestatic  #39
833: aload         26
835: invokestatic  #39
838: new           #27
841: dup
842: invokespecial #28
845: ldc           #29
847: invokevirtual #30
850: aload         29
852: invokevirtual #30
855: ldc           #93
857: invokevirtual #30
860: invokevirtual #33
863: aload         29
865: ldc           #52
867: invokestatic  #91
870: new           #27
873: dup
874: invokespecial #28
877: ldc           #29
879: invokevirtual #30
882: aload         30
884: invokevirtual #30
887: ldc           #94
889: invokevirtual #30
892: invokevirtual #33
895: aload         30
897: ldc           #95
899: invokestatic  #91
902: new           #27
905: dup
906: invokespecial #28
909: ldc           #29
911: invokevirtual #30
914: iload         33
916: invokevirtual #31
919: ldc           #32
921: invokevirtual #30
924: iconst_1
925: invokevirtual #31
928: ldc           #29
930: invokevirtual #30
933: invokevirtual #33
936: iload         33
938: iconst_1
939: if_icmpne     946
942: iconst_1
943: goto          947
946: iconst_0
947: invokestatic  #34
950: new           #27
953: dup
954: invokespecial #28
957: ldc           #29
959: invokevirtual #30
962: iload         34
964: invokevirtual #35
967: ldc           #32
969: invokevirtual #30
972: iconst_0
973: invokevirtual #35
976: ldc           #29
978: invokevirtual #30
981: invokevirtual #33
984: iload         34
986: ifne          993
989: iconst_1
990: goto          994
993: iconst_0
994: invokestatic  #34
997: new           #27
1000: dup
1001: invokespecial #28
1004: ldc           #29
1006: invokevirtual #30
1009: aload         35
1011: invokevirtual #30
1014: ldc           #102
1016: invokevirtual #30
1019: invokevirtual #33
1022: aload         35
1024: ldc           #103
1026: invokestatic  #91
1029: aload         38
1031: invokestatic  #39
1034: new           #27
1037: dup
1038: invokespecial #28
1041: ldc           #29
1043: invokevirtual #30
1046: iload         39
1048: invokevirtual #35
1051: ldc           #32
1053: invokevirtual #30
1056: iconst_0
1057: invokevirtual #35
1060: ldc           #29
1062: invokevirtual #30
1065: invokevirtual #33
1068: iload         39
1070: ifne          1077
1073: iconst_1
1074: goto          1078
1077: iconst_0
1078: invokestatic  #34
1081: aload         40
1083: invokestatic  #39
1086: aload         41
1088: invokestatic  #39
1091: new           #27
1094: dup
1095: invokespecial #28
1098: ldc           #29
1100: invokevirtual #30
1103: aload         42
1105: invokevirtual #30
1108: ldc           #213
1110: invokevirtual #30
1113: invokevirtual #33
1116: aload         42
1118: ldc           #212
1120: invokestatic  #91
1123: aload         43
1125: invokestatic  #39
1128: new           #27
1131: dup
1132: invokespecial #28
1135: ldc           #29
1137: invokevirtual #30
1140: aload         44
1142: invokevirtual #36
1145: ldc           #32
1147: invokevirtual #30
1150: getstatic     #37
1153: invokevirtual #36
1156: ldc           #29
1158: invokevirtual #30
1161: invokevirtual #33
1164: aload         44
1166: getstatic     #37
1169: invokevirtual #38
1172: invokestatic  #34
1175: aload         46
1177: invokestatic  #39
1180: aload         48
1182: invokestatic  #39
1185: new           #27
1188: dup
1189: invokespecial #28
1192: ldc           #29
1194: invokevirtual #30
1197: iload         49
1199: invokevirtual #35
1202: ldc           #32
1204: invokevirtual #30
1207: iconst_0
1208: invokevirtual #35
1211: ldc           #29
1213: invokevirtual #30
1216: invokevirtual #33
1219: iload         49
1221: ifne          1228
1224: iconst_1
1225: goto          1229
1228: iconst_0
1229: invokestatic  #34
1232: new           #27
1235: dup
1236: invokespecial #28
1239: ldc           #29
1241: invokevirtual #30
1244: aload         50
1246: invokevirtual #36
1249: ldc           #32
1251: invokevirtual #30
1254: getstatic     #49
1257: invokevirtual #36
1260: ldc           #29
1262: invokevirtual #30
1265: invokevirtual #33
1268: aload         50
1270: getstatic     #49
1273: invokevirtual #50
1276: invokestatic  #34
1279: aload         51
1281: invokestatic  #39
1284: aload         52
1286: invokestatic  #39
1289: return
Exception table:
from    to  target type
486   501   504   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test29
Start line: 1638
End line: 1702
Method source code: 
    public void test29() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test29");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node10 = textNode9.parentNode;
        java.lang.String str11 = textNode9.nodeName();
        java.lang.String str12 = textNode9.nodeName();
        textNode9.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes15 = textNode9.attributes();
        java.lang.StringBuilder stringBuilder16 = null;
        org.jsoup.nodes.Attribute attribute20 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean22 = attribute20.shouldCollapseAttribute(outputSettings21);
        org.jsoup.nodes.Entities.EscapeMode escapeMode23 = outputSettings21.escapeMode();
        textNode9.outerHtmlTail(stringBuilder16, (int) (short) -1, outputSettings21);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax25 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = outputSettings21.syntax(syntax25);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings21.clone();
        org.jsoup.nodes.TextNode textNode30 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node31 = textNode30.parentNode;
        java.lang.String str32 = textNode30.nodeName();
        java.lang.String str33 = textNode30.nodeName();
        textNode30.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes36 = textNode30.attributes();
        java.lang.StringBuilder stringBuilder37 = null;
        org.jsoup.nodes.Attribute attribute41 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean43 = attribute41.shouldCollapseAttribute(outputSettings42);
        org.jsoup.nodes.Entities.EscapeMode escapeMode44 = outputSettings42.escapeMode();
        textNode30.outerHtmlTail(stringBuilder37, (int) (short) -1, outputSettings42);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax46 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings47 = outputSettings42.syntax(syntax46);
        org.jsoup.nodes.Document.OutputSettings outputSettings48 = outputSettings21.syntax(syntax46);
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = outputSettings21.clone();
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (-1), outputSettings21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(textNode9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#text" + "'", str11, "#text");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#text" + "'", str12, "#text");
        org.junit.Assert.assertNotNull(attributes15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + escapeMode23 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode23.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax25 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax25.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(textNode30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#text" + "'", str32, "#text");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#text" + "'", str33, "#text");
        org.junit.Assert.assertNotNull(attributes36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + escapeMode44 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode44.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax46 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax46.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings47);
        org.junit.Assert.assertNotNull(outputSettings48);
        org.junit.Assert.assertNotNull(outputSettings49);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #214
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: ldc           #52
44: ldc           #52
46: invokestatic  #132
49: astore_3
50: aload_3
51: getfield      #133
54: astore        4
56: aload_3
57: invokevirtual #134
60: astore        5
62: aload_3
63: invokevirtual #134
66: astore        6
68: aload_3
69: ldc           #135
71: invokevirtual #136
74: aload_3
75: invokevirtual #137
78: astore        7
80: aconst_null
81: astore        8
83: new           #16
86: dup
87: ldc           #17
89: ldc           #18
91: invokespecial #19
94: astore        9
96: new           #13
99: dup
100: invokespecial #14
103: astore        10
105: aload         9
107: aload         10
109: invokevirtual #20
112: istore        11
114: aload         10
116: invokevirtual #21
119: astore        12
121: aload_3
122: aload         8
124: iconst_m1
125: aload         10
127: invokevirtual #86
130: getstatic     #49
133: astore        13
135: aload         10
137: aload         13
139: invokevirtual #138
142: astore        14
144: aload         10
146: invokevirtual #215
149: astore        15
151: ldc           #52
153: ldc           #52
155: invokestatic  #132
158: astore        16
160: aload         16
162: getfield      #133
165: astore        17
167: aload         16
169: invokevirtual #134
172: astore        18
174: aload         16
176: invokevirtual #134
179: astore        19
181: aload         16
183: ldc           #135
185: invokevirtual #136
188: aload         16
190: invokevirtual #137
193: astore        20
195: aconst_null
196: astore        21
198: new           #16
201: dup
202: ldc           #17
204: ldc           #18
206: invokespecial #19
209: astore        22
211: new           #13
214: dup
215: invokespecial #14
218: astore        23
220: aload         22
222: aload         23
224: invokevirtual #20
227: istore        24
229: aload         23
231: invokevirtual #21
234: astore        25
236: aload         16
238: aload         21
240: iconst_m1
241: aload         23
243: invokevirtual #86
246: getstatic     #49
249: astore        26
251: aload         23
253: aload         26
255: invokevirtual #138
258: astore        27
260: aload         10
262: aload         26
264: invokevirtual #138
267: astore        28
269: aload         10
271: invokevirtual #215
274: astore        29
276: aload_1
277: aload_2
278: iconst_m1
279: aload         10
281: invokevirtual #23
284: ldc           #24
286: invokestatic  #25
289: goto          294
292: astore        30
294: aload_3
295: invokestatic  #39
298: aload         4
300: invokestatic  #139
303: new           #27
306: dup
307: invokespecial #28
310: ldc           #29
312: invokevirtual #30
315: aload         5
317: invokevirtual #30
320: ldc           #140
322: invokevirtual #30
325: invokevirtual #33
328: aload         5
330: ldc           #74
332: invokestatic  #91
335: new           #27
338: dup
339: invokespecial #28
342: ldc           #29
344: invokevirtual #30
347: aload         6
349: invokevirtual #30
352: ldc           #140
354: invokevirtual #30
357: invokevirtual #33
360: aload         6
362: ldc           #74
364: invokestatic  #91
367: aload         7
369: invokestatic  #39
372: new           #27
375: dup
376: invokespecial #28
379: ldc           #29
381: invokevirtual #30
384: iload         11
386: invokevirtual #35
389: ldc           #32
391: invokevirtual #30
394: iconst_0
395: invokevirtual #35
398: ldc           #29
400: invokevirtual #30
403: invokevirtual #33
406: iload         11
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #34
419: new           #27
422: dup
423: invokespecial #28
426: ldc           #29
428: invokevirtual #30
431: aload         12
433: invokevirtual #36
436: ldc           #32
438: invokevirtual #30
441: getstatic     #37
444: invokevirtual #36
447: ldc           #29
449: invokevirtual #30
452: invokevirtual #33
455: aload         12
457: getstatic     #37
460: invokevirtual #38
463: invokestatic  #34
466: new           #27
469: dup
470: invokespecial #28
473: ldc           #29
475: invokevirtual #30
478: aload         13
480: invokevirtual #36
483: ldc           #32
485: invokevirtual #30
488: getstatic     #49
491: invokevirtual #36
494: ldc           #29
496: invokevirtual #30
499: invokevirtual #33
502: aload         13
504: getstatic     #49
507: invokevirtual #50
510: invokestatic  #34
513: aload         14
515: invokestatic  #39
518: aload         15
520: invokestatic  #39
523: aload         16
525: invokestatic  #39
528: aload         17
530: invokestatic  #139
533: new           #27
536: dup
537: invokespecial #28
540: ldc           #29
542: invokevirtual #30
545: aload         18
547: invokevirtual #30
550: ldc           #140
552: invokevirtual #30
555: invokevirtual #33
558: aload         18
560: ldc           #74
562: invokestatic  #91
565: new           #27
568: dup
569: invokespecial #28
572: ldc           #29
574: invokevirtual #30
577: aload         19
579: invokevirtual #30
582: ldc           #140
584: invokevirtual #30
587: invokevirtual #33
590: aload         19
592: ldc           #74
594: invokestatic  #91
597: aload         20
599: invokestatic  #39
602: new           #27
605: dup
606: invokespecial #28
609: ldc           #29
611: invokevirtual #30
614: iload         24
616: invokevirtual #35
619: ldc           #32
621: invokevirtual #30
624: iconst_0
625: invokevirtual #35
628: ldc           #29
630: invokevirtual #30
633: invokevirtual #33
636: iload         24
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #34
649: new           #27
652: dup
653: invokespecial #28
656: ldc           #29
658: invokevirtual #30
661: aload         25
663: invokevirtual #36
666: ldc           #32
668: invokevirtual #30
671: getstatic     #37
674: invokevirtual #36
677: ldc           #29
679: invokevirtual #30
682: invokevirtual #33
685: aload         25
687: getstatic     #37
690: invokevirtual #38
693: invokestatic  #34
696: new           #27
699: dup
700: invokespecial #28
703: ldc           #29
705: invokevirtual #30
708: aload         26
710: invokevirtual #36
713: ldc           #32
715: invokevirtual #30
718: getstatic     #49
721: invokevirtual #36
724: ldc           #29
726: invokevirtual #30
729: invokevirtual #33
732: aload         26
734: getstatic     #49
737: invokevirtual #50
740: invokestatic  #34
743: aload         27
745: invokestatic  #39
748: aload         28
750: invokestatic  #39
753: aload         29
755: invokestatic  #39
758: return
Exception table:
from    to  target type
276   289   292   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test30
Start line: 1705
End line: 1776
Method source code: 
    public void test30() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test30");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.outerHtml();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str11 = textNode10.getWholeText();
        java.lang.String str13 = textNode10.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType16 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document19 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element23 = document21.toggleClass("");
        java.lang.String str24 = element23.tagName();
        org.jsoup.nodes.Element element26 = element23.toggleClass("");
        boolean boolean27 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document19, element23);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements32 = document30.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element34 = document30.text(" ");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements39 = document37.getElementsContainingText("#data");
        boolean boolean40 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document37);
        org.jsoup.nodes.Comment comment43 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean45 = comment43.hasAttr("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element49 = document47.toggleClass("");
        org.jsoup.nodes.Node node50 = document47.clone();
        org.jsoup.nodes.Node node51 = comment43.doClone(node50);
        java.lang.StringBuilder stringBuilder52 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = null;
        comment43.outerHtmlTail(stringBuilder52, 10, outputSettings54);
        java.lang.String str56 = comment43.getData();
        java.lang.String str57 = comment43.nodeName();
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = new org.jsoup.nodes.Document.OutputSettings();
        int int61 = outputSettings60.indentAmount();
        comment43.outerHtmlTail(stringBuilder58, 0, outputSettings60);
        boolean boolean63 = document37.equals((java.lang.Object) outputSettings60);
        textNode10.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings60);
        documentType4.outerHtmlTail(stringBuilder6, 0, outputSettings60);
        java.lang.String str66 = documentType4.nodeName();
        java.lang.String str67 = documentType4.nodeName();
        java.lang.String str68 = documentType4.nodeName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str5, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#root" + "'", str24, "#root");
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#doctype" + "'", str66, "#doctype");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#doctype" + "'", str67, "#doctype");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "#doctype" + "'", str68, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #216
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #110
44: astore_2
45: aconst_null
46: astore_3
47: new           #58
50: dup
51: ldc           #9
53: ldc           #59
55: invokespecial #60
58: astore        4
60: aload         4
62: invokevirtual #61
65: astore        5
67: aload         4
69: ldc           #62
71: invokevirtual #63
74: astore        6
76: aconst_null
77: astore        7
79: new           #64
82: dup
83: invokespecial #65
86: astore        8
88: ldc           #9
90: ldc           #9
92: invokestatic  #66
95: astore        9
97: ldc           #52
99: invokestatic  #53
102: astore        10
104: aload         10
106: ldc           #9
108: invokevirtual #54
111: astore        11
113: aload         11
115: invokevirtual #67
118: astore        12
120: aload         11
122: ldc           #9
124: invokevirtual #68
127: astore        13
129: aload         8
131: aload         9
133: aload         11
135: invokevirtual #69
138: istore        14
140: ldc           #59
142: ldc           #52
144: invokestatic  #70
147: astore        15
149: aload         15
151: bipush        100
153: invokevirtual #71
156: astore        16
158: aload         15
160: ldc           #72
162: invokevirtual #73
165: astore        17
167: ldc           #74
169: ldc           #52
171: invokestatic  #70
174: astore        18
176: aload         18
178: ldc           #75
180: invokevirtual #76
183: astore        19
185: aload         8
187: aload         15
189: aload         18
191: invokevirtual #69
194: istore        20
196: new           #77
199: dup
200: ldc           #52
202: ldc           #52
204: invokespecial #78
207: astore        21
209: aload         21
211: ldc           #52
213: invokevirtual #79
216: istore        22
218: ldc           #52
220: invokestatic  #53
223: astore        23
225: aload         23
227: ldc           #9
229: invokevirtual #54
232: astore        24
234: aload         23
236: invokevirtual #80
239: astore        25
241: aload         21
243: aload         25
245: invokevirtual #81
248: astore        26
250: aconst_null
251: astore        27
253: aconst_null
254: astore        28
256: aload         21
258: aload         27
260: bipush        10
262: aload         28
264: invokevirtual #82
267: aload         21
269: invokevirtual #83
272: astore        29
274: aload         21
276: invokevirtual #84
279: astore        30
281: aconst_null
282: astore        31
284: new           #13
287: dup
288: invokespecial #14
291: astore        32
293: aload         32
295: invokevirtual #15
298: istore        33
300: aload         21
302: aload         31
304: iconst_0
305: aload         32
307: invokevirtual #82
310: aload         18
312: aload         32
314: invokevirtual #85
317: istore        34
319: aload         4
321: aload         7
323: bipush        100
325: aload         32
327: invokevirtual #86
330: aload_1
331: aload_3
332: iconst_0
333: aload         32
335: invokevirtual #87
338: aload_1
339: invokevirtual #97
342: astore        35
344: aload_1
345: invokevirtual #97
348: astore        36
350: aload_1
351: invokevirtual #97
354: astore        37
356: new           #27
359: dup
360: invokespecial #28
363: ldc           #29
365: invokevirtual #30
368: aload_2
369: invokevirtual #30
372: ldc           #114
374: invokevirtual #30
377: invokevirtual #33
380: aload_2
381: ldc           #115
383: invokestatic  #91
386: new           #27
389: dup
390: invokespecial #28
393: ldc           #29
395: invokevirtual #30
398: aload         5
400: invokevirtual #30
403: ldc           #90
405: invokevirtual #30
408: invokevirtual #33
411: aload         5
413: ldc           #9
415: invokestatic  #91
418: new           #27
421: dup
422: invokespecial #28
425: ldc           #29
427: invokevirtual #30
430: aload         6
432: invokevirtual #30
435: ldc           #90
437: invokevirtual #30
440: invokevirtual #33
443: aload         6
445: ldc           #9
447: invokestatic  #91
450: aload         9
452: invokestatic  #39
455: aload         10
457: invokestatic  #39
460: aload         11
462: invokestatic  #39
465: new           #27
468: dup
469: invokespecial #28
472: ldc           #29
474: invokevirtual #30
477: aload         12
479: invokevirtual #30
482: ldc           #92
484: invokevirtual #30
487: invokevirtual #33
490: aload         12
492: ldc           #17
494: invokestatic  #91
497: aload         13
499: invokestatic  #39
502: new           #27
505: dup
506: invokespecial #28
509: ldc           #29
511: invokevirtual #30
514: iload         14
516: invokevirtual #35
519: ldc           #32
521: invokevirtual #30
524: iconst_0
525: invokevirtual #35
528: ldc           #29
530: invokevirtual #30
533: invokevirtual #33
536: iload         14
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #34
549: aload         15
551: invokestatic  #39
554: aload         16
556: invokestatic  #39
559: aload         17
561: invokestatic  #39
564: aload         18
566: invokestatic  #39
569: aload         19
571: invokestatic  #39
574: new           #27
577: dup
578: invokespecial #28
581: ldc           #29
583: invokevirtual #30
586: iload         20
588: invokevirtual #35
591: ldc           #32
593: invokevirtual #30
596: iconst_0
597: invokevirtual #35
600: ldc           #29
602: invokevirtual #30
605: invokevirtual #33
608: iload         20
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #34
621: new           #27
624: dup
625: invokespecial #28
628: ldc           #29
630: invokevirtual #30
633: iload         22
635: invokevirtual #35
638: ldc           #32
640: invokevirtual #30
643: iconst_0
644: invokevirtual #35
647: ldc           #29
649: invokevirtual #30
652: invokevirtual #33
655: iload         22
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #34
668: aload         23
670: invokestatic  #39
673: aload         24
675: invokestatic  #39
678: aload         25
680: invokestatic  #39
683: aload         26
685: invokestatic  #39
688: new           #27
691: dup
692: invokespecial #28
695: ldc           #29
697: invokevirtual #30
700: aload         29
702: invokevirtual #30
705: ldc           #93
707: invokevirtual #30
710: invokevirtual #33
713: aload         29
715: ldc           #52
717: invokestatic  #91
720: new           #27
723: dup
724: invokespecial #28
727: ldc           #29
729: invokevirtual #30
732: aload         30
734: invokevirtual #30
737: ldc           #94
739: invokevirtual #30
742: invokevirtual #33
745: aload         30
747: ldc           #95
749: invokestatic  #91
752: new           #27
755: dup
756: invokespecial #28
759: ldc           #29
761: invokevirtual #30
764: iload         33
766: invokevirtual #31
769: ldc           #32
771: invokevirtual #30
774: iconst_1
775: invokevirtual #31
778: ldc           #29
780: invokevirtual #30
783: invokevirtual #33
786: iload         33
788: iconst_1
789: if_icmpne     796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #34
800: new           #27
803: dup
804: invokespecial #28
807: ldc           #29
809: invokevirtual #30
812: iload         34
814: invokevirtual #35
817: ldc           #32
819: invokevirtual #30
822: iconst_0
823: invokevirtual #35
826: ldc           #29
828: invokevirtual #30
831: invokevirtual #33
834: iload         34
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #34
847: new           #27
850: dup
851: invokespecial #28
854: ldc           #29
856: invokevirtual #30
859: aload         35
861: invokevirtual #30
864: ldc           #102
866: invokevirtual #30
869: invokevirtual #33
872: aload         35
874: ldc           #103
876: invokestatic  #91
879: new           #27
882: dup
883: invokespecial #28
886: ldc           #29
888: invokevirtual #30
891: aload         36
893: invokevirtual #30
896: ldc           #102
898: invokevirtual #30
901: invokevirtual #33
904: aload         36
906: ldc           #103
908: invokestatic  #91
911: new           #27
914: dup
915: invokespecial #28
918: ldc           #29
920: invokevirtual #30
923: aload         37
925: invokevirtual #30
928: ldc           #102
930: invokevirtual #30
933: invokevirtual #33
936: aload         37
938: ldc           #103
940: invokestatic  #91
943: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test31
Start line: 1779
End line: 1870
Method source code: 
    public void test31() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test31");
        org.jsoup.nodes.Document document1 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element3 = document1.toggleClass("");
        java.lang.String str4 = element3.tagName();
        org.jsoup.nodes.Element element6 = element3.toggleClass("");
        org.jsoup.select.Elements elements8 = element6.getElementsContainingOwnText("hi!");
        org.jsoup.nodes.Node[] nodeArray9 = element6.childNodesAsArray();
        org.jsoup.nodes.Element element11 = element6.appendText("#text");
        org.jsoup.nodes.Element element12 = element11.nextElementSibling();
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.nodes.DocumentType documentType20 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str21 = documentType20.outerHtml();
        java.lang.StringBuilder stringBuilder22 = null;
        org.jsoup.nodes.TextNode textNode26 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str27 = textNode26.getWholeText();
        java.lang.String str29 = textNode26.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder30 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType32 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document35 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element39 = document37.toggleClass("");
        java.lang.String str40 = element39.tagName();
        org.jsoup.nodes.Element element42 = element39.toggleClass("");
        boolean boolean43 = isOnlyOfType32.matches((org.jsoup.nodes.Element) document35, element39);
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements48 = document46.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element50 = document46.text(" ");
        org.jsoup.nodes.Document document53 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements55 = document53.getElementsContainingText("#data");
        boolean boolean56 = isOnlyOfType32.matches((org.jsoup.nodes.Element) document46, (org.jsoup.nodes.Element) document53);
        org.jsoup.nodes.Comment comment59 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean61 = comment59.hasAttr("hi!");
        org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element65 = document63.toggleClass("");
        org.jsoup.nodes.Node node66 = document63.clone();
        org.jsoup.nodes.Node node67 = comment59.doClone(node66);
        java.lang.StringBuilder stringBuilder68 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings70 = null;
        comment59.outerHtmlTail(stringBuilder68, 10, outputSettings70);
        java.lang.String str72 = comment59.getData();
        java.lang.String str73 = comment59.nodeName();
        java.lang.StringBuilder stringBuilder74 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = new org.jsoup.nodes.Document.OutputSettings();
        int int77 = outputSettings76.indentAmount();
        comment59.outerHtmlTail(stringBuilder74, 0, outputSettings76);
        boolean boolean79 = document53.equals((java.lang.Object) outputSettings76);
        textNode26.outerHtmlTail(stringBuilder30, (int) (short) 100, outputSettings76);
        documentType20.outerHtmlTail(stringBuilder22, 0, outputSettings76);
        java.lang.String str82 = org.jsoup.nodes.Entities.escape("<html>\n <head></head>\n <body>\n  #comment\n </body>\n</html>", outputSettings76);
        // The following exception was thrown during execution in test generation
        try {
            element11.outerHtmlTail(stringBuilder13, 10, outputSettings76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document1);
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "#root" + "'", str4, "#root");
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(elements8);
        org.junit.Assert.assertNotNull(nodeArray9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNull(element12);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str21, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "#root" + "'", str40, "#root");
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(elements48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertNotNull(elements55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(document63);
        org.junit.Assert.assertNotNull(element65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#comment" + "'", str73, "#comment");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  #comment\n &lt;/body&gt;\n&lt;/html&gt;" + "'", str82, "&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  #comment\n &lt;/body&gt;\n&lt;/html&gt;");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #217
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #52
26: invokestatic  #53
29: astore_1
30: aload_1
31: ldc           #9
33: invokevirtual #54
36: astore_2
37: aload_2
38: invokevirtual #67
41: astore_3
42: aload_2
43: ldc           #9
45: invokevirtual #68
48: astore        4
50: aload         4
52: ldc           #52
54: invokevirtual #147
57: astore        5
59: aload         4
61: invokevirtual #218
64: astore        6
66: aload         4
68: ldc           #74
70: invokevirtual #219
73: astore        7
75: aload         7
77: invokevirtual #220
80: astore        8
82: aconst_null
83: astore        9
85: new           #8
88: dup
89: ldc           #9
91: ldc           #10
93: ldc           #11
95: ldc           #9
97: invokespecial #12
100: astore        10
102: aload         10
104: invokevirtual #110
107: astore        11
109: aconst_null
110: astore        12
112: new           #58
115: dup
116: ldc           #9
118: ldc           #59
120: invokespecial #60
123: astore        13
125: aload         13
127: invokevirtual #61
130: astore        14
132: aload         13
134: ldc           #62
136: invokevirtual #63
139: astore        15
141: aconst_null
142: astore        16
144: new           #64
147: dup
148: invokespecial #65
151: astore        17
153: ldc           #9
155: ldc           #9
157: invokestatic  #66
160: astore        18
162: ldc           #52
164: invokestatic  #53
167: astore        19
169: aload         19
171: ldc           #9
173: invokevirtual #54
176: astore        20
178: aload         20
180: invokevirtual #67
183: astore        21
185: aload         20
187: ldc           #9
189: invokevirtual #68
192: astore        22
194: aload         17
196: aload         18
198: aload         20
200: invokevirtual #69
203: istore        23
205: ldc           #59
207: ldc           #52
209: invokestatic  #70
212: astore        24
214: aload         24
216: bipush        100
218: invokevirtual #71
221: astore        25
223: aload         24
225: ldc           #72
227: invokevirtual #73
230: astore        26
232: ldc           #74
234: ldc           #52
236: invokestatic  #70
239: astore        27
241: aload         27
243: ldc           #75
245: invokevirtual #76
248: astore        28
250: aload         17
252: aload         24
254: aload         27
256: invokevirtual #69
259: istore        29
261: new           #77
264: dup
265: ldc           #52
267: ldc           #52
269: invokespecial #78
272: astore        30
274: aload         30
276: ldc           #52
278: invokevirtual #79
281: istore        31
283: ldc           #52
285: invokestatic  #53
288: astore        32
290: aload         32
292: ldc           #9
294: invokevirtual #54
297: astore        33
299: aload         32
301: invokevirtual #80
304: astore        34
306: aload         30
308: aload         34
310: invokevirtual #81
313: astore        35
315: aconst_null
316: astore        36
318: aconst_null
319: astore        37
321: aload         30
323: aload         36
325: bipush        10
327: aload         37
329: invokevirtual #82
332: aload         30
334: invokevirtual #83
337: astore        38
339: aload         30
341: invokevirtual #84
344: astore        39
346: aconst_null
347: astore        40
349: new           #13
352: dup
353: invokespecial #14
356: astore        41
358: aload         41
360: invokevirtual #15
363: istore        42
365: aload         30
367: aload         40
369: iconst_0
370: aload         41
372: invokevirtual #82
375: aload         27
377: aload         41
379: invokevirtual #85
382: istore        43
384: aload         13
386: aload         16
388: bipush        100
390: aload         41
392: invokevirtual #86
395: aload         10
397: aload         12
399: iconst_0
400: aload         41
402: invokevirtual #87
405: ldc           #111
407: aload         41
409: invokestatic  #112
412: astore        44
414: aload         7
416: aload         9
418: bipush        10
420: aload         41
422: invokevirtual #202
425: ldc           #24
427: invokestatic  #25
430: goto          435
433: astore        45
435: aload_1
436: invokestatic  #39
439: aload_2
440: invokestatic  #39
443: new           #27
446: dup
447: invokespecial #28
450: ldc           #29
452: invokevirtual #30
455: aload_3
456: invokevirtual #30
459: ldc           #92
461: invokevirtual #30
464: invokevirtual #33
467: aload_3
468: ldc           #17
470: invokestatic  #91
473: aload         4
475: invokestatic  #39
478: aload         5
480: invokestatic  #39
483: aload         6
485: invokestatic  #39
488: aload         7
490: invokestatic  #39
493: aload         8
495: invokestatic  #139
498: new           #27
501: dup
502: invokespecial #28
505: ldc           #29
507: invokevirtual #30
510: aload         11
512: invokevirtual #30
515: ldc           #114
517: invokevirtual #30
520: invokevirtual #33
523: aload         11
525: ldc           #115
527: invokestatic  #91
530: new           #27
533: dup
534: invokespecial #28
537: ldc           #29
539: invokevirtual #30
542: aload         14
544: invokevirtual #30
547: ldc           #90
549: invokevirtual #30
552: invokevirtual #33
555: aload         14
557: ldc           #9
559: invokestatic  #91
562: new           #27
565: dup
566: invokespecial #28
569: ldc           #29
571: invokevirtual #30
574: aload         15
576: invokevirtual #30
579: ldc           #90
581: invokevirtual #30
584: invokevirtual #33
587: aload         15
589: ldc           #9
591: invokestatic  #91
594: aload         18
596: invokestatic  #39
599: aload         19
601: invokestatic  #39
604: aload         20
606: invokestatic  #39
609: new           #27
612: dup
613: invokespecial #28
616: ldc           #29
618: invokevirtual #30
621: aload         21
623: invokevirtual #30
626: ldc           #92
628: invokevirtual #30
631: invokevirtual #33
634: aload         21
636: ldc           #17
638: invokestatic  #91
641: aload         22
643: invokestatic  #39
646: new           #27
649: dup
650: invokespecial #28
653: ldc           #29
655: invokevirtual #30
658: iload         23
660: invokevirtual #35
663: ldc           #32
665: invokevirtual #30
668: iconst_0
669: invokevirtual #35
672: ldc           #29
674: invokevirtual #30
677: invokevirtual #33
680: iload         23
682: ifne          689
685: iconst_1
686: goto          690
689: iconst_0
690: invokestatic  #34
693: aload         24
695: invokestatic  #39
698: aload         25
700: invokestatic  #39
703: aload         26
705: invokestatic  #39
708: aload         27
710: invokestatic  #39
713: aload         28
715: invokestatic  #39
718: new           #27
721: dup
722: invokespecial #28
725: ldc           #29
727: invokevirtual #30
730: iload         29
732: invokevirtual #35
735: ldc           #32
737: invokevirtual #30
740: iconst_0
741: invokevirtual #35
744: ldc           #29
746: invokevirtual #30
749: invokevirtual #33
752: iload         29
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #34
765: new           #27
768: dup
769: invokespecial #28
772: ldc           #29
774: invokevirtual #30
777: iload         31
779: invokevirtual #35
782: ldc           #32
784: invokevirtual #30
787: iconst_0
788: invokevirtual #35
791: ldc           #29
793: invokevirtual #30
796: invokevirtual #33
799: iload         31
801: ifne          808
804: iconst_1
805: goto          809
808: iconst_0
809: invokestatic  #34
812: aload         32
814: invokestatic  #39
817: aload         33
819: invokestatic  #39
822: aload         34
824: invokestatic  #39
827: aload         35
829: invokestatic  #39
832: new           #27
835: dup
836: invokespecial #28
839: ldc           #29
841: invokevirtual #30
844: aload         38
846: invokevirtual #30
849: ldc           #93
851: invokevirtual #30
854: invokevirtual #33
857: aload         38
859: ldc           #52
861: invokestatic  #91
864: new           #27
867: dup
868: invokespecial #28
871: ldc           #29
873: invokevirtual #30
876: aload         39
878: invokevirtual #30
881: ldc           #94
883: invokevirtual #30
886: invokevirtual #33
889: aload         39
891: ldc           #95
893: invokestatic  #91
896: new           #27
899: dup
900: invokespecial #28
903: ldc           #29
905: invokevirtual #30
908: iload         42
910: invokevirtual #31
913: ldc           #32
915: invokevirtual #30
918: iconst_1
919: invokevirtual #31
922: ldc           #29
924: invokevirtual #30
927: invokevirtual #33
930: iload         42
932: iconst_1
933: if_icmpne     940
936: iconst_1
937: goto          941
940: iconst_0
941: invokestatic  #34
944: new           #27
947: dup
948: invokespecial #28
951: ldc           #29
953: invokevirtual #30
956: iload         43
958: invokevirtual #35
961: ldc           #32
963: invokevirtual #30
966: iconst_0
967: invokevirtual #35
970: ldc           #29
972: invokevirtual #30
975: invokevirtual #33
978: iload         43
980: ifne          987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #34
991: new           #27
994: dup
995: invokespecial #28
998: ldc           #29
1000: invokevirtual #30
1003: aload         44
1005: invokevirtual #30
1008: ldc           #116
1010: invokevirtual #30
1013: invokevirtual #33
1016: aload         44
1018: ldc           #117
1020: invokestatic  #91
1023: return
Exception table:
from    to  target type
414   430   433   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test32
Start line: 1873
End line: 1881
Method source code: 
    public void test32() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test32");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("#<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", ":only-child", "[:only-of-type]", ":containsOwn( :last-of-type");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.String str6 = documentType4.nodeName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "#doctype" + "'", str6, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #221
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #222
30: ldc           #223
32: ldc           #224
34: ldc           #225
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #97
44: astore_2
45: aload_1
46: invokevirtual #97
49: astore_3
50: new           #27
53: dup
54: invokespecial #28
57: ldc           #29
59: invokevirtual #30
62: aload_2
63: invokevirtual #30
66: ldc           #102
68: invokevirtual #30
71: invokevirtual #33
74: aload_2
75: ldc           #103
77: invokestatic  #91
80: new           #27
83: dup
84: invokespecial #28
87: ldc           #29
89: invokevirtual #30
92: aload_3
93: invokevirtual #30
96: ldc           #102
98: invokevirtual #30
101: invokevirtual #33
104: aload_3
105: ldc           #103
107: invokestatic  #91
110: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test33
Start line: 1884
End line: 1972
Method source code: 
    public void test33() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test33");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings8 = new org.jsoup.nodes.Document.OutputSettings();
        int int9 = outputSettings8.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder10 = outputSettings8.encoder();
        documentType4.outerHtmlTail(stringBuilder6, (int) (short) 1, outputSettings8);
        java.lang.String str12 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.nodes.TextNode textNode17 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node18 = textNode17.parentNode;
        java.lang.String str19 = textNode17.nodeName();
        java.lang.String str20 = textNode17.nodeName();
        textNode17.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes23 = textNode17.attributes();
        java.lang.StringBuilder stringBuilder24 = null;
        org.jsoup.nodes.Attribute attribute28 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean30 = attribute28.shouldCollapseAttribute(outputSettings29);
        org.jsoup.nodes.Entities.EscapeMode escapeMode31 = outputSettings29.escapeMode();
        textNode17.outerHtmlTail(stringBuilder24, (int) (short) -1, outputSettings29);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax33 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings34 = outputSettings29.syntax(syntax33);
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = outputSettings29.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = outputSettings29.outline(true);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax38 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings37.syntax(syntax38);
        org.jsoup.parser.Parser parser43 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean44 = parser43.isTrackErrors();
        org.jsoup.nodes.Document document45 = org.jsoup.Jsoup.parse(" ", "#text", parser43);
        org.jsoup.nodes.Document.OutputSettings outputSettings46 = document45.getOutputSettings();
        java.lang.String str47 = org.jsoup.nodes.Entities.escape(":empty", outputSettings46);
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = outputSettings46.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode50 = outputSettings46.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = outputSettings37.escapeMode(escapeMode50);
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings37.outline(false);
        org.jsoup.parser.Parser parser57 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean58 = parser57.isTrackErrors();
        org.jsoup.nodes.Document document59 = org.jsoup.Jsoup.parse(" ", "#text", parser57);
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = document59.getOutputSettings();
        java.lang.String str61 = org.jsoup.nodes.Entities.escape(":empty", outputSettings60);
        org.jsoup.nodes.Document.OutputSettings outputSettings63 = outputSettings60.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode64 = outputSettings60.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings65 = outputSettings37.escapeMode(escapeMode64);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder13, 32, outputSettings37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#doctype" + "'", str12, "#doctype");
        org.junit.Assert.assertNotNull(textNode17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#text" + "'", str19, "#text");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#text" + "'", str20, "#text");
        org.junit.Assert.assertNotNull(attributes23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + escapeMode31 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode31.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax33 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax33.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings34);
        org.junit.Assert.assertNotNull(outputSettings35);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertTrue("'" + syntax38 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax38.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(parser43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(outputSettings46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ":empty" + "'", str47, ":empty");
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertTrue("'" + escapeMode50 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode50.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(parser57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(outputSettings60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ":empty" + "'", str61, ":empty");
        org.junit.Assert.assertNotNull(outputSettings63);
        org.junit.Assert.assertTrue("'" + escapeMode64 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode64.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings65);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #226
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #97
44: astore_2
45: aconst_null
46: astore_3
47: new           #13
50: dup
51: invokespecial #14
54: astore        4
56: aload         4
58: invokevirtual #15
61: istore        5
63: aload         4
65: invokevirtual #146
68: astore        6
70: aload_1
71: aload_3
72: iconst_1
73: aload         4
75: invokevirtual #87
78: aload_1
79: invokevirtual #97
82: astore        7
84: aconst_null
85: astore        8
87: ldc           #52
89: ldc           #52
91: invokestatic  #132
94: astore        9
96: aload         9
98: getfield      #133
101: astore        10
103: aload         9
105: invokevirtual #134
108: astore        11
110: aload         9
112: invokevirtual #134
115: astore        12
117: aload         9
119: ldc           #135
121: invokevirtual #136
124: aload         9
126: invokevirtual #137
129: astore        13
131: aconst_null
132: astore        14
134: new           #16
137: dup
138: ldc           #17
140: ldc           #18
142: invokespecial #19
145: astore        15
147: new           #13
150: dup
151: invokespecial #14
154: astore        16
156: aload         15
158: aload         16
160: invokevirtual #20
163: istore        17
165: aload         16
167: invokevirtual #21
170: astore        18
172: aload         9
174: aload         14
176: iconst_m1
177: aload         16
179: invokevirtual #86
182: getstatic     #49
185: astore        19
187: aload         16
189: aload         19
191: invokevirtual #138
194: astore        20
196: aload         16
198: invokevirtual #215
201: astore        21
203: aload         16
205: iconst_1
206: invokevirtual #44
209: astore        22
211: getstatic     #49
214: astore        23
216: aload         22
218: aload         23
220: invokevirtual #138
223: astore        24
225: invokestatic  #98
228: astore        25
230: aload         25
232: invokevirtual #99
235: istore        26
237: ldc           #72
239: ldc           #74
241: aload         25
243: invokestatic  #100
246: astore        27
248: aload         27
250: invokevirtual #101
253: astore        28
255: ldc           #212
257: aload         28
259: invokestatic  #112
262: astore        29
264: aload         28
266: iconst_0
267: invokevirtual #128
270: astore        30
272: aload         28
274: invokevirtual #21
277: astore        31
279: aload         22
281: aload         31
283: invokevirtual #22
286: astore        32
288: aload         22
290: iconst_0
291: invokevirtual #44
294: astore        33
296: invokestatic  #98
299: astore        34
301: aload         34
303: invokevirtual #99
306: istore        35
308: ldc           #72
310: ldc           #74
312: aload         34
314: invokestatic  #100
317: astore        36
319: aload         36
321: invokevirtual #101
324: astore        37
326: ldc           #212
328: aload         37
330: invokestatic  #112
333: astore        38
335: aload         37
337: iconst_0
338: invokevirtual #128
341: astore        39
343: aload         37
345: invokevirtual #21
348: astore        40
350: aload         22
352: aload         40
354: invokevirtual #22
357: astore        41
359: aload_1
360: aload         8
362: bipush        32
364: aload         22
366: invokevirtual #23
369: ldc           #24
371: invokestatic  #25
374: goto          379
377: astore        42
379: new           #27
382: dup
383: invokespecial #28
386: ldc           #29
388: invokevirtual #30
391: aload_2
392: invokevirtual #30
395: ldc           #102
397: invokevirtual #30
400: invokevirtual #33
403: aload_2
404: ldc           #103
406: invokestatic  #91
409: new           #27
412: dup
413: invokespecial #28
416: ldc           #29
418: invokevirtual #30
421: iload         5
423: invokevirtual #31
426: ldc           #32
428: invokevirtual #30
431: iconst_1
432: invokevirtual #31
435: ldc           #29
437: invokevirtual #30
440: invokevirtual #33
443: iload         5
445: iconst_1
446: if_icmpne     453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #34
457: aload         6
459: invokestatic  #39
462: new           #27
465: dup
466: invokespecial #28
469: ldc           #29
471: invokevirtual #30
474: aload         7
476: invokevirtual #30
479: ldc           #102
481: invokevirtual #30
484: invokevirtual #33
487: aload         7
489: ldc           #103
491: invokestatic  #91
494: aload         9
496: invokestatic  #39
499: aload         10
501: invokestatic  #139
504: new           #27
507: dup
508: invokespecial #28
511: ldc           #29
513: invokevirtual #30
516: aload         11
518: invokevirtual #30
521: ldc           #140
523: invokevirtual #30
526: invokevirtual #33
529: aload         11
531: ldc           #74
533: invokestatic  #91
536: new           #27
539: dup
540: invokespecial #28
543: ldc           #29
545: invokevirtual #30
548: aload         12
550: invokevirtual #30
553: ldc           #140
555: invokevirtual #30
558: invokevirtual #33
561: aload         12
563: ldc           #74
565: invokestatic  #91
568: aload         13
570: invokestatic  #39
573: new           #27
576: dup
577: invokespecial #28
580: ldc           #29
582: invokevirtual #30
585: iload         17
587: invokevirtual #35
590: ldc           #32
592: invokevirtual #30
595: iconst_0
596: invokevirtual #35
599: ldc           #29
601: invokevirtual #30
604: invokevirtual #33
607: iload         17
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #34
620: new           #27
623: dup
624: invokespecial #28
627: ldc           #29
629: invokevirtual #30
632: aload         18
634: invokevirtual #36
637: ldc           #32
639: invokevirtual #30
642: getstatic     #37
645: invokevirtual #36
648: ldc           #29
650: invokevirtual #30
653: invokevirtual #33
656: aload         18
658: getstatic     #37
661: invokevirtual #38
664: invokestatic  #34
667: new           #27
670: dup
671: invokespecial #28
674: ldc           #29
676: invokevirtual #30
679: aload         19
681: invokevirtual #36
684: ldc           #32
686: invokevirtual #30
689: getstatic     #49
692: invokevirtual #36
695: ldc           #29
697: invokevirtual #30
700: invokevirtual #33
703: aload         19
705: getstatic     #49
708: invokevirtual #50
711: invokestatic  #34
714: aload         20
716: invokestatic  #39
719: aload         21
721: invokestatic  #39
724: aload         22
726: invokestatic  #39
729: new           #27
732: dup
733: invokespecial #28
736: ldc           #29
738: invokevirtual #30
741: aload         23
743: invokevirtual #36
746: ldc           #32
748: invokevirtual #30
751: getstatic     #49
754: invokevirtual #36
757: ldc           #29
759: invokevirtual #30
762: invokevirtual #33
765: aload         23
767: getstatic     #49
770: invokevirtual #50
773: invokestatic  #34
776: aload         24
778: invokestatic  #39
781: aload         25
783: invokestatic  #39
786: new           #27
789: dup
790: invokespecial #28
793: ldc           #29
795: invokevirtual #30
798: iload         26
800: invokevirtual #35
803: ldc           #32
805: invokevirtual #30
808: iconst_0
809: invokevirtual #35
812: ldc           #29
814: invokevirtual #30
817: invokevirtual #33
820: iload         26
822: ifne          829
825: iconst_1
826: goto          830
829: iconst_0
830: invokestatic  #34
833: aload         27
835: invokestatic  #39
838: aload         28
840: invokestatic  #39
843: new           #27
846: dup
847: invokespecial #28
850: ldc           #29
852: invokevirtual #30
855: aload         29
857: invokevirtual #30
860: ldc           #213
862: invokevirtual #30
865: invokevirtual #33
868: aload         29
870: ldc           #212
872: invokestatic  #91
875: aload         30
877: invokestatic  #39
880: new           #27
883: dup
884: invokespecial #28
887: ldc           #29
889: invokevirtual #30
892: aload         31
894: invokevirtual #36
897: ldc           #32
899: invokevirtual #30
902: getstatic     #37
905: invokevirtual #36
908: ldc           #29
910: invokevirtual #30
913: invokevirtual #33
916: aload         31
918: getstatic     #37
921: invokevirtual #38
924: invokestatic  #34
927: aload         32
929: invokestatic  #39
932: aload         33
934: invokestatic  #39
937: aload         34
939: invokestatic  #39
942: new           #27
945: dup
946: invokespecial #28
949: ldc           #29
951: invokevirtual #30
954: iload         35
956: invokevirtual #35
959: ldc           #32
961: invokevirtual #30
964: iconst_0
965: invokevirtual #35
968: ldc           #29
970: invokevirtual #30
973: invokevirtual #33
976: iload         35
978: ifne          985
981: iconst_1
982: goto          986
985: iconst_0
986: invokestatic  #34
989: aload         36
991: invokestatic  #39
994: aload         37
996: invokestatic  #39
999: new           #27
1002: dup
1003: invokespecial #28
1006: ldc           #29
1008: invokevirtual #30
1011: aload         38
1013: invokevirtual #30
1016: ldc           #213
1018: invokevirtual #30
1021: invokevirtual #33
1024: aload         38
1026: ldc           #212
1028: invokestatic  #91
1031: aload         39
1033: invokestatic  #39
1036: new           #27
1039: dup
1040: invokespecial #28
1043: ldc           #29
1045: invokevirtual #30
1048: aload         40
1050: invokevirtual #36
1053: ldc           #32
1055: invokevirtual #30
1058: getstatic     #37
1061: invokevirtual #36
1064: ldc           #29
1066: invokevirtual #30
1069: invokevirtual #33
1072: aload         40
1074: getstatic     #37
1077: invokevirtual #38
1080: invokestatic  #34
1083: aload         41
1085: invokestatic  #39
1088: return
Exception table:
from    to  target type
359   374   377   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test34
Start line: 1975
End line: 2058
Method source code: 
    public void test34() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test34");
        org.jsoup.nodes.Comment comment2 = new org.jsoup.nodes.Comment("body", "<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>");
        java.lang.StringBuilder stringBuilder3 = null;
        org.jsoup.nodes.DocumentType documentType9 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder10 = null;
        org.jsoup.nodes.TextNode textNode14 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str15 = textNode14.getWholeText();
        java.lang.String str17 = textNode14.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder18 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType20 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document23 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element27 = document25.toggleClass("");
        java.lang.String str28 = element27.tagName();
        org.jsoup.nodes.Element element30 = element27.toggleClass("");
        boolean boolean31 = isOnlyOfType20.matches((org.jsoup.nodes.Element) document23, element27);
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements36 = document34.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element38 = document34.text(" ");
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements43 = document41.getElementsContainingText("#data");
        boolean boolean44 = isOnlyOfType20.matches((org.jsoup.nodes.Element) document34, (org.jsoup.nodes.Element) document41);
        org.jsoup.nodes.Comment comment47 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean49 = comment47.hasAttr("hi!");
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element53 = document51.toggleClass("");
        org.jsoup.nodes.Node node54 = document51.clone();
        org.jsoup.nodes.Node node55 = comment47.doClone(node54);
        java.lang.StringBuilder stringBuilder56 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings58 = null;
        comment47.outerHtmlTail(stringBuilder56, 10, outputSettings58);
        java.lang.String str60 = comment47.getData();
        java.lang.String str61 = comment47.nodeName();
        java.lang.StringBuilder stringBuilder62 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = new org.jsoup.nodes.Document.OutputSettings();
        int int65 = outputSettings64.indentAmount();
        comment47.outerHtmlTail(stringBuilder62, 0, outputSettings64);
        boolean boolean67 = document41.equals((java.lang.Object) outputSettings64);
        textNode14.outerHtmlTail(stringBuilder18, (int) (short) 100, outputSettings64);
        documentType9.outerHtmlTail(stringBuilder10, (int) (short) 1, outputSettings64);
        java.lang.StringBuilder stringBuilder70 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = new org.jsoup.nodes.Document.OutputSettings();
        int int73 = outputSettings72.indentAmount();
        documentType9.outerHtmlTail(stringBuilder70, 0, outputSettings72);
        org.jsoup.nodes.Entities.EscapeMode escapeMode75 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = outputSettings72.escapeMode(escapeMode75);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings76.prettyPrint(false);
        // The following exception was thrown during execution in test generation
        try {
            comment2.outerHtmlHead(stringBuilder3, 32, outputSettings78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#root" + "'", str28, "#root");
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(elements43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#comment" + "'", str61, "#comment");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode75 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode75.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(outputSettings78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #227
19: aastore
20: invokevirtual #7
23: pop
24: new           #77
27: dup
28: ldc           #228
30: ldc           #188
32: invokespecial #78
35: astore_1
36: aconst_null
37: astore_2
38: new           #8
41: dup
42: ldc           #9
44: ldc           #10
46: ldc           #11
48: ldc           #9
50: invokespecial #12
53: astore_3
54: aconst_null
55: astore        4
57: new           #58
60: dup
61: ldc           #9
63: ldc           #59
65: invokespecial #60
68: astore        5
70: aload         5
72: invokevirtual #61
75: astore        6
77: aload         5
79: ldc           #62
81: invokevirtual #63
84: astore        7
86: aconst_null
87: astore        8
89: new           #64
92: dup
93: invokespecial #65
96: astore        9
98: ldc           #9
100: ldc           #9
102: invokestatic  #66
105: astore        10
107: ldc           #52
109: invokestatic  #53
112: astore        11
114: aload         11
116: ldc           #9
118: invokevirtual #54
121: astore        12
123: aload         12
125: invokevirtual #67
128: astore        13
130: aload         12
132: ldc           #9
134: invokevirtual #68
137: astore        14
139: aload         9
141: aload         10
143: aload         12
145: invokevirtual #69
148: istore        15
150: ldc           #59
152: ldc           #52
154: invokestatic  #70
157: astore        16
159: aload         16
161: bipush        100
163: invokevirtual #71
166: astore        17
168: aload         16
170: ldc           #72
172: invokevirtual #73
175: astore        18
177: ldc           #74
179: ldc           #52
181: invokestatic  #70
184: astore        19
186: aload         19
188: ldc           #75
190: invokevirtual #76
193: astore        20
195: aload         9
197: aload         16
199: aload         19
201: invokevirtual #69
204: istore        21
206: new           #77
209: dup
210: ldc           #52
212: ldc           #52
214: invokespecial #78
217: astore        22
219: aload         22
221: ldc           #52
223: invokevirtual #79
226: istore        23
228: ldc           #52
230: invokestatic  #53
233: astore        24
235: aload         24
237: ldc           #9
239: invokevirtual #54
242: astore        25
244: aload         24
246: invokevirtual #80
249: astore        26
251: aload         22
253: aload         26
255: invokevirtual #81
258: astore        27
260: aconst_null
261: astore        28
263: aconst_null
264: astore        29
266: aload         22
268: aload         28
270: bipush        10
272: aload         29
274: invokevirtual #82
277: aload         22
279: invokevirtual #83
282: astore        30
284: aload         22
286: invokevirtual #84
289: astore        31
291: aconst_null
292: astore        32
294: new           #13
297: dup
298: invokespecial #14
301: astore        33
303: aload         33
305: invokevirtual #15
308: istore        34
310: aload         22
312: aload         32
314: iconst_0
315: aload         33
317: invokevirtual #82
320: aload         19
322: aload         33
324: invokevirtual #85
327: istore        35
329: aload         5
331: aload         8
333: bipush        100
335: aload         33
337: invokevirtual #86
340: aload_3
341: aload         4
343: iconst_1
344: aload         33
346: invokevirtual #87
349: aconst_null
350: astore        36
352: new           #13
355: dup
356: invokespecial #14
359: astore        37
361: aload         37
363: invokevirtual #15
366: istore        38
368: aload_3
369: aload         36
371: iconst_0
372: aload         37
374: invokevirtual #87
377: getstatic     #127
380: astore        39
382: aload         37
384: aload         39
386: invokevirtual #22
389: astore        40
391: aload         40
393: iconst_0
394: invokevirtual #128
397: astore        41
399: aload_1
400: aload_2
401: bipush        32
403: aload         41
405: invokevirtual #229
408: ldc           #24
410: invokestatic  #25
413: goto          418
416: astore        42
418: new           #27
421: dup
422: invokespecial #28
425: ldc           #29
427: invokevirtual #30
430: aload         6
432: invokevirtual #30
435: ldc           #90
437: invokevirtual #30
440: invokevirtual #33
443: aload         6
445: ldc           #9
447: invokestatic  #91
450: new           #27
453: dup
454: invokespecial #28
457: ldc           #29
459: invokevirtual #30
462: aload         7
464: invokevirtual #30
467: ldc           #90
469: invokevirtual #30
472: invokevirtual #33
475: aload         7
477: ldc           #9
479: invokestatic  #91
482: aload         10
484: invokestatic  #39
487: aload         11
489: invokestatic  #39
492: aload         12
494: invokestatic  #39
497: new           #27
500: dup
501: invokespecial #28
504: ldc           #29
506: invokevirtual #30
509: aload         13
511: invokevirtual #30
514: ldc           #92
516: invokevirtual #30
519: invokevirtual #33
522: aload         13
524: ldc           #17
526: invokestatic  #91
529: aload         14
531: invokestatic  #39
534: new           #27
537: dup
538: invokespecial #28
541: ldc           #29
543: invokevirtual #30
546: iload         15
548: invokevirtual #35
551: ldc           #32
553: invokevirtual #30
556: iconst_0
557: invokevirtual #35
560: ldc           #29
562: invokevirtual #30
565: invokevirtual #33
568: iload         15
570: ifne          577
573: iconst_1
574: goto          578
577: iconst_0
578: invokestatic  #34
581: aload         16
583: invokestatic  #39
586: aload         17
588: invokestatic  #39
591: aload         18
593: invokestatic  #39
596: aload         19
598: invokestatic  #39
601: aload         20
603: invokestatic  #39
606: new           #27
609: dup
610: invokespecial #28
613: ldc           #29
615: invokevirtual #30
618: iload         21
620: invokevirtual #35
623: ldc           #32
625: invokevirtual #30
628: iconst_0
629: invokevirtual #35
632: ldc           #29
634: invokevirtual #30
637: invokevirtual #33
640: iload         21
642: ifne          649
645: iconst_1
646: goto          650
649: iconst_0
650: invokestatic  #34
653: new           #27
656: dup
657: invokespecial #28
660: ldc           #29
662: invokevirtual #30
665: iload         23
667: invokevirtual #35
670: ldc           #32
672: invokevirtual #30
675: iconst_0
676: invokevirtual #35
679: ldc           #29
681: invokevirtual #30
684: invokevirtual #33
687: iload         23
689: ifne          696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #34
700: aload         24
702: invokestatic  #39
705: aload         25
707: invokestatic  #39
710: aload         26
712: invokestatic  #39
715: aload         27
717: invokestatic  #39
720: new           #27
723: dup
724: invokespecial #28
727: ldc           #29
729: invokevirtual #30
732: aload         30
734: invokevirtual #30
737: ldc           #93
739: invokevirtual #30
742: invokevirtual #33
745: aload         30
747: ldc           #52
749: invokestatic  #91
752: new           #27
755: dup
756: invokespecial #28
759: ldc           #29
761: invokevirtual #30
764: aload         31
766: invokevirtual #30
769: ldc           #94
771: invokevirtual #30
774: invokevirtual #33
777: aload         31
779: ldc           #95
781: invokestatic  #91
784: new           #27
787: dup
788: invokespecial #28
791: ldc           #29
793: invokevirtual #30
796: iload         34
798: invokevirtual #31
801: ldc           #32
803: invokevirtual #30
806: iconst_1
807: invokevirtual #31
810: ldc           #29
812: invokevirtual #30
815: invokevirtual #33
818: iload         34
820: iconst_1
821: if_icmpne     828
824: iconst_1
825: goto          829
828: iconst_0
829: invokestatic  #34
832: new           #27
835: dup
836: invokespecial #28
839: ldc           #29
841: invokevirtual #30
844: iload         35
846: invokevirtual #35
849: ldc           #32
851: invokevirtual #30
854: iconst_0
855: invokevirtual #35
858: ldc           #29
860: invokevirtual #30
863: invokevirtual #33
866: iload         35
868: ifne          875
871: iconst_1
872: goto          876
875: iconst_0
876: invokestatic  #34
879: new           #27
882: dup
883: invokespecial #28
886: ldc           #29
888: invokevirtual #30
891: iload         38
893: invokevirtual #31
896: ldc           #32
898: invokevirtual #30
901: iconst_1
902: invokevirtual #31
905: ldc           #29
907: invokevirtual #30
910: invokevirtual #33
913: iload         38
915: iconst_1
916: if_icmpne     923
919: iconst_1
920: goto          924
923: iconst_0
924: invokestatic  #34
927: new           #27
930: dup
931: invokespecial #28
934: ldc           #29
936: invokevirtual #30
939: aload         39
941: invokevirtual #36
944: ldc           #32
946: invokevirtual #30
949: getstatic     #127
952: invokevirtual #36
955: ldc           #29
957: invokevirtual #30
960: invokevirtual #33
963: aload         39
965: getstatic     #127
968: invokevirtual #38
971: invokestatic  #34
974: aload         40
976: invokestatic  #39
979: aload         41
981: invokestatic  #39
984: return
Exception table:
from    to  target type
399   413   416   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test35
Start line: 2061
End line: 2166
Method source code: 
    public void test35() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test35");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        java.lang.StringBuilder stringBuilder70 = null;
        org.jsoup.nodes.TextNode textNode74 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node75 = textNode74.parentNode;
        java.lang.String str76 = textNode74.nodeName();
        java.lang.String str77 = textNode74.nodeName();
        textNode74.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes80 = textNode74.attributes();
        org.jsoup.nodes.Document.OutputSettings outputSettings81 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean82 = attributes80.equals((java.lang.Object) outputSettings81);
        documentType4.outerHtmlTail(stringBuilder70, (int) (short) 1, outputSettings81);
        java.lang.String str84 = documentType4.nodeName();
        org.jsoup.nodes.Attributes attributes85 = documentType4.attributes;
        java.lang.StringBuilder stringBuilder86 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings87 = new org.jsoup.nodes.Document.OutputSettings();
        int int88 = outputSettings87.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder89 = outputSettings87.encoder();
        boolean boolean90 = outputSettings87.outline();
        org.jsoup.nodes.Document.OutputSettings outputSettings92 = outputSettings87.outline(false);
        // The following exception was thrown during execution in test generation
        try {
            attributes85.html(stringBuilder86, outputSettings92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(textNode74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "#text" + "'", str76, "#text");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "#text" + "'", str77, "#text");
        org.junit.Assert.assertNotNull(attributes80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "#doctype" + "'", str84, "#doctype");
        org.junit.Assert.assertNotNull(attributes85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(outputSettings92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #230
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #58
45: dup
46: ldc           #9
48: ldc           #59
50: invokespecial #60
53: astore_3
54: aload_3
55: invokevirtual #61
58: astore        4
60: aload_3
61: ldc           #62
63: invokevirtual #63
66: astore        5
68: aconst_null
69: astore        6
71: new           #64
74: dup
75: invokespecial #65
78: astore        7
80: ldc           #9
82: ldc           #9
84: invokestatic  #66
87: astore        8
89: ldc           #52
91: invokestatic  #53
94: astore        9
96: aload         9
98: ldc           #9
100: invokevirtual #54
103: astore        10
105: aload         10
107: invokevirtual #67
110: astore        11
112: aload         10
114: ldc           #9
116: invokevirtual #68
119: astore        12
121: aload         7
123: aload         8
125: aload         10
127: invokevirtual #69
130: istore        13
132: ldc           #59
134: ldc           #52
136: invokestatic  #70
139: astore        14
141: aload         14
143: bipush        100
145: invokevirtual #71
148: astore        15
150: aload         14
152: ldc           #72
154: invokevirtual #73
157: astore        16
159: ldc           #74
161: ldc           #52
163: invokestatic  #70
166: astore        17
168: aload         17
170: ldc           #75
172: invokevirtual #76
175: astore        18
177: aload         7
179: aload         14
181: aload         17
183: invokevirtual #69
186: istore        19
188: new           #77
191: dup
192: ldc           #52
194: ldc           #52
196: invokespecial #78
199: astore        20
201: aload         20
203: ldc           #52
205: invokevirtual #79
208: istore        21
210: ldc           #52
212: invokestatic  #53
215: astore        22
217: aload         22
219: ldc           #9
221: invokevirtual #54
224: astore        23
226: aload         22
228: invokevirtual #80
231: astore        24
233: aload         20
235: aload         24
237: invokevirtual #81
240: astore        25
242: aconst_null
243: astore        26
245: aconst_null
246: astore        27
248: aload         20
250: aload         26
252: bipush        10
254: aload         27
256: invokevirtual #82
259: aload         20
261: invokevirtual #83
264: astore        28
266: aload         20
268: invokevirtual #84
271: astore        29
273: aconst_null
274: astore        30
276: new           #13
279: dup
280: invokespecial #14
283: astore        31
285: aload         31
287: invokevirtual #15
290: istore        32
292: aload         20
294: aload         30
296: iconst_0
297: aload         31
299: invokevirtual #82
302: aload         17
304: aload         31
306: invokevirtual #85
309: istore        33
311: aload_3
312: aload         6
314: bipush        100
316: aload         31
318: invokevirtual #86
321: aload_1
322: aload_2
323: iconst_1
324: aload         31
326: invokevirtual #87
329: aconst_null
330: astore        34
332: new           #13
335: dup
336: invokespecial #14
339: astore        35
341: aload         35
343: invokevirtual #15
346: istore        36
348: aload_1
349: aload         34
351: iconst_0
352: aload         35
354: invokevirtual #87
357: aconst_null
358: astore        37
360: ldc           #52
362: ldc           #52
364: invokestatic  #132
367: astore        38
369: aload         38
371: getfield      #133
374: astore        39
376: aload         38
378: invokevirtual #134
381: astore        40
383: aload         38
385: invokevirtual #134
388: astore        41
390: aload         38
392: ldc           #135
394: invokevirtual #136
397: aload         38
399: invokevirtual #137
402: astore        42
404: new           #13
407: dup
408: invokespecial #14
411: astore        43
413: aload         42
415: aload         43
417: invokevirtual #150
420: istore        44
422: aload_1
423: aload         37
425: iconst_1
426: aload         43
428: invokevirtual #87
431: aload_1
432: invokevirtual #97
435: astore        45
437: aload_1
438: getfield      #231
441: astore        46
443: aconst_null
444: astore        47
446: new           #13
449: dup
450: invokespecial #14
453: astore        48
455: aload         48
457: invokevirtual #15
460: istore        49
462: aload         48
464: invokevirtual #146
467: astore        50
469: aload         48
471: invokevirtual #232
474: istore        51
476: aload         48
478: iconst_0
479: invokevirtual #44
482: astore        52
484: aload         46
486: aload         47
488: aload         52
490: invokevirtual #233
493: ldc           #24
495: invokestatic  #25
498: goto          503
501: astore        53
503: new           #27
506: dup
507: invokespecial #28
510: ldc           #29
512: invokevirtual #30
515: aload         4
517: invokevirtual #30
520: ldc           #90
522: invokevirtual #30
525: invokevirtual #33
528: aload         4
530: ldc           #9
532: invokestatic  #91
535: new           #27
538: dup
539: invokespecial #28
542: ldc           #29
544: invokevirtual #30
547: aload         5
549: invokevirtual #30
552: ldc           #90
554: invokevirtual #30
557: invokevirtual #33
560: aload         5
562: ldc           #9
564: invokestatic  #91
567: aload         8
569: invokestatic  #39
572: aload         9
574: invokestatic  #39
577: aload         10
579: invokestatic  #39
582: new           #27
585: dup
586: invokespecial #28
589: ldc           #29
591: invokevirtual #30
594: aload         11
596: invokevirtual #30
599: ldc           #92
601: invokevirtual #30
604: invokevirtual #33
607: aload         11
609: ldc           #17
611: invokestatic  #91
614: aload         12
616: invokestatic  #39
619: new           #27
622: dup
623: invokespecial #28
626: ldc           #29
628: invokevirtual #30
631: iload         13
633: invokevirtual #35
636: ldc           #32
638: invokevirtual #30
641: iconst_0
642: invokevirtual #35
645: ldc           #29
647: invokevirtual #30
650: invokevirtual #33
653: iload         13
655: ifne          662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #34
666: aload         14
668: invokestatic  #39
671: aload         15
673: invokestatic  #39
676: aload         16
678: invokestatic  #39
681: aload         17
683: invokestatic  #39
686: aload         18
688: invokestatic  #39
691: new           #27
694: dup
695: invokespecial #28
698: ldc           #29
700: invokevirtual #30
703: iload         19
705: invokevirtual #35
708: ldc           #32
710: invokevirtual #30
713: iconst_0
714: invokevirtual #35
717: ldc           #29
719: invokevirtual #30
722: invokevirtual #33
725: iload         19
727: ifne          734
730: iconst_1
731: goto          735
734: iconst_0
735: invokestatic  #34
738: new           #27
741: dup
742: invokespecial #28
745: ldc           #29
747: invokevirtual #30
750: iload         21
752: invokevirtual #35
755: ldc           #32
757: invokevirtual #30
760: iconst_0
761: invokevirtual #35
764: ldc           #29
766: invokevirtual #30
769: invokevirtual #33
772: iload         21
774: ifne          781
777: iconst_1
778: goto          782
781: iconst_0
782: invokestatic  #34
785: aload         22
787: invokestatic  #39
790: aload         23
792: invokestatic  #39
795: aload         24
797: invokestatic  #39
800: aload         25
802: invokestatic  #39
805: new           #27
808: dup
809: invokespecial #28
812: ldc           #29
814: invokevirtual #30
817: aload         28
819: invokevirtual #30
822: ldc           #93
824: invokevirtual #30
827: invokevirtual #33
830: aload         28
832: ldc           #52
834: invokestatic  #91
837: new           #27
840: dup
841: invokespecial #28
844: ldc           #29
846: invokevirtual #30
849: aload         29
851: invokevirtual #30
854: ldc           #94
856: invokevirtual #30
859: invokevirtual #33
862: aload         29
864: ldc           #95
866: invokestatic  #91
869: new           #27
872: dup
873: invokespecial #28
876: ldc           #29
878: invokevirtual #30
881: iload         32
883: invokevirtual #31
886: ldc           #32
888: invokevirtual #30
891: iconst_1
892: invokevirtual #31
895: ldc           #29
897: invokevirtual #30
900: invokevirtual #33
903: iload         32
905: iconst_1
906: if_icmpne     913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #34
917: new           #27
920: dup
921: invokespecial #28
924: ldc           #29
926: invokevirtual #30
929: iload         33
931: invokevirtual #35
934: ldc           #32
936: invokevirtual #30
939: iconst_0
940: invokevirtual #35
943: ldc           #29
945: invokevirtual #30
948: invokevirtual #33
951: iload         33
953: ifne          960
956: iconst_1
957: goto          961
960: iconst_0
961: invokestatic  #34
964: new           #27
967: dup
968: invokespecial #28
971: ldc           #29
973: invokevirtual #30
976: iload         36
978: invokevirtual #31
981: ldc           #32
983: invokevirtual #30
986: iconst_1
987: invokevirtual #31
990: ldc           #29
992: invokevirtual #30
995: invokevirtual #33
998: iload         36
1000: iconst_1
1001: if_icmpne     1008
1004: iconst_1
1005: goto          1009
1008: iconst_0
1009: invokestatic  #34
1012: aload         38
1014: invokestatic  #39
1017: aload         39
1019: invokestatic  #139
1022: new           #27
1025: dup
1026: invokespecial #28
1029: ldc           #29
1031: invokevirtual #30
1034: aload         40
1036: invokevirtual #30
1039: ldc           #140
1041: invokevirtual #30
1044: invokevirtual #33
1047: aload         40
1049: ldc           #74
1051: invokestatic  #91
1054: new           #27
1057: dup
1058: invokespecial #28
1061: ldc           #29
1063: invokevirtual #30
1066: aload         41
1068: invokevirtual #30
1071: ldc           #140
1073: invokevirtual #30
1076: invokevirtual #33
1079: aload         41
1081: ldc           #74
1083: invokestatic  #91
1086: aload         42
1088: invokestatic  #39
1091: new           #27
1094: dup
1095: invokespecial #28
1098: ldc           #29
1100: invokevirtual #30
1103: iload         44
1105: invokevirtual #35
1108: ldc           #32
1110: invokevirtual #30
1113: iconst_0
1114: invokevirtual #35
1117: ldc           #29
1119: invokevirtual #30
1122: invokevirtual #33
1125: iload         44
1127: ifne          1134
1130: iconst_1
1131: goto          1135
1134: iconst_0
1135: invokestatic  #34
1138: new           #27
1141: dup
1142: invokespecial #28
1145: ldc           #29
1147: invokevirtual #30
1150: aload         45
1152: invokevirtual #30
1155: ldc           #102
1157: invokevirtual #30
1160: invokevirtual #33
1163: aload         45
1165: ldc           #103
1167: invokestatic  #91
1170: aload         46
1172: invokestatic  #39
1175: new           #27
1178: dup
1179: invokespecial #28
1182: ldc           #29
1184: invokevirtual #30
1187: iload         49
1189: invokevirtual #31
1192: ldc           #32
1194: invokevirtual #30
1197: iconst_1
1198: invokevirtual #31
1201: ldc           #29
1203: invokevirtual #30
1206: invokevirtual #33
1209: iload         49
1211: iconst_1
1212: if_icmpne     1219
1215: iconst_1
1216: goto          1220
1219: iconst_0
1220: invokestatic  #34
1223: aload         50
1225: invokestatic  #39
1228: new           #27
1231: dup
1232: invokespecial #28
1235: ldc           #29
1237: invokevirtual #30
1240: iload         51
1242: invokevirtual #35
1245: ldc           #32
1247: invokevirtual #30
1250: iconst_0
1251: invokevirtual #35
1254: ldc           #29
1256: invokevirtual #30
1259: invokevirtual #33
1262: iload         51
1264: ifne          1271
1267: iconst_1
1268: goto          1272
1271: iconst_0
1272: invokestatic  #34
1275: aload         52
1277: invokestatic  #39
1280: return
Exception table:
from    to  target type
484   498   501   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test36
Start line: 2169
End line: 2177
Method source code: 
    public void test36() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test36");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[#data!=:last-child]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]", " #comment=\"#root\"", "");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.String str6 = documentType4.nodeName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "#doctype" + "'", str6, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #234
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #180
30: ldc           #131
32: ldc           #108
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #97
44: astore_2
45: aload_1
46: invokevirtual #97
49: astore_3
50: new           #27
53: dup
54: invokespecial #28
57: ldc           #29
59: invokevirtual #30
62: aload_2
63: invokevirtual #30
66: ldc           #102
68: invokevirtual #30
71: invokevirtual #33
74: aload_2
75: ldc           #103
77: invokestatic  #91
80: new           #27
83: dup
84: invokespecial #28
87: ldc           #29
89: invokevirtual #30
92: aload_3
93: invokevirtual #30
96: ldc           #102
98: invokevirtual #30
101: invokevirtual #33
104: aload_3
105: ldc           #103
107: invokestatic  #91
110: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test37
Start line: 2180
End line: 2252
Method source code: 
    public void test37() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test37");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        java.lang.String str70 = documentType4.nodeName();
        java.lang.String str71 = documentType4.nodeName();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#doctype" + "'", str70, "#doctype");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "#doctype" + "'", str71, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #235
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: new           #58
45: dup
46: ldc           #9
48: ldc           #59
50: invokespecial #60
53: astore_3
54: aload_3
55: invokevirtual #61
58: astore        4
60: aload_3
61: ldc           #62
63: invokevirtual #63
66: astore        5
68: aconst_null
69: astore        6
71: new           #64
74: dup
75: invokespecial #65
78: astore        7
80: ldc           #9
82: ldc           #9
84: invokestatic  #66
87: astore        8
89: ldc           #52
91: invokestatic  #53
94: astore        9
96: aload         9
98: ldc           #9
100: invokevirtual #54
103: astore        10
105: aload         10
107: invokevirtual #67
110: astore        11
112: aload         10
114: ldc           #9
116: invokevirtual #68
119: astore        12
121: aload         7
123: aload         8
125: aload         10
127: invokevirtual #69
130: istore        13
132: ldc           #59
134: ldc           #52
136: invokestatic  #70
139: astore        14
141: aload         14
143: bipush        100
145: invokevirtual #71
148: astore        15
150: aload         14
152: ldc           #72
154: invokevirtual #73
157: astore        16
159: ldc           #74
161: ldc           #52
163: invokestatic  #70
166: astore        17
168: aload         17
170: ldc           #75
172: invokevirtual #76
175: astore        18
177: aload         7
179: aload         14
181: aload         17
183: invokevirtual #69
186: istore        19
188: new           #77
191: dup
192: ldc           #52
194: ldc           #52
196: invokespecial #78
199: astore        20
201: aload         20
203: ldc           #52
205: invokevirtual #79
208: istore        21
210: ldc           #52
212: invokestatic  #53
215: astore        22
217: aload         22
219: ldc           #9
221: invokevirtual #54
224: astore        23
226: aload         22
228: invokevirtual #80
231: astore        24
233: aload         20
235: aload         24
237: invokevirtual #81
240: astore        25
242: aconst_null
243: astore        26
245: aconst_null
246: astore        27
248: aload         20
250: aload         26
252: bipush        10
254: aload         27
256: invokevirtual #82
259: aload         20
261: invokevirtual #83
264: astore        28
266: aload         20
268: invokevirtual #84
271: astore        29
273: aconst_null
274: astore        30
276: new           #13
279: dup
280: invokespecial #14
283: astore        31
285: aload         31
287: invokevirtual #15
290: istore        32
292: aload         20
294: aload         30
296: iconst_0
297: aload         31
299: invokevirtual #82
302: aload         17
304: aload         31
306: invokevirtual #85
309: istore        33
311: aload_3
312: aload         6
314: bipush        100
316: aload         31
318: invokevirtual #86
321: aload_1
322: aload_2
323: iconst_1
324: aload         31
326: invokevirtual #87
329: aconst_null
330: astore        34
332: new           #13
335: dup
336: invokespecial #14
339: astore        35
341: aload         35
343: invokevirtual #15
346: istore        36
348: aload_1
349: aload         34
351: iconst_0
352: aload         35
354: invokevirtual #87
357: aload_1
358: invokevirtual #97
361: astore        37
363: aload_1
364: invokevirtual #97
367: astore        38
369: new           #27
372: dup
373: invokespecial #28
376: ldc           #29
378: invokevirtual #30
381: aload         4
383: invokevirtual #30
386: ldc           #90
388: invokevirtual #30
391: invokevirtual #33
394: aload         4
396: ldc           #9
398: invokestatic  #91
401: new           #27
404: dup
405: invokespecial #28
408: ldc           #29
410: invokevirtual #30
413: aload         5
415: invokevirtual #30
418: ldc           #90
420: invokevirtual #30
423: invokevirtual #33
426: aload         5
428: ldc           #9
430: invokestatic  #91
433: aload         8
435: invokestatic  #39
438: aload         9
440: invokestatic  #39
443: aload         10
445: invokestatic  #39
448: new           #27
451: dup
452: invokespecial #28
455: ldc           #29
457: invokevirtual #30
460: aload         11
462: invokevirtual #30
465: ldc           #92
467: invokevirtual #30
470: invokevirtual #33
473: aload         11
475: ldc           #17
477: invokestatic  #91
480: aload         12
482: invokestatic  #39
485: new           #27
488: dup
489: invokespecial #28
492: ldc           #29
494: invokevirtual #30
497: iload         13
499: invokevirtual #35
502: ldc           #32
504: invokevirtual #30
507: iconst_0
508: invokevirtual #35
511: ldc           #29
513: invokevirtual #30
516: invokevirtual #33
519: iload         13
521: ifne          528
524: iconst_1
525: goto          529
528: iconst_0
529: invokestatic  #34
532: aload         14
534: invokestatic  #39
537: aload         15
539: invokestatic  #39
542: aload         16
544: invokestatic  #39
547: aload         17
549: invokestatic  #39
552: aload         18
554: invokestatic  #39
557: new           #27
560: dup
561: invokespecial #28
564: ldc           #29
566: invokevirtual #30
569: iload         19
571: invokevirtual #35
574: ldc           #32
576: invokevirtual #30
579: iconst_0
580: invokevirtual #35
583: ldc           #29
585: invokevirtual #30
588: invokevirtual #33
591: iload         19
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #34
604: new           #27
607: dup
608: invokespecial #28
611: ldc           #29
613: invokevirtual #30
616: iload         21
618: invokevirtual #35
621: ldc           #32
623: invokevirtual #30
626: iconst_0
627: invokevirtual #35
630: ldc           #29
632: invokevirtual #30
635: invokevirtual #33
638: iload         21
640: ifne          647
643: iconst_1
644: goto          648
647: iconst_0
648: invokestatic  #34
651: aload         22
653: invokestatic  #39
656: aload         23
658: invokestatic  #39
661: aload         24
663: invokestatic  #39
666: aload         25
668: invokestatic  #39
671: new           #27
674: dup
675: invokespecial #28
678: ldc           #29
680: invokevirtual #30
683: aload         28
685: invokevirtual #30
688: ldc           #93
690: invokevirtual #30
693: invokevirtual #33
696: aload         28
698: ldc           #52
700: invokestatic  #91
703: new           #27
706: dup
707: invokespecial #28
710: ldc           #29
712: invokevirtual #30
715: aload         29
717: invokevirtual #30
720: ldc           #94
722: invokevirtual #30
725: invokevirtual #33
728: aload         29
730: ldc           #95
732: invokestatic  #91
735: new           #27
738: dup
739: invokespecial #28
742: ldc           #29
744: invokevirtual #30
747: iload         32
749: invokevirtual #31
752: ldc           #32
754: invokevirtual #30
757: iconst_1
758: invokevirtual #31
761: ldc           #29
763: invokevirtual #30
766: invokevirtual #33
769: iload         32
771: iconst_1
772: if_icmpne     779
775: iconst_1
776: goto          780
779: iconst_0
780: invokestatic  #34
783: new           #27
786: dup
787: invokespecial #28
790: ldc           #29
792: invokevirtual #30
795: iload         33
797: invokevirtual #35
800: ldc           #32
802: invokevirtual #30
805: iconst_0
806: invokevirtual #35
809: ldc           #29
811: invokevirtual #30
814: invokevirtual #33
817: iload         33
819: ifne          826
822: iconst_1
823: goto          827
826: iconst_0
827: invokestatic  #34
830: new           #27
833: dup
834: invokespecial #28
837: ldc           #29
839: invokevirtual #30
842: iload         36
844: invokevirtual #31
847: ldc           #32
849: invokevirtual #30
852: iconst_1
853: invokevirtual #31
856: ldc           #29
858: invokevirtual #30
861: invokevirtual #33
864: iload         36
866: iconst_1
867: if_icmpne     874
870: iconst_1
871: goto          875
874: iconst_0
875: invokestatic  #34
878: new           #27
881: dup
882: invokespecial #28
885: ldc           #29
887: invokevirtual #30
890: aload         37
892: invokevirtual #30
895: ldc           #102
897: invokevirtual #30
900: invokevirtual #33
903: aload         37
905: ldc           #103
907: invokestatic  #91
910: new           #27
913: dup
914: invokespecial #28
917: ldc           #29
919: invokevirtual #30
922: aload         38
924: invokevirtual #30
927: ldc           #102
929: invokevirtual #30
932: invokevirtual #33
935: aload         38
937: ldc           #103
939: invokestatic  #91
942: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test38
Start line: 2255
End line: 2263
Method source code: 
    public void test38() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test38");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[#data!=:last-child]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]", " #comment=\"#root\"", "");
        java.lang.String str5 = documentType4.nodeName();
        org.jsoup.nodes.Node node6 = documentType4.nextSibling();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertNull(node6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #236
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #180
30: ldc           #131
32: ldc           #108
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #97
44: astore_2
45: aload_1
46: invokevirtual #237
49: astore_3
50: new           #27
53: dup
54: invokespecial #28
57: ldc           #29
59: invokevirtual #30
62: aload_2
63: invokevirtual #30
66: ldc           #102
68: invokevirtual #30
71: invokevirtual #33
74: aload_2
75: ldc           #103
77: invokestatic  #91
80: aload_3
81: invokestatic  #139
84: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test39
Start line: 2266
End line: 2271
Method source code: 
    public void test39() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test39");
        java.util.List<org.jsoup.nodes.Node> nodeList2 = org.jsoup.parser.Parser.parseXmlFragment("[:containsown( :last-of-type$=<!doctype public \"<html> <head></head> <body> hi! </body> </html>\">]", "#[:first-of-type=[data-*=hi!]]");
        org.junit.Assert.assertNotNull(nodeList2);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #238
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #239
26: ldc           #240
28: invokestatic  #241
31: astore_1
32: aload_1
33: invokestatic  #39
36: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test40
Start line: 2274
End line: 2363
Method source code: 
    public void test40() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test40");
        org.jsoup.nodes.Comment comment2 = new org.jsoup.nodes.Comment("hi!", "hi!");
        java.lang.String str3 = comment2.getData();
        org.jsoup.nodes.Node node4 = comment2.parentNode();
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.DocumentType documentType11 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder12 = null;
        org.jsoup.nodes.TextNode textNode16 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str17 = textNode16.getWholeText();
        java.lang.String str19 = textNode16.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder20 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType22 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document25 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document27 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element29 = document27.toggleClass("");
        java.lang.String str30 = element29.tagName();
        org.jsoup.nodes.Element element32 = element29.toggleClass("");
        boolean boolean33 = isOnlyOfType22.matches((org.jsoup.nodes.Element) document25, element29);
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element40 = document36.text(" ");
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements45 = document43.getElementsContainingText("#data");
        boolean boolean46 = isOnlyOfType22.matches((org.jsoup.nodes.Element) document36, (org.jsoup.nodes.Element) document43);
        org.jsoup.nodes.Comment comment49 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean51 = comment49.hasAttr("hi!");
        org.jsoup.nodes.Document document53 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element55 = document53.toggleClass("");
        org.jsoup.nodes.Node node56 = document53.clone();
        org.jsoup.nodes.Node node57 = comment49.doClone(node56);
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = null;
        comment49.outerHtmlTail(stringBuilder58, 10, outputSettings60);
        java.lang.String str62 = comment49.getData();
        java.lang.String str63 = comment49.nodeName();
        java.lang.StringBuilder stringBuilder64 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings66 = new org.jsoup.nodes.Document.OutputSettings();
        int int67 = outputSettings66.indentAmount();
        comment49.outerHtmlTail(stringBuilder64, 0, outputSettings66);
        boolean boolean69 = document43.equals((java.lang.Object) outputSettings66);
        textNode16.outerHtmlTail(stringBuilder20, (int) (short) 100, outputSettings66);
        documentType11.outerHtmlTail(stringBuilder12, (int) (short) 1, outputSettings66);
        java.lang.StringBuilder stringBuilder72 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings74 = new org.jsoup.nodes.Document.OutputSettings();
        int int75 = outputSettings74.indentAmount();
        documentType11.outerHtmlTail(stringBuilder72, 0, outputSettings74);
        org.jsoup.nodes.Entities.EscapeMode escapeMode77 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings74.escapeMode(escapeMode77);
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings78.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings82 = outputSettings80.prettyPrint(true);
        // The following exception was thrown during execution in test generation
        try {
            comment2.outerHtmlHead(stringBuilder5, 0, outputSettings80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "#root" + "'", str30, "#root");
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(elements45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#comment" + "'", str63, "#comment");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode77 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode77.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings78);
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertNotNull(outputSettings82);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #242
19: aastore
20: invokevirtual #7
23: pop
24: new           #77
27: dup
28: ldc           #52
30: ldc           #52
32: invokespecial #78
35: astore_1
36: aload_1
37: invokevirtual #83
40: astore_2
41: aload_1
42: invokevirtual #243
45: astore_3
46: aconst_null
47: astore        4
49: new           #8
52: dup
53: ldc           #9
55: ldc           #10
57: ldc           #11
59: ldc           #9
61: invokespecial #12
64: astore        5
66: aconst_null
67: astore        6
69: new           #58
72: dup
73: ldc           #9
75: ldc           #59
77: invokespecial #60
80: astore        7
82: aload         7
84: invokevirtual #61
87: astore        8
89: aload         7
91: ldc           #62
93: invokevirtual #63
96: astore        9
98: aconst_null
99: astore        10
101: new           #64
104: dup
105: invokespecial #65
108: astore        11
110: ldc           #9
112: ldc           #9
114: invokestatic  #66
117: astore        12
119: ldc           #52
121: invokestatic  #53
124: astore        13
126: aload         13
128: ldc           #9
130: invokevirtual #54
133: astore        14
135: aload         14
137: invokevirtual #67
140: astore        15
142: aload         14
144: ldc           #9
146: invokevirtual #68
149: astore        16
151: aload         11
153: aload         12
155: aload         14
157: invokevirtual #69
160: istore        17
162: ldc           #59
164: ldc           #52
166: invokestatic  #70
169: astore        18
171: aload         18
173: bipush        100
175: invokevirtual #71
178: astore        19
180: aload         18
182: ldc           #72
184: invokevirtual #73
187: astore        20
189: ldc           #74
191: ldc           #52
193: invokestatic  #70
196: astore        21
198: aload         21
200: ldc           #75
202: invokevirtual #76
205: astore        22
207: aload         11
209: aload         18
211: aload         21
213: invokevirtual #69
216: istore        23
218: new           #77
221: dup
222: ldc           #52
224: ldc           #52
226: invokespecial #78
229: astore        24
231: aload         24
233: ldc           #52
235: invokevirtual #79
238: istore        25
240: ldc           #52
242: invokestatic  #53
245: astore        26
247: aload         26
249: ldc           #9
251: invokevirtual #54
254: astore        27
256: aload         26
258: invokevirtual #80
261: astore        28
263: aload         24
265: aload         28
267: invokevirtual #81
270: astore        29
272: aconst_null
273: astore        30
275: aconst_null
276: astore        31
278: aload         24
280: aload         30
282: bipush        10
284: aload         31
286: invokevirtual #82
289: aload         24
291: invokevirtual #83
294: astore        32
296: aload         24
298: invokevirtual #84
301: astore        33
303: aconst_null
304: astore        34
306: new           #13
309: dup
310: invokespecial #14
313: astore        35
315: aload         35
317: invokevirtual #15
320: istore        36
322: aload         24
324: aload         34
326: iconst_0
327: aload         35
329: invokevirtual #82
332: aload         21
334: aload         35
336: invokevirtual #85
339: istore        37
341: aload         7
343: aload         10
345: bipush        100
347: aload         35
349: invokevirtual #86
352: aload         5
354: aload         6
356: iconst_1
357: aload         35
359: invokevirtual #87
362: aconst_null
363: astore        38
365: new           #13
368: dup
369: invokespecial #14
372: astore        39
374: aload         39
376: invokevirtual #15
379: istore        40
381: aload         5
383: aload         38
385: iconst_0
386: aload         39
388: invokevirtual #87
391: getstatic     #127
394: astore        41
396: aload         39
398: aload         41
400: invokevirtual #22
403: astore        42
405: aload         42
407: iconst_0
408: invokevirtual #128
411: astore        43
413: aload         43
415: iconst_1
416: invokevirtual #128
419: astore        44
421: aload_1
422: aload         4
424: iconst_0
425: aload         43
427: invokevirtual #229
430: ldc           #24
432: invokestatic  #25
435: goto          440
438: astore        45
440: new           #27
443: dup
444: invokespecial #28
447: ldc           #29
449: invokevirtual #30
452: aload_2
453: invokevirtual #30
456: ldc           #93
458: invokevirtual #30
461: invokevirtual #33
464: aload_2
465: ldc           #52
467: invokestatic  #91
470: aload_3
471: invokestatic  #139
474: new           #27
477: dup
478: invokespecial #28
481: ldc           #29
483: invokevirtual #30
486: aload         8
488: invokevirtual #30
491: ldc           #90
493: invokevirtual #30
496: invokevirtual #33
499: aload         8
501: ldc           #9
503: invokestatic  #91
506: new           #27
509: dup
510: invokespecial #28
513: ldc           #29
515: invokevirtual #30
518: aload         9
520: invokevirtual #30
523: ldc           #90
525: invokevirtual #30
528: invokevirtual #33
531: aload         9
533: ldc           #9
535: invokestatic  #91
538: aload         12
540: invokestatic  #39
543: aload         13
545: invokestatic  #39
548: aload         14
550: invokestatic  #39
553: new           #27
556: dup
557: invokespecial #28
560: ldc           #29
562: invokevirtual #30
565: aload         15
567: invokevirtual #30
570: ldc           #92
572: invokevirtual #30
575: invokevirtual #33
578: aload         15
580: ldc           #17
582: invokestatic  #91
585: aload         16
587: invokestatic  #39
590: new           #27
593: dup
594: invokespecial #28
597: ldc           #29
599: invokevirtual #30
602: iload         17
604: invokevirtual #35
607: ldc           #32
609: invokevirtual #30
612: iconst_0
613: invokevirtual #35
616: ldc           #29
618: invokevirtual #30
621: invokevirtual #33
624: iload         17
626: ifne          633
629: iconst_1
630: goto          634
633: iconst_0
634: invokestatic  #34
637: aload         18
639: invokestatic  #39
642: aload         19
644: invokestatic  #39
647: aload         20
649: invokestatic  #39
652: aload         21
654: invokestatic  #39
657: aload         22
659: invokestatic  #39
662: new           #27
665: dup
666: invokespecial #28
669: ldc           #29
671: invokevirtual #30
674: iload         23
676: invokevirtual #35
679: ldc           #32
681: invokevirtual #30
684: iconst_0
685: invokevirtual #35
688: ldc           #29
690: invokevirtual #30
693: invokevirtual #33
696: iload         23
698: ifne          705
701: iconst_1
702: goto          706
705: iconst_0
706: invokestatic  #34
709: new           #27
712: dup
713: invokespecial #28
716: ldc           #29
718: invokevirtual #30
721: iload         25
723: invokevirtual #35
726: ldc           #32
728: invokevirtual #30
731: iconst_0
732: invokevirtual #35
735: ldc           #29
737: invokevirtual #30
740: invokevirtual #33
743: iload         25
745: ifne          752
748: iconst_1
749: goto          753
752: iconst_0
753: invokestatic  #34
756: aload         26
758: invokestatic  #39
761: aload         27
763: invokestatic  #39
766: aload         28
768: invokestatic  #39
771: aload         29
773: invokestatic  #39
776: new           #27
779: dup
780: invokespecial #28
783: ldc           #29
785: invokevirtual #30
788: aload         32
790: invokevirtual #30
793: ldc           #93
795: invokevirtual #30
798: invokevirtual #33
801: aload         32
803: ldc           #52
805: invokestatic  #91
808: new           #27
811: dup
812: invokespecial #28
815: ldc           #29
817: invokevirtual #30
820: aload         33
822: invokevirtual #30
825: ldc           #94
827: invokevirtual #30
830: invokevirtual #33
833: aload         33
835: ldc           #95
837: invokestatic  #91
840: new           #27
843: dup
844: invokespecial #28
847: ldc           #29
849: invokevirtual #30
852: iload         36
854: invokevirtual #31
857: ldc           #32
859: invokevirtual #30
862: iconst_1
863: invokevirtual #31
866: ldc           #29
868: invokevirtual #30
871: invokevirtual #33
874: iload         36
876: iconst_1
877: if_icmpne     884
880: iconst_1
881: goto          885
884: iconst_0
885: invokestatic  #34
888: new           #27
891: dup
892: invokespecial #28
895: ldc           #29
897: invokevirtual #30
900: iload         37
902: invokevirtual #35
905: ldc           #32
907: invokevirtual #30
910: iconst_0
911: invokevirtual #35
914: ldc           #29
916: invokevirtual #30
919: invokevirtual #33
922: iload         37
924: ifne          931
927: iconst_1
928: goto          932
931: iconst_0
932: invokestatic  #34
935: new           #27
938: dup
939: invokespecial #28
942: ldc           #29
944: invokevirtual #30
947: iload         40
949: invokevirtual #31
952: ldc           #32
954: invokevirtual #30
957: iconst_1
958: invokevirtual #31
961: ldc           #29
963: invokevirtual #30
966: invokevirtual #33
969: iload         40
971: iconst_1
972: if_icmpne     979
975: iconst_1
976: goto          980
979: iconst_0
980: invokestatic  #34
983: new           #27
986: dup
987: invokespecial #28
990: ldc           #29
992: invokevirtual #30
995: aload         41
997: invokevirtual #36
1000: ldc           #32
1002: invokevirtual #30
1005: getstatic     #127
1008: invokevirtual #36
1011: ldc           #29
1013: invokevirtual #30
1016: invokevirtual #33
1019: aload         41
1021: getstatic     #127
1024: invokevirtual #38
1027: invokestatic  #34
1030: aload         42
1032: invokestatic  #39
1035: aload         43
1037: invokestatic  #39
1040: aload         44
1042: invokestatic  #39
1045: return
Exception table:
from    to  target type
421   435   438   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test41
Start line: 2366
End line: 2459
Method source code: 
    public void test41() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test41");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("##comment", ":eq(0)", "", "\n<!--hi!-->");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node10 = textNode9.parentNode;
        textNode9.siblingIndex = ' ';
        boolean boolean14 = textNode9.hasAttr("<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>");
        boolean boolean16 = textNode9.hasAttr(":last-of-type");
        java.lang.StringBuilder stringBuilder17 = null;
        org.jsoup.nodes.TextNode textNode21 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node22 = textNode21.parentNode;
        java.lang.String str23 = textNode21.nodeName();
        java.lang.String str24 = textNode21.nodeName();
        textNode21.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes27 = textNode21.attributes();
        java.lang.StringBuilder stringBuilder28 = null;
        org.jsoup.nodes.Attribute attribute32 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings33 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean34 = attribute32.shouldCollapseAttribute(outputSettings33);
        org.jsoup.nodes.Entities.EscapeMode escapeMode35 = outputSettings33.escapeMode();
        textNode21.outerHtmlTail(stringBuilder28, (int) (short) -1, outputSettings33);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax37 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings38 = outputSettings33.syntax(syntax37);
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings33.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = outputSettings33.outline(true);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax42 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings43 = outputSettings41.syntax(syntax42);
        textNode9.outerHtmlTail(stringBuilder17, (int) '#', outputSettings41);
        java.lang.StringBuilder stringBuilder45 = null;
        org.jsoup.parser.Parser parser50 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean51 = parser50.isTrackErrors();
        org.jsoup.nodes.Document document52 = org.jsoup.Jsoup.parse(" ", "#text", parser50);
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document52.getOutputSettings();
        java.lang.String str54 = org.jsoup.nodes.Entities.escape(":empty", outputSettings53);
        textNode9.outerHtmlTail(stringBuilder45, (int) ' ', outputSettings53);
        org.jsoup.nodes.Comment comment58 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean60 = comment58.hasAttr("hi!");
        org.jsoup.nodes.Document document62 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element64 = document62.toggleClass("");
        org.jsoup.nodes.Node node65 = document62.clone();
        org.jsoup.nodes.Node node66 = comment58.doClone(node65);
        java.lang.StringBuilder stringBuilder67 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings69 = null;
        comment58.outerHtmlTail(stringBuilder67, 10, outputSettings69);
        java.lang.String str71 = comment58.getData();
        java.lang.String str72 = comment58.nodeName();
        java.lang.StringBuilder stringBuilder73 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings75 = new org.jsoup.nodes.Document.OutputSettings();
        int int76 = outputSettings75.indentAmount();
        comment58.outerHtmlTail(stringBuilder73, 0, outputSettings75);
        org.jsoup.nodes.Entities.EscapeMode escapeMode78 = outputSettings75.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings79 = outputSettings53.escapeMode(escapeMode78);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, 10, outputSettings53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(textNode9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(textNode21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#text" + "'", str23, "#text");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#text" + "'", str24, "#text");
        org.junit.Assert.assertNotNull(attributes27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + escapeMode35 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode35.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax37 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax37.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertTrue("'" + syntax42 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax42.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings43);
        org.junit.Assert.assertNotNull(parser50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ":empty" + "'", str54, ":empty");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(element64);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#comment" + "'", str72, "#comment");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode78 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode78.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #245
30: ldc           #246
32: ldc           #9
34: ldc           #247
36: invokespecial #12
39: astore_1
40: aconst_null
41: astore_2
42: ldc           #52
44: ldc           #52
46: invokestatic  #132
49: astore_3
50: aload_3
51: getfield      #133
54: astore        4
56: aload_3
57: bipush        32
59: putfield      #248
62: aload_3
63: ldc           #10
65: invokevirtual #249
68: istore        5
70: aload_3
71: ldc           #186
73: invokevirtual #249
76: istore        6
78: aconst_null
79: astore        7
81: ldc           #52
83: ldc           #52
85: invokestatic  #132
88: astore        8
90: aload         8
92: getfield      #133
95: astore        9
97: aload         8
99: invokevirtual #134
102: astore        10
104: aload         8
106: invokevirtual #134
109: astore        11
111: aload         8
113: ldc           #135
115: invokevirtual #136
118: aload         8
120: invokevirtual #137
123: astore        12
125: aconst_null
126: astore        13
128: new           #16
131: dup
132: ldc           #17
134: ldc           #18
136: invokespecial #19
139: astore        14
141: new           #13
144: dup
145: invokespecial #14
148: astore        15
150: aload         14
152: aload         15
154: invokevirtual #20
157: istore        16
159: aload         15
161: invokevirtual #21
164: astore        17
166: aload         8
168: aload         13
170: iconst_m1
171: aload         15
173: invokevirtual #86
176: getstatic     #49
179: astore        18
181: aload         15
183: aload         18
185: invokevirtual #138
188: astore        19
190: aload         15
192: invokevirtual #215
195: astore        20
197: aload         15
199: iconst_1
200: invokevirtual #44
203: astore        21
205: getstatic     #49
208: astore        22
210: aload         21
212: aload         22
214: invokevirtual #138
217: astore        23
219: aload_3
220: aload         7
222: bipush        35
224: aload         21
226: invokevirtual #86
229: aconst_null
230: astore        24
232: invokestatic  #98
235: astore        25
237: aload         25
239: invokevirtual #99
242: istore        26
244: ldc           #72
246: ldc           #74
248: aload         25
250: invokestatic  #100
253: astore        27
255: aload         27
257: invokevirtual #101
260: astore        28
262: ldc           #212
264: aload         28
266: invokestatic  #112
269: astore        29
271: aload_3
272: aload         24
274: bipush        32
276: aload         28
278: invokevirtual #86
281: new           #77
284: dup
285: ldc           #52
287: ldc           #52
289: invokespecial #78
292: astore        30
294: aload         30
296: ldc           #52
298: invokevirtual #79
301: istore        31
303: ldc           #52
305: invokestatic  #53
308: astore        32
310: aload         32
312: ldc           #9
314: invokevirtual #54
317: astore        33
319: aload         32
321: invokevirtual #80
324: astore        34
326: aload         30
328: aload         34
330: invokevirtual #81
333: astore        35
335: aconst_null
336: astore        36
338: aconst_null
339: astore        37
341: aload         30
343: aload         36
345: bipush        10
347: aload         37
349: invokevirtual #82
352: aload         30
354: invokevirtual #83
357: astore        38
359: aload         30
361: invokevirtual #84
364: astore        39
366: aconst_null
367: astore        40
369: new           #13
372: dup
373: invokespecial #14
376: astore        41
378: aload         41
380: invokevirtual #15
383: istore        42
385: aload         30
387: aload         40
389: iconst_0
390: aload         41
392: invokevirtual #82
395: aload         41
397: invokevirtual #21
400: astore        43
402: aload         28
404: aload         43
406: invokevirtual #22
409: astore        44
411: aload_1
412: aload_2
413: bipush        10
415: aload         28
417: invokevirtual #23
420: ldc           #24
422: invokestatic  #25
425: goto          430
428: astore        45
430: aload_3
431: invokestatic  #39
434: aload         4
436: invokestatic  #139
439: new           #27
442: dup
443: invokespecial #28
446: ldc           #29
448: invokevirtual #30
451: iload         5
453: invokevirtual #35
456: ldc           #32
458: invokevirtual #30
461: iconst_0
462: invokevirtual #35
465: ldc           #29
467: invokevirtual #30
470: invokevirtual #33
473: iload         5
475: ifne          482
478: iconst_1
479: goto          483
482: iconst_0
483: invokestatic  #34
486: new           #27
489: dup
490: invokespecial #28
493: ldc           #29
495: invokevirtual #30
498: iload         6
500: invokevirtual #35
503: ldc           #32
505: invokevirtual #30
508: iconst_0
509: invokevirtual #35
512: ldc           #29
514: invokevirtual #30
517: invokevirtual #33
520: iload         6
522: ifne          529
525: iconst_1
526: goto          530
529: iconst_0
530: invokestatic  #34
533: aload         8
535: invokestatic  #39
538: aload         9
540: invokestatic  #139
543: new           #27
546: dup
547: invokespecial #28
550: ldc           #29
552: invokevirtual #30
555: aload         10
557: invokevirtual #30
560: ldc           #140
562: invokevirtual #30
565: invokevirtual #33
568: aload         10
570: ldc           #74
572: invokestatic  #91
575: new           #27
578: dup
579: invokespecial #28
582: ldc           #29
584: invokevirtual #30
587: aload         11
589: invokevirtual #30
592: ldc           #140
594: invokevirtual #30
597: invokevirtual #33
600: aload         11
602: ldc           #74
604: invokestatic  #91
607: aload         12
609: invokestatic  #39
612: new           #27
615: dup
616: invokespecial #28
619: ldc           #29
621: invokevirtual #30
624: iload         16
626: invokevirtual #35
629: ldc           #32
631: invokevirtual #30
634: iconst_0
635: invokevirtual #35
638: ldc           #29
640: invokevirtual #30
643: invokevirtual #33
646: iload         16
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #34
659: new           #27
662: dup
663: invokespecial #28
666: ldc           #29
668: invokevirtual #30
671: aload         17
673: invokevirtual #36
676: ldc           #32
678: invokevirtual #30
681: getstatic     #37
684: invokevirtual #36
687: ldc           #29
689: invokevirtual #30
692: invokevirtual #33
695: aload         17
697: getstatic     #37
700: invokevirtual #38
703: invokestatic  #34
706: new           #27
709: dup
710: invokespecial #28
713: ldc           #29
715: invokevirtual #30
718: aload         18
720: invokevirtual #36
723: ldc           #32
725: invokevirtual #30
728: getstatic     #49
731: invokevirtual #36
734: ldc           #29
736: invokevirtual #30
739: invokevirtual #33
742: aload         18
744: getstatic     #49
747: invokevirtual #50
750: invokestatic  #34
753: aload         19
755: invokestatic  #39
758: aload         20
760: invokestatic  #39
763: aload         21
765: invokestatic  #39
768: new           #27
771: dup
772: invokespecial #28
775: ldc           #29
777: invokevirtual #30
780: aload         22
782: invokevirtual #36
785: ldc           #32
787: invokevirtual #30
790: getstatic     #49
793: invokevirtual #36
796: ldc           #29
798: invokevirtual #30
801: invokevirtual #33
804: aload         22
806: getstatic     #49
809: invokevirtual #50
812: invokestatic  #34
815: aload         23
817: invokestatic  #39
820: aload         25
822: invokestatic  #39
825: new           #27
828: dup
829: invokespecial #28
832: ldc           #29
834: invokevirtual #30
837: iload         26
839: invokevirtual #35
842: ldc           #32
844: invokevirtual #30
847: iconst_0
848: invokevirtual #35
851: ldc           #29
853: invokevirtual #30
856: invokevirtual #33
859: iload         26
861: ifne          868
864: iconst_1
865: goto          869
868: iconst_0
869: invokestatic  #34
872: aload         27
874: invokestatic  #39
877: aload         28
879: invokestatic  #39
882: new           #27
885: dup
886: invokespecial #28
889: ldc           #29
891: invokevirtual #30
894: aload         29
896: invokevirtual #30
899: ldc           #213
901: invokevirtual #30
904: invokevirtual #33
907: aload         29
909: ldc           #212
911: invokestatic  #91
914: new           #27
917: dup
918: invokespecial #28
921: ldc           #29
923: invokevirtual #30
926: iload         31
928: invokevirtual #35
931: ldc           #32
933: invokevirtual #30
936: iconst_0
937: invokevirtual #35
940: ldc           #29
942: invokevirtual #30
945: invokevirtual #33
948: iload         31
950: ifne          957
953: iconst_1
954: goto          958
957: iconst_0
958: invokestatic  #34
961: aload         32
963: invokestatic  #39
966: aload         33
968: invokestatic  #39
971: aload         34
973: invokestatic  #39
976: aload         35
978: invokestatic  #39
981: new           #27
984: dup
985: invokespecial #28
988: ldc           #29
990: invokevirtual #30
993: aload         38
995: invokevirtual #30
998: ldc           #93
1000: invokevirtual #30
1003: invokevirtual #33
1006: aload         38
1008: ldc           #52
1010: invokestatic  #91
1013: new           #27
1016: dup
1017: invokespecial #28
1020: ldc           #29
1022: invokevirtual #30
1025: aload         39
1027: invokevirtual #30
1030: ldc           #94
1032: invokevirtual #30
1035: invokevirtual #33
1038: aload         39
1040: ldc           #95
1042: invokestatic  #91
1045: new           #27
1048: dup
1049: invokespecial #28
1052: ldc           #29
1054: invokevirtual #30
1057: iload         42
1059: invokevirtual #31
1062: ldc           #32
1064: invokevirtual #30
1067: iconst_1
1068: invokevirtual #31
1071: ldc           #29
1073: invokevirtual #30
1076: invokevirtual #33
1079: iload         42
1081: iconst_1
1082: if_icmpne     1089
1085: iconst_1
1086: goto          1090
1089: iconst_0
1090: invokestatic  #34
1093: new           #27
1096: dup
1097: invokespecial #28
1100: ldc           #29
1102: invokevirtual #30
1105: aload         43
1107: invokevirtual #36
1110: ldc           #32
1112: invokevirtual #30
1115: getstatic     #37
1118: invokevirtual #36
1121: ldc           #29
1123: invokevirtual #30
1126: invokevirtual #33
1129: aload         43
1131: getstatic     #37
1134: invokevirtual #38
1137: invokestatic  #34
1140: aload         44
1142: invokestatic  #39
1145: return
Exception table:
from    to  target type
411   425   428   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test42
Start line: 2462
End line: 2534
Method source code: 
    public void test42() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test42");
        org.jsoup.nodes.TextNode textNode2 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str3 = textNode2.getWholeText();
        java.lang.String str5 = textNode2.attr("[body$=.[data-*=hi!]]");
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.DocumentType documentType12 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str13 = documentType12.outerHtml();
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.nodes.TextNode textNode18 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str19 = textNode18.getWholeText();
        java.lang.String str21 = textNode18.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder22 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType24 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document27 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element31 = document29.toggleClass("");
        java.lang.String str32 = element31.tagName();
        org.jsoup.nodes.Element element34 = element31.toggleClass("");
        boolean boolean35 = isOnlyOfType24.matches((org.jsoup.nodes.Element) document27, element31);
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements40 = document38.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element42 = document38.text(" ");
        org.jsoup.nodes.Document document45 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements47 = document45.getElementsContainingText("#data");
        boolean boolean48 = isOnlyOfType24.matches((org.jsoup.nodes.Element) document38, (org.jsoup.nodes.Element) document45);
        org.jsoup.nodes.Comment comment51 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean53 = comment51.hasAttr("hi!");
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element57 = document55.toggleClass("");
        org.jsoup.nodes.Node node58 = document55.clone();
        org.jsoup.nodes.Node node59 = comment51.doClone(node58);
        java.lang.StringBuilder stringBuilder60 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings62 = null;
        comment51.outerHtmlTail(stringBuilder60, 10, outputSettings62);
        java.lang.String str64 = comment51.getData();
        java.lang.String str65 = comment51.nodeName();
        java.lang.StringBuilder stringBuilder66 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings68 = new org.jsoup.nodes.Document.OutputSettings();
        int int69 = outputSettings68.indentAmount();
        comment51.outerHtmlTail(stringBuilder66, 0, outputSettings68);
        boolean boolean71 = document45.equals((java.lang.Object) outputSettings68);
        textNode18.outerHtmlTail(stringBuilder22, (int) (short) 100, outputSettings68);
        documentType12.outerHtmlTail(stringBuilder14, 0, outputSettings68);
        textNode2.outerHtmlTail(stringBuilder6, (int) (short) -1, outputSettings68);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str13, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#root" + "'", str32, "#root");
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(elements40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(elements47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#comment" + "'", str65, "#comment");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: new           #58
27: dup
28: ldc           #9
30: ldc           #59
32: invokespecial #60
35: astore_1
36: aload_1
37: invokevirtual #61
40: astore_2
41: aload_1
42: ldc           #251
44: invokevirtual #63
47: astore_3
48: aconst_null
49: astore        4
51: new           #8
54: dup
55: ldc           #9
57: ldc           #10
59: ldc           #11
61: ldc           #9
63: invokespecial #12
66: astore        5
68: aload         5
70: invokevirtual #110
73: astore        6
75: aconst_null
76: astore        7
78: new           #58
81: dup
82: ldc           #9
84: ldc           #59
86: invokespecial #60
89: astore        8
91: aload         8
93: invokevirtual #61
96: astore        9
98: aload         8
100: ldc           #62
102: invokevirtual #63
105: astore        10
107: aconst_null
108: astore        11
110: new           #64
113: dup
114: invokespecial #65
117: astore        12
119: ldc           #9
121: ldc           #9
123: invokestatic  #66
126: astore        13
128: ldc           #52
130: invokestatic  #53
133: astore        14
135: aload         14
137: ldc           #9
139: invokevirtual #54
142: astore        15
144: aload         15
146: invokevirtual #67
149: astore        16
151: aload         15
153: ldc           #9
155: invokevirtual #68
158: astore        17
160: aload         12
162: aload         13
164: aload         15
166: invokevirtual #69
169: istore        18
171: ldc           #59
173: ldc           #52
175: invokestatic  #70
178: astore        19
180: aload         19
182: bipush        100
184: invokevirtual #71
187: astore        20
189: aload         19
191: ldc           #72
193: invokevirtual #73
196: astore        21
198: ldc           #74
200: ldc           #52
202: invokestatic  #70
205: astore        22
207: aload         22
209: ldc           #75
211: invokevirtual #76
214: astore        23
216: aload         12
218: aload         19
220: aload         22
222: invokevirtual #69
225: istore        24
227: new           #77
230: dup
231: ldc           #52
233: ldc           #52
235: invokespecial #78
238: astore        25
240: aload         25
242: ldc           #52
244: invokevirtual #79
247: istore        26
249: ldc           #52
251: invokestatic  #53
254: astore        27
256: aload         27
258: ldc           #9
260: invokevirtual #54
263: astore        28
265: aload         27
267: invokevirtual #80
270: astore        29
272: aload         25
274: aload         29
276: invokevirtual #81
279: astore        30
281: aconst_null
282: astore        31
284: aconst_null
285: astore        32
287: aload         25
289: aload         31
291: bipush        10
293: aload         32
295: invokevirtual #82
298: aload         25
300: invokevirtual #83
303: astore        33
305: aload         25
307: invokevirtual #84
310: astore        34
312: aconst_null
313: astore        35
315: new           #13
318: dup
319: invokespecial #14
322: astore        36
324: aload         36
326: invokevirtual #15
329: istore        37
331: aload         25
333: aload         35
335: iconst_0
336: aload         36
338: invokevirtual #82
341: aload         22
343: aload         36
345: invokevirtual #85
348: istore        38
350: aload         8
352: aload         11
354: bipush        100
356: aload         36
358: invokevirtual #86
361: aload         5
363: aload         7
365: iconst_0
366: aload         36
368: invokevirtual #87
371: aload_1
372: aload         4
374: iconst_m1
375: aload         36
377: invokevirtual #86
380: new           #27
383: dup
384: invokespecial #28
387: ldc           #29
389: invokevirtual #30
392: aload_2
393: invokevirtual #30
396: ldc           #90
398: invokevirtual #30
401: invokevirtual #33
404: aload_2
405: ldc           #9
407: invokestatic  #91
410: new           #27
413: dup
414: invokespecial #28
417: ldc           #29
419: invokevirtual #30
422: aload_3
423: invokevirtual #30
426: ldc           #90
428: invokevirtual #30
431: invokevirtual #33
434: aload_3
435: ldc           #9
437: invokestatic  #91
440: new           #27
443: dup
444: invokespecial #28
447: ldc           #29
449: invokevirtual #30
452: aload         6
454: invokevirtual #30
457: ldc           #114
459: invokevirtual #30
462: invokevirtual #33
465: aload         6
467: ldc           #115
469: invokestatic  #91
472: new           #27
475: dup
476: invokespecial #28
479: ldc           #29
481: invokevirtual #30
484: aload         9
486: invokevirtual #30
489: ldc           #90
491: invokevirtual #30
494: invokevirtual #33
497: aload         9
499: ldc           #9
501: invokestatic  #91
504: new           #27
507: dup
508: invokespecial #28
511: ldc           #29
513: invokevirtual #30
516: aload         10
518: invokevirtual #30
521: ldc           #90
523: invokevirtual #30
526: invokevirtual #33
529: aload         10
531: ldc           #9
533: invokestatic  #91
536: aload         13
538: invokestatic  #39
541: aload         14
543: invokestatic  #39
546: aload         15
548: invokestatic  #39
551: new           #27
554: dup
555: invokespecial #28
558: ldc           #29
560: invokevirtual #30
563: aload         16
565: invokevirtual #30
568: ldc           #92
570: invokevirtual #30
573: invokevirtual #33
576: aload         16
578: ldc           #17
580: invokestatic  #91
583: aload         17
585: invokestatic  #39
588: new           #27
591: dup
592: invokespecial #28
595: ldc           #29
597: invokevirtual #30
600: iload         18
602: invokevirtual #35
605: ldc           #32
607: invokevirtual #30
610: iconst_0
611: invokevirtual #35
614: ldc           #29
616: invokevirtual #30
619: invokevirtual #33
622: iload         18
624: ifne          631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #34
635: aload         19
637: invokestatic  #39
640: aload         20
642: invokestatic  #39
645: aload         21
647: invokestatic  #39
650: aload         22
652: invokestatic  #39
655: aload         23
657: invokestatic  #39
660: new           #27
663: dup
664: invokespecial #28
667: ldc           #29
669: invokevirtual #30
672: iload         24
674: invokevirtual #35
677: ldc           #32
679: invokevirtual #30
682: iconst_0
683: invokevirtual #35
686: ldc           #29
688: invokevirtual #30
691: invokevirtual #33
694: iload         24
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #34
707: new           #27
710: dup
711: invokespecial #28
714: ldc           #29
716: invokevirtual #30
719: iload         26
721: invokevirtual #35
724: ldc           #32
726: invokevirtual #30
729: iconst_0
730: invokevirtual #35
733: ldc           #29
735: invokevirtual #30
738: invokevirtual #33
741: iload         26
743: ifne          750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #34
754: aload         27
756: invokestatic  #39
759: aload         28
761: invokestatic  #39
764: aload         29
766: invokestatic  #39
769: aload         30
771: invokestatic  #39
774: new           #27
777: dup
778: invokespecial #28
781: ldc           #29
783: invokevirtual #30
786: aload         33
788: invokevirtual #30
791: ldc           #93
793: invokevirtual #30
796: invokevirtual #33
799: aload         33
801: ldc           #52
803: invokestatic  #91
806: new           #27
809: dup
810: invokespecial #28
813: ldc           #29
815: invokevirtual #30
818: aload         34
820: invokevirtual #30
823: ldc           #94
825: invokevirtual #30
828: invokevirtual #33
831: aload         34
833: ldc           #95
835: invokestatic  #91
838: new           #27
841: dup
842: invokespecial #28
845: ldc           #29
847: invokevirtual #30
850: iload         37
852: invokevirtual #31
855: ldc           #32
857: invokevirtual #30
860: iconst_1
861: invokevirtual #31
864: ldc           #29
866: invokevirtual #30
869: invokevirtual #33
872: iload         37
874: iconst_1
875: if_icmpne     882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #34
886: new           #27
889: dup
890: invokespecial #28
893: ldc           #29
895: invokevirtual #30
898: iload         38
900: invokevirtual #35
903: ldc           #32
905: invokevirtual #30
908: iconst_0
909: invokevirtual #35
912: ldc           #29
914: invokevirtual #30
917: invokevirtual #33
920: iload         38
922: ifne          929
925: iconst_1
926: goto          930
929: iconst_0
930: invokestatic  #34
933: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test43
Start line: 2537
End line: 2617
Method source code: 
    public void test43() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test43");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.outerHtml();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str11 = textNode10.getWholeText();
        java.lang.String str13 = textNode10.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType16 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document19 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element23 = document21.toggleClass("");
        java.lang.String str24 = element23.tagName();
        org.jsoup.nodes.Element element26 = element23.toggleClass("");
        boolean boolean27 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document19, element23);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements32 = document30.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element34 = document30.text(" ");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements39 = document37.getElementsContainingText("#data");
        boolean boolean40 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document37);
        org.jsoup.nodes.Comment comment43 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean45 = comment43.hasAttr("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element49 = document47.toggleClass("");
        org.jsoup.nodes.Node node50 = document47.clone();
        org.jsoup.nodes.Node node51 = comment43.doClone(node50);
        java.lang.StringBuilder stringBuilder52 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = null;
        comment43.outerHtmlTail(stringBuilder52, 10, outputSettings54);
        java.lang.String str56 = comment43.getData();
        java.lang.String str57 = comment43.nodeName();
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = new org.jsoup.nodes.Document.OutputSettings();
        int int61 = outputSettings60.indentAmount();
        comment43.outerHtmlTail(stringBuilder58, 0, outputSettings60);
        boolean boolean63 = document37.equals((java.lang.Object) outputSettings60);
        textNode10.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings60);
        documentType4.outerHtmlTail(stringBuilder6, 0, outputSettings60);
        java.lang.String str66 = documentType4.nodeName();
        java.lang.String str67 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder68 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings70 = new org.jsoup.nodes.Document.OutputSettings();
        int int71 = outputSettings70.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder72 = outputSettings70.encoder();
        boolean boolean73 = outputSettings70.outline();
        int int74 = outputSettings70.indentAmount();
        documentType4.outerHtmlTail(stringBuilder68, (int) (byte) 1, outputSettings70);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str5, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#root" + "'", str24, "#root");
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#doctype" + "'", str66, "#doctype");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "#doctype" + "'", str67, "#doctype");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #252
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #9
30: ldc           #10
32: ldc           #11
34: ldc           #9
36: invokespecial #12
39: astore_1
40: aload_1
41: invokevirtual #110
44: astore_2
45: aconst_null
46: astore_3
47: new           #58
50: dup
51: ldc           #9
53: ldc           #59
55: invokespecial #60
58: astore        4
60: aload         4
62: invokevirtual #61
65: astore        5
67: aload         4
69: ldc           #62
71: invokevirtual #63
74: astore        6
76: aconst_null
77: astore        7
79: new           #64
82: dup
83: invokespecial #65
86: astore        8
88: ldc           #9
90: ldc           #9
92: invokestatic  #66
95: astore        9
97: ldc           #52
99: invokestatic  #53
102: astore        10
104: aload         10
106: ldc           #9
108: invokevirtual #54
111: astore        11
113: aload         11
115: invokevirtual #67
118: astore        12
120: aload         11
122: ldc           #9
124: invokevirtual #68
127: astore        13
129: aload         8
131: aload         9
133: aload         11
135: invokevirtual #69
138: istore        14
140: ldc           #59
142: ldc           #52
144: invokestatic  #70
147: astore        15
149: aload         15
151: bipush        100
153: invokevirtual #71
156: astore        16
158: aload         15
160: ldc           #72
162: invokevirtual #73
165: astore        17
167: ldc           #74
169: ldc           #52
171: invokestatic  #70
174: astore        18
176: aload         18
178: ldc           #75
180: invokevirtual #76
183: astore        19
185: aload         8
187: aload         15
189: aload         18
191: invokevirtual #69
194: istore        20
196: new           #77
199: dup
200: ldc           #52
202: ldc           #52
204: invokespecial #78
207: astore        21
209: aload         21
211: ldc           #52
213: invokevirtual #79
216: istore        22
218: ldc           #52
220: invokestatic  #53
223: astore        23
225: aload         23
227: ldc           #9
229: invokevirtual #54
232: astore        24
234: aload         23
236: invokevirtual #80
239: astore        25
241: aload         21
243: aload         25
245: invokevirtual #81
248: astore        26
250: aconst_null
251: astore        27
253: aconst_null
254: astore        28
256: aload         21
258: aload         27
260: bipush        10
262: aload         28
264: invokevirtual #82
267: aload         21
269: invokevirtual #83
272: astore        29
274: aload         21
276: invokevirtual #84
279: astore        30
281: aconst_null
282: astore        31
284: new           #13
287: dup
288: invokespecial #14
291: astore        32
293: aload         32
295: invokevirtual #15
298: istore        33
300: aload         21
302: aload         31
304: iconst_0
305: aload         32
307: invokevirtual #82
310: aload         18
312: aload         32
314: invokevirtual #85
317: istore        34
319: aload         4
321: aload         7
323: bipush        100
325: aload         32
327: invokevirtual #86
330: aload_1
331: aload_3
332: iconst_0
333: aload         32
335: invokevirtual #87
338: aload_1
339: invokevirtual #97
342: astore        35
344: aload_1
345: invokevirtual #97
348: astore        36
350: aconst_null
351: astore        37
353: new           #13
356: dup
357: invokespecial #14
360: astore        38
362: aload         38
364: invokevirtual #15
367: istore        39
369: aload         38
371: invokevirtual #146
374: astore        40
376: aload         38
378: invokevirtual #232
381: istore        41
383: aload         38
385: invokevirtual #15
388: istore        42
390: aload_1
391: aload         37
393: iconst_1
394: aload         38
396: invokevirtual #87
399: new           #27
402: dup
403: invokespecial #28
406: ldc           #29
408: invokevirtual #30
411: aload_2
412: invokevirtual #30
415: ldc           #114
417: invokevirtual #30
420: invokevirtual #33
423: aload_2
424: ldc           #115
426: invokestatic  #91
429: new           #27
432: dup
433: invokespecial #28
436: ldc           #29
438: invokevirtual #30
441: aload         5
443: invokevirtual #30
446: ldc           #90
448: invokevirtual #30
451: invokevirtual #33
454: aload         5
456: ldc           #9
458: invokestatic  #91
461: new           #27
464: dup
465: invokespecial #28
468: ldc           #29
470: invokevirtual #30
473: aload         6
475: invokevirtual #30
478: ldc           #90
480: invokevirtual #30
483: invokevirtual #33
486: aload         6
488: ldc           #9
490: invokestatic  #91
493: aload         9
495: invokestatic  #39
498: aload         10
500: invokestatic  #39
503: aload         11
505: invokestatic  #39
508: new           #27
511: dup
512: invokespecial #28
515: ldc           #29
517: invokevirtual #30
520: aload         12
522: invokevirtual #30
525: ldc           #92
527: invokevirtual #30
530: invokevirtual #33
533: aload         12
535: ldc           #17
537: invokestatic  #91
540: aload         13
542: invokestatic  #39
545: new           #27
548: dup
549: invokespecial #28
552: ldc           #29
554: invokevirtual #30
557: iload         14
559: invokevirtual #35
562: ldc           #32
564: invokevirtual #30
567: iconst_0
568: invokevirtual #35
571: ldc           #29
573: invokevirtual #30
576: invokevirtual #33
579: iload         14
581: ifne          588
584: iconst_1
585: goto          589
588: iconst_0
589: invokestatic  #34
592: aload         15
594: invokestatic  #39
597: aload         16
599: invokestatic  #39
602: aload         17
604: invokestatic  #39
607: aload         18
609: invokestatic  #39
612: aload         19
614: invokestatic  #39
617: new           #27
620: dup
621: invokespecial #28
624: ldc           #29
626: invokevirtual #30
629: iload         20
631: invokevirtual #35
634: ldc           #32
636: invokevirtual #30
639: iconst_0
640: invokevirtual #35
643: ldc           #29
645: invokevirtual #30
648: invokevirtual #33
651: iload         20
653: ifne          660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #34
664: new           #27
667: dup
668: invokespecial #28
671: ldc           #29
673: invokevirtual #30
676: iload         22
678: invokevirtual #35
681: ldc           #32
683: invokevirtual #30
686: iconst_0
687: invokevirtual #35
690: ldc           #29
692: invokevirtual #30
695: invokevirtual #33
698: iload         22
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #34
711: aload         23
713: invokestatic  #39
716: aload         24
718: invokestatic  #39
721: aload         25
723: invokestatic  #39
726: aload         26
728: invokestatic  #39
731: new           #27
734: dup
735: invokespecial #28
738: ldc           #29
740: invokevirtual #30
743: aload         29
745: invokevirtual #30
748: ldc           #93
750: invokevirtual #30
753: invokevirtual #33
756: aload         29
758: ldc           #52
760: invokestatic  #91
763: new           #27
766: dup
767: invokespecial #28
770: ldc           #29
772: invokevirtual #30
775: aload         30
777: invokevirtual #30
780: ldc           #94
782: invokevirtual #30
785: invokevirtual #33
788: aload         30
790: ldc           #95
792: invokestatic  #91
795: new           #27
798: dup
799: invokespecial #28
802: ldc           #29
804: invokevirtual #30
807: iload         33
809: invokevirtual #31
812: ldc           #32
814: invokevirtual #30
817: iconst_1
818: invokevirtual #31
821: ldc           #29
823: invokevirtual #30
826: invokevirtual #33
829: iload         33
831: iconst_1
832: if_icmpne     839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #34
843: new           #27
846: dup
847: invokespecial #28
850: ldc           #29
852: invokevirtual #30
855: iload         34
857: invokevirtual #35
860: ldc           #32
862: invokevirtual #30
865: iconst_0
866: invokevirtual #35
869: ldc           #29
871: invokevirtual #30
874: invokevirtual #33
877: iload         34
879: ifne          886
882: iconst_1
883: goto          887
886: iconst_0
887: invokestatic  #34
890: new           #27
893: dup
894: invokespecial #28
897: ldc           #29
899: invokevirtual #30
902: aload         35
904: invokevirtual #30
907: ldc           #102
909: invokevirtual #30
912: invokevirtual #33
915: aload         35
917: ldc           #103
919: invokestatic  #91
922: new           #27
925: dup
926: invokespecial #28
929: ldc           #29
931: invokevirtual #30
934: aload         36
936: invokevirtual #30
939: ldc           #102
941: invokevirtual #30
944: invokevirtual #33
947: aload         36
949: ldc           #103
951: invokestatic  #91
954: new           #27
957: dup
958: invokespecial #28
961: ldc           #29
963: invokevirtual #30
966: iload         39
968: invokevirtual #31
971: ldc           #32
973: invokevirtual #30
976: iconst_1
977: invokevirtual #31
980: ldc           #29
982: invokevirtual #30
985: invokevirtual #33
988: iload         39
990: iconst_1
991: if_icmpne     998
994: iconst_1
995: goto          999
998: iconst_0
999: invokestatic  #34
1002: aload         40
1004: invokestatic  #39
1007: new           #27
1010: dup
1011: invokespecial #28
1014: ldc           #29
1016: invokevirtual #30
1019: iload         41
1021: invokevirtual #35
1024: ldc           #32
1026: invokevirtual #30
1029: iconst_0
1030: invokevirtual #35
1033: ldc           #29
1035: invokevirtual #30
1038: invokevirtual #33
1041: iload         41
1043: ifne          1050
1046: iconst_1
1047: goto          1051
1050: iconst_0
1051: invokestatic  #34
1054: new           #27
1057: dup
1058: invokespecial #28
1061: ldc           #29
1063: invokevirtual #30
1066: iload         42
1068: invokevirtual #31
1071: ldc           #32
1073: invokevirtual #30
1076: iconst_1
1077: invokevirtual #31
1080: ldc           #29
1082: invokevirtual #30
1085: invokevirtual #33
1088: iload         42
1090: iconst_1
1091: if_icmpne     1098
1094: iconst_1
1095: goto          1099
1098: iconst_0
1099: invokestatic  #34
1102: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test44
Start line: 2620
End line: 2705
Method source code: 
    public void test44() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test44");
        org.jsoup.nodes.Comment comment2 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean4 = comment2.hasAttr("hi!");
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element8 = document6.toggleClass("");
        org.jsoup.nodes.Node node9 = document6.clone();
        org.jsoup.nodes.Node node10 = comment2.doClone(node9);
        java.lang.String str11 = comment2.nodeName();
        java.lang.StringBuilder stringBuilder12 = null;
        org.jsoup.nodes.DocumentType documentType18 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder19 = null;
        org.jsoup.nodes.TextNode textNode23 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str24 = textNode23.getWholeText();
        java.lang.String str26 = textNode23.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder27 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType29 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document32 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element36 = document34.toggleClass("");
        java.lang.String str37 = element36.tagName();
        org.jsoup.nodes.Element element39 = element36.toggleClass("");
        boolean boolean40 = isOnlyOfType29.matches((org.jsoup.nodes.Element) document32, element36);
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements45 = document43.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element47 = document43.text(" ");
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements52 = document50.getElementsContainingText("#data");
        boolean boolean53 = isOnlyOfType29.matches((org.jsoup.nodes.Element) document43, (org.jsoup.nodes.Element) document50);
        org.jsoup.nodes.Comment comment56 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean58 = comment56.hasAttr("hi!");
        org.jsoup.nodes.Document document60 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element62 = document60.toggleClass("");
        org.jsoup.nodes.Node node63 = document60.clone();
        org.jsoup.nodes.Node node64 = comment56.doClone(node63);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = null;
        comment56.outerHtmlTail(stringBuilder65, 10, outputSettings67);
        java.lang.String str69 = comment56.getData();
        java.lang.String str70 = comment56.nodeName();
        java.lang.StringBuilder stringBuilder71 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = new org.jsoup.nodes.Document.OutputSettings();
        int int74 = outputSettings73.indentAmount();
        comment56.outerHtmlTail(stringBuilder71, 0, outputSettings73);
        boolean boolean76 = document50.equals((java.lang.Object) outputSettings73);
        textNode23.outerHtmlTail(stringBuilder27, (int) (short) 100, outputSettings73);
        documentType18.outerHtmlTail(stringBuilder19, (int) (short) 1, outputSettings73);
        java.lang.StringBuilder stringBuilder79 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings81 = new org.jsoup.nodes.Document.OutputSettings();
        int int82 = outputSettings81.indentAmount();
        documentType18.outerHtmlTail(stringBuilder79, 0, outputSettings81);
        int int84 = outputSettings81.indentAmount();
        comment2.outerHtmlTail(stringBuilder12, 0, outputSettings81);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#comment" + "'", str11, "#comment");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "#root" + "'", str37, "#root");
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(elements45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(elements52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(document60);
        org.junit.Assert.assertNotNull(element62);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "#comment" + "'", str70, "#comment");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #253
19: aastore
20: invokevirtual #7
23: pop
24: new           #77
27: dup
28: ldc           #52
30: ldc           #52
32: invokespecial #78
35: astore_1
36: aload_1
37: ldc           #52
39: invokevirtual #79
42: istore_2
43: ldc           #52
45: invokestatic  #53
48: astore_3
49: aload_3
50: ldc           #9
52: invokevirtual #54
55: astore        4
57: aload_3
58: invokevirtual #80
61: astore        5
63: aload_1
64: aload         5
66: invokevirtual #81
69: astore        6
71: aload_1
72: invokevirtual #84
75: astore        7
77: aconst_null
78: astore        8
80: new           #8
83: dup
84: ldc           #9
86: ldc           #10
88: ldc           #11
90: ldc           #9
92: invokespecial #12
95: astore        9
97: aconst_null
98: astore        10
100: new           #58
103: dup
104: ldc           #9
106: ldc           #59
108: invokespecial #60
111: astore        11
113: aload         11
115: invokevirtual #61
118: astore        12
120: aload         11
122: ldc           #62
124: invokevirtual #63
127: astore        13
129: aconst_null
130: astore        14
132: new           #64
135: dup
136: invokespecial #65
139: astore        15
141: ldc           #9
143: ldc           #9
145: invokestatic  #66
148: astore        16
150: ldc           #52
152: invokestatic  #53
155: astore        17
157: aload         17
159: ldc           #9
161: invokevirtual #54
164: astore        18
166: aload         18
168: invokevirtual #67
171: astore        19
173: aload         18
175: ldc           #9
177: invokevirtual #68
180: astore        20
182: aload         15
184: aload         16
186: aload         18
188: invokevirtual #69
191: istore        21
193: ldc           #59
195: ldc           #52
197: invokestatic  #70
200: astore        22
202: aload         22
204: bipush        100
206: invokevirtual #71
209: astore        23
211: aload         22
213: ldc           #72
215: invokevirtual #73
218: astore        24
220: ldc           #74
222: ldc           #52
224: invokestatic  #70
227: astore        25
229: aload         25
231: ldc           #75
233: invokevirtual #76
236: astore        26
238: aload         15
240: aload         22
242: aload         25
244: invokevirtual #69
247: istore        27
249: new           #77
252: dup
253: ldc           #52
255: ldc           #52
257: invokespecial #78
260: astore        28
262: aload         28
264: ldc           #52
266: invokevirtual #79
269: istore        29
271: ldc           #52
273: invokestatic  #53
276: astore        30
278: aload         30
280: ldc           #9
282: invokevirtual #54
285: astore        31
287: aload         30
289: invokevirtual #80
292: astore        32
294: aload         28
296: aload         32
298: invokevirtual #81
301: astore        33
303: aconst_null
304: astore        34
306: aconst_null
307: astore        35
309: aload         28
311: aload         34
313: bipush        10
315: aload         35
317: invokevirtual #82
320: aload         28
322: invokevirtual #83
325: astore        36
327: aload         28
329: invokevirtual #84
332: astore        37
334: aconst_null
335: astore        38
337: new           #13
340: dup
341: invokespecial #14
344: astore        39
346: aload         39
348: invokevirtual #15
351: istore        40
353: aload         28
355: aload         38
357: iconst_0
358: aload         39
360: invokevirtual #82
363: aload         25
365: aload         39
367: invokevirtual #85
370: istore        41
372: aload         11
374: aload         14
376: bipush        100
378: aload         39
380: invokevirtual #86
383: aload         9
385: aload         10
387: iconst_1
388: aload         39
390: invokevirtual #87
393: aconst_null
394: astore        42
396: new           #13
399: dup
400: invokespecial #14
403: astore        43
405: aload         43
407: invokevirtual #15
410: istore        44
412: aload         9
414: aload         42
416: iconst_0
417: aload         43
419: invokevirtual #87
422: aload         43
424: invokevirtual #15
427: istore        45
429: aload_1
430: aload         8
432: iconst_0
433: aload         43
435: invokevirtual #82
438: new           #27
441: dup
442: invokespecial #28
445: ldc           #29
447: invokevirtual #30
450: iload_2
451: invokevirtual #35
454: ldc           #32
456: invokevirtual #30
459: iconst_0
460: invokevirtual #35
463: ldc           #29
465: invokevirtual #30
468: invokevirtual #33
471: iload_2
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #34
483: aload_3
484: invokestatic  #39
487: aload         4
489: invokestatic  #39
492: aload         5
494: invokestatic  #39
497: aload         6
499: invokestatic  #39
502: new           #27
505: dup
506: invokespecial #28
509: ldc           #29
511: invokevirtual #30
514: aload         7
516: invokevirtual #30
519: ldc           #94
521: invokevirtual #30
524: invokevirtual #33
527: aload         7
529: ldc           #95
531: invokestatic  #91
534: new           #27
537: dup
538: invokespecial #28
541: ldc           #29
543: invokevirtual #30
546: aload         12
548: invokevirtual #30
551: ldc           #90
553: invokevirtual #30
556: invokevirtual #33
559: aload         12
561: ldc           #9
563: invokestatic  #91
566: new           #27
569: dup
570: invokespecial #28
573: ldc           #29
575: invokevirtual #30
578: aload         13
580: invokevirtual #30
583: ldc           #90
585: invokevirtual #30
588: invokevirtual #33
591: aload         13
593: ldc           #9
595: invokestatic  #91
598: aload         16
600: invokestatic  #39
603: aload         17
605: invokestatic  #39
608: aload         18
610: invokestatic  #39
613: new           #27
616: dup
617: invokespecial #28
620: ldc           #29
622: invokevirtual #30
625: aload         19
627: invokevirtual #30
630: ldc           #92
632: invokevirtual #30
635: invokevirtual #33
638: aload         19
640: ldc           #17
642: invokestatic  #91
645: aload         20
647: invokestatic  #39
650: new           #27
653: dup
654: invokespecial #28
657: ldc           #29
659: invokevirtual #30
662: iload         21
664: invokevirtual #35
667: ldc           #32
669: invokevirtual #30
672: iconst_0
673: invokevirtual #35
676: ldc           #29
678: invokevirtual #30
681: invokevirtual #33
684: iload         21
686: ifne          693
689: iconst_1
690: goto          694
693: iconst_0
694: invokestatic  #34
697: aload         22
699: invokestatic  #39
702: aload         23
704: invokestatic  #39
707: aload         24
709: invokestatic  #39
712: aload         25
714: invokestatic  #39
717: aload         26
719: invokestatic  #39
722: new           #27
725: dup
726: invokespecial #28
729: ldc           #29
731: invokevirtual #30
734: iload         27
736: invokevirtual #35
739: ldc           #32
741: invokevirtual #30
744: iconst_0
745: invokevirtual #35
748: ldc           #29
750: invokevirtual #30
753: invokevirtual #33
756: iload         27
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #34
769: new           #27
772: dup
773: invokespecial #28
776: ldc           #29
778: invokevirtual #30
781: iload         29
783: invokevirtual #35
786: ldc           #32
788: invokevirtual #30
791: iconst_0
792: invokevirtual #35
795: ldc           #29
797: invokevirtual #30
800: invokevirtual #33
803: iload         29
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #34
816: aload         30
818: invokestatic  #39
821: aload         31
823: invokestatic  #39
826: aload         32
828: invokestatic  #39
831: aload         33
833: invokestatic  #39
836: new           #27
839: dup
840: invokespecial #28
843: ldc           #29
845: invokevirtual #30
848: aload         36
850: invokevirtual #30
853: ldc           #93
855: invokevirtual #30
858: invokevirtual #33
861: aload         36
863: ldc           #52
865: invokestatic  #91
868: new           #27
871: dup
872: invokespecial #28
875: ldc           #29
877: invokevirtual #30
880: aload         37
882: invokevirtual #30
885: ldc           #94
887: invokevirtual #30
890: invokevirtual #33
893: aload         37
895: ldc           #95
897: invokestatic  #91
900: new           #27
903: dup
904: invokespecial #28
907: ldc           #29
909: invokevirtual #30
912: iload         40
914: invokevirtual #31
917: ldc           #32
919: invokevirtual #30
922: iconst_1
923: invokevirtual #31
926: ldc           #29
928: invokevirtual #30
931: invokevirtual #33
934: iload         40
936: iconst_1
937: if_icmpne     944
940: iconst_1
941: goto          945
944: iconst_0
945: invokestatic  #34
948: new           #27
951: dup
952: invokespecial #28
955: ldc           #29
957: invokevirtual #30
960: iload         41
962: invokevirtual #35
965: ldc           #32
967: invokevirtual #30
970: iconst_0
971: invokevirtual #35
974: ldc           #29
976: invokevirtual #30
979: invokevirtual #33
982: iload         41
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #34
995: new           #27
998: dup
999: invokespecial #28
1002: ldc           #29
1004: invokevirtual #30
1007: iload         44
1009: invokevirtual #31
1012: ldc           #32
1014: invokevirtual #30
1017: iconst_1
1018: invokevirtual #31
1021: ldc           #29
1023: invokevirtual #30
1026: invokevirtual #33
1029: iload         44
1031: iconst_1
1032: if_icmpne     1039
1035: iconst_1
1036: goto          1040
1039: iconst_0
1040: invokestatic  #34
1043: new           #27
1046: dup
1047: invokespecial #28
1050: ldc           #29
1052: invokevirtual #30
1055: iload         45
1057: invokevirtual #31
1060: ldc           #32
1062: invokevirtual #30
1065: iconst_1
1066: invokevirtual #31
1069: ldc           #29
1071: invokevirtual #30
1074: invokevirtual #33
1077: iload         45
1079: iconst_1
1080: if_icmpne     1087
1083: iconst_1
1084: goto          1088
1087: iconst_0
1088: invokestatic  #34
1091: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test45
Start line: 2708
End line: 2712
Method source code: 
    public void test45() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test45");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType(":containsOwn(#document", "<html>\n <head></head>\n <body>\n  #text\n </body>\n</html>", ":lt(2)", "[]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #254
19: aastore
20: invokevirtual #7
23: pop
24: new           #8
27: dup
28: ldc           #255
30: ldc_w         #256
33: ldc_w         #257
36: ldc_w         #258
39: invokespecial #12
42: astore_1
43: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test46
Start line: 2715
End line: 2787
Method source code: 
    public void test46() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test46");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        int int70 = outputSettings67.indentAmount();
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = outputSettings67.outline(false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(outputSettings72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #259
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: aload         35
360: invokevirtual #15
363: istore        37
365: aload         35
367: iconst_0
368: invokevirtual #44
371: astore        38
373: new           #27
376: dup
377: invokespecial #28
380: ldc           #29
382: invokevirtual #30
385: aload         4
387: invokevirtual #30
390: ldc           #90
392: invokevirtual #30
395: invokevirtual #33
398: aload         4
400: ldc           #9
402: invokestatic  #91
405: new           #27
408: dup
409: invokespecial #28
412: ldc           #29
414: invokevirtual #30
417: aload         5
419: invokevirtual #30
422: ldc           #90
424: invokevirtual #30
427: invokevirtual #33
430: aload         5
432: ldc           #9
434: invokestatic  #91
437: aload         8
439: invokestatic  #39
442: aload         9
444: invokestatic  #39
447: aload         10
449: invokestatic  #39
452: new           #27
455: dup
456: invokespecial #28
459: ldc           #29
461: invokevirtual #30
464: aload         11
466: invokevirtual #30
469: ldc           #92
471: invokevirtual #30
474: invokevirtual #33
477: aload         11
479: ldc           #17
481: invokestatic  #91
484: aload         12
486: invokestatic  #39
489: new           #27
492: dup
493: invokespecial #28
496: ldc           #29
498: invokevirtual #30
501: iload         13
503: invokevirtual #35
506: ldc           #32
508: invokevirtual #30
511: iconst_0
512: invokevirtual #35
515: ldc           #29
517: invokevirtual #30
520: invokevirtual #33
523: iload         13
525: ifne          532
528: iconst_1
529: goto          533
532: iconst_0
533: invokestatic  #34
536: aload         14
538: invokestatic  #39
541: aload         15
543: invokestatic  #39
546: aload         16
548: invokestatic  #39
551: aload         17
553: invokestatic  #39
556: aload         18
558: invokestatic  #39
561: new           #27
564: dup
565: invokespecial #28
568: ldc           #29
570: invokevirtual #30
573: iload         19
575: invokevirtual #35
578: ldc           #32
580: invokevirtual #30
583: iconst_0
584: invokevirtual #35
587: ldc           #29
589: invokevirtual #30
592: invokevirtual #33
595: iload         19
597: ifne          604
600: iconst_1
601: goto          605
604: iconst_0
605: invokestatic  #34
608: new           #27
611: dup
612: invokespecial #28
615: ldc           #29
617: invokevirtual #30
620: iload         21
622: invokevirtual #35
625: ldc           #32
627: invokevirtual #30
630: iconst_0
631: invokevirtual #35
634: ldc           #29
636: invokevirtual #30
639: invokevirtual #33
642: iload         21
644: ifne          651
647: iconst_1
648: goto          652
651: iconst_0
652: invokestatic  #34
655: aload         22
657: invokestatic  #39
660: aload         23
662: invokestatic  #39
665: aload         24
667: invokestatic  #39
670: aload         25
672: invokestatic  #39
675: new           #27
678: dup
679: invokespecial #28
682: ldc           #29
684: invokevirtual #30
687: aload         28
689: invokevirtual #30
692: ldc           #93
694: invokevirtual #30
697: invokevirtual #33
700: aload         28
702: ldc           #52
704: invokestatic  #91
707: new           #27
710: dup
711: invokespecial #28
714: ldc           #29
716: invokevirtual #30
719: aload         29
721: invokevirtual #30
724: ldc           #94
726: invokevirtual #30
729: invokevirtual #33
732: aload         29
734: ldc           #95
736: invokestatic  #91
739: new           #27
742: dup
743: invokespecial #28
746: ldc           #29
748: invokevirtual #30
751: iload         32
753: invokevirtual #31
756: ldc           #32
758: invokevirtual #30
761: iconst_1
762: invokevirtual #31
765: ldc           #29
767: invokevirtual #30
770: invokevirtual #33
773: iload         32
775: iconst_1
776: if_icmpne     783
779: iconst_1
780: goto          784
783: iconst_0
784: invokestatic  #34
787: new           #27
790: dup
791: invokespecial #28
794: ldc           #29
796: invokevirtual #30
799: iload         33
801: invokevirtual #35
804: ldc           #32
806: invokevirtual #30
809: iconst_0
810: invokevirtual #35
813: ldc           #29
815: invokevirtual #30
818: invokevirtual #33
821: iload         33
823: ifne          830
826: iconst_1
827: goto          831
830: iconst_0
831: invokestatic  #34
834: new           #27
837: dup
838: invokespecial #28
841: ldc           #29
843: invokevirtual #30
846: iload         36
848: invokevirtual #31
851: ldc           #32
853: invokevirtual #30
856: iconst_1
857: invokevirtual #31
860: ldc           #29
862: invokevirtual #30
865: invokevirtual #33
868: iload         36
870: iconst_1
871: if_icmpne     878
874: iconst_1
875: goto          879
878: iconst_0
879: invokestatic  #34
882: new           #27
885: dup
886: invokespecial #28
889: ldc           #29
891: invokevirtual #30
894: iload         37
896: invokevirtual #31
899: ldc           #32
901: invokevirtual #30
904: iconst_1
905: invokevirtual #31
908: ldc           #29
910: invokevirtual #30
913: invokevirtual #33
916: iload         37
918: iconst_1
919: if_icmpne     926
922: iconst_1
923: goto          927
926: iconst_0
927: invokestatic  #34
930: aload         38
932: invokestatic  #39
935: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test47
Start line: 2790
End line: 2803
Method source code: 
    public void test47() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test47");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("#<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", ":only-child", "[:only-of-type]", ":containsOwn( :last-of-type");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings7 = null;
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) '4', outputSettings7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #260
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #222
31: ldc           #223
33: ldc           #224
35: ldc           #225
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: aconst_null
44: astore_3
45: aload_1
46: aload_2
47: bipush        52
49: aload_3
50: invokevirtual #23
53: ldc           #24
55: invokestatic  #25
58: goto          63
61: astore        4
63: return
Exception table:
from    to  target type
45    58    61   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test48
Start line: 2806
End line: 2891
Method source code: 
    public void test48() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test48");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.outerHtml();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str11 = textNode10.getWholeText();
        java.lang.String str13 = textNode10.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType16 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document19 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element23 = document21.toggleClass("");
        java.lang.String str24 = element23.tagName();
        org.jsoup.nodes.Element element26 = element23.toggleClass("");
        boolean boolean27 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document19, element23);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements32 = document30.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element34 = document30.text(" ");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements39 = document37.getElementsContainingText("#data");
        boolean boolean40 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document37);
        org.jsoup.nodes.Comment comment43 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean45 = comment43.hasAttr("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element49 = document47.toggleClass("");
        org.jsoup.nodes.Node node50 = document47.clone();
        org.jsoup.nodes.Node node51 = comment43.doClone(node50);
        java.lang.StringBuilder stringBuilder52 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = null;
        comment43.outerHtmlTail(stringBuilder52, 10, outputSettings54);
        java.lang.String str56 = comment43.getData();
        java.lang.String str57 = comment43.nodeName();
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = new org.jsoup.nodes.Document.OutputSettings();
        int int61 = outputSettings60.indentAmount();
        comment43.outerHtmlTail(stringBuilder58, 0, outputSettings60);
        boolean boolean63 = document37.equals((java.lang.Object) outputSettings60);
        textNode10.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings60);
        documentType4.outerHtmlTail(stringBuilder6, 0, outputSettings60);
        java.lang.String str66 = documentType4.nodeName();
        java.util.List<org.jsoup.nodes.Node> nodeList67 = null;
        documentType4.childNodes = nodeList67;
        java.lang.StringBuilder stringBuilder69 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = null;
        documentType4.outerHtmlTail(stringBuilder69, (int) (byte) 10, outputSettings71);
        java.lang.StringBuilder stringBuilder73 = null;
        org.jsoup.nodes.DataNode dataNode77 = new org.jsoup.nodes.DataNode("[^]", "<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>");
        org.jsoup.nodes.DataNode dataNode79 = dataNode77.setWholeData(" ");
        java.lang.StringBuilder stringBuilder80 = null;
        org.jsoup.nodes.Attribute attribute84 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings85 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean86 = attribute84.shouldCollapseAttribute(outputSettings85);
        org.jsoup.nodes.Document.OutputSettings outputSettings88 = outputSettings85.outline(true);
        dataNode79.outerHtmlTail(stringBuilder80, (int) '#', outputSettings88);
        documentType4.outerHtmlTail(stringBuilder73, (int) (byte) -1, outputSettings88);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">" + "'", str5, "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#root" + "'", str24, "#root");
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#doctype" + "'", str66, "#doctype");
        org.junit.Assert.assertNotNull(dataNode79);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(outputSettings88);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aload_1
42: invokevirtual #110
45: astore_2
46: aconst_null
47: astore_3
48: new           #58
51: dup
52: ldc           #9
54: ldc           #59
56: invokespecial #60
59: astore        4
61: aload         4
63: invokevirtual #61
66: astore        5
68: aload         4
70: ldc           #62
72: invokevirtual #63
75: astore        6
77: aconst_null
78: astore        7
80: new           #64
83: dup
84: invokespecial #65
87: astore        8
89: ldc           #9
91: ldc           #9
93: invokestatic  #66
96: astore        9
98: ldc           #52
100: invokestatic  #53
103: astore        10
105: aload         10
107: ldc           #9
109: invokevirtual #54
112: astore        11
114: aload         11
116: invokevirtual #67
119: astore        12
121: aload         11
123: ldc           #9
125: invokevirtual #68
128: astore        13
130: aload         8
132: aload         9
134: aload         11
136: invokevirtual #69
139: istore        14
141: ldc           #59
143: ldc           #52
145: invokestatic  #70
148: astore        15
150: aload         15
152: bipush        100
154: invokevirtual #71
157: astore        16
159: aload         15
161: ldc           #72
163: invokevirtual #73
166: astore        17
168: ldc           #74
170: ldc           #52
172: invokestatic  #70
175: astore        18
177: aload         18
179: ldc           #75
181: invokevirtual #76
184: astore        19
186: aload         8
188: aload         15
190: aload         18
192: invokevirtual #69
195: istore        20
197: new           #77
200: dup
201: ldc           #52
203: ldc           #52
205: invokespecial #78
208: astore        21
210: aload         21
212: ldc           #52
214: invokevirtual #79
217: istore        22
219: ldc           #52
221: invokestatic  #53
224: astore        23
226: aload         23
228: ldc           #9
230: invokevirtual #54
233: astore        24
235: aload         23
237: invokevirtual #80
240: astore        25
242: aload         21
244: aload         25
246: invokevirtual #81
249: astore        26
251: aconst_null
252: astore        27
254: aconst_null
255: astore        28
257: aload         21
259: aload         27
261: bipush        10
263: aload         28
265: invokevirtual #82
268: aload         21
270: invokevirtual #83
273: astore        29
275: aload         21
277: invokevirtual #84
280: astore        30
282: aconst_null
283: astore        31
285: new           #13
288: dup
289: invokespecial #14
292: astore        32
294: aload         32
296: invokevirtual #15
299: istore        33
301: aload         21
303: aload         31
305: iconst_0
306: aload         32
308: invokevirtual #82
311: aload         18
313: aload         32
315: invokevirtual #85
318: istore        34
320: aload         4
322: aload         7
324: bipush        100
326: aload         32
328: invokevirtual #86
331: aload_1
332: aload_3
333: iconst_0
334: aload         32
336: invokevirtual #87
339: aload_1
340: invokevirtual #97
343: astore        35
345: aconst_null
346: astore        36
348: aload_1
349: aload         36
351: putfield      #211
354: aconst_null
355: astore        37
357: aconst_null
358: astore        38
360: aload_1
361: aload         37
363: bipush        10
365: aload         38
367: invokevirtual #87
370: aconst_null
371: astore        39
373: new           #187
376: dup
377: ldc           #59
379: ldc           #188
381: invokespecial #189
384: astore        40
386: aload         40
388: ldc           #72
390: invokevirtual #190
393: astore        41
395: aconst_null
396: astore        42
398: new           #16
401: dup
402: ldc           #17
404: ldc           #18
406: invokespecial #19
409: astore        43
411: new           #13
414: dup
415: invokespecial #14
418: astore        44
420: aload         43
422: aload         44
424: invokevirtual #20
427: istore        45
429: aload         44
431: iconst_1
432: invokevirtual #44
435: astore        46
437: aload         41
439: aload         42
441: bipush        35
443: aload         46
445: invokevirtual #191
448: aload_1
449: aload         39
451: iconst_m1
452: aload         46
454: invokevirtual #87
457: new           #27
460: dup
461: invokespecial #28
464: ldc           #29
466: invokevirtual #30
469: aload_2
470: invokevirtual #30
473: ldc           #114
475: invokevirtual #30
478: invokevirtual #33
481: aload_2
482: ldc           #115
484: invokestatic  #91
487: new           #27
490: dup
491: invokespecial #28
494: ldc           #29
496: invokevirtual #30
499: aload         5
501: invokevirtual #30
504: ldc           #90
506: invokevirtual #30
509: invokevirtual #33
512: aload         5
514: ldc           #9
516: invokestatic  #91
519: new           #27
522: dup
523: invokespecial #28
526: ldc           #29
528: invokevirtual #30
531: aload         6
533: invokevirtual #30
536: ldc           #90
538: invokevirtual #30
541: invokevirtual #33
544: aload         6
546: ldc           #9
548: invokestatic  #91
551: aload         9
553: invokestatic  #39
556: aload         10
558: invokestatic  #39
561: aload         11
563: invokestatic  #39
566: new           #27
569: dup
570: invokespecial #28
573: ldc           #29
575: invokevirtual #30
578: aload         12
580: invokevirtual #30
583: ldc           #92
585: invokevirtual #30
588: invokevirtual #33
591: aload         12
593: ldc           #17
595: invokestatic  #91
598: aload         13
600: invokestatic  #39
603: new           #27
606: dup
607: invokespecial #28
610: ldc           #29
612: invokevirtual #30
615: iload         14
617: invokevirtual #35
620: ldc           #32
622: invokevirtual #30
625: iconst_0
626: invokevirtual #35
629: ldc           #29
631: invokevirtual #30
634: invokevirtual #33
637: iload         14
639: ifne          646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #34
650: aload         15
652: invokestatic  #39
655: aload         16
657: invokestatic  #39
660: aload         17
662: invokestatic  #39
665: aload         18
667: invokestatic  #39
670: aload         19
672: invokestatic  #39
675: new           #27
678: dup
679: invokespecial #28
682: ldc           #29
684: invokevirtual #30
687: iload         20
689: invokevirtual #35
692: ldc           #32
694: invokevirtual #30
697: iconst_0
698: invokevirtual #35
701: ldc           #29
703: invokevirtual #30
706: invokevirtual #33
709: iload         20
711: ifne          718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #34
722: new           #27
725: dup
726: invokespecial #28
729: ldc           #29
731: invokevirtual #30
734: iload         22
736: invokevirtual #35
739: ldc           #32
741: invokevirtual #30
744: iconst_0
745: invokevirtual #35
748: ldc           #29
750: invokevirtual #30
753: invokevirtual #33
756: iload         22
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #34
769: aload         23
771: invokestatic  #39
774: aload         24
776: invokestatic  #39
779: aload         25
781: invokestatic  #39
784: aload         26
786: invokestatic  #39
789: new           #27
792: dup
793: invokespecial #28
796: ldc           #29
798: invokevirtual #30
801: aload         29
803: invokevirtual #30
806: ldc           #93
808: invokevirtual #30
811: invokevirtual #33
814: aload         29
816: ldc           #52
818: invokestatic  #91
821: new           #27
824: dup
825: invokespecial #28
828: ldc           #29
830: invokevirtual #30
833: aload         30
835: invokevirtual #30
838: ldc           #94
840: invokevirtual #30
843: invokevirtual #33
846: aload         30
848: ldc           #95
850: invokestatic  #91
853: new           #27
856: dup
857: invokespecial #28
860: ldc           #29
862: invokevirtual #30
865: iload         33
867: invokevirtual #31
870: ldc           #32
872: invokevirtual #30
875: iconst_1
876: invokevirtual #31
879: ldc           #29
881: invokevirtual #30
884: invokevirtual #33
887: iload         33
889: iconst_1
890: if_icmpne     897
893: iconst_1
894: goto          898
897: iconst_0
898: invokestatic  #34
901: new           #27
904: dup
905: invokespecial #28
908: ldc           #29
910: invokevirtual #30
913: iload         34
915: invokevirtual #35
918: ldc           #32
920: invokevirtual #30
923: iconst_0
924: invokevirtual #35
927: ldc           #29
929: invokevirtual #30
932: invokevirtual #33
935: iload         34
937: ifne          944
940: iconst_1
941: goto          945
944: iconst_0
945: invokestatic  #34
948: new           #27
951: dup
952: invokespecial #28
955: ldc           #29
957: invokevirtual #30
960: aload         35
962: invokevirtual #30
965: ldc           #102
967: invokevirtual #30
970: invokevirtual #33
973: aload         35
975: ldc           #103
977: invokestatic  #91
980: aload         41
982: invokestatic  #39
985: new           #27
988: dup
989: invokespecial #28
992: ldc           #29
994: invokevirtual #30
997: iload         45
999: invokevirtual #35
1002: ldc           #32
1004: invokevirtual #30
1007: iconst_0
1008: invokevirtual #35
1011: ldc           #29
1013: invokevirtual #30
1016: invokevirtual #33
1019: iload         45
1021: ifne          1028
1024: iconst_1
1025: goto          1029
1028: iconst_0
1029: invokestatic  #34
1032: aload         46
1034: invokestatic  #39
1037: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test49
Start line: 2894
End line: 2925
Method source code: 
    public void test49() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test49");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>", "", "\n<!--hi!-->", ":only-child");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Attribute attribute9 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Attribute attribute10 = attribute9.clone();
        attribute10.setKey(" class=\"\"");
        org.jsoup.nodes.Document.OutputSettings outputSettings13 = new org.jsoup.nodes.Document.OutputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = outputSettings13.outline(false);
        boolean boolean16 = attribute10.shouldCollapseAttribute(outputSettings15);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax17 = outputSettings15.syntax();
        java.nio.charset.Charset charset18 = outputSettings15.charset();
        org.jsoup.nodes.Attribute attribute21 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean23 = attribute21.shouldCollapseAttribute(outputSettings22);
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = outputSettings22.outline(true);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax26 = outputSettings22.syntax();
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings15.syntax(syntax26);
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings15.indentAmount(100);
        documentType4.outerHtmlTail(stringBuilder5, (int) (byte) -1, outputSettings15);
        org.junit.Assert.assertNotNull(attribute10);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + syntax17 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax17.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(charset18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertTrue("'" + syntax26 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax26.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #262
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #188
31: ldc           #9
33: ldc           #247
35: ldc           #223
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #16
46: dup
47: ldc           #17
49: ldc           #18
51: invokespecial #19
54: astore_3
55: aload_3
56: invokevirtual #41
59: astore        4
61: aload         4
63: ldc           #42
65: invokevirtual #43
68: new           #13
71: dup
72: invokespecial #14
75: astore        5
77: aload         5
79: iconst_0
80: invokevirtual #44
83: astore        6
85: aload         4
87: aload         6
89: invokevirtual #20
92: istore        7
94: aload         6
96: invokevirtual #48
99: astore        8
101: aload         6
103: invokevirtual #129
106: astore        9
108: new           #16
111: dup
112: ldc           #17
114: ldc           #18
116: invokespecial #19
119: astore        10
121: new           #13
124: dup
125: invokespecial #14
128: astore        11
130: aload         10
132: aload         11
134: invokevirtual #20
137: istore        12
139: aload         11
141: iconst_1
142: invokevirtual #44
145: astore        13
147: aload         11
149: invokevirtual #48
152: astore        14
154: aload         6
156: aload         14
158: invokevirtual #138
161: astore        15
163: aload         6
165: bipush        100
167: invokevirtual #263
170: astore        16
172: aload_1
173: aload_2
174: iconst_m1
175: aload         6
177: invokevirtual #87
180: aload         4
182: invokestatic  #39
185: aload         6
187: invokestatic  #39
190: new           #27
193: dup
194: invokespecial #28
197: ldc           #29
199: invokevirtual #30
202: iload         7
204: invokevirtual #35
207: ldc           #32
209: invokevirtual #30
212: iconst_0
213: invokevirtual #35
216: ldc           #29
218: invokevirtual #30
221: invokevirtual #33
224: iload         7
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #34
237: new           #27
240: dup
241: invokespecial #28
244: ldc           #29
246: invokevirtual #30
249: aload         8
251: invokevirtual #36
254: ldc           #32
256: invokevirtual #30
259: getstatic     #49
262: invokevirtual #36
265: ldc           #29
267: invokevirtual #30
270: invokevirtual #33
273: aload         8
275: getstatic     #49
278: invokevirtual #50
281: invokestatic  #34
284: aload         9
286: invokestatic  #39
289: new           #27
292: dup
293: invokespecial #28
296: ldc           #29
298: invokevirtual #30
301: iload         12
303: invokevirtual #35
306: ldc           #32
308: invokevirtual #30
311: iconst_0
312: invokevirtual #35
315: ldc           #29
317: invokevirtual #30
320: invokevirtual #33
323: iload         12
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #34
336: aload         13
338: invokestatic  #39
341: new           #27
344: dup
345: invokespecial #28
348: ldc           #29
350: invokevirtual #30
353: aload         14
355: invokevirtual #36
358: ldc           #32
360: invokevirtual #30
363: getstatic     #49
366: invokevirtual #36
369: ldc           #29
371: invokevirtual #30
374: invokevirtual #33
377: aload         14
379: getstatic     #49
382: invokevirtual #50
385: invokestatic  #34
388: aload         15
390: invokestatic  #39
393: aload         16
395: invokestatic  #39
398: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test50
Start line: 2928
End line: 2992
Method source code: 
    public void test50() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test50");
        org.jsoup.nodes.Comment comment2 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean4 = comment2.hasAttr("hi!");
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element8 = document6.toggleClass("");
        org.jsoup.nodes.Node node9 = document6.clone();
        org.jsoup.nodes.Node node10 = comment2.doClone(node9);
        java.util.List<org.jsoup.nodes.Node> nodeList11 = comment2.childNodes();
        java.lang.String str12 = comment2.baseUri;
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.nodes.DocumentType documentType19 = new org.jsoup.nodes.DocumentType("", " #comment=\"#root\"", "[^]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]");
        java.lang.StringBuilder stringBuilder20 = null;
        org.jsoup.nodes.Attribute attribute24 = new org.jsoup.nodes.Attribute("#root", "data-");
        java.lang.String str25 = attribute24.html();
        java.lang.String str26 = attribute24.getValue();
        java.lang.String str28 = attribute24.setValue("[^]");
        org.jsoup.nodes.TextNode textNode31 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node32 = textNode31.parentNode;
        textNode31.siblingIndex = ' ';
        boolean boolean36 = textNode31.hasAttr("<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>");
        boolean boolean38 = textNode31.hasAttr(":last-of-type");
        org.jsoup.nodes.TextNode textNode40 = textNode31.text("");
        java.lang.StringBuilder stringBuilder41 = null;
        org.jsoup.nodes.Comment comment45 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean47 = comment45.hasAttr("hi!");
        java.lang.String str48 = comment45.nodeName();
        org.jsoup.nodes.Node node49 = comment45.parent();
        java.lang.StringBuilder stringBuilder50 = null;
        org.jsoup.nodes.Attribute attribute54 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean56 = attribute54.shouldCollapseAttribute(outputSettings55);
        org.jsoup.nodes.Entities.EscapeMode escapeMode57 = outputSettings55.escapeMode();
        comment45.outerHtmlTail(stringBuilder50, (int) (short) 100, outputSettings55);
        java.nio.charset.Charset charset59 = outputSettings55.charset();
        textNode31.outerHtmlTail(stringBuilder41, (int) '4', outputSettings55);
        boolean boolean61 = attribute24.shouldCollapseAttribute(outputSettings55);
        org.jsoup.nodes.Document.OutputSettings outputSettings63 = outputSettings55.indentAmount((int) (byte) 100);
        documentType19.outerHtmlTail(stringBuilder20, (int) (byte) -1, outputSettings63);
        comment2.outerHtmlTail(stringBuilder13, (int) (byte) 0, outputSettings63);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#root=\"data-\"" + "'", str25, "#root=\"data-\"");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "data-" + "'", str26, "data-");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "data-" + "'", str28, "data-");
        org.junit.Assert.assertNotNull(textNode31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(textNode40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "#comment" + "'", str48, "#comment");
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + escapeMode57 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode57.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(charset59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(outputSettings63);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #264
20: aastore
21: invokevirtual #7
24: pop
25: new           #77
28: dup
29: ldc           #52
31: ldc           #52
33: invokespecial #78
36: astore_1
37: aload_1
38: ldc           #52
40: invokevirtual #79
43: istore_2
44: ldc           #52
46: invokestatic  #53
49: astore_3
50: aload_3
51: ldc           #9
53: invokevirtual #54
56: astore        4
58: aload_3
59: invokevirtual #80
62: astore        5
64: aload_1
65: aload         5
67: invokevirtual #81
70: astore        6
72: aload_1
73: invokevirtual #265
76: astore        7
78: aload_1
79: getfield      #266
82: astore        8
84: aconst_null
85: astore        9
87: new           #8
90: dup
91: ldc           #9
93: ldc           #108
95: ldc           #59
97: ldc           #131
99: invokespecial #12
102: astore        10
104: aconst_null
105: astore        11
107: new           #16
110: dup
111: ldc           #17
113: ldc           #18
115: invokespecial #19
118: astore        12
120: aload         12
122: invokevirtual #167
125: astore        13
127: aload         12
129: invokevirtual #267
132: astore        14
134: aload         12
136: ldc           #59
138: invokevirtual #168
141: astore        15
143: ldc           #52
145: ldc           #52
147: invokestatic  #132
150: astore        16
152: aload         16
154: getfield      #133
157: astore        17
159: aload         16
161: bipush        32
163: putfield      #248
166: aload         16
168: ldc           #10
170: invokevirtual #249
173: istore        18
175: aload         16
177: ldc           #186
179: invokevirtual #249
182: istore        19
184: aload         16
186: ldc           #9
188: invokevirtual #268
191: astore        20
193: aconst_null
194: astore        21
196: new           #77
199: dup
200: ldc           #52
202: ldc           #52
204: invokespecial #78
207: astore        22
209: aload         22
211: ldc           #52
213: invokevirtual #79
216: istore        23
218: aload         22
220: invokevirtual #84
223: astore        24
225: aload         22
227: invokevirtual #269
230: astore        25
232: aconst_null
233: astore        26
235: new           #16
238: dup
239: ldc           #17
241: ldc           #18
243: invokespecial #19
246: astore        27
248: new           #13
251: dup
252: invokespecial #14
255: astore        28
257: aload         27
259: aload         28
261: invokevirtual #20
264: istore        29
266: aload         28
268: invokevirtual #21
271: astore        30
273: aload         22
275: aload         26
277: bipush        100
279: aload         28
281: invokevirtual #82
284: aload         28
286: invokevirtual #129
289: astore        31
291: aload         16
293: aload         21
295: bipush        52
297: aload         28
299: invokevirtual #86
302: aload         12
304: aload         28
306: invokevirtual #20
309: istore        32
311: aload         28
313: bipush        100
315: invokevirtual #263
318: astore        33
320: aload         10
322: aload         11
324: iconst_m1
325: aload         33
327: invokevirtual #87
330: aload_1
331: aload         9
333: iconst_0
334: aload         33
336: invokevirtual #82
339: new           #27
342: dup
343: invokespecial #28
346: ldc           #29
348: invokevirtual #30
351: iload_2
352: invokevirtual #35
355: ldc           #32
357: invokevirtual #30
360: iconst_0
361: invokevirtual #35
364: ldc           #29
366: invokevirtual #30
369: invokevirtual #33
372: iload_2
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #34
384: aload_3
385: invokestatic  #39
388: aload         4
390: invokestatic  #39
393: aload         5
395: invokestatic  #39
398: aload         6
400: invokestatic  #39
403: aload         7
405: invokestatic  #39
408: new           #27
411: dup
412: invokespecial #28
415: ldc           #29
417: invokevirtual #30
420: aload         8
422: invokevirtual #30
425: ldc           #93
427: invokevirtual #30
430: invokevirtual #33
433: aload         8
435: ldc           #52
437: invokestatic  #91
440: new           #27
443: dup
444: invokespecial #28
447: ldc           #29
449: invokevirtual #30
452: aload         13
454: invokevirtual #30
457: ldc           #170
459: invokevirtual #30
462: invokevirtual #33
465: aload         13
467: ldc           #135
469: invokestatic  #91
472: new           #27
475: dup
476: invokespecial #28
479: ldc           #29
481: invokevirtual #30
484: aload         14
486: invokevirtual #30
489: ldc           #171
491: invokevirtual #30
494: invokevirtual #33
497: aload         14
499: ldc           #18
501: invokestatic  #91
504: new           #27
507: dup
508: invokespecial #28
511: ldc           #29
513: invokevirtual #30
516: aload         15
518: invokevirtual #30
521: ldc           #171
523: invokevirtual #30
526: invokevirtual #33
529: aload         15
531: ldc           #18
533: invokestatic  #91
536: aload         16
538: invokestatic  #39
541: aload         17
543: invokestatic  #139
546: new           #27
549: dup
550: invokespecial #28
553: ldc           #29
555: invokevirtual #30
558: iload         18
560: invokevirtual #35
563: ldc           #32
565: invokevirtual #30
568: iconst_0
569: invokevirtual #35
572: ldc           #29
574: invokevirtual #30
577: invokevirtual #33
580: iload         18
582: ifne          589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #34
593: new           #27
596: dup
597: invokespecial #28
600: ldc           #29
602: invokevirtual #30
605: iload         19
607: invokevirtual #35
610: ldc           #32
612: invokevirtual #30
615: iconst_0
616: invokevirtual #35
619: ldc           #29
621: invokevirtual #30
624: invokevirtual #33
627: iload         19
629: ifne          636
632: iconst_1
633: goto          637
636: iconst_0
637: invokestatic  #34
640: aload         20
642: invokestatic  #39
645: new           #27
648: dup
649: invokespecial #28
652: ldc           #29
654: invokevirtual #30
657: iload         23
659: invokevirtual #35
662: ldc           #32
664: invokevirtual #30
667: iconst_0
668: invokevirtual #35
671: ldc           #29
673: invokevirtual #30
676: invokevirtual #33
679: iload         23
681: ifne          688
684: iconst_1
685: goto          689
688: iconst_0
689: invokestatic  #34
692: new           #27
695: dup
696: invokespecial #28
699: ldc           #29
701: invokevirtual #30
704: aload         24
706: invokevirtual #30
709: ldc           #94
711: invokevirtual #30
714: invokevirtual #33
717: aload         24
719: ldc           #95
721: invokestatic  #91
724: aload         25
726: invokestatic  #139
729: new           #27
732: dup
733: invokespecial #28
736: ldc           #29
738: invokevirtual #30
741: iload         29
743: invokevirtual #35
746: ldc           #32
748: invokevirtual #30
751: iconst_0
752: invokevirtual #35
755: ldc           #29
757: invokevirtual #30
760: invokevirtual #33
763: iload         29
765: ifne          772
768: iconst_1
769: goto          773
772: iconst_0
773: invokestatic  #34
776: new           #27
779: dup
780: invokespecial #28
783: ldc           #29
785: invokevirtual #30
788: aload         30
790: invokevirtual #36
793: ldc           #32
795: invokevirtual #30
798: getstatic     #37
801: invokevirtual #36
804: ldc           #29
806: invokevirtual #30
809: invokevirtual #33
812: aload         30
814: getstatic     #37
817: invokevirtual #38
820: invokestatic  #34
823: aload         31
825: invokestatic  #39
828: new           #27
831: dup
832: invokespecial #28
835: ldc           #29
837: invokevirtual #30
840: iload         32
842: invokevirtual #35
845: ldc           #32
847: invokevirtual #30
850: iconst_0
851: invokevirtual #35
854: ldc           #29
856: invokevirtual #30
859: invokevirtual #33
862: iload         32
864: ifne          871
867: iconst_1
868: goto          872
871: iconst_0
872: invokestatic  #34
875: aload         33
877: invokestatic  #39
880: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test51
Start line: 2995
End line: 2999
Method source code: 
    public void test51() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test51");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[^#text]", "<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">", ":last-of-type", ":gt(0)");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #270
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #271
32: ldc           #115
34: ldc           #186
36: ldc_w         #272
39: invokespecial #12
42: astore_1
43: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test52
Start line: 3002
End line: 3099
Method source code: 
    public void test52() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test52");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        java.lang.StringBuilder stringBuilder70 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = new org.jsoup.nodes.Document.OutputSettings();
        int int73 = outputSettings72.indentAmount();
        org.jsoup.nodes.Attribute attribute76 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings77 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean78 = attribute76.shouldCollapseAttribute(outputSettings77);
        org.jsoup.nodes.Entities.EscapeMode escapeMode79 = outputSettings77.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings72.escapeMode(escapeMode79);
        org.jsoup.nodes.Attribute attribute83 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings84 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean85 = attribute83.shouldCollapseAttribute(outputSettings84);
        org.jsoup.nodes.Entities.EscapeMode escapeMode86 = outputSettings84.escapeMode();
        java.util.Map<java.lang.Character, java.lang.String> charMap87 = escapeMode86.getMap();
        org.jsoup.nodes.Document.OutputSettings outputSettings88 = outputSettings80.escapeMode(escapeMode86);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder70, 2, outputSettings88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + escapeMode79 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode79.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + escapeMode86 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode86.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(charMap87);
        org.junit.Assert.assertNotNull(outputSettings88);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #273
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: aconst_null
359: astore        37
361: new           #13
364: dup
365: invokespecial #14
368: astore        38
370: aload         38
372: invokevirtual #15
375: istore        39
377: new           #16
380: dup
381: ldc           #17
383: ldc           #18
385: invokespecial #19
388: astore        40
390: new           #13
393: dup
394: invokespecial #14
397: astore        41
399: aload         40
401: aload         41
403: invokevirtual #20
406: istore        42
408: aload         41
410: invokevirtual #21
413: astore        43
415: aload         38
417: aload         43
419: invokevirtual #22
422: astore        44
424: new           #16
427: dup
428: ldc           #17
430: ldc           #18
432: invokespecial #19
435: astore        45
437: new           #13
440: dup
441: invokespecial #14
444: astore        46
446: aload         45
448: aload         46
450: invokevirtual #20
453: istore        47
455: aload         46
457: invokevirtual #21
460: astore        48
462: aload         48
464: invokevirtual #46
467: astore        49
469: aload         44
471: aload         48
473: invokevirtual #22
476: astore        50
478: aload_1
479: aload         37
481: iconst_2
482: aload         50
484: invokevirtual #23
487: ldc           #24
489: invokestatic  #25
492: goto          497
495: astore        51
497: new           #27
500: dup
501: invokespecial #28
504: ldc           #29
506: invokevirtual #30
509: aload         4
511: invokevirtual #30
514: ldc           #90
516: invokevirtual #30
519: invokevirtual #33
522: aload         4
524: ldc           #9
526: invokestatic  #91
529: new           #27
532: dup
533: invokespecial #28
536: ldc           #29
538: invokevirtual #30
541: aload         5
543: invokevirtual #30
546: ldc           #90
548: invokevirtual #30
551: invokevirtual #33
554: aload         5
556: ldc           #9
558: invokestatic  #91
561: aload         8
563: invokestatic  #39
566: aload         9
568: invokestatic  #39
571: aload         10
573: invokestatic  #39
576: new           #27
579: dup
580: invokespecial #28
583: ldc           #29
585: invokevirtual #30
588: aload         11
590: invokevirtual #30
593: ldc           #92
595: invokevirtual #30
598: invokevirtual #33
601: aload         11
603: ldc           #17
605: invokestatic  #91
608: aload         12
610: invokestatic  #39
613: new           #27
616: dup
617: invokespecial #28
620: ldc           #29
622: invokevirtual #30
625: iload         13
627: invokevirtual #35
630: ldc           #32
632: invokevirtual #30
635: iconst_0
636: invokevirtual #35
639: ldc           #29
641: invokevirtual #30
644: invokevirtual #33
647: iload         13
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #34
660: aload         14
662: invokestatic  #39
665: aload         15
667: invokestatic  #39
670: aload         16
672: invokestatic  #39
675: aload         17
677: invokestatic  #39
680: aload         18
682: invokestatic  #39
685: new           #27
688: dup
689: invokespecial #28
692: ldc           #29
694: invokevirtual #30
697: iload         19
699: invokevirtual #35
702: ldc           #32
704: invokevirtual #30
707: iconst_0
708: invokevirtual #35
711: ldc           #29
713: invokevirtual #30
716: invokevirtual #33
719: iload         19
721: ifne          728
724: iconst_1
725: goto          729
728: iconst_0
729: invokestatic  #34
732: new           #27
735: dup
736: invokespecial #28
739: ldc           #29
741: invokevirtual #30
744: iload         21
746: invokevirtual #35
749: ldc           #32
751: invokevirtual #30
754: iconst_0
755: invokevirtual #35
758: ldc           #29
760: invokevirtual #30
763: invokevirtual #33
766: iload         21
768: ifne          775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #34
779: aload         22
781: invokestatic  #39
784: aload         23
786: invokestatic  #39
789: aload         24
791: invokestatic  #39
794: aload         25
796: invokestatic  #39
799: new           #27
802: dup
803: invokespecial #28
806: ldc           #29
808: invokevirtual #30
811: aload         28
813: invokevirtual #30
816: ldc           #93
818: invokevirtual #30
821: invokevirtual #33
824: aload         28
826: ldc           #52
828: invokestatic  #91
831: new           #27
834: dup
835: invokespecial #28
838: ldc           #29
840: invokevirtual #30
843: aload         29
845: invokevirtual #30
848: ldc           #94
850: invokevirtual #30
853: invokevirtual #33
856: aload         29
858: ldc           #95
860: invokestatic  #91
863: new           #27
866: dup
867: invokespecial #28
870: ldc           #29
872: invokevirtual #30
875: iload         32
877: invokevirtual #31
880: ldc           #32
882: invokevirtual #30
885: iconst_1
886: invokevirtual #31
889: ldc           #29
891: invokevirtual #30
894: invokevirtual #33
897: iload         32
899: iconst_1
900: if_icmpne     907
903: iconst_1
904: goto          908
907: iconst_0
908: invokestatic  #34
911: new           #27
914: dup
915: invokespecial #28
918: ldc           #29
920: invokevirtual #30
923: iload         33
925: invokevirtual #35
928: ldc           #32
930: invokevirtual #30
933: iconst_0
934: invokevirtual #35
937: ldc           #29
939: invokevirtual #30
942: invokevirtual #33
945: iload         33
947: ifne          954
950: iconst_1
951: goto          955
954: iconst_0
955: invokestatic  #34
958: new           #27
961: dup
962: invokespecial #28
965: ldc           #29
967: invokevirtual #30
970: iload         36
972: invokevirtual #31
975: ldc           #32
977: invokevirtual #30
980: iconst_1
981: invokevirtual #31
984: ldc           #29
986: invokevirtual #30
989: invokevirtual #33
992: iload         36
994: iconst_1
995: if_icmpne     1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #34
1006: new           #27
1009: dup
1010: invokespecial #28
1013: ldc           #29
1015: invokevirtual #30
1018: iload         39
1020: invokevirtual #31
1023: ldc           #32
1025: invokevirtual #30
1028: iconst_1
1029: invokevirtual #31
1032: ldc           #29
1034: invokevirtual #30
1037: invokevirtual #33
1040: iload         39
1042: iconst_1
1043: if_icmpne     1050
1046: iconst_1
1047: goto          1051
1050: iconst_0
1051: invokestatic  #34
1054: new           #27
1057: dup
1058: invokespecial #28
1061: ldc           #29
1063: invokevirtual #30
1066: iload         42
1068: invokevirtual #35
1071: ldc           #32
1073: invokevirtual #30
1076: iconst_0
1077: invokevirtual #35
1080: ldc           #29
1082: invokevirtual #30
1085: invokevirtual #33
1088: iload         42
1090: ifne          1097
1093: iconst_1
1094: goto          1098
1097: iconst_0
1098: invokestatic  #34
1101: new           #27
1104: dup
1105: invokespecial #28
1108: ldc           #29
1110: invokevirtual #30
1113: aload         43
1115: invokevirtual #36
1118: ldc           #32
1120: invokevirtual #30
1123: getstatic     #37
1126: invokevirtual #36
1129: ldc           #29
1131: invokevirtual #30
1134: invokevirtual #33
1137: aload         43
1139: getstatic     #37
1142: invokevirtual #38
1145: invokestatic  #34
1148: aload         44
1150: invokestatic  #39
1153: new           #27
1156: dup
1157: invokespecial #28
1160: ldc           #29
1162: invokevirtual #30
1165: iload         47
1167: invokevirtual #35
1170: ldc           #32
1172: invokevirtual #30
1175: iconst_0
1176: invokevirtual #35
1179: ldc           #29
1181: invokevirtual #30
1184: invokevirtual #33
1187: iload         47
1189: ifne          1196
1192: iconst_1
1193: goto          1197
1196: iconst_0
1197: invokestatic  #34
1200: new           #27
1203: dup
1204: invokespecial #28
1207: ldc           #29
1209: invokevirtual #30
1212: aload         48
1214: invokevirtual #36
1217: ldc           #32
1219: invokevirtual #30
1222: getstatic     #37
1225: invokevirtual #36
1228: ldc           #29
1230: invokevirtual #30
1233: invokevirtual #33
1236: aload         48
1238: getstatic     #37
1241: invokevirtual #38
1244: invokestatic  #34
1247: aload         49
1249: invokestatic  #39
1252: aload         50
1254: invokestatic  #39
1257: return
Exception table:
from    to  target type
478   492   495   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test53
Start line: 3102
End line: 3178
Method source code: 
    public void test53() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test53");
        java.lang.StringBuilder stringBuilder0 = null;
        org.jsoup.nodes.DocumentType documentType6 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder7 = null;
        org.jsoup.nodes.TextNode textNode11 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str12 = textNode11.getWholeText();
        java.lang.String str14 = textNode11.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder15 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType17 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document20 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element24 = document22.toggleClass("");
        java.lang.String str25 = element24.tagName();
        org.jsoup.nodes.Element element27 = element24.toggleClass("");
        boolean boolean28 = isOnlyOfType17.matches((org.jsoup.nodes.Element) document20, element24);
        org.jsoup.nodes.Document document31 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements33 = document31.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element35 = document31.text(" ");
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements40 = document38.getElementsContainingText("#data");
        boolean boolean41 = isOnlyOfType17.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document38);
        org.jsoup.nodes.Comment comment44 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean46 = comment44.hasAttr("hi!");
        org.jsoup.nodes.Document document48 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element50 = document48.toggleClass("");
        org.jsoup.nodes.Node node51 = document48.clone();
        org.jsoup.nodes.Node node52 = comment44.doClone(node51);
        java.lang.StringBuilder stringBuilder53 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = null;
        comment44.outerHtmlTail(stringBuilder53, 10, outputSettings55);
        java.lang.String str57 = comment44.getData();
        java.lang.String str58 = comment44.nodeName();
        java.lang.StringBuilder stringBuilder59 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings61 = new org.jsoup.nodes.Document.OutputSettings();
        int int62 = outputSettings61.indentAmount();
        comment44.outerHtmlTail(stringBuilder59, 0, outputSettings61);
        boolean boolean64 = document38.equals((java.lang.Object) outputSettings61);
        textNode11.outerHtmlTail(stringBuilder15, (int) (short) 100, outputSettings61);
        documentType6.outerHtmlTail(stringBuilder7, (int) (short) 1, outputSettings61);
        java.lang.StringBuilder stringBuilder67 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings69 = new org.jsoup.nodes.Document.OutputSettings();
        int int70 = outputSettings69.indentAmount();
        documentType6.outerHtmlTail(stringBuilder67, 0, outputSettings69);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Entities.escape(stringBuilder0, "\n#comment", outputSettings69, true, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#root" + "'", str25, "#root");
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(elements33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(elements40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "#comment" + "'", str58, "#comment");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #274
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #8
30: dup
31: ldc           #9
33: ldc           #10
35: ldc           #11
37: ldc           #9
39: invokespecial #12
42: astore_2
43: aconst_null
44: astore_3
45: new           #58
48: dup
49: ldc           #9
51: ldc           #59
53: invokespecial #60
56: astore        4
58: aload         4
60: invokevirtual #61
63: astore        5
65: aload         4
67: ldc           #62
69: invokevirtual #63
72: astore        6
74: aconst_null
75: astore        7
77: new           #64
80: dup
81: invokespecial #65
84: astore        8
86: ldc           #9
88: ldc           #9
90: invokestatic  #66
93: astore        9
95: ldc           #52
97: invokestatic  #53
100: astore        10
102: aload         10
104: ldc           #9
106: invokevirtual #54
109: astore        11
111: aload         11
113: invokevirtual #67
116: astore        12
118: aload         11
120: ldc           #9
122: invokevirtual #68
125: astore        13
127: aload         8
129: aload         9
131: aload         11
133: invokevirtual #69
136: istore        14
138: ldc           #59
140: ldc           #52
142: invokestatic  #70
145: astore        15
147: aload         15
149: bipush        100
151: invokevirtual #71
154: astore        16
156: aload         15
158: ldc           #72
160: invokevirtual #73
163: astore        17
165: ldc           #74
167: ldc           #52
169: invokestatic  #70
172: astore        18
174: aload         18
176: ldc           #75
178: invokevirtual #76
181: astore        19
183: aload         8
185: aload         15
187: aload         18
189: invokevirtual #69
192: istore        20
194: new           #77
197: dup
198: ldc           #52
200: ldc           #52
202: invokespecial #78
205: astore        21
207: aload         21
209: ldc           #52
211: invokevirtual #79
214: istore        22
216: ldc           #52
218: invokestatic  #53
221: astore        23
223: aload         23
225: ldc           #9
227: invokevirtual #54
230: astore        24
232: aload         23
234: invokevirtual #80
237: astore        25
239: aload         21
241: aload         25
243: invokevirtual #81
246: astore        26
248: aconst_null
249: astore        27
251: aconst_null
252: astore        28
254: aload         21
256: aload         27
258: bipush        10
260: aload         28
262: invokevirtual #82
265: aload         21
267: invokevirtual #83
270: astore        29
272: aload         21
274: invokevirtual #84
277: astore        30
279: aconst_null
280: astore        31
282: new           #13
285: dup
286: invokespecial #14
289: astore        32
291: aload         32
293: invokevirtual #15
296: istore        33
298: aload         21
300: aload         31
302: iconst_0
303: aload         32
305: invokevirtual #82
308: aload         18
310: aload         32
312: invokevirtual #85
315: istore        34
317: aload         4
319: aload         7
321: bipush        100
323: aload         32
325: invokevirtual #86
328: aload_2
329: aload_3
330: iconst_1
331: aload         32
333: invokevirtual #87
336: aconst_null
337: astore        35
339: new           #13
342: dup
343: invokespecial #14
346: astore        36
348: aload         36
350: invokevirtual #15
353: istore        37
355: aload_2
356: aload         35
358: iconst_0
359: aload         36
361: invokevirtual #87
364: aload_1
365: ldc           #161
367: aload         36
369: iconst_1
370: iconst_0
371: iconst_0
372: invokestatic  #275
375: ldc           #24
377: invokestatic  #25
380: goto          385
383: astore        38
385: new           #27
388: dup
389: invokespecial #28
392: ldc           #29
394: invokevirtual #30
397: aload         5
399: invokevirtual #30
402: ldc           #90
404: invokevirtual #30
407: invokevirtual #33
410: aload         5
412: ldc           #9
414: invokestatic  #91
417: new           #27
420: dup
421: invokespecial #28
424: ldc           #29
426: invokevirtual #30
429: aload         6
431: invokevirtual #30
434: ldc           #90
436: invokevirtual #30
439: invokevirtual #33
442: aload         6
444: ldc           #9
446: invokestatic  #91
449: aload         9
451: invokestatic  #39
454: aload         10
456: invokestatic  #39
459: aload         11
461: invokestatic  #39
464: new           #27
467: dup
468: invokespecial #28
471: ldc           #29
473: invokevirtual #30
476: aload         12
478: invokevirtual #30
481: ldc           #92
483: invokevirtual #30
486: invokevirtual #33
489: aload         12
491: ldc           #17
493: invokestatic  #91
496: aload         13
498: invokestatic  #39
501: new           #27
504: dup
505: invokespecial #28
508: ldc           #29
510: invokevirtual #30
513: iload         14
515: invokevirtual #35
518: ldc           #32
520: invokevirtual #30
523: iconst_0
524: invokevirtual #35
527: ldc           #29
529: invokevirtual #30
532: invokevirtual #33
535: iload         14
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #34
548: aload         15
550: invokestatic  #39
553: aload         16
555: invokestatic  #39
558: aload         17
560: invokestatic  #39
563: aload         18
565: invokestatic  #39
568: aload         19
570: invokestatic  #39
573: new           #27
576: dup
577: invokespecial #28
580: ldc           #29
582: invokevirtual #30
585: iload         20
587: invokevirtual #35
590: ldc           #32
592: invokevirtual #30
595: iconst_0
596: invokevirtual #35
599: ldc           #29
601: invokevirtual #30
604: invokevirtual #33
607: iload         20
609: ifne          616
612: iconst_1
613: goto          617
616: iconst_0
617: invokestatic  #34
620: new           #27
623: dup
624: invokespecial #28
627: ldc           #29
629: invokevirtual #30
632: iload         22
634: invokevirtual #35
637: ldc           #32
639: invokevirtual #30
642: iconst_0
643: invokevirtual #35
646: ldc           #29
648: invokevirtual #30
651: invokevirtual #33
654: iload         22
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #34
667: aload         23
669: invokestatic  #39
672: aload         24
674: invokestatic  #39
677: aload         25
679: invokestatic  #39
682: aload         26
684: invokestatic  #39
687: new           #27
690: dup
691: invokespecial #28
694: ldc           #29
696: invokevirtual #30
699: aload         29
701: invokevirtual #30
704: ldc           #93
706: invokevirtual #30
709: invokevirtual #33
712: aload         29
714: ldc           #52
716: invokestatic  #91
719: new           #27
722: dup
723: invokespecial #28
726: ldc           #29
728: invokevirtual #30
731: aload         30
733: invokevirtual #30
736: ldc           #94
738: invokevirtual #30
741: invokevirtual #33
744: aload         30
746: ldc           #95
748: invokestatic  #91
751: new           #27
754: dup
755: invokespecial #28
758: ldc           #29
760: invokevirtual #30
763: iload         33
765: invokevirtual #31
768: ldc           #32
770: invokevirtual #30
773: iconst_1
774: invokevirtual #31
777: ldc           #29
779: invokevirtual #30
782: invokevirtual #33
785: iload         33
787: iconst_1
788: if_icmpne     795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #34
799: new           #27
802: dup
803: invokespecial #28
806: ldc           #29
808: invokevirtual #30
811: iload         34
813: invokevirtual #35
816: ldc           #32
818: invokevirtual #30
821: iconst_0
822: invokevirtual #35
825: ldc           #29
827: invokevirtual #30
830: invokevirtual #33
833: iload         34
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #34
846: new           #27
849: dup
850: invokespecial #28
853: ldc           #29
855: invokevirtual #30
858: iload         37
860: invokevirtual #31
863: ldc           #32
865: invokevirtual #30
868: iconst_1
869: invokevirtual #31
872: ldc           #29
874: invokevirtual #30
877: invokevirtual #33
880: iload         37
882: iconst_1
883: if_icmpne     890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #34
894: return
Exception table:
from    to  target type
364   380   383   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test54
Start line: 3181
End line: 3282
Method source code: 
    public void test54() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test54");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        java.lang.StringBuilder stringBuilder70 = null;
        org.jsoup.nodes.TextNode textNode74 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node75 = textNode74.parentNode;
        java.lang.String str76 = textNode74.nodeName();
        java.lang.String str77 = textNode74.nodeName();
        textNode74.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes80 = textNode74.attributes();
        java.lang.StringBuilder stringBuilder81 = null;
        org.jsoup.nodes.Attribute attribute85 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings86 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean87 = attribute85.shouldCollapseAttribute(outputSettings86);
        org.jsoup.nodes.Entities.EscapeMode escapeMode88 = outputSettings86.escapeMode();
        textNode74.outerHtmlTail(stringBuilder81, (int) (short) -1, outputSettings86);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax90 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings91 = outputSettings86.syntax(syntax90);
        org.jsoup.nodes.Document.OutputSettings outputSettings92 = outputSettings86.clone();
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder70, (-1), outputSettings92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(textNode74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "#text" + "'", str76, "#text");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "#text" + "'", str77, "#text");
        org.junit.Assert.assertNotNull(attributes80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + escapeMode88 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode88.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax90 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax90.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings91);
        org.junit.Assert.assertNotNull(outputSettings92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #276
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: aconst_null
359: astore        37
361: ldc           #52
363: ldc           #52
365: invokestatic  #132
368: astore        38
370: aload         38
372: getfield      #133
375: astore        39
377: aload         38
379: invokevirtual #134
382: astore        40
384: aload         38
386: invokevirtual #134
389: astore        41
391: aload         38
393: ldc           #135
395: invokevirtual #136
398: aload         38
400: invokevirtual #137
403: astore        42
405: aconst_null
406: astore        43
408: new           #16
411: dup
412: ldc           #17
414: ldc           #18
416: invokespecial #19
419: astore        44
421: new           #13
424: dup
425: invokespecial #14
428: astore        45
430: aload         44
432: aload         45
434: invokevirtual #20
437: istore        46
439: aload         45
441: invokevirtual #21
444: astore        47
446: aload         38
448: aload         43
450: iconst_m1
451: aload         45
453: invokevirtual #86
456: getstatic     #49
459: astore        48
461: aload         45
463: aload         48
465: invokevirtual #138
468: astore        49
470: aload         45
472: invokevirtual #215
475: astore        50
477: aload_1
478: aload         37
480: iconst_m1
481: aload         50
483: invokevirtual #23
486: ldc           #24
488: invokestatic  #25
491: goto          496
494: astore        51
496: new           #27
499: dup
500: invokespecial #28
503: ldc           #29
505: invokevirtual #30
508: aload         4
510: invokevirtual #30
513: ldc           #90
515: invokevirtual #30
518: invokevirtual #33
521: aload         4
523: ldc           #9
525: invokestatic  #91
528: new           #27
531: dup
532: invokespecial #28
535: ldc           #29
537: invokevirtual #30
540: aload         5
542: invokevirtual #30
545: ldc           #90
547: invokevirtual #30
550: invokevirtual #33
553: aload         5
555: ldc           #9
557: invokestatic  #91
560: aload         8
562: invokestatic  #39
565: aload         9
567: invokestatic  #39
570: aload         10
572: invokestatic  #39
575: new           #27
578: dup
579: invokespecial #28
582: ldc           #29
584: invokevirtual #30
587: aload         11
589: invokevirtual #30
592: ldc           #92
594: invokevirtual #30
597: invokevirtual #33
600: aload         11
602: ldc           #17
604: invokestatic  #91
607: aload         12
609: invokestatic  #39
612: new           #27
615: dup
616: invokespecial #28
619: ldc           #29
621: invokevirtual #30
624: iload         13
626: invokevirtual #35
629: ldc           #32
631: invokevirtual #30
634: iconst_0
635: invokevirtual #35
638: ldc           #29
640: invokevirtual #30
643: invokevirtual #33
646: iload         13
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #34
659: aload         14
661: invokestatic  #39
664: aload         15
666: invokestatic  #39
669: aload         16
671: invokestatic  #39
674: aload         17
676: invokestatic  #39
679: aload         18
681: invokestatic  #39
684: new           #27
687: dup
688: invokespecial #28
691: ldc           #29
693: invokevirtual #30
696: iload         19
698: invokevirtual #35
701: ldc           #32
703: invokevirtual #30
706: iconst_0
707: invokevirtual #35
710: ldc           #29
712: invokevirtual #30
715: invokevirtual #33
718: iload         19
720: ifne          727
723: iconst_1
724: goto          728
727: iconst_0
728: invokestatic  #34
731: new           #27
734: dup
735: invokespecial #28
738: ldc           #29
740: invokevirtual #30
743: iload         21
745: invokevirtual #35
748: ldc           #32
750: invokevirtual #30
753: iconst_0
754: invokevirtual #35
757: ldc           #29
759: invokevirtual #30
762: invokevirtual #33
765: iload         21
767: ifne          774
770: iconst_1
771: goto          775
774: iconst_0
775: invokestatic  #34
778: aload         22
780: invokestatic  #39
783: aload         23
785: invokestatic  #39
788: aload         24
790: invokestatic  #39
793: aload         25
795: invokestatic  #39
798: new           #27
801: dup
802: invokespecial #28
805: ldc           #29
807: invokevirtual #30
810: aload         28
812: invokevirtual #30
815: ldc           #93
817: invokevirtual #30
820: invokevirtual #33
823: aload         28
825: ldc           #52
827: invokestatic  #91
830: new           #27
833: dup
834: invokespecial #28
837: ldc           #29
839: invokevirtual #30
842: aload         29
844: invokevirtual #30
847: ldc           #94
849: invokevirtual #30
852: invokevirtual #33
855: aload         29
857: ldc           #95
859: invokestatic  #91
862: new           #27
865: dup
866: invokespecial #28
869: ldc           #29
871: invokevirtual #30
874: iload         32
876: invokevirtual #31
879: ldc           #32
881: invokevirtual #30
884: iconst_1
885: invokevirtual #31
888: ldc           #29
890: invokevirtual #30
893: invokevirtual #33
896: iload         32
898: iconst_1
899: if_icmpne     906
902: iconst_1
903: goto          907
906: iconst_0
907: invokestatic  #34
910: new           #27
913: dup
914: invokespecial #28
917: ldc           #29
919: invokevirtual #30
922: iload         33
924: invokevirtual #35
927: ldc           #32
929: invokevirtual #30
932: iconst_0
933: invokevirtual #35
936: ldc           #29
938: invokevirtual #30
941: invokevirtual #33
944: iload         33
946: ifne          953
949: iconst_1
950: goto          954
953: iconst_0
954: invokestatic  #34
957: new           #27
960: dup
961: invokespecial #28
964: ldc           #29
966: invokevirtual #30
969: iload         36
971: invokevirtual #31
974: ldc           #32
976: invokevirtual #30
979: iconst_1
980: invokevirtual #31
983: ldc           #29
985: invokevirtual #30
988: invokevirtual #33
991: iload         36
993: iconst_1
994: if_icmpne     1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #34
1005: aload         38
1007: invokestatic  #39
1010: aload         39
1012: invokestatic  #139
1015: new           #27
1018: dup
1019: invokespecial #28
1022: ldc           #29
1024: invokevirtual #30
1027: aload         40
1029: invokevirtual #30
1032: ldc           #140
1034: invokevirtual #30
1037: invokevirtual #33
1040: aload         40
1042: ldc           #74
1044: invokestatic  #91
1047: new           #27
1050: dup
1051: invokespecial #28
1054: ldc           #29
1056: invokevirtual #30
1059: aload         41
1061: invokevirtual #30
1064: ldc           #140
1066: invokevirtual #30
1069: invokevirtual #33
1072: aload         41
1074: ldc           #74
1076: invokestatic  #91
1079: aload         42
1081: invokestatic  #39
1084: new           #27
1087: dup
1088: invokespecial #28
1091: ldc           #29
1093: invokevirtual #30
1096: iload         46
1098: invokevirtual #35
1101: ldc           #32
1103: invokevirtual #30
1106: iconst_0
1107: invokevirtual #35
1110: ldc           #29
1112: invokevirtual #30
1115: invokevirtual #33
1118: iload         46
1120: ifne          1127
1123: iconst_1
1124: goto          1128
1127: iconst_0
1128: invokestatic  #34
1131: new           #27
1134: dup
1135: invokespecial #28
1138: ldc           #29
1140: invokevirtual #30
1143: aload         47
1145: invokevirtual #36
1148: ldc           #32
1150: invokevirtual #30
1153: getstatic     #37
1156: invokevirtual #36
1159: ldc           #29
1161: invokevirtual #30
1164: invokevirtual #33
1167: aload         47
1169: getstatic     #37
1172: invokevirtual #38
1175: invokestatic  #34
1178: new           #27
1181: dup
1182: invokespecial #28
1185: ldc           #29
1187: invokevirtual #30
1190: aload         48
1192: invokevirtual #36
1195: ldc           #32
1197: invokevirtual #30
1200: getstatic     #49
1203: invokevirtual #36
1206: ldc           #29
1208: invokevirtual #30
1211: invokevirtual #33
1214: aload         48
1216: getstatic     #49
1219: invokevirtual #50
1222: invokestatic  #34
1225: aload         49
1227: invokestatic  #39
1230: aload         50
1232: invokestatic  #39
1235: return
Exception table:
from    to  target type
477   491   494   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test55
Start line: 3285
End line: 3289
Method source code: 
    public void test55() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test55");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[^]\n<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", ":gt(100)", "[class=\"\"$=<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>]", "\n<!-- #comment=\"#root\"-->");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #277
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #173
31: ldc_w         #278
34: ldc_w         #279
37: ldc_w         #280
40: invokespecial #12
43: astore_1
44: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test56
Start line: 3292
End line: 3375
Method source code: 
    public void test56() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test56");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings67.escapeMode(escapeMode70);
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = outputSettings71.prettyPrint(false);
        boolean boolean74 = outputSettings73.outline();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document.OutputSettings outputSettings76 = outputSettings73.charset("#&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; hi! &lt;/body&gt; &lt;/html&gt;");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: #&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; hi! &lt;/body&gt; &lt;/html&gt;");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertNotNull(outputSettings73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: getstatic     #127
361: astore        37
363: aload         35
365: aload         37
367: invokevirtual #22
370: astore        38
372: aload         38
374: iconst_0
375: invokevirtual #128
378: astore        39
380: aload         39
382: invokevirtual #232
385: istore        40
387: aload         39
389: ldc_w         #282
392: invokevirtual #207
395: astore        41
397: ldc_w         #283
400: invokestatic  #25
403: goto          408
406: astore        41
408: new           #27
411: dup
412: invokespecial #28
415: ldc           #29
417: invokevirtual #30
420: aload         4
422: invokevirtual #30
425: ldc           #90
427: invokevirtual #30
430: invokevirtual #33
433: aload         4
435: ldc           #9
437: invokestatic  #91
440: new           #27
443: dup
444: invokespecial #28
447: ldc           #29
449: invokevirtual #30
452: aload         5
454: invokevirtual #30
457: ldc           #90
459: invokevirtual #30
462: invokevirtual #33
465: aload         5
467: ldc           #9
469: invokestatic  #91
472: aload         8
474: invokestatic  #39
477: aload         9
479: invokestatic  #39
482: aload         10
484: invokestatic  #39
487: new           #27
490: dup
491: invokespecial #28
494: ldc           #29
496: invokevirtual #30
499: aload         11
501: invokevirtual #30
504: ldc           #92
506: invokevirtual #30
509: invokevirtual #33
512: aload         11
514: ldc           #17
516: invokestatic  #91
519: aload         12
521: invokestatic  #39
524: new           #27
527: dup
528: invokespecial #28
531: ldc           #29
533: invokevirtual #30
536: iload         13
538: invokevirtual #35
541: ldc           #32
543: invokevirtual #30
546: iconst_0
547: invokevirtual #35
550: ldc           #29
552: invokevirtual #30
555: invokevirtual #33
558: iload         13
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #34
571: aload         14
573: invokestatic  #39
576: aload         15
578: invokestatic  #39
581: aload         16
583: invokestatic  #39
586: aload         17
588: invokestatic  #39
591: aload         18
593: invokestatic  #39
596: new           #27
599: dup
600: invokespecial #28
603: ldc           #29
605: invokevirtual #30
608: iload         19
610: invokevirtual #35
613: ldc           #32
615: invokevirtual #30
618: iconst_0
619: invokevirtual #35
622: ldc           #29
624: invokevirtual #30
627: invokevirtual #33
630: iload         19
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #34
643: new           #27
646: dup
647: invokespecial #28
650: ldc           #29
652: invokevirtual #30
655: iload         21
657: invokevirtual #35
660: ldc           #32
662: invokevirtual #30
665: iconst_0
666: invokevirtual #35
669: ldc           #29
671: invokevirtual #30
674: invokevirtual #33
677: iload         21
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #34
690: aload         22
692: invokestatic  #39
695: aload         23
697: invokestatic  #39
700: aload         24
702: invokestatic  #39
705: aload         25
707: invokestatic  #39
710: new           #27
713: dup
714: invokespecial #28
717: ldc           #29
719: invokevirtual #30
722: aload         28
724: invokevirtual #30
727: ldc           #93
729: invokevirtual #30
732: invokevirtual #33
735: aload         28
737: ldc           #52
739: invokestatic  #91
742: new           #27
745: dup
746: invokespecial #28
749: ldc           #29
751: invokevirtual #30
754: aload         29
756: invokevirtual #30
759: ldc           #94
761: invokevirtual #30
764: invokevirtual #33
767: aload         29
769: ldc           #95
771: invokestatic  #91
774: new           #27
777: dup
778: invokespecial #28
781: ldc           #29
783: invokevirtual #30
786: iload         32
788: invokevirtual #31
791: ldc           #32
793: invokevirtual #30
796: iconst_1
797: invokevirtual #31
800: ldc           #29
802: invokevirtual #30
805: invokevirtual #33
808: iload         32
810: iconst_1
811: if_icmpne     818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #34
822: new           #27
825: dup
826: invokespecial #28
829: ldc           #29
831: invokevirtual #30
834: iload         33
836: invokevirtual #35
839: ldc           #32
841: invokevirtual #30
844: iconst_0
845: invokevirtual #35
848: ldc           #29
850: invokevirtual #30
853: invokevirtual #33
856: iload         33
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #34
869: new           #27
872: dup
873: invokespecial #28
876: ldc           #29
878: invokevirtual #30
881: iload         36
883: invokevirtual #31
886: ldc           #32
888: invokevirtual #30
891: iconst_1
892: invokevirtual #31
895: ldc           #29
897: invokevirtual #30
900: invokevirtual #33
903: iload         36
905: iconst_1
906: if_icmpne     913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #34
917: new           #27
920: dup
921: invokespecial #28
924: ldc           #29
926: invokevirtual #30
929: aload         37
931: invokevirtual #36
934: ldc           #32
936: invokevirtual #30
939: getstatic     #127
942: invokevirtual #36
945: ldc           #29
947: invokevirtual #30
950: invokevirtual #33
953: aload         37
955: getstatic     #127
958: invokevirtual #38
961: invokestatic  #34
964: aload         38
966: invokestatic  #39
969: aload         39
971: invokestatic  #39
974: new           #27
977: dup
978: invokespecial #28
981: ldc           #29
983: invokevirtual #30
986: iload         40
988: invokevirtual #35
991: ldc           #32
993: invokevirtual #30
996: iconst_0
997: invokevirtual #35
1000: ldc           #29
1002: invokevirtual #30
1005: invokevirtual #33
1008: iload         40
1010: ifne          1017
1013: iconst_1
1014: goto          1018
1017: iconst_0
1018: invokestatic  #34
1021: return
Exception table:
from    to  target type
387   403   406   Class java/nio/charset/IllegalCharsetNameException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test57
Start line: 3378
End line: 3447
Method source code: 
    public void test57() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test57");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        documentType4.baseUri = " <!--<html> <head></head> <body> hi! </body> </html>#text-->";
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #284
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: aload_1
359: ldc_w         #285
362: putfield      #286
365: new           #27
368: dup
369: invokespecial #28
372: ldc           #29
374: invokevirtual #30
377: aload         4
379: invokevirtual #30
382: ldc           #90
384: invokevirtual #30
387: invokevirtual #33
390: aload         4
392: ldc           #9
394: invokestatic  #91
397: new           #27
400: dup
401: invokespecial #28
404: ldc           #29
406: invokevirtual #30
409: aload         5
411: invokevirtual #30
414: ldc           #90
416: invokevirtual #30
419: invokevirtual #33
422: aload         5
424: ldc           #9
426: invokestatic  #91
429: aload         8
431: invokestatic  #39
434: aload         9
436: invokestatic  #39
439: aload         10
441: invokestatic  #39
444: new           #27
447: dup
448: invokespecial #28
451: ldc           #29
453: invokevirtual #30
456: aload         11
458: invokevirtual #30
461: ldc           #92
463: invokevirtual #30
466: invokevirtual #33
469: aload         11
471: ldc           #17
473: invokestatic  #91
476: aload         12
478: invokestatic  #39
481: new           #27
484: dup
485: invokespecial #28
488: ldc           #29
490: invokevirtual #30
493: iload         13
495: invokevirtual #35
498: ldc           #32
500: invokevirtual #30
503: iconst_0
504: invokevirtual #35
507: ldc           #29
509: invokevirtual #30
512: invokevirtual #33
515: iload         13
517: ifne          524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #34
528: aload         14
530: invokestatic  #39
533: aload         15
535: invokestatic  #39
538: aload         16
540: invokestatic  #39
543: aload         17
545: invokestatic  #39
548: aload         18
550: invokestatic  #39
553: new           #27
556: dup
557: invokespecial #28
560: ldc           #29
562: invokevirtual #30
565: iload         19
567: invokevirtual #35
570: ldc           #32
572: invokevirtual #30
575: iconst_0
576: invokevirtual #35
579: ldc           #29
581: invokevirtual #30
584: invokevirtual #33
587: iload         19
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #34
600: new           #27
603: dup
604: invokespecial #28
607: ldc           #29
609: invokevirtual #30
612: iload         21
614: invokevirtual #35
617: ldc           #32
619: invokevirtual #30
622: iconst_0
623: invokevirtual #35
626: ldc           #29
628: invokevirtual #30
631: invokevirtual #33
634: iload         21
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #34
647: aload         22
649: invokestatic  #39
652: aload         23
654: invokestatic  #39
657: aload         24
659: invokestatic  #39
662: aload         25
664: invokestatic  #39
667: new           #27
670: dup
671: invokespecial #28
674: ldc           #29
676: invokevirtual #30
679: aload         28
681: invokevirtual #30
684: ldc           #93
686: invokevirtual #30
689: invokevirtual #33
692: aload         28
694: ldc           #52
696: invokestatic  #91
699: new           #27
702: dup
703: invokespecial #28
706: ldc           #29
708: invokevirtual #30
711: aload         29
713: invokevirtual #30
716: ldc           #94
718: invokevirtual #30
721: invokevirtual #33
724: aload         29
726: ldc           #95
728: invokestatic  #91
731: new           #27
734: dup
735: invokespecial #28
738: ldc           #29
740: invokevirtual #30
743: iload         32
745: invokevirtual #31
748: ldc           #32
750: invokevirtual #30
753: iconst_1
754: invokevirtual #31
757: ldc           #29
759: invokevirtual #30
762: invokevirtual #33
765: iload         32
767: iconst_1
768: if_icmpne     775
771: iconst_1
772: goto          776
775: iconst_0
776: invokestatic  #34
779: new           #27
782: dup
783: invokespecial #28
786: ldc           #29
788: invokevirtual #30
791: iload         33
793: invokevirtual #35
796: ldc           #32
798: invokevirtual #30
801: iconst_0
802: invokevirtual #35
805: ldc           #29
807: invokevirtual #30
810: invokevirtual #33
813: iload         33
815: ifne          822
818: iconst_1
819: goto          823
822: iconst_0
823: invokestatic  #34
826: new           #27
829: dup
830: invokespecial #28
833: ldc           #29
835: invokevirtual #30
838: iload         36
840: invokevirtual #31
843: ldc           #32
845: invokevirtual #30
848: iconst_1
849: invokevirtual #31
852: ldc           #29
854: invokevirtual #30
857: invokevirtual #33
860: iload         36
862: iconst_1
863: if_icmpne     870
866: iconst_1
867: goto          871
870: iconst_0
871: invokestatic  #34
874: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test58
Start line: 3450
End line: 3470
Method source code: 
    public void test58() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test58");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings8 = new org.jsoup.nodes.Document.OutputSettings();
        int int9 = outputSettings8.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder10 = outputSettings8.encoder();
        documentType4.outerHtmlTail(stringBuilder6, (int) (short) 1, outputSettings8);
        java.lang.String str12 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = null;
        documentType4.outerHtmlTail(stringBuilder13, (-1), outputSettings15);
        java.lang.String str17 = documentType4.nodeName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#doctype" + "'", str12, "#doctype");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#doctype" + "'", str17, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aload_1
42: invokevirtual #97
45: astore_2
46: aconst_null
47: astore_3
48: new           #13
51: dup
52: invokespecial #14
55: astore        4
57: aload         4
59: invokevirtual #15
62: istore        5
64: aload         4
66: invokevirtual #146
69: astore        6
71: aload_1
72: aload_3
73: iconst_1
74: aload         4
76: invokevirtual #87
79: aload_1
80: invokevirtual #97
83: astore        7
85: aconst_null
86: astore        8
88: aconst_null
89: astore        9
91: aload_1
92: aload         8
94: iconst_m1
95: aload         9
97: invokevirtual #87
100: aload_1
101: invokevirtual #97
104: astore        10
106: new           #27
109: dup
110: invokespecial #28
113: ldc           #29
115: invokevirtual #30
118: aload_2
119: invokevirtual #30
122: ldc           #102
124: invokevirtual #30
127: invokevirtual #33
130: aload_2
131: ldc           #103
133: invokestatic  #91
136: new           #27
139: dup
140: invokespecial #28
143: ldc           #29
145: invokevirtual #30
148: iload         5
150: invokevirtual #31
153: ldc           #32
155: invokevirtual #30
158: iconst_1
159: invokevirtual #31
162: ldc           #29
164: invokevirtual #30
167: invokevirtual #33
170: iload         5
172: iconst_1
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #34
184: aload         6
186: invokestatic  #39
189: new           #27
192: dup
193: invokespecial #28
196: ldc           #29
198: invokevirtual #30
201: aload         7
203: invokevirtual #30
206: ldc           #102
208: invokevirtual #30
211: invokevirtual #33
214: aload         7
216: ldc           #103
218: invokestatic  #91
221: new           #27
224: dup
225: invokespecial #28
228: ldc           #29
230: invokevirtual #30
233: aload         10
235: invokevirtual #30
238: ldc           #102
240: invokevirtual #30
243: invokevirtual #33
246: aload         10
248: ldc           #103
250: invokestatic  #91
253: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test59
Start line: 3473
End line: 3549
Method source code: 
    public void test59() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test59");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings67.escapeMode(escapeMode70);
        boolean boolean72 = outputSettings67.prettyPrint();
        boolean boolean73 = outputSettings67.prettyPrint();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #288
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: getstatic     #127
361: astore        37
363: aload         35
365: aload         37
367: invokevirtual #22
370: astore        38
372: aload         35
374: invokevirtual #289
377: istore        39
379: aload         35
381: invokevirtual #289
384: istore        40
386: new           #27
389: dup
390: invokespecial #28
393: ldc           #29
395: invokevirtual #30
398: aload         4
400: invokevirtual #30
403: ldc           #90
405: invokevirtual #30
408: invokevirtual #33
411: aload         4
413: ldc           #9
415: invokestatic  #91
418: new           #27
421: dup
422: invokespecial #28
425: ldc           #29
427: invokevirtual #30
430: aload         5
432: invokevirtual #30
435: ldc           #90
437: invokevirtual #30
440: invokevirtual #33
443: aload         5
445: ldc           #9
447: invokestatic  #91
450: aload         8
452: invokestatic  #39
455: aload         9
457: invokestatic  #39
460: aload         10
462: invokestatic  #39
465: new           #27
468: dup
469: invokespecial #28
472: ldc           #29
474: invokevirtual #30
477: aload         11
479: invokevirtual #30
482: ldc           #92
484: invokevirtual #30
487: invokevirtual #33
490: aload         11
492: ldc           #17
494: invokestatic  #91
497: aload         12
499: invokestatic  #39
502: new           #27
505: dup
506: invokespecial #28
509: ldc           #29
511: invokevirtual #30
514: iload         13
516: invokevirtual #35
519: ldc           #32
521: invokevirtual #30
524: iconst_0
525: invokevirtual #35
528: ldc           #29
530: invokevirtual #30
533: invokevirtual #33
536: iload         13
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #34
549: aload         14
551: invokestatic  #39
554: aload         15
556: invokestatic  #39
559: aload         16
561: invokestatic  #39
564: aload         17
566: invokestatic  #39
569: aload         18
571: invokestatic  #39
574: new           #27
577: dup
578: invokespecial #28
581: ldc           #29
583: invokevirtual #30
586: iload         19
588: invokevirtual #35
591: ldc           #32
593: invokevirtual #30
596: iconst_0
597: invokevirtual #35
600: ldc           #29
602: invokevirtual #30
605: invokevirtual #33
608: iload         19
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #34
621: new           #27
624: dup
625: invokespecial #28
628: ldc           #29
630: invokevirtual #30
633: iload         21
635: invokevirtual #35
638: ldc           #32
640: invokevirtual #30
643: iconst_0
644: invokevirtual #35
647: ldc           #29
649: invokevirtual #30
652: invokevirtual #33
655: iload         21
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #34
668: aload         22
670: invokestatic  #39
673: aload         23
675: invokestatic  #39
678: aload         24
680: invokestatic  #39
683: aload         25
685: invokestatic  #39
688: new           #27
691: dup
692: invokespecial #28
695: ldc           #29
697: invokevirtual #30
700: aload         28
702: invokevirtual #30
705: ldc           #93
707: invokevirtual #30
710: invokevirtual #33
713: aload         28
715: ldc           #52
717: invokestatic  #91
720: new           #27
723: dup
724: invokespecial #28
727: ldc           #29
729: invokevirtual #30
732: aload         29
734: invokevirtual #30
737: ldc           #94
739: invokevirtual #30
742: invokevirtual #33
745: aload         29
747: ldc           #95
749: invokestatic  #91
752: new           #27
755: dup
756: invokespecial #28
759: ldc           #29
761: invokevirtual #30
764: iload         32
766: invokevirtual #31
769: ldc           #32
771: invokevirtual #30
774: iconst_1
775: invokevirtual #31
778: ldc           #29
780: invokevirtual #30
783: invokevirtual #33
786: iload         32
788: iconst_1
789: if_icmpne     796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #34
800: new           #27
803: dup
804: invokespecial #28
807: ldc           #29
809: invokevirtual #30
812: iload         33
814: invokevirtual #35
817: ldc           #32
819: invokevirtual #30
822: iconst_0
823: invokevirtual #35
826: ldc           #29
828: invokevirtual #30
831: invokevirtual #33
834: iload         33
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #34
847: new           #27
850: dup
851: invokespecial #28
854: ldc           #29
856: invokevirtual #30
859: iload         36
861: invokevirtual #31
864: ldc           #32
866: invokevirtual #30
869: iconst_1
870: invokevirtual #31
873: ldc           #29
875: invokevirtual #30
878: invokevirtual #33
881: iload         36
883: iconst_1
884: if_icmpne     891
887: iconst_1
888: goto          892
891: iconst_0
892: invokestatic  #34
895: new           #27
898: dup
899: invokespecial #28
902: ldc           #29
904: invokevirtual #30
907: aload         37
909: invokevirtual #36
912: ldc           #32
914: invokevirtual #30
917: getstatic     #127
920: invokevirtual #36
923: ldc           #29
925: invokevirtual #30
928: invokevirtual #33
931: aload         37
933: getstatic     #127
936: invokevirtual #38
939: invokestatic  #34
942: aload         38
944: invokestatic  #39
947: new           #27
950: dup
951: invokespecial #28
954: ldc           #29
956: invokevirtual #30
959: iload         39
961: invokevirtual #35
964: ldc           #32
966: invokevirtual #30
969: iconst_1
970: invokevirtual #35
973: ldc           #29
975: invokevirtual #30
978: invokevirtual #33
981: iload         39
983: iconst_1
984: if_icmpne     991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #34
995: new           #27
998: dup
999: invokespecial #28
1002: ldc           #29
1004: invokevirtual #30
1007: iload         40
1009: invokevirtual #35
1012: ldc           #32
1014: invokevirtual #30
1017: iconst_1
1018: invokevirtual #35
1021: ldc           #29
1023: invokevirtual #30
1026: invokevirtual #33
1029: iload         40
1031: iconst_1
1032: if_icmpne     1039
1035: iconst_1
1036: goto          1040
1039: iconst_0
1040: invokestatic  #34
1043: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test60
Start line: 3552
End line: 3607
Method source code: 
    public void test60() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test60");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings8 = new org.jsoup.nodes.Document.OutputSettings();
        int int9 = outputSettings8.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder10 = outputSettings8.encoder();
        documentType4.outerHtmlTail(stringBuilder6, (int) (short) 1, outputSettings8);
        java.lang.String str12 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = null;
        documentType4.outerHtmlTail(stringBuilder13, (-1), outputSettings15);
        java.lang.StringBuilder stringBuilder17 = null;
        org.jsoup.nodes.Attribute attribute21 = org.jsoup.nodes.Attribute.createFromEncoded(" text=\"[^]\"", "[:only-child^=#data]");
        org.jsoup.nodes.Attribute attribute22 = attribute21.clone();
        org.jsoup.nodes.Attribute attribute25 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Attribute attribute26 = attribute25.clone();
        attribute26.setKey(" class=\"\"");
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = new org.jsoup.nodes.Document.OutputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings31 = outputSettings29.outline(false);
        boolean boolean32 = attribute26.shouldCollapseAttribute(outputSettings31);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax33 = outputSettings31.syntax();
        java.nio.charset.Charset charset34 = outputSettings31.charset();
        org.jsoup.parser.Parser parser38 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean39 = parser38.isTrackErrors();
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse(" ", "#text", parser38);
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = document40.getOutputSettings();
        java.lang.String str42 = org.jsoup.nodes.Entities.escape(":empty", outputSettings41);
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = outputSettings41.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode45 = outputSettings41.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings46 = outputSettings31.escapeMode(escapeMode45);
        boolean boolean47 = attribute21.shouldCollapseAttribute(outputSettings46);
        documentType4.outerHtmlTail(stringBuilder17, (int) (short) 0, outputSettings46);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#doctype" + "'", str12, "#doctype");
        org.junit.Assert.assertNotNull(attribute21);
        org.junit.Assert.assertNotNull(attribute22);
        org.junit.Assert.assertNotNull(attribute26);
        org.junit.Assert.assertNotNull(outputSettings31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + syntax33 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax33.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(charset34);
        org.junit.Assert.assertNotNull(parser38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":empty" + "'", str42, ":empty");
        org.junit.Assert.assertNotNull(outputSettings44);
        org.junit.Assert.assertTrue("'" + escapeMode45 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode45.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #290
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aload_1
42: invokevirtual #97
45: astore_2
46: aconst_null
47: astore_3
48: new           #13
51: dup
52: invokespecial #14
55: astore        4
57: aload         4
59: invokevirtual #15
62: istore        5
64: aload         4
66: invokevirtual #146
69: astore        6
71: aload_1
72: aload_3
73: iconst_1
74: aload         4
76: invokevirtual #87
79: aload_1
80: invokevirtual #97
83: astore        7
85: aconst_null
86: astore        8
88: aconst_null
89: astore        9
91: aload_1
92: aload         8
94: iconst_m1
95: aload         9
97: invokevirtual #87
100: aconst_null
101: astore        10
103: ldc_w         #291
106: ldc_w         #292
109: invokestatic  #293
112: astore        11
114: aload         11
116: invokevirtual #41
119: astore        12
121: new           #16
124: dup
125: ldc           #17
127: ldc           #18
129: invokespecial #19
132: astore        13
134: aload         13
136: invokevirtual #41
139: astore        14
141: aload         14
143: ldc           #42
145: invokevirtual #43
148: new           #13
151: dup
152: invokespecial #14
155: astore        15
157: aload         15
159: iconst_0
160: invokevirtual #44
163: astore        16
165: aload         14
167: aload         16
169: invokevirtual #20
172: istore        17
174: aload         16
176: invokevirtual #48
179: astore        18
181: aload         16
183: invokevirtual #129
186: astore        19
188: invokestatic  #98
191: astore        20
193: aload         20
195: invokevirtual #99
198: istore        21
200: ldc           #72
202: ldc           #74
204: aload         20
206: invokestatic  #100
209: astore        22
211: aload         22
213: invokevirtual #101
216: astore        23
218: ldc           #212
220: aload         23
222: invokestatic  #112
225: astore        24
227: aload         23
229: iconst_0
230: invokevirtual #128
233: astore        25
235: aload         23
237: invokevirtual #21
240: astore        26
242: aload         16
244: aload         26
246: invokevirtual #22
249: astore        27
251: aload         11
253: aload         27
255: invokevirtual #20
258: istore        28
260: aload_1
261: aload         10
263: iconst_0
264: aload         27
266: invokevirtual #87
269: new           #27
272: dup
273: invokespecial #28
276: ldc           #29
278: invokevirtual #30
281: aload_2
282: invokevirtual #30
285: ldc           #102
287: invokevirtual #30
290: invokevirtual #33
293: aload_2
294: ldc           #103
296: invokestatic  #91
299: new           #27
302: dup
303: invokespecial #28
306: ldc           #29
308: invokevirtual #30
311: iload         5
313: invokevirtual #31
316: ldc           #32
318: invokevirtual #30
321: iconst_1
322: invokevirtual #31
325: ldc           #29
327: invokevirtual #30
330: invokevirtual #33
333: iload         5
335: iconst_1
336: if_icmpne     343
339: iconst_1
340: goto          344
343: iconst_0
344: invokestatic  #34
347: aload         6
349: invokestatic  #39
352: new           #27
355: dup
356: invokespecial #28
359: ldc           #29
361: invokevirtual #30
364: aload         7
366: invokevirtual #30
369: ldc           #102
371: invokevirtual #30
374: invokevirtual #33
377: aload         7
379: ldc           #103
381: invokestatic  #91
384: aload         11
386: invokestatic  #39
389: aload         12
391: invokestatic  #39
394: aload         14
396: invokestatic  #39
399: aload         16
401: invokestatic  #39
404: new           #27
407: dup
408: invokespecial #28
411: ldc           #29
413: invokevirtual #30
416: iload         17
418: invokevirtual #35
421: ldc           #32
423: invokevirtual #30
426: iconst_0
427: invokevirtual #35
430: ldc           #29
432: invokevirtual #30
435: invokevirtual #33
438: iload         17
440: ifne          447
443: iconst_1
444: goto          448
447: iconst_0
448: invokestatic  #34
451: new           #27
454: dup
455: invokespecial #28
458: ldc           #29
460: invokevirtual #30
463: aload         18
465: invokevirtual #36
468: ldc           #32
470: invokevirtual #30
473: getstatic     #49
476: invokevirtual #36
479: ldc           #29
481: invokevirtual #30
484: invokevirtual #33
487: aload         18
489: getstatic     #49
492: invokevirtual #50
495: invokestatic  #34
498: aload         19
500: invokestatic  #39
503: aload         20
505: invokestatic  #39
508: new           #27
511: dup
512: invokespecial #28
515: ldc           #29
517: invokevirtual #30
520: iload         21
522: invokevirtual #35
525: ldc           #32
527: invokevirtual #30
530: iconst_0
531: invokevirtual #35
534: ldc           #29
536: invokevirtual #30
539: invokevirtual #33
542: iload         21
544: ifne          551
547: iconst_1
548: goto          552
551: iconst_0
552: invokestatic  #34
555: aload         22
557: invokestatic  #39
560: aload         23
562: invokestatic  #39
565: new           #27
568: dup
569: invokespecial #28
572: ldc           #29
574: invokevirtual #30
577: aload         24
579: invokevirtual #30
582: ldc           #213
584: invokevirtual #30
587: invokevirtual #33
590: aload         24
592: ldc           #212
594: invokestatic  #91
597: aload         25
599: invokestatic  #39
602: new           #27
605: dup
606: invokespecial #28
609: ldc           #29
611: invokevirtual #30
614: aload         26
616: invokevirtual #36
619: ldc           #32
621: invokevirtual #30
624: getstatic     #37
627: invokevirtual #36
630: ldc           #29
632: invokevirtual #30
635: invokevirtual #33
638: aload         26
640: getstatic     #37
643: invokevirtual #38
646: invokestatic  #34
649: aload         27
651: invokestatic  #39
654: new           #27
657: dup
658: invokespecial #28
661: ldc           #29
663: invokevirtual #30
666: iload         28
668: invokevirtual #35
671: ldc           #32
673: invokevirtual #30
676: iconst_0
677: invokevirtual #35
680: ldc           #29
682: invokevirtual #30
685: invokevirtual #33
688: iload         28
690: ifne          697
693: iconst_1
694: goto          698
697: iconst_0
698: invokestatic  #34
701: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test61
Start line: 3610
End line: 3614
Method source code: 
    public void test61() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test61");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("\n<!--          -->", "comment=\"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\" class=\"\"=\"data-\"=\"*\" [:only-child^=#data]=\"[:eq(10)]\"", "\n<!--          -->", "[:only-child^=#data]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #294
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #295
32: ldc_w         #296
35: ldc_w         #295
38: ldc_w         #292
41: invokespecial #12
44: astore_1
45: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test62
Start line: 3617
End line: 3646
Method source code: 
    public void test62() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test62");
        org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.DataNode> dataNodeList0 = new org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.DataNode>();
        org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element4 = document2.toggleClass("");
        int int5 = document2.childNodeSize();
        org.jsoup.nodes.Document.QuirksMode quirksMode6 = org.jsoup.nodes.Document.QuirksMode.quirks;
        org.jsoup.nodes.Document document7 = document2.quirksMode(quirksMode6);
        java.lang.String str8 = document2.baseUri;
        org.jsoup.nodes.Document.QuirksMode quirksMode9 = org.jsoup.nodes.Document.QuirksMode.limitedQuirks;
        org.jsoup.nodes.Document document10 = document2.quirksMode(quirksMode9);
        org.jsoup.select.Elements elements13 = document10.getElementsByAttributeValueEnding("[   [^]  !=#data]\n<#root class=\"\">\n <html>\n  <head></head>\n  <body>\n   hi!hi!\n  </body>\n </html>\n</#root>\n<html></html>", ":lt(100)");
        boolean boolean14 = dataNodeList0.removeAll((java.util.Collection<org.jsoup.nodes.Element>) elements13);
        java.util.Iterator<org.jsoup.nodes.DataNode> dataNodeItor15 = dataNodeList0.descendingIterator();
        org.jsoup.nodes.DocumentType documentType20 = new org.jsoup.nodes.DocumentType("#data", ":lt(100)", "#<html> <head></head> <body> hi! </body> </html>", "          ");
        boolean boolean21 = dataNodeList0.equals((java.lang.Object) "#<html> <head></head> <body> hi! </body> </html>");
        org.junit.Assert.assertNotNull(document2);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + quirksMode6 + "' != '" + org.jsoup.nodes.Document.QuirksMode.quirks + "'", quirksMode6.equals(org.jsoup.nodes.Document.QuirksMode.quirks));
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + quirksMode9 + "' != '" + org.jsoup.nodes.Document.QuirksMode.limitedQuirks + "'", quirksMode9.equals(org.jsoup.nodes.Document.QuirksMode.limitedQuirks));
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(elements13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(dataNodeItor15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #297
20: aastore
21: invokevirtual #7
24: pop
25: new           #298
28: dup
29: invokespecial #299
32: astore_1
33: ldc           #52
35: invokestatic  #53
38: astore_2
39: aload_2
40: ldc           #9
42: invokevirtual #54
45: astore_3
46: aload_2
47: invokevirtual #55
50: istore        4
52: getstatic     #56
55: astore        5
57: aload_2
58: aload         5
60: invokevirtual #57
63: astore        6
65: aload_2
66: getfield      #300
69: astore        7
71: getstatic     #301
74: astore        8
76: aload_2
77: aload         8
79: invokevirtual #57
82: astore        9
84: aload         9
86: ldc_w         #302
89: ldc_w         #303
92: invokevirtual #304
95: astore        10
97: aload_1
98: aload         10
100: invokevirtual #305
103: istore        11
105: aload_1
106: invokevirtual #306
109: astore        12
111: new           #8
114: dup
115: ldc           #75
117: ldc_w         #303
120: ldc_w         #307
123: ldc           #11
125: invokespecial #12
128: astore        13
130: aload_1
131: ldc_w         #307
134: invokevirtual #308
137: istore        14
139: aload_2
140: invokestatic  #39
143: aload_3
144: invokestatic  #39
147: new           #27
150: dup
151: invokespecial #28
154: ldc           #29
156: invokevirtual #30
159: iload         4
161: invokevirtual #31
164: ldc           #32
166: invokevirtual #30
169: iconst_1
170: invokevirtual #31
173: ldc           #29
175: invokevirtual #30
178: invokevirtual #33
181: iload         4
183: iconst_1
184: if_icmpne     191
187: iconst_1
188: goto          192
191: iconst_0
192: invokestatic  #34
195: new           #27
198: dup
199: invokespecial #28
202: ldc           #29
204: invokevirtual #30
207: aload         5
209: invokevirtual #36
212: ldc           #32
214: invokevirtual #30
217: getstatic     #56
220: invokevirtual #36
223: ldc           #29
225: invokevirtual #30
228: invokevirtual #33
231: aload         5
233: getstatic     #56
236: invokevirtual #89
239: invokestatic  #34
242: aload         6
244: invokestatic  #39
247: new           #27
250: dup
251: invokespecial #28
254: ldc           #29
256: invokevirtual #30
259: aload         7
261: invokevirtual #30
264: ldc           #90
266: invokevirtual #30
269: invokevirtual #33
272: aload         7
274: ldc           #9
276: invokestatic  #91
279: new           #27
282: dup
283: invokespecial #28
286: ldc           #29
288: invokevirtual #30
291: aload         8
293: invokevirtual #36
296: ldc           #32
298: invokevirtual #30
301: getstatic     #301
304: invokevirtual #36
307: ldc           #29
309: invokevirtual #30
312: invokevirtual #33
315: aload         8
317: getstatic     #301
320: invokevirtual #89
323: invokestatic  #34
326: aload         9
328: invokestatic  #39
331: aload         10
333: invokestatic  #39
336: new           #27
339: dup
340: invokespecial #28
343: ldc           #29
345: invokevirtual #30
348: iload         11
350: invokevirtual #35
353: ldc           #32
355: invokevirtual #30
358: iconst_0
359: invokevirtual #35
362: ldc           #29
364: invokevirtual #30
367: invokevirtual #33
370: iload         11
372: ifne          379
375: iconst_1
376: goto          380
379: iconst_0
380: invokestatic  #34
383: aload         12
385: invokestatic  #39
388: new           #27
391: dup
392: invokespecial #28
395: ldc           #29
397: invokevirtual #30
400: iload         14
402: invokevirtual #35
405: ldc           #32
407: invokevirtual #30
410: iconst_0
411: invokevirtual #35
414: ldc           #29
416: invokevirtual #30
419: invokevirtual #33
422: iload         14
424: ifne          431
427: iconst_1
428: goto          432
431: iconst_0
432: invokestatic  #34
435: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test63
Start line: 3649
End line: 3723
Method source code: 
    public void test63() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test63");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings67.escapeMode(escapeMode70);
        java.util.Map<java.lang.Character, java.lang.String> charMap72 = escapeMode70.getMap();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertNotNull(charMap72);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #309
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: getstatic     #127
361: astore        37
363: aload         35
365: aload         37
367: invokevirtual #22
370: astore        38
372: aload         37
374: invokevirtual #46
377: astore        39
379: new           #27
382: dup
383: invokespecial #28
386: ldc           #29
388: invokevirtual #30
391: aload         4
393: invokevirtual #30
396: ldc           #90
398: invokevirtual #30
401: invokevirtual #33
404: aload         4
406: ldc           #9
408: invokestatic  #91
411: new           #27
414: dup
415: invokespecial #28
418: ldc           #29
420: invokevirtual #30
423: aload         5
425: invokevirtual #30
428: ldc           #90
430: invokevirtual #30
433: invokevirtual #33
436: aload         5
438: ldc           #9
440: invokestatic  #91
443: aload         8
445: invokestatic  #39
448: aload         9
450: invokestatic  #39
453: aload         10
455: invokestatic  #39
458: new           #27
461: dup
462: invokespecial #28
465: ldc           #29
467: invokevirtual #30
470: aload         11
472: invokevirtual #30
475: ldc           #92
477: invokevirtual #30
480: invokevirtual #33
483: aload         11
485: ldc           #17
487: invokestatic  #91
490: aload         12
492: invokestatic  #39
495: new           #27
498: dup
499: invokespecial #28
502: ldc           #29
504: invokevirtual #30
507: iload         13
509: invokevirtual #35
512: ldc           #32
514: invokevirtual #30
517: iconst_0
518: invokevirtual #35
521: ldc           #29
523: invokevirtual #30
526: invokevirtual #33
529: iload         13
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #34
542: aload         14
544: invokestatic  #39
547: aload         15
549: invokestatic  #39
552: aload         16
554: invokestatic  #39
557: aload         17
559: invokestatic  #39
562: aload         18
564: invokestatic  #39
567: new           #27
570: dup
571: invokespecial #28
574: ldc           #29
576: invokevirtual #30
579: iload         19
581: invokevirtual #35
584: ldc           #32
586: invokevirtual #30
589: iconst_0
590: invokevirtual #35
593: ldc           #29
595: invokevirtual #30
598: invokevirtual #33
601: iload         19
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #34
614: new           #27
617: dup
618: invokespecial #28
621: ldc           #29
623: invokevirtual #30
626: iload         21
628: invokevirtual #35
631: ldc           #32
633: invokevirtual #30
636: iconst_0
637: invokevirtual #35
640: ldc           #29
642: invokevirtual #30
645: invokevirtual #33
648: iload         21
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #34
661: aload         22
663: invokestatic  #39
666: aload         23
668: invokestatic  #39
671: aload         24
673: invokestatic  #39
676: aload         25
678: invokestatic  #39
681: new           #27
684: dup
685: invokespecial #28
688: ldc           #29
690: invokevirtual #30
693: aload         28
695: invokevirtual #30
698: ldc           #93
700: invokevirtual #30
703: invokevirtual #33
706: aload         28
708: ldc           #52
710: invokestatic  #91
713: new           #27
716: dup
717: invokespecial #28
720: ldc           #29
722: invokevirtual #30
725: aload         29
727: invokevirtual #30
730: ldc           #94
732: invokevirtual #30
735: invokevirtual #33
738: aload         29
740: ldc           #95
742: invokestatic  #91
745: new           #27
748: dup
749: invokespecial #28
752: ldc           #29
754: invokevirtual #30
757: iload         32
759: invokevirtual #31
762: ldc           #32
764: invokevirtual #30
767: iconst_1
768: invokevirtual #31
771: ldc           #29
773: invokevirtual #30
776: invokevirtual #33
779: iload         32
781: iconst_1
782: if_icmpne     789
785: iconst_1
786: goto          790
789: iconst_0
790: invokestatic  #34
793: new           #27
796: dup
797: invokespecial #28
800: ldc           #29
802: invokevirtual #30
805: iload         33
807: invokevirtual #35
810: ldc           #32
812: invokevirtual #30
815: iconst_0
816: invokevirtual #35
819: ldc           #29
821: invokevirtual #30
824: invokevirtual #33
827: iload         33
829: ifne          836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #34
840: new           #27
843: dup
844: invokespecial #28
847: ldc           #29
849: invokevirtual #30
852: iload         36
854: invokevirtual #31
857: ldc           #32
859: invokevirtual #30
862: iconst_1
863: invokevirtual #31
866: ldc           #29
868: invokevirtual #30
871: invokevirtual #33
874: iload         36
876: iconst_1
877: if_icmpne     884
880: iconst_1
881: goto          885
884: iconst_0
885: invokestatic  #34
888: new           #27
891: dup
892: invokespecial #28
895: ldc           #29
897: invokevirtual #30
900: aload         37
902: invokevirtual #36
905: ldc           #32
907: invokevirtual #30
910: getstatic     #127
913: invokevirtual #36
916: ldc           #29
918: invokevirtual #30
921: invokevirtual #33
924: aload         37
926: getstatic     #127
929: invokevirtual #38
932: invokestatic  #34
935: aload         38
937: invokestatic  #39
940: aload         39
942: invokestatic  #39
945: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test64
Start line: 3726
End line: 3774
Method source code: 
    public void test64() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test64");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings7 = new org.jsoup.nodes.Document.OutputSettings();
        int int8 = outputSettings7.indentAmount();
        int int9 = outputSettings7.indentAmount();
        boolean boolean10 = outputSettings7.prettyPrint();
        java.nio.charset.CharsetEncoder charsetEncoder11 = outputSettings7.encoder();
        documentType4.outerHtmlTail(stringBuilder5, 0, outputSettings7);
        java.lang.String str13 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.nodes.Attribute attribute18 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType19 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document22 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document24 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element26 = document24.toggleClass("");
        java.lang.String str27 = element26.tagName();
        org.jsoup.nodes.Element element29 = element26.toggleClass("");
        boolean boolean30 = isOnlyOfType19.matches((org.jsoup.nodes.Element) document22, element26);
        org.jsoup.parser.Tag tag31 = document22.tag();
        document22.baseUri = ":eq(10)";
        org.jsoup.nodes.Element element35 = document22.removeClass("");
        org.jsoup.nodes.Document.OutputSettings outputSettings36 = document22.outputSettings();
        boolean boolean37 = attribute18.shouldCollapseAttribute(outputSettings36);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder14, 1, outputSettings36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charsetEncoder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#doctype" + "'", str13, "#doctype");
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#root" + "'", str27, "#root");
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tag31);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(outputSettings36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #310
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #13
46: dup
47: invokespecial #14
50: astore_3
51: aload_3
52: invokevirtual #15
55: istore        4
57: aload_3
58: invokevirtual #15
61: istore        5
63: aload_3
64: invokevirtual #289
67: istore        6
69: aload_3
70: invokevirtual #146
73: astore        7
75: aload_1
76: aload_2
77: iconst_0
78: aload_3
79: invokevirtual #87
82: aload_1
83: invokevirtual #97
86: astore        8
88: aconst_null
89: astore        9
91: new           #16
94: dup
95: ldc           #17
97: ldc           #18
99: invokespecial #19
102: astore        10
104: new           #64
107: dup
108: invokespecial #65
111: astore        11
113: ldc           #9
115: ldc           #9
117: invokestatic  #66
120: astore        12
122: ldc           #52
124: invokestatic  #53
127: astore        13
129: aload         13
131: ldc           #9
133: invokevirtual #54
136: astore        14
138: aload         14
140: invokevirtual #67
143: astore        15
145: aload         14
147: ldc           #9
149: invokevirtual #68
152: astore        16
154: aload         11
156: aload         12
158: aload         14
160: invokevirtual #69
163: istore        17
165: aload         12
167: invokevirtual #311
170: astore        18
172: aload         12
174: ldc_w         #312
177: putfield      #300
180: aload         12
182: ldc           #9
184: invokevirtual #313
187: astore        19
189: aload         12
191: invokevirtual #314
194: astore        20
196: aload         10
198: aload         20
200: invokevirtual #20
203: istore        21
205: aload_1
206: aload         9
208: iconst_1
209: aload         20
211: invokevirtual #23
214: ldc           #24
216: invokestatic  #25
219: goto          224
222: astore        22
224: new           #27
227: dup
228: invokespecial #28
231: ldc           #29
233: invokevirtual #30
236: iload         4
238: invokevirtual #31
241: ldc           #32
243: invokevirtual #30
246: iconst_1
247: invokevirtual #31
250: ldc           #29
252: invokevirtual #30
255: invokevirtual #33
258: iload         4
260: iconst_1
261: if_icmpne     268
264: iconst_1
265: goto          269
268: iconst_0
269: invokestatic  #34
272: new           #27
275: dup
276: invokespecial #28
279: ldc           #29
281: invokevirtual #30
284: iload         5
286: invokevirtual #31
289: ldc           #32
291: invokevirtual #30
294: iconst_1
295: invokevirtual #31
298: ldc           #29
300: invokevirtual #30
303: invokevirtual #33
306: iload         5
308: iconst_1
309: if_icmpne     316
312: iconst_1
313: goto          317
316: iconst_0
317: invokestatic  #34
320: new           #27
323: dup
324: invokespecial #28
327: ldc           #29
329: invokevirtual #30
332: iload         6
334: invokevirtual #35
337: ldc           #32
339: invokevirtual #30
342: iconst_1
343: invokevirtual #35
346: ldc           #29
348: invokevirtual #30
351: invokevirtual #33
354: iload         6
356: iconst_1
357: if_icmpne     364
360: iconst_1
361: goto          365
364: iconst_0
365: invokestatic  #34
368: aload         7
370: invokestatic  #39
373: new           #27
376: dup
377: invokespecial #28
380: ldc           #29
382: invokevirtual #30
385: aload         8
387: invokevirtual #30
390: ldc           #102
392: invokevirtual #30
395: invokevirtual #33
398: aload         8
400: ldc           #103
402: invokestatic  #91
405: aload         12
407: invokestatic  #39
410: aload         13
412: invokestatic  #39
415: aload         14
417: invokestatic  #39
420: new           #27
423: dup
424: invokespecial #28
427: ldc           #29
429: invokevirtual #30
432: aload         15
434: invokevirtual #30
437: ldc           #92
439: invokevirtual #30
442: invokevirtual #33
445: aload         15
447: ldc           #17
449: invokestatic  #91
452: aload         16
454: invokestatic  #39
457: new           #27
460: dup
461: invokespecial #28
464: ldc           #29
466: invokevirtual #30
469: iload         17
471: invokevirtual #35
474: ldc           #32
476: invokevirtual #30
479: iconst_0
480: invokevirtual #35
483: ldc           #29
485: invokevirtual #30
488: invokevirtual #33
491: iload         17
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #34
504: aload         18
506: invokestatic  #39
509: aload         19
511: invokestatic  #39
514: aload         20
516: invokestatic  #39
519: new           #27
522: dup
523: invokespecial #28
526: ldc           #29
528: invokevirtual #30
531: iload         21
533: invokevirtual #35
536: ldc           #32
538: invokevirtual #30
541: iconst_0
542: invokevirtual #35
545: ldc           #29
547: invokevirtual #30
550: invokevirtual #33
553: iload         21
555: ifne          562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #34
566: return
Exception table:
from    to  target type
205   219   222   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test65
Start line: 3777
End line: 3869
Method source code: 
    public void test65() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test65");
        org.jsoup.nodes.TextNode textNode2 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node3 = textNode2.parentNode;
        textNode2.siblingIndex = ' ';
        org.jsoup.nodes.TextNode textNode7 = textNode2.splitText((int) (byte) 0);
        boolean boolean9 = textNode2.hasAttr("#data text=\"[^]\"");
        java.lang.StringBuilder stringBuilder10 = null;
        org.jsoup.nodes.DocumentType documentType16 = new org.jsoup.nodes.DocumentType("[^]\n<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "[hi!*=#root]", ":matches(null", ":nth-of-type(1n+1)");
        java.lang.StringBuilder stringBuilder17 = null;
        org.jsoup.nodes.DocumentType documentType23 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder24 = null;
        org.jsoup.nodes.TextNode textNode28 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str29 = textNode28.getWholeText();
        java.lang.String str31 = textNode28.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder32 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType34 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document37 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document39 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element41 = document39.toggleClass("");
        java.lang.String str42 = element41.tagName();
        org.jsoup.nodes.Element element44 = element41.toggleClass("");
        boolean boolean45 = isOnlyOfType34.matches((org.jsoup.nodes.Element) document37, element41);
        org.jsoup.nodes.Document document48 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements50 = document48.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element52 = document48.text(" ");
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements57 = document55.getElementsContainingText("#data");
        boolean boolean58 = isOnlyOfType34.matches((org.jsoup.nodes.Element) document48, (org.jsoup.nodes.Element) document55);
        org.jsoup.nodes.Comment comment61 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean63 = comment61.hasAttr("hi!");
        org.jsoup.nodes.Document document65 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element67 = document65.toggleClass("");
        org.jsoup.nodes.Node node68 = document65.clone();
        org.jsoup.nodes.Node node69 = comment61.doClone(node68);
        java.lang.StringBuilder stringBuilder70 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = null;
        comment61.outerHtmlTail(stringBuilder70, 10, outputSettings72);
        java.lang.String str74 = comment61.getData();
        java.lang.String str75 = comment61.nodeName();
        java.lang.StringBuilder stringBuilder76 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = new org.jsoup.nodes.Document.OutputSettings();
        int int79 = outputSettings78.indentAmount();
        comment61.outerHtmlTail(stringBuilder76, 0, outputSettings78);
        boolean boolean81 = document55.equals((java.lang.Object) outputSettings78);
        textNode28.outerHtmlTail(stringBuilder32, (int) (short) 100, outputSettings78);
        documentType23.outerHtmlTail(stringBuilder24, (int) (short) 1, outputSettings78);
        java.lang.StringBuilder stringBuilder84 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings86 = new org.jsoup.nodes.Document.OutputSettings();
        int int87 = outputSettings86.indentAmount();
        documentType23.outerHtmlTail(stringBuilder84, 0, outputSettings86);
        org.jsoup.nodes.Entities.EscapeMode escapeMode89 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings90 = outputSettings86.escapeMode(escapeMode89);
        org.jsoup.nodes.Document.OutputSettings outputSettings92 = outputSettings90.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings94 = outputSettings92.prettyPrint(true);
        int int95 = outputSettings92.indentAmount();
        documentType16.outerHtmlTail(stringBuilder17, 1, outputSettings92);
        textNode2.outerHtmlTail(stringBuilder10, (int) '4', outputSettings92);
        org.junit.Assert.assertNotNull(textNode2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(textNode7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#root" + "'", str42, "#root");
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(elements50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(elements57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "#comment" + "'", str75, "#comment");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode89 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode89.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings90);
        org.junit.Assert.assertNotNull(outputSettings92);
        org.junit.Assert.assertNotNull(outputSettings94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #315
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #52
27: ldc           #52
29: invokestatic  #132
32: astore_1
33: aload_1
34: getfield      #133
37: astore_2
38: aload_1
39: bipush        32
41: putfield      #248
44: aload_1
45: iconst_0
46: invokevirtual #316
49: astore_3
50: aload_1
51: ldc_w         #317
54: invokevirtual #249
57: istore        4
59: aconst_null
60: astore        5
62: new           #8
65: dup
66: ldc           #173
68: ldc           #174
70: ldc           #175
72: ldc           #176
74: invokespecial #12
77: astore        6
79: aconst_null
80: astore        7
82: new           #8
85: dup
86: ldc           #9
88: ldc           #10
90: ldc           #11
92: ldc           #9
94: invokespecial #12
97: astore        8
99: aconst_null
100: astore        9
102: new           #58
105: dup
106: ldc           #9
108: ldc           #59
110: invokespecial #60
113: astore        10
115: aload         10
117: invokevirtual #61
120: astore        11
122: aload         10
124: ldc           #62
126: invokevirtual #63
129: astore        12
131: aconst_null
132: astore        13
134: new           #64
137: dup
138: invokespecial #65
141: astore        14
143: ldc           #9
145: ldc           #9
147: invokestatic  #66
150: astore        15
152: ldc           #52
154: invokestatic  #53
157: astore        16
159: aload         16
161: ldc           #9
163: invokevirtual #54
166: astore        17
168: aload         17
170: invokevirtual #67
173: astore        18
175: aload         17
177: ldc           #9
179: invokevirtual #68
182: astore        19
184: aload         14
186: aload         15
188: aload         17
190: invokevirtual #69
193: istore        20
195: ldc           #59
197: ldc           #52
199: invokestatic  #70
202: astore        21
204: aload         21
206: bipush        100
208: invokevirtual #71
211: astore        22
213: aload         21
215: ldc           #72
217: invokevirtual #73
220: astore        23
222: ldc           #74
224: ldc           #52
226: invokestatic  #70
229: astore        24
231: aload         24
233: ldc           #75
235: invokevirtual #76
238: astore        25
240: aload         14
242: aload         21
244: aload         24
246: invokevirtual #69
249: istore        26
251: new           #77
254: dup
255: ldc           #52
257: ldc           #52
259: invokespecial #78
262: astore        27
264: aload         27
266: ldc           #52
268: invokevirtual #79
271: istore        28
273: ldc           #52
275: invokestatic  #53
278: astore        29
280: aload         29
282: ldc           #9
284: invokevirtual #54
287: astore        30
289: aload         29
291: invokevirtual #80
294: astore        31
296: aload         27
298: aload         31
300: invokevirtual #81
303: astore        32
305: aconst_null
306: astore        33
308: aconst_null
309: astore        34
311: aload         27
313: aload         33
315: bipush        10
317: aload         34
319: invokevirtual #82
322: aload         27
324: invokevirtual #83
327: astore        35
329: aload         27
331: invokevirtual #84
334: astore        36
336: aconst_null
337: astore        37
339: new           #13
342: dup
343: invokespecial #14
346: astore        38
348: aload         38
350: invokevirtual #15
353: istore        39
355: aload         27
357: aload         37
359: iconst_0
360: aload         38
362: invokevirtual #82
365: aload         24
367: aload         38
369: invokevirtual #85
372: istore        40
374: aload         10
376: aload         13
378: bipush        100
380: aload         38
382: invokevirtual #86
385: aload         8
387: aload         9
389: iconst_1
390: aload         38
392: invokevirtual #87
395: aconst_null
396: astore        41
398: new           #13
401: dup
402: invokespecial #14
405: astore        42
407: aload         42
409: invokevirtual #15
412: istore        43
414: aload         8
416: aload         41
418: iconst_0
419: aload         42
421: invokevirtual #87
424: getstatic     #127
427: astore        44
429: aload         42
431: aload         44
433: invokevirtual #22
436: astore        45
438: aload         45
440: iconst_0
441: invokevirtual #128
444: astore        46
446: aload         46
448: iconst_1
449: invokevirtual #128
452: astore        47
454: aload         46
456: invokevirtual #15
459: istore        48
461: aload         6
463: aload         7
465: iconst_1
466: aload         46
468: invokevirtual #87
471: aload_1
472: aload         5
474: bipush        52
476: aload         46
478: invokevirtual #86
481: aload_1
482: invokestatic  #39
485: aload_2
486: invokestatic  #139
489: aload_3
490: invokestatic  #39
493: new           #27
496: dup
497: invokespecial #28
500: ldc           #29
502: invokevirtual #30
505: iload         4
507: invokevirtual #35
510: ldc           #32
512: invokevirtual #30
515: iconst_0
516: invokevirtual #35
519: ldc           #29
521: invokevirtual #30
524: invokevirtual #33
527: iload         4
529: ifne          536
532: iconst_1
533: goto          537
536: iconst_0
537: invokestatic  #34
540: new           #27
543: dup
544: invokespecial #28
547: ldc           #29
549: invokevirtual #30
552: aload         11
554: invokevirtual #30
557: ldc           #90
559: invokevirtual #30
562: invokevirtual #33
565: aload         11
567: ldc           #9
569: invokestatic  #91
572: new           #27
575: dup
576: invokespecial #28
579: ldc           #29
581: invokevirtual #30
584: aload         12
586: invokevirtual #30
589: ldc           #90
591: invokevirtual #30
594: invokevirtual #33
597: aload         12
599: ldc           #9
601: invokestatic  #91
604: aload         15
606: invokestatic  #39
609: aload         16
611: invokestatic  #39
614: aload         17
616: invokestatic  #39
619: new           #27
622: dup
623: invokespecial #28
626: ldc           #29
628: invokevirtual #30
631: aload         18
633: invokevirtual #30
636: ldc           #92
638: invokevirtual #30
641: invokevirtual #33
644: aload         18
646: ldc           #17
648: invokestatic  #91
651: aload         19
653: invokestatic  #39
656: new           #27
659: dup
660: invokespecial #28
663: ldc           #29
665: invokevirtual #30
668: iload         20
670: invokevirtual #35
673: ldc           #32
675: invokevirtual #30
678: iconst_0
679: invokevirtual #35
682: ldc           #29
684: invokevirtual #30
687: invokevirtual #33
690: iload         20
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #34
703: aload         21
705: invokestatic  #39
708: aload         22
710: invokestatic  #39
713: aload         23
715: invokestatic  #39
718: aload         24
720: invokestatic  #39
723: aload         25
725: invokestatic  #39
728: new           #27
731: dup
732: invokespecial #28
735: ldc           #29
737: invokevirtual #30
740: iload         26
742: invokevirtual #35
745: ldc           #32
747: invokevirtual #30
750: iconst_0
751: invokevirtual #35
754: ldc           #29
756: invokevirtual #30
759: invokevirtual #33
762: iload         26
764: ifne          771
767: iconst_1
768: goto          772
771: iconst_0
772: invokestatic  #34
775: new           #27
778: dup
779: invokespecial #28
782: ldc           #29
784: invokevirtual #30
787: iload         28
789: invokevirtual #35
792: ldc           #32
794: invokevirtual #30
797: iconst_0
798: invokevirtual #35
801: ldc           #29
803: invokevirtual #30
806: invokevirtual #33
809: iload         28
811: ifne          818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #34
822: aload         29
824: invokestatic  #39
827: aload         30
829: invokestatic  #39
832: aload         31
834: invokestatic  #39
837: aload         32
839: invokestatic  #39
842: new           #27
845: dup
846: invokespecial #28
849: ldc           #29
851: invokevirtual #30
854: aload         35
856: invokevirtual #30
859: ldc           #93
861: invokevirtual #30
864: invokevirtual #33
867: aload         35
869: ldc           #52
871: invokestatic  #91
874: new           #27
877: dup
878: invokespecial #28
881: ldc           #29
883: invokevirtual #30
886: aload         36
888: invokevirtual #30
891: ldc           #94
893: invokevirtual #30
896: invokevirtual #33
899: aload         36
901: ldc           #95
903: invokestatic  #91
906: new           #27
909: dup
910: invokespecial #28
913: ldc           #29
915: invokevirtual #30
918: iload         39
920: invokevirtual #31
923: ldc           #32
925: invokevirtual #30
928: iconst_1
929: invokevirtual #31
932: ldc           #29
934: invokevirtual #30
937: invokevirtual #33
940: iload         39
942: iconst_1
943: if_icmpne     950
946: iconst_1
947: goto          951
950: iconst_0
951: invokestatic  #34
954: new           #27
957: dup
958: invokespecial #28
961: ldc           #29
963: invokevirtual #30
966: iload         40
968: invokevirtual #35
971: ldc           #32
973: invokevirtual #30
976: iconst_0
977: invokevirtual #35
980: ldc           #29
982: invokevirtual #30
985: invokevirtual #33
988: iload         40
990: ifne          997
993: iconst_1
994: goto          998
997: iconst_0
998: invokestatic  #34
1001: new           #27
1004: dup
1005: invokespecial #28
1008: ldc           #29
1010: invokevirtual #30
1013: iload         43
1015: invokevirtual #31
1018: ldc           #32
1020: invokevirtual #30
1023: iconst_1
1024: invokevirtual #31
1027: ldc           #29
1029: invokevirtual #30
1032: invokevirtual #33
1035: iload         43
1037: iconst_1
1038: if_icmpne     1045
1041: iconst_1
1042: goto          1046
1045: iconst_0
1046: invokestatic  #34
1049: new           #27
1052: dup
1053: invokespecial #28
1056: ldc           #29
1058: invokevirtual #30
1061: aload         44
1063: invokevirtual #36
1066: ldc           #32
1068: invokevirtual #30
1071: getstatic     #127
1074: invokevirtual #36
1077: ldc           #29
1079: invokevirtual #30
1082: invokevirtual #33
1085: aload         44
1087: getstatic     #127
1090: invokevirtual #38
1093: invokestatic  #34
1096: aload         45
1098: invokestatic  #39
1101: aload         46
1103: invokestatic  #39
1106: aload         47
1108: invokestatic  #39
1111: new           #27
1114: dup
1115: invokespecial #28
1118: ldc           #29
1120: invokevirtual #30
1123: iload         48
1125: invokevirtual #31
1128: ldc           #32
1130: invokevirtual #30
1133: iconst_1
1134: invokevirtual #31
1137: ldc           #29
1139: invokevirtual #30
1142: invokevirtual #33
1145: iload         48
1147: iconst_1
1148: if_icmpne     1155
1151: iconst_1
1152: goto          1156
1155: iconst_0
1156: invokestatic  #34
1159: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test66
Start line: 3872
End line: 3936
Method source code: 
    public void test66() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test66");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", " #comment=\"#root\"", "[^]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]");
        java.lang.StringBuilder stringBuilder5 = null;
        java.lang.StringBuilder stringBuilder7 = null;
        org.jsoup.nodes.TextNode textNode11 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node12 = textNode11.parentNode;
        java.lang.String str13 = textNode11.nodeName();
        java.lang.String str14 = textNode11.nodeName();
        textNode11.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes17 = textNode11.attributes();
        java.lang.StringBuilder stringBuilder18 = null;
        org.jsoup.nodes.Attribute attribute22 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean24 = attribute22.shouldCollapseAttribute(outputSettings23);
        org.jsoup.nodes.Entities.EscapeMode escapeMode25 = outputSettings23.escapeMode();
        textNode11.outerHtmlTail(stringBuilder18, (int) (short) -1, outputSettings23);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax27 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings23.syntax(syntax27);
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings23.clone();
        org.jsoup.nodes.TextNode textNode32 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node33 = textNode32.parentNode;
        java.lang.String str34 = textNode32.nodeName();
        java.lang.String str35 = textNode32.nodeName();
        textNode32.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes38 = textNode32.attributes();
        java.lang.StringBuilder stringBuilder39 = null;
        org.jsoup.nodes.Attribute attribute43 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean45 = attribute43.shouldCollapseAttribute(outputSettings44);
        org.jsoup.nodes.Entities.EscapeMode escapeMode46 = outputSettings44.escapeMode();
        textNode32.outerHtmlTail(stringBuilder39, (int) (short) -1, outputSettings44);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax48 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = outputSettings44.syntax(syntax48);
        org.jsoup.nodes.Document.OutputSettings outputSettings50 = outputSettings23.syntax(syntax48);
        org.jsoup.nodes.Document.OutputSettings outputSettings52 = outputSettings23.outline(false);
        org.jsoup.nodes.Entities.escape(stringBuilder7, "", outputSettings23, false, false, false);
        boolean boolean57 = outputSettings23.outline();
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) -1, outputSettings23);
        java.lang.String str59 = documentType4.nodeName();
        org.junit.Assert.assertNotNull(textNode11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#text" + "'", str13, "#text");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#text" + "'", str14, "#text");
        org.junit.Assert.assertNotNull(attributes17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + escapeMode25 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode25.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax27 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax27.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(textNode32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#text" + "'", str34, "#text");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#text" + "'", str35, "#text");
        org.junit.Assert.assertNotNull(attributes38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + escapeMode46 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode46.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax48 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax48.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(outputSettings50);
        org.junit.Assert.assertNotNull(outputSettings52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "#doctype" + "'", str59, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #318
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #108
33: ldc           #59
35: ldc           #131
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: aconst_null
44: astore_3
45: ldc           #52
47: ldc           #52
49: invokestatic  #132
52: astore        4
54: aload         4
56: getfield      #133
59: astore        5
61: aload         4
63: invokevirtual #134
66: astore        6
68: aload         4
70: invokevirtual #134
73: astore        7
75: aload         4
77: ldc           #135
79: invokevirtual #136
82: aload         4
84: invokevirtual #137
87: astore        8
89: aconst_null
90: astore        9
92: new           #16
95: dup
96: ldc           #17
98: ldc           #18
100: invokespecial #19
103: astore        10
105: new           #13
108: dup
109: invokespecial #14
112: astore        11
114: aload         10
116: aload         11
118: invokevirtual #20
121: istore        12
123: aload         11
125: invokevirtual #21
128: astore        13
130: aload         4
132: aload         9
134: iconst_m1
135: aload         11
137: invokevirtual #86
140: getstatic     #49
143: astore        14
145: aload         11
147: aload         14
149: invokevirtual #138
152: astore        15
154: aload         11
156: invokevirtual #215
159: astore        16
161: ldc           #52
163: ldc           #52
165: invokestatic  #132
168: astore        17
170: aload         17
172: getfield      #133
175: astore        18
177: aload         17
179: invokevirtual #134
182: astore        19
184: aload         17
186: invokevirtual #134
189: astore        20
191: aload         17
193: ldc           #135
195: invokevirtual #136
198: aload         17
200: invokevirtual #137
203: astore        21
205: aconst_null
206: astore        22
208: new           #16
211: dup
212: ldc           #17
214: ldc           #18
216: invokespecial #19
219: astore        23
221: new           #13
224: dup
225: invokespecial #14
228: astore        24
230: aload         23
232: aload         24
234: invokevirtual #20
237: istore        25
239: aload         24
241: invokevirtual #21
244: astore        26
246: aload         17
248: aload         22
250: iconst_m1
251: aload         24
253: invokevirtual #86
256: getstatic     #49
259: astore        27
261: aload         24
263: aload         27
265: invokevirtual #138
268: astore        28
270: aload         11
272: aload         27
274: invokevirtual #138
277: astore        29
279: aload         11
281: iconst_0
282: invokevirtual #44
285: astore        30
287: aload_3
288: ldc           #9
290: aload         11
292: iconst_0
293: iconst_0
294: iconst_0
295: invokestatic  #275
298: aload         11
300: invokevirtual #232
303: istore        31
305: aload_1
306: aload_2
307: iconst_m1
308: aload         11
310: invokevirtual #87
313: aload_1
314: invokevirtual #97
317: astore        32
319: aload         4
321: invokestatic  #39
324: aload         5
326: invokestatic  #139
329: new           #27
332: dup
333: invokespecial #28
336: ldc           #29
338: invokevirtual #30
341: aload         6
343: invokevirtual #30
346: ldc           #140
348: invokevirtual #30
351: invokevirtual #33
354: aload         6
356: ldc           #74
358: invokestatic  #91
361: new           #27
364: dup
365: invokespecial #28
368: ldc           #29
370: invokevirtual #30
373: aload         7
375: invokevirtual #30
378: ldc           #140
380: invokevirtual #30
383: invokevirtual #33
386: aload         7
388: ldc           #74
390: invokestatic  #91
393: aload         8
395: invokestatic  #39
398: new           #27
401: dup
402: invokespecial #28
405: ldc           #29
407: invokevirtual #30
410: iload         12
412: invokevirtual #35
415: ldc           #32
417: invokevirtual #30
420: iconst_0
421: invokevirtual #35
424: ldc           #29
426: invokevirtual #30
429: invokevirtual #33
432: iload         12
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #34
445: new           #27
448: dup
449: invokespecial #28
452: ldc           #29
454: invokevirtual #30
457: aload         13
459: invokevirtual #36
462: ldc           #32
464: invokevirtual #30
467: getstatic     #37
470: invokevirtual #36
473: ldc           #29
475: invokevirtual #30
478: invokevirtual #33
481: aload         13
483: getstatic     #37
486: invokevirtual #38
489: invokestatic  #34
492: new           #27
495: dup
496: invokespecial #28
499: ldc           #29
501: invokevirtual #30
504: aload         14
506: invokevirtual #36
509: ldc           #32
511: invokevirtual #30
514: getstatic     #49
517: invokevirtual #36
520: ldc           #29
522: invokevirtual #30
525: invokevirtual #33
528: aload         14
530: getstatic     #49
533: invokevirtual #50
536: invokestatic  #34
539: aload         15
541: invokestatic  #39
544: aload         16
546: invokestatic  #39
549: aload         17
551: invokestatic  #39
554: aload         18
556: invokestatic  #139
559: new           #27
562: dup
563: invokespecial #28
566: ldc           #29
568: invokevirtual #30
571: aload         19
573: invokevirtual #30
576: ldc           #140
578: invokevirtual #30
581: invokevirtual #33
584: aload         19
586: ldc           #74
588: invokestatic  #91
591: new           #27
594: dup
595: invokespecial #28
598: ldc           #29
600: invokevirtual #30
603: aload         20
605: invokevirtual #30
608: ldc           #140
610: invokevirtual #30
613: invokevirtual #33
616: aload         20
618: ldc           #74
620: invokestatic  #91
623: aload         21
625: invokestatic  #39
628: new           #27
631: dup
632: invokespecial #28
635: ldc           #29
637: invokevirtual #30
640: iload         25
642: invokevirtual #35
645: ldc           #32
647: invokevirtual #30
650: iconst_0
651: invokevirtual #35
654: ldc           #29
656: invokevirtual #30
659: invokevirtual #33
662: iload         25
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #34
675: new           #27
678: dup
679: invokespecial #28
682: ldc           #29
684: invokevirtual #30
687: aload         26
689: invokevirtual #36
692: ldc           #32
694: invokevirtual #30
697: getstatic     #37
700: invokevirtual #36
703: ldc           #29
705: invokevirtual #30
708: invokevirtual #33
711: aload         26
713: getstatic     #37
716: invokevirtual #38
719: invokestatic  #34
722: new           #27
725: dup
726: invokespecial #28
729: ldc           #29
731: invokevirtual #30
734: aload         27
736: invokevirtual #36
739: ldc           #32
741: invokevirtual #30
744: getstatic     #49
747: invokevirtual #36
750: ldc           #29
752: invokevirtual #30
755: invokevirtual #33
758: aload         27
760: getstatic     #49
763: invokevirtual #50
766: invokestatic  #34
769: aload         28
771: invokestatic  #39
774: aload         29
776: invokestatic  #39
779: aload         30
781: invokestatic  #39
784: new           #27
787: dup
788: invokespecial #28
791: ldc           #29
793: invokevirtual #30
796: iload         31
798: invokevirtual #35
801: ldc           #32
803: invokevirtual #30
806: iconst_0
807: invokevirtual #35
810: ldc           #29
812: invokevirtual #30
815: invokevirtual #33
818: iload         31
820: ifne          827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #34
831: new           #27
834: dup
835: invokespecial #28
838: ldc           #29
840: invokevirtual #30
843: aload         32
845: invokevirtual #30
848: ldc           #102
850: invokevirtual #30
853: invokevirtual #33
856: aload         32
858: ldc           #103
860: invokestatic  #91
863: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test67
Start line: 3939
End line: 4041
Method source code: 
    public void test67() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test67");
        org.jsoup.nodes.TextNode textNode2 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node3 = textNode2.parentNode;
        java.lang.String str4 = textNode2.getWholeText();
        boolean boolean5 = textNode2.isBlank();
        java.lang.String str7 = textNode2.absUrl("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str8 = textNode2.text();
        boolean boolean10 = textNode2.hasAttr("<html>\n <head></head>\n <body>\n  #comment\n </body>\n</html>");
        java.lang.String str11 = textNode2.text();
        java.lang.String str12 = textNode2.getWholeText();
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.nodes.DocumentType documentType19 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder20 = null;
        org.jsoup.nodes.TextNode textNode24 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str25 = textNode24.getWholeText();
        java.lang.String str27 = textNode24.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder28 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType30 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document33 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element37 = document35.toggleClass("");
        java.lang.String str38 = element37.tagName();
        org.jsoup.nodes.Element element40 = element37.toggleClass("");
        boolean boolean41 = isOnlyOfType30.matches((org.jsoup.nodes.Element) document33, element37);
        org.jsoup.nodes.Document document44 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements46 = document44.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element48 = document44.text(" ");
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements53 = document51.getElementsContainingText("#data");
        boolean boolean54 = isOnlyOfType30.matches((org.jsoup.nodes.Element) document44, (org.jsoup.nodes.Element) document51);
        org.jsoup.nodes.Comment comment57 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean59 = comment57.hasAttr("hi!");
        org.jsoup.nodes.Document document61 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element63 = document61.toggleClass("");
        org.jsoup.nodes.Node node64 = document61.clone();
        org.jsoup.nodes.Node node65 = comment57.doClone(node64);
        java.lang.StringBuilder stringBuilder66 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings68 = null;
        comment57.outerHtmlTail(stringBuilder66, 10, outputSettings68);
        java.lang.String str70 = comment57.getData();
        java.lang.String str71 = comment57.nodeName();
        java.lang.StringBuilder stringBuilder72 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings74 = new org.jsoup.nodes.Document.OutputSettings();
        int int75 = outputSettings74.indentAmount();
        comment57.outerHtmlTail(stringBuilder72, 0, outputSettings74);
        boolean boolean77 = document51.equals((java.lang.Object) outputSettings74);
        textNode24.outerHtmlTail(stringBuilder28, (int) (short) 100, outputSettings74);
        documentType19.outerHtmlTail(stringBuilder20, (int) (short) 1, outputSettings74);
        java.lang.StringBuilder stringBuilder80 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings82 = new org.jsoup.nodes.Document.OutputSettings();
        int int83 = outputSettings82.indentAmount();
        documentType19.outerHtmlTail(stringBuilder80, 0, outputSettings82);
        org.jsoup.nodes.Entities.EscapeMode escapeMode85 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings86 = outputSettings82.escapeMode(escapeMode85);
        org.jsoup.nodes.Document.OutputSettings outputSettings88 = outputSettings86.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings90 = outputSettings86.prettyPrint(true);
        // The following exception was thrown during execution in test generation
        try {
            textNode2.outerHtmlHead(stringBuilder13, (int) (byte) 0, outputSettings90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(textNode2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "#root" + "'", str38, "#root");
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(elements46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(elements53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "#comment" + "'", str71, "#comment");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode85 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode85.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings86);
        org.junit.Assert.assertNotNull(outputSettings88);
        org.junit.Assert.assertNotNull(outputSettings90);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #319
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #52
27: ldc           #52
29: invokestatic  #132
32: astore_1
33: aload_1
34: getfield      #133
37: astore_2
38: aload_1
39: invokevirtual #61
42: astore_3
43: aload_1
44: invokevirtual #165
47: istore        4
49: aload_1
50: ldc_w         #320
53: invokevirtual #321
56: astore        5
58: aload_1
59: invokevirtual #322
62: astore        6
64: aload_1
65: ldc           #111
67: invokevirtual #249
70: istore        7
72: aload_1
73: invokevirtual #322
76: astore        8
78: aload_1
79: invokevirtual #61
82: astore        9
84: aconst_null
85: astore        10
87: new           #8
90: dup
91: ldc           #9
93: ldc           #10
95: ldc           #11
97: ldc           #9
99: invokespecial #12
102: astore        11
104: aconst_null
105: astore        12
107: new           #58
110: dup
111: ldc           #9
113: ldc           #59
115: invokespecial #60
118: astore        13
120: aload         13
122: invokevirtual #61
125: astore        14
127: aload         13
129: ldc           #62
131: invokevirtual #63
134: astore        15
136: aconst_null
137: astore        16
139: new           #64
142: dup
143: invokespecial #65
146: astore        17
148: ldc           #9
150: ldc           #9
152: invokestatic  #66
155: astore        18
157: ldc           #52
159: invokestatic  #53
162: astore        19
164: aload         19
166: ldc           #9
168: invokevirtual #54
171: astore        20
173: aload         20
175: invokevirtual #67
178: astore        21
180: aload         20
182: ldc           #9
184: invokevirtual #68
187: astore        22
189: aload         17
191: aload         18
193: aload         20
195: invokevirtual #69
198: istore        23
200: ldc           #59
202: ldc           #52
204: invokestatic  #70
207: astore        24
209: aload         24
211: bipush        100
213: invokevirtual #71
216: astore        25
218: aload         24
220: ldc           #72
222: invokevirtual #73
225: astore        26
227: ldc           #74
229: ldc           #52
231: invokestatic  #70
234: astore        27
236: aload         27
238: ldc           #75
240: invokevirtual #76
243: astore        28
245: aload         17
247: aload         24
249: aload         27
251: invokevirtual #69
254: istore        29
256: new           #77
259: dup
260: ldc           #52
262: ldc           #52
264: invokespecial #78
267: astore        30
269: aload         30
271: ldc           #52
273: invokevirtual #79
276: istore        31
278: ldc           #52
280: invokestatic  #53
283: astore        32
285: aload         32
287: ldc           #9
289: invokevirtual #54
292: astore        33
294: aload         32
296: invokevirtual #80
299: astore        34
301: aload         30
303: aload         34
305: invokevirtual #81
308: astore        35
310: aconst_null
311: astore        36
313: aconst_null
314: astore        37
316: aload         30
318: aload         36
320: bipush        10
322: aload         37
324: invokevirtual #82
327: aload         30
329: invokevirtual #83
332: astore        38
334: aload         30
336: invokevirtual #84
339: astore        39
341: aconst_null
342: astore        40
344: new           #13
347: dup
348: invokespecial #14
351: astore        41
353: aload         41
355: invokevirtual #15
358: istore        42
360: aload         30
362: aload         40
364: iconst_0
365: aload         41
367: invokevirtual #82
370: aload         27
372: aload         41
374: invokevirtual #85
377: istore        43
379: aload         13
381: aload         16
383: bipush        100
385: aload         41
387: invokevirtual #86
390: aload         11
392: aload         12
394: iconst_1
395: aload         41
397: invokevirtual #87
400: aconst_null
401: astore        44
403: new           #13
406: dup
407: invokespecial #14
410: astore        45
412: aload         45
414: invokevirtual #15
417: istore        46
419: aload         11
421: aload         44
423: iconst_0
424: aload         45
426: invokevirtual #87
429: getstatic     #127
432: astore        47
434: aload         45
436: aload         47
438: invokevirtual #22
441: astore        48
443: aload         48
445: iconst_0
446: invokevirtual #128
449: astore        49
451: aload         48
453: iconst_1
454: invokevirtual #128
457: astore        50
459: aload_1
460: aload         10
462: iconst_0
463: aload         50
465: invokevirtual #169
468: ldc           #24
470: invokestatic  #25
473: goto          478
476: astore        51
478: aload_1
479: invokestatic  #39
482: aload_2
483: invokestatic  #139
486: new           #27
489: dup
490: invokespecial #28
493: ldc           #29
495: invokevirtual #30
498: aload_3
499: invokevirtual #30
502: ldc           #93
504: invokevirtual #30
507: invokevirtual #33
510: aload_3
511: ldc           #52
513: invokestatic  #91
516: new           #27
519: dup
520: invokespecial #28
523: ldc           #29
525: invokevirtual #30
528: iload         4
530: invokevirtual #35
533: ldc           #32
535: invokevirtual #30
538: iconst_0
539: invokevirtual #35
542: ldc           #29
544: invokevirtual #30
547: invokevirtual #33
550: iload         4
552: ifne          559
555: iconst_1
556: goto          560
559: iconst_0
560: invokestatic  #34
563: new           #27
566: dup
567: invokespecial #28
570: ldc           #29
572: invokevirtual #30
575: aload         5
577: invokevirtual #30
580: ldc           #90
582: invokevirtual #30
585: invokevirtual #33
588: aload         5
590: ldc           #9
592: invokestatic  #91
595: new           #27
598: dup
599: invokespecial #28
602: ldc           #29
604: invokevirtual #30
607: aload         6
609: invokevirtual #30
612: ldc           #93
614: invokevirtual #30
617: invokevirtual #33
620: aload         6
622: ldc           #52
624: invokestatic  #91
627: new           #27
630: dup
631: invokespecial #28
634: ldc           #29
636: invokevirtual #30
639: iload         7
641: invokevirtual #35
644: ldc           #32
646: invokevirtual #30
649: iconst_0
650: invokevirtual #35
653: ldc           #29
655: invokevirtual #30
658: invokevirtual #33
661: iload         7
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #34
674: new           #27
677: dup
678: invokespecial #28
681: ldc           #29
683: invokevirtual #30
686: aload         8
688: invokevirtual #30
691: ldc           #93
693: invokevirtual #30
696: invokevirtual #33
699: aload         8
701: ldc           #52
703: invokestatic  #91
706: new           #27
709: dup
710: invokespecial #28
713: ldc           #29
715: invokevirtual #30
718: aload         9
720: invokevirtual #30
723: ldc           #93
725: invokevirtual #30
728: invokevirtual #33
731: aload         9
733: ldc           #52
735: invokestatic  #91
738: new           #27
741: dup
742: invokespecial #28
745: ldc           #29
747: invokevirtual #30
750: aload         14
752: invokevirtual #30
755: ldc           #90
757: invokevirtual #30
760: invokevirtual #33
763: aload         14
765: ldc           #9
767: invokestatic  #91
770: new           #27
773: dup
774: invokespecial #28
777: ldc           #29
779: invokevirtual #30
782: aload         15
784: invokevirtual #30
787: ldc           #90
789: invokevirtual #30
792: invokevirtual #33
795: aload         15
797: ldc           #9
799: invokestatic  #91
802: aload         18
804: invokestatic  #39
807: aload         19
809: invokestatic  #39
812: aload         20
814: invokestatic  #39
817: new           #27
820: dup
821: invokespecial #28
824: ldc           #29
826: invokevirtual #30
829: aload         21
831: invokevirtual #30
834: ldc           #92
836: invokevirtual #30
839: invokevirtual #33
842: aload         21
844: ldc           #17
846: invokestatic  #91
849: aload         22
851: invokestatic  #39
854: new           #27
857: dup
858: invokespecial #28
861: ldc           #29
863: invokevirtual #30
866: iload         23
868: invokevirtual #35
871: ldc           #32
873: invokevirtual #30
876: iconst_0
877: invokevirtual #35
880: ldc           #29
882: invokevirtual #30
885: invokevirtual #33
888: iload         23
890: ifne          897
893: iconst_1
894: goto          898
897: iconst_0
898: invokestatic  #34
901: aload         24
903: invokestatic  #39
906: aload         25
908: invokestatic  #39
911: aload         26
913: invokestatic  #39
916: aload         27
918: invokestatic  #39
921: aload         28
923: invokestatic  #39
926: new           #27
929: dup
930: invokespecial #28
933: ldc           #29
935: invokevirtual #30
938: iload         29
940: invokevirtual #35
943: ldc           #32
945: invokevirtual #30
948: iconst_0
949: invokevirtual #35
952: ldc           #29
954: invokevirtual #30
957: invokevirtual #33
960: iload         29
962: ifne          969
965: iconst_1
966: goto          970
969: iconst_0
970: invokestatic  #34
973: new           #27
976: dup
977: invokespecial #28
980: ldc           #29
982: invokevirtual #30
985: iload         31
987: invokevirtual #35
990: ldc           #32
992: invokevirtual #30
995: iconst_0
996: invokevirtual #35
999: ldc           #29
1001: invokevirtual #30
1004: invokevirtual #33
1007: iload         31
1009: ifne          1016
1012: iconst_1
1013: goto          1017
1016: iconst_0
1017: invokestatic  #34
1020: aload         32
1022: invokestatic  #39
1025: aload         33
1027: invokestatic  #39
1030: aload         34
1032: invokestatic  #39
1035: aload         35
1037: invokestatic  #39
1040: new           #27
1043: dup
1044: invokespecial #28
1047: ldc           #29
1049: invokevirtual #30
1052: aload         38
1054: invokevirtual #30
1057: ldc           #93
1059: invokevirtual #30
1062: invokevirtual #33
1065: aload         38
1067: ldc           #52
1069: invokestatic  #91
1072: new           #27
1075: dup
1076: invokespecial #28
1079: ldc           #29
1081: invokevirtual #30
1084: aload         39
1086: invokevirtual #30
1089: ldc           #94
1091: invokevirtual #30
1094: invokevirtual #33
1097: aload         39
1099: ldc           #95
1101: invokestatic  #91
1104: new           #27
1107: dup
1108: invokespecial #28
1111: ldc           #29
1113: invokevirtual #30
1116: iload         42
1118: invokevirtual #31
1121: ldc           #32
1123: invokevirtual #30
1126: iconst_1
1127: invokevirtual #31
1130: ldc           #29
1132: invokevirtual #30
1135: invokevirtual #33
1138: iload         42
1140: iconst_1
1141: if_icmpne     1148
1144: iconst_1
1145: goto          1149
1148: iconst_0
1149: invokestatic  #34
1152: new           #27
1155: dup
1156: invokespecial #28
1159: ldc           #29
1161: invokevirtual #30
1164: iload         43
1166: invokevirtual #35
1169: ldc           #32
1171: invokevirtual #30
1174: iconst_0
1175: invokevirtual #35
1178: ldc           #29
1180: invokevirtual #30
1183: invokevirtual #33
1186: iload         43
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #34
1199: new           #27
1202: dup
1203: invokespecial #28
1206: ldc           #29
1208: invokevirtual #30
1211: iload         46
1213: invokevirtual #31
1216: ldc           #32
1218: invokevirtual #30
1221: iconst_1
1222: invokevirtual #31
1225: ldc           #29
1227: invokevirtual #30
1230: invokevirtual #33
1233: iload         46
1235: iconst_1
1236: if_icmpne     1243
1239: iconst_1
1240: goto          1244
1243: iconst_0
1244: invokestatic  #34
1247: new           #27
1250: dup
1251: invokespecial #28
1254: ldc           #29
1256: invokevirtual #30
1259: aload         47
1261: invokevirtual #36
1264: ldc           #32
1266: invokevirtual #30
1269: getstatic     #127
1272: invokevirtual #36
1275: ldc           #29
1277: invokevirtual #30
1280: invokevirtual #33
1283: aload         47
1285: getstatic     #127
1288: invokevirtual #38
1291: invokestatic  #34
1294: aload         48
1296: invokestatic  #39
1299: aload         49
1301: invokestatic  #39
1304: aload         50
1306: invokestatic  #39
1309: return
Exception table:
from    to  target type
459   473   476   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test68
Start line: 4044
End line: 4124
Method source code: 
    public void test68() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test68");
        org.jsoup.nodes.DocumentType documentType5 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str11 = textNode10.getWholeText();
        java.lang.String str13 = textNode10.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType16 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document19 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element23 = document21.toggleClass("");
        java.lang.String str24 = element23.tagName();
        org.jsoup.nodes.Element element26 = element23.toggleClass("");
        boolean boolean27 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document19, element23);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements32 = document30.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element34 = document30.text(" ");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements39 = document37.getElementsContainingText("#data");
        boolean boolean40 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document37);
        org.jsoup.nodes.Comment comment43 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean45 = comment43.hasAttr("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element49 = document47.toggleClass("");
        org.jsoup.nodes.Node node50 = document47.clone();
        org.jsoup.nodes.Node node51 = comment43.doClone(node50);
        java.lang.StringBuilder stringBuilder52 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = null;
        comment43.outerHtmlTail(stringBuilder52, 10, outputSettings54);
        java.lang.String str56 = comment43.getData();
        java.lang.String str57 = comment43.nodeName();
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = new org.jsoup.nodes.Document.OutputSettings();
        int int61 = outputSettings60.indentAmount();
        comment43.outerHtmlTail(stringBuilder58, 0, outputSettings60);
        boolean boolean63 = document37.equals((java.lang.Object) outputSettings60);
        textNode10.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings60);
        documentType5.outerHtmlTail(stringBuilder6, (int) (short) 1, outputSettings60);
        java.lang.StringBuilder stringBuilder66 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings68 = new org.jsoup.nodes.Document.OutputSettings();
        int int69 = outputSettings68.indentAmount();
        documentType5.outerHtmlTail(stringBuilder66, 0, outputSettings68);
        org.jsoup.nodes.Entities.EscapeMode escapeMode71 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = outputSettings68.escapeMode(escapeMode71);
        org.jsoup.nodes.Document.OutputSettings outputSettings74 = outputSettings72.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = outputSettings72.prettyPrint(true);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings76.outline(false);
        java.lang.String str79 = org.jsoup.nodes.Entities.escape(":eq(10)", outputSettings78);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#root" + "'", str24, "#root");
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode71 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode71.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings72);
        org.junit.Assert.assertNotNull(outputSettings74);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(outputSettings78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ":eq(10)" + "'", str79, ":eq(10)");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #323
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: getstatic     #127
361: astore        37
363: aload         35
365: aload         37
367: invokevirtual #22
370: astore        38
372: aload         38
374: iconst_0
375: invokevirtual #128
378: astore        39
380: aload         38
382: iconst_1
383: invokevirtual #128
386: astore        40
388: aload         40
390: iconst_0
391: invokevirtual #44
394: astore        41
396: ldc_w         #312
399: aload         41
401: invokestatic  #112
404: astore        42
406: new           #27
409: dup
410: invokespecial #28
413: ldc           #29
415: invokevirtual #30
418: aload         4
420: invokevirtual #30
423: ldc           #90
425: invokevirtual #30
428: invokevirtual #33
431: aload         4
433: ldc           #9
435: invokestatic  #91
438: new           #27
441: dup
442: invokespecial #28
445: ldc           #29
447: invokevirtual #30
450: aload         5
452: invokevirtual #30
455: ldc           #90
457: invokevirtual #30
460: invokevirtual #33
463: aload         5
465: ldc           #9
467: invokestatic  #91
470: aload         8
472: invokestatic  #39
475: aload         9
477: invokestatic  #39
480: aload         10
482: invokestatic  #39
485: new           #27
488: dup
489: invokespecial #28
492: ldc           #29
494: invokevirtual #30
497: aload         11
499: invokevirtual #30
502: ldc           #92
504: invokevirtual #30
507: invokevirtual #33
510: aload         11
512: ldc           #17
514: invokestatic  #91
517: aload         12
519: invokestatic  #39
522: new           #27
525: dup
526: invokespecial #28
529: ldc           #29
531: invokevirtual #30
534: iload         13
536: invokevirtual #35
539: ldc           #32
541: invokevirtual #30
544: iconst_0
545: invokevirtual #35
548: ldc           #29
550: invokevirtual #30
553: invokevirtual #33
556: iload         13
558: ifne          565
561: iconst_1
562: goto          566
565: iconst_0
566: invokestatic  #34
569: aload         14
571: invokestatic  #39
574: aload         15
576: invokestatic  #39
579: aload         16
581: invokestatic  #39
584: aload         17
586: invokestatic  #39
589: aload         18
591: invokestatic  #39
594: new           #27
597: dup
598: invokespecial #28
601: ldc           #29
603: invokevirtual #30
606: iload         19
608: invokevirtual #35
611: ldc           #32
613: invokevirtual #30
616: iconst_0
617: invokevirtual #35
620: ldc           #29
622: invokevirtual #30
625: invokevirtual #33
628: iload         19
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #34
641: new           #27
644: dup
645: invokespecial #28
648: ldc           #29
650: invokevirtual #30
653: iload         21
655: invokevirtual #35
658: ldc           #32
660: invokevirtual #30
663: iconst_0
664: invokevirtual #35
667: ldc           #29
669: invokevirtual #30
672: invokevirtual #33
675: iload         21
677: ifne          684
680: iconst_1
681: goto          685
684: iconst_0
685: invokestatic  #34
688: aload         22
690: invokestatic  #39
693: aload         23
695: invokestatic  #39
698: aload         24
700: invokestatic  #39
703: aload         25
705: invokestatic  #39
708: new           #27
711: dup
712: invokespecial #28
715: ldc           #29
717: invokevirtual #30
720: aload         28
722: invokevirtual #30
725: ldc           #93
727: invokevirtual #30
730: invokevirtual #33
733: aload         28
735: ldc           #52
737: invokestatic  #91
740: new           #27
743: dup
744: invokespecial #28
747: ldc           #29
749: invokevirtual #30
752: aload         29
754: invokevirtual #30
757: ldc           #94
759: invokevirtual #30
762: invokevirtual #33
765: aload         29
767: ldc           #95
769: invokestatic  #91
772: new           #27
775: dup
776: invokespecial #28
779: ldc           #29
781: invokevirtual #30
784: iload         32
786: invokevirtual #31
789: ldc           #32
791: invokevirtual #30
794: iconst_1
795: invokevirtual #31
798: ldc           #29
800: invokevirtual #30
803: invokevirtual #33
806: iload         32
808: iconst_1
809: if_icmpne     816
812: iconst_1
813: goto          817
816: iconst_0
817: invokestatic  #34
820: new           #27
823: dup
824: invokespecial #28
827: ldc           #29
829: invokevirtual #30
832: iload         33
834: invokevirtual #35
837: ldc           #32
839: invokevirtual #30
842: iconst_0
843: invokevirtual #35
846: ldc           #29
848: invokevirtual #30
851: invokevirtual #33
854: iload         33
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #34
867: new           #27
870: dup
871: invokespecial #28
874: ldc           #29
876: invokevirtual #30
879: iload         36
881: invokevirtual #31
884: ldc           #32
886: invokevirtual #30
889: iconst_1
890: invokevirtual #31
893: ldc           #29
895: invokevirtual #30
898: invokevirtual #33
901: iload         36
903: iconst_1
904: if_icmpne     911
907: iconst_1
908: goto          912
911: iconst_0
912: invokestatic  #34
915: new           #27
918: dup
919: invokespecial #28
922: ldc           #29
924: invokevirtual #30
927: aload         37
929: invokevirtual #36
932: ldc           #32
934: invokevirtual #30
937: getstatic     #127
940: invokevirtual #36
943: ldc           #29
945: invokevirtual #30
948: invokevirtual #33
951: aload         37
953: getstatic     #127
956: invokevirtual #38
959: invokestatic  #34
962: aload         38
964: invokestatic  #39
967: aload         39
969: invokestatic  #39
972: aload         40
974: invokestatic  #39
977: aload         41
979: invokestatic  #39
982: new           #27
985: dup
986: invokespecial #28
989: ldc           #29
991: invokevirtual #30
994: aload         42
996: invokevirtual #30
999: ldc_w         #324
1002: invokevirtual #30
1005: invokevirtual #33
1008: aload         42
1010: ldc_w         #312
1013: invokestatic  #91
1016: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test69
Start line: 4127
End line: 4220
Method source code: 
    public void test69() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test69");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "[data-*=hi!]", ":nth-of-type(1n+1)", ":nth-of-type(10n+10)");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node11 = textNode10.parentNode;
        java.lang.String str12 = textNode10.nodeName();
        java.lang.String str13 = textNode10.nodeName();
        textNode10.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes16 = textNode10.attributes();
        java.lang.StringBuilder stringBuilder17 = null;
        org.jsoup.nodes.Attribute attribute21 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean23 = attribute21.shouldCollapseAttribute(outputSettings22);
        org.jsoup.nodes.Entities.EscapeMode escapeMode24 = outputSettings22.escapeMode();
        textNode10.outerHtmlTail(stringBuilder17, (int) (short) -1, outputSettings22);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax26 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings22.syntax(syntax26);
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings22.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings30 = outputSettings22.outline(true);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax31 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = outputSettings30.syntax(syntax31);
        org.jsoup.parser.Parser parser36 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean37 = parser36.isTrackErrors();
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse(" ", "#text", parser36);
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document38.getOutputSettings();
        java.lang.String str40 = org.jsoup.nodes.Entities.escape(":empty", outputSettings39);
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = outputSettings39.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode43 = outputSettings39.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = outputSettings30.escapeMode(escapeMode43);
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = new org.jsoup.nodes.Document.OutputSettings();
        int int46 = outputSettings45.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder47 = outputSettings45.encoder();
        org.jsoup.nodes.Comment comment50 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean52 = comment50.hasAttr("hi!");
        org.jsoup.nodes.Document document54 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element56 = document54.toggleClass("");
        org.jsoup.nodes.Node node57 = document54.clone();
        org.jsoup.nodes.Node node58 = comment50.doClone(node57);
        java.lang.StringBuilder stringBuilder59 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings61 = null;
        comment50.outerHtmlTail(stringBuilder59, 10, outputSettings61);
        java.lang.String str63 = comment50.getData();
        java.lang.String str64 = comment50.nodeName();
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        comment50.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = outputSettings67.escapeMode();
        java.util.Map<java.lang.Character, java.lang.String> charMap71 = escapeMode70.getMap();
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = outputSettings45.escapeMode(escapeMode70);
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = outputSettings44.escapeMode(escapeMode70);
        documentType4.outerHtmlTail(stringBuilder6, (int) (byte) 10, outputSettings44);
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = outputSettings44.prettyPrint(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertNotNull(textNode10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#text" + "'", str12, "#text");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#text" + "'", str13, "#text");
        org.junit.Assert.assertNotNull(attributes16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + escapeMode24 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode24.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax26 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax26.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(outputSettings30);
        org.junit.Assert.assertTrue("'" + syntax31 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax31.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings32);
        org.junit.Assert.assertNotNull(parser36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":empty" + "'", str40, ":empty");
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + escapeMode43 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode43.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(document54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#comment" + "'", str64, "#comment");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(charMap71);
        org.junit.Assert.assertNotNull(outputSettings72);
        org.junit.Assert.assertNotNull(outputSettings73);
        org.junit.Assert.assertNotNull(outputSettings76);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #325
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc_w         #326
34: ldc           #176
36: ldc_w         #327
39: invokespecial #12
42: astore_1
43: aload_1
44: invokevirtual #97
47: astore_2
48: aconst_null
49: astore_3
50: ldc           #52
52: ldc           #52
54: invokestatic  #132
57: astore        4
59: aload         4
61: getfield      #133
64: astore        5
66: aload         4
68: invokevirtual #134
71: astore        6
73: aload         4
75: invokevirtual #134
78: astore        7
80: aload         4
82: ldc           #135
84: invokevirtual #136
87: aload         4
89: invokevirtual #137
92: astore        8
94: aconst_null
95: astore        9
97: new           #16
100: dup
101: ldc           #17
103: ldc           #18
105: invokespecial #19
108: astore        10
110: new           #13
113: dup
114: invokespecial #14
117: astore        11
119: aload         10
121: aload         11
123: invokevirtual #20
126: istore        12
128: aload         11
130: invokevirtual #21
133: astore        13
135: aload         4
137: aload         9
139: iconst_m1
140: aload         11
142: invokevirtual #86
145: getstatic     #49
148: astore        14
150: aload         11
152: aload         14
154: invokevirtual #138
157: astore        15
159: aload         11
161: invokevirtual #215
164: astore        16
166: aload         11
168: iconst_1
169: invokevirtual #44
172: astore        17
174: getstatic     #49
177: astore        18
179: aload         17
181: aload         18
183: invokevirtual #138
186: astore        19
188: invokestatic  #98
191: astore        20
193: aload         20
195: invokevirtual #99
198: istore        21
200: ldc           #72
202: ldc           #74
204: aload         20
206: invokestatic  #100
209: astore        22
211: aload         22
213: invokevirtual #101
216: astore        23
218: ldc           #212
220: aload         23
222: invokestatic  #112
225: astore        24
227: aload         23
229: iconst_0
230: invokevirtual #128
233: astore        25
235: aload         23
237: invokevirtual #21
240: astore        26
242: aload         17
244: aload         26
246: invokevirtual #22
249: astore        27
251: new           #13
254: dup
255: invokespecial #14
258: astore        28
260: aload         28
262: invokevirtual #15
265: istore        29
267: aload         28
269: invokevirtual #146
272: astore        30
274: new           #77
277: dup
278: ldc           #52
280: ldc           #52
282: invokespecial #78
285: astore        31
287: aload         31
289: ldc           #52
291: invokevirtual #79
294: istore        32
296: ldc           #52
298: invokestatic  #53
301: astore        33
303: aload         33
305: ldc           #9
307: invokevirtual #54
310: astore        34
312: aload         33
314: invokevirtual #80
317: astore        35
319: aload         31
321: aload         35
323: invokevirtual #81
326: astore        36
328: aconst_null
329: astore        37
331: aconst_null
332: astore        38
334: aload         31
336: aload         37
338: bipush        10
340: aload         38
342: invokevirtual #82
345: aload         31
347: invokevirtual #83
350: astore        39
352: aload         31
354: invokevirtual #84
357: astore        40
359: aconst_null
360: astore        41
362: new           #13
365: dup
366: invokespecial #14
369: astore        42
371: aload         42
373: invokevirtual #15
376: istore        43
378: aload         31
380: aload         41
382: iconst_0
383: aload         42
385: invokevirtual #82
388: aload         42
390: invokevirtual #21
393: astore        44
395: aload         44
397: invokevirtual #46
400: astore        45
402: aload         28
404: aload         44
406: invokevirtual #22
409: astore        46
411: aload         27
413: aload         44
415: invokevirtual #22
418: astore        47
420: aload_1
421: aload_3
422: bipush        10
424: aload         27
426: invokevirtual #87
429: aload         27
431: iconst_0
432: invokevirtual #128
435: astore        48
437: new           #27
440: dup
441: invokespecial #28
444: ldc           #29
446: invokevirtual #30
449: aload_2
450: invokevirtual #30
453: ldc           #102
455: invokevirtual #30
458: invokevirtual #33
461: aload_2
462: ldc           #103
464: invokestatic  #91
467: aload         4
469: invokestatic  #39
472: aload         5
474: invokestatic  #139
477: new           #27
480: dup
481: invokespecial #28
484: ldc           #29
486: invokevirtual #30
489: aload         6
491: invokevirtual #30
494: ldc           #140
496: invokevirtual #30
499: invokevirtual #33
502: aload         6
504: ldc           #74
506: invokestatic  #91
509: new           #27
512: dup
513: invokespecial #28
516: ldc           #29
518: invokevirtual #30
521: aload         7
523: invokevirtual #30
526: ldc           #140
528: invokevirtual #30
531: invokevirtual #33
534: aload         7
536: ldc           #74
538: invokestatic  #91
541: aload         8
543: invokestatic  #39
546: new           #27
549: dup
550: invokespecial #28
553: ldc           #29
555: invokevirtual #30
558: iload         12
560: invokevirtual #35
563: ldc           #32
565: invokevirtual #30
568: iconst_0
569: invokevirtual #35
572: ldc           #29
574: invokevirtual #30
577: invokevirtual #33
580: iload         12
582: ifne          589
585: iconst_1
586: goto          590
589: iconst_0
590: invokestatic  #34
593: new           #27
596: dup
597: invokespecial #28
600: ldc           #29
602: invokevirtual #30
605: aload         13
607: invokevirtual #36
610: ldc           #32
612: invokevirtual #30
615: getstatic     #37
618: invokevirtual #36
621: ldc           #29
623: invokevirtual #30
626: invokevirtual #33
629: aload         13
631: getstatic     #37
634: invokevirtual #38
637: invokestatic  #34
640: new           #27
643: dup
644: invokespecial #28
647: ldc           #29
649: invokevirtual #30
652: aload         14
654: invokevirtual #36
657: ldc           #32
659: invokevirtual #30
662: getstatic     #49
665: invokevirtual #36
668: ldc           #29
670: invokevirtual #30
673: invokevirtual #33
676: aload         14
678: getstatic     #49
681: invokevirtual #50
684: invokestatic  #34
687: aload         15
689: invokestatic  #39
692: aload         16
694: invokestatic  #39
697: aload         17
699: invokestatic  #39
702: new           #27
705: dup
706: invokespecial #28
709: ldc           #29
711: invokevirtual #30
714: aload         18
716: invokevirtual #36
719: ldc           #32
721: invokevirtual #30
724: getstatic     #49
727: invokevirtual #36
730: ldc           #29
732: invokevirtual #30
735: invokevirtual #33
738: aload         18
740: getstatic     #49
743: invokevirtual #50
746: invokestatic  #34
749: aload         19
751: invokestatic  #39
754: aload         20
756: invokestatic  #39
759: new           #27
762: dup
763: invokespecial #28
766: ldc           #29
768: invokevirtual #30
771: iload         21
773: invokevirtual #35
776: ldc           #32
778: invokevirtual #30
781: iconst_0
782: invokevirtual #35
785: ldc           #29
787: invokevirtual #30
790: invokevirtual #33
793: iload         21
795: ifne          802
798: iconst_1
799: goto          803
802: iconst_0
803: invokestatic  #34
806: aload         22
808: invokestatic  #39
811: aload         23
813: invokestatic  #39
816: new           #27
819: dup
820: invokespecial #28
823: ldc           #29
825: invokevirtual #30
828: aload         24
830: invokevirtual #30
833: ldc           #213
835: invokevirtual #30
838: invokevirtual #33
841: aload         24
843: ldc           #212
845: invokestatic  #91
848: aload         25
850: invokestatic  #39
853: new           #27
856: dup
857: invokespecial #28
860: ldc           #29
862: invokevirtual #30
865: aload         26
867: invokevirtual #36
870: ldc           #32
872: invokevirtual #30
875: getstatic     #37
878: invokevirtual #36
881: ldc           #29
883: invokevirtual #30
886: invokevirtual #33
889: aload         26
891: getstatic     #37
894: invokevirtual #38
897: invokestatic  #34
900: aload         27
902: invokestatic  #39
905: new           #27
908: dup
909: invokespecial #28
912: ldc           #29
914: invokevirtual #30
917: iload         29
919: invokevirtual #31
922: ldc           #32
924: invokevirtual #30
927: iconst_1
928: invokevirtual #31
931: ldc           #29
933: invokevirtual #30
936: invokevirtual #33
939: iload         29
941: iconst_1
942: if_icmpne     949
945: iconst_1
946: goto          950
949: iconst_0
950: invokestatic  #34
953: aload         30
955: invokestatic  #39
958: new           #27
961: dup
962: invokespecial #28
965: ldc           #29
967: invokevirtual #30
970: iload         32
972: invokevirtual #35
975: ldc           #32
977: invokevirtual #30
980: iconst_0
981: invokevirtual #35
984: ldc           #29
986: invokevirtual #30
989: invokevirtual #33
992: iload         32
994: ifne          1001
997: iconst_1
998: goto          1002
1001: iconst_0
1002: invokestatic  #34
1005: aload         33
1007: invokestatic  #39
1010: aload         34
1012: invokestatic  #39
1015: aload         35
1017: invokestatic  #39
1020: aload         36
1022: invokestatic  #39
1025: new           #27
1028: dup
1029: invokespecial #28
1032: ldc           #29
1034: invokevirtual #30
1037: aload         39
1039: invokevirtual #30
1042: ldc           #93
1044: invokevirtual #30
1047: invokevirtual #33
1050: aload         39
1052: ldc           #52
1054: invokestatic  #91
1057: new           #27
1060: dup
1061: invokespecial #28
1064: ldc           #29
1066: invokevirtual #30
1069: aload         40
1071: invokevirtual #30
1074: ldc           #94
1076: invokevirtual #30
1079: invokevirtual #33
1082: aload         40
1084: ldc           #95
1086: invokestatic  #91
1089: new           #27
1092: dup
1093: invokespecial #28
1096: ldc           #29
1098: invokevirtual #30
1101: iload         43
1103: invokevirtual #31
1106: ldc           #32
1108: invokevirtual #30
1111: iconst_1
1112: invokevirtual #31
1115: ldc           #29
1117: invokevirtual #30
1120: invokevirtual #33
1123: iload         43
1125: iconst_1
1126: if_icmpne     1133
1129: iconst_1
1130: goto          1134
1133: iconst_0
1134: invokestatic  #34
1137: new           #27
1140: dup
1141: invokespecial #28
1144: ldc           #29
1146: invokevirtual #30
1149: aload         44
1151: invokevirtual #36
1154: ldc           #32
1156: invokevirtual #30
1159: getstatic     #37
1162: invokevirtual #36
1165: ldc           #29
1167: invokevirtual #30
1170: invokevirtual #33
1173: aload         44
1175: getstatic     #37
1178: invokevirtual #38
1181: invokestatic  #34
1184: aload         45
1186: invokestatic  #39
1189: aload         46
1191: invokestatic  #39
1194: aload         47
1196: invokestatic  #39
1199: aload         48
1201: invokestatic  #39
1204: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test70
Start line: 4223
End line: 4263
Method source code: 
    public void test70() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test70");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[^]\n<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "[hi!*=#root]", ":matches(null", ":nth-of-type(1n+1)");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Comment comment9 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean11 = comment9.hasAttr("hi!");
        java.lang.String str12 = comment9.nodeName();
        org.jsoup.nodes.Node node13 = comment9.parent();
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.nodes.Attribute attribute18 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean20 = attribute18.shouldCollapseAttribute(outputSettings19);
        org.jsoup.nodes.Entities.EscapeMode escapeMode21 = outputSettings19.escapeMode();
        comment9.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings19);
        java.nio.charset.Charset charset23 = outputSettings19.charset();
        java.nio.charset.Charset charset24 = outputSettings19.charset();
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = new org.jsoup.nodes.Document.OutputSettings();
        int int26 = outputSettings25.indentAmount();
        org.jsoup.nodes.Attribute attribute29 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings30 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean31 = attribute29.shouldCollapseAttribute(outputSettings30);
        org.jsoup.nodes.Entities.EscapeMode escapeMode32 = outputSettings30.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings33 = outputSettings25.escapeMode(escapeMode32);
        org.jsoup.nodes.Document.OutputSettings outputSettings34 = outputSettings19.escapeMode(escapeMode32);
        documentType4.outerHtmlTail(stringBuilder5, 0, outputSettings19);
        boolean boolean36 = outputSettings19.prettyPrint();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#comment" + "'", str12, "#comment");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + escapeMode21 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode21.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(charset23);
        org.junit.Assert.assertNotNull(charset24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + escapeMode32 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode32.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings33);
        org.junit.Assert.assertNotNull(outputSettings34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #328
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #173
31: ldc           #174
33: ldc           #175
35: ldc           #176
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #77
46: dup
47: ldc           #52
49: ldc           #52
51: invokespecial #78
54: astore_3
55: aload_3
56: ldc           #52
58: invokevirtual #79
61: istore        4
63: aload_3
64: invokevirtual #84
67: astore        5
69: aload_3
70: invokevirtual #269
73: astore        6
75: aconst_null
76: astore        7
78: new           #16
81: dup
82: ldc           #17
84: ldc           #18
86: invokespecial #19
89: astore        8
91: new           #13
94: dup
95: invokespecial #14
98: astore        9
100: aload         8
102: aload         9
104: invokevirtual #20
107: istore        10
109: aload         9
111: invokevirtual #21
114: astore        11
116: aload_3
117: aload         7
119: bipush        100
121: aload         9
123: invokevirtual #82
126: aload         9
128: invokevirtual #129
131: astore        12
133: aload         9
135: invokevirtual #129
138: astore        13
140: new           #13
143: dup
144: invokespecial #14
147: astore        14
149: aload         14
151: invokevirtual #15
154: istore        15
156: new           #16
159: dup
160: ldc           #17
162: ldc           #18
164: invokespecial #19
167: astore        16
169: new           #13
172: dup
173: invokespecial #14
176: astore        17
178: aload         16
180: aload         17
182: invokevirtual #20
185: istore        18
187: aload         17
189: invokevirtual #21
192: astore        19
194: aload         14
196: aload         19
198: invokevirtual #22
201: astore        20
203: aload         9
205: aload         19
207: invokevirtual #22
210: astore        21
212: aload_1
213: aload_2
214: iconst_0
215: aload         9
217: invokevirtual #87
220: aload         9
222: invokevirtual #289
225: istore        22
227: new           #27
230: dup
231: invokespecial #28
234: ldc           #29
236: invokevirtual #30
239: iload         4
241: invokevirtual #35
244: ldc           #32
246: invokevirtual #30
249: iconst_0
250: invokevirtual #35
253: ldc           #29
255: invokevirtual #30
258: invokevirtual #33
261: iload         4
263: ifne          270
266: iconst_1
267: goto          271
270: iconst_0
271: invokestatic  #34
274: new           #27
277: dup
278: invokespecial #28
281: ldc           #29
283: invokevirtual #30
286: aload         5
288: invokevirtual #30
291: ldc           #94
293: invokevirtual #30
296: invokevirtual #33
299: aload         5
301: ldc           #95
303: invokestatic  #91
306: aload         6
308: invokestatic  #139
311: new           #27
314: dup
315: invokespecial #28
318: ldc           #29
320: invokevirtual #30
323: iload         10
325: invokevirtual #35
328: ldc           #32
330: invokevirtual #30
333: iconst_0
334: invokevirtual #35
337: ldc           #29
339: invokevirtual #30
342: invokevirtual #33
345: iload         10
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #34
358: new           #27
361: dup
362: invokespecial #28
365: ldc           #29
367: invokevirtual #30
370: aload         11
372: invokevirtual #36
375: ldc           #32
377: invokevirtual #30
380: getstatic     #37
383: invokevirtual #36
386: ldc           #29
388: invokevirtual #30
391: invokevirtual #33
394: aload         11
396: getstatic     #37
399: invokevirtual #38
402: invokestatic  #34
405: aload         12
407: invokestatic  #39
410: aload         13
412: invokestatic  #39
415: new           #27
418: dup
419: invokespecial #28
422: ldc           #29
424: invokevirtual #30
427: iload         15
429: invokevirtual #31
432: ldc           #32
434: invokevirtual #30
437: iconst_1
438: invokevirtual #31
441: ldc           #29
443: invokevirtual #30
446: invokevirtual #33
449: iload         15
451: iconst_1
452: if_icmpne     459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #34
463: new           #27
466: dup
467: invokespecial #28
470: ldc           #29
472: invokevirtual #30
475: iload         18
477: invokevirtual #35
480: ldc           #32
482: invokevirtual #30
485: iconst_0
486: invokevirtual #35
489: ldc           #29
491: invokevirtual #30
494: invokevirtual #33
497: iload         18
499: ifne          506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #34
510: new           #27
513: dup
514: invokespecial #28
517: ldc           #29
519: invokevirtual #30
522: aload         19
524: invokevirtual #36
527: ldc           #32
529: invokevirtual #30
532: getstatic     #37
535: invokevirtual #36
538: ldc           #29
540: invokevirtual #30
543: invokevirtual #33
546: aload         19
548: getstatic     #37
551: invokevirtual #38
554: invokestatic  #34
557: aload         20
559: invokestatic  #39
562: aload         21
564: invokestatic  #39
567: new           #27
570: dup
571: invokespecial #28
574: ldc           #29
576: invokevirtual #30
579: iload         22
581: invokevirtual #35
584: ldc           #32
586: invokevirtual #30
589: iconst_1
590: invokevirtual #35
593: ldc           #29
595: invokevirtual #30
598: invokevirtual #33
601: iload         22
603: iconst_1
604: if_icmpne     611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #34
615: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test71
Start line: 4266
End line: 4348
Method source code: 
    public void test71() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test71");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode9 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str10 = textNode9.getWholeText();
        java.lang.String str12 = textNode9.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder13 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType15 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document18 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element22 = document20.toggleClass("");
        java.lang.String str23 = element22.tagName();
        org.jsoup.nodes.Element element25 = element22.toggleClass("");
        boolean boolean26 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document18, element22);
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements31 = document29.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element33 = document29.text(" ");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements38 = document36.getElementsContainingText("#data");
        boolean boolean39 = isOnlyOfType15.matches((org.jsoup.nodes.Element) document29, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Comment comment42 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean44 = comment42.hasAttr("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element48 = document46.toggleClass("");
        org.jsoup.nodes.Node node49 = document46.clone();
        org.jsoup.nodes.Node node50 = comment42.doClone(node49);
        java.lang.StringBuilder stringBuilder51 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = null;
        comment42.outerHtmlTail(stringBuilder51, 10, outputSettings53);
        java.lang.String str55 = comment42.getData();
        java.lang.String str56 = comment42.nodeName();
        java.lang.StringBuilder stringBuilder57 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = new org.jsoup.nodes.Document.OutputSettings();
        int int60 = outputSettings59.indentAmount();
        comment42.outerHtmlTail(stringBuilder57, 0, outputSettings59);
        boolean boolean62 = document36.equals((java.lang.Object) outputSettings59);
        textNode9.outerHtmlTail(stringBuilder13, (int) (short) 100, outputSettings59);
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) 1, outputSettings59);
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        documentType4.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings67.escapeMode(escapeMode70);
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = outputSettings71.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode74 = outputSettings73.escapeMode();
        java.util.Map<java.lang.Character, java.lang.String> charMap75 = escapeMode74.getMap();
        java.util.Map<java.lang.Character, java.lang.String> charMap76 = escapeMode74.getMap();
        java.util.Map<java.lang.Character, java.lang.String> charMap77 = escapeMode74.getMap();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#root" + "'", str23, "#root");
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#comment" + "'", str56, "#comment");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertNotNull(outputSettings73);
        org.junit.Assert.assertTrue("'" + escapeMode74 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode74.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(charMap75);
        org.junit.Assert.assertNotNull(charMap76);
        org.junit.Assert.assertNotNull(charMap77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #329
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: getstatic     #127
361: astore        37
363: aload         35
365: aload         37
367: invokevirtual #22
370: astore        38
372: aload         38
374: iconst_0
375: invokevirtual #128
378: astore        39
380: aload         39
382: invokevirtual #21
385: astore        40
387: aload         40
389: invokevirtual #46
392: astore        41
394: aload         40
396: invokevirtual #46
399: astore        42
401: aload         40
403: invokevirtual #46
406: astore        43
408: new           #27
411: dup
412: invokespecial #28
415: ldc           #29
417: invokevirtual #30
420: aload         4
422: invokevirtual #30
425: ldc           #90
427: invokevirtual #30
430: invokevirtual #33
433: aload         4
435: ldc           #9
437: invokestatic  #91
440: new           #27
443: dup
444: invokespecial #28
447: ldc           #29
449: invokevirtual #30
452: aload         5
454: invokevirtual #30
457: ldc           #90
459: invokevirtual #30
462: invokevirtual #33
465: aload         5
467: ldc           #9
469: invokestatic  #91
472: aload         8
474: invokestatic  #39
477: aload         9
479: invokestatic  #39
482: aload         10
484: invokestatic  #39
487: new           #27
490: dup
491: invokespecial #28
494: ldc           #29
496: invokevirtual #30
499: aload         11
501: invokevirtual #30
504: ldc           #92
506: invokevirtual #30
509: invokevirtual #33
512: aload         11
514: ldc           #17
516: invokestatic  #91
519: aload         12
521: invokestatic  #39
524: new           #27
527: dup
528: invokespecial #28
531: ldc           #29
533: invokevirtual #30
536: iload         13
538: invokevirtual #35
541: ldc           #32
543: invokevirtual #30
546: iconst_0
547: invokevirtual #35
550: ldc           #29
552: invokevirtual #30
555: invokevirtual #33
558: iload         13
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #34
571: aload         14
573: invokestatic  #39
576: aload         15
578: invokestatic  #39
581: aload         16
583: invokestatic  #39
586: aload         17
588: invokestatic  #39
591: aload         18
593: invokestatic  #39
596: new           #27
599: dup
600: invokespecial #28
603: ldc           #29
605: invokevirtual #30
608: iload         19
610: invokevirtual #35
613: ldc           #32
615: invokevirtual #30
618: iconst_0
619: invokevirtual #35
622: ldc           #29
624: invokevirtual #30
627: invokevirtual #33
630: iload         19
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #34
643: new           #27
646: dup
647: invokespecial #28
650: ldc           #29
652: invokevirtual #30
655: iload         21
657: invokevirtual #35
660: ldc           #32
662: invokevirtual #30
665: iconst_0
666: invokevirtual #35
669: ldc           #29
671: invokevirtual #30
674: invokevirtual #33
677: iload         21
679: ifne          686
682: iconst_1
683: goto          687
686: iconst_0
687: invokestatic  #34
690: aload         22
692: invokestatic  #39
695: aload         23
697: invokestatic  #39
700: aload         24
702: invokestatic  #39
705: aload         25
707: invokestatic  #39
710: new           #27
713: dup
714: invokespecial #28
717: ldc           #29
719: invokevirtual #30
722: aload         28
724: invokevirtual #30
727: ldc           #93
729: invokevirtual #30
732: invokevirtual #33
735: aload         28
737: ldc           #52
739: invokestatic  #91
742: new           #27
745: dup
746: invokespecial #28
749: ldc           #29
751: invokevirtual #30
754: aload         29
756: invokevirtual #30
759: ldc           #94
761: invokevirtual #30
764: invokevirtual #33
767: aload         29
769: ldc           #95
771: invokestatic  #91
774: new           #27
777: dup
778: invokespecial #28
781: ldc           #29
783: invokevirtual #30
786: iload         32
788: invokevirtual #31
791: ldc           #32
793: invokevirtual #30
796: iconst_1
797: invokevirtual #31
800: ldc           #29
802: invokevirtual #30
805: invokevirtual #33
808: iload         32
810: iconst_1
811: if_icmpne     818
814: iconst_1
815: goto          819
818: iconst_0
819: invokestatic  #34
822: new           #27
825: dup
826: invokespecial #28
829: ldc           #29
831: invokevirtual #30
834: iload         33
836: invokevirtual #35
839: ldc           #32
841: invokevirtual #30
844: iconst_0
845: invokevirtual #35
848: ldc           #29
850: invokevirtual #30
853: invokevirtual #33
856: iload         33
858: ifne          865
861: iconst_1
862: goto          866
865: iconst_0
866: invokestatic  #34
869: new           #27
872: dup
873: invokespecial #28
876: ldc           #29
878: invokevirtual #30
881: iload         36
883: invokevirtual #31
886: ldc           #32
888: invokevirtual #30
891: iconst_1
892: invokevirtual #31
895: ldc           #29
897: invokevirtual #30
900: invokevirtual #33
903: iload         36
905: iconst_1
906: if_icmpne     913
909: iconst_1
910: goto          914
913: iconst_0
914: invokestatic  #34
917: new           #27
920: dup
921: invokespecial #28
924: ldc           #29
926: invokevirtual #30
929: aload         37
931: invokevirtual #36
934: ldc           #32
936: invokevirtual #30
939: getstatic     #127
942: invokevirtual #36
945: ldc           #29
947: invokevirtual #30
950: invokevirtual #33
953: aload         37
955: getstatic     #127
958: invokevirtual #38
961: invokestatic  #34
964: aload         38
966: invokestatic  #39
969: aload         39
971: invokestatic  #39
974: new           #27
977: dup
978: invokespecial #28
981: ldc           #29
983: invokevirtual #30
986: aload         40
988: invokevirtual #36
991: ldc           #32
993: invokevirtual #30
996: getstatic     #127
999: invokevirtual #36
1002: ldc           #29
1004: invokevirtual #30
1007: invokevirtual #33
1010: aload         40
1012: getstatic     #127
1015: invokevirtual #38
1018: invokestatic  #34
1021: aload         41
1023: invokestatic  #39
1026: aload         42
1028: invokestatic  #39
1031: aload         43
1033: invokestatic  #39
1036: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test72
Start line: 4351
End line: 4357
Method source code: 
    public void test72() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test72");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("#:gt(0)", ":nth-last-of-type(10n+52)", "[:containsown( :last-of-type$=<!doctype public \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">]", ".[<html>\n <head></head>\n <body>\n  #comment\n </body>\n</html>=*]");
        java.lang.String str5 = documentType4.nodeName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #331
32: ldc_w         #332
35: ldc_w         #333
38: ldc_w         #334
41: invokespecial #12
44: astore_1
45: aload_1
46: invokevirtual #97
49: astore_2
50: new           #27
53: dup
54: invokespecial #28
57: ldc           #29
59: invokevirtual #30
62: aload_2
63: invokevirtual #30
66: ldc           #102
68: invokevirtual #30
71: invokevirtual #33
74: aload_2
75: ldc           #103
77: invokestatic  #91
80: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test73
Start line: 4360
End line: 4366
Method source code: 
    public void test73() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test73");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("class=\"\"=\"data-\"", "#root=\"\"", ":containsOwn( :last-of-type", "hi!hi!=\"data-\"");
        java.lang.String str5 = documentType4.nodeName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #335
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #62
31: ldc_w         #336
34: ldc           #225
36: ldc_w         #337
39: invokespecial #12
42: astore_1
43: aload_1
44: invokevirtual #97
47: astore_2
48: new           #27
51: dup
52: invokespecial #28
55: ldc           #29
57: invokevirtual #30
60: aload_2
61: invokevirtual #30
64: ldc           #102
66: invokevirtual #30
69: invokevirtual #33
72: aload_2
73: ldc           #103
75: invokestatic  #91
78: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test74
Start line: 4369
End line: 4373
Method source code: 
    public void test74() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test74");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("class=\"\"", " text=\"[^]\"", "hi!", "[text=\"hi!\"=&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  #comment\n &lt;/body&gt;\n&lt;/html&gt;]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #339
32: ldc_w         #291
35: ldc           #52
37: ldc_w         #340
40: invokespecial #12
43: astore_1
44: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test75
Start line: 4376
End line: 4380
Method source code: 
    public void test75() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test75");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[^<[   [^]  !=#data]\n<#root class=\"\">\n <html>\n  <head></head>\n  <body>\n   hi!hi!\n  </body>\n </html>\n</#root>\n<html></html>></[   [^]  !=#data]\n<#root class=\"\">\n <html>\n  <head></head>\n  <body>\n   hi!hi!\n  </body>\n </html>\n</#root>\n<html></html>>]", "", "", "<html>\n <head></head> \n <body>\n   #comment  \n </body>\n</html>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #341
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #342
32: ldc           #9
34: ldc           #9
36: ldc_w         #343
39: invokespecial #12
42: astore_1
43: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test76
Start line: 4383
End line: 4449
Method source code: 
    public void test76() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test76");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", " #comment=\"#root\"", "[^]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]");
        java.lang.StringBuilder stringBuilder5 = null;
        java.lang.StringBuilder stringBuilder7 = null;
        org.jsoup.nodes.TextNode textNode11 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node12 = textNode11.parentNode;
        java.lang.String str13 = textNode11.nodeName();
        java.lang.String str14 = textNode11.nodeName();
        textNode11.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes17 = textNode11.attributes();
        java.lang.StringBuilder stringBuilder18 = null;
        org.jsoup.nodes.Attribute attribute22 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean24 = attribute22.shouldCollapseAttribute(outputSettings23);
        org.jsoup.nodes.Entities.EscapeMode escapeMode25 = outputSettings23.escapeMode();
        textNode11.outerHtmlTail(stringBuilder18, (int) (short) -1, outputSettings23);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax27 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings23.syntax(syntax27);
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings23.clone();
        org.jsoup.nodes.TextNode textNode32 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node33 = textNode32.parentNode;
        java.lang.String str34 = textNode32.nodeName();
        java.lang.String str35 = textNode32.nodeName();
        textNode32.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes38 = textNode32.attributes();
        java.lang.StringBuilder stringBuilder39 = null;
        org.jsoup.nodes.Attribute attribute43 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean45 = attribute43.shouldCollapseAttribute(outputSettings44);
        org.jsoup.nodes.Entities.EscapeMode escapeMode46 = outputSettings44.escapeMode();
        textNode32.outerHtmlTail(stringBuilder39, (int) (short) -1, outputSettings44);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax48 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = outputSettings44.syntax(syntax48);
        org.jsoup.nodes.Document.OutputSettings outputSettings50 = outputSettings23.syntax(syntax48);
        org.jsoup.nodes.Document.OutputSettings outputSettings52 = outputSettings23.outline(false);
        org.jsoup.nodes.Entities.escape(stringBuilder7, "", outputSettings23, false, false, false);
        boolean boolean57 = outputSettings23.outline();
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) -1, outputSettings23);
        org.jsoup.nodes.Entities.EscapeMode escapeMode59 = outputSettings23.escapeMode();
        java.util.Map<java.lang.Character, java.lang.String> charMap60 = escapeMode59.getMap();
        org.junit.Assert.assertNotNull(textNode11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#text" + "'", str13, "#text");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#text" + "'", str14, "#text");
        org.junit.Assert.assertNotNull(attributes17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + escapeMode25 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode25.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax27 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax27.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(textNode32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#text" + "'", str34, "#text");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#text" + "'", str35, "#text");
        org.junit.Assert.assertNotNull(attributes38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + escapeMode46 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode46.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax48 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax48.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(outputSettings50);
        org.junit.Assert.assertNotNull(outputSettings52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + escapeMode59 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode59.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(charMap60);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #344
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #108
33: ldc           #59
35: ldc           #131
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: aconst_null
44: astore_3
45: ldc           #52
47: ldc           #52
49: invokestatic  #132
52: astore        4
54: aload         4
56: getfield      #133
59: astore        5
61: aload         4
63: invokevirtual #134
66: astore        6
68: aload         4
70: invokevirtual #134
73: astore        7
75: aload         4
77: ldc           #135
79: invokevirtual #136
82: aload         4
84: invokevirtual #137
87: astore        8
89: aconst_null
90: astore        9
92: new           #16
95: dup
96: ldc           #17
98: ldc           #18
100: invokespecial #19
103: astore        10
105: new           #13
108: dup
109: invokespecial #14
112: astore        11
114: aload         10
116: aload         11
118: invokevirtual #20
121: istore        12
123: aload         11
125: invokevirtual #21
128: astore        13
130: aload         4
132: aload         9
134: iconst_m1
135: aload         11
137: invokevirtual #86
140: getstatic     #49
143: astore        14
145: aload         11
147: aload         14
149: invokevirtual #138
152: astore        15
154: aload         11
156: invokevirtual #215
159: astore        16
161: ldc           #52
163: ldc           #52
165: invokestatic  #132
168: astore        17
170: aload         17
172: getfield      #133
175: astore        18
177: aload         17
179: invokevirtual #134
182: astore        19
184: aload         17
186: invokevirtual #134
189: astore        20
191: aload         17
193: ldc           #135
195: invokevirtual #136
198: aload         17
200: invokevirtual #137
203: astore        21
205: aconst_null
206: astore        22
208: new           #16
211: dup
212: ldc           #17
214: ldc           #18
216: invokespecial #19
219: astore        23
221: new           #13
224: dup
225: invokespecial #14
228: astore        24
230: aload         23
232: aload         24
234: invokevirtual #20
237: istore        25
239: aload         24
241: invokevirtual #21
244: astore        26
246: aload         17
248: aload         22
250: iconst_m1
251: aload         24
253: invokevirtual #86
256: getstatic     #49
259: astore        27
261: aload         24
263: aload         27
265: invokevirtual #138
268: astore        28
270: aload         11
272: aload         27
274: invokevirtual #138
277: astore        29
279: aload         11
281: iconst_0
282: invokevirtual #44
285: astore        30
287: aload_3
288: ldc           #9
290: aload         11
292: iconst_0
293: iconst_0
294: iconst_0
295: invokestatic  #275
298: aload         11
300: invokevirtual #232
303: istore        31
305: aload_1
306: aload_2
307: iconst_m1
308: aload         11
310: invokevirtual #87
313: aload         11
315: invokevirtual #21
318: astore        32
320: aload         32
322: invokevirtual #46
325: astore        33
327: aload         4
329: invokestatic  #39
332: aload         5
334: invokestatic  #139
337: new           #27
340: dup
341: invokespecial #28
344: ldc           #29
346: invokevirtual #30
349: aload         6
351: invokevirtual #30
354: ldc           #140
356: invokevirtual #30
359: invokevirtual #33
362: aload         6
364: ldc           #74
366: invokestatic  #91
369: new           #27
372: dup
373: invokespecial #28
376: ldc           #29
378: invokevirtual #30
381: aload         7
383: invokevirtual #30
386: ldc           #140
388: invokevirtual #30
391: invokevirtual #33
394: aload         7
396: ldc           #74
398: invokestatic  #91
401: aload         8
403: invokestatic  #39
406: new           #27
409: dup
410: invokespecial #28
413: ldc           #29
415: invokevirtual #30
418: iload         12
420: invokevirtual #35
423: ldc           #32
425: invokevirtual #30
428: iconst_0
429: invokevirtual #35
432: ldc           #29
434: invokevirtual #30
437: invokevirtual #33
440: iload         12
442: ifne          449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #34
453: new           #27
456: dup
457: invokespecial #28
460: ldc           #29
462: invokevirtual #30
465: aload         13
467: invokevirtual #36
470: ldc           #32
472: invokevirtual #30
475: getstatic     #37
478: invokevirtual #36
481: ldc           #29
483: invokevirtual #30
486: invokevirtual #33
489: aload         13
491: getstatic     #37
494: invokevirtual #38
497: invokestatic  #34
500: new           #27
503: dup
504: invokespecial #28
507: ldc           #29
509: invokevirtual #30
512: aload         14
514: invokevirtual #36
517: ldc           #32
519: invokevirtual #30
522: getstatic     #49
525: invokevirtual #36
528: ldc           #29
530: invokevirtual #30
533: invokevirtual #33
536: aload         14
538: getstatic     #49
541: invokevirtual #50
544: invokestatic  #34
547: aload         15
549: invokestatic  #39
552: aload         16
554: invokestatic  #39
557: aload         17
559: invokestatic  #39
562: aload         18
564: invokestatic  #139
567: new           #27
570: dup
571: invokespecial #28
574: ldc           #29
576: invokevirtual #30
579: aload         19
581: invokevirtual #30
584: ldc           #140
586: invokevirtual #30
589: invokevirtual #33
592: aload         19
594: ldc           #74
596: invokestatic  #91
599: new           #27
602: dup
603: invokespecial #28
606: ldc           #29
608: invokevirtual #30
611: aload         20
613: invokevirtual #30
616: ldc           #140
618: invokevirtual #30
621: invokevirtual #33
624: aload         20
626: ldc           #74
628: invokestatic  #91
631: aload         21
633: invokestatic  #39
636: new           #27
639: dup
640: invokespecial #28
643: ldc           #29
645: invokevirtual #30
648: iload         25
650: invokevirtual #35
653: ldc           #32
655: invokevirtual #30
658: iconst_0
659: invokevirtual #35
662: ldc           #29
664: invokevirtual #30
667: invokevirtual #33
670: iload         25
672: ifne          679
675: iconst_1
676: goto          680
679: iconst_0
680: invokestatic  #34
683: new           #27
686: dup
687: invokespecial #28
690: ldc           #29
692: invokevirtual #30
695: aload         26
697: invokevirtual #36
700: ldc           #32
702: invokevirtual #30
705: getstatic     #37
708: invokevirtual #36
711: ldc           #29
713: invokevirtual #30
716: invokevirtual #33
719: aload         26
721: getstatic     #37
724: invokevirtual #38
727: invokestatic  #34
730: new           #27
733: dup
734: invokespecial #28
737: ldc           #29
739: invokevirtual #30
742: aload         27
744: invokevirtual #36
747: ldc           #32
749: invokevirtual #30
752: getstatic     #49
755: invokevirtual #36
758: ldc           #29
760: invokevirtual #30
763: invokevirtual #33
766: aload         27
768: getstatic     #49
771: invokevirtual #50
774: invokestatic  #34
777: aload         28
779: invokestatic  #39
782: aload         29
784: invokestatic  #39
787: aload         30
789: invokestatic  #39
792: new           #27
795: dup
796: invokespecial #28
799: ldc           #29
801: invokevirtual #30
804: iload         31
806: invokevirtual #35
809: ldc           #32
811: invokevirtual #30
814: iconst_0
815: invokevirtual #35
818: ldc           #29
820: invokevirtual #30
823: invokevirtual #33
826: iload         31
828: ifne          835
831: iconst_1
832: goto          836
835: iconst_0
836: invokestatic  #34
839: new           #27
842: dup
843: invokespecial #28
846: ldc           #29
848: invokevirtual #30
851: aload         32
853: invokevirtual #36
856: ldc           #32
858: invokevirtual #30
861: getstatic     #37
864: invokevirtual #36
867: ldc           #29
869: invokevirtual #30
872: invokevirtual #33
875: aload         32
877: getstatic     #37
880: invokevirtual #38
883: invokestatic  #34
886: aload         33
888: invokestatic  #39
891: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test77
Start line: 4452
End line: 4456
Method source code: 
    public void test77() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test77");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("<#root class=\"\">\n <html>\n  <head></head>\n  <body>\n   [^]\n  </body>\n </html>\n</#root>", "\n<!-- #comment=\"#root\"-->", "&lt;#root class=\"\"&gt;\n &lt;html&gt;\n  &lt;head&gt;&lt;/head&gt;\n  &lt;body&gt;\n   hi!\n  &lt;/body&gt;\n &lt;/html&gt;\n&lt;/#root&gt;\n&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  hi!\n &lt;/body&gt;\n&lt;/html&gt;", "class=\"\"=\"data-\"");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #345
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #346
32: ldc_w         #280
35: ldc_w         #347
38: ldc           #62
40: invokespecial #12
43: astore_1
44: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test78
Start line: 4459
End line: 4484
Method source code: 
    public void test78() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test78");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("#data", ":lt(100)", "#<html> <head></head> <body> hi! </body> </html>", "          ");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Comment comment9 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean11 = comment9.hasAttr("hi!");
        java.lang.String str12 = comment9.nodeName();
        org.jsoup.nodes.Node node13 = comment9.parent();
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.nodes.Attribute attribute18 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean20 = attribute18.shouldCollapseAttribute(outputSettings19);
        org.jsoup.nodes.Entities.EscapeMode escapeMode21 = outputSettings19.escapeMode();
        comment9.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings19);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax23 = outputSettings19.syntax();
        int int24 = outputSettings19.indentAmount();
        documentType4.outerHtmlTail(stringBuilder5, (int) (byte) 100, outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#comment" + "'", str12, "#comment");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + escapeMode21 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode21.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax23 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax23.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #348
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #75
31: ldc_w         #303
34: ldc_w         #307
37: ldc           #11
39: invokespecial #12
42: astore_1
43: aconst_null
44: astore_2
45: new           #77
48: dup
49: ldc           #52
51: ldc           #52
53: invokespecial #78
56: astore_3
57: aload_3
58: ldc           #52
60: invokevirtual #79
63: istore        4
65: aload_3
66: invokevirtual #84
69: astore        5
71: aload_3
72: invokevirtual #269
75: astore        6
77: aconst_null
78: astore        7
80: new           #16
83: dup
84: ldc           #17
86: ldc           #18
88: invokespecial #19
91: astore        8
93: new           #13
96: dup
97: invokespecial #14
100: astore        9
102: aload         8
104: aload         9
106: invokevirtual #20
109: istore        10
111: aload         9
113: invokevirtual #21
116: astore        11
118: aload_3
119: aload         7
121: bipush        100
123: aload         9
125: invokevirtual #82
128: aload         9
130: invokevirtual #48
133: astore        12
135: aload         9
137: invokevirtual #15
140: istore        13
142: aload_1
143: aload_2
144: bipush        100
146: aload         9
148: invokevirtual #87
151: new           #27
154: dup
155: invokespecial #28
158: ldc           #29
160: invokevirtual #30
163: iload         4
165: invokevirtual #35
168: ldc           #32
170: invokevirtual #30
173: iconst_0
174: invokevirtual #35
177: ldc           #29
179: invokevirtual #30
182: invokevirtual #33
185: iload         4
187: ifne          194
190: iconst_1
191: goto          195
194: iconst_0
195: invokestatic  #34
198: new           #27
201: dup
202: invokespecial #28
205: ldc           #29
207: invokevirtual #30
210: aload         5
212: invokevirtual #30
215: ldc           #94
217: invokevirtual #30
220: invokevirtual #33
223: aload         5
225: ldc           #95
227: invokestatic  #91
230: aload         6
232: invokestatic  #139
235: new           #27
238: dup
239: invokespecial #28
242: ldc           #29
244: invokevirtual #30
247: iload         10
249: invokevirtual #35
252: ldc           #32
254: invokevirtual #30
257: iconst_0
258: invokevirtual #35
261: ldc           #29
263: invokevirtual #30
266: invokevirtual #33
269: iload         10
271: ifne          278
274: iconst_1
275: goto          279
278: iconst_0
279: invokestatic  #34
282: new           #27
285: dup
286: invokespecial #28
289: ldc           #29
291: invokevirtual #30
294: aload         11
296: invokevirtual #36
299: ldc           #32
301: invokevirtual #30
304: getstatic     #37
307: invokevirtual #36
310: ldc           #29
312: invokevirtual #30
315: invokevirtual #33
318: aload         11
320: getstatic     #37
323: invokevirtual #38
326: invokestatic  #34
329: new           #27
332: dup
333: invokespecial #28
336: ldc           #29
338: invokevirtual #30
341: aload         12
343: invokevirtual #36
346: ldc           #32
348: invokevirtual #30
351: getstatic     #49
354: invokevirtual #36
357: ldc           #29
359: invokevirtual #30
362: invokevirtual #33
365: aload         12
367: getstatic     #49
370: invokevirtual #50
373: invokestatic  #34
376: new           #27
379: dup
380: invokespecial #28
383: ldc           #29
385: invokevirtual #30
388: iload         13
390: invokevirtual #31
393: ldc           #32
395: invokevirtual #30
398: iconst_1
399: invokevirtual #31
402: ldc           #29
404: invokevirtual #30
407: invokevirtual #33
410: iload         13
412: iconst_1
413: if_icmpne     420
416: iconst_1
417: goto          421
420: iconst_0
421: invokestatic  #34
424: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test79
Start line: 4487
End line: 4566
Method source code: 
    public void test79() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test79");
        org.jsoup.nodes.Document.OutputSettings outputSettings0 = new org.jsoup.nodes.Document.OutputSettings();
        int int1 = outputSettings0.indentAmount();
        org.jsoup.nodes.Attribute attribute4 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings5 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean6 = attribute4.shouldCollapseAttribute(outputSettings5);
        org.jsoup.nodes.Entities.EscapeMode escapeMode7 = outputSettings5.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings8 = outputSettings0.escapeMode(escapeMode7);
        java.nio.charset.CharsetEncoder charsetEncoder9 = outputSettings8.encoder();
        org.jsoup.nodes.DocumentType documentType14 = new org.jsoup.nodes.DocumentType("", " #comment=\"#root\"", "[^]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]");
        java.lang.StringBuilder stringBuilder15 = null;
        java.lang.StringBuilder stringBuilder17 = null;
        org.jsoup.nodes.TextNode textNode21 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node22 = textNode21.parentNode;
        java.lang.String str23 = textNode21.nodeName();
        java.lang.String str24 = textNode21.nodeName();
        textNode21.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes27 = textNode21.attributes();
        java.lang.StringBuilder stringBuilder28 = null;
        org.jsoup.nodes.Attribute attribute32 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings33 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean34 = attribute32.shouldCollapseAttribute(outputSettings33);
        org.jsoup.nodes.Entities.EscapeMode escapeMode35 = outputSettings33.escapeMode();
        textNode21.outerHtmlTail(stringBuilder28, (int) (short) -1, outputSettings33);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax37 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings38 = outputSettings33.syntax(syntax37);
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings33.clone();
        org.jsoup.nodes.TextNode textNode42 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node43 = textNode42.parentNode;
        java.lang.String str44 = textNode42.nodeName();
        java.lang.String str45 = textNode42.nodeName();
        textNode42.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes48 = textNode42.attributes();
        java.lang.StringBuilder stringBuilder49 = null;
        org.jsoup.nodes.Attribute attribute53 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean55 = attribute53.shouldCollapseAttribute(outputSettings54);
        org.jsoup.nodes.Entities.EscapeMode escapeMode56 = outputSettings54.escapeMode();
        textNode42.outerHtmlTail(stringBuilder49, (int) (short) -1, outputSettings54);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax58 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = outputSettings54.syntax(syntax58);
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = outputSettings33.syntax(syntax58);
        org.jsoup.nodes.Document.OutputSettings outputSettings62 = outputSettings33.outline(false);
        org.jsoup.nodes.Entities.escape(stringBuilder17, "", outputSettings33, false, false, false);
        boolean boolean67 = outputSettings33.outline();
        documentType14.outerHtmlTail(stringBuilder15, (int) (short) -1, outputSettings33);
        org.jsoup.nodes.Entities.EscapeMode escapeMode69 = outputSettings33.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings70 = outputSettings8.escapeMode(escapeMode69);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + escapeMode7 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode7.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings8);
        org.junit.Assert.assertNotNull(charsetEncoder9);
        org.junit.Assert.assertNotNull(textNode21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#text" + "'", str23, "#text");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#text" + "'", str24, "#text");
        org.junit.Assert.assertNotNull(attributes27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + escapeMode35 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode35.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax37 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax37.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(textNode42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#text" + "'", str44, "#text");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#text" + "'", str45, "#text");
        org.junit.Assert.assertNotNull(attributes48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + escapeMode56 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode56.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax58 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax58.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings59);
        org.junit.Assert.assertNotNull(outputSettings60);
        org.junit.Assert.assertNotNull(outputSettings62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + escapeMode69 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode69.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings70);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #349
20: aastore
21: invokevirtual #7
24: pop
25: new           #13
28: dup
29: invokespecial #14
32: astore_1
33: aload_1
34: invokevirtual #15
37: istore_2
38: new           #16
41: dup
42: ldc           #17
44: ldc           #18
46: invokespecial #19
49: astore_3
50: new           #13
53: dup
54: invokespecial #14
57: astore        4
59: aload_3
60: aload         4
62: invokevirtual #20
65: istore        5
67: aload         4
69: invokevirtual #21
72: astore        6
74: aload_1
75: aload         6
77: invokevirtual #22
80: astore        7
82: aload         7
84: invokevirtual #146
87: astore        8
89: new           #8
92: dup
93: ldc           #9
95: ldc           #108
97: ldc           #59
99: ldc           #131
101: invokespecial #12
104: astore        9
106: aconst_null
107: astore        10
109: aconst_null
110: astore        11
112: ldc           #52
114: ldc           #52
116: invokestatic  #132
119: astore        12
121: aload         12
123: getfield      #133
126: astore        13
128: aload         12
130: invokevirtual #134
133: astore        14
135: aload         12
137: invokevirtual #134
140: astore        15
142: aload         12
144: ldc           #135
146: invokevirtual #136
149: aload         12
151: invokevirtual #137
154: astore        16
156: aconst_null
157: astore        17
159: new           #16
162: dup
163: ldc           #17
165: ldc           #18
167: invokespecial #19
170: astore        18
172: new           #13
175: dup
176: invokespecial #14
179: astore        19
181: aload         18
183: aload         19
185: invokevirtual #20
188: istore        20
190: aload         19
192: invokevirtual #21
195: astore        21
197: aload         12
199: aload         17
201: iconst_m1
202: aload         19
204: invokevirtual #86
207: getstatic     #49
210: astore        22
212: aload         19
214: aload         22
216: invokevirtual #138
219: astore        23
221: aload         19
223: invokevirtual #215
226: astore        24
228: ldc           #52
230: ldc           #52
232: invokestatic  #132
235: astore        25
237: aload         25
239: getfield      #133
242: astore        26
244: aload         25
246: invokevirtual #134
249: astore        27
251: aload         25
253: invokevirtual #134
256: astore        28
258: aload         25
260: ldc           #135
262: invokevirtual #136
265: aload         25
267: invokevirtual #137
270: astore        29
272: aconst_null
273: astore        30
275: new           #16
278: dup
279: ldc           #17
281: ldc           #18
283: invokespecial #19
286: astore        31
288: new           #13
291: dup
292: invokespecial #14
295: astore        32
297: aload         31
299: aload         32
301: invokevirtual #20
304: istore        33
306: aload         32
308: invokevirtual #21
311: astore        34
313: aload         25
315: aload         30
317: iconst_m1
318: aload         32
320: invokevirtual #86
323: getstatic     #49
326: astore        35
328: aload         32
330: aload         35
332: invokevirtual #138
335: astore        36
337: aload         19
339: aload         35
341: invokevirtual #138
344: astore        37
346: aload         19
348: iconst_0
349: invokevirtual #44
352: astore        38
354: aload         11
356: ldc           #9
358: aload         19
360: iconst_0
361: iconst_0
362: iconst_0
363: invokestatic  #275
366: aload         19
368: invokevirtual #232
371: istore        39
373: aload         9
375: aload         10
377: iconst_m1
378: aload         19
380: invokevirtual #87
383: aload         19
385: invokevirtual #21
388: astore        40
390: aload         7
392: aload         40
394: invokevirtual #22
397: astore        41
399: new           #27
402: dup
403: invokespecial #28
406: ldc           #29
408: invokevirtual #30
411: iload_2
412: invokevirtual #31
415: ldc           #32
417: invokevirtual #30
420: iconst_1
421: invokevirtual #31
424: ldc           #29
426: invokevirtual #30
429: invokevirtual #33
432: iload_2
433: iconst_1
434: if_icmpne     441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #34
445: new           #27
448: dup
449: invokespecial #28
452: ldc           #29
454: invokevirtual #30
457: iload         5
459: invokevirtual #35
462: ldc           #32
464: invokevirtual #30
467: iconst_0
468: invokevirtual #35
471: ldc           #29
473: invokevirtual #30
476: invokevirtual #33
479: iload         5
481: ifne          488
484: iconst_1
485: goto          489
488: iconst_0
489: invokestatic  #34
492: new           #27
495: dup
496: invokespecial #28
499: ldc           #29
501: invokevirtual #30
504: aload         6
506: invokevirtual #36
509: ldc           #32
511: invokevirtual #30
514: getstatic     #37
517: invokevirtual #36
520: ldc           #29
522: invokevirtual #30
525: invokevirtual #33
528: aload         6
530: getstatic     #37
533: invokevirtual #38
536: invokestatic  #34
539: aload         7
541: invokestatic  #39
544: aload         8
546: invokestatic  #39
549: aload         12
551: invokestatic  #39
554: aload         13
556: invokestatic  #139
559: new           #27
562: dup
563: invokespecial #28
566: ldc           #29
568: invokevirtual #30
571: aload         14
573: invokevirtual #30
576: ldc           #140
578: invokevirtual #30
581: invokevirtual #33
584: aload         14
586: ldc           #74
588: invokestatic  #91
591: new           #27
594: dup
595: invokespecial #28
598: ldc           #29
600: invokevirtual #30
603: aload         15
605: invokevirtual #30
608: ldc           #140
610: invokevirtual #30
613: invokevirtual #33
616: aload         15
618: ldc           #74
620: invokestatic  #91
623: aload         16
625: invokestatic  #39
628: new           #27
631: dup
632: invokespecial #28
635: ldc           #29
637: invokevirtual #30
640: iload         20
642: invokevirtual #35
645: ldc           #32
647: invokevirtual #30
650: iconst_0
651: invokevirtual #35
654: ldc           #29
656: invokevirtual #30
659: invokevirtual #33
662: iload         20
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #34
675: new           #27
678: dup
679: invokespecial #28
682: ldc           #29
684: invokevirtual #30
687: aload         21
689: invokevirtual #36
692: ldc           #32
694: invokevirtual #30
697: getstatic     #37
700: invokevirtual #36
703: ldc           #29
705: invokevirtual #30
708: invokevirtual #33
711: aload         21
713: getstatic     #37
716: invokevirtual #38
719: invokestatic  #34
722: new           #27
725: dup
726: invokespecial #28
729: ldc           #29
731: invokevirtual #30
734: aload         22
736: invokevirtual #36
739: ldc           #32
741: invokevirtual #30
744: getstatic     #49
747: invokevirtual #36
750: ldc           #29
752: invokevirtual #30
755: invokevirtual #33
758: aload         22
760: getstatic     #49
763: invokevirtual #50
766: invokestatic  #34
769: aload         23
771: invokestatic  #39
774: aload         24
776: invokestatic  #39
779: aload         25
781: invokestatic  #39
784: aload         26
786: invokestatic  #139
789: new           #27
792: dup
793: invokespecial #28
796: ldc           #29
798: invokevirtual #30
801: aload         27
803: invokevirtual #30
806: ldc           #140
808: invokevirtual #30
811: invokevirtual #33
814: aload         27
816: ldc           #74
818: invokestatic  #91
821: new           #27
824: dup
825: invokespecial #28
828: ldc           #29
830: invokevirtual #30
833: aload         28
835: invokevirtual #30
838: ldc           #140
840: invokevirtual #30
843: invokevirtual #33
846: aload         28
848: ldc           #74
850: invokestatic  #91
853: aload         29
855: invokestatic  #39
858: new           #27
861: dup
862: invokespecial #28
865: ldc           #29
867: invokevirtual #30
870: iload         33
872: invokevirtual #35
875: ldc           #32
877: invokevirtual #30
880: iconst_0
881: invokevirtual #35
884: ldc           #29
886: invokevirtual #30
889: invokevirtual #33
892: iload         33
894: ifne          901
897: iconst_1
898: goto          902
901: iconst_0
902: invokestatic  #34
905: new           #27
908: dup
909: invokespecial #28
912: ldc           #29
914: invokevirtual #30
917: aload         34
919: invokevirtual #36
922: ldc           #32
924: invokevirtual #30
927: getstatic     #37
930: invokevirtual #36
933: ldc           #29
935: invokevirtual #30
938: invokevirtual #33
941: aload         34
943: getstatic     #37
946: invokevirtual #38
949: invokestatic  #34
952: new           #27
955: dup
956: invokespecial #28
959: ldc           #29
961: invokevirtual #30
964: aload         35
966: invokevirtual #36
969: ldc           #32
971: invokevirtual #30
974: getstatic     #49
977: invokevirtual #36
980: ldc           #29
982: invokevirtual #30
985: invokevirtual #33
988: aload         35
990: getstatic     #49
993: invokevirtual #50
996: invokestatic  #34
999: aload         36
1001: invokestatic  #39
1004: aload         37
1006: invokestatic  #39
1009: aload         38
1011: invokestatic  #39
1014: new           #27
1017: dup
1018: invokespecial #28
1021: ldc           #29
1023: invokevirtual #30
1026: iload         39
1028: invokevirtual #35
1031: ldc           #32
1033: invokevirtual #30
1036: iconst_0
1037: invokevirtual #35
1040: ldc           #29
1042: invokevirtual #30
1045: invokevirtual #33
1048: iload         39
1050: ifne          1057
1053: iconst_1
1054: goto          1058
1057: iconst_0
1058: invokestatic  #34
1061: new           #27
1064: dup
1065: invokespecial #28
1068: ldc           #29
1070: invokevirtual #30
1073: aload         40
1075: invokevirtual #36
1078: ldc           #32
1080: invokevirtual #30
1083: getstatic     #37
1086: invokevirtual #36
1089: ldc           #29
1091: invokevirtual #30
1094: invokevirtual #33
1097: aload         40
1099: getstatic     #37
1102: invokevirtual #38
1105: invokestatic  #34
1108: aload         41
1110: invokestatic  #39
1113: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test80
Start line: 4569
End line: 4595
Method source code: 
    public void test80() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test80");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings8 = new org.jsoup.nodes.Document.OutputSettings();
        int int9 = outputSettings8.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder10 = outputSettings8.encoder();
        documentType4.outerHtmlTail(stringBuilder6, (int) (short) 1, outputSettings8);
        org.jsoup.nodes.Attributes attributes12 = documentType4.attributes;
        org.jsoup.parser.Parser parser17 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean18 = parser17.isTrackErrors();
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse(" ", "#text", parser17);
        java.util.List<org.jsoup.parser.ParseError> parseErrorList20 = parser17.getErrors();
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", ":eq(10)", parser17);
        documentType4.setParentNode((org.jsoup.nodes.Node) document21);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder10);
        org.junit.Assert.assertNotNull(attributes12);
        org.junit.Assert.assertNotNull(parser17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(parseErrorList20);
        org.junit.Assert.assertNotNull(document21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #350
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aload_1
42: invokevirtual #97
45: astore_2
46: aconst_null
47: astore_3
48: new           #13
51: dup
52: invokespecial #14
55: astore        4
57: aload         4
59: invokevirtual #15
62: istore        5
64: aload         4
66: invokevirtual #146
69: astore        6
71: aload_1
72: aload_3
73: iconst_1
74: aload         4
76: invokevirtual #87
79: aload_1
80: getfield      #231
83: astore        7
85: invokestatic  #98
88: astore        8
90: aload         8
92: invokevirtual #99
95: istore        9
97: ldc           #72
99: ldc           #74
101: aload         8
103: invokestatic  #100
106: astore        10
108: aload         8
110: invokevirtual #351
113: astore        11
115: ldc           #9
117: ldc_w         #312
120: aload         8
122: invokestatic  #100
125: astore        12
127: aload_1
128: aload         12
130: invokevirtual #352
133: new           #27
136: dup
137: invokespecial #28
140: ldc           #29
142: invokevirtual #30
145: aload_2
146: invokevirtual #30
149: ldc           #102
151: invokevirtual #30
154: invokevirtual #33
157: aload_2
158: ldc           #103
160: invokestatic  #91
163: new           #27
166: dup
167: invokespecial #28
170: ldc           #29
172: invokevirtual #30
175: iload         5
177: invokevirtual #31
180: ldc           #32
182: invokevirtual #30
185: iconst_1
186: invokevirtual #31
189: ldc           #29
191: invokevirtual #30
194: invokevirtual #33
197: iload         5
199: iconst_1
200: if_icmpne     207
203: iconst_1
204: goto          208
207: iconst_0
208: invokestatic  #34
211: aload         6
213: invokestatic  #39
216: aload         7
218: invokestatic  #39
221: aload         8
223: invokestatic  #39
226: new           #27
229: dup
230: invokespecial #28
233: ldc           #29
235: invokevirtual #30
238: iload         9
240: invokevirtual #35
243: ldc           #32
245: invokevirtual #30
248: iconst_0
249: invokevirtual #35
252: ldc           #29
254: invokevirtual #30
257: invokevirtual #33
260: iload         9
262: ifne          269
265: iconst_1
266: goto          270
269: iconst_0
270: invokestatic  #34
273: aload         10
275: invokestatic  #39
278: aload         11
280: invokestatic  #39
283: aload         12
285: invokestatic  #39
288: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test81
Start line: 4598
End line: 4622
Method source code: 
    public void test81() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test81");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("##comment", ":eq(0)", "", "\n<!--hi!-->");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = document8.dataset();
        org.jsoup.nodes.Element element10 = document8.previousElementSibling();
        org.jsoup.nodes.Element element12 = document8.createElement(":only-child");
        org.jsoup.nodes.Document.OutputSettings outputSettings13 = document8.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = outputSettings13.outline(true);
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder5, (int) (short) 10, outputSettings15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(outputSettings13);
        org.junit.Assert.assertNotNull(outputSettings15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #353
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #245
31: ldc           #246
33: ldc           #9
35: ldc           #247
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: ldc           #52
45: invokestatic  #53
48: astore_3
49: aload_3
50: invokevirtual #196
53: astore        4
55: aload_3
56: invokevirtual #354
59: astore        5
61: aload_3
62: ldc           #223
64: invokevirtual #355
67: astore        6
69: aload_3
70: invokevirtual #314
73: astore        7
75: aload         7
77: iconst_1
78: invokevirtual #44
81: astore        8
83: aload_1
84: aload_2
85: bipush        10
87: aload         8
89: invokevirtual #23
92: ldc           #24
94: invokestatic  #25
97: goto          102
100: astore        9
102: aload_3
103: invokestatic  #39
106: aload         4
108: invokestatic  #39
111: aload         5
113: invokestatic  #139
116: aload         6
118: invokestatic  #39
121: aload         7
123: invokestatic  #39
126: aload         8
128: invokestatic  #39
131: return
Exception table:
from    to  target type
83    97   100   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test82
Start line: 4625
End line: 4718
Method source code: 
    public void test82() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test82");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("<html>\n <head></head>\n <body>\n  #root=\"data-\"\n </body>\n</html>", "[#<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>!=[:eq(10)]]", "          ", "class=\"\"");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode10 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node11 = textNode10.parentNode;
        java.lang.String str12 = textNode10.nodeName();
        java.lang.String str13 = textNode10.nodeName();
        textNode10.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes16 = textNode10.attributes();
        org.jsoup.nodes.Document.OutputSettings outputSettings17 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean18 = attributes16.equals((java.lang.Object) outputSettings17);
        java.lang.String str19 = org.jsoup.nodes.Entities.escape(":containsOwn(#document", outputSettings17);
        documentType4.outerHtmlTail(stringBuilder5, (int) (byte) -1, outputSettings17);
        org.jsoup.nodes.DocumentType documentType25 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder26 = null;
        org.jsoup.nodes.TextNode textNode30 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str31 = textNode30.getWholeText();
        java.lang.String str33 = textNode30.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder34 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType36 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document39 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element43 = document41.toggleClass("");
        java.lang.String str44 = element43.tagName();
        org.jsoup.nodes.Element element46 = element43.toggleClass("");
        boolean boolean47 = isOnlyOfType36.matches((org.jsoup.nodes.Element) document39, element43);
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements52 = document50.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element54 = document50.text(" ");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements59 = document57.getElementsContainingText("#data");
        boolean boolean60 = isOnlyOfType36.matches((org.jsoup.nodes.Element) document50, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Comment comment63 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean65 = comment63.hasAttr("hi!");
        org.jsoup.nodes.Document document67 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element69 = document67.toggleClass("");
        org.jsoup.nodes.Node node70 = document67.clone();
        org.jsoup.nodes.Node node71 = comment63.doClone(node70);
        java.lang.StringBuilder stringBuilder72 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings74 = null;
        comment63.outerHtmlTail(stringBuilder72, 10, outputSettings74);
        java.lang.String str76 = comment63.getData();
        java.lang.String str77 = comment63.nodeName();
        java.lang.StringBuilder stringBuilder78 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = new org.jsoup.nodes.Document.OutputSettings();
        int int81 = outputSettings80.indentAmount();
        comment63.outerHtmlTail(stringBuilder78, 0, outputSettings80);
        boolean boolean83 = document57.equals((java.lang.Object) outputSettings80);
        textNode30.outerHtmlTail(stringBuilder34, (int) (short) 100, outputSettings80);
        documentType25.outerHtmlTail(stringBuilder26, (int) (short) 1, outputSettings80);
        java.lang.StringBuilder stringBuilder86 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings88 = new org.jsoup.nodes.Document.OutputSettings();
        int int89 = outputSettings88.indentAmount();
        documentType25.outerHtmlTail(stringBuilder86, 0, outputSettings88);
        org.jsoup.nodes.Entities.EscapeMode escapeMode91 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings92 = outputSettings88.escapeMode(escapeMode91);
        org.jsoup.nodes.Document.OutputSettings outputSettings93 = outputSettings17.escapeMode(escapeMode91);
        org.junit.Assert.assertNotNull(textNode10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#text" + "'", str12, "#text");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#text" + "'", str13, "#text");
        org.junit.Assert.assertNotNull(attributes16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + ":containsOwn(#document" + "'", str19, ":containsOwn(#document");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#root" + "'", str44, "#root");
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(elements52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(elements59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(document67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "#comment" + "'", str77, "#comment");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode91 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode91.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings92);
        org.junit.Assert.assertNotNull(outputSettings93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #356
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #357
32: ldc_w         #358
35: ldc           #11
37: ldc_w         #339
40: invokespecial #12
43: astore_1
44: aconst_null
45: astore_2
46: ldc           #52
48: ldc           #52
50: invokestatic  #132
53: astore_3
54: aload_3
55: getfield      #133
58: astore        4
60: aload_3
61: invokevirtual #134
64: astore        5
66: aload_3
67: invokevirtual #134
70: astore        6
72: aload_3
73: ldc           #135
75: invokevirtual #136
78: aload_3
79: invokevirtual #137
82: astore        7
84: new           #13
87: dup
88: invokespecial #14
91: astore        8
93: aload         7
95: aload         8
97: invokevirtual #150
100: istore        9
102: ldc           #255
104: aload         8
106: invokestatic  #112
109: astore        10
111: aload_1
112: aload_2
113: iconst_m1
114: aload         8
116: invokevirtual #87
119: new           #8
122: dup
123: ldc           #9
125: ldc           #10
127: ldc           #11
129: ldc           #9
131: invokespecial #12
134: astore        11
136: aconst_null
137: astore        12
139: new           #58
142: dup
143: ldc           #9
145: ldc           #59
147: invokespecial #60
150: astore        13
152: aload         13
154: invokevirtual #61
157: astore        14
159: aload         13
161: ldc           #62
163: invokevirtual #63
166: astore        15
168: aconst_null
169: astore        16
171: new           #64
174: dup
175: invokespecial #65
178: astore        17
180: ldc           #9
182: ldc           #9
184: invokestatic  #66
187: astore        18
189: ldc           #52
191: invokestatic  #53
194: astore        19
196: aload         19
198: ldc           #9
200: invokevirtual #54
203: astore        20
205: aload         20
207: invokevirtual #67
210: astore        21
212: aload         20
214: ldc           #9
216: invokevirtual #68
219: astore        22
221: aload         17
223: aload         18
225: aload         20
227: invokevirtual #69
230: istore        23
232: ldc           #59
234: ldc           #52
236: invokestatic  #70
239: astore        24
241: aload         24
243: bipush        100
245: invokevirtual #71
248: astore        25
250: aload         24
252: ldc           #72
254: invokevirtual #73
257: astore        26
259: ldc           #74
261: ldc           #52
263: invokestatic  #70
266: astore        27
268: aload         27
270: ldc           #75
272: invokevirtual #76
275: astore        28
277: aload         17
279: aload         24
281: aload         27
283: invokevirtual #69
286: istore        29
288: new           #77
291: dup
292: ldc           #52
294: ldc           #52
296: invokespecial #78
299: astore        30
301: aload         30
303: ldc           #52
305: invokevirtual #79
308: istore        31
310: ldc           #52
312: invokestatic  #53
315: astore        32
317: aload         32
319: ldc           #9
321: invokevirtual #54
324: astore        33
326: aload         32
328: invokevirtual #80
331: astore        34
333: aload         30
335: aload         34
337: invokevirtual #81
340: astore        35
342: aconst_null
343: astore        36
345: aconst_null
346: astore        37
348: aload         30
350: aload         36
352: bipush        10
354: aload         37
356: invokevirtual #82
359: aload         30
361: invokevirtual #83
364: astore        38
366: aload         30
368: invokevirtual #84
371: astore        39
373: aconst_null
374: astore        40
376: new           #13
379: dup
380: invokespecial #14
383: astore        41
385: aload         41
387: invokevirtual #15
390: istore        42
392: aload         30
394: aload         40
396: iconst_0
397: aload         41
399: invokevirtual #82
402: aload         27
404: aload         41
406: invokevirtual #85
409: istore        43
411: aload         13
413: aload         16
415: bipush        100
417: aload         41
419: invokevirtual #86
422: aload         11
424: aload         12
426: iconst_1
427: aload         41
429: invokevirtual #87
432: aconst_null
433: astore        44
435: new           #13
438: dup
439: invokespecial #14
442: astore        45
444: aload         45
446: invokevirtual #15
449: istore        46
451: aload         11
453: aload         44
455: iconst_0
456: aload         45
458: invokevirtual #87
461: getstatic     #127
464: astore        47
466: aload         45
468: aload         47
470: invokevirtual #22
473: astore        48
475: aload         8
477: aload         47
479: invokevirtual #22
482: astore        49
484: aload_3
485: invokestatic  #39
488: aload         4
490: invokestatic  #139
493: new           #27
496: dup
497: invokespecial #28
500: ldc           #29
502: invokevirtual #30
505: aload         5
507: invokevirtual #30
510: ldc           #140
512: invokevirtual #30
515: invokevirtual #33
518: aload         5
520: ldc           #74
522: invokestatic  #91
525: new           #27
528: dup
529: invokespecial #28
532: ldc           #29
534: invokevirtual #30
537: aload         6
539: invokevirtual #30
542: ldc           #140
544: invokevirtual #30
547: invokevirtual #33
550: aload         6
552: ldc           #74
554: invokestatic  #91
557: aload         7
559: invokestatic  #39
562: new           #27
565: dup
566: invokespecial #28
569: ldc           #29
571: invokevirtual #30
574: iload         9
576: invokevirtual #35
579: ldc           #32
581: invokevirtual #30
584: iconst_0
585: invokevirtual #35
588: ldc           #29
590: invokevirtual #30
593: invokevirtual #33
596: iload         9
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #34
609: new           #27
612: dup
613: invokespecial #28
616: ldc           #29
618: invokevirtual #30
621: aload         10
623: invokevirtual #30
626: ldc_w         #359
629: invokevirtual #30
632: invokevirtual #33
635: aload         10
637: ldc           #255
639: invokestatic  #91
642: new           #27
645: dup
646: invokespecial #28
649: ldc           #29
651: invokevirtual #30
654: aload         14
656: invokevirtual #30
659: ldc           #90
661: invokevirtual #30
664: invokevirtual #33
667: aload         14
669: ldc           #9
671: invokestatic  #91
674: new           #27
677: dup
678: invokespecial #28
681: ldc           #29
683: invokevirtual #30
686: aload         15
688: invokevirtual #30
691: ldc           #90
693: invokevirtual #30
696: invokevirtual #33
699: aload         15
701: ldc           #9
703: invokestatic  #91
706: aload         18
708: invokestatic  #39
711: aload         19
713: invokestatic  #39
716: aload         20
718: invokestatic  #39
721: new           #27
724: dup
725: invokespecial #28
728: ldc           #29
730: invokevirtual #30
733: aload         21
735: invokevirtual #30
738: ldc           #92
740: invokevirtual #30
743: invokevirtual #33
746: aload         21
748: ldc           #17
750: invokestatic  #91
753: aload         22
755: invokestatic  #39
758: new           #27
761: dup
762: invokespecial #28
765: ldc           #29
767: invokevirtual #30
770: iload         23
772: invokevirtual #35
775: ldc           #32
777: invokevirtual #30
780: iconst_0
781: invokevirtual #35
784: ldc           #29
786: invokevirtual #30
789: invokevirtual #33
792: iload         23
794: ifne          801
797: iconst_1
798: goto          802
801: iconst_0
802: invokestatic  #34
805: aload         24
807: invokestatic  #39
810: aload         25
812: invokestatic  #39
815: aload         26
817: invokestatic  #39
820: aload         27
822: invokestatic  #39
825: aload         28
827: invokestatic  #39
830: new           #27
833: dup
834: invokespecial #28
837: ldc           #29
839: invokevirtual #30
842: iload         29
844: invokevirtual #35
847: ldc           #32
849: invokevirtual #30
852: iconst_0
853: invokevirtual #35
856: ldc           #29
858: invokevirtual #30
861: invokevirtual #33
864: iload         29
866: ifne          873
869: iconst_1
870: goto          874
873: iconst_0
874: invokestatic  #34
877: new           #27
880: dup
881: invokespecial #28
884: ldc           #29
886: invokevirtual #30
889: iload         31
891: invokevirtual #35
894: ldc           #32
896: invokevirtual #30
899: iconst_0
900: invokevirtual #35
903: ldc           #29
905: invokevirtual #30
908: invokevirtual #33
911: iload         31
913: ifne          920
916: iconst_1
917: goto          921
920: iconst_0
921: invokestatic  #34
924: aload         32
926: invokestatic  #39
929: aload         33
931: invokestatic  #39
934: aload         34
936: invokestatic  #39
939: aload         35
941: invokestatic  #39
944: new           #27
947: dup
948: invokespecial #28
951: ldc           #29
953: invokevirtual #30
956: aload         38
958: invokevirtual #30
961: ldc           #93
963: invokevirtual #30
966: invokevirtual #33
969: aload         38
971: ldc           #52
973: invokestatic  #91
976: new           #27
979: dup
980: invokespecial #28
983: ldc           #29
985: invokevirtual #30
988: aload         39
990: invokevirtual #30
993: ldc           #94
995: invokevirtual #30
998: invokevirtual #33
1001: aload         39
1003: ldc           #95
1005: invokestatic  #91
1008: new           #27
1011: dup
1012: invokespecial #28
1015: ldc           #29
1017: invokevirtual #30
1020: iload         42
1022: invokevirtual #31
1025: ldc           #32
1027: invokevirtual #30
1030: iconst_1
1031: invokevirtual #31
1034: ldc           #29
1036: invokevirtual #30
1039: invokevirtual #33
1042: iload         42
1044: iconst_1
1045: if_icmpne     1052
1048: iconst_1
1049: goto          1053
1052: iconst_0
1053: invokestatic  #34
1056: new           #27
1059: dup
1060: invokespecial #28
1063: ldc           #29
1065: invokevirtual #30
1068: iload         43
1070: invokevirtual #35
1073: ldc           #32
1075: invokevirtual #30
1078: iconst_0
1079: invokevirtual #35
1082: ldc           #29
1084: invokevirtual #30
1087: invokevirtual #33
1090: iload         43
1092: ifne          1099
1095: iconst_1
1096: goto          1100
1099: iconst_0
1100: invokestatic  #34
1103: new           #27
1106: dup
1107: invokespecial #28
1110: ldc           #29
1112: invokevirtual #30
1115: iload         46
1117: invokevirtual #31
1120: ldc           #32
1122: invokevirtual #30
1125: iconst_1
1126: invokevirtual #31
1129: ldc           #29
1131: invokevirtual #30
1134: invokevirtual #33
1137: iload         46
1139: iconst_1
1140: if_icmpne     1147
1143: iconst_1
1144: goto          1148
1147: iconst_0
1148: invokestatic  #34
1151: new           #27
1154: dup
1155: invokespecial #28
1158: ldc           #29
1160: invokevirtual #30
1163: aload         47
1165: invokevirtual #36
1168: ldc           #32
1170: invokevirtual #30
1173: getstatic     #127
1176: invokevirtual #36
1179: ldc           #29
1181: invokevirtual #30
1184: invokevirtual #33
1187: aload         47
1189: getstatic     #127
1192: invokevirtual #38
1195: invokestatic  #34
1198: aload         48
1200: invokestatic  #39
1203: aload         49
1205: invokestatic  #39
1208: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test83
Start line: 4721
End line: 4725
Method source code: 
    public void test83() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test83");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType(":gt(0)=\"\"", "[hi!*=#root]", "<html>\n <head></head>\n <body>\n   &lt;!--&lt;!DOCTYPE PUBLIC \"&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; hi! &lt;/body&gt; &lt;/html&gt;\"&gt;--&gt;\n </body>\n</html>", "[:only-of-type]=\"<html>\n <head></head>\n <body>\n  #comment\n </body>\n</html>\"");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #360
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #361
32: ldc           #174
34: ldc_w         #362
37: ldc_w         #363
40: invokespecial #12
43: astore_1
44: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test84
Start line: 4728
End line: 4732
Method source code: 
    public void test84() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test84");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("hi!hi!=\"data-\"", "", "#:first-of-type", ":only-child[[class=\"\"=data-]!=<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>]null");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #337
32: ldc           #9
34: ldc_w         #365
37: ldc_w         #366
40: invokespecial #12
43: astore_1
44: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test85
Start line: 4735
End line: 4831
Method source code: 
    public void test85() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test85");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", " #comment=\"#root\"", "[^]", "[<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>!=#data]");
        java.lang.StringBuilder stringBuilder5 = null;
        java.lang.StringBuilder stringBuilder7 = null;
        org.jsoup.nodes.TextNode textNode11 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node12 = textNode11.parentNode;
        java.lang.String str13 = textNode11.nodeName();
        java.lang.String str14 = textNode11.nodeName();
        textNode11.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes17 = textNode11.attributes();
        java.lang.StringBuilder stringBuilder18 = null;
        org.jsoup.nodes.Attribute attribute22 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean24 = attribute22.shouldCollapseAttribute(outputSettings23);
        org.jsoup.nodes.Entities.EscapeMode escapeMode25 = outputSettings23.escapeMode();
        textNode11.outerHtmlTail(stringBuilder18, (int) (short) -1, outputSettings23);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax27 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings23.syntax(syntax27);
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings23.clone();
        org.jsoup.nodes.TextNode textNode32 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node33 = textNode32.parentNode;
        java.lang.String str34 = textNode32.nodeName();
        java.lang.String str35 = textNode32.nodeName();
        textNode32.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes38 = textNode32.attributes();
        java.lang.StringBuilder stringBuilder39 = null;
        org.jsoup.nodes.Attribute attribute43 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean45 = attribute43.shouldCollapseAttribute(outputSettings44);
        org.jsoup.nodes.Entities.EscapeMode escapeMode46 = outputSettings44.escapeMode();
        textNode32.outerHtmlTail(stringBuilder39, (int) (short) -1, outputSettings44);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax48 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = outputSettings44.syntax(syntax48);
        org.jsoup.nodes.Document.OutputSettings outputSettings50 = outputSettings23.syntax(syntax48);
        org.jsoup.nodes.Document.OutputSettings outputSettings52 = outputSettings23.outline(false);
        org.jsoup.nodes.Entities.escape(stringBuilder7, "", outputSettings23, false, false, false);
        boolean boolean57 = outputSettings23.outline();
        documentType4.outerHtmlTail(stringBuilder5, (int) (short) -1, outputSettings23);
        java.lang.StringBuilder stringBuilder59 = null;
        org.jsoup.nodes.Comment comment63 = new org.jsoup.nodes.Comment("<!DOCTYPE PUBLIC \"<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>\">", " ");
        java.lang.StringBuilder stringBuilder64 = null;
        org.jsoup.nodes.Comment comment68 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean70 = comment68.hasAttr("hi!");
        org.jsoup.nodes.Document document72 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element74 = document72.toggleClass("");
        org.jsoup.nodes.Node node75 = document72.clone();
        org.jsoup.nodes.Node node76 = comment68.doClone(node75);
        java.lang.StringBuilder stringBuilder77 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings79 = null;
        comment68.outerHtmlTail(stringBuilder77, 10, outputSettings79);
        java.lang.String str81 = comment68.getData();
        java.lang.String str82 = comment68.nodeName();
        java.lang.StringBuilder stringBuilder83 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings85 = new org.jsoup.nodes.Document.OutputSettings();
        int int86 = outputSettings85.indentAmount();
        comment68.outerHtmlTail(stringBuilder83, 0, outputSettings85);
        org.jsoup.nodes.Entities.EscapeMode escapeMode88 = outputSettings85.escapeMode();
        int int89 = outputSettings85.indentAmount();
        comment63.outerHtmlTail(stringBuilder64, (int) (short) 1, outputSettings85);
        org.jsoup.nodes.Document.OutputSettings outputSettings92 = outputSettings85.indentAmount(100);
        documentType4.outerHtmlTail(stringBuilder59, 100, outputSettings92);
        org.junit.Assert.assertNotNull(textNode11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#text" + "'", str13, "#text");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#text" + "'", str14, "#text");
        org.junit.Assert.assertNotNull(attributes17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + escapeMode25 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode25.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax27 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax27.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(textNode32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#text" + "'", str34, "#text");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#text" + "'", str35, "#text");
        org.junit.Assert.assertNotNull(attributes38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + escapeMode46 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode46.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax48 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax48.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(outputSettings50);
        org.junit.Assert.assertNotNull(outputSettings52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(document72);
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "#comment" + "'", str82, "#comment");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode88 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode88.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(outputSettings92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #367
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #108
33: ldc           #59
35: ldc           #131
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: aconst_null
44: astore_3
45: ldc           #52
47: ldc           #52
49: invokestatic  #132
52: astore        4
54: aload         4
56: getfield      #133
59: astore        5
61: aload         4
63: invokevirtual #134
66: astore        6
68: aload         4
70: invokevirtual #134
73: astore        7
75: aload         4
77: ldc           #135
79: invokevirtual #136
82: aload         4
84: invokevirtual #137
87: astore        8
89: aconst_null
90: astore        9
92: new           #16
95: dup
96: ldc           #17
98: ldc           #18
100: invokespecial #19
103: astore        10
105: new           #13
108: dup
109: invokespecial #14
112: astore        11
114: aload         10
116: aload         11
118: invokevirtual #20
121: istore        12
123: aload         11
125: invokevirtual #21
128: astore        13
130: aload         4
132: aload         9
134: iconst_m1
135: aload         11
137: invokevirtual #86
140: getstatic     #49
143: astore        14
145: aload         11
147: aload         14
149: invokevirtual #138
152: astore        15
154: aload         11
156: invokevirtual #215
159: astore        16
161: ldc           #52
163: ldc           #52
165: invokestatic  #132
168: astore        17
170: aload         17
172: getfield      #133
175: astore        18
177: aload         17
179: invokevirtual #134
182: astore        19
184: aload         17
186: invokevirtual #134
189: astore        20
191: aload         17
193: ldc           #135
195: invokevirtual #136
198: aload         17
200: invokevirtual #137
203: astore        21
205: aconst_null
206: astore        22
208: new           #16
211: dup
212: ldc           #17
214: ldc           #18
216: invokespecial #19
219: astore        23
221: new           #13
224: dup
225: invokespecial #14
228: astore        24
230: aload         23
232: aload         24
234: invokevirtual #20
237: istore        25
239: aload         24
241: invokevirtual #21
244: astore        26
246: aload         17
248: aload         22
250: iconst_m1
251: aload         24
253: invokevirtual #86
256: getstatic     #49
259: astore        27
261: aload         24
263: aload         27
265: invokevirtual #138
268: astore        28
270: aload         11
272: aload         27
274: invokevirtual #138
277: astore        29
279: aload         11
281: iconst_0
282: invokevirtual #44
285: astore        30
287: aload_3
288: ldc           #9
290: aload         11
292: iconst_0
293: iconst_0
294: iconst_0
295: invokestatic  #275
298: aload         11
300: invokevirtual #232
303: istore        31
305: aload_1
306: aload_2
307: iconst_m1
308: aload         11
310: invokevirtual #87
313: aconst_null
314: astore        32
316: new           #77
319: dup
320: ldc           #115
322: ldc           #72
324: invokespecial #78
327: astore        33
329: aconst_null
330: astore        34
332: new           #77
335: dup
336: ldc           #52
338: ldc           #52
340: invokespecial #78
343: astore        35
345: aload         35
347: ldc           #52
349: invokevirtual #79
352: istore        36
354: ldc           #52
356: invokestatic  #53
359: astore        37
361: aload         37
363: ldc           #9
365: invokevirtual #54
368: astore        38
370: aload         37
372: invokevirtual #80
375: astore        39
377: aload         35
379: aload         39
381: invokevirtual #81
384: astore        40
386: aconst_null
387: astore        41
389: aconst_null
390: astore        42
392: aload         35
394: aload         41
396: bipush        10
398: aload         42
400: invokevirtual #82
403: aload         35
405: invokevirtual #83
408: astore        43
410: aload         35
412: invokevirtual #84
415: astore        44
417: aconst_null
418: astore        45
420: new           #13
423: dup
424: invokespecial #14
427: astore        46
429: aload         46
431: invokevirtual #15
434: istore        47
436: aload         35
438: aload         45
440: iconst_0
441: aload         46
443: invokevirtual #82
446: aload         46
448: invokevirtual #21
451: astore        48
453: aload         46
455: invokevirtual #15
458: istore        49
460: aload         33
462: aload         34
464: iconst_1
465: aload         46
467: invokevirtual #82
470: aload         46
472: bipush        100
474: invokevirtual #263
477: astore        50
479: aload_1
480: aload         32
482: bipush        100
484: aload         50
486: invokevirtual #87
489: aload         4
491: invokestatic  #39
494: aload         5
496: invokestatic  #139
499: new           #27
502: dup
503: invokespecial #28
506: ldc           #29
508: invokevirtual #30
511: aload         6
513: invokevirtual #30
516: ldc           #140
518: invokevirtual #30
521: invokevirtual #33
524: aload         6
526: ldc           #74
528: invokestatic  #91
531: new           #27
534: dup
535: invokespecial #28
538: ldc           #29
540: invokevirtual #30
543: aload         7
545: invokevirtual #30
548: ldc           #140
550: invokevirtual #30
553: invokevirtual #33
556: aload         7
558: ldc           #74
560: invokestatic  #91
563: aload         8
565: invokestatic  #39
568: new           #27
571: dup
572: invokespecial #28
575: ldc           #29
577: invokevirtual #30
580: iload         12
582: invokevirtual #35
585: ldc           #32
587: invokevirtual #30
590: iconst_0
591: invokevirtual #35
594: ldc           #29
596: invokevirtual #30
599: invokevirtual #33
602: iload         12
604: ifne          611
607: iconst_1
608: goto          612
611: iconst_0
612: invokestatic  #34
615: new           #27
618: dup
619: invokespecial #28
622: ldc           #29
624: invokevirtual #30
627: aload         13
629: invokevirtual #36
632: ldc           #32
634: invokevirtual #30
637: getstatic     #37
640: invokevirtual #36
643: ldc           #29
645: invokevirtual #30
648: invokevirtual #33
651: aload         13
653: getstatic     #37
656: invokevirtual #38
659: invokestatic  #34
662: new           #27
665: dup
666: invokespecial #28
669: ldc           #29
671: invokevirtual #30
674: aload         14
676: invokevirtual #36
679: ldc           #32
681: invokevirtual #30
684: getstatic     #49
687: invokevirtual #36
690: ldc           #29
692: invokevirtual #30
695: invokevirtual #33
698: aload         14
700: getstatic     #49
703: invokevirtual #50
706: invokestatic  #34
709: aload         15
711: invokestatic  #39
714: aload         16
716: invokestatic  #39
719: aload         17
721: invokestatic  #39
724: aload         18
726: invokestatic  #139
729: new           #27
732: dup
733: invokespecial #28
736: ldc           #29
738: invokevirtual #30
741: aload         19
743: invokevirtual #30
746: ldc           #140
748: invokevirtual #30
751: invokevirtual #33
754: aload         19
756: ldc           #74
758: invokestatic  #91
761: new           #27
764: dup
765: invokespecial #28
768: ldc           #29
770: invokevirtual #30
773: aload         20
775: invokevirtual #30
778: ldc           #140
780: invokevirtual #30
783: invokevirtual #33
786: aload         20
788: ldc           #74
790: invokestatic  #91
793: aload         21
795: invokestatic  #39
798: new           #27
801: dup
802: invokespecial #28
805: ldc           #29
807: invokevirtual #30
810: iload         25
812: invokevirtual #35
815: ldc           #32
817: invokevirtual #30
820: iconst_0
821: invokevirtual #35
824: ldc           #29
826: invokevirtual #30
829: invokevirtual #33
832: iload         25
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #34
845: new           #27
848: dup
849: invokespecial #28
852: ldc           #29
854: invokevirtual #30
857: aload         26
859: invokevirtual #36
862: ldc           #32
864: invokevirtual #30
867: getstatic     #37
870: invokevirtual #36
873: ldc           #29
875: invokevirtual #30
878: invokevirtual #33
881: aload         26
883: getstatic     #37
886: invokevirtual #38
889: invokestatic  #34
892: new           #27
895: dup
896: invokespecial #28
899: ldc           #29
901: invokevirtual #30
904: aload         27
906: invokevirtual #36
909: ldc           #32
911: invokevirtual #30
914: getstatic     #49
917: invokevirtual #36
920: ldc           #29
922: invokevirtual #30
925: invokevirtual #33
928: aload         27
930: getstatic     #49
933: invokevirtual #50
936: invokestatic  #34
939: aload         28
941: invokestatic  #39
944: aload         29
946: invokestatic  #39
949: aload         30
951: invokestatic  #39
954: new           #27
957: dup
958: invokespecial #28
961: ldc           #29
963: invokevirtual #30
966: iload         31
968: invokevirtual #35
971: ldc           #32
973: invokevirtual #30
976: iconst_0
977: invokevirtual #35
980: ldc           #29
982: invokevirtual #30
985: invokevirtual #33
988: iload         31
990: ifne          997
993: iconst_1
994: goto          998
997: iconst_0
998: invokestatic  #34
1001: new           #27
1004: dup
1005: invokespecial #28
1008: ldc           #29
1010: invokevirtual #30
1013: iload         36
1015: invokevirtual #35
1018: ldc           #32
1020: invokevirtual #30
1023: iconst_0
1024: invokevirtual #35
1027: ldc           #29
1029: invokevirtual #30
1032: invokevirtual #33
1035: iload         36
1037: ifne          1044
1040: iconst_1
1041: goto          1045
1044: iconst_0
1045: invokestatic  #34
1048: aload         37
1050: invokestatic  #39
1053: aload         38
1055: invokestatic  #39
1058: aload         39
1060: invokestatic  #39
1063: aload         40
1065: invokestatic  #39
1068: new           #27
1071: dup
1072: invokespecial #28
1075: ldc           #29
1077: invokevirtual #30
1080: aload         43
1082: invokevirtual #30
1085: ldc           #93
1087: invokevirtual #30
1090: invokevirtual #33
1093: aload         43
1095: ldc           #52
1097: invokestatic  #91
1100: new           #27
1103: dup
1104: invokespecial #28
1107: ldc           #29
1109: invokevirtual #30
1112: aload         44
1114: invokevirtual #30
1117: ldc           #94
1119: invokevirtual #30
1122: invokevirtual #33
1125: aload         44
1127: ldc           #95
1129: invokestatic  #91
1132: new           #27
1135: dup
1136: invokespecial #28
1139: ldc           #29
1141: invokevirtual #30
1144: iload         47
1146: invokevirtual #31
1149: ldc           #32
1151: invokevirtual #30
1154: iconst_1
1155: invokevirtual #31
1158: ldc           #29
1160: invokevirtual #30
1163: invokevirtual #33
1166: iload         47
1168: iconst_1
1169: if_icmpne     1176
1172: iconst_1
1173: goto          1177
1176: iconst_0
1177: invokestatic  #34
1180: new           #27
1183: dup
1184: invokespecial #28
1187: ldc           #29
1189: invokevirtual #30
1192: aload         48
1194: invokevirtual #36
1197: ldc           #32
1199: invokevirtual #30
1202: getstatic     #37
1205: invokevirtual #36
1208: ldc           #29
1210: invokevirtual #30
1213: invokevirtual #33
1216: aload         48
1218: getstatic     #37
1221: invokevirtual #38
1224: invokestatic  #34
1227: new           #27
1230: dup
1231: invokespecial #28
1234: ldc           #29
1236: invokevirtual #30
1239: iload         49
1241: invokevirtual #31
1244: ldc           #32
1246: invokevirtual #30
1249: iconst_1
1250: invokevirtual #31
1253: ldc           #29
1255: invokevirtual #30
1258: invokevirtual #33
1261: iload         49
1263: iconst_1
1264: if_icmpne     1271
1267: iconst_1
1268: goto          1272
1271: iconst_0
1272: invokestatic  #34
1275: aload         50
1277: invokestatic  #39
1280: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test86
Start line: 4834
End line: 4951
Method source code: 
    public void test86() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test86");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("", "[data-*=hi!]", ":nth-of-type(1n+1)", ":nth-of-type(10n+10)");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node11 = textNode10.parentNode;
        java.lang.String str12 = textNode10.nodeName();
        java.lang.String str13 = textNode10.nodeName();
        textNode10.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes16 = textNode10.attributes();
        java.lang.StringBuilder stringBuilder17 = null;
        org.jsoup.nodes.Attribute attribute21 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean23 = attribute21.shouldCollapseAttribute(outputSettings22);
        org.jsoup.nodes.Entities.EscapeMode escapeMode24 = outputSettings22.escapeMode();
        textNode10.outerHtmlTail(stringBuilder17, (int) (short) -1, outputSettings22);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax26 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings22.syntax(syntax26);
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings22.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings30 = outputSettings22.outline(true);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax31 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = outputSettings30.syntax(syntax31);
        org.jsoup.parser.Parser parser36 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean37 = parser36.isTrackErrors();
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse(" ", "#text", parser36);
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document38.getOutputSettings();
        java.lang.String str40 = org.jsoup.nodes.Entities.escape(":empty", outputSettings39);
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = outputSettings39.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode43 = outputSettings39.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = outputSettings30.escapeMode(escapeMode43);
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = new org.jsoup.nodes.Document.OutputSettings();
        int int46 = outputSettings45.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder47 = outputSettings45.encoder();
        org.jsoup.nodes.Comment comment50 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean52 = comment50.hasAttr("hi!");
        org.jsoup.nodes.Document document54 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element56 = document54.toggleClass("");
        org.jsoup.nodes.Node node57 = document54.clone();
        org.jsoup.nodes.Node node58 = comment50.doClone(node57);
        java.lang.StringBuilder stringBuilder59 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings61 = null;
        comment50.outerHtmlTail(stringBuilder59, 10, outputSettings61);
        java.lang.String str63 = comment50.getData();
        java.lang.String str64 = comment50.nodeName();
        java.lang.StringBuilder stringBuilder65 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = new org.jsoup.nodes.Document.OutputSettings();
        int int68 = outputSettings67.indentAmount();
        comment50.outerHtmlTail(stringBuilder65, 0, outputSettings67);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = outputSettings67.escapeMode();
        java.util.Map<java.lang.Character, java.lang.String> charMap71 = escapeMode70.getMap();
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = outputSettings45.escapeMode(escapeMode70);
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = outputSettings44.escapeMode(escapeMode70);
        documentType4.outerHtmlTail(stringBuilder6, (int) (byte) 10, outputSettings44);
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = outputSettings44.outline(true);
        org.jsoup.nodes.Document document79 = org.jsoup.Jsoup.parse("[^]", "hi!");
        java.lang.String str80 = document79.location();
        org.jsoup.select.Elements elements81 = document79.parents();
        org.jsoup.nodes.Document document82 = document79.normalise();
        org.jsoup.nodes.Element element84 = document79.text("<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>");
        org.jsoup.nodes.Attribute attribute87 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings88 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean89 = attribute87.shouldCollapseAttribute(outputSettings88);
        org.jsoup.nodes.Document.OutputSettings outputSettings91 = outputSettings88.outline(true);
        java.nio.charset.CharsetEncoder charsetEncoder92 = outputSettings91.encoder();
        boolean boolean93 = document79.equals((java.lang.Object) outputSettings91);
        org.jsoup.nodes.Entities.EscapeMode escapeMode94 = outputSettings91.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings95 = outputSettings76.escapeMode(escapeMode94);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertNotNull(textNode10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#text" + "'", str12, "#text");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#text" + "'", str13, "#text");
        org.junit.Assert.assertNotNull(attributes16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + escapeMode24 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode24.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax26 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax26.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(outputSettings30);
        org.junit.Assert.assertTrue("'" + syntax31 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax31.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings32);
        org.junit.Assert.assertNotNull(parser36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":empty" + "'", str40, ":empty");
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + escapeMode43 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode43.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(document54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#comment" + "'", str64, "#comment");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(charMap71);
        org.junit.Assert.assertNotNull(outputSettings72);
        org.junit.Assert.assertNotNull(outputSettings73);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(document79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(elements81);
        org.junit.Assert.assertNotNull(document82);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(outputSettings91);
        org.junit.Assert.assertNotNull(charsetEncoder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + escapeMode94 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode94.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #368
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc_w         #326
34: ldc           #176
36: ldc_w         #327
39: invokespecial #12
42: astore_1
43: aload_1
44: invokevirtual #97
47: astore_2
48: aconst_null
49: astore_3
50: ldc           #52
52: ldc           #52
54: invokestatic  #132
57: astore        4
59: aload         4
61: getfield      #133
64: astore        5
66: aload         4
68: invokevirtual #134
71: astore        6
73: aload         4
75: invokevirtual #134
78: astore        7
80: aload         4
82: ldc           #135
84: invokevirtual #136
87: aload         4
89: invokevirtual #137
92: astore        8
94: aconst_null
95: astore        9
97: new           #16
100: dup
101: ldc           #17
103: ldc           #18
105: invokespecial #19
108: astore        10
110: new           #13
113: dup
114: invokespecial #14
117: astore        11
119: aload         10
121: aload         11
123: invokevirtual #20
126: istore        12
128: aload         11
130: invokevirtual #21
133: astore        13
135: aload         4
137: aload         9
139: iconst_m1
140: aload         11
142: invokevirtual #86
145: getstatic     #49
148: astore        14
150: aload         11
152: aload         14
154: invokevirtual #138
157: astore        15
159: aload         11
161: invokevirtual #215
164: astore        16
166: aload         11
168: iconst_1
169: invokevirtual #44
172: astore        17
174: getstatic     #49
177: astore        18
179: aload         17
181: aload         18
183: invokevirtual #138
186: astore        19
188: invokestatic  #98
191: astore        20
193: aload         20
195: invokevirtual #99
198: istore        21
200: ldc           #72
202: ldc           #74
204: aload         20
206: invokestatic  #100
209: astore        22
211: aload         22
213: invokevirtual #101
216: astore        23
218: ldc           #212
220: aload         23
222: invokestatic  #112
225: astore        24
227: aload         23
229: iconst_0
230: invokevirtual #128
233: astore        25
235: aload         23
237: invokevirtual #21
240: astore        26
242: aload         17
244: aload         26
246: invokevirtual #22
249: astore        27
251: new           #13
254: dup
255: invokespecial #14
258: astore        28
260: aload         28
262: invokevirtual #15
265: istore        29
267: aload         28
269: invokevirtual #146
272: astore        30
274: new           #77
277: dup
278: ldc           #52
280: ldc           #52
282: invokespecial #78
285: astore        31
287: aload         31
289: ldc           #52
291: invokevirtual #79
294: istore        32
296: ldc           #52
298: invokestatic  #53
301: astore        33
303: aload         33
305: ldc           #9
307: invokevirtual #54
310: astore        34
312: aload         33
314: invokevirtual #80
317: astore        35
319: aload         31
321: aload         35
323: invokevirtual #81
326: astore        36
328: aconst_null
329: astore        37
331: aconst_null
332: astore        38
334: aload         31
336: aload         37
338: bipush        10
340: aload         38
342: invokevirtual #82
345: aload         31
347: invokevirtual #83
350: astore        39
352: aload         31
354: invokevirtual #84
357: astore        40
359: aconst_null
360: astore        41
362: new           #13
365: dup
366: invokespecial #14
369: astore        42
371: aload         42
373: invokevirtual #15
376: istore        43
378: aload         31
380: aload         41
382: iconst_0
383: aload         42
385: invokevirtual #82
388: aload         42
390: invokevirtual #21
393: astore        44
395: aload         44
397: invokevirtual #46
400: astore        45
402: aload         28
404: aload         44
406: invokevirtual #22
409: astore        46
411: aload         27
413: aload         44
415: invokevirtual #22
418: astore        47
420: aload_1
421: aload_3
422: bipush        10
424: aload         27
426: invokevirtual #87
429: aload         27
431: iconst_1
432: invokevirtual #44
435: astore        48
437: ldc           #59
439: ldc           #52
441: invokestatic  #70
444: astore        49
446: aload         49
448: invokevirtual #369
451: astore        50
453: aload         49
455: invokevirtual #370
458: astore        51
460: aload         49
462: invokevirtual #371
465: astore        52
467: aload         49
469: ldc           #188
471: invokevirtual #73
474: astore        53
476: new           #16
479: dup
480: ldc           #17
482: ldc           #18
484: invokespecial #19
487: astore        54
489: new           #13
492: dup
493: invokespecial #14
496: astore        55
498: aload         54
500: aload         55
502: invokevirtual #20
505: istore        56
507: aload         55
509: iconst_1
510: invokevirtual #44
513: astore        57
515: aload         57
517: invokevirtual #146
520: astore        58
522: aload         49
524: aload         57
526: invokevirtual #85
529: istore        59
531: aload         57
533: invokevirtual #21
536: astore        60
538: aload         48
540: aload         60
542: invokevirtual #22
545: astore        61
547: new           #27
550: dup
551: invokespecial #28
554: ldc           #29
556: invokevirtual #30
559: aload_2
560: invokevirtual #30
563: ldc           #102
565: invokevirtual #30
568: invokevirtual #33
571: aload_2
572: ldc           #103
574: invokestatic  #91
577: aload         4
579: invokestatic  #39
582: aload         5
584: invokestatic  #139
587: new           #27
590: dup
591: invokespecial #28
594: ldc           #29
596: invokevirtual #30
599: aload         6
601: invokevirtual #30
604: ldc           #140
606: invokevirtual #30
609: invokevirtual #33
612: aload         6
614: ldc           #74
616: invokestatic  #91
619: new           #27
622: dup
623: invokespecial #28
626: ldc           #29
628: invokevirtual #30
631: aload         7
633: invokevirtual #30
636: ldc           #140
638: invokevirtual #30
641: invokevirtual #33
644: aload         7
646: ldc           #74
648: invokestatic  #91
651: aload         8
653: invokestatic  #39
656: new           #27
659: dup
660: invokespecial #28
663: ldc           #29
665: invokevirtual #30
668: iload         12
670: invokevirtual #35
673: ldc           #32
675: invokevirtual #30
678: iconst_0
679: invokevirtual #35
682: ldc           #29
684: invokevirtual #30
687: invokevirtual #33
690: iload         12
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #34
703: new           #27
706: dup
707: invokespecial #28
710: ldc           #29
712: invokevirtual #30
715: aload         13
717: invokevirtual #36
720: ldc           #32
722: invokevirtual #30
725: getstatic     #37
728: invokevirtual #36
731: ldc           #29
733: invokevirtual #30
736: invokevirtual #33
739: aload         13
741: getstatic     #37
744: invokevirtual #38
747: invokestatic  #34
750: new           #27
753: dup
754: invokespecial #28
757: ldc           #29
759: invokevirtual #30
762: aload         14
764: invokevirtual #36
767: ldc           #32
769: invokevirtual #30
772: getstatic     #49
775: invokevirtual #36
778: ldc           #29
780: invokevirtual #30
783: invokevirtual #33
786: aload         14
788: getstatic     #49
791: invokevirtual #50
794: invokestatic  #34
797: aload         15
799: invokestatic  #39
802: aload         16
804: invokestatic  #39
807: aload         17
809: invokestatic  #39
812: new           #27
815: dup
816: invokespecial #28
819: ldc           #29
821: invokevirtual #30
824: aload         18
826: invokevirtual #36
829: ldc           #32
831: invokevirtual #30
834: getstatic     #49
837: invokevirtual #36
840: ldc           #29
842: invokevirtual #30
845: invokevirtual #33
848: aload         18
850: getstatic     #49
853: invokevirtual #50
856: invokestatic  #34
859: aload         19
861: invokestatic  #39
864: aload         20
866: invokestatic  #39
869: new           #27
872: dup
873: invokespecial #28
876: ldc           #29
878: invokevirtual #30
881: iload         21
883: invokevirtual #35
886: ldc           #32
888: invokevirtual #30
891: iconst_0
892: invokevirtual #35
895: ldc           #29
897: invokevirtual #30
900: invokevirtual #33
903: iload         21
905: ifne          912
908: iconst_1
909: goto          913
912: iconst_0
913: invokestatic  #34
916: aload         22
918: invokestatic  #39
921: aload         23
923: invokestatic  #39
926: new           #27
929: dup
930: invokespecial #28
933: ldc           #29
935: invokevirtual #30
938: aload         24
940: invokevirtual #30
943: ldc           #213
945: invokevirtual #30
948: invokevirtual #33
951: aload         24
953: ldc           #212
955: invokestatic  #91
958: aload         25
960: invokestatic  #39
963: new           #27
966: dup
967: invokespecial #28
970: ldc           #29
972: invokevirtual #30
975: aload         26
977: invokevirtual #36
980: ldc           #32
982: invokevirtual #30
985: getstatic     #37
988: invokevirtual #36
991: ldc           #29
993: invokevirtual #30
996: invokevirtual #33
999: aload         26
1001: getstatic     #37
1004: invokevirtual #38
1007: invokestatic  #34
1010: aload         27
1012: invokestatic  #39
1015: new           #27
1018: dup
1019: invokespecial #28
1022: ldc           #29
1024: invokevirtual #30
1027: iload         29
1029: invokevirtual #31
1032: ldc           #32
1034: invokevirtual #30
1037: iconst_1
1038: invokevirtual #31
1041: ldc           #29
1043: invokevirtual #30
1046: invokevirtual #33
1049: iload         29
1051: iconst_1
1052: if_icmpne     1059
1055: iconst_1
1056: goto          1060
1059: iconst_0
1060: invokestatic  #34
1063: aload         30
1065: invokestatic  #39
1068: new           #27
1071: dup
1072: invokespecial #28
1075: ldc           #29
1077: invokevirtual #30
1080: iload         32
1082: invokevirtual #35
1085: ldc           #32
1087: invokevirtual #30
1090: iconst_0
1091: invokevirtual #35
1094: ldc           #29
1096: invokevirtual #30
1099: invokevirtual #33
1102: iload         32
1104: ifne          1111
1107: iconst_1
1108: goto          1112
1111: iconst_0
1112: invokestatic  #34
1115: aload         33
1117: invokestatic  #39
1120: aload         34
1122: invokestatic  #39
1125: aload         35
1127: invokestatic  #39
1130: aload         36
1132: invokestatic  #39
1135: new           #27
1138: dup
1139: invokespecial #28
1142: ldc           #29
1144: invokevirtual #30
1147: aload         39
1149: invokevirtual #30
1152: ldc           #93
1154: invokevirtual #30
1157: invokevirtual #33
1160: aload         39
1162: ldc           #52
1164: invokestatic  #91
1167: new           #27
1170: dup
1171: invokespecial #28
1174: ldc           #29
1176: invokevirtual #30
1179: aload         40
1181: invokevirtual #30
1184: ldc           #94
1186: invokevirtual #30
1189: invokevirtual #33
1192: aload         40
1194: ldc           #95
1196: invokestatic  #91
1199: new           #27
1202: dup
1203: invokespecial #28
1206: ldc           #29
1208: invokevirtual #30
1211: iload         43
1213: invokevirtual #31
1216: ldc           #32
1218: invokevirtual #30
1221: iconst_1
1222: invokevirtual #31
1225: ldc           #29
1227: invokevirtual #30
1230: invokevirtual #33
1233: iload         43
1235: iconst_1
1236: if_icmpne     1243
1239: iconst_1
1240: goto          1244
1243: iconst_0
1244: invokestatic  #34
1247: new           #27
1250: dup
1251: invokespecial #28
1254: ldc           #29
1256: invokevirtual #30
1259: aload         44
1261: invokevirtual #36
1264: ldc           #32
1266: invokevirtual #30
1269: getstatic     #37
1272: invokevirtual #36
1275: ldc           #29
1277: invokevirtual #30
1280: invokevirtual #33
1283: aload         44
1285: getstatic     #37
1288: invokevirtual #38
1291: invokestatic  #34
1294: aload         45
1296: invokestatic  #39
1299: aload         46
1301: invokestatic  #39
1304: aload         47
1306: invokestatic  #39
1309: aload         48
1311: invokestatic  #39
1314: aload         49
1316: invokestatic  #39
1319: new           #27
1322: dup
1323: invokespecial #28
1326: ldc           #29
1328: invokevirtual #30
1331: aload         50
1333: invokevirtual #30
1336: ldc           #93
1338: invokevirtual #30
1341: invokevirtual #33
1344: aload         50
1346: ldc           #52
1348: invokestatic  #91
1351: aload         51
1353: invokestatic  #39
1356: aload         52
1358: invokestatic  #39
1361: aload         53
1363: invokestatic  #39
1366: new           #27
1369: dup
1370: invokespecial #28
1373: ldc           #29
1375: invokevirtual #30
1378: iload         56
1380: invokevirtual #35
1383: ldc           #32
1385: invokevirtual #30
1388: iconst_0
1389: invokevirtual #35
1392: ldc           #29
1394: invokevirtual #30
1397: invokevirtual #33
1400: iload         56
1402: ifne          1409
1405: iconst_1
1406: goto          1410
1409: iconst_0
1410: invokestatic  #34
1413: aload         57
1415: invokestatic  #39
1418: aload         58
1420: invokestatic  #39
1423: new           #27
1426: dup
1427: invokespecial #28
1430: ldc           #29
1432: invokevirtual #30
1435: iload         59
1437: invokevirtual #35
1440: ldc           #32
1442: invokevirtual #30
1445: iconst_0
1446: invokevirtual #35
1449: ldc           #29
1451: invokevirtual #30
1454: invokevirtual #33
1457: iload         59
1459: ifne          1466
1462: iconst_1
1463: goto          1467
1466: iconst_0
1467: invokestatic  #34
1470: new           #27
1473: dup
1474: invokespecial #28
1477: ldc           #29
1479: invokevirtual #30
1482: aload         60
1484: invokevirtual #36
1487: ldc           #32
1489: invokevirtual #30
1492: getstatic     #37
1495: invokevirtual #36
1498: ldc           #29
1500: invokevirtual #30
1503: invokevirtual #33
1506: aload         60
1508: getstatic     #37
1511: invokevirtual #38
1514: invokestatic  #34
1517: aload         61
1519: invokestatic  #39
1522: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test87
Start line: 4954
End line: 5079
Method source code: 
    public void test87() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test87");
        org.jsoup.select.Evaluator.IsFirstOfType isFirstOfType0 = new org.jsoup.select.Evaluator.IsFirstOfType();
        org.jsoup.nodes.Element element1 = null;
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element5 = document3.toggleClass("");
        java.lang.String str6 = element5.tagName();
        org.jsoup.nodes.Element element8 = element5.toggleClass("");
        org.jsoup.select.Elements elements10 = element8.getElementsContainingOwnText("hi!");
        java.lang.String str11 = element8.html();
        org.jsoup.nodes.Element element13 = element8.html("<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>");
        java.lang.String str15 = element8.attr("#text");
        java.lang.String str16 = element8.text();
        boolean boolean17 = isFirstOfType0.matches(element1, element8);
        java.lang.String str18 = element8.html();
        org.jsoup.nodes.Element element20 = element8.appendElement("#data text=\"[^]\"");
        java.lang.StringBuilder stringBuilder21 = null;
        org.jsoup.nodes.DocumentType documentType27 = new org.jsoup.nodes.DocumentType("", "[data-*=hi!]", ":nth-of-type(1n+1)", ":nth-of-type(10n+10)");
        java.lang.String str28 = documentType27.nodeName();
        java.lang.StringBuilder stringBuilder29 = null;
        org.jsoup.nodes.TextNode textNode33 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node34 = textNode33.parentNode;
        java.lang.String str35 = textNode33.nodeName();
        java.lang.String str36 = textNode33.nodeName();
        textNode33.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes39 = textNode33.attributes();
        java.lang.StringBuilder stringBuilder40 = null;
        org.jsoup.nodes.Attribute attribute44 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean46 = attribute44.shouldCollapseAttribute(outputSettings45);
        org.jsoup.nodes.Entities.EscapeMode escapeMode47 = outputSettings45.escapeMode();
        textNode33.outerHtmlTail(stringBuilder40, (int) (short) -1, outputSettings45);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax49 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings50 = outputSettings45.syntax(syntax49);
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = outputSettings45.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings45.outline(true);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax54 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = outputSettings53.syntax(syntax54);
        org.jsoup.parser.Parser parser59 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean60 = parser59.isTrackErrors();
        org.jsoup.nodes.Document document61 = org.jsoup.Jsoup.parse(" ", "#text", parser59);
        org.jsoup.nodes.Document.OutputSettings outputSettings62 = document61.getOutputSettings();
        java.lang.String str63 = org.jsoup.nodes.Entities.escape(":empty", outputSettings62);
        org.jsoup.nodes.Document.OutputSettings outputSettings65 = outputSettings62.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode66 = outputSettings62.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = outputSettings53.escapeMode(escapeMode66);
        org.jsoup.nodes.Document.OutputSettings outputSettings68 = new org.jsoup.nodes.Document.OutputSettings();
        int int69 = outputSettings68.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder70 = outputSettings68.encoder();
        org.jsoup.nodes.Comment comment73 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean75 = comment73.hasAttr("hi!");
        org.jsoup.nodes.Document document77 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element79 = document77.toggleClass("");
        org.jsoup.nodes.Node node80 = document77.clone();
        org.jsoup.nodes.Node node81 = comment73.doClone(node80);
        java.lang.StringBuilder stringBuilder82 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings84 = null;
        comment73.outerHtmlTail(stringBuilder82, 10, outputSettings84);
        java.lang.String str86 = comment73.getData();
        java.lang.String str87 = comment73.nodeName();
        java.lang.StringBuilder stringBuilder88 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings90 = new org.jsoup.nodes.Document.OutputSettings();
        int int91 = outputSettings90.indentAmount();
        comment73.outerHtmlTail(stringBuilder88, 0, outputSettings90);
        org.jsoup.nodes.Entities.EscapeMode escapeMode93 = outputSettings90.escapeMode();
        java.util.Map<java.lang.Character, java.lang.String> charMap94 = escapeMode93.getMap();
        org.jsoup.nodes.Document.OutputSettings outputSettings95 = outputSettings68.escapeMode(escapeMode93);
        org.jsoup.nodes.Document.OutputSettings outputSettings96 = outputSettings67.escapeMode(escapeMode93);
        documentType27.outerHtmlTail(stringBuilder29, (int) (byte) 10, outputSettings67);
        // The following exception was thrown during execution in test generation
        try {
            element8.indent(stringBuilder21, (int) (byte) 10, outputSettings67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "#root" + "'", str6, "#root");
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>" + "'", str11, "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>");
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[^]" + "'", str16, "[^]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[^]" + "'", str18, "[^]");
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#doctype" + "'", str28, "#doctype");
        org.junit.Assert.assertNotNull(textNode33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#text" + "'", str35, "#text");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "#text" + "'", str36, "#text");
        org.junit.Assert.assertNotNull(attributes39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + escapeMode47 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode47.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax49 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax49.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + syntax54 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax54.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings55);
        org.junit.Assert.assertNotNull(parser59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(outputSettings62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ":empty" + "'", str63, ":empty");
        org.junit.Assert.assertNotNull(outputSettings65);
        org.junit.Assert.assertTrue("'" + escapeMode66 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode66.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "#comment" + "'", str87, "#comment");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode93 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode93.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(charMap94);
        org.junit.Assert.assertNotNull(outputSettings95);
        org.junit.Assert.assertNotNull(outputSettings96);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #372
20: aastore
21: invokevirtual #7
24: pop
25: new           #373
28: dup
29: invokespecial #374
32: astore_1
33: aconst_null
34: astore_2
35: ldc           #52
37: invokestatic  #53
40: astore_3
41: aload_3
42: ldc           #9
44: invokevirtual #54
47: astore        4
49: aload         4
51: invokevirtual #67
54: astore        5
56: aload         4
58: ldc           #9
60: invokevirtual #68
63: astore        6
65: aload         6
67: ldc           #52
69: invokevirtual #147
72: astore        7
74: aload         6
76: invokevirtual #375
79: astore        8
81: aload         6
83: ldc           #188
85: invokevirtual #376
88: astore        9
90: aload         6
92: ldc           #74
94: invokevirtual #377
97: astore        10
99: aload         6
101: invokevirtual #378
104: astore        11
106: aload_1
107: aload_2
108: aload         6
110: invokevirtual #379
113: istore        12
115: aload         6
117: invokevirtual #375
120: astore        13
122: aload         6
124: ldc_w         #317
127: invokevirtual #380
130: astore        14
132: aconst_null
133: astore        15
135: new           #8
138: dup
139: ldc           #9
141: ldc_w         #326
144: ldc           #176
146: ldc_w         #327
149: invokespecial #12
152: astore        16
154: aload         16
156: invokevirtual #97
159: astore        17
161: aconst_null
162: astore        18
164: ldc           #52
166: ldc           #52
168: invokestatic  #132
171: astore        19
173: aload         19
175: getfield      #133
178: astore        20
180: aload         19
182: invokevirtual #134
185: astore        21
187: aload         19
189: invokevirtual #134
192: astore        22
194: aload         19
196: ldc           #135
198: invokevirtual #136
201: aload         19
203: invokevirtual #137
206: astore        23
208: aconst_null
209: astore        24
211: new           #16
214: dup
215: ldc           #17
217: ldc           #18
219: invokespecial #19
222: astore        25
224: new           #13
227: dup
228: invokespecial #14
231: astore        26
233: aload         25
235: aload         26
237: invokevirtual #20
240: istore        27
242: aload         26
244: invokevirtual #21
247: astore        28
249: aload         19
251: aload         24
253: iconst_m1
254: aload         26
256: invokevirtual #86
259: getstatic     #49
262: astore        29
264: aload         26
266: aload         29
268: invokevirtual #138
271: astore        30
273: aload         26
275: invokevirtual #215
278: astore        31
280: aload         26
282: iconst_1
283: invokevirtual #44
286: astore        32
288: getstatic     #49
291: astore        33
293: aload         32
295: aload         33
297: invokevirtual #138
300: astore        34
302: invokestatic  #98
305: astore        35
307: aload         35
309: invokevirtual #99
312: istore        36
314: ldc           #72
316: ldc           #74
318: aload         35
320: invokestatic  #100
323: astore        37
325: aload         37
327: invokevirtual #101
330: astore        38
332: ldc           #212
334: aload         38
336: invokestatic  #112
339: astore        39
341: aload         38
343: iconst_0
344: invokevirtual #128
347: astore        40
349: aload         38
351: invokevirtual #21
354: astore        41
356: aload         32
358: aload         41
360: invokevirtual #22
363: astore        42
365: new           #13
368: dup
369: invokespecial #14
372: astore        43
374: aload         43
376: invokevirtual #15
379: istore        44
381: aload         43
383: invokevirtual #146
386: astore        45
388: new           #77
391: dup
392: ldc           #52
394: ldc           #52
396: invokespecial #78
399: astore        46
401: aload         46
403: ldc           #52
405: invokevirtual #79
408: istore        47
410: ldc           #52
412: invokestatic  #53
415: astore        48
417: aload         48
419: ldc           #9
421: invokevirtual #54
424: astore        49
426: aload         48
428: invokevirtual #80
431: astore        50
433: aload         46
435: aload         50
437: invokevirtual #81
440: astore        51
442: aconst_null
443: astore        52
445: aconst_null
446: astore        53
448: aload         46
450: aload         52
452: bipush        10
454: aload         53
456: invokevirtual #82
459: aload         46
461: invokevirtual #83
464: astore        54
466: aload         46
468: invokevirtual #84
471: astore        55
473: aconst_null
474: astore        56
476: new           #13
479: dup
480: invokespecial #14
483: astore        57
485: aload         57
487: invokevirtual #15
490: istore        58
492: aload         46
494: aload         56
496: iconst_0
497: aload         57
499: invokevirtual #82
502: aload         57
504: invokevirtual #21
507: astore        59
509: aload         59
511: invokevirtual #46
514: astore        60
516: aload         43
518: aload         59
520: invokevirtual #22
523: astore        61
525: aload         42
527: aload         59
529: invokevirtual #22
532: astore        62
534: aload         16
536: aload         18
538: bipush        10
540: aload         42
542: invokevirtual #87
545: aload         6
547: aload         15
549: bipush        10
551: aload         42
553: invokevirtual #381
556: ldc           #24
558: invokestatic  #25
561: goto          566
564: astore        63
566: aload_3
567: invokestatic  #39
570: aload         4
572: invokestatic  #39
575: new           #27
578: dup
579: invokespecial #28
582: ldc           #29
584: invokevirtual #30
587: aload         5
589: invokevirtual #30
592: ldc           #92
594: invokevirtual #30
597: invokevirtual #33
600: aload         5
602: ldc           #17
604: invokestatic  #91
607: aload         6
609: invokestatic  #39
612: aload         7
614: invokestatic  #39
617: new           #27
620: dup
621: invokespecial #28
624: ldc           #29
626: invokevirtual #30
629: aload         8
631: invokevirtual #30
634: ldc_w         #382
637: invokevirtual #30
640: invokevirtual #33
643: aload         8
645: ldc           #10
647: invokestatic  #91
650: aload         9
652: invokestatic  #39
655: new           #27
658: dup
659: invokespecial #28
662: ldc           #29
664: invokevirtual #30
667: aload         10
669: invokevirtual #30
672: ldc           #90
674: invokevirtual #30
677: invokevirtual #33
680: aload         10
682: ldc           #9
684: invokestatic  #91
687: new           #27
690: dup
691: invokespecial #28
694: ldc           #29
696: invokevirtual #30
699: aload         11
701: invokevirtual #30
704: ldc_w         #383
707: invokevirtual #30
710: invokevirtual #33
713: aload         11
715: ldc           #59
717: invokestatic  #91
720: new           #27
723: dup
724: invokespecial #28
727: ldc           #29
729: invokevirtual #30
732: iload         12
734: invokevirtual #35
737: ldc           #32
739: invokevirtual #30
742: iconst_0
743: invokevirtual #35
746: ldc           #29
748: invokevirtual #30
751: invokevirtual #33
754: iload         12
756: ifne          763
759: iconst_1
760: goto          764
763: iconst_0
764: invokestatic  #34
767: new           #27
770: dup
771: invokespecial #28
774: ldc           #29
776: invokevirtual #30
779: aload         13
781: invokevirtual #30
784: ldc_w         #383
787: invokevirtual #30
790: invokevirtual #33
793: aload         13
795: ldc           #59
797: invokestatic  #91
800: aload         14
802: invokestatic  #39
805: new           #27
808: dup
809: invokespecial #28
812: ldc           #29
814: invokevirtual #30
817: aload         17
819: invokevirtual #30
822: ldc           #102
824: invokevirtual #30
827: invokevirtual #33
830: aload         17
832: ldc           #103
834: invokestatic  #91
837: aload         19
839: invokestatic  #39
842: aload         20
844: invokestatic  #139
847: new           #27
850: dup
851: invokespecial #28
854: ldc           #29
856: invokevirtual #30
859: aload         21
861: invokevirtual #30
864: ldc           #140
866: invokevirtual #30
869: invokevirtual #33
872: aload         21
874: ldc           #74
876: invokestatic  #91
879: new           #27
882: dup
883: invokespecial #28
886: ldc           #29
888: invokevirtual #30
891: aload         22
893: invokevirtual #30
896: ldc           #140
898: invokevirtual #30
901: invokevirtual #33
904: aload         22
906: ldc           #74
908: invokestatic  #91
911: aload         23
913: invokestatic  #39
916: new           #27
919: dup
920: invokespecial #28
923: ldc           #29
925: invokevirtual #30
928: iload         27
930: invokevirtual #35
933: ldc           #32
935: invokevirtual #30
938: iconst_0
939: invokevirtual #35
942: ldc           #29
944: invokevirtual #30
947: invokevirtual #33
950: iload         27
952: ifne          959
955: iconst_1
956: goto          960
959: iconst_0
960: invokestatic  #34
963: new           #27
966: dup
967: invokespecial #28
970: ldc           #29
972: invokevirtual #30
975: aload         28
977: invokevirtual #36
980: ldc           #32
982: invokevirtual #30
985: getstatic     #37
988: invokevirtual #36
991: ldc           #29
993: invokevirtual #30
996: invokevirtual #33
999: aload         28
1001: getstatic     #37
1004: invokevirtual #38
1007: invokestatic  #34
1010: new           #27
1013: dup
1014: invokespecial #28
1017: ldc           #29
1019: invokevirtual #30
1022: aload         29
1024: invokevirtual #36
1027: ldc           #32
1029: invokevirtual #30
1032: getstatic     #49
1035: invokevirtual #36
1038: ldc           #29
1040: invokevirtual #30
1043: invokevirtual #33
1046: aload         29
1048: getstatic     #49
1051: invokevirtual #50
1054: invokestatic  #34
1057: aload         30
1059: invokestatic  #39
1062: aload         31
1064: invokestatic  #39
1067: aload         32
1069: invokestatic  #39
1072: new           #27
1075: dup
1076: invokespecial #28
1079: ldc           #29
1081: invokevirtual #30
1084: aload         33
1086: invokevirtual #36
1089: ldc           #32
1091: invokevirtual #30
1094: getstatic     #49
1097: invokevirtual #36
1100: ldc           #29
1102: invokevirtual #30
1105: invokevirtual #33
1108: aload         33
1110: getstatic     #49
1113: invokevirtual #50
1116: invokestatic  #34
1119: aload         34
1121: invokestatic  #39
1124: aload         35
1126: invokestatic  #39
1129: new           #27
1132: dup
1133: invokespecial #28
1136: ldc           #29
1138: invokevirtual #30
1141: iload         36
1143: invokevirtual #35
1146: ldc           #32
1148: invokevirtual #30
1151: iconst_0
1152: invokevirtual #35
1155: ldc           #29
1157: invokevirtual #30
1160: invokevirtual #33
1163: iload         36
1165: ifne          1172
1168: iconst_1
1169: goto          1173
1172: iconst_0
1173: invokestatic  #34
1176: aload         37
1178: invokestatic  #39
1181: aload         38
1183: invokestatic  #39
1186: new           #27
1189: dup
1190: invokespecial #28
1193: ldc           #29
1195: invokevirtual #30
1198: aload         39
1200: invokevirtual #30
1203: ldc           #213
1205: invokevirtual #30
1208: invokevirtual #33
1211: aload         39
1213: ldc           #212
1215: invokestatic  #91
1218: aload         40
1220: invokestatic  #39
1223: new           #27
1226: dup
1227: invokespecial #28
1230: ldc           #29
1232: invokevirtual #30
1235: aload         41
1237: invokevirtual #36
1240: ldc           #32
1242: invokevirtual #30
1245: getstatic     #37
1248: invokevirtual #36
1251: ldc           #29
1253: invokevirtual #30
1256: invokevirtual #33
1259: aload         41
1261: getstatic     #37
1264: invokevirtual #38
1267: invokestatic  #34
1270: aload         42
1272: invokestatic  #39
1275: new           #27
1278: dup
1279: invokespecial #28
1282: ldc           #29
1284: invokevirtual #30
1287: iload         44
1289: invokevirtual #31
1292: ldc           #32
1294: invokevirtual #30
1297: iconst_1
1298: invokevirtual #31
1301: ldc           #29
1303: invokevirtual #30
1306: invokevirtual #33
1309: iload         44
1311: iconst_1
1312: if_icmpne     1319
1315: iconst_1
1316: goto          1320
1319: iconst_0
1320: invokestatic  #34
1323: aload         45
1325: invokestatic  #39
1328: new           #27
1331: dup
1332: invokespecial #28
1335: ldc           #29
1337: invokevirtual #30
1340: iload         47
1342: invokevirtual #35
1345: ldc           #32
1347: invokevirtual #30
1350: iconst_0
1351: invokevirtual #35
1354: ldc           #29
1356: invokevirtual #30
1359: invokevirtual #33
1362: iload         47
1364: ifne          1371
1367: iconst_1
1368: goto          1372
1371: iconst_0
1372: invokestatic  #34
1375: aload         48
1377: invokestatic  #39
1380: aload         49
1382: invokestatic  #39
1385: aload         50
1387: invokestatic  #39
1390: aload         51
1392: invokestatic  #39
1395: new           #27
1398: dup
1399: invokespecial #28
1402: ldc           #29
1404: invokevirtual #30
1407: aload         54
1409: invokevirtual #30
1412: ldc           #93
1414: invokevirtual #30
1417: invokevirtual #33
1420: aload         54
1422: ldc           #52
1424: invokestatic  #91
1427: new           #27
1430: dup
1431: invokespecial #28
1434: ldc           #29
1436: invokevirtual #30
1439: aload         55
1441: invokevirtual #30
1444: ldc           #94
1446: invokevirtual #30
1449: invokevirtual #33
1452: aload         55
1454: ldc           #95
1456: invokestatic  #91
1459: new           #27
1462: dup
1463: invokespecial #28
1466: ldc           #29
1468: invokevirtual #30
1471: iload         58
1473: invokevirtual #31
1476: ldc           #32
1478: invokevirtual #30
1481: iconst_1
1482: invokevirtual #31
1485: ldc           #29
1487: invokevirtual #30
1490: invokevirtual #33
1493: iload         58
1495: iconst_1
1496: if_icmpne     1503
1499: iconst_1
1500: goto          1504
1503: iconst_0
1504: invokestatic  #34
1507: new           #27
1510: dup
1511: invokespecial #28
1514: ldc           #29
1516: invokevirtual #30
1519: aload         59
1521: invokevirtual #36
1524: ldc           #32
1526: invokevirtual #30
1529: getstatic     #37
1532: invokevirtual #36
1535: ldc           #29
1537: invokevirtual #30
1540: invokevirtual #33
1543: aload         59
1545: getstatic     #37
1548: invokevirtual #38
1551: invokestatic  #34
1554: aload         60
1556: invokestatic  #39
1559: aload         61
1561: invokestatic  #39
1564: aload         62
1566: invokestatic  #39
1569: return
Exception table:
from    to  target type
545   561   564   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test88
Start line: 5082
End line: 5102
Method source code: 
    public void test88() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test88");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("class=\"\"=\"data-\"", "#root=\"\"", ":containsOwn( :last-of-type", "hi!hi!=\"data-\"");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.Attribute attribute9 = org.jsoup.nodes.Attribute.createFromEncoded(":first-child", ":nth-of-type(10n+10)");
        org.jsoup.parser.Parser parser13 = org.jsoup.parser.Parser.htmlParser();
        boolean boolean14 = parser13.isTrackErrors();
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse(" ", "#text", parser13);
        org.jsoup.nodes.Document.OutputSettings outputSettings16 = document15.getOutputSettings();
        java.lang.String str17 = org.jsoup.nodes.Entities.escape(":empty", outputSettings16);
        boolean boolean18 = attribute9.shouldCollapseAttribute(outputSettings16);
        documentType4.outerHtmlTail(stringBuilder5, 0, outputSettings16);
        org.junit.Assert.assertNotNull(attribute9);
        org.junit.Assert.assertNotNull(parser13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(outputSettings16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":empty" + "'", str17, ":empty");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #384
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #62
31: ldc_w         #336
34: ldc           #225
36: ldc_w         #337
39: invokespecial #12
42: astore_1
43: aconst_null
44: astore_2
45: ldc_w         #385
48: ldc_w         #327
51: invokestatic  #293
54: astore_3
55: invokestatic  #98
58: astore        4
60: aload         4
62: invokevirtual #99
65: istore        5
67: ldc           #72
69: ldc           #74
71: aload         4
73: invokestatic  #100
76: astore        6
78: aload         6
80: invokevirtual #101
83: astore        7
85: ldc           #212
87: aload         7
89: invokestatic  #112
92: astore        8
94: aload_3
95: aload         7
97: invokevirtual #20
100: istore        9
102: aload_1
103: aload_2
104: iconst_0
105: aload         7
107: invokevirtual #87
110: aload_3
111: invokestatic  #39
114: aload         4
116: invokestatic  #39
119: new           #27
122: dup
123: invokespecial #28
126: ldc           #29
128: invokevirtual #30
131: iload         5
133: invokevirtual #35
136: ldc           #32
138: invokevirtual #30
141: iconst_0
142: invokevirtual #35
145: ldc           #29
147: invokevirtual #30
150: invokevirtual #33
153: iload         5
155: ifne          162
158: iconst_1
159: goto          163
162: iconst_0
163: invokestatic  #34
166: aload         6
168: invokestatic  #39
171: aload         7
173: invokestatic  #39
176: new           #27
179: dup
180: invokespecial #28
183: ldc           #29
185: invokevirtual #30
188: aload         8
190: invokevirtual #30
193: ldc           #213
195: invokevirtual #30
198: invokevirtual #33
201: aload         8
203: ldc           #212
205: invokestatic  #91
208: new           #27
211: dup
212: invokespecial #28
215: ldc           #29
217: invokevirtual #30
220: iload         9
222: invokevirtual #35
225: ldc           #32
227: invokevirtual #30
230: iconst_0
231: invokevirtual #35
234: ldc           #29
236: invokevirtual #30
239: invokevirtual #33
242: iload         9
244: ifne          251
247: iconst_1
248: goto          252
251: iconst_0
252: invokestatic  #34
255: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test89
Start line: 5105
End line: 5192
Method source code: 
    public void test89() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test89");
        org.jsoup.nodes.TextNode textNode2 = new org.jsoup.nodes.TextNode(":nth-of-type(10n+10)", "<html>\n <head></head>\n <body>\n  [^]\n </body>\n</html>");
        org.jsoup.nodes.Attributes attributes3 = textNode2.attributes();
        java.lang.StringBuilder stringBuilder4 = null;
        org.jsoup.nodes.DocumentType documentType9 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder10 = null;
        org.jsoup.nodes.TextNode textNode14 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str15 = textNode14.getWholeText();
        java.lang.String str17 = textNode14.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder18 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType20 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document23 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element27 = document25.toggleClass("");
        java.lang.String str28 = element27.tagName();
        org.jsoup.nodes.Element element30 = element27.toggleClass("");
        boolean boolean31 = isOnlyOfType20.matches((org.jsoup.nodes.Element) document23, element27);
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements36 = document34.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element38 = document34.text(" ");
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements43 = document41.getElementsContainingText("#data");
        boolean boolean44 = isOnlyOfType20.matches((org.jsoup.nodes.Element) document34, (org.jsoup.nodes.Element) document41);
        org.jsoup.nodes.Comment comment47 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean49 = comment47.hasAttr("hi!");
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element53 = document51.toggleClass("");
        org.jsoup.nodes.Node node54 = document51.clone();
        org.jsoup.nodes.Node node55 = comment47.doClone(node54);
        java.lang.StringBuilder stringBuilder56 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings58 = null;
        comment47.outerHtmlTail(stringBuilder56, 10, outputSettings58);
        java.lang.String str60 = comment47.getData();
        java.lang.String str61 = comment47.nodeName();
        java.lang.StringBuilder stringBuilder62 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = new org.jsoup.nodes.Document.OutputSettings();
        int int65 = outputSettings64.indentAmount();
        comment47.outerHtmlTail(stringBuilder62, 0, outputSettings64);
        boolean boolean67 = document41.equals((java.lang.Object) outputSettings64);
        textNode14.outerHtmlTail(stringBuilder18, (int) (short) 100, outputSettings64);
        documentType9.outerHtmlTail(stringBuilder10, (int) (short) 1, outputSettings64);
        java.lang.StringBuilder stringBuilder70 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = new org.jsoup.nodes.Document.OutputSettings();
        int int73 = outputSettings72.indentAmount();
        documentType9.outerHtmlTail(stringBuilder70, 0, outputSettings72);
        org.jsoup.nodes.Entities.EscapeMode escapeMode75 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = outputSettings72.escapeMode(escapeMode75);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings76.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings76.prettyPrint(true);
        // The following exception was thrown during execution in test generation
        try {
            attributes3.html(stringBuilder4, outputSettings80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(attributes3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#root" + "'", str28, "#root");
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(elements43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#comment" + "'", str61, "#comment");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode75 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode75.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(outputSettings78);
        org.junit.Assert.assertNotNull(outputSettings80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #386
20: aastore
21: invokevirtual #7
24: pop
25: new           #58
28: dup
29: ldc_w         #327
32: ldc           #188
34: invokespecial #60
37: astore_1
38: aload_1
39: invokevirtual #137
42: astore_2
43: aconst_null
44: astore_3
45: new           #8
48: dup
49: ldc           #9
51: ldc           #10
53: ldc           #11
55: ldc           #9
57: invokespecial #12
60: astore        4
62: aconst_null
63: astore        5
65: new           #58
68: dup
69: ldc           #9
71: ldc           #59
73: invokespecial #60
76: astore        6
78: aload         6
80: invokevirtual #61
83: astore        7
85: aload         6
87: ldc           #62
89: invokevirtual #63
92: astore        8
94: aconst_null
95: astore        9
97: new           #64
100: dup
101: invokespecial #65
104: astore        10
106: ldc           #9
108: ldc           #9
110: invokestatic  #66
113: astore        11
115: ldc           #52
117: invokestatic  #53
120: astore        12
122: aload         12
124: ldc           #9
126: invokevirtual #54
129: astore        13
131: aload         13
133: invokevirtual #67
136: astore        14
138: aload         13
140: ldc           #9
142: invokevirtual #68
145: astore        15
147: aload         10
149: aload         11
151: aload         13
153: invokevirtual #69
156: istore        16
158: ldc           #59
160: ldc           #52
162: invokestatic  #70
165: astore        17
167: aload         17
169: bipush        100
171: invokevirtual #71
174: astore        18
176: aload         17
178: ldc           #72
180: invokevirtual #73
183: astore        19
185: ldc           #74
187: ldc           #52
189: invokestatic  #70
192: astore        20
194: aload         20
196: ldc           #75
198: invokevirtual #76
201: astore        21
203: aload         10
205: aload         17
207: aload         20
209: invokevirtual #69
212: istore        22
214: new           #77
217: dup
218: ldc           #52
220: ldc           #52
222: invokespecial #78
225: astore        23
227: aload         23
229: ldc           #52
231: invokevirtual #79
234: istore        24
236: ldc           #52
238: invokestatic  #53
241: astore        25
243: aload         25
245: ldc           #9
247: invokevirtual #54
250: astore        26
252: aload         25
254: invokevirtual #80
257: astore        27
259: aload         23
261: aload         27
263: invokevirtual #81
266: astore        28
268: aconst_null
269: astore        29
271: aconst_null
272: astore        30
274: aload         23
276: aload         29
278: bipush        10
280: aload         30
282: invokevirtual #82
285: aload         23
287: invokevirtual #83
290: astore        31
292: aload         23
294: invokevirtual #84
297: astore        32
299: aconst_null
300: astore        33
302: new           #13
305: dup
306: invokespecial #14
309: astore        34
311: aload         34
313: invokevirtual #15
316: istore        35
318: aload         23
320: aload         33
322: iconst_0
323: aload         34
325: invokevirtual #82
328: aload         20
330: aload         34
332: invokevirtual #85
335: istore        36
337: aload         6
339: aload         9
341: bipush        100
343: aload         34
345: invokevirtual #86
348: aload         4
350: aload         5
352: iconst_1
353: aload         34
355: invokevirtual #87
358: aconst_null
359: astore        37
361: new           #13
364: dup
365: invokespecial #14
368: astore        38
370: aload         38
372: invokevirtual #15
375: istore        39
377: aload         4
379: aload         37
381: iconst_0
382: aload         38
384: invokevirtual #87
387: getstatic     #127
390: astore        40
392: aload         38
394: aload         40
396: invokevirtual #22
399: astore        41
401: aload         41
403: iconst_0
404: invokevirtual #128
407: astore        42
409: aload         41
411: iconst_1
412: invokevirtual #128
415: astore        43
417: aload_2
418: aload_3
419: aload         43
421: invokevirtual #233
424: ldc           #24
426: invokestatic  #25
429: goto          434
432: astore        44
434: aload_2
435: invokestatic  #39
438: new           #27
441: dup
442: invokespecial #28
445: ldc           #29
447: invokevirtual #30
450: aload         7
452: invokevirtual #30
455: ldc           #90
457: invokevirtual #30
460: invokevirtual #33
463: aload         7
465: ldc           #9
467: invokestatic  #91
470: new           #27
473: dup
474: invokespecial #28
477: ldc           #29
479: invokevirtual #30
482: aload         8
484: invokevirtual #30
487: ldc           #90
489: invokevirtual #30
492: invokevirtual #33
495: aload         8
497: ldc           #9
499: invokestatic  #91
502: aload         11
504: invokestatic  #39
507: aload         12
509: invokestatic  #39
512: aload         13
514: invokestatic  #39
517: new           #27
520: dup
521: invokespecial #28
524: ldc           #29
526: invokevirtual #30
529: aload         14
531: invokevirtual #30
534: ldc           #92
536: invokevirtual #30
539: invokevirtual #33
542: aload         14
544: ldc           #17
546: invokestatic  #91
549: aload         15
551: invokestatic  #39
554: new           #27
557: dup
558: invokespecial #28
561: ldc           #29
563: invokevirtual #30
566: iload         16
568: invokevirtual #35
571: ldc           #32
573: invokevirtual #30
576: iconst_0
577: invokevirtual #35
580: ldc           #29
582: invokevirtual #30
585: invokevirtual #33
588: iload         16
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #34
601: aload         17
603: invokestatic  #39
606: aload         18
608: invokestatic  #39
611: aload         19
613: invokestatic  #39
616: aload         20
618: invokestatic  #39
621: aload         21
623: invokestatic  #39
626: new           #27
629: dup
630: invokespecial #28
633: ldc           #29
635: invokevirtual #30
638: iload         22
640: invokevirtual #35
643: ldc           #32
645: invokevirtual #30
648: iconst_0
649: invokevirtual #35
652: ldc           #29
654: invokevirtual #30
657: invokevirtual #33
660: iload         22
662: ifne          669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #34
673: new           #27
676: dup
677: invokespecial #28
680: ldc           #29
682: invokevirtual #30
685: iload         24
687: invokevirtual #35
690: ldc           #32
692: invokevirtual #30
695: iconst_0
696: invokevirtual #35
699: ldc           #29
701: invokevirtual #30
704: invokevirtual #33
707: iload         24
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #34
720: aload         25
722: invokestatic  #39
725: aload         26
727: invokestatic  #39
730: aload         27
732: invokestatic  #39
735: aload         28
737: invokestatic  #39
740: new           #27
743: dup
744: invokespecial #28
747: ldc           #29
749: invokevirtual #30
752: aload         31
754: invokevirtual #30
757: ldc           #93
759: invokevirtual #30
762: invokevirtual #33
765: aload         31
767: ldc           #52
769: invokestatic  #91
772: new           #27
775: dup
776: invokespecial #28
779: ldc           #29
781: invokevirtual #30
784: aload         32
786: invokevirtual #30
789: ldc           #94
791: invokevirtual #30
794: invokevirtual #33
797: aload         32
799: ldc           #95
801: invokestatic  #91
804: new           #27
807: dup
808: invokespecial #28
811: ldc           #29
813: invokevirtual #30
816: iload         35
818: invokevirtual #31
821: ldc           #32
823: invokevirtual #30
826: iconst_1
827: invokevirtual #31
830: ldc           #29
832: invokevirtual #30
835: invokevirtual #33
838: iload         35
840: iconst_1
841: if_icmpne     848
844: iconst_1
845: goto          849
848: iconst_0
849: invokestatic  #34
852: new           #27
855: dup
856: invokespecial #28
859: ldc           #29
861: invokevirtual #30
864: iload         36
866: invokevirtual #35
869: ldc           #32
871: invokevirtual #30
874: iconst_0
875: invokevirtual #35
878: ldc           #29
880: invokevirtual #30
883: invokevirtual #33
886: iload         36
888: ifne          895
891: iconst_1
892: goto          896
895: iconst_0
896: invokestatic  #34
899: new           #27
902: dup
903: invokespecial #28
906: ldc           #29
908: invokevirtual #30
911: iload         39
913: invokevirtual #31
916: ldc           #32
918: invokevirtual #30
921: iconst_1
922: invokevirtual #31
925: ldc           #29
927: invokevirtual #30
930: invokevirtual #33
933: iload         39
935: iconst_1
936: if_icmpne     943
939: iconst_1
940: goto          944
943: iconst_0
944: invokestatic  #34
947: new           #27
950: dup
951: invokespecial #28
954: ldc           #29
956: invokevirtual #30
959: aload         40
961: invokevirtual #36
964: ldc           #32
966: invokevirtual #30
969: getstatic     #127
972: invokevirtual #36
975: ldc           #29
977: invokevirtual #30
980: invokevirtual #33
983: aload         40
985: getstatic     #127
988: invokevirtual #38
991: invokestatic  #34
994: aload         41
996: invokestatic  #39
999: aload         42
1001: invokestatic  #39
1004: aload         43
1006: invokestatic  #39
1009: return
Exception table:
from    to  target type
417   429   432   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test90
Start line: 5195
End line: 5287
Method source code: 
    public void test90() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test90");
        org.jsoup.nodes.Document document1 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.select.Elements elements4 = document1.getElementsByAttributeValue("<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", " class=\"\"");
        org.jsoup.nodes.Document document5 = document1.normalise();
        boolean boolean6 = document5.isBlock();
        java.lang.StringBuilder stringBuilder7 = null;
        org.jsoup.nodes.DocumentType documentType13 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.nodes.TextNode textNode18 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str19 = textNode18.getWholeText();
        java.lang.String str21 = textNode18.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder22 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType24 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document27 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element31 = document29.toggleClass("");
        java.lang.String str32 = element31.tagName();
        org.jsoup.nodes.Element element34 = element31.toggleClass("");
        boolean boolean35 = isOnlyOfType24.matches((org.jsoup.nodes.Element) document27, element31);
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements40 = document38.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element42 = document38.text(" ");
        org.jsoup.nodes.Document document45 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements47 = document45.getElementsContainingText("#data");
        boolean boolean48 = isOnlyOfType24.matches((org.jsoup.nodes.Element) document38, (org.jsoup.nodes.Element) document45);
        org.jsoup.nodes.Comment comment51 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean53 = comment51.hasAttr("hi!");
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element57 = document55.toggleClass("");
        org.jsoup.nodes.Node node58 = document55.clone();
        org.jsoup.nodes.Node node59 = comment51.doClone(node58);
        java.lang.StringBuilder stringBuilder60 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings62 = null;
        comment51.outerHtmlTail(stringBuilder60, 10, outputSettings62);
        java.lang.String str64 = comment51.getData();
        java.lang.String str65 = comment51.nodeName();
        java.lang.StringBuilder stringBuilder66 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings68 = new org.jsoup.nodes.Document.OutputSettings();
        int int69 = outputSettings68.indentAmount();
        comment51.outerHtmlTail(stringBuilder66, 0, outputSettings68);
        boolean boolean71 = document45.equals((java.lang.Object) outputSettings68);
        textNode18.outerHtmlTail(stringBuilder22, (int) (short) 100, outputSettings68);
        documentType13.outerHtmlTail(stringBuilder14, (int) (short) 1, outputSettings68);
        java.lang.StringBuilder stringBuilder74 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = new org.jsoup.nodes.Document.OutputSettings();
        int int77 = outputSettings76.indentAmount();
        documentType13.outerHtmlTail(stringBuilder74, 0, outputSettings76);
        org.jsoup.nodes.Entities.EscapeMode escapeMode79 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings76.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings82 = outputSettings80.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode83 = outputSettings82.escapeMode();
        // The following exception was thrown during execution in test generation
        try {
            document5.outerHtmlHead(stringBuilder7, (int) '4', outputSettings82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document1);
        org.junit.Assert.assertNotNull(elements4);
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#root" + "'", str32, "#root");
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(elements40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(elements47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#comment" + "'", str65, "#comment");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode79 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode79.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertNotNull(outputSettings82);
        org.junit.Assert.assertTrue("'" + escapeMode83 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode83.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #52
27: invokestatic  #53
30: astore_1
31: aload_1
32: ldc           #10
34: ldc           #42
36: invokevirtual #388
39: astore_2
40: aload_1
41: invokevirtual #371
44: astore_3
45: aload_3
46: invokevirtual #195
49: istore        4
51: aconst_null
52: astore        5
54: new           #8
57: dup
58: ldc           #9
60: ldc           #10
62: ldc           #11
64: ldc           #9
66: invokespecial #12
69: astore        6
71: aconst_null
72: astore        7
74: new           #58
77: dup
78: ldc           #9
80: ldc           #59
82: invokespecial #60
85: astore        8
87: aload         8
89: invokevirtual #61
92: astore        9
94: aload         8
96: ldc           #62
98: invokevirtual #63
101: astore        10
103: aconst_null
104: astore        11
106: new           #64
109: dup
110: invokespecial #65
113: astore        12
115: ldc           #9
117: ldc           #9
119: invokestatic  #66
122: astore        13
124: ldc           #52
126: invokestatic  #53
129: astore        14
131: aload         14
133: ldc           #9
135: invokevirtual #54
138: astore        15
140: aload         15
142: invokevirtual #67
145: astore        16
147: aload         15
149: ldc           #9
151: invokevirtual #68
154: astore        17
156: aload         12
158: aload         13
160: aload         15
162: invokevirtual #69
165: istore        18
167: ldc           #59
169: ldc           #52
171: invokestatic  #70
174: astore        19
176: aload         19
178: bipush        100
180: invokevirtual #71
183: astore        20
185: aload         19
187: ldc           #72
189: invokevirtual #73
192: astore        21
194: ldc           #74
196: ldc           #52
198: invokestatic  #70
201: astore        22
203: aload         22
205: ldc           #75
207: invokevirtual #76
210: astore        23
212: aload         12
214: aload         19
216: aload         22
218: invokevirtual #69
221: istore        24
223: new           #77
226: dup
227: ldc           #52
229: ldc           #52
231: invokespecial #78
234: astore        25
236: aload         25
238: ldc           #52
240: invokevirtual #79
243: istore        26
245: ldc           #52
247: invokestatic  #53
250: astore        27
252: aload         27
254: ldc           #9
256: invokevirtual #54
259: astore        28
261: aload         27
263: invokevirtual #80
266: astore        29
268: aload         25
270: aload         29
272: invokevirtual #81
275: astore        30
277: aconst_null
278: astore        31
280: aconst_null
281: astore        32
283: aload         25
285: aload         31
287: bipush        10
289: aload         32
291: invokevirtual #82
294: aload         25
296: invokevirtual #83
299: astore        33
301: aload         25
303: invokevirtual #84
306: astore        34
308: aconst_null
309: astore        35
311: new           #13
314: dup
315: invokespecial #14
318: astore        36
320: aload         36
322: invokevirtual #15
325: istore        37
327: aload         25
329: aload         35
331: iconst_0
332: aload         36
334: invokevirtual #82
337: aload         22
339: aload         36
341: invokevirtual #85
344: istore        38
346: aload         8
348: aload         11
350: bipush        100
352: aload         36
354: invokevirtual #86
357: aload         6
359: aload         7
361: iconst_1
362: aload         36
364: invokevirtual #87
367: aconst_null
368: astore        39
370: new           #13
373: dup
374: invokespecial #14
377: astore        40
379: aload         40
381: invokevirtual #15
384: istore        41
386: aload         6
388: aload         39
390: iconst_0
391: aload         40
393: invokevirtual #87
396: getstatic     #127
399: astore        42
401: aload         40
403: aload         42
405: invokevirtual #22
408: astore        43
410: aload         43
412: iconst_0
413: invokevirtual #128
416: astore        44
418: aload         44
420: invokevirtual #21
423: astore        45
425: aload_3
426: aload         5
428: bipush        52
430: aload         44
432: invokevirtual #389
435: ldc           #24
437: invokestatic  #25
440: goto          445
443: astore        46
445: aload_1
446: invokestatic  #39
449: aload_2
450: invokestatic  #39
453: aload_3
454: invokestatic  #39
457: new           #27
460: dup
461: invokespecial #28
464: ldc           #29
466: invokevirtual #30
469: iload         4
471: invokevirtual #35
474: ldc           #32
476: invokevirtual #30
479: iconst_0
480: invokevirtual #35
483: ldc           #29
485: invokevirtual #30
488: invokevirtual #33
491: iload         4
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #34
504: new           #27
507: dup
508: invokespecial #28
511: ldc           #29
513: invokevirtual #30
516: aload         9
518: invokevirtual #30
521: ldc           #90
523: invokevirtual #30
526: invokevirtual #33
529: aload         9
531: ldc           #9
533: invokestatic  #91
536: new           #27
539: dup
540: invokespecial #28
543: ldc           #29
545: invokevirtual #30
548: aload         10
550: invokevirtual #30
553: ldc           #90
555: invokevirtual #30
558: invokevirtual #33
561: aload         10
563: ldc           #9
565: invokestatic  #91
568: aload         13
570: invokestatic  #39
573: aload         14
575: invokestatic  #39
578: aload         15
580: invokestatic  #39
583: new           #27
586: dup
587: invokespecial #28
590: ldc           #29
592: invokevirtual #30
595: aload         16
597: invokevirtual #30
600: ldc           #92
602: invokevirtual #30
605: invokevirtual #33
608: aload         16
610: ldc           #17
612: invokestatic  #91
615: aload         17
617: invokestatic  #39
620: new           #27
623: dup
624: invokespecial #28
627: ldc           #29
629: invokevirtual #30
632: iload         18
634: invokevirtual #35
637: ldc           #32
639: invokevirtual #30
642: iconst_0
643: invokevirtual #35
646: ldc           #29
648: invokevirtual #30
651: invokevirtual #33
654: iload         18
656: ifne          663
659: iconst_1
660: goto          664
663: iconst_0
664: invokestatic  #34
667: aload         19
669: invokestatic  #39
672: aload         20
674: invokestatic  #39
677: aload         21
679: invokestatic  #39
682: aload         22
684: invokestatic  #39
687: aload         23
689: invokestatic  #39
692: new           #27
695: dup
696: invokespecial #28
699: ldc           #29
701: invokevirtual #30
704: iload         24
706: invokevirtual #35
709: ldc           #32
711: invokevirtual #30
714: iconst_0
715: invokevirtual #35
718: ldc           #29
720: invokevirtual #30
723: invokevirtual #33
726: iload         24
728: ifne          735
731: iconst_1
732: goto          736
735: iconst_0
736: invokestatic  #34
739: new           #27
742: dup
743: invokespecial #28
746: ldc           #29
748: invokevirtual #30
751: iload         26
753: invokevirtual #35
756: ldc           #32
758: invokevirtual #30
761: iconst_0
762: invokevirtual #35
765: ldc           #29
767: invokevirtual #30
770: invokevirtual #33
773: iload         26
775: ifne          782
778: iconst_1
779: goto          783
782: iconst_0
783: invokestatic  #34
786: aload         27
788: invokestatic  #39
791: aload         28
793: invokestatic  #39
796: aload         29
798: invokestatic  #39
801: aload         30
803: invokestatic  #39
806: new           #27
809: dup
810: invokespecial #28
813: ldc           #29
815: invokevirtual #30
818: aload         33
820: invokevirtual #30
823: ldc           #93
825: invokevirtual #30
828: invokevirtual #33
831: aload         33
833: ldc           #52
835: invokestatic  #91
838: new           #27
841: dup
842: invokespecial #28
845: ldc           #29
847: invokevirtual #30
850: aload         34
852: invokevirtual #30
855: ldc           #94
857: invokevirtual #30
860: invokevirtual #33
863: aload         34
865: ldc           #95
867: invokestatic  #91
870: new           #27
873: dup
874: invokespecial #28
877: ldc           #29
879: invokevirtual #30
882: iload         37
884: invokevirtual #31
887: ldc           #32
889: invokevirtual #30
892: iconst_1
893: invokevirtual #31
896: ldc           #29
898: invokevirtual #30
901: invokevirtual #33
904: iload         37
906: iconst_1
907: if_icmpne     914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #34
918: new           #27
921: dup
922: invokespecial #28
925: ldc           #29
927: invokevirtual #30
930: iload         38
932: invokevirtual #35
935: ldc           #32
937: invokevirtual #30
940: iconst_0
941: invokevirtual #35
944: ldc           #29
946: invokevirtual #30
949: invokevirtual #33
952: iload         38
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #34
965: new           #27
968: dup
969: invokespecial #28
972: ldc           #29
974: invokevirtual #30
977: iload         41
979: invokevirtual #31
982: ldc           #32
984: invokevirtual #30
987: iconst_1
988: invokevirtual #31
991: ldc           #29
993: invokevirtual #30
996: invokevirtual #33
999: iload         41
1001: iconst_1
1002: if_icmpne     1009
1005: iconst_1
1006: goto          1010
1009: iconst_0
1010: invokestatic  #34
1013: new           #27
1016: dup
1017: invokespecial #28
1020: ldc           #29
1022: invokevirtual #30
1025: aload         42
1027: invokevirtual #36
1030: ldc           #32
1032: invokevirtual #30
1035: getstatic     #127
1038: invokevirtual #36
1041: ldc           #29
1043: invokevirtual #30
1046: invokevirtual #33
1049: aload         42
1051: getstatic     #127
1054: invokevirtual #38
1057: invokestatic  #34
1060: aload         43
1062: invokestatic  #39
1065: aload         44
1067: invokestatic  #39
1070: new           #27
1073: dup
1074: invokespecial #28
1077: ldc           #29
1079: invokevirtual #30
1082: aload         45
1084: invokevirtual #36
1087: ldc           #32
1089: invokevirtual #30
1092: getstatic     #127
1095: invokevirtual #36
1098: ldc           #29
1100: invokevirtual #30
1103: invokevirtual #33
1106: aload         45
1108: getstatic     #127
1111: invokevirtual #38
1114: invokestatic  #34
1117: return
Exception table:
from    to  target type
425   440   443   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test91
Start line: 5290
End line: 5368
Method source code: 
    public void test91() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test91");
        org.jsoup.nodes.DocumentType documentType5 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str11 = textNode10.getWholeText();
        java.lang.String str13 = textNode10.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder14 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType16 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document19 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element23 = document21.toggleClass("");
        java.lang.String str24 = element23.tagName();
        org.jsoup.nodes.Element element26 = element23.toggleClass("");
        boolean boolean27 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document19, element23);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements32 = document30.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element34 = document30.text(" ");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements39 = document37.getElementsContainingText("#data");
        boolean boolean40 = isOnlyOfType16.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document37);
        org.jsoup.nodes.Comment comment43 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean45 = comment43.hasAttr("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element49 = document47.toggleClass("");
        org.jsoup.nodes.Node node50 = document47.clone();
        org.jsoup.nodes.Node node51 = comment43.doClone(node50);
        java.lang.StringBuilder stringBuilder52 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = null;
        comment43.outerHtmlTail(stringBuilder52, 10, outputSettings54);
        java.lang.String str56 = comment43.getData();
        java.lang.String str57 = comment43.nodeName();
        java.lang.StringBuilder stringBuilder58 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = new org.jsoup.nodes.Document.OutputSettings();
        int int61 = outputSettings60.indentAmount();
        comment43.outerHtmlTail(stringBuilder58, 0, outputSettings60);
        boolean boolean63 = document37.equals((java.lang.Object) outputSettings60);
        textNode10.outerHtmlTail(stringBuilder14, (int) (short) 100, outputSettings60);
        documentType5.outerHtmlTail(stringBuilder6, (int) (short) 1, outputSettings60);
        java.lang.StringBuilder stringBuilder66 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings68 = new org.jsoup.nodes.Document.OutputSettings();
        int int69 = outputSettings68.indentAmount();
        documentType5.outerHtmlTail(stringBuilder66, 0, outputSettings68);
        org.jsoup.nodes.Entities.EscapeMode escapeMode71 = org.jsoup.nodes.Entities.EscapeMode.xhtml;
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = outputSettings68.escapeMode(escapeMode71);
        org.jsoup.nodes.Document.OutputSettings outputSettings74 = outputSettings72.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = outputSettings74.prettyPrint(true);
        java.lang.String str77 = org.jsoup.nodes.Entities.escape("*", outputSettings76);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#root" + "'", str24, "#root");
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + escapeMode71 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.xhtml + "'", escapeMode71.equals(org.jsoup.nodes.Entities.EscapeMode.xhtml));
        org.junit.Assert.assertNotNull(outputSettings72);
        org.junit.Assert.assertNotNull(outputSettings74);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "*" + "'", str77, "*");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #390
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc           #9
31: ldc           #10
33: ldc           #11
35: ldc           #9
37: invokespecial #12
40: astore_1
41: aconst_null
42: astore_2
43: new           #58
46: dup
47: ldc           #9
49: ldc           #59
51: invokespecial #60
54: astore_3
55: aload_3
56: invokevirtual #61
59: astore        4
61: aload_3
62: ldc           #62
64: invokevirtual #63
67: astore        5
69: aconst_null
70: astore        6
72: new           #64
75: dup
76: invokespecial #65
79: astore        7
81: ldc           #9
83: ldc           #9
85: invokestatic  #66
88: astore        8
90: ldc           #52
92: invokestatic  #53
95: astore        9
97: aload         9
99: ldc           #9
101: invokevirtual #54
104: astore        10
106: aload         10
108: invokevirtual #67
111: astore        11
113: aload         10
115: ldc           #9
117: invokevirtual #68
120: astore        12
122: aload         7
124: aload         8
126: aload         10
128: invokevirtual #69
131: istore        13
133: ldc           #59
135: ldc           #52
137: invokestatic  #70
140: astore        14
142: aload         14
144: bipush        100
146: invokevirtual #71
149: astore        15
151: aload         14
153: ldc           #72
155: invokevirtual #73
158: astore        16
160: ldc           #74
162: ldc           #52
164: invokestatic  #70
167: astore        17
169: aload         17
171: ldc           #75
173: invokevirtual #76
176: astore        18
178: aload         7
180: aload         14
182: aload         17
184: invokevirtual #69
187: istore        19
189: new           #77
192: dup
193: ldc           #52
195: ldc           #52
197: invokespecial #78
200: astore        20
202: aload         20
204: ldc           #52
206: invokevirtual #79
209: istore        21
211: ldc           #52
213: invokestatic  #53
216: astore        22
218: aload         22
220: ldc           #9
222: invokevirtual #54
225: astore        23
227: aload         22
229: invokevirtual #80
232: astore        24
234: aload         20
236: aload         24
238: invokevirtual #81
241: astore        25
243: aconst_null
244: astore        26
246: aconst_null
247: astore        27
249: aload         20
251: aload         26
253: bipush        10
255: aload         27
257: invokevirtual #82
260: aload         20
262: invokevirtual #83
265: astore        28
267: aload         20
269: invokevirtual #84
272: astore        29
274: aconst_null
275: astore        30
277: new           #13
280: dup
281: invokespecial #14
284: astore        31
286: aload         31
288: invokevirtual #15
291: istore        32
293: aload         20
295: aload         30
297: iconst_0
298: aload         31
300: invokevirtual #82
303: aload         17
305: aload         31
307: invokevirtual #85
310: istore        33
312: aload_3
313: aload         6
315: bipush        100
317: aload         31
319: invokevirtual #86
322: aload_1
323: aload_2
324: iconst_1
325: aload         31
327: invokevirtual #87
330: aconst_null
331: astore        34
333: new           #13
336: dup
337: invokespecial #14
340: astore        35
342: aload         35
344: invokevirtual #15
347: istore        36
349: aload_1
350: aload         34
352: iconst_0
353: aload         35
355: invokevirtual #87
358: getstatic     #127
361: astore        37
363: aload         35
365: aload         37
367: invokevirtual #22
370: astore        38
372: aload         38
374: iconst_0
375: invokevirtual #128
378: astore        39
380: aload         39
382: iconst_1
383: invokevirtual #128
386: astore        40
388: ldc_w         #391
391: aload         40
393: invokestatic  #112
396: astore        41
398: new           #27
401: dup
402: invokespecial #28
405: ldc           #29
407: invokevirtual #30
410: aload         4
412: invokevirtual #30
415: ldc           #90
417: invokevirtual #30
420: invokevirtual #33
423: aload         4
425: ldc           #9
427: invokestatic  #91
430: new           #27
433: dup
434: invokespecial #28
437: ldc           #29
439: invokevirtual #30
442: aload         5
444: invokevirtual #30
447: ldc           #90
449: invokevirtual #30
452: invokevirtual #33
455: aload         5
457: ldc           #9
459: invokestatic  #91
462: aload         8
464: invokestatic  #39
467: aload         9
469: invokestatic  #39
472: aload         10
474: invokestatic  #39
477: new           #27
480: dup
481: invokespecial #28
484: ldc           #29
486: invokevirtual #30
489: aload         11
491: invokevirtual #30
494: ldc           #92
496: invokevirtual #30
499: invokevirtual #33
502: aload         11
504: ldc           #17
506: invokestatic  #91
509: aload         12
511: invokestatic  #39
514: new           #27
517: dup
518: invokespecial #28
521: ldc           #29
523: invokevirtual #30
526: iload         13
528: invokevirtual #35
531: ldc           #32
533: invokevirtual #30
536: iconst_0
537: invokevirtual #35
540: ldc           #29
542: invokevirtual #30
545: invokevirtual #33
548: iload         13
550: ifne          557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #34
561: aload         14
563: invokestatic  #39
566: aload         15
568: invokestatic  #39
571: aload         16
573: invokestatic  #39
576: aload         17
578: invokestatic  #39
581: aload         18
583: invokestatic  #39
586: new           #27
589: dup
590: invokespecial #28
593: ldc           #29
595: invokevirtual #30
598: iload         19
600: invokevirtual #35
603: ldc           #32
605: invokevirtual #30
608: iconst_0
609: invokevirtual #35
612: ldc           #29
614: invokevirtual #30
617: invokevirtual #33
620: iload         19
622: ifne          629
625: iconst_1
626: goto          630
629: iconst_0
630: invokestatic  #34
633: new           #27
636: dup
637: invokespecial #28
640: ldc           #29
642: invokevirtual #30
645: iload         21
647: invokevirtual #35
650: ldc           #32
652: invokevirtual #30
655: iconst_0
656: invokevirtual #35
659: ldc           #29
661: invokevirtual #30
664: invokevirtual #33
667: iload         21
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #34
680: aload         22
682: invokestatic  #39
685: aload         23
687: invokestatic  #39
690: aload         24
692: invokestatic  #39
695: aload         25
697: invokestatic  #39
700: new           #27
703: dup
704: invokespecial #28
707: ldc           #29
709: invokevirtual #30
712: aload         28
714: invokevirtual #30
717: ldc           #93
719: invokevirtual #30
722: invokevirtual #33
725: aload         28
727: ldc           #52
729: invokestatic  #91
732: new           #27
735: dup
736: invokespecial #28
739: ldc           #29
741: invokevirtual #30
744: aload         29
746: invokevirtual #30
749: ldc           #94
751: invokevirtual #30
754: invokevirtual #33
757: aload         29
759: ldc           #95
761: invokestatic  #91
764: new           #27
767: dup
768: invokespecial #28
771: ldc           #29
773: invokevirtual #30
776: iload         32
778: invokevirtual #31
781: ldc           #32
783: invokevirtual #30
786: iconst_1
787: invokevirtual #31
790: ldc           #29
792: invokevirtual #30
795: invokevirtual #33
798: iload         32
800: iconst_1
801: if_icmpne     808
804: iconst_1
805: goto          809
808: iconst_0
809: invokestatic  #34
812: new           #27
815: dup
816: invokespecial #28
819: ldc           #29
821: invokevirtual #30
824: iload         33
826: invokevirtual #35
829: ldc           #32
831: invokevirtual #30
834: iconst_0
835: invokevirtual #35
838: ldc           #29
840: invokevirtual #30
843: invokevirtual #33
846: iload         33
848: ifne          855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #34
859: new           #27
862: dup
863: invokespecial #28
866: ldc           #29
868: invokevirtual #30
871: iload         36
873: invokevirtual #31
876: ldc           #32
878: invokevirtual #30
881: iconst_1
882: invokevirtual #31
885: ldc           #29
887: invokevirtual #30
890: invokevirtual #33
893: iload         36
895: iconst_1
896: if_icmpne     903
899: iconst_1
900: goto          904
903: iconst_0
904: invokestatic  #34
907: new           #27
910: dup
911: invokespecial #28
914: ldc           #29
916: invokevirtual #30
919: aload         37
921: invokevirtual #36
924: ldc           #32
926: invokevirtual #30
929: getstatic     #127
932: invokevirtual #36
935: ldc           #29
937: invokevirtual #30
940: invokevirtual #33
943: aload         37
945: getstatic     #127
948: invokevirtual #38
951: invokestatic  #34
954: aload         38
956: invokestatic  #39
959: aload         39
961: invokestatic  #39
964: aload         40
966: invokestatic  #39
969: new           #27
972: dup
973: invokespecial #28
976: ldc           #29
978: invokevirtual #30
981: aload         41
983: invokevirtual #30
986: ldc_w         #392
989: invokevirtual #30
992: invokevirtual #33
995: aload         41
997: ldc_w         #391
1000: invokestatic  #91
1003: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test92
Start line: 5371
End line: 5426
Method source code: 
    public void test92() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test92");
        org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.DataNode> dataNodeList0 = new org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.DataNode>();
        org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element4 = document2.toggleClass("");
        int int5 = document2.childNodeSize();
        org.jsoup.nodes.Document.QuirksMode quirksMode6 = org.jsoup.nodes.Document.QuirksMode.quirks;
        org.jsoup.nodes.Document document7 = document2.quirksMode(quirksMode6);
        java.lang.String str8 = document2.baseUri;
        org.jsoup.nodes.Document.QuirksMode quirksMode9 = org.jsoup.nodes.Document.QuirksMode.limitedQuirks;
        org.jsoup.nodes.Document document10 = document2.quirksMode(quirksMode9);
        org.jsoup.select.Elements elements13 = document10.getElementsByAttributeValueEnding("[   [^]  !=#data]\n<#root class=\"\">\n <html>\n  <head></head>\n  <body>\n   hi!hi!\n  </body>\n </html>\n</#root>\n<html></html>", ":lt(100)");
        boolean boolean14 = dataNodeList0.removeAll((java.util.Collection<org.jsoup.nodes.Element>) elements13);
        java.util.Iterator<org.jsoup.nodes.DataNode> dataNodeItor15 = dataNodeList0.descendingIterator();
        org.jsoup.nodes.DataNode dataNode18 = new org.jsoup.nodes.DataNode("", "");
        org.jsoup.nodes.DataNode dataNode20 = dataNode18.setWholeData("hi!");
        java.lang.String str21 = dataNode18.nodeName();
        org.jsoup.nodes.DataNode dataNode23 = dataNode18.setWholeData(":only-child");
        boolean boolean24 = dataNodeList0.offer(dataNode18);
        org.jsoup.nodes.DataNode dataNode25 = dataNodeList0.pollLast();
        java.util.ListIterator<org.jsoup.nodes.DataNode> dataNodeItor26 = dataNodeList0.listIterator();
        org.jsoup.nodes.DocumentType documentType31 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.String str32 = documentType31.nodeName();
        java.lang.StringBuilder stringBuilder33 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = new org.jsoup.nodes.Document.OutputSettings();
        int int36 = outputSettings35.indentAmount();
        java.nio.charset.CharsetEncoder charsetEncoder37 = outputSettings35.encoder();
        documentType31.outerHtmlTail(stringBuilder33, (int) (short) 1, outputSettings35);
        java.lang.String str39 = documentType31.nodeName();
        boolean boolean40 = dataNodeList0.remove((java.lang.Object) str39);
        org.jsoup.nodes.DataNode dataNode41 = dataNodeList0.peekFirst();
        org.junit.Assert.assertNotNull(document2);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + quirksMode6 + "' != '" + org.jsoup.nodes.Document.QuirksMode.quirks + "'", quirksMode6.equals(org.jsoup.nodes.Document.QuirksMode.quirks));
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + quirksMode9 + "' != '" + org.jsoup.nodes.Document.QuirksMode.limitedQuirks + "'", quirksMode9.equals(org.jsoup.nodes.Document.QuirksMode.limitedQuirks));
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(elements13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(dataNodeItor15);
        org.junit.Assert.assertNotNull(dataNode20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#data" + "'", str21, "#data");
        org.junit.Assert.assertNotNull(dataNode23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(dataNode25);
        org.junit.Assert.assertNotNull(dataNodeItor26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#doctype" + "'", str32, "#doctype");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(charsetEncoder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#doctype" + "'", str39, "#doctype");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(dataNode41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #393
20: aastore
21: invokevirtual #7
24: pop
25: new           #298
28: dup
29: invokespecial #299
32: astore_1
33: ldc           #52
35: invokestatic  #53
38: astore_2
39: aload_2
40: ldc           #9
42: invokevirtual #54
45: astore_3
46: aload_2
47: invokevirtual #55
50: istore        4
52: getstatic     #56
55: astore        5
57: aload_2
58: aload         5
60: invokevirtual #57
63: astore        6
65: aload_2
66: getfield      #300
69: astore        7
71: getstatic     #301
74: astore        8
76: aload_2
77: aload         8
79: invokevirtual #57
82: astore        9
84: aload         9
86: ldc_w         #302
89: ldc_w         #303
92: invokevirtual #304
95: astore        10
97: aload_1
98: aload         10
100: invokevirtual #305
103: istore        11
105: aload_1
106: invokevirtual #306
109: astore        12
111: new           #187
114: dup
115: ldc           #9
117: ldc           #9
119: invokespecial #189
122: astore        13
124: aload         13
126: ldc           #52
128: invokevirtual #190
131: astore        14
133: aload         13
135: invokevirtual #120
138: astore        15
140: aload         13
142: ldc           #223
144: invokevirtual #190
147: astore        16
149: aload_1
150: aload         13
152: invokevirtual #394
155: istore        17
157: aload_1
158: invokevirtual #395
161: checkcast     #187
164: astore        18
166: aload_1
167: invokevirtual #396
170: astore        19
172: new           #8
175: dup
176: ldc           #9
178: ldc           #10
180: ldc           #11
182: ldc           #9
184: invokespecial #12
187: astore        20
189: aload         20
191: invokevirtual #97
194: astore        21
196: aconst_null
197: astore        22
199: new           #13
202: dup
203: invokespecial #14
206: astore        23
208: aload         23
210: invokevirtual #15
213: istore        24
215: aload         23
217: invokevirtual #146
220: astore        25
222: aload         20
224: aload         22
226: iconst_1
227: aload         23
229: invokevirtual #87
232: aload         20
234: invokevirtual #97
237: astore        26
239: aload_1
240: aload         26
242: invokevirtual #397
245: istore        27
247: aload_1
248: invokevirtual #398
251: checkcast     #187
254: astore        28
256: aload_2
257: invokestatic  #39
260: aload_3
261: invokestatic  #39
264: new           #27
267: dup
268: invokespecial #28
271: ldc           #29
273: invokevirtual #30
276: iload         4
278: invokevirtual #31
281: ldc           #32
283: invokevirtual #30
286: iconst_1
287: invokevirtual #31
290: ldc           #29
292: invokevirtual #30
295: invokevirtual #33
298: iload         4
300: iconst_1
301: if_icmpne     308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #34
312: new           #27
315: dup
316: invokespecial #28
319: ldc           #29
321: invokevirtual #30
324: aload         5
326: invokevirtual #36
329: ldc           #32
331: invokevirtual #30
334: getstatic     #56
337: invokevirtual #36
340: ldc           #29
342: invokevirtual #30
345: invokevirtual #33
348: aload         5
350: getstatic     #56
353: invokevirtual #89
356: invokestatic  #34
359: aload         6
361: invokestatic  #39
364: new           #27
367: dup
368: invokespecial #28
371: ldc           #29
373: invokevirtual #30
376: aload         7
378: invokevirtual #30
381: ldc           #90
383: invokevirtual #30
386: invokevirtual #33
389: aload         7
391: ldc           #9
393: invokestatic  #91
396: new           #27
399: dup
400: invokespecial #28
403: ldc           #29
405: invokevirtual #30
408: aload         8
410: invokevirtual #36
413: ldc           #32
415: invokevirtual #30
418: getstatic     #301
421: invokevirtual #36
424: ldc           #29
426: invokevirtual #30
429: invokevirtual #33
432: aload         8
434: getstatic     #301
437: invokevirtual #89
440: invokestatic  #34
443: aload         9
445: invokestatic  #39
448: aload         10
450: invokestatic  #39
453: new           #27
456: dup
457: invokespecial #28
460: ldc           #29
462: invokevirtual #30
465: iload         11
467: invokevirtual #35
470: ldc           #32
472: invokevirtual #30
475: iconst_0
476: invokevirtual #35
479: ldc           #29
481: invokevirtual #30
484: invokevirtual #33
487: iload         11
489: ifne          496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #34
500: aload         12
502: invokestatic  #39
505: aload         14
507: invokestatic  #39
510: new           #27
513: dup
514: invokespecial #28
517: ldc           #29
519: invokevirtual #30
522: aload         15
524: invokevirtual #30
527: ldc           #125
529: invokevirtual #30
532: invokevirtual #33
535: aload         15
537: ldc           #75
539: invokestatic  #91
542: aload         16
544: invokestatic  #39
547: new           #27
550: dup
551: invokespecial #28
554: ldc           #29
556: invokevirtual #30
559: iload         17
561: invokevirtual #35
564: ldc           #32
566: invokevirtual #30
569: iconst_1
570: invokevirtual #35
573: ldc           #29
575: invokevirtual #30
578: invokevirtual #33
581: iload         17
583: iconst_1
584: if_icmpne     591
587: iconst_1
588: goto          592
591: iconst_0
592: invokestatic  #34
595: aload         18
597: invokestatic  #39
600: aload         19
602: invokestatic  #39
605: new           #27
608: dup
609: invokespecial #28
612: ldc           #29
614: invokevirtual #30
617: aload         21
619: invokevirtual #30
622: ldc           #102
624: invokevirtual #30
627: invokevirtual #33
630: aload         21
632: ldc           #103
634: invokestatic  #91
637: new           #27
640: dup
641: invokespecial #28
644: ldc           #29
646: invokevirtual #30
649: iload         24
651: invokevirtual #31
654: ldc           #32
656: invokevirtual #30
659: iconst_1
660: invokevirtual #31
663: ldc           #29
665: invokevirtual #30
668: invokevirtual #33
671: iload         24
673: iconst_1
674: if_icmpne     681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #34
685: aload         25
687: invokestatic  #39
690: new           #27
693: dup
694: invokespecial #28
697: ldc           #29
699: invokevirtual #30
702: aload         26
704: invokevirtual #30
707: ldc           #102
709: invokevirtual #30
712: invokevirtual #33
715: aload         26
717: ldc           #103
719: invokestatic  #91
722: new           #27
725: dup
726: invokespecial #28
729: ldc           #29
731: invokevirtual #30
734: iload         27
736: invokevirtual #35
739: ldc           #32
741: invokevirtual #30
744: iconst_0
745: invokevirtual #35
748: ldc           #29
750: invokevirtual #30
753: invokevirtual #33
756: iload         27
758: ifne          765
761: iconst_1
762: goto          766
765: iconst_0
766: invokestatic  #34
769: aload         28
771: invokestatic  #139
774: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test93
Start line: 5429
End line: 5468
Method source code: 
    public void test93() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test93");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("[[#data!=:last-child]!=#root]", "hi!hi! <html> <head></head> <body> #root=\"data-\" </body> </html>", "", "");
        java.lang.String str5 = documentType4.nodeName();
        java.lang.StringBuilder stringBuilder6 = null;
        org.jsoup.nodes.TextNode textNode10 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node11 = textNode10.parentNode;
        java.lang.String str12 = textNode10.nodeName();
        java.lang.String str13 = textNode10.nodeName();
        textNode10.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes16 = textNode10.attributes();
        java.lang.StringBuilder stringBuilder17 = null;
        org.jsoup.nodes.Attribute attribute21 = new org.jsoup.nodes.Attribute("#root", "data-");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean23 = attribute21.shouldCollapseAttribute(outputSettings22);
        org.jsoup.nodes.Entities.EscapeMode escapeMode24 = outputSettings22.escapeMode();
        textNode10.outerHtmlTail(stringBuilder17, (int) (short) -1, outputSettings22);
        org.jsoup.nodes.Document.OutputSettings.Syntax syntax26 = org.jsoup.nodes.Document.OutputSettings.Syntax.html;
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings22.syntax(syntax26);
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings22.clone();
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder6, (int) '4', outputSettings22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#doctype" + "'", str5, "#doctype");
        org.junit.Assert.assertNotNull(textNode10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#text" + "'", str12, "#text");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#text" + "'", str13, "#text");
        org.junit.Assert.assertNotNull(attributes16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + escapeMode24 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode24.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + syntax26 + "' != '" + org.jsoup.nodes.Document.OutputSettings.Syntax.html + "'", syntax26.equals(org.jsoup.nodes.Document.OutputSettings.Syntax.html));
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #399
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #400
32: ldc_w         #401
35: ldc           #9
37: ldc           #9
39: invokespecial #12
42: astore_1
43: aload_1
44: invokevirtual #97
47: astore_2
48: aconst_null
49: astore_3
50: ldc           #52
52: ldc           #52
54: invokestatic  #132
57: astore        4
59: aload         4
61: getfield      #133
64: astore        5
66: aload         4
68: invokevirtual #134
71: astore        6
73: aload         4
75: invokevirtual #134
78: astore        7
80: aload         4
82: ldc           #135
84: invokevirtual #136
87: aload         4
89: invokevirtual #137
92: astore        8
94: aconst_null
95: astore        9
97: new           #16
100: dup
101: ldc           #17
103: ldc           #18
105: invokespecial #19
108: astore        10
110: new           #13
113: dup
114: invokespecial #14
117: astore        11
119: aload         10
121: aload         11
123: invokevirtual #20
126: istore        12
128: aload         11
130: invokevirtual #21
133: astore        13
135: aload         4
137: aload         9
139: iconst_m1
140: aload         11
142: invokevirtual #86
145: getstatic     #49
148: astore        14
150: aload         11
152: aload         14
154: invokevirtual #138
157: astore        15
159: aload         11
161: invokevirtual #215
164: astore        16
166: aload_1
167: aload_3
168: bipush        52
170: aload         11
172: invokevirtual #23
175: ldc           #24
177: invokestatic  #25
180: goto          185
183: astore        17
185: new           #27
188: dup
189: invokespecial #28
192: ldc           #29
194: invokevirtual #30
197: aload_2
198: invokevirtual #30
201: ldc           #102
203: invokevirtual #30
206: invokevirtual #33
209: aload_2
210: ldc           #103
212: invokestatic  #91
215: aload         4
217: invokestatic  #39
220: aload         5
222: invokestatic  #139
225: new           #27
228: dup
229: invokespecial #28
232: ldc           #29
234: invokevirtual #30
237: aload         6
239: invokevirtual #30
242: ldc           #140
244: invokevirtual #30
247: invokevirtual #33
250: aload         6
252: ldc           #74
254: invokestatic  #91
257: new           #27
260: dup
261: invokespecial #28
264: ldc           #29
266: invokevirtual #30
269: aload         7
271: invokevirtual #30
274: ldc           #140
276: invokevirtual #30
279: invokevirtual #33
282: aload         7
284: ldc           #74
286: invokestatic  #91
289: aload         8
291: invokestatic  #39
294: new           #27
297: dup
298: invokespecial #28
301: ldc           #29
303: invokevirtual #30
306: iload         12
308: invokevirtual #35
311: ldc           #32
313: invokevirtual #30
316: iconst_0
317: invokevirtual #35
320: ldc           #29
322: invokevirtual #30
325: invokevirtual #33
328: iload         12
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #34
341: new           #27
344: dup
345: invokespecial #28
348: ldc           #29
350: invokevirtual #30
353: aload         13
355: invokevirtual #36
358: ldc           #32
360: invokevirtual #30
363: getstatic     #37
366: invokevirtual #36
369: ldc           #29
371: invokevirtual #30
374: invokevirtual #33
377: aload         13
379: getstatic     #37
382: invokevirtual #38
385: invokestatic  #34
388: new           #27
391: dup
392: invokespecial #28
395: ldc           #29
397: invokevirtual #30
400: aload         14
402: invokevirtual #36
405: ldc           #32
407: invokevirtual #30
410: getstatic     #49
413: invokevirtual #36
416: ldc           #29
418: invokevirtual #30
421: invokevirtual #33
424: aload         14
426: getstatic     #49
429: invokevirtual #50
432: invokestatic  #34
435: aload         15
437: invokestatic  #39
440: aload         16
442: invokestatic  #39
445: return
Exception table:
from    to  target type
166   180   183   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test94
Start line: 5471
End line: 5544
Method source code: 
    public void test94() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test94");
        org.jsoup.nodes.Attribute attribute2 = org.jsoup.nodes.Attribute.createFromEncoded(" ", "#data");
        org.jsoup.nodes.Attribute attribute3 = attribute2.clone();
        org.jsoup.nodes.DocumentType documentType8 = new org.jsoup.nodes.DocumentType("", "<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>", "          ", "");
        java.lang.StringBuilder stringBuilder9 = null;
        org.jsoup.nodes.TextNode textNode13 = new org.jsoup.nodes.TextNode("", "[^]");
        java.lang.String str14 = textNode13.getWholeText();
        java.lang.String str16 = textNode13.attr("class=\"\"=\"data-\"");
        java.lang.StringBuilder stringBuilder17 = null;
        org.jsoup.select.Evaluator.IsOnlyOfType isOnlyOfType19 = new org.jsoup.select.Evaluator.IsOnlyOfType();
        org.jsoup.nodes.Document document22 = org.jsoup.parser.Parser.parseBodyFragment("", "");
        org.jsoup.nodes.Document document24 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element26 = document24.toggleClass("");
        java.lang.String str27 = element26.tagName();
        org.jsoup.nodes.Element element29 = element26.toggleClass("");
        boolean boolean30 = isOnlyOfType19.matches((org.jsoup.nodes.Element) document22, element26);
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("[^]", "hi!");
        org.jsoup.select.Elements elements35 = document33.getElementsByIndexGreaterThan((int) (short) 100);
        org.jsoup.nodes.Element element37 = document33.text(" ");
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse("#text", "hi!");
        org.jsoup.select.Elements elements42 = document40.getElementsContainingText("#data");
        boolean boolean43 = isOnlyOfType19.matches((org.jsoup.nodes.Element) document33, (org.jsoup.nodes.Element) document40);
        org.jsoup.nodes.Comment comment46 = new org.jsoup.nodes.Comment("hi!", "hi!");
        boolean boolean48 = comment46.hasAttr("hi!");
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parseBodyFragment("hi!");
        org.jsoup.nodes.Element element52 = document50.toggleClass("");
        org.jsoup.nodes.Node node53 = document50.clone();
        org.jsoup.nodes.Node node54 = comment46.doClone(node53);
        java.lang.StringBuilder stringBuilder55 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings57 = null;
        comment46.outerHtmlTail(stringBuilder55, 10, outputSettings57);
        java.lang.String str59 = comment46.getData();
        java.lang.String str60 = comment46.nodeName();
        java.lang.StringBuilder stringBuilder61 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings63 = new org.jsoup.nodes.Document.OutputSettings();
        int int64 = outputSettings63.indentAmount();
        comment46.outerHtmlTail(stringBuilder61, 0, outputSettings63);
        boolean boolean66 = document40.equals((java.lang.Object) outputSettings63);
        textNode13.outerHtmlTail(stringBuilder17, (int) (short) 100, outputSettings63);
        documentType8.outerHtmlTail(stringBuilder9, (int) (short) 1, outputSettings63);
        boolean boolean69 = attribute2.shouldCollapseAttribute(outputSettings63);
        boolean boolean70 = attribute2.isDataAttribute();
        java.lang.String str71 = attribute2.html();
        org.junit.Assert.assertNotNull(attribute2);
        org.junit.Assert.assertNotNull(attribute3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#root" + "'", str27, "#root");
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(elements35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(elements42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "#comment" + "'", str60, "#comment");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "=\"#data\"" + "'", str71, "=\"#data\"");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #402
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #72
27: ldc           #75
29: invokestatic  #293
32: astore_1
33: aload_1
34: invokevirtual #41
37: astore_2
38: new           #8
41: dup
42: ldc           #9
44: ldc           #10
46: ldc           #11
48: ldc           #9
50: invokespecial #12
53: astore_3
54: aconst_null
55: astore        4
57: new           #58
60: dup
61: ldc           #9
63: ldc           #59
65: invokespecial #60
68: astore        5
70: aload         5
72: invokevirtual #61
75: astore        6
77: aload         5
79: ldc           #62
81: invokevirtual #63
84: astore        7
86: aconst_null
87: astore        8
89: new           #64
92: dup
93: invokespecial #65
96: astore        9
98: ldc           #9
100: ldc           #9
102: invokestatic  #66
105: astore        10
107: ldc           #52
109: invokestatic  #53
112: astore        11
114: aload         11
116: ldc           #9
118: invokevirtual #54
121: astore        12
123: aload         12
125: invokevirtual #67
128: astore        13
130: aload         12
132: ldc           #9
134: invokevirtual #68
137: astore        14
139: aload         9
141: aload         10
143: aload         12
145: invokevirtual #69
148: istore        15
150: ldc           #59
152: ldc           #52
154: invokestatic  #70
157: astore        16
159: aload         16
161: bipush        100
163: invokevirtual #71
166: astore        17
168: aload         16
170: ldc           #72
172: invokevirtual #73
175: astore        18
177: ldc           #74
179: ldc           #52
181: invokestatic  #70
184: astore        19
186: aload         19
188: ldc           #75
190: invokevirtual #76
193: astore        20
195: aload         9
197: aload         16
199: aload         19
201: invokevirtual #69
204: istore        21
206: new           #77
209: dup
210: ldc           #52
212: ldc           #52
214: invokespecial #78
217: astore        22
219: aload         22
221: ldc           #52
223: invokevirtual #79
226: istore        23
228: ldc           #52
230: invokestatic  #53
233: astore        24
235: aload         24
237: ldc           #9
239: invokevirtual #54
242: astore        25
244: aload         24
246: invokevirtual #80
249: astore        26
251: aload         22
253: aload         26
255: invokevirtual #81
258: astore        27
260: aconst_null
261: astore        28
263: aconst_null
264: astore        29
266: aload         22
268: aload         28
270: bipush        10
272: aload         29
274: invokevirtual #82
277: aload         22
279: invokevirtual #83
282: astore        30
284: aload         22
286: invokevirtual #84
289: astore        31
291: aconst_null
292: astore        32
294: new           #13
297: dup
298: invokespecial #14
301: astore        33
303: aload         33
305: invokevirtual #15
308: istore        34
310: aload         22
312: aload         32
314: iconst_0
315: aload         33
317: invokevirtual #82
320: aload         19
322: aload         33
324: invokevirtual #85
327: istore        35
329: aload         5
331: aload         8
333: bipush        100
335: aload         33
337: invokevirtual #86
340: aload_3
341: aload         4
343: iconst_1
344: aload         33
346: invokevirtual #87
349: aload_1
350: aload         33
352: invokevirtual #20
355: istore        36
357: aload_1
358: invokevirtual #142
361: istore        37
363: aload_1
364: invokevirtual #167
367: astore        38
369: aload_1
370: invokestatic  #39
373: aload_2
374: invokestatic  #39
377: new           #27
380: dup
381: invokespecial #28
384: ldc           #29
386: invokevirtual #30
389: aload         6
391: invokevirtual #30
394: ldc           #90
396: invokevirtual #30
399: invokevirtual #33
402: aload         6
404: ldc           #9
406: invokestatic  #91
409: new           #27
412: dup
413: invokespecial #28
416: ldc           #29
418: invokevirtual #30
421: aload         7
423: invokevirtual #30
426: ldc           #90
428: invokevirtual #30
431: invokevirtual #33
434: aload         7
436: ldc           #9
438: invokestatic  #91
441: aload         10
443: invokestatic  #39
446: aload         11
448: invokestatic  #39
451: aload         12
453: invokestatic  #39
456: new           #27
459: dup
460: invokespecial #28
463: ldc           #29
465: invokevirtual #30
468: aload         13
470: invokevirtual #30
473: ldc           #92
475: invokevirtual #30
478: invokevirtual #33
481: aload         13
483: ldc           #17
485: invokestatic  #91
488: aload         14
490: invokestatic  #39
493: new           #27
496: dup
497: invokespecial #28
500: ldc           #29
502: invokevirtual #30
505: iload         15
507: invokevirtual #35
510: ldc           #32
512: invokevirtual #30
515: iconst_0
516: invokevirtual #35
519: ldc           #29
521: invokevirtual #30
524: invokevirtual #33
527: iload         15
529: ifne          536
532: iconst_1
533: goto          537
536: iconst_0
537: invokestatic  #34
540: aload         16
542: invokestatic  #39
545: aload         17
547: invokestatic  #39
550: aload         18
552: invokestatic  #39
555: aload         19
557: invokestatic  #39
560: aload         20
562: invokestatic  #39
565: new           #27
568: dup
569: invokespecial #28
572: ldc           #29
574: invokevirtual #30
577: iload         21
579: invokevirtual #35
582: ldc           #32
584: invokevirtual #30
587: iconst_0
588: invokevirtual #35
591: ldc           #29
593: invokevirtual #30
596: invokevirtual #33
599: iload         21
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #34
612: new           #27
615: dup
616: invokespecial #28
619: ldc           #29
621: invokevirtual #30
624: iload         23
626: invokevirtual #35
629: ldc           #32
631: invokevirtual #30
634: iconst_0
635: invokevirtual #35
638: ldc           #29
640: invokevirtual #30
643: invokevirtual #33
646: iload         23
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #34
659: aload         24
661: invokestatic  #39
664: aload         25
666: invokestatic  #39
669: aload         26
671: invokestatic  #39
674: aload         27
676: invokestatic  #39
679: new           #27
682: dup
683: invokespecial #28
686: ldc           #29
688: invokevirtual #30
691: aload         30
693: invokevirtual #30
696: ldc           #93
698: invokevirtual #30
701: invokevirtual #33
704: aload         30
706: ldc           #52
708: invokestatic  #91
711: new           #27
714: dup
715: invokespecial #28
718: ldc           #29
720: invokevirtual #30
723: aload         31
725: invokevirtual #30
728: ldc           #94
730: invokevirtual #30
733: invokevirtual #33
736: aload         31
738: ldc           #95
740: invokestatic  #91
743: new           #27
746: dup
747: invokespecial #28
750: ldc           #29
752: invokevirtual #30
755: iload         34
757: invokevirtual #31
760: ldc           #32
762: invokevirtual #30
765: iconst_1
766: invokevirtual #31
769: ldc           #29
771: invokevirtual #30
774: invokevirtual #33
777: iload         34
779: iconst_1
780: if_icmpne     787
783: iconst_1
784: goto          788
787: iconst_0
788: invokestatic  #34
791: new           #27
794: dup
795: invokespecial #28
798: ldc           #29
800: invokevirtual #30
803: iload         35
805: invokevirtual #35
808: ldc           #32
810: invokevirtual #30
813: iconst_0
814: invokevirtual #35
817: ldc           #29
819: invokevirtual #30
822: invokevirtual #33
825: iload         35
827: ifne          834
830: iconst_1
831: goto          835
834: iconst_0
835: invokestatic  #34
838: new           #27
841: dup
842: invokespecial #28
845: ldc           #29
847: invokevirtual #30
850: iload         36
852: invokevirtual #35
855: ldc           #32
857: invokevirtual #30
860: iconst_0
861: invokevirtual #35
864: ldc           #29
866: invokevirtual #30
869: invokevirtual #33
872: iload         36
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #34
885: new           #27
888: dup
889: invokespecial #28
892: ldc           #29
894: invokevirtual #30
897: iload         37
899: invokevirtual #35
902: ldc           #32
904: invokevirtual #30
907: iconst_0
908: invokevirtual #35
911: ldc           #29
913: invokevirtual #30
916: invokevirtual #33
919: iload         37
921: ifne          928
924: iconst_1
925: goto          929
928: iconst_0
929: invokestatic  #34
932: new           #27
935: dup
936: invokespecial #28
939: ldc           #29
941: invokevirtual #30
944: aload         38
946: invokevirtual #30
949: ldc_w         #403
952: invokevirtual #30
955: invokevirtual #33
958: aload         38
960: ldc_w         #404
963: invokestatic  #91
966: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/RegressionTest0.class
Class name: RegressionTest0
Method name: test95
Start line: 5547
End line: 5578
Method source code: 
    public void test95() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test95");
        org.jsoup.nodes.DocumentType documentType4 = new org.jsoup.nodes.DocumentType("<html>\n <head></head>\n <body>\n  #root=\"data-\"\n </body>\n</html>", "[#<html>\n <head></head>\n <body>\n  hi!\n </body>\n</html>!=[:eq(10)]]", "          ", "class=\"\"");
        java.lang.StringBuilder stringBuilder5 = null;
        org.jsoup.nodes.TextNode textNode10 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "hi!");
        org.jsoup.nodes.Node node11 = textNode10.parentNode;
        java.lang.String str12 = textNode10.nodeName();
        java.lang.String str13 = textNode10.nodeName();
        textNode10.setBaseUri("#root=\"data-\"");
        org.jsoup.nodes.Attributes attributes16 = textNode10.attributes();
        org.jsoup.nodes.Document.OutputSettings outputSettings17 = new org.jsoup.nodes.Document.OutputSettings();
        boolean boolean18 = attributes16.equals((java.lang.Object) outputSettings17);
        java.lang.String str19 = org.jsoup.nodes.Entities.escape(":containsOwn(#document", outputSettings17);
        documentType4.outerHtmlTail(stringBuilder5, (int) (byte) -1, outputSettings17);
        java.lang.StringBuilder stringBuilder21 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = new org.jsoup.nodes.Document.OutputSettings();
        // The following exception was thrown during execution in test generation
        try {
            documentType4.outerHtmlHead(stringBuilder21, 1, outputSettings23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(textNode10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#text" + "'", str12, "#text");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#text" + "'", str13, "#text");
        org.junit.Assert.assertNotNull(attributes16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + ":containsOwn(#document" + "'", str19, ":containsOwn(#document");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #405
20: aastore
21: invokevirtual #7
24: pop
25: new           #8
28: dup
29: ldc_w         #357
32: ldc_w         #358
35: ldc           #11
37: ldc_w         #339
40: invokespecial #12
43: astore_1
44: aconst_null
45: astore_2
46: ldc           #52
48: ldc           #52
50: invokestatic  #132
53: astore_3
54: aload_3
55: getfield      #133
58: astore        4
60: aload_3
61: invokevirtual #134
64: astore        5
66: aload_3
67: invokevirtual #134
70: astore        6
72: aload_3
73: ldc           #135
75: invokevirtual #136
78: aload_3
79: invokevirtual #137
82: astore        7
84: new           #13
87: dup
88: invokespecial #14
91: astore        8
93: aload         7
95: aload         8
97: invokevirtual #150
100: istore        9
102: ldc           #255
104: aload         8
106: invokestatic  #112
109: astore        10
111: aload_1
112: aload_2
113: iconst_m1
114: aload         8
116: invokevirtual #87
119: aconst_null
120: astore        11
122: new           #13
125: dup
126: invokespecial #14
129: astore        12
131: aload_1
132: aload         11
134: iconst_1
135: aload         12
137: invokevirtual #23
140: ldc           #24
142: invokestatic  #25
145: goto          150
148: astore        13
150: aload_3
151: invokestatic  #39
154: aload         4
156: invokestatic  #139
159: new           #27
162: dup
163: invokespecial #28
166: ldc           #29
168: invokevirtual #30
171: aload         5
173: invokevirtual #30
176: ldc           #140
178: invokevirtual #30
181: invokevirtual #33
184: aload         5
186: ldc           #74
188: invokestatic  #91
191: new           #27
194: dup
195: invokespecial #28
198: ldc           #29
200: invokevirtual #30
203: aload         6
205: invokevirtual #30
208: ldc           #140
210: invokevirtual #30
213: invokevirtual #33
216: aload         6
218: ldc           #74
220: invokestatic  #91
223: aload         7
225: invokestatic  #39
228: new           #27
231: dup
232: invokespecial #28
235: ldc           #29
237: invokevirtual #30
240: iload         9
242: invokevirtual #35
245: ldc           #32
247: invokevirtual #30
250: iconst_0
251: invokevirtual #35
254: ldc           #29
256: invokevirtual #30
259: invokevirtual #33
262: iload         9
264: ifne          271
267: iconst_1
268: goto          272
271: iconst_0
272: invokestatic  #34
275: new           #27
278: dup
279: invokespecial #28
282: ldc           #29
284: invokevirtual #30
287: aload         10
289: invokevirtual #30
292: ldc_w         #359
295: invokevirtual #30
298: invokevirtual #33
301: aload         10
303: ldc           #255
305: invokestatic  #91
308: return
Exception table:
from    to  target type
131   145   148   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: parsesSimpleDocument
Start line: 21
End line: 30
Method source code: 
    @Test public void parsesSimpleDocument() {
        String html = "<html><head><title>First!</title></head><body><p>First post! <img src=\"foo.png\" /></p></body></html>";
        Document doc = Jsoup.parse(html);
        // need a better way to verify these:
        Element p = doc.body().child(0);
        assertEquals("p", p.tagName());
        Element img = p.child(0);
        assertEquals("foo.png", img.attr("src"));
        assertEquals("img", img.tagName());
    }
Method byte code: 
0: ldc           #2
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: invokevirtual #4
12: iconst_0
13: invokevirtual #5
16: astore_3
17: ldc           #6
19: aload_3
20: invokevirtual #7
23: invokestatic  #8
26: aload_3
27: iconst_0
28: invokevirtual #5
31: astore        4
33: ldc           #9
35: aload         4
37: ldc           #10
39: invokevirtual #11
42: invokestatic  #8
45: ldc           #12
47: aload         4
49: invokevirtual #7
52: invokestatic  #8
55: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: parsesRoughAttributes
Start line: 32
End line: 40
Method source code: 
    @Test public void parsesRoughAttributes() {
        String html = "<html><head><title>First!</title></head><body><p class=\"foo > bar\">First post! <img src=\"foo.png\" /></p></body></html>";
        Document doc = Jsoup.parse(html);

        // need a better way to verify these:
        Element p = doc.body().child(0);
        assertEquals("p", p.tagName());
        assertEquals("foo > bar", p.attr("class"));
    }
Method byte code: 
0: ldc           #13
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: invokevirtual #4
12: iconst_0
13: invokevirtual #5
16: astore_3
17: ldc           #6
19: aload_3
20: invokevirtual #7
23: invokestatic  #8
26: ldc           #14
28: aload_3
29: ldc           #15
31: invokevirtual #11
34: invokestatic  #8
37: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: parsesQuiteRoughAttributes
Start line: 42
End line: 51
Method source code: 
    @Test public void parsesQuiteRoughAttributes() {
        String html = "<p =a>One<a <p>Something</p>Else";
        // this gets a <p> with attr '=a' and an <a tag with an attribue named '<p'; and then auto-recreated
        Document doc = Jsoup.parse(html);
        assertEquals("<p =a=\"\">One<a <p=\"\">Something</a></p>\n" +
                "<a <p=\"\">Else</a>", doc.body().html());

        doc = Jsoup.parse("<p .....>");
        assertEquals("<p .....=\"\"></p>", doc.body().html());
    }
Method byte code: 
0: ldc           #16
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #17
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: ldc           #19
22: invokestatic  #3
25: astore_2
26: ldc           #20
28: aload_2
29: invokevirtual #4
32: invokevirtual #18
35: invokestatic  #8
38: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: parsesComments
Start line: 53
End line: 63
Method source code: 
    @Test public void parsesComments() {
        String html = "<html><head></head><body><img src=foo><!-- <table><tr><td></table> --><p>Hello</p></body></html>";
        Document doc = Jsoup.parse(html);

        Element body = doc.body();
        Comment comment = (Comment) body.childNode(1); // comment should not be sub of img, as it's an empty tag
        assertEquals(" <table><tr><td></table> ", comment.getData());
        Element p = body.child(1);
        TextNode text = (TextNode) p.childNode(0);
        assertEquals("Hello", text.getWholeText());
    }
Method byte code: 
0: ldc           #21
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: invokevirtual #4
12: astore_3
13: aload_3
14: iconst_1
15: invokevirtual #22
18: checkcast     #23
21: astore        4
23: ldc           #24
25: aload         4
27: invokevirtual #25
30: invokestatic  #8
33: aload_3
34: iconst_1
35: invokevirtual #5
38: astore        5
40: aload         5
42: iconst_0
43: invokevirtual #22
46: checkcast     #26
49: astore        6
51: ldc           #27
53: aload         6
55: invokevirtual #28
58: invokestatic  #8
61: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: parsesUnterminatedComments
Start line: 65
End line: 74
Method source code: 
    @Test public void parsesUnterminatedComments() {
        String html = "<p>Hello<!-- <tr><td>";
        Document doc = Jsoup.parse(html);
        Element p = doc.getElementsByTag("p").get(0);
        assertEquals("Hello", p.text());
        TextNode text = (TextNode) p.childNode(0);
        assertEquals("Hello", text.getWholeText());
        Comment comment = (Comment) p.childNode(1);
        assertEquals(" <tr><td>", comment.getData());
    }
Method byte code: 
0: ldc           #29
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: ldc           #6
11: invokevirtual #30
14: iconst_0
15: invokevirtual #31
18: astore_3
19: ldc           #27
21: aload_3
22: invokevirtual #32
25: invokestatic  #8
28: aload_3
29: iconst_0
30: invokevirtual #22
33: checkcast     #26
36: astore        4
38: ldc           #27
40: aload         4
42: invokevirtual #28
45: invokestatic  #8
48: aload_3
49: iconst_1
50: invokevirtual #22
53: checkcast     #23
56: astore        5
58: ldc           #33
60: aload         5
62: invokevirtual #25
65: invokestatic  #8
68: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: dropsUnterminatedTag
Start line: 76
End line: 86
Method source code: 
    @Test public void dropsUnterminatedTag() {
        // jsoup used to parse this to <p>, but whatwg, webkit will drop.
        String h1 = "<p";
        Document doc = Jsoup.parse(h1);
        assertEquals(0, doc.getElementsByTag("p").size());
        assertEquals("", doc.text());

        String h2 = "<div id=1<p id='2'";
        doc = Jsoup.parse(h2);
        assertEquals("", doc.text());
    }
Method byte code: 
0: ldc           #34
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: lconst_0
9: aload_2
10: ldc           #6
12: invokevirtual #30
15: invokevirtual #35
18: i2l
19: invokestatic  #36
22: ldc           #37
24: aload_2
25: invokevirtual #38
28: invokestatic  #8
31: ldc           #39
33: astore_3
34: aload_3
35: invokestatic  #3
38: astore_2
39: ldc           #37
41: aload_2
42: invokevirtual #38
45: invokestatic  #8
48: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: dropsUnterminatedAttribute
Start line: 88
End line: 93
Method source code: 
    @Test public void dropsUnterminatedAttribute() {
        // jsoup used to parse this to <p id="foo">, but whatwg, webkit will drop.
        String h1 = "<p id=\"foo";
        Document doc = Jsoup.parse(h1);
        assertEquals("", doc.text());
    }
Method byte code: 
0: ldc           #40
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #37
10: aload_2
11: invokevirtual #38
14: invokestatic  #8
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: parsesUnterminatedTextarea
Start line: 95
End line: 101
Method source code: 
    @Test public void parsesUnterminatedTextarea() {
        // don't parse right to end, but break on <p>
        Document doc = Jsoup.parse("<body><p><textarea>one<p>two");
        Element t = doc.select("textarea").first();
        assertEquals("one", t.text());
        assertEquals("two", doc.select("p").get(1).text());
    }
Method byte code: 
0: ldc           #41
2: invokestatic  #3
5: astore_1
6: aload_1
7: ldc           #42
9: invokevirtual #43
12: invokevirtual #44
15: astore_2
16: ldc           #45
18: aload_2
19: invokevirtual #32
22: invokestatic  #8
25: ldc           #46
27: aload_1
28: ldc           #6
30: invokevirtual #43
33: iconst_1
34: invokevirtual #31
37: invokevirtual #32
40: invokestatic  #8
43: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: parsesUnterminatedOption
Start line: 103
End line: 110
Method source code: 
    @Test public void parsesUnterminatedOption() {
        // bit weird this -- browsers and spec get stuck in select until there's a </select>
        Document doc = Jsoup.parse("<body><p><select><option>One<option>Two</p><p>Three</p>");
        Elements options = doc.select("option");
        assertEquals(2, options.size());
        assertEquals("One", options.first().text());
        assertEquals("TwoThree", options.last().text());
    }
Method byte code: 
0: ldc           #47
2: invokestatic  #3
5: astore_1
6: aload_1
7: ldc           #48
9: invokevirtual #43
12: astore_2
13: ldc2_w        #49
16: aload_2
17: invokevirtual #35
20: i2l
21: invokestatic  #36
24: ldc           #51
26: aload_2
27: invokevirtual #44
30: invokevirtual #32
33: invokestatic  #8
36: ldc           #52
38: aload_2
39: invokevirtual #53
42: invokevirtual #32
45: invokestatic  #8
48: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: testSpaceAfterTag
Start line: 112
End line: 115
Method source code: 
    @Test public void testSpaceAfterTag() {
        Document doc = Jsoup.parse("<div > <a name=\"top\"></a ><p id=1 >Hello</p></div>");
        assertEquals("<div> <a name=\"top\"></a><p id=\"1\">Hello</p></div>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #54
2: invokestatic  #3
5: astore_1
6: ldc           #55
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: createsDocumentStructure
Start line: 117
End line: 133
Method source code: 
    @Test public void createsDocumentStructure() {
        String html = "<meta name=keywords /><link rel=stylesheet /><title>jsoup</title><p>Hello world</p>";
        Document doc = Jsoup.parse(html);
        Element head = doc.head();
        Element body = doc.body();

        assertEquals(1, doc.children().size()); // root node: contains html node
        assertEquals(2, doc.child(0).children().size()); // html node: head and body
        assertEquals(3, head.children().size());
        assertEquals(1, body.children().size());

        assertEquals("keywords", head.getElementsByTag("meta").get(0).attr("name"));
        assertEquals(0, body.getElementsByTag("meta").size());
        assertEquals("jsoup", doc.title());
        assertEquals("Hello world", body.text());
        assertEquals("Hello world", body.children().get(0).text());
    }
Method byte code: 
0: ldc           #57
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: invokevirtual #58
12: astore_3
13: aload_2
14: invokevirtual #4
17: astore        4
19: lconst_1
20: aload_2
21: invokevirtual #59
24: invokevirtual #35
27: i2l
28: invokestatic  #36
31: ldc2_w        #49
34: aload_2
35: iconst_0
36: invokevirtual #60
39: invokevirtual #61
42: invokevirtual #35
45: i2l
46: invokestatic  #36
49: ldc2_w        #62
52: aload_3
53: invokevirtual #61
56: invokevirtual #35
59: i2l
60: invokestatic  #36
63: lconst_1
64: aload         4
66: invokevirtual #61
69: invokevirtual #35
72: i2l
73: invokestatic  #36
76: ldc           #64
78: aload_3
79: ldc           #65
81: invokevirtual #66
84: iconst_0
85: invokevirtual #31
88: ldc           #67
90: invokevirtual #11
93: invokestatic  #8
96: lconst_0
97: aload         4
99: ldc           #65
101: invokevirtual #66
104: invokevirtual #35
107: i2l
108: invokestatic  #36
111: ldc           #68
113: aload_2
114: invokevirtual #69
117: invokestatic  #8
120: ldc           #70
122: aload         4
124: invokevirtual #32
127: invokestatic  #8
130: ldc           #70
132: aload         4
134: invokevirtual #61
137: iconst_0
138: invokevirtual #31
141: invokevirtual #32
144: invokestatic  #8
147: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: createsStructureFromBodySnippet
Start line: 135
End line: 142
Method source code: 
    @Test public void createsStructureFromBodySnippet() {
        // the bar baz stuff naturally goes into the body, but the 'foo' goes into root, and the normalisation routine
        // needs to move into the start of the body
        String html = "foo <b>bar</b> baz";
        Document doc = Jsoup.parse(html);
        assertEquals("foo bar baz", doc.text());

    }
Method byte code: 
0: ldc           #71
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #72
10: aload_2
11: invokevirtual #38
14: invokestatic  #8
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesEscapedData
Start line: 144
End line: 151
Method source code: 
    @Test public void handlesEscapedData() {
        String html = "<div title='Surf &amp; Turf'>Reef &amp; Beef</div>";
        Document doc = Jsoup.parse(html);
        Element div = doc.getElementsByTag("div").get(0);

        assertEquals("Surf & Turf", div.attr("title"));
        assertEquals("Reef & Beef", div.text());
    }
Method byte code: 
0: ldc           #73
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: ldc           #74
11: invokevirtual #30
14: iconst_0
15: invokevirtual #31
18: astore_3
19: ldc           #75
21: aload_3
22: ldc           #76
24: invokevirtual #11
27: invokestatic  #8
30: ldc           #77
32: aload_3
33: invokevirtual #32
36: invokestatic  #8
39: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesDataOnlyTags
Start line: 153
End line: 163
Method source code: 
    @Test public void handlesDataOnlyTags() {
        String t = "<style>font-family: bold</style>";
        List<Element> tels = Jsoup.parse(t).getElementsByTag("style");
        assertEquals("font-family: bold", tels.get(0).data());
        assertEquals("", tels.get(0).text());

        String s = "<p>Hello</p><script>obj.insert('<a rel=\"none\" />');\ni++;</script><p>There</p>";
        Document doc = Jsoup.parse(s);
        assertEquals("Hello There", doc.text());
        assertEquals("obj.insert('<a rel=\"none\" />');\ni++;", doc.data());
    }
Method byte code: 
0: ldc           #78
2: astore_1
3: aload_1
4: invokestatic  #3
7: ldc           #79
9: invokevirtual #30
12: astore_2
13: ldc           #80
15: aload_2
16: iconst_0
17: invokeinterface #81,  2
22: checkcast     #82
25: invokevirtual #83
28: invokestatic  #8
31: ldc           #37
33: aload_2
34: iconst_0
35: invokeinterface #81,  2
40: checkcast     #82
43: invokevirtual #32
46: invokestatic  #8
49: ldc           #84
51: astore_3
52: aload_3
53: invokestatic  #3
56: astore        4
58: ldc           #85
60: aload         4
62: invokevirtual #38
65: invokestatic  #8
68: ldc           #86
70: aload         4
72: invokevirtual #87
75: invokestatic  #8
78: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesTextAfterData
Start line: 165
End line: 169
Method source code: 
    @Test public void handlesTextAfterData() {
        String h = "<html><body>pre <script>inner</script> aft</body></html>";
        Document doc = Jsoup.parse(h);
        assertEquals("<html><head></head><body>pre <script>inner</script> aft</body></html>", TextUtil.stripNewlines(doc.html()));
    }
Method byte code: 
0: ldc           #88
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #89
10: aload_2
11: invokevirtual #90
14: invokestatic  #56
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesTextArea
Start line: 171
End line: 176
Method source code: 
    @Test public void handlesTextArea() {
        Document doc = Jsoup.parse("<textarea>Hello</textarea>");
        Elements els = doc.select("textarea");
        assertEquals("Hello", els.text());
        assertEquals("Hello", els.val());
    }
Method byte code: 
0: ldc           #91
2: invokestatic  #3
5: astore_1
6: aload_1
7: ldc           #42
9: invokevirtual #43
12: astore_2
13: ldc           #27
15: aload_2
16: invokevirtual #92
19: invokestatic  #8
22: ldc           #27
24: aload_2
25: invokevirtual #93
28: invokestatic  #8
31: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: preservesSpaceInTextArea
Start line: 178
End line: 187
Method source code: 
    @Test public void preservesSpaceInTextArea() {
        // preserve because the tag is marked as preserve white space
        Document doc = Jsoup.parse("<textarea>\n\tOne\n\tTwo\n\tThree\n</textarea>");
        String expect = "One\n\tTwo\n\tThree"; // the leading and trailing spaces are dropped as a convenience to authors
        Element el = doc.select("textarea").first();
        assertEquals(expect, el.text());
        assertEquals(expect, el.val());
        assertEquals(expect, el.html());
        assertEquals("<textarea>\n\t" + expect + "\n</textarea>", el.outerHtml()); // but preserved in round-trip html
    }
Method byte code: 
0: ldc           #94
2: invokestatic  #3
5: astore_1
6: ldc           #95
8: astore_2
9: aload_1
10: ldc           #42
12: invokevirtual #43
15: invokevirtual #44
18: astore_3
19: aload_2
20: aload_3
21: invokevirtual #32
24: invokestatic  #8
27: aload_2
28: aload_3
29: invokevirtual #96
32: invokestatic  #8
35: aload_2
36: aload_3
37: invokevirtual #18
40: invokestatic  #8
43: new           #97
46: dup
47: invokespecial #98
50: ldc           #99
52: invokevirtual #100
55: aload_2
56: invokevirtual #100
59: ldc           #101
61: invokevirtual #100
64: invokevirtual #102
67: aload_3
68: invokevirtual #103
71: invokestatic  #8
74: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: preservesSpaceInScript
Start line: 189
End line: 197
Method source code: 
    @Test public void preservesSpaceInScript() {
        // preserve because it's content is a data node
        Document doc = Jsoup.parse("<script>\nOne\n\tTwo\n\tThree\n</script>");
        String expect = "\nOne\n\tTwo\n\tThree\n";
        Element el = doc.select("script").first();
        assertEquals(expect, el.data());
        assertEquals("One\n\tTwo\n\tThree", el.html());
        assertEquals("<script>" + expect + "</script>", el.outerHtml());
    }
Method byte code: 
0: ldc           #104
2: invokestatic  #3
5: astore_1
6: ldc           #105
8: astore_2
9: aload_1
10: ldc           #106
12: invokevirtual #43
15: invokevirtual #44
18: astore_3
19: aload_2
20: aload_3
21: invokevirtual #83
24: invokestatic  #8
27: ldc           #95
29: aload_3
30: invokevirtual #18
33: invokestatic  #8
36: new           #97
39: dup
40: invokespecial #98
43: ldc           #107
45: invokevirtual #100
48: aload_2
49: invokevirtual #100
52: ldc           #108
54: invokevirtual #100
57: invokevirtual #102
60: aload_3
61: invokevirtual #103
64: invokestatic  #8
67: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: doesNotCreateImplicitLists
Start line: 199
End line: 218
Method source code: 
    @Test public void doesNotCreateImplicitLists() {
        // old jsoup used to wrap this in <ul>, but that's not to spec
        String h = "<li>Point one<li>Point two";
        Document doc = Jsoup.parse(h);
        Elements ol = doc.select("ul"); // should NOT have created a default ul.
        assertEquals(0, ol.size());
        Elements lis = doc.select("li");
        assertEquals(2, lis.size());
        assertEquals("body", lis.first().parent().tagName());

        // no fiddling with non-implicit lists
        String h2 = "<ol><li><p>Point the first<li><p>Point the second";
        Document doc2 = Jsoup.parse(h2);

        assertEquals(0, doc2.select("ul").size());
        assertEquals(1, doc2.select("ol").size());
        assertEquals(2, doc2.select("ol li").size());
        assertEquals(2, doc2.select("ol li p").size());
        assertEquals(1, doc2.select("ol li").get(0).children().size()); // one p in first li
    }
Method byte code: 
0: ldc           #109
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: ldc           #110
11: invokevirtual #43
14: astore_3
15: lconst_0
16: aload_3
17: invokevirtual #35
20: i2l
21: invokestatic  #36
24: aload_2
25: ldc           #111
27: invokevirtual #43
30: astore        4
32: ldc2_w        #49
35: aload         4
37: invokevirtual #35
40: i2l
41: invokestatic  #36
44: ldc           #112
46: aload         4
48: invokevirtual #44
51: invokevirtual #113
54: invokevirtual #7
57: invokestatic  #8
60: ldc           #114
62: astore        5
64: aload         5
66: invokestatic  #3
69: astore        6
71: lconst_0
72: aload         6
74: ldc           #110
76: invokevirtual #43
79: invokevirtual #35
82: i2l
83: invokestatic  #36
86: lconst_1
87: aload         6
89: ldc           #115
91: invokevirtual #43
94: invokevirtual #35
97: i2l
98: invokestatic  #36
101: ldc2_w        #49
104: aload         6
106: ldc           #116
108: invokevirtual #43
111: invokevirtual #35
114: i2l
115: invokestatic  #36
118: ldc2_w        #49
121: aload         6
123: ldc           #117
125: invokevirtual #43
128: invokevirtual #35
131: i2l
132: invokestatic  #36
135: lconst_1
136: aload         6
138: ldc           #116
140: invokevirtual #43
143: iconst_0
144: invokevirtual #31
147: invokevirtual #61
150: invokevirtual #35
153: i2l
154: invokestatic  #36
157: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: discardsNakedTds
Start line: 220
End line: 226
Method source code: 
    @Test public void discardsNakedTds() {
        // jsoup used to make this into an implicit table; but browsers make it into a text run
        String h = "<td>Hello<td><p>There<p>now";
        Document doc = Jsoup.parse(h);
        assertEquals("Hello<p>There</p><p>now</p>", TextUtil.stripNewlines(doc.body().html()));
        // <tbody> is introduced if no implicitly creating table, but allows tr to be directly under table
    }
Method byte code: 
0: ldc           #118
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #119
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #56
20: invokestatic  #8
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesNestedImplicitTable
Start line: 228
End line: 231
Method source code: 
    @Test public void handlesNestedImplicitTable() {
        Document doc = Jsoup.parse("<table><td>1</td></tr> <td>2</td></tr> <td> <table><td>3</td> <td>4</td></table> <tr><td>5</table>");
        assertEquals("<table><tbody><tr><td>1</td></tr> <tr><td>2</td></tr> <tr><td> <table><tbody><tr><td>3</td> <td>4</td></tr></tbody></table> </td></tr><tr><td>5</td></tr></tbody></table>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #120
2: invokestatic  #3
5: astore_1
6: ldc           #121
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesWhatWgExpensesTableExample
Start line: 233
End line: 237
Method source code: 
    @Test public void handlesWhatWgExpensesTableExample() {
        // http://www.whatwg.org/specs/web-apps/current-work/multipage/tabular-data.html#examples-0
        Document doc = Jsoup.parse("<table> <colgroup> <col> <colgroup> <col> <col> <col> <thead> <tr> <th> <th>2008 <th>2007 <th>2006 <tbody> <tr> <th scope=rowgroup> Research and development <td> $ 1,109 <td> $ 782 <td> $ 712 <tr> <th scope=row> Percentage of net sales <td> 3.4% <td> 3.3% <td> 3.7% <tbody> <tr> <th scope=rowgroup> Selling, general, and administrative <td> $ 3,761 <td> $ 2,963 <td> $ 2,433 <tr> <th scope=row> Percentage of net sales <td> 11.6% <td> 12.3% <td> 12.6% </table>");
        assertEquals("<table> <colgroup> <col> </colgroup><colgroup> <col> <col> <col> </colgroup><thead> <tr> <th> </th><th>2008 </th><th>2007 </th><th>2006 </th></tr></thead><tbody> <tr> <th scope=\"rowgroup\"> Research and development </th><td> $ 1,109 </td><td> $ 782 </td><td> $ 712 </td></tr><tr> <th scope=\"row\"> Percentage of net sales </th><td> 3.4% </td><td> 3.3% </td><td> 3.7% </td></tr></tbody><tbody> <tr> <th scope=\"rowgroup\"> Selling, general, and administrative </th><td> $ 3,761 </td><td> $ 2,963 </td><td> $ 2,433 </td></tr><tr> <th scope=\"row\"> Percentage of net sales </th><td> 11.6% </td><td> 12.3% </td><td> 12.6% </td></tr></tbody></table>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #122
2: invokestatic  #3
5: astore_1
6: ldc           #123
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesTbodyTable
Start line: 239
End line: 242
Method source code: 
    @Test public void handlesTbodyTable() {
        Document doc = Jsoup.parse("<html><head></head><body><table><tbody><tr><td>aaa</td><td>bbb</td></tr></tbody></table></body></html>");
        assertEquals("<table><tbody><tr><td>aaa</td><td>bbb</td></tr></tbody></table>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #124
2: invokestatic  #3
5: astore_1
6: ldc           #125
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesImplicitCaptionClose
Start line: 244
End line: 247
Method source code: 
    @Test public void handlesImplicitCaptionClose() {
        Document doc = Jsoup.parse("<table><caption>A caption<td>One<td>Two");
        assertEquals("<table><caption>A caption</caption><tbody><tr><td>One</td><td>Two</td></tr></tbody></table>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #126
2: invokestatic  #3
5: astore_1
6: ldc           #127
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: noTableDirectInTable
Start line: 249
End line: 253
Method source code: 
    @Test public void noTableDirectInTable() {
        Document doc = Jsoup.parse("<table> <td>One <td><table><td>Two</table> <table><td>Three");
        assertEquals("<table> <tbody><tr><td>One </td><td><table><tbody><tr><td>Two</td></tr></tbody></table> <table><tbody><tr><td>Three</td></tr></tbody></table></td></tr></tbody></table>",
                TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #128
2: invokestatic  #3
5: astore_1
6: ldc           #129
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: ignoresDupeEndTrTag
Start line: 255
End line: 259
Method source code: 
    @Test public void ignoresDupeEndTrTag() {
        Document doc = Jsoup.parse("<table><tr><td>One</td><td><table><tr><td>Two</td></tr></tr></table></td><td>Three</td></tr></table>"); // two </tr></tr>, must ignore or will close table
        assertEquals("<table><tbody><tr><td>One</td><td><table><tbody><tr><td>Two</td></tr></tbody></table></td><td>Three</td></tr></tbody></table>",
                TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #130
2: invokestatic  #3
5: astore_1
6: ldc           #131
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesBaseTags
Start line: 261
End line: 277
Method source code: 
    @Test public void handlesBaseTags() {
        // only listen to the first base href
        String h = "<a href=1>#</a><base href='/2/'><a href='3'>#</a><base href='http://bar'><a href=/4>#</a>";
        Document doc = Jsoup.parse(h, "http://foo/");
        assertEquals("http://foo/2/", doc.baseUri()); // gets set once, so doc and descendants have first only

        Elements anchors = doc.getElementsByTag("a");
        assertEquals(3, anchors.size());

        assertEquals("http://foo/2/", anchors.get(0).baseUri());
        assertEquals("http://foo/2/", anchors.get(1).baseUri());
        assertEquals("http://foo/2/", anchors.get(2).baseUri());

        assertEquals("http://foo/2/1", anchors.get(0).absUrl("href"));
        assertEquals("http://foo/2/3", anchors.get(1).absUrl("href"));
        assertEquals("http://foo/4", anchors.get(2).absUrl("href"));
    }
Method byte code: 
0: ldc           #132
2: astore_1
3: aload_1
4: ldc           #133
6: invokestatic  #134
9: astore_2
10: ldc           #135
12: aload_2
13: invokevirtual #136
16: invokestatic  #8
19: aload_2
20: ldc           #137
22: invokevirtual #30
25: astore_3
26: ldc2_w        #62
29: aload_3
30: invokevirtual #35
33: i2l
34: invokestatic  #36
37: ldc           #135
39: aload_3
40: iconst_0
41: invokevirtual #31
44: invokevirtual #138
47: invokestatic  #8
50: ldc           #135
52: aload_3
53: iconst_1
54: invokevirtual #31
57: invokevirtual #138
60: invokestatic  #8
63: ldc           #135
65: aload_3
66: iconst_2
67: invokevirtual #31
70: invokevirtual #138
73: invokestatic  #8
76: ldc           #139
78: aload_3
79: iconst_0
80: invokevirtual #31
83: ldc           #140
85: invokevirtual #141
88: invokestatic  #8
91: ldc           #142
93: aload_3
94: iconst_1
95: invokevirtual #31
98: ldc           #140
100: invokevirtual #141
103: invokestatic  #8
106: ldc           #143
108: aload_3
109: iconst_2
110: invokevirtual #31
113: ldc           #140
115: invokevirtual #141
118: invokestatic  #8
121: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesCdata
Start line: 279
End line: 287
Method source code: 
    @Test public void handlesCdata() {
        // todo: as this is html namespace, should actually treat as bogus comment, not cdata. keep as cdata for now
        String h = "<div id=1><![CDATA[<html>\n<foo><&amp;]]></div>"; // the &amp; in there should remain literal
        Document doc = Jsoup.parse(h);
        Element div = doc.getElementById("1");
        assertEquals("<html> <foo><&amp;", div.text());
        assertEquals(0, div.children().size());
        assertEquals(1, div.childNodeSize()); // no elements, one text node
    }
Method byte code: 
0: ldc           #144
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: ldc           #145
11: invokevirtual #146
14: astore_3
15: ldc           #147
17: aload_3
18: invokevirtual #32
21: invokestatic  #8
24: lconst_0
25: aload_3
26: invokevirtual #61
29: invokevirtual #35
32: i2l
33: invokestatic  #36
36: lconst_1
37: aload_3
38: invokevirtual #148
41: i2l
42: invokestatic  #36
45: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnclosedCdataAtEOF
Start line: 289
End line: 294
Method source code: 
    @Test public void handlesUnclosedCdataAtEOF() {
        // https://github.com/jhy/jsoup/issues/349 would crash, as character reader would try to seek past EOF
        String h = "<![CDATA[]]";
        Document doc = Jsoup.parse(h);
        assertEquals(1, doc.body().childNodeSize());
    }
Method byte code: 
0: ldc           #149
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: lconst_1
9: aload_2
10: invokevirtual #4
13: invokevirtual #148
16: i2l
17: invokestatic  #36
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesInvalidStartTags
Start line: 296
End line: 300
Method source code: 
    @Test public void handlesInvalidStartTags() {
        String h = "<div>Hello < There <&amp;></div>"; // parse to <div {#text=Hello < There <&>}>
        Document doc = Jsoup.parse(h);
        assertEquals("Hello < There <&>", doc.select("div").first().text());
    }
Method byte code: 
0: ldc           #150
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #151
10: aload_2
11: ldc           #74
13: invokevirtual #43
16: invokevirtual #44
19: invokevirtual #32
22: invokestatic  #8
25: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnknownTags
Start line: 302
End line: 310
Method source code: 
    @Test public void handlesUnknownTags() {
        String h = "<div><foo title=bar>Hello<foo title=qux>there</foo></div>";
        Document doc = Jsoup.parse(h);
        Elements foos = doc.select("foo");
        assertEquals(2, foos.size());
        assertEquals("bar", foos.first().attr("title"));
        assertEquals("qux", foos.last().attr("title"));
        assertEquals("there", foos.last().text());
    }
Method byte code: 
0: ldc           #152
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: ldc           #153
11: invokevirtual #43
14: astore_3
15: ldc2_w        #49
18: aload_3
19: invokevirtual #35
22: i2l
23: invokestatic  #36
26: ldc           #154
28: aload_3
29: invokevirtual #44
32: ldc           #76
34: invokevirtual #11
37: invokestatic  #8
40: ldc           #155
42: aload_3
43: invokevirtual #53
46: ldc           #76
48: invokevirtual #11
51: invokestatic  #8
54: ldc           #156
56: aload_3
57: invokevirtual #53
60: invokevirtual #32
63: invokestatic  #8
66: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnknownInlineTags
Start line: 312
End line: 317
Method source code: 
    @Test public void handlesUnknownInlineTags() {
        String h = "<p><cust>Test</cust></p><p><cust><cust>Test</cust></cust></p>";
        Document doc = Jsoup.parseBodyFragment(h);
        String out = doc.body().html();
        assertEquals(h, TextUtil.stripNewlines(out));
    }
Method byte code: 
0: ldc           #157
2: astore_1
3: aload_1
4: invokestatic  #158
7: astore_2
8: aload_2
9: invokevirtual #4
12: invokevirtual #18
15: astore_3
16: aload_1
17: aload_3
18: invokestatic  #56
21: invokestatic  #8
24: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: parsesBodyFragment
Start line: 319
End line: 324
Method source code: 
    @Test public void parsesBodyFragment() {
        String h = "<!-- comment --><p><a href='foo'>One</a></p>";
        Document doc = Jsoup.parseBodyFragment(h, "http://example.com");
        assertEquals("<body><!-- comment --><p><a href=\"foo\">One</a></p></body>", TextUtil.stripNewlines(doc.body().outerHtml()));
        assertEquals("http://example.com/foo", doc.select("a").first().absUrl("href"));
    }
Method byte code: 
0: ldc           #159
2: astore_1
3: aload_1
4: ldc           #160
6: invokestatic  #161
9: astore_2
10: ldc           #162
12: aload_2
13: invokevirtual #4
16: invokevirtual #103
19: invokestatic  #56
22: invokestatic  #8
25: ldc           #163
27: aload_2
28: ldc           #137
30: invokevirtual #43
33: invokevirtual #44
36: ldc           #140
38: invokevirtual #141
41: invokestatic  #8
44: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnknownNamespaceTags
Start line: 326
End line: 331
Method source code: 
    @Test public void handlesUnknownNamespaceTags() {
        // note that the first foo:bar should not really be allowed to be self closing, if parsed in html mode.
        String h = "<foo:bar id='1' /><abc:def id=2>Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>";
        Document doc = Jsoup.parse(h);
        assertEquals("<foo:bar id=\"1\" /><abc:def id=\"2\">Foo<p>Hello</p></abc:def><foo:bar>There</foo:bar>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #164
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #165
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #56
20: invokestatic  #8
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesKnownEmptyBlocks
Start line: 333
End line: 338
Method source code: 
    @Test public void handlesKnownEmptyBlocks() {
        // if a known tag, allow self closing outside of spec, but force an end tag. unknown tags can be self closing.
        String h = "<div id='1' /><script src='/foo' /><div id=2><img /><img></div><a id=3 /><i /><foo /><foo>One</foo> <hr /> hr text <hr> hr text two";
        Document doc = Jsoup.parse(h);
        assertEquals("<div id=\"1\"></div><script src=\"/foo\"></script><div id=\"2\"><img><img></div><a id=\"3\"></a><i></i><foo /><foo>One</foo> <hr> hr text <hr> hr text two", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #166
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #167
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #56
20: invokestatic  #8
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesSolidusAtAttributeEnd
Start line: 340
End line: 345
Method source code: 
    @Test public void handlesSolidusAtAttributeEnd() {
        // this test makes sure [<a href=/>link</a>] is parsed as [<a href="/">link</a>], not [<a href="" /><a>link</a>]
        String h = "<a href=/>link</a>";
        Document doc = Jsoup.parse(h);
        assertEquals("<a href=\"/\">link</a>", doc.body().html());
    }
Method byte code: 
0: ldc           #168
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #169
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesMultiClosingBody
Start line: 347
End line: 352
Method source code: 
    @Test public void handlesMultiClosingBody() {
        String h = "<body><p>Hello</body><p>there</p></body></body></html><p>now";
        Document doc = Jsoup.parse(h);
        assertEquals(3, doc.select("p").size());
        assertEquals(3, doc.body().children().size());
    }
Method byte code: 
0: ldc           #170
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc2_w        #62
11: aload_2
12: ldc           #6
14: invokevirtual #43
17: invokevirtual #35
20: i2l
21: invokestatic  #36
24: ldc2_w        #62
27: aload_2
28: invokevirtual #4
31: invokevirtual #61
34: invokevirtual #35
37: i2l
38: invokestatic  #36
41: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnclosedDefinitionLists
Start line: 354
End line: 363
Method source code: 
    @Test public void handlesUnclosedDefinitionLists() {
        // jsoup used to create a <dl>, but that's not to spec
        String h = "<dt>Foo<dd>Bar<dt>Qux<dd>Zug";
        Document doc = Jsoup.parse(h);
        assertEquals(0, doc.select("dl").size()); // no auto dl
        assertEquals(4, doc.select("dt, dd").size());
        Elements dts = doc.select("dt");
        assertEquals(2, dts.size());
        assertEquals("Zug", dts.get(1).nextElementSibling().text());
    }
Method byte code: 
0: ldc           #171
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: lconst_0
9: aload_2
10: ldc           #172
12: invokevirtual #43
15: invokevirtual #35
18: i2l
19: invokestatic  #36
22: ldc2_w        #173
25: aload_2
26: ldc           #175
28: invokevirtual #43
31: invokevirtual #35
34: i2l
35: invokestatic  #36
38: aload_2
39: ldc           #176
41: invokevirtual #43
44: astore_3
45: ldc2_w        #49
48: aload_3
49: invokevirtual #35
52: i2l
53: invokestatic  #36
56: ldc           #177
58: aload_3
59: iconst_1
60: invokevirtual #31
63: invokevirtual #178
66: invokevirtual #32
69: invokestatic  #8
72: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesBlocksInDefinitions
Start line: 365
End line: 372
Method source code: 
    @Test public void handlesBlocksInDefinitions() {
        // per the spec, dt and dd are inline, but in practise are block
        String h = "<dl><dt><div id=1>Term</div></dt><dd><div id=2>Def</div></dd></dl>";
        Document doc = Jsoup.parse(h);
        assertEquals("dt", doc.select("#1").first().parent().tagName());
        assertEquals("dd", doc.select("#2").first().parent().tagName());
        assertEquals("<dl><dt><div id=\"1\">Term</div></dt><dd><div id=\"2\">Def</div></dd></dl>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #179
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #176
10: aload_2
11: ldc           #180
13: invokevirtual #43
16: invokevirtual #44
19: invokevirtual #113
22: invokevirtual #7
25: invokestatic  #8
28: ldc           #181
30: aload_2
31: ldc           #182
33: invokevirtual #43
36: invokevirtual #44
39: invokevirtual #113
42: invokevirtual #7
45: invokestatic  #8
48: ldc           #183
50: aload_2
51: invokevirtual #4
54: invokevirtual #18
57: invokestatic  #56
60: invokestatic  #8
63: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesFrames
Start line: 374
End line: 380
Method source code: 
    @Test public void handlesFrames() {
        String h = "<html><head><script></script><noscript></noscript></head><frameset><frame src=foo></frame><frame src=foo></frameset></html>";
        Document doc = Jsoup.parse(h);
        assertEquals("<html><head><script></script><noscript></noscript></head><frameset><frame src=\"foo\"><frame src=\"foo\"></frameset></html>",
                TextUtil.stripNewlines(doc.html()));
        // no body auto vivification
    }
Method byte code: 
0: ldc           #184
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #185
10: aload_2
11: invokevirtual #90
14: invokestatic  #56
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: ignoresContentAfterFrameset
Start line: 382
End line: 387
Method source code: 
    @Test public void ignoresContentAfterFrameset() {
        String h = "<html><head><title>One</title></head><frameset><frame /><frame /></frameset><table></table></html>";
        Document doc = Jsoup.parse(h);
        assertEquals("<html><head><title>One</title></head><frameset><frame><frame></frameset></html>", TextUtil.stripNewlines(doc.html()));
        // no body, no table. No crash!
    }
Method byte code: 
0: ldc           #186
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #187
10: aload_2
11: invokevirtual #90
14: invokestatic  #56
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesJavadocFont
Start line: 389
End line: 396
Method source code: 
    @Test public void handlesJavadocFont() {
        String h = "<TD BGCOLOR=\"#EEEEFF\" CLASS=\"NavBarCell1\">    <A HREF=\"deprecated-list.html\"><FONT CLASS=\"NavBarFont1\"><B>Deprecated</B></FONT></A>&nbsp;</TD>";
        Document doc = Jsoup.parse(h);
        Element a = doc.select("a").first();
        assertEquals("Deprecated", a.text());
        assertEquals("font", a.child(0).tagName());
        assertEquals("b", a.child(0).child(0).tagName());
    }
Method byte code: 
0: ldc           #188
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: ldc           #137
11: invokevirtual #43
14: invokevirtual #44
17: astore_3
18: ldc           #189
20: aload_3
21: invokevirtual #32
24: invokestatic  #8
27: ldc           #190
29: aload_3
30: iconst_0
31: invokevirtual #5
34: invokevirtual #7
37: invokestatic  #8
40: ldc           #191
42: aload_3
43: iconst_0
44: invokevirtual #5
47: iconst_0
48: invokevirtual #5
51: invokevirtual #7
54: invokestatic  #8
57: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesBaseWithoutHref
Start line: 398
End line: 404
Method source code: 
    @Test public void handlesBaseWithoutHref() {
        String h = "<head><base target='_blank'></head><body><a href=/foo>Test</a></body>";
        Document doc = Jsoup.parse(h, "http://example.com/");
        Element a = doc.select("a").first();
        assertEquals("/foo", a.attr("href"));
        assertEquals("http://example.com/foo", a.attr("abs:href"));
    }
Method byte code: 
0: ldc           #192
2: astore_1
3: aload_1
4: ldc           #193
6: invokestatic  #134
9: astore_2
10: aload_2
11: ldc           #137
13: invokevirtual #43
16: invokevirtual #44
19: astore_3
20: ldc           #194
22: aload_3
23: ldc           #140
25: invokevirtual #11
28: invokestatic  #8
31: ldc           #163
33: aload_3
34: ldc           #195
36: invokevirtual #11
39: invokestatic  #8
42: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: normalisesDocument
Start line: 406
End line: 411
Method source code: 
    @Test public void normalisesDocument() {
        String h = "<!doctype html>One<html>Two<head>Three<link></head>Four<body>Five </body>Six </html>Seven ";
        Document doc = Jsoup.parse(h);
        assertEquals("<!DOCTYPE html><html><head></head><body>OneTwoThree<link>FourFive Six Seven </body></html>",
                TextUtil.stripNewlines(doc.html()));
    }
Method byte code: 
0: ldc           #196
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #197
10: aload_2
11: invokevirtual #90
14: invokestatic  #56
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: normalisesEmptyDocument
Start line: 413
End line: 416
Method source code: 
    @Test public void normalisesEmptyDocument() {
        Document doc = Jsoup.parse("");
        assertEquals("<html><head></head><body></body></html>", TextUtil.stripNewlines(doc.html()));
    }
Method byte code: 
0: ldc           #37
2: invokestatic  #3
5: astore_1
6: ldc           #198
8: aload_1
9: invokevirtual #90
12: invokestatic  #56
15: invokestatic  #8
18: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: normalisesHeadlessBody
Start line: 418
End line: 422
Method source code: 
    @Test public void normalisesHeadlessBody() {
        Document doc = Jsoup.parse("<html><body><span class=\"foo\">bar</span>");
        assertEquals("<html><head></head><body><span class=\"foo\">bar</span></body></html>",
                TextUtil.stripNewlines(doc.html()));
    }
Method byte code: 
0: ldc           #199
2: invokestatic  #3
5: astore_1
6: ldc           #200
8: aload_1
9: invokevirtual #90
12: invokestatic  #56
15: invokestatic  #8
18: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: normalisedBodyAfterContent
Start line: 424
End line: 428
Method source code: 
    @Test public void normalisedBodyAfterContent() {
        Document doc = Jsoup.parse("<font face=Arial><body class=name><div>One</div></body></font>");
        assertEquals("<html><head></head><body class=\"name\"><font face=\"Arial\"><div>One</div></font></body></html>",
                TextUtil.stripNewlines(doc.html()));
    }
Method byte code: 
0: ldc           #201
2: invokestatic  #3
5: astore_1
6: ldc           #202
8: aload_1
9: invokevirtual #90
12: invokestatic  #56
15: invokestatic  #8
18: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: findsCharsetInMalformedMeta
Start line: 430
End line: 435
Method source code: 
    @Test public void findsCharsetInMalformedMeta() {
        String h = "<meta http-equiv=Content-Type content=text/html; charset=gb2312>";
        // example cited for reason of html5's <meta charset> element
        Document doc = Jsoup.parse(h);
        assertEquals("gb2312", doc.select("meta").attr("charset"));
    }
Method byte code: 
0: ldc           #203
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #204
10: aload_2
11: ldc           #65
13: invokevirtual #43
16: ldc           #205
18: invokevirtual #206
21: invokestatic  #8
24: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: testHgroup
Start line: 437
End line: 441
Method source code: 
    @Test public void testHgroup() {
        // jsoup used to not allow hroup in h{n}, but that's not in spec, and browsers are OK
        Document doc = Jsoup.parse("<h1>Hello <h2>There <hgroup><h1>Another<h2>headline</hgroup> <hgroup><h1>More</h1><p>stuff</p></hgroup>");
        assertEquals("<h1>Hello </h1><h2>There <hgroup><h1>Another</h1><h2>headline</h2></hgroup> <hgroup><h1>More</h1><p>stuff</p></hgroup></h2>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #207
2: invokestatic  #3
5: astore_1
6: ldc           #208
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: testRelaxedTags
Start line: 443
End line: 446
Method source code: 
    @Test public void testRelaxedTags() {
        Document doc = Jsoup.parse("<abc_def id=1>Hello</abc_def> <abc-def>There</abc-def>");
        assertEquals("<abc_def id=\"1\">Hello</abc_def> <abc-def>There</abc-def>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #209
2: invokestatic  #3
5: astore_1
6: ldc           #210
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: testHeaderContents
Start line: 448
End line: 453
Method source code: 
    @Test public void testHeaderContents() {
        // h* tags (h1 .. h9) in browsers can handle any internal content other than other h*. which is not per any
        // spec, which defines them as containing phrasing content only. so, reality over theory.
        Document doc = Jsoup.parse("<h1>Hello <div>There</div> now</h1> <h2>More <h3>Content</h3></h2>");
        assertEquals("<h1>Hello <div>There</div> now</h1> <h2>More </h2><h3>Content</h3>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #211
2: invokestatic  #3
5: astore_1
6: ldc           #212
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: testSpanContents
Start line: 455
End line: 459
Method source code: 
    @Test public void testSpanContents() {
        // like h1 tags, the spec says SPAN is phrasing only, but browsers and publisher treat span as a block tag
        Document doc = Jsoup.parse("<span>Hello <div>there</div> <span>now</span></span>");
        assertEquals("<span>Hello <div>there</div> <span>now</span></span>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #213
2: invokestatic  #3
5: astore_1
6: ldc           #213
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: testNoImagesInNoScriptInHead
Start line: 461
End line: 465
Method source code: 
    @Test public void testNoImagesInNoScriptInHead() {
        // jsoup used to allow, but against spec if parsing with noscript
        Document doc = Jsoup.parse("<html><head><noscript><img src='foo'></noscript></head><body><p>Hello</p></body></html>");
        assertEquals("<html><head><noscript></noscript></head><body><img src=\"foo\"><p>Hello</p></body></html>", TextUtil.stripNewlines(doc.html()));
    }
Method byte code: 
0: ldc           #214
2: invokestatic  #3
5: astore_1
6: ldc           #215
8: aload_1
9: invokevirtual #90
12: invokestatic  #56
15: invokestatic  #8
18: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: testAFlowContents
Start line: 467
End line: 471
Method source code: 
    @Test public void testAFlowContents() {
        // html5 has <a> as either phrasing or block
        Document doc = Jsoup.parse("<a>Hello <div>there</div> <span>now</span></a>");
        assertEquals("<a>Hello <div>there</div> <span>now</span></a>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #216
2: invokestatic  #3
5: astore_1
6: ldc           #216
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: testFontFlowContents
Start line: 473
End line: 477
Method source code: 
    @Test public void testFontFlowContents() {
        // html5 has no definition of <font>; often used as flow
        Document doc = Jsoup.parse("<font>Hello <div>there</div> <span>now</span></font>");
        assertEquals("<font>Hello <div>there</div> <span>now</span></font>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #217
2: invokestatic  #3
5: astore_1
6: ldc           #217
8: aload_1
9: invokevirtual #4
12: invokevirtual #18
15: invokestatic  #56
18: invokestatic  #8
21: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesMisnestedTagsBI
Start line: 479
End line: 485
Method source code: 
    @Test public void handlesMisnestedTagsBI() {
        // whatwg: <b><i></b></i>
        String h = "<p>1<b>2<i>3</b>4</i>5</p>";
        Document doc = Jsoup.parse(h);
        assertEquals("<p>1<b>2<i>3</i></b><i>4</i>5</p>", doc.body().html());
        // adoption agency on </b>, reconstruction of formatters on 4.
    }
Method byte code: 
0: ldc           #218
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #219
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesMisnestedTagsBP
Start line: 487
End line: 492
Method source code: 
    @Test public void handlesMisnestedTagsBP() {
        //  whatwg: <b><p></b></p>
        String h = "<b>1<p>2</b>3</p>";
        Document doc = Jsoup.parse(h);
        assertEquals("<b>1</b>\n<p><b>2</b>3</p>", doc.body().html());
    }
Method byte code: 
0: ldc           #220
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #221
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnexpectedMarkupInTables
Start line: 494
End line: 500
Method source code: 
    @Test public void handlesUnexpectedMarkupInTables() {
        // whatwg - tests markers in active formatting (if they didn't work, would get in in table)
        // also tests foster parenting
        String h = "<table><b><tr><td>aaa</td></tr>bbb</table>ccc";
        Document doc = Jsoup.parse(h);
        assertEquals("<b></b><b>bbb</b><table><tbody><tr><td>aaa</td></tr></tbody></table><b>ccc</b>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc           #222
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #223
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #56
20: invokestatic  #8
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnclosedFormattingElements
Start line: 502
End line: 522
Method source code: 
    @Test public void handlesUnclosedFormattingElements() {
        // whatwg: formatting elements get collected and applied, but excess elements are thrown away
        String h = "<!DOCTYPE html>\n" +
                "<p><b class=x><b class=x><b><b class=x><b class=x><b>X\n" +
                "<p>X\n" +
                "<p><b><b class=x><b>X\n" +
                "<p></b></b></b></b></b></b>X";
        Document doc = Jsoup.parse(h);
        doc.outputSettings().indentAmount(0);
        String want = "<!DOCTYPE html>\n" +
                "<html>\n" +
                "<head></head>\n" +
                "<body>\n" +
                "<p><b class=\"x\"><b class=\"x\"><b><b class=\"x\"><b class=\"x\"><b>X </b></b></b></b></b></b></p>\n" +
                "<p><b class=\"x\"><b><b class=\"x\"><b class=\"x\"><b>X </b></b></b></b></b></p>\n" +
                "<p><b class=\"x\"><b><b class=\"x\"><b class=\"x\"><b><b><b class=\"x\"><b>X </b></b></b></b></b></b></b></b></p>\n" +
                "<p>X</p>\n" +
                "</body>\n" +
                "</html>";
        assertEquals(want, doc.html());
    }
Method byte code: 
0: ldc           #224
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: invokevirtual #225
12: iconst_0
13: invokevirtual #226
16: pop
17: ldc           #227
19: astore_3
20: aload_3
21: aload_2
22: invokevirtual #90
25: invokestatic  #8
28: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnclosedAnchors
Start line: 524
End line: 529
Method source code: 
    @Test public void handlesUnclosedAnchors() {
        String h = "<a href='http://example.com/'>Link<p>Error link</a>";
        Document doc = Jsoup.parse(h);
        String want = "<a href=\"http://example.com/\">Link</a>\n<p><a href=\"http://example.com/\">Error link</a></p>";
        assertEquals(want, doc.body().html());
    }
Method byte code: 
0: ldc           #228
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #229
10: astore_3
11: aload_3
12: aload_2
13: invokevirtual #4
16: invokevirtual #18
19: invokestatic  #8
22: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: reconstructFormattingElements
Start line: 531
End line: 536
Method source code: 
    @Test public void reconstructFormattingElements() {
        // tests attributes and multi b
        String h = "<p><b class=one>One <i>Two <b>Three</p><p>Hello</p>";
        Document doc = Jsoup.parse(h);
        assertEquals("<p><b class=\"one\">One <i>Two <b>Three</b></i></b></p>\n<p><b class=\"one\"><i><b>Hello</b></i></b></p>", doc.body().html());
    }
Method byte code: 
0: ldc           #230
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #231
10: aload_2
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: reconstructFormattingElementsInTable
Start line: 538
End line: 553
Method source code: 
    @Test public void reconstructFormattingElementsInTable() {
        // tests that tables get formatting markers -- the <b> applies outside the table and does not leak in,
        // and the <i> inside the table and does not leak out.
        String h = "<p><b>One</p> <table><tr><td><p><i>Three<p>Four</i></td></tr></table> <p>Five</p>";
        Document doc = Jsoup.parse(h);
        String want = "<p><b>One</b></p>\n" +
                "<b> \n" +
                " <table>\n" +
                "  <tbody>\n" +
                "   <tr>\n" +
                "    <td><p><i>Three</i></p><p><i>Four</i></p></td>\n" +
                "   </tr>\n" +
                "  </tbody>\n" +
                " </table> <p>Five</p></b>";
        assertEquals(want, doc.body().html());
    }
Method byte code: 
0: ldc           #232
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #233
10: astore_3
11: aload_3
12: aload_2
13: invokevirtual #4
16: invokevirtual #18
19: invokestatic  #8
22: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: commentBeforeHtml
Start line: 555
End line: 559
Method source code: 
    @Test public void commentBeforeHtml() {
        String h = "<!-- comment --><!-- comment 2 --><p>One</p>";
        Document doc = Jsoup.parse(h);
        assertEquals("<!-- comment --><!-- comment 2 --><html><head></head><body><p>One</p></body></html>", TextUtil.stripNewlines(doc.html()));
    }
Method byte code: 
0: ldc           #234
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #235
10: aload_2
11: invokevirtual #90
14: invokestatic  #56
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: emptyTdTag
Start line: 561
End line: 565
Method source code: 
    @Test public void emptyTdTag() {
        String h = "<table><tr><td>One</td><td id='2' /></tr></table>";
        Document doc = Jsoup.parse(h);
        assertEquals("<td>One</td>\n<td id=\"2\"></td>", doc.select("tr").first().html());
    }
Method byte code: 
0: ldc           #236
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: ldc           #237
10: aload_2
11: ldc           #238
13: invokevirtual #43
16: invokevirtual #44
19: invokevirtual #18
22: invokestatic  #8
25: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesSolidusInA
Start line: 567
End line: 574
Method source code: 
    @Test public void handlesSolidusInA() {
        // test for bug #66
        String h = "<a class=lp href=/lib/14160711/>link text</a>";
        Document doc = Jsoup.parse(h);
        Element a = doc.select("a").first();
        assertEquals("link text", a.text());
        assertEquals("/lib/14160711/", a.attr("href"));
    }
Method byte code: 
0: ldc           #239
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: ldc           #137
11: invokevirtual #43
14: invokevirtual #44
17: astore_3
18: ldc           #240
20: aload_3
21: invokevirtual #32
24: invokestatic  #8
27: ldc           #241
29: aload_3
30: ldc           #140
32: invokevirtual #11
35: invokestatic  #8
38: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesSpanInTbody
Start line: 576
End line: 582
Method source code: 
    @Test public void handlesSpanInTbody() {
        // test for bug 64
        String h = "<table><tbody><span class='1'><tr><td>One</td></tr><tr><td>Two</td></tr></span></tbody></table>";
        Document doc = Jsoup.parse(h);
        assertEquals(doc.select("span").first().children().size(), 0); // the span gets closed
        assertEquals(doc.select("table").size(), 1); // only one table
    }
Method byte code: 
0: ldc           #242
2: astore_1
3: aload_1
4: invokestatic  #3
7: astore_2
8: aload_2
9: ldc           #243
11: invokevirtual #43
14: invokevirtual #44
17: invokevirtual #61
20: invokevirtual #35
23: i2l
24: lconst_0
25: invokestatic  #36
28: aload_2
29: ldc           #244
31: invokevirtual #43
34: invokevirtual #35
37: i2l
38: lconst_1
39: invokestatic  #36
42: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnclosedTitleAtEof
Start line: 584
End line: 592
Method source code: 
    @Test public void handlesUnclosedTitleAtEof() {
        assertEquals("Data", Jsoup.parse("<title>Data").title());
        assertEquals("Data<", Jsoup.parse("<title>Data<").title());
        assertEquals("Data</", Jsoup.parse("<title>Data</").title());
        assertEquals("Data</t", Jsoup.parse("<title>Data</t").title());
        assertEquals("Data</ti", Jsoup.parse("<title>Data</ti").title());
        assertEquals("Data", Jsoup.parse("<title>Data</title>").title());
        assertEquals("Data", Jsoup.parse("<title>Data</title >").title());
    }
Method byte code: 
0: ldc           #245
2: ldc           #246
4: invokestatic  #3
7: invokevirtual #69
10: invokestatic  #8
13: ldc           #247
15: ldc           #248
17: invokestatic  #3
20: invokevirtual #69
23: invokestatic  #8
26: ldc           #249
28: ldc           #250
30: invokestatic  #3
33: invokevirtual #69
36: invokestatic  #8
39: ldc           #251
41: ldc           #252
43: invokestatic  #3
46: invokevirtual #69
49: invokestatic  #8
52: ldc           #253
54: ldc           #254
56: invokestatic  #3
59: invokevirtual #69
62: invokestatic  #8
65: ldc           #245
67: ldc           #255
69: invokestatic  #3
72: invokevirtual #69
75: invokestatic  #8
78: ldc           #245
80: ldc_w         #256
83: invokestatic  #3
86: invokevirtual #69
89: invokestatic  #8
92: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnclosedTitle
Start line: 594
End line: 602
Method source code: 
    @Test public void handlesUnclosedTitle() {
        Document one = Jsoup.parse("<title>One <b>Two <b>Three</TITLE><p>Test</p>"); // has title, so <b> is plain text
        assertEquals("One <b>Two <b>Three", one.title());
        assertEquals("Test", one.select("p").first().text());

        Document two = Jsoup.parse("<title>One<b>Two <p>Test</p>"); // no title, so <b> causes </title> breakout
        assertEquals("One", two.title());
        assertEquals("<b>Two <p>Test</p></b>", two.body().html());
    }
Method byte code: 
0: ldc           #245
2: ldc           #246
4: invokestatic  #3
7: invokevirtual #69
10: invokestatic  #8
13: ldc           #247
15: ldc           #248
17: invokestatic  #3
20: invokevirtual #69
23: invokestatic  #8
26: ldc           #249
28: ldc           #250
30: invokestatic  #3
33: invokevirtual #69
36: invokestatic  #8
39: ldc           #251
41: ldc           #252
43: invokestatic  #3
46: invokevirtual #69
49: invokestatic  #8
52: ldc           #253
54: ldc           #254
56: invokestatic  #3
59: invokevirtual #69
62: invokestatic  #8
65: ldc           #245
67: ldc           #255
69: invokestatic  #3
72: invokevirtual #69
75: invokestatic  #8
78: ldc           #245
80: ldc_w         #256
83: invokestatic  #3
86: invokevirtual #69
89: invokestatic  #8
92: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnclosedScriptAtEof
Start line: 604
End line: 618
Method source code: 
    @Test public void handlesUnclosedScriptAtEof() {
        assertEquals("Data", Jsoup.parse("<script>Data").select("script").first().data());
        assertEquals("Data<", Jsoup.parse("<script>Data<").select("script").first().data());
        assertEquals("Data</sc", Jsoup.parse("<script>Data</sc").select("script").first().data());
        assertEquals("Data</-sc", Jsoup.parse("<script>Data</-sc").select("script").first().data());
        assertEquals("Data</sc-", Jsoup.parse("<script>Data</sc-").select("script").first().data());
        assertEquals("Data</sc--", Jsoup.parse("<script>Data</sc--").select("script").first().data());
        assertEquals("Data", Jsoup.parse("<script>Data</script>").select("script").first().data());
        assertEquals("Data</script", Jsoup.parse("<script>Data</script").select("script").first().data());
        assertEquals("Data", Jsoup.parse("<script>Data</script ").select("script").first().data());
        assertEquals("Data", Jsoup.parse("<script>Data</script n").select("script").first().data());
        assertEquals("Data", Jsoup.parse("<script>Data</script n=").select("script").first().data());
        assertEquals("Data", Jsoup.parse("<script>Data</script n=\"").select("script").first().data());
        assertEquals("Data", Jsoup.parse("<script>Data</script n=\"p").select("script").first().data());
    }
Method byte code: 
0: ldc           #245
2: ldc_w         #262
5: invokestatic  #3
8: ldc           #106
10: invokevirtual #43
13: invokevirtual #44
16: invokevirtual #83
19: invokestatic  #8
22: ldc           #247
24: ldc_w         #263
27: invokestatic  #3
30: ldc           #106
32: invokevirtual #43
35: invokevirtual #44
38: invokevirtual #83
41: invokestatic  #8
44: ldc_w         #264
47: ldc_w         #265
50: invokestatic  #3
53: ldc           #106
55: invokevirtual #43
58: invokevirtual #44
61: invokevirtual #83
64: invokestatic  #8
67: ldc_w         #266
70: ldc_w         #267
73: invokestatic  #3
76: ldc           #106
78: invokevirtual #43
81: invokevirtual #44
84: invokevirtual #83
87: invokestatic  #8
90: ldc_w         #268
93: ldc_w         #269
96: invokestatic  #3
99: ldc           #106
101: invokevirtual #43
104: invokevirtual #44
107: invokevirtual #83
110: invokestatic  #8
113: ldc_w         #270
116: ldc_w         #271
119: invokestatic  #3
122: ldc           #106
124: invokevirtual #43
127: invokevirtual #44
130: invokevirtual #83
133: invokestatic  #8
136: ldc           #245
138: ldc_w         #272
141: invokestatic  #3
144: ldc           #106
146: invokevirtual #43
149: invokevirtual #44
152: invokevirtual #83
155: invokestatic  #8
158: ldc_w         #273
161: ldc_w         #274
164: invokestatic  #3
167: ldc           #106
169: invokevirtual #43
172: invokevirtual #44
175: invokevirtual #83
178: invokestatic  #8
181: ldc           #245
183: ldc_w         #275
186: invokestatic  #3
189: ldc           #106
191: invokevirtual #43
194: invokevirtual #44
197: invokevirtual #83
200: invokestatic  #8
203: ldc           #245
205: ldc_w         #276
208: invokestatic  #3
211: ldc           #106
213: invokevirtual #43
216: invokevirtual #44
219: invokevirtual #83
222: invokestatic  #8
225: ldc           #245
227: ldc_w         #277
230: invokestatic  #3
233: ldc           #106
235: invokevirtual #43
238: invokevirtual #44
241: invokevirtual #83
244: invokestatic  #8
247: ldc           #245
249: ldc_w         #278
252: invokestatic  #3
255: ldc           #106
257: invokevirtual #43
260: invokevirtual #44
263: invokevirtual #83
266: invokestatic  #8
269: ldc           #245
271: ldc_w         #279
274: invokestatic  #3
277: ldc           #106
279: invokevirtual #43
282: invokevirtual #44
285: invokevirtual #83
288: invokestatic  #8
291: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesUnclosedRawtextAtEof
Start line: 620
End line: 628
Method source code: 
    @Test public void handlesUnclosedRawtextAtEof() {
        assertEquals("Data", Jsoup.parse("<style>Data").select("style").first().data());
        assertEquals("Data</st", Jsoup.parse("<style>Data</st").select("style").first().data());
        assertEquals("Data", Jsoup.parse("<style>Data</style>").select("style").first().data());
        assertEquals("Data</style", Jsoup.parse("<style>Data</style").select("style").first().data());
        assertEquals("Data</-style", Jsoup.parse("<style>Data</-style").select("style").first().data());
        assertEquals("Data</style-", Jsoup.parse("<style>Data</style-").select("style").first().data());
        assertEquals("Data</style--", Jsoup.parse("<style>Data</style--").select("style").first().data());
    }
Method byte code: 
0: ldc           #245
2: ldc_w         #280
5: invokestatic  #3
8: ldc           #79
10: invokevirtual #43
13: invokevirtual #44
16: invokevirtual #83
19: invokestatic  #8
22: ldc_w         #281
25: ldc_w         #282
28: invokestatic  #3
31: ldc           #79
33: invokevirtual #43
36: invokevirtual #44
39: invokevirtual #83
42: invokestatic  #8
45: ldc           #245
47: ldc_w         #283
50: invokestatic  #3
53: ldc           #79
55: invokevirtual #43
58: invokevirtual #44
61: invokevirtual #83
64: invokestatic  #8
67: ldc_w         #284
70: ldc_w         #285
73: invokestatic  #3
76: ldc           #79
78: invokevirtual #43
81: invokevirtual #44
84: invokevirtual #83
87: invokestatic  #8
90: ldc_w         #286
93: ldc_w         #287
96: invokestatic  #3
99: ldc           #79
101: invokevirtual #43
104: invokevirtual #44
107: invokevirtual #83
110: invokestatic  #8
113: ldc_w         #288
116: ldc_w         #289
119: invokestatic  #3
122: ldc           #79
124: invokevirtual #43
127: invokevirtual #44
130: invokevirtual #83
133: invokestatic  #8
136: ldc_w         #290
139: ldc_w         #291
142: invokestatic  #3
145: ldc           #79
147: invokevirtual #43
150: invokevirtual #44
153: invokevirtual #83
156: invokestatic  #8
159: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: noImplicitFormForTextAreas
Start line: 630
End line: 634
Method source code: 
    @Test public void noImplicitFormForTextAreas() {
        // old jsoup parser would create implicit forms for form children like <textarea>, but no more
        Document doc = Jsoup.parse("<textarea>One</textarea>");
        assertEquals("<textarea>One</textarea>", doc.body().html());
    }
Method byte code: 
0: ldc_w         #292
3: invokestatic  #3
6: astore_1
7: ldc_w         #292
10: aload_1
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesEscapedScript
Start line: 636
End line: 639
Method source code: 
    @Test public void handlesEscapedScript() {
        Document doc = Jsoup.parse("<script><!-- one <script>Blah</script> --></script>");
        assertEquals("<!-- one <script>Blah</script> -->", doc.select("script").first().data());
    }
Method byte code: 
0: ldc_w         #293
3: invokestatic  #3
6: astore_1
7: ldc_w         #294
10: aload_1
11: ldc           #106
13: invokevirtual #43
16: invokevirtual #44
19: invokevirtual #83
22: invokestatic  #8
25: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handles0CharacterAsText
Start line: 641
End line: 644
Method source code: 
    @Test public void handles0CharacterAsText() {
        Document doc = Jsoup.parse("0<p>0</p>");
        assertEquals("0\n<p>0</p>", doc.body().html());
    }
Method byte code: 
0: ldc_w         #295
3: invokestatic  #3
6: astore_1
7: ldc_w         #296
10: aload_1
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesNullInData
Start line: 646
End line: 649
Method source code: 
    @Test public void handlesNullInData() {
        Document doc = Jsoup.parse("<p id=\u0000>Blah \u0000</p>");
        assertEquals("<p id=\"\uFFFD\">Blah \u0000</p>", doc.body().html()); // replaced in attr, NOT replaced in data
    }
Method byte code: 
0: ldc_w         #297
3: invokestatic  #3
6: astore_1
7: ldc_w         #298
10: aload_1
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesNullInComments
Start line: 651
End line: 654
Method source code: 
    @Test public void handlesNullInComments() {
        Document doc = Jsoup.parse("<body><!-- \u0000 \u0000 -->");
        assertEquals("<!-- \uFFFD \uFFFD -->", doc.body().html());
    }
Method byte code: 
0: ldc_w         #299
3: invokestatic  #3
6: astore_1
7: ldc_w         #300
10: aload_1
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesNewlinesAndWhitespaceInTag
Start line: 656
End line: 659
Method source code: 
    @Test public void handlesNewlinesAndWhitespaceInTag() {
        Document doc = Jsoup.parse("<a \n href=\"one\" \r\n id=\"two\" \f >");
        assertEquals("<a href=\"one\" id=\"two\"></a>", doc.body().html());
    }
Method byte code: 
0: ldc_w         #301
3: invokestatic  #3
6: astore_1
7: ldc_w         #302
10: aload_1
11: invokevirtual #4
14: invokevirtual #18
17: invokestatic  #8
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesWhitespaceInoDocType
Start line: 661
End line: 667
Method source code: 
    @Test public void handlesWhitespaceInoDocType() {
        String html = "<!DOCTYPE html\r\n" +
                "      PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n" +
                "      \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">";
        Document doc = Jsoup.parse(html);
        assertEquals("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">", doc.childNode(0).outerHtml());
    }
Method byte code: 
0: ldc_w         #303
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: ldc_w         #304
12: aload_2
13: iconst_0
14: invokevirtual #305
17: invokevirtual #306
20: invokestatic  #8
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: tracksErrorsWhenRequested
Start line: 669
End line: 681
Method source code: 
    @Test public void tracksErrorsWhenRequested() {
        String html = "<p>One</p href='no'><!DOCTYPE html>&arrgh;<font /><br /><foo";
        Parser parser = Parser.htmlParser().setTrackErrors(500);
        Document doc = Jsoup.parse(html, "http://example.com", parser);
        
        List<ParseError> errors = parser.getErrors();
        assertEquals(5, errors.size());
        assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
        assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
        assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
        assertEquals("50: Self closing flag not acknowledged", errors.get(3).toString());
        assertEquals("61: Unexpectedly reached end of file (EOF) in input state [TagName]", errors.get(4).toString());
    }
Method byte code: 
0: ldc_w         #307
3: astore_1
4: invokestatic  #308
7: sipush        500
10: invokevirtual #309
13: astore_2
14: aload_1
15: ldc           #160
17: aload_2
18: invokestatic  #310
21: astore_3
22: aload_2
23: invokevirtual #311
26: astore        4
28: ldc2_w        #312
31: aload         4
33: invokeinterface #314,  1
38: i2l
39: invokestatic  #36
42: ldc_w         #315
45: aload         4
47: iconst_0
48: invokeinterface #81,  2
53: checkcast     #316
56: invokevirtual #317
59: invokestatic  #8
62: ldc_w         #318
65: aload         4
67: iconst_1
68: invokeinterface #81,  2
73: checkcast     #316
76: invokevirtual #317
79: invokestatic  #8
82: ldc_w         #319
85: aload         4
87: iconst_2
88: invokeinterface #81,  2
93: checkcast     #316
96: invokevirtual #317
99: invokestatic  #8
102: ldc_w         #320
105: aload         4
107: iconst_3
108: invokeinterface #81,  2
113: checkcast     #316
116: invokevirtual #317
119: invokestatic  #8
122: ldc_w         #321
125: aload         4
127: iconst_4
128: invokeinterface #81,  2
133: checkcast     #316
136: invokevirtual #317
139: invokestatic  #8
142: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: tracksLimitedErrorsWhenRequested
Start line: 683
End line: 693
Method source code: 
    @Test public void tracksLimitedErrorsWhenRequested() {
        String html = "<p>One</p href='no'><!DOCTYPE html>&arrgh;<font /><br /><foo";
        Parser parser = Parser.htmlParser().setTrackErrors(3);
        Document doc = parser.parseInput(html, "http://example.com");

        List<ParseError> errors = parser.getErrors();
        assertEquals(3, errors.size());
        assertEquals("20: Attributes incorrectly present on end tag", errors.get(0).toString());
        assertEquals("35: Unexpected token [Doctype] when in state [InBody]", errors.get(1).toString());
        assertEquals("36: Invalid character reference: invalid named referenece 'arrgh'", errors.get(2).toString());
    }
Method byte code: 
0: ldc_w         #307
3: astore_1
4: invokestatic  #308
7: iconst_3
8: invokevirtual #309
11: astore_2
12: aload_2
13: aload_1
14: ldc           #160
16: invokevirtual #322
19: astore_3
20: aload_2
21: invokevirtual #311
24: astore        4
26: ldc2_w        #62
29: aload         4
31: invokeinterface #314,  1
36: i2l
37: invokestatic  #36
40: ldc_w         #315
43: aload         4
45: iconst_0
46: invokeinterface #81,  2
51: checkcast     #316
54: invokevirtual #317
57: invokestatic  #8
60: ldc_w         #318
63: aload         4
65: iconst_1
66: invokeinterface #81,  2
71: checkcast     #316
74: invokevirtual #317
77: invokestatic  #8
80: ldc_w         #319
83: aload         4
85: iconst_2
86: invokeinterface #81,  2
91: checkcast     #316
94: invokevirtual #317
97: invokestatic  #8
100: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: noErrorsByDefault
Start line: 695
End line: 702
Method source code: 
    @Test public void noErrorsByDefault() {
        String html = "<p>One</p href='no'>&arrgh;<font /><br /><foo";
        Parser parser = Parser.htmlParser();
        Document doc = Jsoup.parse(html, "http://example.com", parser);

        List<ParseError> errors = parser.getErrors();
        assertEquals(0, errors.size());
    }
Method byte code: 
0: ldc_w         #323
3: astore_1
4: invokestatic  #308
7: astore_2
8: aload_1
9: ldc           #160
11: aload_2
12: invokestatic  #310
15: astore_3
16: aload_2
17: invokevirtual #311
20: astore        4
22: lconst_0
23: aload         4
25: invokeinterface #314,  1
30: i2l
31: invokestatic  #36
34: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesCommentsInTable
Start line: 704
End line: 708
Method source code: 
    @Test public void handlesCommentsInTable() {
        String html = "<table><tr><td>text</td><!-- Comment --></tr></table>";
        Document node = Jsoup.parseBodyFragment(html);
        assertEquals("<html><head></head><body><table><tbody><tr><td>text</td><!-- Comment --></tr></tbody></table></body></html>", TextUtil.stripNewlines(node.outerHtml()));
    }
Method byte code: 
0: ldc_w         #324
3: astore_1
4: aload_1
5: invokestatic  #158
8: astore_2
9: ldc_w         #325
12: aload_2
13: invokevirtual #326
16: invokestatic  #56
19: invokestatic  #8
22: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesQuotesInCommentsInScripts
Start line: 710
End line: 722
Method source code: 
    @Test public void handlesQuotesInCommentsInScripts() {
        String html = "<script>\n" +
                "  <!--\n" +
                "    document.write('</scr' + 'ipt>');\n" +
                "  // -->\n" +
                "</script>";
        Document node = Jsoup.parseBodyFragment(html);
        assertEquals("<script>\n" +
                "  <!--\n" +
                "    document.write('</scr' + 'ipt>');\n" +
                "  // -->\n" +
                "</script>", node.body().html());
    }
Method byte code: 
0: ldc_w         #327
3: astore_1
4: aload_1
5: invokestatic  #158
8: astore_2
9: ldc_w         #327
12: aload_2
13: invokevirtual #4
16: invokevirtual #18
19: invokestatic  #8
22: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handleNullContextInParseFragment
Start line: 724
End line: 730
Method source code: 
    @Test public void handleNullContextInParseFragment() {
        String html = "<ol><li>One</li></ol><p>Two</p>";
        List<Node> nodes = Parser.parseFragment(html, null, "http://example.com/");
        assertEquals(1, nodes.size()); // returns <html> node (not document) -- no context means doc gets created
        assertEquals("html", nodes.get(0).nodeName());
        assertEquals("<html> <head></head> <body> <ol> <li>One</li> </ol> <p>Two</p> </body> </html>", StringUtil.normaliseWhitespace(nodes.get(0).outerHtml()));
    }
Method byte code: 
0: ldc_w         #328
3: astore_1
4: aload_1
5: aconst_null
6: ldc           #193
8: invokestatic  #329
11: astore_2
12: lconst_1
13: aload_2
14: invokeinterface #314,  1
19: i2l
20: invokestatic  #36
23: ldc_w         #330
26: aload_2
27: iconst_0
28: invokeinterface #81,  2
33: checkcast     #331
36: invokevirtual #332
39: invokestatic  #8
42: ldc_w         #333
45: aload_2
46: iconst_0
47: invokeinterface #81,  2
52: checkcast     #331
55: invokevirtual #306
58: invokestatic  #334
61: invokestatic  #8
64: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: doesNotFindShortestMatchingEntity
Start line: 732
End line: 738
Method source code: 
    @Test public void doesNotFindShortestMatchingEntity() {
        // previous behaviour was to identify a possible entity, then chomp down the string until a match was found.
        // (as defined in html5.) However in practise that lead to spurious matches against the author's intent.
        String html = "One &clubsuite; &clubsuit;";
        Document doc = Jsoup.parse(html);
        assertEquals(StringUtil.normaliseWhitespace("One &amp;clubsuite; ♣"), doc.body().html());
    }
Method byte code: 
0: ldc_w         #335
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: ldc_w         #336
12: invokestatic  #334
15: aload_2
16: invokevirtual #4
19: invokevirtual #18
22: invokestatic  #8
25: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: relaxedBaseEntityMatchAndStrictExtendedMatch
Start line: 740
End line: 746
Method source code: 
    @Test public void relaxedBaseEntityMatchAndStrictExtendedMatch() {
        // extended entities need a ; at the end to match, base does not
        String html = "&amp &quot &reg &icy &hopf &icy; &hopf;";
        Document doc = Jsoup.parse(html);
        doc.outputSettings().escapeMode(Entities.EscapeMode.extended).charset("ascii"); // modifies output only to clarify test
        assertEquals("&amp; \" &reg; &amp;icy &amp;hopf &icy; &hopf;", doc.body().html());
    }
Method byte code: 
0: ldc_w         #337
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: aload_2
10: invokevirtual #225
13: getstatic     #338
16: invokevirtual #339
19: ldc_w         #340
22: invokevirtual #341
25: pop
26: ldc_w         #342
29: aload_2
30: invokevirtual #4
33: invokevirtual #18
36: invokestatic  #8
39: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesXmlDeclarationAsBogusComment
Start line: 748
End line: 752
Method source code: 
    @Test public void handlesXmlDeclarationAsBogusComment() {
        String html = "<?xml encoding='UTF-8' ?><body>One</body>";
        Document doc = Jsoup.parse(html);
        assertEquals("<!--?xml encoding='UTF-8' ?--> <html> <head></head> <body> One </body> </html>", StringUtil.normaliseWhitespace(doc.outerHtml()));
    }
Method byte code: 
0: ldc_w         #343
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: ldc_w         #344
12: aload_2
13: invokevirtual #326
16: invokestatic  #334
19: invokestatic  #8
22: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesTagsInTextarea
Start line: 754
End line: 758
Method source code: 
    @Test public void handlesTagsInTextarea() {
        String html = "<textarea><p>Jsoup</p></textarea>";
        Document doc = Jsoup.parse(html);
        assertEquals("<textarea>&lt;p&gt;Jsoup&lt;/p&gt;</textarea>", doc.body().html());
    }
Method byte code: 
0: ldc_w         #345
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: ldc_w         #346
12: aload_2
13: invokevirtual #4
16: invokevirtual #18
19: invokestatic  #8
22: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: createsFormElements
Start line: 761
End line: 772
Method source code: 
    @Test public void createsFormElements() {
        String html = "<body><form><input id=1><input id=2></form></body>";
        Document doc = Jsoup.parse(html);
        Element el = doc.select("form").first();

        assertTrue("Is form element", el instanceof FormElement);
        FormElement form = (FormElement) el;
        Elements controls = form.elements();
        assertEquals(2, controls.size());
        assertEquals("1", controls.get(0).id());
        assertEquals("2", controls.get(1).id());
    }
Method byte code: 
0: ldc_w         #347
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: aload_2
10: ldc_w         #348
13: invokevirtual #43
16: invokevirtual #44
19: astore_3
20: ldc_w         #349
23: aload_3
24: instanceof    #350
27: invokestatic  #351
30: aload_3
31: checkcast     #350
34: astore        4
36: aload         4
38: invokevirtual #352
41: astore        5
43: ldc2_w        #49
46: aload         5
48: invokevirtual #35
51: i2l
52: invokestatic  #36
55: ldc           #145
57: aload         5
59: iconst_0
60: invokevirtual #31
63: invokevirtual #353
66: invokestatic  #8
69: ldc_w         #354
72: aload         5
74: iconst_1
75: invokevirtual #31
78: invokevirtual #353
81: invokestatic  #8
84: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: associatedFormControlsWithDisjointForms
Start line: 774
End line: 788
Method source code: 
    @Test public void associatedFormControlsWithDisjointForms() {
        // form gets closed, isn't parent of controls
        String html = "<table><tr><form><input type=hidden id=1><td><input type=text id=2></td><tr></table>";
        Document doc = Jsoup.parse(html);
        Element el = doc.select("form").first();

        assertTrue("Is form element", el instanceof FormElement);
        FormElement form = (FormElement) el;
        Elements controls = form.elements();
        assertEquals(2, controls.size());
        assertEquals("1", controls.get(0).id());
        assertEquals("2", controls.get(1).id());

        assertEquals("<table><tbody><tr><form></form><input type=\"hidden\" id=\"1\"><td><input type=\"text\" id=\"2\"></td></tr><tr></tr></tbody></table>", TextUtil.stripNewlines(doc.body().html()));
    }
Method byte code: 
0: ldc_w         #355
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: aload_2
10: ldc_w         #348
13: invokevirtual #43
16: invokevirtual #44
19: astore_3
20: ldc_w         #349
23: aload_3
24: instanceof    #350
27: invokestatic  #351
30: aload_3
31: checkcast     #350
34: astore        4
36: aload         4
38: invokevirtual #352
41: astore        5
43: ldc2_w        #49
46: aload         5
48: invokevirtual #35
51: i2l
52: invokestatic  #36
55: ldc           #145
57: aload         5
59: iconst_0
60: invokevirtual #31
63: invokevirtual #353
66: invokestatic  #8
69: ldc_w         #354
72: aload         5
74: iconst_1
75: invokevirtual #31
78: invokevirtual #353
81: invokestatic  #8
84: ldc_w         #356
87: aload_2
88: invokevirtual #4
91: invokevirtual #18
94: invokestatic  #56
97: invokestatic  #8
100: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesInputInTable
Start line: 790
End line: 800
Method source code: 
    @Test public void handlesInputInTable() {
        String h = "<body>\n" +
                "<input type=\"hidden\" name=\"a\" value=\"\">\n" +
                "<table>\n" +
                "<input type=\"hidden\" name=\"b\" value=\"\" />\n" +
                "</table>\n" +
                "</body>";
        Document doc = Jsoup.parse(h);
        assertEquals(1, doc.select("table input").size());
        assertEquals(2, doc.select("input").size());
    }
Method byte code: 
0: ldc_w         #357
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: lconst_1
10: aload_2
11: ldc_w         #358
14: invokevirtual #43
17: invokevirtual #35
20: i2l
21: invokestatic  #36
24: ldc2_w        #49
27: aload_2
28: ldc_w         #359
31: invokevirtual #43
34: invokevirtual #35
37: i2l
38: invokestatic  #36
41: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: convertsImageToImg
Start line: 802
End line: 807
Method source code: 
    @Test public void convertsImageToImg() {
        // image to img, unless in a svg. old html cruft.
        String h = "<body><image><svg><image /></svg></body>";
        Document doc = Jsoup.parse(h);
        assertEquals("<img>\n<svg>\n <image />\n</svg>", doc.body().html());
    }
Method byte code: 
0: ldc_w         #360
3: astore_1
4: aload_1
5: invokestatic  #3
8: astore_2
9: ldc_w         #361
12: aload_2
13: invokevirtual #4
16: invokevirtual #18
19: invokestatic  #8
22: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/parser/HtmlParserTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/parser/HtmlParserTest.class
Class name: HtmlParserTest
Method name: handlesInvalidDoctypes
Start line: 809
End line: 825
Method source code: 
    @Test public void handlesInvalidDoctypes() {
        // would previously throw invalid name exception on empty doctype
        Document doc = Jsoup.parse("<!DOCTYPE>");
        assertEquals(
                "<!DOCTYPE> <html> <head></head> <body></body> </html>",
                StringUtil.normaliseWhitespace(doc.outerHtml()));

        doc = Jsoup.parse("<!DOCTYPE><html><p>Foo</p></html>");
        assertEquals(
                "<!DOCTYPE> <html> <head></head> <body> <p>Foo</p> </body> </html>",
                StringUtil.normaliseWhitespace(doc.outerHtml()));

        doc = Jsoup.parse("<!DOCTYPE \u0000>");
        assertEquals(
                "<!DOCTYPE �> <html> <head></head> <body></body> </html>",
                StringUtil.normaliseWhitespace(doc.outerHtml()));
    }
Method byte code: 
0: ldc_w         #362
3: invokestatic  #3
6: astore_1
7: ldc_w         #363
10: aload_1
11: invokevirtual #326
14: invokestatic  #334
17: invokestatic  #8
20: ldc_w         #364
23: invokestatic  #3
26: astore_1
27: ldc_w         #365
30: aload_1
31: invokevirtual #326
34: invokestatic  #334
37: invokestatic  #8
40: ldc_w         #366
43: invokestatic  #3
46: astore_1
47: ldc_w         #367
50: aload_1
51: invokevirtual #326
54: invokestatic  #334
57: invokestatic  #8
60: return
}
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/DocumentType_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/DocumentType_ESTest.class
Class name: DocumentType_ESTest
Method name: test0
Start line: 17
End line: 23
Method source code: 
  public void test0()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", "", "", "name");
      StringBuilder stringBuilder0 = new StringBuilder("");
      Document.OutputSettings document_OutputSettings0 = documentType0.getOutputSettings();
      documentType0.outerHtmlTail(stringBuilder0, (-2190), document_OutputSettings0);
      assertEquals(1, document_OutputSettings0.indentAmount());
  }
Method byte code: 
0: new           #2
3: dup
4: ldc           #3
6: ldc           #3
8: ldc           #3
10: ldc           #4
12: invokespecial #5
15: astore_1
16: new           #6
19: dup
20: ldc           #3
22: invokespecial #7
25: astore_2
26: aload_1
27: invokevirtual #8
30: astore_3
31: aload_1
32: aload_2
33: sipush        -2190
36: aload_3
37: invokevirtual #9
40: lconst_1
41: aload_3
42: invokevirtual #10
45: i2l
46: invokestatic  #11
49: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/DocumentType_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/DocumentType_ESTest.class
Class name: DocumentType_ESTest
Method name: test1
Start line: 26
End line: 30
Method source code: 
  public void test1()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("&G", "", "", "8]");
      String string0 = documentType0.nodeName();
      assertEquals("#doctype", string0);
  }
Method byte code: 
0: new           #2
3: dup
4: ldc           #12
6: ldc           #3
8: ldc           #3
10: ldc           #13
12: invokespecial #5
15: astore_1
16: aload_1
17: invokevirtual #14
20: astore_2
21: ldc           #15
23: aload_2
24: invokestatic  #16
27: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/DocumentType_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/DocumentType_ESTest.class
Class name: DocumentType_ESTest
Method name: test2
Start line: 33
End line: 39
Method source code: 
  public void test2()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", "", "", "name");
      StringBuilder stringBuilder0 = new StringBuilder("");
      Document.OutputSettings document_OutputSettings0 = documentType0.getOutputSettings();
      documentType0.outerHtmlHead(stringBuilder0, 0, document_OutputSettings0);
      assertEquals("<!DOCTYPE>", stringBuilder0.toString());
  }
Method byte code: 
0: new           #2
3: dup
4: ldc           #3
6: ldc           #3
8: ldc           #3
10: ldc           #4
12: invokespecial #5
15: astore_1
16: new           #6
19: dup
20: ldc           #3
22: invokespecial #7
25: astore_2
26: aload_1
27: invokevirtual #8
30: astore_3
31: aload_1
32: aload_2
33: iconst_0
34: aload_3
35: invokevirtual #17
38: ldc           #18
40: aload_2
41: invokevirtual #19
44: invokestatic  #16
47: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/DocumentType_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/DocumentType_ESTest.class
Class name: DocumentType_ESTest
Method name: test3
Start line: 42
End line: 48
Method source code: 
  public void test3()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("=\"", "=\"", "=\"", "&gt;");
      StringBuilder stringBuilder0 = new StringBuilder(949);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      documentType0.outerHtmlHead(stringBuilder0, 0, document_OutputSettings0);
      assertEquals("<!DOCTYPE =\" PUBLIC \"=\"\" \"=\"\">", stringBuilder0.toString());
  }
Method byte code: 
0: new           #2
3: dup
4: ldc           #20
6: ldc           #20
8: ldc           #20
10: ldc           #21
12: invokespecial #5
15: astore_1
16: new           #6
19: dup
20: sipush        949
23: invokespecial #22
26: astore_2
27: new           #23
30: dup
31: invokespecial #24
34: astore_3
35: aload_1
36: aload_2
37: iconst_0
38: aload_3
39: invokevirtual #17
42: ldc           #25
44: aload_2
45: invokevirtual #19
48: invokestatic  #16
51: return
}
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/DocumentTypeTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/DocumentTypeTest.class
Class name: DocumentTypeTest
Method name: constructorValidationOkWithBlankName
Start line: 13
End line: 15
Method source code: 
    public void constructorValidationOkWithBlankName() {
        DocumentType fail = new DocumentType("","", "", "");
    }
Method byte code: 
0: new           #2
3: dup
4: ldc           #3
6: ldc           #3
8: ldc           #3
10: ldc           #3
12: invokespecial #4
15: astore_1
16: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/DocumentTypeTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/DocumentTypeTest.class
Class name: DocumentTypeTest
Method name: constructorValidationThrowsExceptionOnNulls
Start line: 18
End line: 20
Method source code: 
    public void constructorValidationThrowsExceptionOnNulls() {
        DocumentType fail = new DocumentType("html", null, null, "");
    }
Method byte code: 
0: new           #2
3: dup
4: ldc           #5
6: aconst_null
7: aconst_null
8: ldc           #3
10: invokespecial #4
13: astore_1
14: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/DocumentTypeTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/DocumentTypeTest.class
Class name: DocumentTypeTest
Method name: constructorValidationOkWithBlankPublicAndSystemIds
Start line: 23
End line: 25
Method source code: 
    public void constructorValidationOkWithBlankPublicAndSystemIds() {
        DocumentType fail = new DocumentType("html","", "","");
    }
Method byte code: 
0: new           #2
3: dup
4: ldc           #5
6: ldc           #3
8: ldc           #3
10: ldc           #3
12: invokespecial #4
15: astore_1
16: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/src/test/java/org/jsoup/nodes/DocumentTypeTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/40/target/test-classes/org/jsoup/nodes/DocumentTypeTest.class
Class name: DocumentTypeTest
Method name: outerHtmlGeneration
Start line: 27
End line: 39
Method source code: 
    @Test public void outerHtmlGeneration() {
        DocumentType html5 = new DocumentType("html", "", "", "");
        assertEquals("<!DOCTYPE html>", html5.outerHtml());

        DocumentType publicDocType = new DocumentType("html", "-//IETF//DTD HTML//", "", "");
        assertEquals("<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML//\">", publicDocType.outerHtml());

        DocumentType systemDocType = new DocumentType("html", "", "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd", "");
        assertEquals("<!DOCTYPE html \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\">", systemDocType.outerHtml());

        DocumentType combo = new DocumentType("notHtml", "--public", "--system", "");
        assertEquals("<!DOCTYPE notHtml PUBLIC \"--public\" \"--system\">", combo.outerHtml());
    }
Method byte code: 
0: new           #2
3: dup
4: ldc           #5
6: ldc           #3
8: ldc           #3
10: ldc           #3
12: invokespecial #4
15: astore_1
16: ldc           #6
18: aload_1
19: invokevirtual #7
22: invokestatic  #8
25: new           #2
28: dup
29: ldc           #5
31: ldc           #9
33: ldc           #3
35: ldc           #3
37: invokespecial #4
40: astore_2
41: ldc           #10
43: aload_2
44: invokevirtual #7
47: invokestatic  #8
50: new           #2
53: dup
54: ldc           #5
56: ldc           #3
58: ldc           #11
60: ldc           #3
62: invokespecial #4
65: astore_3
66: ldc           #12
68: aload_3
69: invokevirtual #7
72: invokestatic  #8
75: new           #2
78: dup
79: ldc           #13
81: ldc           #14
83: ldc           #15
85: ldc           #3
87: invokespecial #4
90: astore        4
92: ldc           #16
94: aload         4
96: invokevirtual #7
99: invokestatic  #8
102: return
}
