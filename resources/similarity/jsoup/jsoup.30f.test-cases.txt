Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test001
Start line: 12
End line: 25
Method source code: 
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist11 = whitelist1.addEnforcedAttribute("hi!", "#document", "hi!");
        boolean boolean12 = org.jsoup.Jsoup.isValid("<html>\n <head></head>\n <body></body>\n</html>", whitelist1);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: aload_1
35: ldc           #10
37: ldc           #10
39: ldc           #10
41: invokevirtual #11
44: astore_3
45: aload_1
46: ldc           #12
48: ldc           #13
50: ldc           #12
52: invokevirtual #11
55: astore        4
57: ldc           #10
59: aload_1
60: invokestatic  #14
63: istore        5
65: aload_1
66: invokestatic  #15
69: aload_2
70: invokestatic  #15
73: aload_3
74: invokestatic  #15
77: aload         4
79: invokestatic  #15
82: new           #16
85: dup
86: invokespecial #17
89: ldc           #18
91: invokevirtual #19
94: iload         5
96: invokevirtual #20
99: ldc           #21
101: invokevirtual #19
104: iconst_1
105: invokevirtual #20
108: ldc           #18
110: invokevirtual #19
113: invokevirtual #22
116: iload         5
118: iconst_1
119: if_icmpne     126
122: iconst_1
123: goto          127
126: iconst_0
127: invokestatic  #23
130: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test002
Start line: 28
End line: 51
Method source code: 
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings13 = document6.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = outputSettings13.prettyPrint(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = org.jsoup.Jsoup.clean("", ".<html>\n <head></head>\n <body></body>\n</html>", whitelist2, outputSettings15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(outputSettings13);
        org.junit.Assert.assertNotNull(outputSettings15);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #24
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: ldc           #25
28: ldc           #12
30: invokestatic  #26
33: astore_2
34: ldc           #12
36: aload_2
37: ldc           #12
39: invokestatic  #27
42: astore_3
43: aload_2
44: ldc           #12
46: invokevirtual #28
49: astore        4
51: aload_2
52: ldc           #25
54: invokevirtual #29
57: astore        5
59: aload_2
60: invokevirtual #30
63: astore        6
65: aload         6
67: iconst_0
68: invokevirtual #31
71: astore        7
73: ldc           #25
75: ldc           #32
77: aload_1
78: aload         7
80: invokestatic  #33
83: astore        8
85: ldc           #34
87: invokestatic  #35
90: goto          95
93: astore        8
95: aload_2
96: invokestatic  #15
99: aload_3
100: invokestatic  #15
103: aload         4
105: invokestatic  #15
108: aload         5
110: invokestatic  #15
113: aload         6
115: invokestatic  #15
118: aload         7
120: invokestatic  #15
123: return
Exception table:
from    to  target type
73    90    93   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test003
Start line: 54
End line: 65
Method source code: 
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid(":matchesOwn(null", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #37
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: ldc           #38
28: aload_1
29: invokestatic  #14
32: istore_2
33: ldc           #34
35: invokestatic  #35
38: goto          42
41: astore_2
42: return
Exception table:
from    to  target type
26    38    41   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test004
Start line: 68
End line: 137
Method source code: 
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan23 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document26 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str27 = document26.ownText();
        org.jsoup.nodes.Node node30 = document26.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element38 = document34.tagName("hi!");
        org.jsoup.nodes.Element element40 = document34.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = document34.outputSettings();
        org.jsoup.select.Elements elements43 = document34.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element45 = document34.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element47 = document34.createElement(" hi!");
        org.jsoup.select.Elements elements49 = document34.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean50 = indexLessThan23.matches((org.jsoup.nodes.Element) document26, (org.jsoup.nodes.Element) document34);
        org.jsoup.nodes.Document document51 = cleaner3.clean(document34);
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList57 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document55, "hi!");
        org.jsoup.nodes.Element element59 = document55.text("");
        org.jsoup.nodes.Element element61 = document55.tagName("[hi!$=   ]");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node62 = document51.before((org.jsoup.nodes.Node) element61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertNotNull(elements43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(elements49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(element61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #39
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: new           #42
46: dup
47: ldc           #43
49: ldc           #32
51: invokespecial #44
54: astore        4
56: ldc           #12
58: invokestatic  #45
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         4
110: aload         5
112: aload         6
114: invokevirtual #46
117: istore        11
119: aload_3
120: aload         6
122: invokevirtual #47
125: astore        12
127: new           #48
130: dup
131: iconst_m1
132: invokespecial #49
135: astore        13
137: ldc           #50
139: ldc           #51
141: invokestatic  #52
144: astore        14
146: aload         14
148: invokevirtual #53
151: astore        15
153: aload         14
155: ldc           #54
157: ldc           #55
159: invokevirtual #56
162: astore        16
164: ldc           #25
166: ldc           #12
168: invokestatic  #26
171: astore        17
173: ldc           #12
175: aload         17
177: ldc           #12
179: invokestatic  #27
182: astore        18
184: aload         17
186: ldc           #12
188: invokevirtual #28
191: astore        19
193: aload         17
195: ldc           #25
197: invokevirtual #29
200: astore        20
202: aload         17
204: invokevirtual #30
207: astore        21
209: aload         17
211: ldc           #12
213: invokevirtual #57
216: astore        22
218: aload         17
220: ldc           #58
222: invokevirtual #59
225: astore        23
227: aload         17
229: ldc           #60
231: invokevirtual #61
234: astore        24
236: aload         17
238: ldc           #38
240: invokevirtual #62
243: astore        25
245: aload         13
247: aload         14
249: aload         17
251: invokevirtual #63
254: istore        26
256: aload_3
257: aload         17
259: invokevirtual #47
262: astore        27
264: ldc           #25
266: ldc           #12
268: invokestatic  #26
271: astore        28
273: ldc           #12
275: aload         28
277: ldc           #12
279: invokestatic  #27
282: astore        29
284: aload         28
286: ldc           #25
288: invokevirtual #64
291: astore        30
293: aload         28
295: ldc           #65
297: invokevirtual #28
300: astore        31
302: aload         27
304: aload         31
306: invokevirtual #66
309: astore        32
311: ldc           #34
313: invokestatic  #35
316: goto          321
319: astore        32
321: aload_1
322: invokestatic  #15
325: aload_2
326: invokestatic  #15
329: aload         5
331: invokestatic  #15
334: aload         6
336: invokestatic  #15
339: aload         7
341: invokestatic  #15
344: aload         8
346: invokestatic  #15
349: aload         9
351: invokestatic  #15
354: aload         10
356: invokestatic  #15
359: new           #16
362: dup
363: invokespecial #17
366: ldc           #18
368: invokevirtual #19
371: iload         11
373: invokevirtual #20
376: ldc           #21
378: invokevirtual #19
381: iconst_0
382: invokevirtual #20
385: ldc           #18
387: invokevirtual #19
390: invokevirtual #22
393: iload         11
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #23
406: aload         12
408: invokestatic  #15
411: aload         14
413: invokestatic  #15
416: new           #16
419: dup
420: invokespecial #17
423: ldc           #18
425: invokevirtual #19
428: aload         15
430: invokevirtual #19
433: ldc           #67
435: invokevirtual #19
438: invokevirtual #22
441: aload         15
443: ldc           #25
445: invokestatic  #68
448: aload         16
450: invokestatic  #15
453: aload         17
455: invokestatic  #15
458: aload         18
460: invokestatic  #15
463: aload         19
465: invokestatic  #15
468: aload         20
470: invokestatic  #15
473: aload         21
475: invokestatic  #15
478: aload         22
480: invokestatic  #15
483: aload         23
485: invokestatic  #15
488: aload         24
490: invokestatic  #15
493: aload         25
495: invokestatic  #15
498: new           #16
501: dup
502: invokespecial #17
505: ldc           #18
507: invokevirtual #19
510: iload         26
512: invokevirtual #20
515: ldc           #21
517: invokevirtual #19
520: iconst_0
521: invokevirtual #20
524: ldc           #18
526: invokevirtual #19
529: invokevirtual #22
532: iload         26
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #23
545: aload         27
547: invokestatic  #15
550: aload         28
552: invokestatic  #15
555: aload         29
557: invokestatic  #15
560: aload         30
562: invokestatic  #15
565: aload         31
567: invokestatic  #15
570: return
Exception table:
from    to  target type
302   316   319   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test005
Start line: 140
End line: 192
Method source code: 
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.util.regex.Pattern pattern0 = null;
        org.jsoup.select.Evaluator.Matches matches1 = new org.jsoup.select.Evaluator.Matches(pattern0);
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner5 = new org.jsoup.safety.Cleaner(whitelist4);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining8 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document10 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document14 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList16 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document14, "hi!");
        org.jsoup.nodes.Element element18 = document14.tagName("hi!");
        org.jsoup.nodes.Element element20 = document14.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = document14.outputSettings();
        boolean boolean22 = attributeWithValueContaining8.matches((org.jsoup.nodes.Element) document10, (org.jsoup.nodes.Element) document14);
        org.jsoup.nodes.Document document23 = cleaner5.clean(document14);
        org.jsoup.nodes.Document document27 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList29 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document27, "hi!");
        org.jsoup.nodes.Element element31 = document27.tagName("hi!");
        org.jsoup.nodes.Element element33 = document27.append("");
        java.lang.String str34 = document27.toString();
        java.lang.String str35 = document27.id();
        org.jsoup.nodes.Node node36 = document27.parent();
        org.jsoup.nodes.Document document37 = cleaner5.clean(document27);
        org.jsoup.nodes.Document document40 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = matches1.matches((org.jsoup.nodes.Element) document27, (org.jsoup.nodes.Element) document40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(document14);
        org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(outputSettings21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str34, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(document40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #69
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #70
29: dup
30: aload_1
31: invokespecial #71
34: astore_2
35: invokestatic  #8
38: astore_3
39: aload_3
40: iconst_1
41: invokevirtual #9
44: astore        4
46: new           #40
49: dup
50: aload         4
52: invokespecial #41
55: astore        5
57: new           #42
60: dup
61: ldc           #43
63: ldc           #32
65: invokespecial #44
68: astore        6
70: ldc           #12
72: invokestatic  #45
75: astore        7
77: ldc           #25
79: ldc           #12
81: invokestatic  #26
84: astore        8
86: ldc           #12
88: aload         8
90: ldc           #12
92: invokestatic  #27
95: astore        9
97: aload         8
99: ldc           #12
101: invokevirtual #28
104: astore        10
106: aload         8
108: ldc           #25
110: invokevirtual #29
113: astore        11
115: aload         8
117: invokevirtual #30
120: astore        12
122: aload         6
124: aload         7
126: aload         8
128: invokevirtual #46
131: istore        13
133: aload         5
135: aload         8
137: invokevirtual #47
140: astore        14
142: ldc           #25
144: ldc           #12
146: invokestatic  #26
149: astore        15
151: ldc           #12
153: aload         15
155: ldc           #12
157: invokestatic  #27
160: astore        16
162: aload         15
164: ldc           #12
166: invokevirtual #28
169: astore        17
171: aload         15
173: ldc           #25
175: invokevirtual #29
178: astore        18
180: aload         15
182: invokevirtual #72
185: astore        19
187: aload         15
189: invokevirtual #73
192: astore        20
194: aload         15
196: invokevirtual #74
199: astore        21
201: aload         5
203: aload         15
205: invokevirtual #47
208: astore        22
210: ldc           #50
212: ldc           #51
214: invokestatic  #52
217: astore        23
219: aload_2
220: aload         15
222: aload         23
224: invokevirtual #75
227: istore        24
229: ldc           #76
231: invokestatic  #35
234: goto          239
237: astore        24
239: aload_3
240: invokestatic  #15
243: aload         4
245: invokestatic  #15
248: aload         7
250: invokestatic  #15
253: aload         8
255: invokestatic  #15
258: aload         9
260: invokestatic  #15
263: aload         10
265: invokestatic  #15
268: aload         11
270: invokestatic  #15
273: aload         12
275: invokestatic  #15
278: new           #16
281: dup
282: invokespecial #17
285: ldc           #18
287: invokevirtual #19
290: iload         13
292: invokevirtual #20
295: ldc           #21
297: invokevirtual #19
300: iconst_0
301: invokevirtual #20
304: ldc           #18
306: invokevirtual #19
309: invokevirtual #22
312: iload         13
314: ifne          321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #23
325: aload         14
327: invokestatic  #15
330: aload         15
332: invokestatic  #15
335: aload         16
337: invokestatic  #15
340: aload         17
342: invokestatic  #15
345: aload         18
347: invokestatic  #15
350: new           #16
353: dup
354: invokespecial #17
357: ldc           #18
359: invokevirtual #19
362: aload         19
364: invokevirtual #19
367: ldc           #78
369: invokevirtual #19
372: invokevirtual #22
375: aload         19
377: ldc           #10
379: invokestatic  #68
382: new           #16
385: dup
386: invokespecial #17
389: ldc           #18
391: invokevirtual #19
394: aload         20
396: invokevirtual #19
399: ldc           #67
401: invokevirtual #19
404: invokevirtual #22
407: aload         20
409: ldc           #25
411: invokestatic  #68
414: aload         21
416: invokestatic  #79
419: aload         22
421: invokestatic  #15
424: aload         23
426: invokestatic  #15
429: return
Exception table:
from    to  target type
219   234   237   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test006
Start line: 195
End line: 208
Method source code: 
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        boolean boolean8 = whitelist3.isSafeTag("\n<!--hi!-->");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #80
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: ldc           #32
36: aload_2
37: invokestatic  #81
40: astore_3
41: aload_2
42: ldc           #82
44: invokevirtual #83
47: istore        4
49: aload_2
50: ldc           #84
52: invokevirtual #83
55: istore        5
57: aload_1
58: invokestatic  #15
61: aload_2
62: invokestatic  #15
65: new           #16
68: dup
69: invokespecial #17
72: ldc           #18
74: invokevirtual #19
77: aload_3
78: invokevirtual #19
81: ldc           #85
83: invokevirtual #19
86: invokevirtual #22
89: aload_3
90: ldc           #86
92: invokestatic  #68
95: new           #16
98: dup
99: invokespecial #17
102: ldc           #18
104: invokevirtual #19
107: iload         4
109: invokevirtual #20
112: ldc           #21
114: invokevirtual #19
117: iconst_0
118: invokevirtual #20
121: ldc           #18
123: invokevirtual #19
126: invokevirtual #22
129: iload         4
131: ifne          138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #23
142: new           #16
145: dup
146: invokespecial #17
149: ldc           #18
151: invokevirtual #19
154: iload         5
156: invokevirtual #20
159: ldc           #21
161: invokevirtual #19
164: iconst_0
165: invokevirtual #20
168: ldc           #18
170: invokevirtual #19
173: invokevirtual #22
176: iload         5
178: ifne          185
181: iconst_1
182: goto          186
185: iconst_0
186: invokestatic  #23
189: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test007
Start line: 211
End line: 268
Method source code: 
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj3 = objList0.peekFirst();
        objList0.addFirst((java.lang.Object) ":gt(100)");
        org.jsoup.safety.Whitelist whitelist8 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist10 = whitelist8.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist14 = whitelist8.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist18 = whitelist8.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str19 = org.jsoup.Jsoup.clean("#document", "<html>\n <head></head>\n <body></body>\n</html>", whitelist18);
        objList0.addLast((java.lang.Object) whitelist18);
        java.util.regex.Pattern pattern23 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching24 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        java.lang.String str35 = document28.toString();
        org.jsoup.nodes.Element element37 = document28.prependElement("\nhi!");
        org.jsoup.select.Elements elements39 = document28.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList45 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document43, "hi!");
        org.jsoup.nodes.Element element47 = document43.tagName("hi!");
        org.jsoup.nodes.Element element49 = document43.append("");
        boolean boolean50 = attributeWithValueMatching24.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document43);
        org.jsoup.nodes.Document document51 = document43.normalise();
        org.jsoup.nodes.Element element52 = document51.empty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = objList0.set((int) (byte) 100, (java.lang.Object) document51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#document" + "'", str19, "#document");
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str35, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(nodeList45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(element52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #87
19: aastore
20: invokevirtual #7
23: pop
24: new           #88
27: dup
28: invokespecial #89
31: astore_1
32: aload_1
33: ldc           #43
35: invokevirtual #90
38: istore_2
39: aload_1
40: invokevirtual #91
43: astore_3
44: aload_1
45: ldc           #92
47: invokevirtual #93
50: invokestatic  #8
53: astore        4
55: aload         4
57: iconst_1
58: invokevirtual #9
61: astore        5
63: aload         4
65: ldc           #10
67: ldc           #10
69: ldc           #10
71: invokevirtual #11
74: astore        6
76: aload         4
78: ldc           #12
80: ldc           #13
82: ldc           #12
84: invokevirtual #11
87: astore        7
89: ldc           #13
91: ldc           #10
93: aload         7
95: invokestatic  #94
98: astore        8
100: aload_1
101: aload         7
103: invokevirtual #95
106: aconst_null
107: astore        9
109: new           #96
112: dup
113: ldc           #25
115: aload         9
117: invokespecial #97
120: astore        10
122: ldc           #25
124: ldc           #12
126: invokestatic  #26
129: astore        11
131: ldc           #12
133: aload         11
135: ldc           #12
137: invokestatic  #27
140: astore        12
142: aload         11
144: ldc           #12
146: invokevirtual #28
149: astore        13
151: aload         11
153: ldc           #25
155: invokevirtual #29
158: astore        14
160: aload         11
162: invokevirtual #72
165: astore        15
167: aload         11
169: ldc           #98
171: invokevirtual #99
174: astore        16
176: aload         11
178: ldc           #25
180: invokevirtual #100
183: astore        17
185: ldc           #25
187: ldc           #12
189: invokestatic  #26
192: astore        18
194: ldc           #12
196: aload         18
198: ldc           #12
200: invokestatic  #27
203: astore        19
205: aload         18
207: ldc           #12
209: invokevirtual #28
212: astore        20
214: aload         18
216: ldc           #25
218: invokevirtual #29
221: astore        21
223: aload         10
225: aload         11
227: aload         18
229: invokevirtual #101
232: istore        22
234: aload         18
236: invokevirtual #102
239: astore        23
241: aload         23
243: invokevirtual #103
246: astore        24
248: aload_1
249: bipush        100
251: aload         23
253: invokevirtual #104
256: astore        25
258: ldc           #105
260: invokestatic  #35
263: goto          268
266: astore        25
268: new           #16
271: dup
272: invokespecial #17
275: ldc           #18
277: invokevirtual #19
280: iload_2
281: invokevirtual #20
284: ldc           #21
286: invokevirtual #19
289: iconst_0
290: invokevirtual #20
293: ldc           #18
295: invokevirtual #19
298: invokevirtual #22
301: iload_2
302: ifne          309
305: iconst_1
306: goto          310
309: iconst_0
310: invokestatic  #23
313: aload_3
314: invokestatic  #79
317: aload         4
319: invokestatic  #15
322: aload         5
324: invokestatic  #15
327: aload         6
329: invokestatic  #15
332: aload         7
334: invokestatic  #15
337: new           #16
340: dup
341: invokespecial #17
344: ldc           #18
346: invokevirtual #19
349: aload         8
351: invokevirtual #19
354: ldc           #107
356: invokevirtual #19
359: invokevirtual #22
362: aload         8
364: ldc           #13
366: invokestatic  #68
369: aload         11
371: invokestatic  #15
374: aload         12
376: invokestatic  #15
379: aload         13
381: invokestatic  #15
384: aload         14
386: invokestatic  #15
389: new           #16
392: dup
393: invokespecial #17
396: ldc           #18
398: invokevirtual #19
401: aload         15
403: invokevirtual #19
406: ldc           #78
408: invokevirtual #19
411: invokevirtual #22
414: aload         15
416: ldc           #10
418: invokestatic  #68
421: aload         16
423: invokestatic  #15
426: aload         17
428: invokestatic  #15
431: aload         18
433: invokestatic  #15
436: aload         19
438: invokestatic  #15
441: aload         20
443: invokestatic  #15
446: aload         21
448: invokestatic  #15
451: new           #16
454: dup
455: invokespecial #17
458: ldc           #18
460: invokevirtual #19
463: iload         22
465: invokevirtual #20
468: ldc           #21
470: invokevirtual #19
473: iconst_0
474: invokevirtual #20
477: ldc           #18
479: invokevirtual #19
482: invokevirtual #22
485: iload         22
487: ifne          494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #23
498: aload         23
500: invokestatic  #15
503: aload         24
505: invokestatic  #15
508: return
Exception table:
from    to  target type
248   263   266   Class java/lang/IndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test008
Start line: 271
End line: 284
Method source code: 
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str4 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist8 = whitelist3.preserveRelativeLinks(false);
        java.lang.String str9 = org.jsoup.Jsoup.clean("<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", whitelist3);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[hi!$=   ]" + "'", str4, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[^hi!]" + "'", str9, "[^hi!]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #108
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: ldc           #109
30: ldc           #110
32: aload_1
33: invokestatic  #94
36: astore_2
37: aload_1
38: ldc           #25
40: invokevirtual #83
43: istore_3
44: aload_1
45: iconst_0
46: invokevirtual #9
49: astore        4
51: ldc           #55
53: aload_1
54: invokestatic  #81
57: astore        5
59: aload_1
60: invokestatic  #15
63: new           #16
66: dup
67: invokespecial #17
70: ldc           #18
72: invokevirtual #19
75: aload_2
76: invokevirtual #19
79: ldc           #111
81: invokevirtual #19
84: invokevirtual #22
87: aload_2
88: ldc           #65
90: invokestatic  #68
93: new           #16
96: dup
97: invokespecial #17
100: ldc           #18
102: invokevirtual #19
105: iload_3
106: invokevirtual #20
109: ldc           #21
111: invokevirtual #19
114: iconst_0
115: invokevirtual #20
118: ldc           #18
120: invokevirtual #19
123: invokevirtual #22
126: iload_3
127: ifne          134
130: iconst_1
131: goto          135
134: iconst_0
135: invokestatic  #23
138: aload         4
140: invokestatic  #15
143: new           #16
146: dup
147: invokespecial #17
150: ldc           #18
152: invokevirtual #19
155: aload         5
157: invokevirtual #19
160: ldc           #112
162: invokevirtual #19
165: invokevirtual #22
168: aload         5
170: ldc           #50
172: invokestatic  #68
175: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test009
Start line: 287
End line: 321
Method source code: 
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Element element23 = document21.html("#comment");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node25 = element23.after("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #113
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: new           #42
46: dup
47: ldc           #43
49: ldc           #32
51: invokespecial #44
54: astore        4
56: ldc           #12
58: invokestatic  #45
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         4
110: aload         5
112: aload         6
114: invokevirtual #46
117: istore        11
119: aload_3
120: aload         6
122: invokevirtual #47
125: astore        12
127: aload         12
129: ldc           #114
131: invokevirtual #115
134: astore        13
136: aload         13
138: ldc           #25
140: invokevirtual #116
143: astore        14
145: ldc           #34
147: invokestatic  #35
150: goto          155
153: astore        14
155: aload_1
156: invokestatic  #15
159: aload_2
160: invokestatic  #15
163: aload         5
165: invokestatic  #15
168: aload         6
170: invokestatic  #15
173: aload         7
175: invokestatic  #15
178: aload         8
180: invokestatic  #15
183: aload         9
185: invokestatic  #15
188: aload         10
190: invokestatic  #15
193: new           #16
196: dup
197: invokespecial #17
200: ldc           #18
202: invokevirtual #19
205: iload         11
207: invokevirtual #20
210: ldc           #21
212: invokevirtual #19
215: iconst_0
216: invokevirtual #20
219: ldc           #18
221: invokevirtual #19
224: invokevirtual #22
227: iload         11
229: ifne          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #23
240: aload         12
242: invokestatic  #15
245: aload         13
247: invokestatic  #15
250: return
Exception table:
from    to  target type
136   150   153   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test010
Start line: 324
End line: 361
Method source code: 
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist9 = whitelist7.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str14 = org.jsoup.Jsoup.clean(":lt(32)", whitelist13);
        org.jsoup.safety.Whitelist whitelist18 = whitelist13.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray25 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist26 = whitelist13.addTags(strArray25);
        org.jsoup.safety.Whitelist whitelist27 = whitelist9.addProtocols(":matchesOwn(null", "hi!", strArray25);
        java.lang.String[] strArray36 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean37 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray36);
        org.jsoup.safety.Whitelist whitelist38 = whitelist27.addProtocols("\n<!--hi!-->", "#document", strArray36);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray36);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray36);
        org.jsoup.safety.Whitelist whitelist41 = whitelist2.addAttributes("*", strArray36);
        org.jsoup.safety.Whitelist whitelist43 = whitelist2.preserveRelativeLinks(false);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + ":lt(32)" + "'", str14, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(whitelist43);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #117
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: ldc           #109
30: ldc           #110
32: aload_1
33: invokestatic  #94
36: astore_2
37: invokestatic  #8
40: astore_3
41: aload_3
42: iconst_1
43: invokevirtual #9
46: astore        4
48: aload         4
50: iconst_0
51: invokevirtual #9
54: astore        5
56: invokestatic  #118
59: astore        6
61: ldc           #43
63: aload         6
65: invokestatic  #81
68: astore        7
70: aload         6
72: ldc           #43
74: ldc           #12
76: ldc           #32
78: invokevirtual #11
81: astore        8
83: bipush        6
85: anewarray     #119
88: dup
89: iconst_0
90: ldc           #109
92: aastore
93: dup
94: iconst_1
95: ldc           #10
97: aastore
98: dup
99: iconst_2
100: ldc           #13
102: aastore
103: dup
104: iconst_3
105: ldc           #50
107: aastore
108: dup
109: iconst_4
110: ldc           #12
112: aastore
113: dup
114: iconst_5
115: ldc           #120
117: aastore
118: astore        9
120: aload         6
122: aload         9
124: invokevirtual #121
127: astore        10
129: aload         5
131: ldc           #38
133: ldc           #12
135: aload         9
137: invokevirtual #122
140: astore        11
142: iconst_5
143: anewarray     #119
146: dup
147: iconst_0
148: ldc           #13
150: aastore
151: dup
152: iconst_1
153: ldc           #32
155: aastore
156: dup
157: iconst_2
158: ldc           #10
160: aastore
161: dup
162: iconst_3
163: ldc           #43
165: aastore
166: dup
167: iconst_4
168: ldc           #58
170: aastore
171: astore        12
173: ldc           #10
175: aload         12
177: invokestatic  #123
180: istore        13
182: aload         11
184: ldc           #84
186: ldc           #13
188: aload         12
190: invokevirtual #122
193: astore        14
195: aload         12
197: checkcast     #124
200: invokestatic  #125
203: aload         12
205: checkcast     #124
208: invokestatic  #125
211: aload_1
212: ldc           #126
214: aload         12
216: invokevirtual #127
219: astore        15
221: aload_1
222: iconst_0
223: invokevirtual #9
226: astore        16
228: aload_1
229: invokestatic  #15
232: new           #16
235: dup
236: invokespecial #17
239: ldc           #18
241: invokevirtual #19
244: aload_2
245: invokevirtual #19
248: ldc           #111
250: invokevirtual #19
253: invokevirtual #22
256: aload_2
257: ldc           #65
259: invokestatic  #68
262: aload_3
263: invokestatic  #15
266: aload         4
268: invokestatic  #15
271: aload         5
273: invokestatic  #15
276: aload         6
278: invokestatic  #15
281: new           #16
284: dup
285: invokespecial #17
288: ldc           #18
290: invokevirtual #19
293: aload         7
295: invokevirtual #19
298: ldc           #128
300: invokevirtual #19
303: invokevirtual #22
306: aload         7
308: ldc           #43
310: invokestatic  #68
313: aload         8
315: invokestatic  #15
318: aload         9
320: invokestatic  #15
323: aload         10
325: invokestatic  #15
328: aload         11
330: invokestatic  #15
333: aload         12
335: invokestatic  #15
338: new           #16
341: dup
342: invokespecial #17
345: ldc           #18
347: invokevirtual #19
350: iload         13
352: invokevirtual #20
355: ldc           #21
357: invokevirtual #19
360: iconst_1
361: invokevirtual #20
364: ldc           #18
366: invokevirtual #19
369: invokevirtual #22
372: iload         13
374: iconst_1
375: if_icmpne     382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #23
386: aload         14
388: invokestatic  #15
391: aload         15
393: invokestatic  #15
396: aload         16
398: invokestatic  #15
401: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test011
Start line: 364
End line: 389
Method source code: 
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        int int9 = objList0.lastIndexOf((java.lang.Object) document4);
        objList0.clear();
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist14 = whitelist12.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner15 = new org.jsoup.safety.Cleaner(whitelist14);
        // The following exception was thrown during execution in test generation
        try {
            objList0.add((int) (short) 10, (java.lang.Object) cleaner15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #129
19: aastore
20: invokevirtual #7
23: pop
24: new           #88
27: dup
28: invokespecial #89
31: astore_1
32: ldc           #25
34: ldc           #12
36: invokestatic  #26
39: astore_2
40: ldc           #12
42: aload_2
43: ldc           #12
45: invokestatic  #27
48: astore_3
49: aload_2
50: ldc           #25
52: invokevirtual #64
55: astore        4
57: aload_1
58: aload_2
59: invokevirtual #130
62: istore        5
64: aload_1
65: invokevirtual #131
68: invokestatic  #8
71: astore        6
73: aload         6
75: iconst_1
76: invokevirtual #9
79: astore        7
81: new           #40
84: dup
85: aload         7
87: invokespecial #41
90: astore        8
92: aload_1
93: bipush        10
95: aload         8
97: invokevirtual #132
100: ldc           #133
102: invokestatic  #35
105: goto          110
108: astore        9
110: aload_2
111: invokestatic  #15
114: aload_3
115: invokestatic  #15
118: aload         4
120: invokestatic  #15
123: new           #16
126: dup
127: invokespecial #17
130: ldc           #18
132: invokevirtual #19
135: iload         5
137: invokevirtual #134
140: ldc           #21
142: invokevirtual #19
145: iconst_m1
146: invokevirtual #134
149: ldc           #18
151: invokevirtual #19
154: invokevirtual #22
157: iload         5
159: iconst_m1
160: if_icmpne     167
163: iconst_1
164: goto          168
167: iconst_0
168: invokestatic  #23
171: aload         6
173: invokestatic  #15
176: aload         7
178: invokestatic  #15
181: return
Exception table:
from    to  target type
92   105   108   Class java/lang/IndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test012
Start line: 392
End line: 423
Method source code: 
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str10 = org.jsoup.Jsoup.clean(":lt(32)", whitelist9);
        org.jsoup.safety.Whitelist whitelist14 = whitelist9.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray21 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist22 = whitelist9.addTags(strArray21);
        org.jsoup.safety.Whitelist whitelist23 = whitelist5.addProtocols(":matchesOwn(null", "hi!", strArray21);
        java.lang.String[] strArray32 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean33 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray32);
        org.jsoup.safety.Whitelist whitelist34 = whitelist23.addProtocols("\n<!--hi!-->", "#document", strArray32);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray32);
        boolean boolean36 = org.jsoup.helper.StringUtil.in("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", strArray32);
        org.jsoup.helper.Validate.notNull((java.lang.Object) boolean36);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + ":lt(32)" + "'", str10, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #135
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: aload_2
35: iconst_0
36: invokevirtual #9
39: astore_3
40: invokestatic  #118
43: astore        4
45: ldc           #43
47: aload         4
49: invokestatic  #81
52: astore        5
54: aload         4
56: ldc           #43
58: ldc           #12
60: ldc           #32
62: invokevirtual #11
65: astore        6
67: bipush        6
69: anewarray     #119
72: dup
73: iconst_0
74: ldc           #109
76: aastore
77: dup
78: iconst_1
79: ldc           #10
81: aastore
82: dup
83: iconst_2
84: ldc           #13
86: aastore
87: dup
88: iconst_3
89: ldc           #50
91: aastore
92: dup
93: iconst_4
94: ldc           #12
96: aastore
97: dup
98: iconst_5
99: ldc           #120
101: aastore
102: astore        7
104: aload         4
106: aload         7
108: invokevirtual #121
111: astore        8
113: aload_3
114: ldc           #38
116: ldc           #12
118: aload         7
120: invokevirtual #122
123: astore        9
125: iconst_5
126: anewarray     #119
129: dup
130: iconst_0
131: ldc           #13
133: aastore
134: dup
135: iconst_1
136: ldc           #32
138: aastore
139: dup
140: iconst_2
141: ldc           #10
143: aastore
144: dup
145: iconst_3
146: ldc           #43
148: aastore
149: dup
150: iconst_4
151: ldc           #58
153: aastore
154: astore        10
156: ldc           #10
158: aload         10
160: invokestatic  #123
163: istore        11
165: aload         9
167: ldc           #84
169: ldc           #13
171: aload         10
173: invokevirtual #122
176: astore        12
178: aload         10
180: checkcast     #124
183: invokestatic  #125
186: ldc           #136
188: aload         10
190: invokestatic  #123
193: istore        13
195: iload         13
197: invokestatic  #137
200: invokestatic  #138
203: aload_1
204: invokestatic  #15
207: aload_2
208: invokestatic  #15
211: aload_3
212: invokestatic  #15
215: aload         4
217: invokestatic  #15
220: new           #16
223: dup
224: invokespecial #17
227: ldc           #18
229: invokevirtual #19
232: aload         5
234: invokevirtual #19
237: ldc           #128
239: invokevirtual #19
242: invokevirtual #22
245: aload         5
247: ldc           #43
249: invokestatic  #68
252: aload         6
254: invokestatic  #15
257: aload         7
259: invokestatic  #15
262: aload         8
264: invokestatic  #15
267: aload         9
269: invokestatic  #15
272: aload         10
274: invokestatic  #15
277: new           #16
280: dup
281: invokespecial #17
284: ldc           #18
286: invokevirtual #19
289: iload         11
291: invokevirtual #20
294: ldc           #21
296: invokevirtual #19
299: iconst_1
300: invokevirtual #20
303: ldc           #18
305: invokevirtual #19
308: invokevirtual #22
311: iload         11
313: iconst_1
314: if_icmpne     321
317: iconst_1
318: goto          322
321: iconst_0
322: invokestatic  #23
325: aload         12
327: invokestatic  #15
330: new           #16
333: dup
334: invokespecial #17
337: ldc           #18
339: invokevirtual #19
342: iload         13
344: invokevirtual #20
347: ldc           #21
349: invokevirtual #19
352: iconst_0
353: invokevirtual #20
356: ldc           #18
358: invokevirtual #19
361: invokevirtual #22
364: iload         13
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #23
377: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test013
Start line: 426
End line: 474
Method source code: 
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.select.Elements elements37 = document25.getElementsByAttributeStarting("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #139
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: new           #42
46: dup
47: ldc           #43
49: ldc           #32
51: invokespecial #44
54: astore        4
56: ldc           #12
58: invokestatic  #45
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         4
110: aload         5
112: aload         6
114: invokevirtual #46
117: istore        11
119: aload_3
120: aload         6
122: invokevirtual #47
125: astore        12
127: ldc           #25
129: ldc           #12
131: invokestatic  #26
134: astore        13
136: ldc           #12
138: aload         13
140: ldc           #12
142: invokestatic  #27
145: astore        14
147: aload         13
149: ldc           #12
151: invokevirtual #28
154: astore        15
156: aload         13
158: ldc           #25
160: invokevirtual #29
163: astore        16
165: aload         13
167: invokevirtual #72
170: astore        17
172: aload         13
174: invokevirtual #73
177: astore        18
179: aload         13
181: invokevirtual #74
184: astore        19
186: aload_3
187: aload         13
189: invokevirtual #47
192: astore        20
194: aload         13
196: ldc           #25
198: invokevirtual #140
201: astore        21
203: ldc           #141
205: invokestatic  #35
208: goto          213
211: astore        21
213: aload_1
214: invokestatic  #15
217: aload_2
218: invokestatic  #15
221: aload         5
223: invokestatic  #15
226: aload         6
228: invokestatic  #15
231: aload         7
233: invokestatic  #15
236: aload         8
238: invokestatic  #15
241: aload         9
243: invokestatic  #15
246: aload         10
248: invokestatic  #15
251: new           #16
254: dup
255: invokespecial #17
258: ldc           #18
260: invokevirtual #19
263: iload         11
265: invokevirtual #20
268: ldc           #21
270: invokevirtual #19
273: iconst_0
274: invokevirtual #20
277: ldc           #18
279: invokevirtual #19
282: invokevirtual #22
285: iload         11
287: ifne          294
290: iconst_1
291: goto          295
294: iconst_0
295: invokestatic  #23
298: aload         12
300: invokestatic  #15
303: aload         13
305: invokestatic  #15
308: aload         14
310: invokestatic  #15
313: aload         15
315: invokestatic  #15
318: aload         16
320: invokestatic  #15
323: new           #16
326: dup
327: invokespecial #17
330: ldc           #18
332: invokevirtual #19
335: aload         17
337: invokevirtual #19
340: ldc           #78
342: invokevirtual #19
345: invokevirtual #22
348: aload         17
350: ldc           #10
352: invokestatic  #68
355: new           #16
358: dup
359: invokespecial #17
362: ldc           #18
364: invokevirtual #19
367: aload         18
369: invokevirtual #19
372: ldc           #67
374: invokevirtual #19
377: invokevirtual #22
380: aload         18
382: ldc           #25
384: invokestatic  #68
387: aload         19
389: invokestatic  #79
392: aload         20
394: invokestatic  #15
397: return
Exception table:
from    to  target type
194   208   211   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test014
Start line: 477
End line: 512
Method source code: 
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.jsoup.safety.Whitelist whitelist0 = new org.jsoup.safety.Whitelist();
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str11 = org.jsoup.Jsoup.clean(":lt(32)", whitelist10);
        org.jsoup.safety.Whitelist whitelist15 = whitelist10.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray22 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist23 = whitelist10.addTags(strArray22);
        org.jsoup.safety.Whitelist whitelist24 = whitelist6.addProtocols(":matchesOwn(null", "hi!", strArray22);
        java.lang.String[] strArray33 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean34 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray33);
        org.jsoup.safety.Whitelist whitelist35 = whitelist24.addProtocols("\n<!--hi!-->", "#document", strArray33);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray33);
        boolean boolean37 = org.jsoup.helper.StringUtil.in("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", strArray33);
        org.jsoup.safety.Whitelist whitelist38 = whitelist0.addTags(strArray33);
        org.jsoup.safety.Whitelist whitelist42 = whitelist38.addEnforcedAttribute(".\n<!---->", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "[null]");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + ":lt(32)" + "'", str11, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #142
19: aastore
20: invokevirtual #7
23: pop
24: new           #143
27: dup
28: invokespecial #144
31: astore_1
32: invokestatic  #8
35: astore_2
36: aload_2
37: iconst_1
38: invokevirtual #9
41: astore_3
42: aload_3
43: iconst_0
44: invokevirtual #9
47: astore        4
49: invokestatic  #118
52: astore        5
54: ldc           #43
56: aload         5
58: invokestatic  #81
61: astore        6
63: aload         5
65: ldc           #43
67: ldc           #12
69: ldc           #32
71: invokevirtual #11
74: astore        7
76: bipush        6
78: anewarray     #119
81: dup
82: iconst_0
83: ldc           #109
85: aastore
86: dup
87: iconst_1
88: ldc           #10
90: aastore
91: dup
92: iconst_2
93: ldc           #13
95: aastore
96: dup
97: iconst_3
98: ldc           #50
100: aastore
101: dup
102: iconst_4
103: ldc           #12
105: aastore
106: dup
107: iconst_5
108: ldc           #120
110: aastore
111: astore        8
113: aload         5
115: aload         8
117: invokevirtual #121
120: astore        9
122: aload         4
124: ldc           #38
126: ldc           #12
128: aload         8
130: invokevirtual #122
133: astore        10
135: iconst_5
136: anewarray     #119
139: dup
140: iconst_0
141: ldc           #13
143: aastore
144: dup
145: iconst_1
146: ldc           #32
148: aastore
149: dup
150: iconst_2
151: ldc           #10
153: aastore
154: dup
155: iconst_3
156: ldc           #43
158: aastore
159: dup
160: iconst_4
161: ldc           #58
163: aastore
164: astore        11
166: ldc           #10
168: aload         11
170: invokestatic  #123
173: istore        12
175: aload         10
177: ldc           #84
179: ldc           #13
181: aload         11
183: invokevirtual #122
186: astore        13
188: aload         11
190: checkcast     #124
193: invokestatic  #125
196: ldc           #136
198: aload         11
200: invokestatic  #123
203: istore        14
205: aload_1
206: aload         11
208: invokevirtual #121
211: astore        15
213: aload         15
215: ldc           #145
217: ldc           #109
219: ldc           #146
221: invokevirtual #11
224: astore        16
226: aload_2
227: invokestatic  #15
230: aload_3
231: invokestatic  #15
234: aload         4
236: invokestatic  #15
239: aload         5
241: invokestatic  #15
244: new           #16
247: dup
248: invokespecial #17
251: ldc           #18
253: invokevirtual #19
256: aload         6
258: invokevirtual #19
261: ldc           #128
263: invokevirtual #19
266: invokevirtual #22
269: aload         6
271: ldc           #43
273: invokestatic  #68
276: aload         7
278: invokestatic  #15
281: aload         8
283: invokestatic  #15
286: aload         9
288: invokestatic  #15
291: aload         10
293: invokestatic  #15
296: aload         11
298: invokestatic  #15
301: new           #16
304: dup
305: invokespecial #17
308: ldc           #18
310: invokevirtual #19
313: iload         12
315: invokevirtual #20
318: ldc           #21
320: invokevirtual #19
323: iconst_1
324: invokevirtual #20
327: ldc           #18
329: invokevirtual #19
332: invokevirtual #22
335: iload         12
337: iconst_1
338: if_icmpne     345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #23
349: aload         13
351: invokestatic  #15
354: new           #16
357: dup
358: invokespecial #17
361: ldc           #18
363: invokevirtual #19
366: iload         14
368: invokevirtual #20
371: ldc           #21
373: invokevirtual #19
376: iconst_0
377: invokevirtual #20
380: ldc           #18
382: invokevirtual #19
385: invokevirtual #22
388: iload         14
390: ifne          397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #23
401: aload         15
403: invokestatic  #15
406: aload         16
408: invokestatic  #15
411: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test015
Start line: 515
End line: 571
Method source code: 
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan23 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document26 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str27 = document26.ownText();
        org.jsoup.nodes.Node node30 = document26.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element38 = document34.tagName("hi!");
        org.jsoup.nodes.Element element40 = document34.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = document34.outputSettings();
        org.jsoup.select.Elements elements43 = document34.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element45 = document34.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element47 = document34.createElement(" hi!");
        org.jsoup.select.Elements elements49 = document34.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean50 = indexLessThan23.matches((org.jsoup.nodes.Element) document26, (org.jsoup.nodes.Element) document34);
        org.jsoup.nodes.Document document51 = cleaner3.clean(document34);
        boolean boolean53 = document34.hasAttr("");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertNotNull(elements43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(elements49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #147
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: new           #42
46: dup
47: ldc           #43
49: ldc           #32
51: invokespecial #44
54: astore        4
56: ldc           #12
58: invokestatic  #45
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         4
110: aload         5
112: aload         6
114: invokevirtual #46
117: istore        11
119: aload_3
120: aload         6
122: invokevirtual #47
125: astore        12
127: new           #48
130: dup
131: iconst_m1
132: invokespecial #49
135: astore        13
137: ldc           #50
139: ldc           #51
141: invokestatic  #52
144: astore        14
146: aload         14
148: invokevirtual #53
151: astore        15
153: aload         14
155: ldc           #54
157: ldc           #55
159: invokevirtual #56
162: astore        16
164: ldc           #25
166: ldc           #12
168: invokestatic  #26
171: astore        17
173: ldc           #12
175: aload         17
177: ldc           #12
179: invokestatic  #27
182: astore        18
184: aload         17
186: ldc           #12
188: invokevirtual #28
191: astore        19
193: aload         17
195: ldc           #25
197: invokevirtual #29
200: astore        20
202: aload         17
204: invokevirtual #30
207: astore        21
209: aload         17
211: ldc           #12
213: invokevirtual #57
216: astore        22
218: aload         17
220: ldc           #58
222: invokevirtual #59
225: astore        23
227: aload         17
229: ldc           #60
231: invokevirtual #61
234: astore        24
236: aload         17
238: ldc           #38
240: invokevirtual #62
243: astore        25
245: aload         13
247: aload         14
249: aload         17
251: invokevirtual #63
254: istore        26
256: aload_3
257: aload         17
259: invokevirtual #47
262: astore        27
264: aload         17
266: ldc           #25
268: invokevirtual #148
271: istore        28
273: aload_1
274: invokestatic  #15
277: aload_2
278: invokestatic  #15
281: aload         5
283: invokestatic  #15
286: aload         6
288: invokestatic  #15
291: aload         7
293: invokestatic  #15
296: aload         8
298: invokestatic  #15
301: aload         9
303: invokestatic  #15
306: aload         10
308: invokestatic  #15
311: new           #16
314: dup
315: invokespecial #17
318: ldc           #18
320: invokevirtual #19
323: iload         11
325: invokevirtual #20
328: ldc           #21
330: invokevirtual #19
333: iconst_0
334: invokevirtual #20
337: ldc           #18
339: invokevirtual #19
342: invokevirtual #22
345: iload         11
347: ifne          354
350: iconst_1
351: goto          355
354: iconst_0
355: invokestatic  #23
358: aload         12
360: invokestatic  #15
363: aload         14
365: invokestatic  #15
368: new           #16
371: dup
372: invokespecial #17
375: ldc           #18
377: invokevirtual #19
380: aload         15
382: invokevirtual #19
385: ldc           #67
387: invokevirtual #19
390: invokevirtual #22
393: aload         15
395: ldc           #25
397: invokestatic  #68
400: aload         16
402: invokestatic  #15
405: aload         17
407: invokestatic  #15
410: aload         18
412: invokestatic  #15
415: aload         19
417: invokestatic  #15
420: aload         20
422: invokestatic  #15
425: aload         21
427: invokestatic  #15
430: aload         22
432: invokestatic  #15
435: aload         23
437: invokestatic  #15
440: aload         24
442: invokestatic  #15
445: aload         25
447: invokestatic  #15
450: new           #16
453: dup
454: invokespecial #17
457: ldc           #18
459: invokevirtual #19
462: iload         26
464: invokevirtual #20
467: ldc           #21
469: invokevirtual #19
472: iconst_0
473: invokevirtual #20
476: ldc           #18
478: invokevirtual #19
481: invokevirtual #22
484: iload         26
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #23
497: aload         27
499: invokestatic  #15
502: new           #16
505: dup
506: invokespecial #17
509: ldc           #18
511: invokevirtual #19
514: iload         28
516: invokevirtual #20
519: ldc           #21
521: invokevirtual #19
524: iconst_0
525: invokevirtual #20
528: ldc           #18
530: invokevirtual #19
533: invokevirtual #22
536: iload         28
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #23
549: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test016
Start line: 574
End line: 583
Method source code: 
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes4 = whitelist2.getEnforcedAttributes("#text");
        java.lang.String str5 = org.jsoup.Jsoup.clean("<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", "<html>\n <head></head>\n <body>   \n </body>\n</html>", whitelist2);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(attributes4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[^hi!]" + "'", str5, "[^hi!]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #149
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #118
27: astore_1
28: aload_1
29: ldc           #51
31: invokevirtual #150
34: astore_2
35: ldc           #55
37: ldc           #151
39: aload_1
40: invokestatic  #94
43: astore_3
44: aload_1
45: invokestatic  #15
48: aload_2
49: invokestatic  #15
52: new           #16
55: dup
56: invokespecial #17
59: ldc           #18
61: invokevirtual #19
64: aload_3
65: invokevirtual #19
68: ldc           #112
70: invokevirtual #19
73: invokevirtual #22
76: aload_3
77: ldc           #50
79: invokestatic  #68
82: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test017
Start line: 586
End line: 664
Method source code: 
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan23 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document26 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str27 = document26.ownText();
        org.jsoup.nodes.Node node30 = document26.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element38 = document34.tagName("hi!");
        org.jsoup.nodes.Element element40 = document34.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = document34.outputSettings();
        org.jsoup.select.Elements elements43 = document34.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element45 = document34.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element47 = document34.createElement(" hi!");
        org.jsoup.select.Elements elements49 = document34.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean50 = indexLessThan23.matches((org.jsoup.nodes.Element) document26, (org.jsoup.nodes.Element) document34);
        org.jsoup.nodes.Document document51 = cleaner3.clean(document34);
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList57 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document55, "hi!");
        org.jsoup.nodes.Element element58 = document55.empty();
        org.jsoup.nodes.Element element60 = document55.removeClass("hi!");
        org.jsoup.select.Elements elements63 = document55.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        org.jsoup.nodes.Element element64 = document55.empty();
        org.jsoup.nodes.Document document65 = document55.clone();
        org.jsoup.nodes.Document document66 = cleaner3.clean(document65);
        org.jsoup.nodes.Document document67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = cleaner3.isValid(document67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertNotNull(elements43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(elements49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertNotNull(elements63);
        org.junit.Assert.assertNotNull(element64);
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertNotNull(document66);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #152
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: new           #42
46: dup
47: ldc           #43
49: ldc           #32
51: invokespecial #44
54: astore        4
56: ldc           #12
58: invokestatic  #45
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         4
110: aload         5
112: aload         6
114: invokevirtual #46
117: istore        11
119: aload_3
120: aload         6
122: invokevirtual #47
125: astore        12
127: new           #48
130: dup
131: iconst_m1
132: invokespecial #49
135: astore        13
137: ldc           #50
139: ldc           #51
141: invokestatic  #52
144: astore        14
146: aload         14
148: invokevirtual #53
151: astore        15
153: aload         14
155: ldc           #54
157: ldc           #55
159: invokevirtual #56
162: astore        16
164: ldc           #25
166: ldc           #12
168: invokestatic  #26
171: astore        17
173: ldc           #12
175: aload         17
177: ldc           #12
179: invokestatic  #27
182: astore        18
184: aload         17
186: ldc           #12
188: invokevirtual #28
191: astore        19
193: aload         17
195: ldc           #25
197: invokevirtual #29
200: astore        20
202: aload         17
204: invokevirtual #30
207: astore        21
209: aload         17
211: ldc           #12
213: invokevirtual #57
216: astore        22
218: aload         17
220: ldc           #58
222: invokevirtual #59
225: astore        23
227: aload         17
229: ldc           #60
231: invokevirtual #61
234: astore        24
236: aload         17
238: ldc           #38
240: invokevirtual #62
243: astore        25
245: aload         13
247: aload         14
249: aload         17
251: invokevirtual #63
254: istore        26
256: aload_3
257: aload         17
259: invokevirtual #47
262: astore        27
264: ldc           #25
266: ldc           #12
268: invokestatic  #26
271: astore        28
273: ldc           #12
275: aload         28
277: ldc           #12
279: invokestatic  #27
282: astore        29
284: aload         28
286: invokevirtual #103
289: astore        30
291: aload         28
293: ldc           #12
295: invokevirtual #59
298: astore        31
300: aload         28
302: ldc           #10
304: ldc           #58
306: invokevirtual #153
309: astore        32
311: aload         28
313: invokevirtual #103
316: astore        33
318: aload         28
320: invokevirtual #154
323: astore        34
325: aload_3
326: aload         34
328: invokevirtual #47
331: astore        35
333: aconst_null
334: astore        36
336: aload_3
337: aload         36
339: invokevirtual #155
342: istore        37
344: ldc           #34
346: invokestatic  #35
349: goto          354
352: astore        37
354: aload_1
355: invokestatic  #15
358: aload_2
359: invokestatic  #15
362: aload         5
364: invokestatic  #15
367: aload         6
369: invokestatic  #15
372: aload         7
374: invokestatic  #15
377: aload         8
379: invokestatic  #15
382: aload         9
384: invokestatic  #15
387: aload         10
389: invokestatic  #15
392: new           #16
395: dup
396: invokespecial #17
399: ldc           #18
401: invokevirtual #19
404: iload         11
406: invokevirtual #20
409: ldc           #21
411: invokevirtual #19
414: iconst_0
415: invokevirtual #20
418: ldc           #18
420: invokevirtual #19
423: invokevirtual #22
426: iload         11
428: ifne          435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #23
439: aload         12
441: invokestatic  #15
444: aload         14
446: invokestatic  #15
449: new           #16
452: dup
453: invokespecial #17
456: ldc           #18
458: invokevirtual #19
461: aload         15
463: invokevirtual #19
466: ldc           #67
468: invokevirtual #19
471: invokevirtual #22
474: aload         15
476: ldc           #25
478: invokestatic  #68
481: aload         16
483: invokestatic  #15
486: aload         17
488: invokestatic  #15
491: aload         18
493: invokestatic  #15
496: aload         19
498: invokestatic  #15
501: aload         20
503: invokestatic  #15
506: aload         21
508: invokestatic  #15
511: aload         22
513: invokestatic  #15
516: aload         23
518: invokestatic  #15
521: aload         24
523: invokestatic  #15
526: aload         25
528: invokestatic  #15
531: new           #16
534: dup
535: invokespecial #17
538: ldc           #18
540: invokevirtual #19
543: iload         26
545: invokevirtual #20
548: ldc           #21
550: invokevirtual #19
553: iconst_0
554: invokevirtual #20
557: ldc           #18
559: invokevirtual #19
562: invokevirtual #22
565: iload         26
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #23
578: aload         27
580: invokestatic  #15
583: aload         28
585: invokestatic  #15
588: aload         29
590: invokestatic  #15
593: aload         30
595: invokestatic  #15
598: aload         31
600: invokestatic  #15
603: aload         32
605: invokestatic  #15
608: aload         33
610: invokestatic  #15
613: aload         34
615: invokestatic  #15
618: aload         35
620: invokestatic  #15
623: return
Exception table:
from    to  target type
336   349   352   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test018
Start line: 667
End line: 722
Method source code: 
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("#text");
        java.lang.String str7 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist4);
        java.lang.String str8 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist4);
        org.jsoup.select.Evaluator.Class class11 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList17 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document15, "hi!");
        org.jsoup.nodes.Element element19 = document15.tagName("hi!");
        org.jsoup.nodes.Element element21 = document15.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = document15.outputSettings();
        org.jsoup.select.Elements elements24 = document15.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element26 = document15.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes27 = document15.attributes();
        org.jsoup.nodes.Element element29 = document15.prepend("[^hi!]");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.tagName("hi!");
        org.jsoup.nodes.Element element39 = document33.append("");
        org.jsoup.nodes.Element element42 = document33.attr("#document", "#document");
        org.jsoup.nodes.Element element43 = document33.body();
        boolean boolean44 = class11.matches((org.jsoup.nodes.Element) document15, (org.jsoup.nodes.Element) document33);
        org.jsoup.nodes.Attribute attribute47 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean48 = whitelist4.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document15, attribute47);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Element element50 = document15.before("<html> <head></head> <body> </body> </html>");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[    ^=hi!]" + "'", str8, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertNotNull(elements24);
        org.junit.Assert.assertNull(element26);
        org.junit.Assert.assertNotNull(attributes27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(attribute47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #156
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #118
27: astore_1
28: aload_1
29: ldc           #51
31: invokevirtual #150
34: astore_2
35: ldc           #25
37: ldc           #157
39: aload_1
40: invokestatic  #94
43: astore_3
44: ldc           #158
46: ldc           #159
48: aload_1
49: invokestatic  #94
52: astore        4
54: new           #160
57: dup
58: ldc           #10
60: invokespecial #161
63: astore        5
65: ldc           #25
67: ldc           #12
69: invokestatic  #26
72: astore        6
74: ldc           #12
76: aload         6
78: ldc           #12
80: invokestatic  #27
83: astore        7
85: aload         6
87: ldc           #12
89: invokevirtual #28
92: astore        8
94: aload         6
96: ldc           #25
98: invokevirtual #29
101: astore        9
103: aload         6
105: invokevirtual #30
108: astore        10
110: aload         6
112: iconst_m1
113: invokevirtual #162
116: astore        11
118: aload         6
120: ldc           #10
122: invokevirtual #163
125: astore        12
127: aload         6
129: invokevirtual #164
132: astore        13
134: aload         6
136: ldc           #50
138: invokevirtual #165
141: astore        14
143: ldc           #25
145: ldc           #12
147: invokestatic  #26
150: astore        15
152: ldc           #12
154: aload         15
156: ldc           #12
158: invokestatic  #27
161: astore        16
163: aload         15
165: ldc           #12
167: invokevirtual #28
170: astore        17
172: aload         15
174: ldc           #25
176: invokevirtual #29
179: astore        18
181: aload         15
183: ldc           #13
185: ldc           #13
187: invokevirtual #56
190: astore        19
192: aload         15
194: invokevirtual #166
197: astore        20
199: aload         5
201: aload         6
203: aload         15
205: invokevirtual #167
208: istore        21
210: ldc           #114
212: ldc           #25
214: invokestatic  #168
217: astore        22
219: aload_1
220: ldc           #110
222: aload         6
224: aload         22
226: invokevirtual #169
229: istore        23
231: aload         6
233: ldc           #170
235: invokevirtual #171
238: astore        24
240: ldc           #34
242: invokestatic  #35
245: goto          250
248: astore        24
250: aload_1
251: invokestatic  #15
254: aload_2
255: invokestatic  #15
258: new           #16
261: dup
262: invokespecial #17
265: ldc           #18
267: invokevirtual #19
270: aload_3
271: invokevirtual #19
274: ldc           #67
276: invokevirtual #19
279: invokevirtual #22
282: aload_3
283: ldc           #25
285: invokestatic  #68
288: new           #16
291: dup
292: invokespecial #17
295: ldc           #18
297: invokevirtual #19
300: aload         4
302: invokevirtual #19
305: ldc           #172
307: invokevirtual #19
310: invokevirtual #22
313: aload         4
315: ldc           #173
317: invokestatic  #68
320: aload         6
322: invokestatic  #15
325: aload         7
327: invokestatic  #15
330: aload         8
332: invokestatic  #15
335: aload         9
337: invokestatic  #15
340: aload         10
342: invokestatic  #15
345: aload         11
347: invokestatic  #15
350: aload         12
352: invokestatic  #79
355: aload         13
357: invokestatic  #15
360: aload         14
362: invokestatic  #15
365: aload         15
367: invokestatic  #15
370: aload         16
372: invokestatic  #15
375: aload         17
377: invokestatic  #15
380: aload         18
382: invokestatic  #15
385: aload         19
387: invokestatic  #15
390: aload         20
392: invokestatic  #15
395: new           #16
398: dup
399: invokespecial #17
402: ldc           #18
404: invokevirtual #19
407: iload         21
409: invokevirtual #20
412: ldc           #21
414: invokevirtual #19
417: iconst_0
418: invokevirtual #20
421: ldc           #18
423: invokevirtual #19
426: invokevirtual #22
429: iload         21
431: ifne          438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #23
442: aload         22
444: invokestatic  #15
447: new           #16
450: dup
451: invokespecial #17
454: ldc           #18
456: invokevirtual #19
459: iload         23
461: invokevirtual #20
464: ldc           #21
466: invokevirtual #19
469: iconst_0
470: invokevirtual #20
473: ldc           #18
475: invokevirtual #19
478: invokevirtual #22
481: iload         23
483: ifne          490
486: iconst_1
487: goto          491
490: iconst_0
491: invokestatic  #23
494: return
Exception table:
from    to  target type
231   245   248   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test019
Start line: 725
End line: 820
Method source code: 
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan23 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document26 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str27 = document26.ownText();
        org.jsoup.nodes.Node node30 = document26.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element38 = document34.tagName("hi!");
        org.jsoup.nodes.Element element40 = document34.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = document34.outputSettings();
        org.jsoup.select.Elements elements43 = document34.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element45 = document34.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element47 = document34.createElement(" hi!");
        org.jsoup.select.Elements elements49 = document34.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean50 = indexLessThan23.matches((org.jsoup.nodes.Element) document26, (org.jsoup.nodes.Element) document34);
        org.jsoup.nodes.Document document51 = cleaner3.clean(document34);
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList57 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document55, "hi!");
        org.jsoup.nodes.Element element59 = document55.text("");
        org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList65 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document63, "hi!");
        org.jsoup.nodes.Element element67 = document63.tagName("hi!");
        org.jsoup.nodes.Element element69 = document63.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings70 = document63.outputSettings();
        org.jsoup.nodes.Document document71 = document55.outputSettings(outputSettings70);
        java.lang.String str73 = document55.attr("\nhi!");
        org.jsoup.nodes.Element element74 = document55.body();
        boolean boolean75 = cleaner3.isValid(document55);
        org.jsoup.nodes.Document document79 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList81 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document79, "hi!");
        org.jsoup.nodes.Element element82 = document79.empty();
        org.jsoup.nodes.Element element84 = document79.removeClass("hi!");
        org.jsoup.nodes.Element element86 = element84.toggleClass("");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node87 = document55.after((org.jsoup.nodes.Node) element86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertNotNull(elements43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(elements49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(document63);
        org.junit.Assert.assertNotNull(nodeList65);
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(outputSettings70);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(document79);
        org.junit.Assert.assertNotNull(nodeList81);
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertNotNull(element86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #174
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: new           #42
46: dup
47: ldc           #43
49: ldc           #32
51: invokespecial #44
54: astore        4
56: ldc           #12
58: invokestatic  #45
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         4
110: aload         5
112: aload         6
114: invokevirtual #46
117: istore        11
119: aload_3
120: aload         6
122: invokevirtual #47
125: astore        12
127: new           #48
130: dup
131: iconst_m1
132: invokespecial #49
135: astore        13
137: ldc           #50
139: ldc           #51
141: invokestatic  #52
144: astore        14
146: aload         14
148: invokevirtual #53
151: astore        15
153: aload         14
155: ldc           #54
157: ldc           #55
159: invokevirtual #56
162: astore        16
164: ldc           #25
166: ldc           #12
168: invokestatic  #26
171: astore        17
173: ldc           #12
175: aload         17
177: ldc           #12
179: invokestatic  #27
182: astore        18
184: aload         17
186: ldc           #12
188: invokevirtual #28
191: astore        19
193: aload         17
195: ldc           #25
197: invokevirtual #29
200: astore        20
202: aload         17
204: invokevirtual #30
207: astore        21
209: aload         17
211: ldc           #12
213: invokevirtual #57
216: astore        22
218: aload         17
220: ldc           #58
222: invokevirtual #59
225: astore        23
227: aload         17
229: ldc           #60
231: invokevirtual #61
234: astore        24
236: aload         17
238: ldc           #38
240: invokevirtual #62
243: astore        25
245: aload         13
247: aload         14
249: aload         17
251: invokevirtual #63
254: istore        26
256: aload_3
257: aload         17
259: invokevirtual #47
262: astore        27
264: ldc           #25
266: ldc           #12
268: invokestatic  #26
271: astore        28
273: ldc           #12
275: aload         28
277: ldc           #12
279: invokestatic  #27
282: astore        29
284: aload         28
286: ldc           #25
288: invokevirtual #64
291: astore        30
293: ldc           #25
295: ldc           #12
297: invokestatic  #26
300: astore        31
302: ldc           #12
304: aload         31
306: ldc           #12
308: invokestatic  #27
311: astore        32
313: aload         31
315: ldc           #12
317: invokevirtual #28
320: astore        33
322: aload         31
324: ldc           #25
326: invokevirtual #29
329: astore        34
331: aload         31
333: invokevirtual #30
336: astore        35
338: aload         28
340: aload         35
342: invokevirtual #175
345: astore        36
347: aload         28
349: ldc           #98
351: invokevirtual #176
354: astore        37
356: aload         28
358: invokevirtual #166
361: astore        38
363: aload_3
364: aload         28
366: invokevirtual #155
369: istore        39
371: ldc           #25
373: ldc           #12
375: invokestatic  #26
378: astore        40
380: ldc           #12
382: aload         40
384: ldc           #12
386: invokestatic  #27
389: astore        41
391: aload         40
393: invokevirtual #103
396: astore        42
398: aload         40
400: ldc           #12
402: invokevirtual #59
405: astore        43
407: aload         43
409: ldc           #25
411: invokevirtual #177
414: astore        44
416: aload         28
418: aload         44
420: invokevirtual #178
423: astore        45
425: ldc           #34
427: invokestatic  #35
430: goto          435
433: astore        45
435: aload_1
436: invokestatic  #15
439: aload_2
440: invokestatic  #15
443: aload         5
445: invokestatic  #15
448: aload         6
450: invokestatic  #15
453: aload         7
455: invokestatic  #15
458: aload         8
460: invokestatic  #15
463: aload         9
465: invokestatic  #15
468: aload         10
470: invokestatic  #15
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: iload         11
487: invokevirtual #20
490: ldc           #21
492: invokevirtual #19
495: iconst_0
496: invokevirtual #20
499: ldc           #18
501: invokevirtual #19
504: invokevirtual #22
507: iload         11
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #23
520: aload         12
522: invokestatic  #15
525: aload         14
527: invokestatic  #15
530: new           #16
533: dup
534: invokespecial #17
537: ldc           #18
539: invokevirtual #19
542: aload         15
544: invokevirtual #19
547: ldc           #67
549: invokevirtual #19
552: invokevirtual #22
555: aload         15
557: ldc           #25
559: invokestatic  #68
562: aload         16
564: invokestatic  #15
567: aload         17
569: invokestatic  #15
572: aload         18
574: invokestatic  #15
577: aload         19
579: invokestatic  #15
582: aload         20
584: invokestatic  #15
587: aload         21
589: invokestatic  #15
592: aload         22
594: invokestatic  #15
597: aload         23
599: invokestatic  #15
602: aload         24
604: invokestatic  #15
607: aload         25
609: invokestatic  #15
612: new           #16
615: dup
616: invokespecial #17
619: ldc           #18
621: invokevirtual #19
624: iload         26
626: invokevirtual #20
629: ldc           #21
631: invokevirtual #19
634: iconst_0
635: invokevirtual #20
638: ldc           #18
640: invokevirtual #19
643: invokevirtual #22
646: iload         26
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #23
659: aload         27
661: invokestatic  #15
664: aload         28
666: invokestatic  #15
669: aload         29
671: invokestatic  #15
674: aload         30
676: invokestatic  #15
679: aload         31
681: invokestatic  #15
684: aload         32
686: invokestatic  #15
689: aload         33
691: invokestatic  #15
694: aload         34
696: invokestatic  #15
699: aload         35
701: invokestatic  #15
704: aload         36
706: invokestatic  #15
709: new           #16
712: dup
713: invokespecial #17
716: ldc           #18
718: invokevirtual #19
721: aload         37
723: invokevirtual #19
726: ldc           #67
728: invokevirtual #19
731: invokevirtual #22
734: aload         37
736: ldc           #25
738: invokestatic  #68
741: aload         38
743: invokestatic  #15
746: new           #16
749: dup
750: invokespecial #17
753: ldc           #18
755: invokevirtual #19
758: iload         39
760: invokevirtual #20
763: ldc           #21
765: invokevirtual #19
768: iconst_1
769: invokevirtual #20
772: ldc           #18
774: invokevirtual #19
777: invokevirtual #22
780: iload         39
782: iconst_1
783: if_icmpne     790
786: iconst_1
787: goto          791
790: iconst_0
791: invokestatic  #23
794: aload         40
796: invokestatic  #15
799: aload         41
801: invokestatic  #15
804: aload         42
806: invokestatic  #15
809: aload         43
811: invokestatic  #15
814: aload         44
816: invokestatic  #15
819: return
Exception table:
from    to  target type
416   430   433   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test020
Start line: 823
End line: 872
Method source code: 
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("#text");
        java.lang.String str7 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist4);
        java.lang.String str8 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist4);
        org.jsoup.select.Evaluator.Class class11 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList17 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document15, "hi!");
        org.jsoup.nodes.Element element19 = document15.tagName("hi!");
        org.jsoup.nodes.Element element21 = document15.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = document15.outputSettings();
        org.jsoup.select.Elements elements24 = document15.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element26 = document15.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes27 = document15.attributes();
        org.jsoup.nodes.Element element29 = document15.prepend("[^hi!]");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.tagName("hi!");
        org.jsoup.nodes.Element element39 = document33.append("");
        org.jsoup.nodes.Element element42 = document33.attr("#document", "#document");
        org.jsoup.nodes.Element element43 = document33.body();
        boolean boolean44 = class11.matches((org.jsoup.nodes.Element) document15, (org.jsoup.nodes.Element) document33);
        org.jsoup.nodes.Attribute attribute47 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean48 = whitelist4.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document15, attribute47);
        org.jsoup.helper.Validate.notNull((java.lang.Object) ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", " ");
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[    ^=hi!]" + "'", str8, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertNotNull(elements24);
        org.junit.Assert.assertNull(element26);
        org.junit.Assert.assertNotNull(attributes27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(attribute47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #118
27: astore_1
28: aload_1
29: ldc           #51
31: invokevirtual #150
34: astore_2
35: ldc           #25
37: ldc           #157
39: aload_1
40: invokestatic  #94
43: astore_3
44: ldc           #158
46: ldc           #159
48: aload_1
49: invokestatic  #94
52: astore        4
54: new           #160
57: dup
58: ldc           #10
60: invokespecial #161
63: astore        5
65: ldc           #25
67: ldc           #12
69: invokestatic  #26
72: astore        6
74: ldc           #12
76: aload         6
78: ldc           #12
80: invokestatic  #27
83: astore        7
85: aload         6
87: ldc           #12
89: invokevirtual #28
92: astore        8
94: aload         6
96: ldc           #25
98: invokevirtual #29
101: astore        9
103: aload         6
105: invokevirtual #30
108: astore        10
110: aload         6
112: iconst_m1
113: invokevirtual #162
116: astore        11
118: aload         6
120: ldc           #10
122: invokevirtual #163
125: astore        12
127: aload         6
129: invokevirtual #164
132: astore        13
134: aload         6
136: ldc           #50
138: invokevirtual #165
141: astore        14
143: ldc           #25
145: ldc           #12
147: invokestatic  #26
150: astore        15
152: ldc           #12
154: aload         15
156: ldc           #12
158: invokestatic  #27
161: astore        16
163: aload         15
165: ldc           #12
167: invokevirtual #28
170: astore        17
172: aload         15
174: ldc           #25
176: invokevirtual #29
179: astore        18
181: aload         15
183: ldc           #13
185: ldc           #13
187: invokevirtual #56
190: astore        19
192: aload         15
194: invokevirtual #166
197: astore        20
199: aload         5
201: aload         6
203: aload         15
205: invokevirtual #167
208: istore        21
210: ldc           #114
212: ldc           #25
214: invokestatic  #168
217: astore        22
219: aload_1
220: ldc           #110
222: aload         6
224: aload         22
226: invokevirtual #169
229: istore        23
231: ldc           #110
233: ldc           #180
235: invokestatic  #181
238: aload_1
239: invokestatic  #15
242: aload_2
243: invokestatic  #15
246: new           #16
249: dup
250: invokespecial #17
253: ldc           #18
255: invokevirtual #19
258: aload_3
259: invokevirtual #19
262: ldc           #67
264: invokevirtual #19
267: invokevirtual #22
270: aload_3
271: ldc           #25
273: invokestatic  #68
276: new           #16
279: dup
280: invokespecial #17
283: ldc           #18
285: invokevirtual #19
288: aload         4
290: invokevirtual #19
293: ldc           #172
295: invokevirtual #19
298: invokevirtual #22
301: aload         4
303: ldc           #173
305: invokestatic  #68
308: aload         6
310: invokestatic  #15
313: aload         7
315: invokestatic  #15
318: aload         8
320: invokestatic  #15
323: aload         9
325: invokestatic  #15
328: aload         10
330: invokestatic  #15
333: aload         11
335: invokestatic  #15
338: aload         12
340: invokestatic  #79
343: aload         13
345: invokestatic  #15
348: aload         14
350: invokestatic  #15
353: aload         15
355: invokestatic  #15
358: aload         16
360: invokestatic  #15
363: aload         17
365: invokestatic  #15
368: aload         18
370: invokestatic  #15
373: aload         19
375: invokestatic  #15
378: aload         20
380: invokestatic  #15
383: new           #16
386: dup
387: invokespecial #17
390: ldc           #18
392: invokevirtual #19
395: iload         21
397: invokevirtual #20
400: ldc           #21
402: invokevirtual #19
405: iconst_0
406: invokevirtual #20
409: ldc           #18
411: invokevirtual #19
414: invokevirtual #22
417: iload         21
419: ifne          426
422: iconst_1
423: goto          427
426: iconst_0
427: invokestatic  #23
430: aload         22
432: invokestatic  #15
435: new           #16
438: dup
439: invokespecial #17
442: ldc           #18
444: invokevirtual #19
447: iload         23
449: invokevirtual #20
452: ldc           #21
454: invokevirtual #19
457: iconst_0
458: invokevirtual #20
461: ldc           #18
463: invokevirtual #19
466: invokevirtual #22
469: iload         23
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #23
482: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test021
Start line: 875
End line: 949
Method source code: 
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner5 = new org.jsoup.safety.Cleaner(whitelist4);
        org.jsoup.safety.Whitelist whitelist8 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)", whitelist8);
        org.jsoup.safety.Whitelist whitelist13 = whitelist8.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray20 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist21 = whitelist8.addTags(strArray20);
        org.jsoup.safety.Whitelist whitelist22 = whitelist4.addAttributes(":gt(100)", strArray20);
        org.jsoup.safety.Whitelist whitelist28 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str29 = org.jsoup.Jsoup.clean(":lt(32)", whitelist28);
        boolean boolean31 = whitelist28.isSafeTag("");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element38 = document35.empty();
        org.jsoup.nodes.Element element40 = document35.removeClass("hi!");
        org.jsoup.nodes.Document document44 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList46 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document44, "hi!");
        org.jsoup.nodes.Element element48 = document44.tagName("hi!");
        org.jsoup.nodes.Element element50 = document44.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document44.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings51.prettyPrint(false);
        org.jsoup.nodes.Document document54 = document35.outputSettings(outputSettings53);
        java.lang.String str55 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist28, outputSettings53);
        org.jsoup.safety.Whitelist whitelist57 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist59 = whitelist57.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist61 = whitelist59.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist65 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str66 = org.jsoup.Jsoup.clean(":lt(32)", whitelist65);
        org.jsoup.safety.Whitelist whitelist70 = whitelist65.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray77 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist78 = whitelist65.addTags(strArray77);
        org.jsoup.safety.Whitelist whitelist79 = whitelist61.addProtocols(":matchesOwn(null", "hi!", strArray77);
        org.jsoup.safety.Whitelist whitelist80 = whitelist28.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray77);
        org.jsoup.safety.Whitelist whitelist81 = whitelist22.addProtocols("<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", "[hi!$=<html> <head></head> <body></body> </html>]", strArray77);
        java.lang.String str82 = org.jsoup.Jsoup.clean("", "[^hi!]", whitelist22);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)" + "'", str9, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + ":lt(32)" + "'", str29, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(document54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[:lt(32)]" + "'", str55, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ":lt(32)" + "'", str66, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(whitelist78);
        org.junit.Assert.assertNotNull(whitelist79);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #182
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: invokestatic  #118
46: astore        4
48: ldc           #43
50: aload         4
52: invokestatic  #81
55: astore        5
57: aload         4
59: ldc           #43
61: ldc           #12
63: ldc           #32
65: invokevirtual #11
68: astore        6
70: bipush        6
72: anewarray     #119
75: dup
76: iconst_0
77: ldc           #109
79: aastore
80: dup
81: iconst_1
82: ldc           #10
84: aastore
85: dup
86: iconst_2
87: ldc           #13
89: aastore
90: dup
91: iconst_3
92: ldc           #50
94: aastore
95: dup
96: iconst_4
97: ldc           #12
99: aastore
100: dup
101: iconst_5
102: ldc           #120
104: aastore
105: astore        7
107: aload         4
109: aload         7
111: invokevirtual #121
114: astore        8
116: aload_2
117: ldc           #92
119: aload         7
121: invokevirtual #127
124: astore        9
126: invokestatic  #118
129: astore        10
131: ldc           #43
133: aload         10
135: invokestatic  #81
138: astore        11
140: aload         10
142: ldc           #25
144: invokevirtual #83
147: istore        12
149: ldc           #25
151: ldc           #12
153: invokestatic  #26
156: astore        13
158: ldc           #12
160: aload         13
162: ldc           #12
164: invokestatic  #27
167: astore        14
169: aload         13
171: invokevirtual #103
174: astore        15
176: aload         13
178: ldc           #12
180: invokevirtual #59
183: astore        16
185: ldc           #25
187: ldc           #12
189: invokestatic  #26
192: astore        17
194: ldc           #12
196: aload         17
198: ldc           #12
200: invokestatic  #27
203: astore        18
205: aload         17
207: ldc           #12
209: invokevirtual #28
212: astore        19
214: aload         17
216: ldc           #25
218: invokevirtual #29
221: astore        20
223: aload         17
225: invokevirtual #30
228: astore        21
230: aload         21
232: iconst_0
233: invokevirtual #31
236: astore        22
238: aload         13
240: aload         22
242: invokevirtual #175
245: astore        23
247: ldc           #58
249: ldc           #126
251: aload         10
253: aload         22
255: invokestatic  #33
258: astore        24
260: invokestatic  #8
263: astore        25
265: aload         25
267: iconst_1
268: invokevirtual #9
271: astore        26
273: aload         26
275: iconst_0
276: invokevirtual #9
279: astore        27
281: invokestatic  #118
284: astore        28
286: ldc           #43
288: aload         28
290: invokestatic  #81
293: astore        29
295: aload         28
297: ldc           #43
299: ldc           #12
301: ldc           #32
303: invokevirtual #11
306: astore        30
308: bipush        6
310: anewarray     #119
313: dup
314: iconst_0
315: ldc           #109
317: aastore
318: dup
319: iconst_1
320: ldc           #10
322: aastore
323: dup
324: iconst_2
325: ldc           #13
327: aastore
328: dup
329: iconst_3
330: ldc           #50
332: aastore
333: dup
334: iconst_4
335: ldc           #12
337: aastore
338: dup
339: iconst_5
340: ldc           #120
342: aastore
343: astore        31
345: aload         28
347: aload         31
349: invokevirtual #121
352: astore        32
354: aload         27
356: ldc           #38
358: ldc           #12
360: aload         31
362: invokevirtual #122
365: astore        33
367: aload         10
369: ldc           #109
371: aload         31
373: invokevirtual #127
376: astore        34
378: aload         9
380: ldc           #55
382: ldc           #183
384: aload         31
386: invokevirtual #122
389: astore        35
391: ldc           #25
393: ldc           #50
395: aload         9
397: invokestatic  #94
400: astore        36
402: aload_1
403: invokestatic  #15
406: aload_2
407: invokestatic  #15
410: aload         4
412: invokestatic  #15
415: new           #16
418: dup
419: invokespecial #17
422: ldc           #18
424: invokevirtual #19
427: aload         5
429: invokevirtual #19
432: ldc           #128
434: invokevirtual #19
437: invokevirtual #22
440: aload         5
442: ldc           #43
444: invokestatic  #68
447: aload         6
449: invokestatic  #15
452: aload         7
454: invokestatic  #15
457: aload         8
459: invokestatic  #15
462: aload         9
464: invokestatic  #15
467: aload         10
469: invokestatic  #15
472: new           #16
475: dup
476: invokespecial #17
479: ldc           #18
481: invokevirtual #19
484: aload         11
486: invokevirtual #19
489: ldc           #128
491: invokevirtual #19
494: invokevirtual #22
497: aload         11
499: ldc           #43
501: invokestatic  #68
504: new           #16
507: dup
508: invokespecial #17
511: ldc           #18
513: invokevirtual #19
516: iload         12
518: invokevirtual #20
521: ldc           #21
523: invokevirtual #19
526: iconst_0
527: invokevirtual #20
530: ldc           #18
532: invokevirtual #19
535: invokevirtual #22
538: iload         12
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #23
551: aload         13
553: invokestatic  #15
556: aload         14
558: invokestatic  #15
561: aload         15
563: invokestatic  #15
566: aload         16
568: invokestatic  #15
571: aload         17
573: invokestatic  #15
576: aload         18
578: invokestatic  #15
581: aload         19
583: invokestatic  #15
586: aload         20
588: invokestatic  #15
591: aload         21
593: invokestatic  #15
596: aload         22
598: invokestatic  #15
601: aload         23
603: invokestatic  #15
606: new           #16
609: dup
610: invokespecial #17
613: ldc           #18
615: invokevirtual #19
618: aload         24
620: invokevirtual #19
623: ldc           #184
625: invokevirtual #19
628: invokevirtual #22
631: aload         24
633: ldc           #58
635: invokestatic  #68
638: aload         25
640: invokestatic  #15
643: aload         26
645: invokestatic  #15
648: aload         27
650: invokestatic  #15
653: aload         28
655: invokestatic  #15
658: new           #16
661: dup
662: invokespecial #17
665: ldc           #18
667: invokevirtual #19
670: aload         29
672: invokevirtual #19
675: ldc           #128
677: invokevirtual #19
680: invokevirtual #22
683: aload         29
685: ldc           #43
687: invokestatic  #68
690: aload         30
692: invokestatic  #15
695: aload         31
697: invokestatic  #15
700: aload         32
702: invokestatic  #15
705: aload         33
707: invokestatic  #15
710: aload         34
712: invokestatic  #15
715: aload         35
717: invokestatic  #15
720: new           #16
723: dup
724: invokespecial #17
727: ldc           #18
729: invokevirtual #19
732: aload         36
734: invokevirtual #19
737: ldc           #67
739: invokevirtual #19
742: invokevirtual #22
745: aload         36
747: ldc           #25
749: invokestatic  #68
752: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test022
Start line: 952
End line: 965
Method source code: 
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        boolean boolean9 = whitelist7.isSafeTag("[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #185
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: ldc           #109
30: ldc           #110
32: aload_1
33: invokestatic  #94
36: astore_2
37: aload_1
38: ldc           #25
40: invokevirtual #83
43: istore_3
44: aload_1
45: iconst_0
46: invokevirtual #9
49: astore        4
51: aload         4
53: ldc           #65
55: invokevirtual #83
58: istore        5
60: aload_1
61: invokestatic  #15
64: new           #16
67: dup
68: invokespecial #17
71: ldc           #18
73: invokevirtual #19
76: aload_2
77: invokevirtual #19
80: ldc           #111
82: invokevirtual #19
85: invokevirtual #22
88: aload_2
89: ldc           #65
91: invokestatic  #68
94: new           #16
97: dup
98: invokespecial #17
101: ldc           #18
103: invokevirtual #19
106: iload_3
107: invokevirtual #20
110: ldc           #21
112: invokevirtual #19
115: iconst_0
116: invokevirtual #20
119: ldc           #18
121: invokevirtual #19
124: invokevirtual #22
127: iload_3
128: ifne          135
131: iconst_1
132: goto          136
135: iconst_0
136: invokestatic  #23
139: aload         4
141: invokestatic  #15
144: new           #16
147: dup
148: invokespecial #17
151: ldc           #18
153: invokevirtual #19
156: iload         5
158: invokevirtual #20
161: ldc           #21
163: invokevirtual #19
166: iconst_0
167: invokevirtual #20
170: ldc           #18
172: invokevirtual #19
175: invokevirtual #22
178: iload         5
180: ifne          187
183: iconst_1
184: goto          188
187: iconst_0
188: invokestatic  #23
191: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test023
Start line: 968
End line: 979
Method source code: 
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("*", "#doctype", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: ldc           #126
28: ldc           #187
30: aload_1
31: invokestatic  #94
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
26    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test024
Start line: 982
End line: 1010
Method source code: 
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings13 = document6.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = outputSettings13.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings17 = outputSettings13.indentAmount(100);
        org.jsoup.nodes.Entities.EscapeMode escapeMode18 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = outputSettings17.escapeMode(escapeMode18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", whitelist2, outputSettings19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(outputSettings13);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertNotNull(outputSettings17);
        org.junit.Assert.assertNotNull(outputSettings19);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #188
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: ldc           #25
28: ldc           #12
30: invokestatic  #26
33: astore_2
34: ldc           #12
36: aload_2
37: ldc           #12
39: invokestatic  #27
42: astore_3
43: aload_2
44: ldc           #12
46: invokevirtual #28
49: astore        4
51: aload_2
52: ldc           #25
54: invokevirtual #29
57: astore        5
59: aload_2
60: invokevirtual #30
63: astore        6
65: aload         6
67: iconst_0
68: invokevirtual #31
71: astore        7
73: aload         6
75: bipush        100
77: invokevirtual #189
80: astore        8
82: aconst_null
83: astore        9
85: aload         8
87: aload         9
89: invokevirtual #190
92: astore        10
94: ldc           #109
96: ldc           #55
98: aload_1
99: aload         10
101: invokestatic  #33
104: astore        11
106: ldc           #34
108: invokestatic  #35
111: goto          116
114: astore        11
116: aload_2
117: invokestatic  #15
120: aload_3
121: invokestatic  #15
124: aload         4
126: invokestatic  #15
129: aload         5
131: invokestatic  #15
134: aload         6
136: invokestatic  #15
139: aload         7
141: invokestatic  #15
144: aload         8
146: invokestatic  #15
149: aload         10
151: invokestatic  #15
154: return
Exception table:
from    to  target type
94   111   114   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test025
Start line: 1013
End line: 1028
Method source code: 
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)", whitelist1);
        org.jsoup.safety.Whitelist whitelist6 = whitelist1.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray13 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist14 = whitelist1.addTags(strArray13);
        org.jsoup.safety.Cleaner cleaner15 = new org.jsoup.safety.Cleaner(whitelist1);
        org.jsoup.safety.Cleaner cleaner16 = new org.jsoup.safety.Cleaner(whitelist1);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":lt(32)" + "'", str2, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(whitelist14);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #191
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #118
27: astore_1
28: ldc           #43
30: aload_1
31: invokestatic  #81
34: astore_2
35: aload_1
36: ldc           #43
38: ldc           #12
40: ldc           #32
42: invokevirtual #11
45: astore_3
46: bipush        6
48: anewarray     #119
51: dup
52: iconst_0
53: ldc           #109
55: aastore
56: dup
57: iconst_1
58: ldc           #10
60: aastore
61: dup
62: iconst_2
63: ldc           #13
65: aastore
66: dup
67: iconst_3
68: ldc           #50
70: aastore
71: dup
72: iconst_4
73: ldc           #12
75: aastore
76: dup
77: iconst_5
78: ldc           #120
80: aastore
81: astore        4
83: aload_1
84: aload         4
86: invokevirtual #121
89: astore        5
91: new           #40
94: dup
95: aload_1
96: invokespecial #41
99: astore        6
101: new           #40
104: dup
105: aload_1
106: invokespecial #41
109: astore        7
111: aload_1
112: invokestatic  #15
115: new           #16
118: dup
119: invokespecial #17
122: ldc           #18
124: invokevirtual #19
127: aload_2
128: invokevirtual #19
131: ldc           #128
133: invokevirtual #19
136: invokevirtual #22
139: aload_2
140: ldc           #43
142: invokestatic  #68
145: aload_3
146: invokestatic  #15
149: aload         4
151: invokestatic  #15
154: aload         5
156: invokestatic  #15
159: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test026
Start line: 1031
End line: 1066
Method source code: 
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.select.Elements elements28 = document23.select("[[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]$=[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(elements28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #192
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: new           #42
46: dup
47: ldc           #43
49: ldc           #32
51: invokespecial #44
54: astore        4
56: ldc           #12
58: invokestatic  #45
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         4
110: aload         5
112: aload         6
114: invokevirtual #46
117: istore        11
119: aload_3
120: aload         6
122: invokevirtual #47
125: astore        12
127: ldc           #10
129: invokestatic  #193
132: astore        13
134: aload         13
136: invokevirtual #72
139: astore        14
141: aload         13
143: invokevirtual #194
146: astore        15
148: aload_3
149: aload         13
151: invokevirtual #47
154: astore        16
156: aload         13
158: ldc           #195
160: invokevirtual #196
163: astore        17
165: aload_1
166: invokestatic  #15
169: aload_2
170: invokestatic  #15
173: aload         5
175: invokestatic  #15
178: aload         6
180: invokestatic  #15
183: aload         7
185: invokestatic  #15
188: aload         8
190: invokestatic  #15
193: aload         9
195: invokestatic  #15
198: aload         10
200: invokestatic  #15
203: new           #16
206: dup
207: invokespecial #17
210: ldc           #18
212: invokevirtual #19
215: iload         11
217: invokevirtual #20
220: ldc           #21
222: invokevirtual #19
225: iconst_0
226: invokevirtual #20
229: ldc           #18
231: invokevirtual #19
234: invokevirtual #22
237: iload         11
239: ifne          246
242: iconst_1
243: goto          247
246: iconst_0
247: invokestatic  #23
250: aload         12
252: invokestatic  #15
255: aload         13
257: invokestatic  #15
260: new           #16
263: dup
264: invokespecial #17
267: ldc           #18
269: invokevirtual #19
272: aload         14
274: invokevirtual #19
277: ldc           #197
279: invokevirtual #19
282: invokevirtual #22
285: aload         14
287: ldc           #151
289: invokestatic  #68
292: new           #16
295: dup
296: invokespecial #17
299: ldc           #18
301: invokevirtual #19
304: aload         15
306: invokevirtual #19
309: ldc           #67
311: invokevirtual #19
314: invokevirtual #22
317: aload         15
319: ldc           #25
321: invokestatic  #68
324: aload         16
326: invokestatic  #15
329: aload         17
331: invokestatic  #15
334: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test027
Start line: 1069
End line: 1150
Method source code: 
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining2 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        boolean boolean16 = attributeWithValueContaining2.matches((org.jsoup.nodes.Element) document4, (org.jsoup.nodes.Element) document8);
        org.jsoup.nodes.Element element18 = document8.toggleClass("#doctype");
        org.jsoup.nodes.Element element19 = document8.head();
        org.jsoup.select.Elements elements21 = document8.getElementsByAttributeStarting(":gt(100)");
        int int22 = document8.siblingIndex();
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner26 = new org.jsoup.safety.Cleaner(whitelist25);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining29 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document31 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = document35.outputSettings();
        boolean boolean43 = attributeWithValueContaining29.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document35);
        org.jsoup.nodes.Document document44 = cleaner26.clean(document35);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan46 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document49 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str50 = document49.ownText();
        org.jsoup.nodes.Node node53 = document49.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element68 = document57.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element70 = document57.createElement(" hi!");
        org.jsoup.select.Elements elements72 = document57.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean73 = indexLessThan46.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document74 = cleaner26.clean(document57);
        boolean boolean75 = document8.equals((java.lang.Object) document74);
        org.jsoup.select.Elements elements76 = document74.parents();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(elements21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(elements72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(document74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(elements76);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #198
19: aastore
20: invokevirtual #7
23: pop
24: new           #42
27: dup
28: ldc           #43
30: ldc           #32
32: invokespecial #44
35: astore_1
36: ldc           #12
38: invokestatic  #45
41: astore_2
42: ldc           #25
44: ldc           #12
46: invokestatic  #26
49: astore_3
50: ldc           #12
52: aload_3
53: ldc           #12
55: invokestatic  #27
58: astore        4
60: aload_3
61: ldc           #12
63: invokevirtual #28
66: astore        5
68: aload_3
69: ldc           #25
71: invokevirtual #29
74: astore        6
76: aload_3
77: invokevirtual #30
80: astore        7
82: aload_1
83: aload_2
84: aload_3
85: invokevirtual #46
88: istore        8
90: aload_3
91: ldc           #187
93: invokevirtual #199
96: astore        9
98: aload_3
99: invokevirtual #200
102: astore        10
104: aload_3
105: ldc           #92
107: invokevirtual #140
110: astore        11
112: aload_3
113: invokevirtual #201
116: istore        12
118: invokestatic  #8
121: astore        13
123: aload         13
125: iconst_1
126: invokevirtual #9
129: astore        14
131: new           #40
134: dup
135: aload         14
137: invokespecial #41
140: astore        15
142: new           #42
145: dup
146: ldc           #43
148: ldc           #32
150: invokespecial #44
153: astore        16
155: ldc           #12
157: invokestatic  #45
160: astore        17
162: ldc           #25
164: ldc           #12
166: invokestatic  #26
169: astore        18
171: ldc           #12
173: aload         18
175: ldc           #12
177: invokestatic  #27
180: astore        19
182: aload         18
184: ldc           #12
186: invokevirtual #28
189: astore        20
191: aload         18
193: ldc           #25
195: invokevirtual #29
198: astore        21
200: aload         18
202: invokevirtual #30
205: astore        22
207: aload         16
209: aload         17
211: aload         18
213: invokevirtual #46
216: istore        23
218: aload         15
220: aload         18
222: invokevirtual #47
225: astore        24
227: new           #48
230: dup
231: iconst_m1
232: invokespecial #49
235: astore        25
237: ldc           #50
239: ldc           #51
241: invokestatic  #52
244: astore        26
246: aload         26
248: invokevirtual #53
251: astore        27
253: aload         26
255: ldc           #54
257: ldc           #55
259: invokevirtual #56
262: astore        28
264: ldc           #25
266: ldc           #12
268: invokestatic  #26
271: astore        29
273: ldc           #12
275: aload         29
277: ldc           #12
279: invokestatic  #27
282: astore        30
284: aload         29
286: ldc           #12
288: invokevirtual #28
291: astore        31
293: aload         29
295: ldc           #25
297: invokevirtual #29
300: astore        32
302: aload         29
304: invokevirtual #30
307: astore        33
309: aload         29
311: ldc           #12
313: invokevirtual #57
316: astore        34
318: aload         29
320: ldc           #58
322: invokevirtual #59
325: astore        35
327: aload         29
329: ldc           #60
331: invokevirtual #61
334: astore        36
336: aload         29
338: ldc           #38
340: invokevirtual #62
343: astore        37
345: aload         25
347: aload         26
349: aload         29
351: invokevirtual #63
354: istore        38
356: aload         15
358: aload         29
360: invokevirtual #47
363: astore        39
365: aload_3
366: aload         39
368: invokevirtual #202
371: istore        40
373: aload         39
375: invokevirtual #203
378: astore        41
380: aload_2
381: invokestatic  #15
384: aload_3
385: invokestatic  #15
388: aload         4
390: invokestatic  #15
393: aload         5
395: invokestatic  #15
398: aload         6
400: invokestatic  #15
403: aload         7
405: invokestatic  #15
408: new           #16
411: dup
412: invokespecial #17
415: ldc           #18
417: invokevirtual #19
420: iload         8
422: invokevirtual #20
425: ldc           #21
427: invokevirtual #19
430: iconst_0
431: invokevirtual #20
434: ldc           #18
436: invokevirtual #19
439: invokevirtual #22
442: iload         8
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #23
455: aload         9
457: invokestatic  #15
460: aload         10
462: invokestatic  #15
465: aload         11
467: invokestatic  #15
470: new           #16
473: dup
474: invokespecial #17
477: ldc           #18
479: invokevirtual #19
482: iload         12
484: invokevirtual #134
487: ldc           #21
489: invokevirtual #19
492: iconst_0
493: invokevirtual #134
496: ldc           #18
498: invokevirtual #19
501: invokevirtual #22
504: iload         12
506: ifne          513
509: iconst_1
510: goto          514
513: iconst_0
514: invokestatic  #23
517: aload         13
519: invokestatic  #15
522: aload         14
524: invokestatic  #15
527: aload         17
529: invokestatic  #15
532: aload         18
534: invokestatic  #15
537: aload         19
539: invokestatic  #15
542: aload         20
544: invokestatic  #15
547: aload         21
549: invokestatic  #15
552: aload         22
554: invokestatic  #15
557: new           #16
560: dup
561: invokespecial #17
564: ldc           #18
566: invokevirtual #19
569: iload         23
571: invokevirtual #20
574: ldc           #21
576: invokevirtual #19
579: iconst_0
580: invokevirtual #20
583: ldc           #18
585: invokevirtual #19
588: invokevirtual #22
591: iload         23
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #23
604: aload         24
606: invokestatic  #15
609: aload         26
611: invokestatic  #15
614: new           #16
617: dup
618: invokespecial #17
621: ldc           #18
623: invokevirtual #19
626: aload         27
628: invokevirtual #19
631: ldc           #67
633: invokevirtual #19
636: invokevirtual #22
639: aload         27
641: ldc           #25
643: invokestatic  #68
646: aload         28
648: invokestatic  #15
651: aload         29
653: invokestatic  #15
656: aload         30
658: invokestatic  #15
661: aload         31
663: invokestatic  #15
666: aload         32
668: invokestatic  #15
671: aload         33
673: invokestatic  #15
676: aload         34
678: invokestatic  #15
681: aload         35
683: invokestatic  #15
686: aload         36
688: invokestatic  #15
691: aload         37
693: invokestatic  #15
696: new           #16
699: dup
700: invokespecial #17
703: ldc           #18
705: invokevirtual #19
708: iload         38
710: invokevirtual #20
713: ldc           #21
715: invokevirtual #19
718: iconst_0
719: invokevirtual #20
722: ldc           #18
724: invokevirtual #19
727: invokevirtual #22
730: iload         38
732: ifne          739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #23
743: aload         39
745: invokestatic  #15
748: new           #16
751: dup
752: invokespecial #17
755: ldc           #18
757: invokevirtual #19
760: iload         40
762: invokevirtual #20
765: ldc           #21
767: invokevirtual #19
770: iconst_0
771: invokevirtual #20
774: ldc           #18
776: invokevirtual #19
779: invokevirtual #22
782: iload         40
784: ifne          791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #23
795: aload         41
797: invokestatic  #15
800: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test028
Start line: 1153
End line: 1188
Method source code: 
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str4 = org.jsoup.Jsoup.clean(":lt(32)", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList12 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document10, "hi!");
        org.jsoup.nodes.Element element13 = document10.empty();
        org.jsoup.nodes.Element element15 = document10.removeClass("hi!");
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document19, "hi!");
        org.jsoup.nodes.Element element23 = document19.tagName("hi!");
        org.jsoup.nodes.Element element25 = document19.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = document19.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings26.prettyPrint(false);
        org.jsoup.nodes.Document document29 = document10.outputSettings(outputSettings28);
        java.lang.String str30 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist3, outputSettings28);
        org.jsoup.nodes.Document.OutputSettings outputSettings31 = outputSettings28.clone();
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":lt(32)" + "'", str4, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[:lt(32)]" + "'", str30, "[:lt(32)]");
        org.junit.Assert.assertNotNull(outputSettings31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #204
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #118
27: astore_1
28: ldc           #43
30: aload_1
31: invokestatic  #81
34: astore_2
35: aload_1
36: ldc           #25
38: invokevirtual #83
41: istore_3
42: ldc           #25
44: ldc           #12
46: invokestatic  #26
49: astore        4
51: ldc           #12
53: aload         4
55: ldc           #12
57: invokestatic  #27
60: astore        5
62: aload         4
64: invokevirtual #103
67: astore        6
69: aload         4
71: ldc           #12
73: invokevirtual #59
76: astore        7
78: ldc           #25
80: ldc           #12
82: invokestatic  #26
85: astore        8
87: ldc           #12
89: aload         8
91: ldc           #12
93: invokestatic  #27
96: astore        9
98: aload         8
100: ldc           #12
102: invokevirtual #28
105: astore        10
107: aload         8
109: ldc           #25
111: invokevirtual #29
114: astore        11
116: aload         8
118: invokevirtual #30
121: astore        12
123: aload         12
125: iconst_0
126: invokevirtual #31
129: astore        13
131: aload         4
133: aload         13
135: invokevirtual #175
138: astore        14
140: ldc           #58
142: ldc           #126
144: aload_1
145: aload         13
147: invokestatic  #33
150: astore        15
152: aload         13
154: invokevirtual #205
157: astore        16
159: aload_1
160: invokestatic  #15
163: new           #16
166: dup
167: invokespecial #17
170: ldc           #18
172: invokevirtual #19
175: aload_2
176: invokevirtual #19
179: ldc           #128
181: invokevirtual #19
184: invokevirtual #22
187: aload_2
188: ldc           #43
190: invokestatic  #68
193: new           #16
196: dup
197: invokespecial #17
200: ldc           #18
202: invokevirtual #19
205: iload_3
206: invokevirtual #20
209: ldc           #21
211: invokevirtual #19
214: iconst_0
215: invokevirtual #20
218: ldc           #18
220: invokevirtual #19
223: invokevirtual #22
226: iload_3
227: ifne          234
230: iconst_1
231: goto          235
234: iconst_0
235: invokestatic  #23
238: aload         4
240: invokestatic  #15
243: aload         5
245: invokestatic  #15
248: aload         6
250: invokestatic  #15
253: aload         7
255: invokestatic  #15
258: aload         8
260: invokestatic  #15
263: aload         9
265: invokestatic  #15
268: aload         10
270: invokestatic  #15
273: aload         11
275: invokestatic  #15
278: aload         12
280: invokestatic  #15
283: aload         13
285: invokestatic  #15
288: aload         14
290: invokestatic  #15
293: new           #16
296: dup
297: invokespecial #17
300: ldc           #18
302: invokevirtual #19
305: aload         15
307: invokevirtual #19
310: ldc           #184
312: invokevirtual #19
315: invokevirtual #22
318: aload         15
320: ldc           #58
322: invokestatic  #68
325: aload         16
327: invokestatic  #15
330: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test029
Start line: 1191
End line: 1252
Method source code: 
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist11 = whitelist1.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str12 = org.jsoup.Jsoup.clean("hi!", whitelist1);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist16 = whitelist14.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner17 = new org.jsoup.safety.Cleaner(whitelist16);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining20 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document22 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element30 = document26.tagName("hi!");
        org.jsoup.nodes.Element element32 = document26.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings33 = document26.outputSettings();
        boolean boolean34 = attributeWithValueContaining20.matches((org.jsoup.nodes.Element) document22, (org.jsoup.nodes.Element) document26);
        org.jsoup.nodes.Document document35 = cleaner17.clean(document26);
        org.jsoup.nodes.Document document39 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList41 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document39, "hi!");
        org.jsoup.nodes.Element element43 = document39.tagName("hi!");
        org.jsoup.nodes.Element element45 = document39.append("");
        java.lang.String str46 = document39.toString();
        java.lang.String str47 = document39.id();
        org.jsoup.nodes.Node node48 = document39.parent();
        org.jsoup.nodes.Document document49 = cleaner17.clean(document39);
        org.jsoup.parser.Tag tag50 = document39.tag();
        org.jsoup.nodes.Element element52 = document39.appendText(".[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]");
        org.jsoup.nodes.Attribute attribute55 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        boolean boolean56 = whitelist1.isSafeAttribute("", (org.jsoup.nodes.Element) document39, attribute55);
        java.lang.String str57 = attribute55.getKey();
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(outputSettings33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str46, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertNotNull(tag50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(attribute55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #206
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: aload_1
35: ldc           #10
37: ldc           #10
39: ldc           #10
41: invokevirtual #11
44: astore_3
45: aload_1
46: ldc           #12
48: ldc           #13
50: ldc           #12
52: invokevirtual #11
55: astore        4
57: ldc           #12
59: aload_1
60: invokestatic  #81
63: astore        5
65: invokestatic  #8
68: astore        6
70: aload         6
72: iconst_1
73: invokevirtual #9
76: astore        7
78: new           #40
81: dup
82: aload         7
84: invokespecial #41
87: astore        8
89: new           #42
92: dup
93: ldc           #43
95: ldc           #32
97: invokespecial #44
100: astore        9
102: ldc           #12
104: invokestatic  #45
107: astore        10
109: ldc           #25
111: ldc           #12
113: invokestatic  #26
116: astore        11
118: ldc           #12
120: aload         11
122: ldc           #12
124: invokestatic  #27
127: astore        12
129: aload         11
131: ldc           #12
133: invokevirtual #28
136: astore        13
138: aload         11
140: ldc           #25
142: invokevirtual #29
145: astore        14
147: aload         11
149: invokevirtual #30
152: astore        15
154: aload         9
156: aload         10
158: aload         11
160: invokevirtual #46
163: istore        16
165: aload         8
167: aload         11
169: invokevirtual #47
172: astore        17
174: ldc           #25
176: ldc           #12
178: invokestatic  #26
181: astore        18
183: ldc           #12
185: aload         18
187: ldc           #12
189: invokestatic  #27
192: astore        19
194: aload         18
196: ldc           #12
198: invokevirtual #28
201: astore        20
203: aload         18
205: ldc           #25
207: invokevirtual #29
210: astore        21
212: aload         18
214: invokevirtual #72
217: astore        22
219: aload         18
221: invokevirtual #73
224: astore        23
226: aload         18
228: invokevirtual #74
231: astore        24
233: aload         8
235: aload         18
237: invokevirtual #47
240: astore        25
242: aload         18
244: invokevirtual #207
247: astore        26
249: aload         18
251: ldc           #208
253: invokevirtual #209
256: astore        27
258: ldc           #114
260: ldc           #55
262: invokestatic  #168
265: astore        28
267: aload_1
268: ldc           #25
270: aload         18
272: aload         28
274: invokevirtual #169
277: istore        29
279: aload         28
281: invokevirtual #210
284: astore        30
286: aload_1
287: invokestatic  #15
290: aload_2
291: invokestatic  #15
294: aload_3
295: invokestatic  #15
298: aload         4
300: invokestatic  #15
303: new           #16
306: dup
307: invokespecial #17
310: ldc           #18
312: invokevirtual #19
315: aload         5
317: invokevirtual #19
320: ldc           #211
322: invokevirtual #19
325: invokevirtual #22
328: aload         5
330: ldc           #12
332: invokestatic  #68
335: aload         6
337: invokestatic  #15
340: aload         7
342: invokestatic  #15
345: aload         10
347: invokestatic  #15
350: aload         11
352: invokestatic  #15
355: aload         12
357: invokestatic  #15
360: aload         13
362: invokestatic  #15
365: aload         14
367: invokestatic  #15
370: aload         15
372: invokestatic  #15
375: new           #16
378: dup
379: invokespecial #17
382: ldc           #18
384: invokevirtual #19
387: iload         16
389: invokevirtual #20
392: ldc           #21
394: invokevirtual #19
397: iconst_0
398: invokevirtual #20
401: ldc           #18
403: invokevirtual #19
406: invokevirtual #22
409: iload         16
411: ifne          418
414: iconst_1
415: goto          419
418: iconst_0
419: invokestatic  #23
422: aload         17
424: invokestatic  #15
427: aload         18
429: invokestatic  #15
432: aload         19
434: invokestatic  #15
437: aload         20
439: invokestatic  #15
442: aload         21
444: invokestatic  #15
447: new           #16
450: dup
451: invokespecial #17
454: ldc           #18
456: invokevirtual #19
459: aload         22
461: invokevirtual #19
464: ldc           #78
466: invokevirtual #19
469: invokevirtual #22
472: aload         22
474: ldc           #10
476: invokestatic  #68
479: new           #16
482: dup
483: invokespecial #17
486: ldc           #18
488: invokevirtual #19
491: aload         23
493: invokevirtual #19
496: ldc           #67
498: invokevirtual #19
501: invokevirtual #22
504: aload         23
506: ldc           #25
508: invokestatic  #68
511: aload         24
513: invokestatic  #79
516: aload         25
518: invokestatic  #15
521: aload         26
523: invokestatic  #15
526: aload         27
528: invokestatic  #15
531: aload         28
533: invokestatic  #15
536: new           #16
539: dup
540: invokespecial #17
543: ldc           #18
545: invokevirtual #19
548: iload         29
550: invokevirtual #20
553: ldc           #21
555: invokevirtual #19
558: iconst_0
559: invokevirtual #20
562: ldc           #18
564: invokevirtual #19
567: invokevirtual #22
570: iload         29
572: ifne          579
575: iconst_1
576: goto          580
579: iconst_0
580: invokestatic  #23
583: new           #16
586: dup
587: invokespecial #17
590: ldc           #18
592: invokevirtual #19
595: aload         30
597: invokevirtual #19
600: ldc           #212
602: invokevirtual #19
605: invokevirtual #22
608: aload         30
610: ldc           #114
612: invokestatic  #68
615: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test030
Start line: 1255
End line: 1328
Method source code: 
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str8 = org.jsoup.Jsoup.clean("\nhi!", whitelist7);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str15 = org.jsoup.Jsoup.clean(":lt(32)", whitelist14);
        boolean boolean17 = whitelist14.isSafeTag("");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element24 = document21.empty();
        org.jsoup.nodes.Element element26 = document21.removeClass("hi!");
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.tagName("hi!");
        org.jsoup.nodes.Element element36 = document30.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = document30.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings37.prettyPrint(false);
        org.jsoup.nodes.Document document40 = document21.outputSettings(outputSettings39);
        java.lang.String str41 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist14, outputSettings39);
        org.jsoup.safety.Whitelist whitelist43 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist45 = whitelist43.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist47 = whitelist45.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist51 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str52 = org.jsoup.Jsoup.clean(":lt(32)", whitelist51);
        org.jsoup.safety.Whitelist whitelist56 = whitelist51.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray63 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist64 = whitelist51.addTags(strArray63);
        org.jsoup.safety.Whitelist whitelist65 = whitelist47.addProtocols(":matchesOwn(null", "hi!", strArray63);
        org.jsoup.safety.Whitelist whitelist66 = whitelist14.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray63);
        org.jsoup.safety.Whitelist whitelist67 = whitelist7.addProtocols("#doctype", "[]", strArray63);
        org.jsoup.safety.Whitelist whitelist71 = whitelist67.addEnforcedAttribute(".[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", ":contains(:gt(100)", "[<html>\n <head></head>\n <body>\n </body>\n</html>]");
        java.lang.String[] strArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist74 = whitelist71.addAttributes("", strArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":lt(32)" + "'", str15, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[:lt(32)]" + "'", str41, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":lt(32)" + "'", str52, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertNotNull(whitelist71);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #213
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: aload_1
35: ldc           #10
37: ldc           #10
39: ldc           #10
41: invokevirtual #11
44: astore_3
45: ldc           #98
47: aload_3
48: invokestatic  #81
51: astore        4
53: invokestatic  #118
56: astore        5
58: ldc           #43
60: aload         5
62: invokestatic  #81
65: astore        6
67: aload         5
69: ldc           #25
71: invokevirtual #83
74: istore        7
76: ldc           #25
78: ldc           #12
80: invokestatic  #26
83: astore        8
85: ldc           #12
87: aload         8
89: ldc           #12
91: invokestatic  #27
94: astore        9
96: aload         8
98: invokevirtual #103
101: astore        10
103: aload         8
105: ldc           #12
107: invokevirtual #59
110: astore        11
112: ldc           #25
114: ldc           #12
116: invokestatic  #26
119: astore        12
121: ldc           #12
123: aload         12
125: ldc           #12
127: invokestatic  #27
130: astore        13
132: aload         12
134: ldc           #12
136: invokevirtual #28
139: astore        14
141: aload         12
143: ldc           #25
145: invokevirtual #29
148: astore        15
150: aload         12
152: invokevirtual #30
155: astore        16
157: aload         16
159: iconst_0
160: invokevirtual #31
163: astore        17
165: aload         8
167: aload         17
169: invokevirtual #175
172: astore        18
174: ldc           #58
176: ldc           #126
178: aload         5
180: aload         17
182: invokestatic  #33
185: astore        19
187: invokestatic  #8
190: astore        20
192: aload         20
194: iconst_1
195: invokevirtual #9
198: astore        21
200: aload         21
202: iconst_0
203: invokevirtual #9
206: astore        22
208: invokestatic  #118
211: astore        23
213: ldc           #43
215: aload         23
217: invokestatic  #81
220: astore        24
222: aload         23
224: ldc           #43
226: ldc           #12
228: ldc           #32
230: invokevirtual #11
233: astore        25
235: bipush        6
237: anewarray     #119
240: dup
241: iconst_0
242: ldc           #109
244: aastore
245: dup
246: iconst_1
247: ldc           #10
249: aastore
250: dup
251: iconst_2
252: ldc           #13
254: aastore
255: dup
256: iconst_3
257: ldc           #50
259: aastore
260: dup
261: iconst_4
262: ldc           #12
264: aastore
265: dup
266: iconst_5
267: ldc           #120
269: aastore
270: astore        26
272: aload         23
274: aload         26
276: invokevirtual #121
279: astore        27
281: aload         22
283: ldc           #38
285: ldc           #12
287: aload         26
289: invokevirtual #122
292: astore        28
294: aload         5
296: ldc           #109
298: aload         26
300: invokevirtual #127
303: astore        29
305: aload_3
306: ldc           #187
308: ldc           #159
310: aload         26
312: invokevirtual #122
315: astore        30
317: aload         30
319: ldc           #208
321: ldc           #214
323: ldc           #215
325: invokevirtual #11
328: astore        31
330: aconst_null
331: astore        32
333: aload         31
335: ldc           #25
337: aload         32
339: invokevirtual #127
342: astore        33
344: ldc           #141
346: invokestatic  #35
349: goto          354
352: astore        33
354: aload_1
355: invokestatic  #15
358: aload_2
359: invokestatic  #15
362: aload_3
363: invokestatic  #15
366: new           #16
369: dup
370: invokespecial #17
373: ldc           #18
375: invokevirtual #19
378: aload         4
380: invokevirtual #19
383: ldc           #211
385: invokevirtual #19
388: invokevirtual #22
391: aload         4
393: ldc           #12
395: invokestatic  #68
398: aload         5
400: invokestatic  #15
403: new           #16
406: dup
407: invokespecial #17
410: ldc           #18
412: invokevirtual #19
415: aload         6
417: invokevirtual #19
420: ldc           #128
422: invokevirtual #19
425: invokevirtual #22
428: aload         6
430: ldc           #43
432: invokestatic  #68
435: new           #16
438: dup
439: invokespecial #17
442: ldc           #18
444: invokevirtual #19
447: iload         7
449: invokevirtual #20
452: ldc           #21
454: invokevirtual #19
457: iconst_0
458: invokevirtual #20
461: ldc           #18
463: invokevirtual #19
466: invokevirtual #22
469: iload         7
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #23
482: aload         8
484: invokestatic  #15
487: aload         9
489: invokestatic  #15
492: aload         10
494: invokestatic  #15
497: aload         11
499: invokestatic  #15
502: aload         12
504: invokestatic  #15
507: aload         13
509: invokestatic  #15
512: aload         14
514: invokestatic  #15
517: aload         15
519: invokestatic  #15
522: aload         16
524: invokestatic  #15
527: aload         17
529: invokestatic  #15
532: aload         18
534: invokestatic  #15
537: new           #16
540: dup
541: invokespecial #17
544: ldc           #18
546: invokevirtual #19
549: aload         19
551: invokevirtual #19
554: ldc           #184
556: invokevirtual #19
559: invokevirtual #22
562: aload         19
564: ldc           #58
566: invokestatic  #68
569: aload         20
571: invokestatic  #15
574: aload         21
576: invokestatic  #15
579: aload         22
581: invokestatic  #15
584: aload         23
586: invokestatic  #15
589: new           #16
592: dup
593: invokespecial #17
596: ldc           #18
598: invokevirtual #19
601: aload         24
603: invokevirtual #19
606: ldc           #128
608: invokevirtual #19
611: invokevirtual #22
614: aload         24
616: ldc           #43
618: invokestatic  #68
621: aload         25
623: invokestatic  #15
626: aload         26
628: invokestatic  #15
631: aload         27
633: invokestatic  #15
636: aload         28
638: invokestatic  #15
641: aload         29
643: invokestatic  #15
646: aload         30
648: invokestatic  #15
651: aload         31
653: invokestatic  #15
656: return
Exception table:
from    to  target type
333   349   352   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test031
Start line: 1331
End line: 1393
Method source code: 
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.jsoup.select.Evaluator.AttributeStarting attributeStarting1 = new org.jsoup.select.Evaluator.AttributeStarting("hi!");
        java.lang.String str2 = attributeStarting1.toString();
        org.jsoup.nodes.Element element3 = null;
        org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList9 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document7, "hi!");
        org.jsoup.nodes.Element element10 = document7.empty();
        org.jsoup.nodes.Element element12 = document7.removeClass("hi!");
        java.lang.String str13 = document7.nodeName();
        boolean boolean14 = attributeStarting1.matches(element3, (org.jsoup.nodes.Element) document7);
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner18 = new org.jsoup.safety.Cleaner(whitelist17);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining21 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document23 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document27 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList29 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document27, "hi!");
        org.jsoup.nodes.Element element31 = document27.tagName("hi!");
        org.jsoup.nodes.Element element33 = document27.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings34 = document27.outputSettings();
        boolean boolean35 = attributeWithValueContaining21.matches((org.jsoup.nodes.Element) document23, (org.jsoup.nodes.Element) document27);
        org.jsoup.nodes.Document document36 = cleaner18.clean(document27);
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str39 = document38.toString();
        java.lang.String str40 = document38.baseUri();
        org.jsoup.nodes.Document document41 = cleaner18.clean(document38);
        org.jsoup.nodes.Document.QuirksMode quirksMode42 = document41.quirksMode();
        org.jsoup.nodes.Document document44 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Element element45 = document44.parent();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = attributeStarting1.matches((org.jsoup.nodes.Element) document41, element45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[^hi!]" + "'", str2, "[^hi!]");
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#document" + "'", str13, "#document");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(outputSettings34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str39, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertTrue("'" + quirksMode42 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode42.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNull(element45);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #216
19: aastore
20: invokevirtual #7
23: pop
24: new           #217
27: dup
28: ldc           #12
30: invokespecial #218
33: astore_1
34: aload_1
35: invokevirtual #219
38: astore_2
39: aconst_null
40: astore_3
41: ldc           #25
43: ldc           #12
45: invokestatic  #26
48: astore        4
50: ldc           #12
52: aload         4
54: ldc           #12
56: invokestatic  #27
59: astore        5
61: aload         4
63: invokevirtual #103
66: astore        6
68: aload         4
70: ldc           #12
72: invokevirtual #59
75: astore        7
77: aload         4
79: invokevirtual #220
82: astore        8
84: aload_1
85: aload_3
86: aload         4
88: invokevirtual #221
91: istore        9
93: invokestatic  #8
96: astore        10
98: aload         10
100: iconst_1
101: invokevirtual #9
104: astore        11
106: new           #40
109: dup
110: aload         11
112: invokespecial #41
115: astore        12
117: new           #42
120: dup
121: ldc           #43
123: ldc           #32
125: invokespecial #44
128: astore        13
130: ldc           #12
132: invokestatic  #45
135: astore        14
137: ldc           #25
139: ldc           #12
141: invokestatic  #26
144: astore        15
146: ldc           #12
148: aload         15
150: ldc           #12
152: invokestatic  #27
155: astore        16
157: aload         15
159: ldc           #12
161: invokevirtual #28
164: astore        17
166: aload         15
168: ldc           #25
170: invokevirtual #29
173: astore        18
175: aload         15
177: invokevirtual #30
180: astore        19
182: aload         13
184: aload         14
186: aload         15
188: invokevirtual #46
191: istore        20
193: aload         12
195: aload         15
197: invokevirtual #47
200: astore        21
202: ldc           #10
204: invokestatic  #193
207: astore        22
209: aload         22
211: invokevirtual #72
214: astore        23
216: aload         22
218: invokevirtual #194
221: astore        24
223: aload         12
225: aload         22
227: invokevirtual #47
230: astore        25
232: aload         25
234: invokevirtual #222
237: astore        26
239: ldc           #12
241: invokestatic  #45
244: astore        27
246: aload         27
248: invokevirtual #74
251: astore        28
253: aload_1
254: aload         25
256: aload         28
258: invokevirtual #221
261: istore        29
263: ldc           #76
265: invokestatic  #35
268: goto          273
271: astore        29
273: new           #16
276: dup
277: invokespecial #17
280: ldc           #18
282: invokevirtual #19
285: aload_2
286: invokevirtual #19
289: ldc           #112
291: invokevirtual #19
294: invokevirtual #22
297: aload_2
298: ldc           #50
300: invokestatic  #68
303: aload         4
305: invokestatic  #15
308: aload         5
310: invokestatic  #15
313: aload         6
315: invokestatic  #15
318: aload         7
320: invokestatic  #15
323: new           #16
326: dup
327: invokespecial #17
330: ldc           #18
332: invokevirtual #19
335: aload         8
337: invokevirtual #19
340: ldc           #107
342: invokevirtual #19
345: invokevirtual #22
348: aload         8
350: ldc           #13
352: invokestatic  #68
355: new           #16
358: dup
359: invokespecial #17
362: ldc           #18
364: invokevirtual #19
367: iload         9
369: invokevirtual #20
372: ldc           #21
374: invokevirtual #19
377: iconst_0
378: invokevirtual #20
381: ldc           #18
383: invokevirtual #19
386: invokevirtual #22
389: iload         9
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #23
402: aload         10
404: invokestatic  #15
407: aload         11
409: invokestatic  #15
412: aload         14
414: invokestatic  #15
417: aload         15
419: invokestatic  #15
422: aload         16
424: invokestatic  #15
427: aload         17
429: invokestatic  #15
432: aload         18
434: invokestatic  #15
437: aload         19
439: invokestatic  #15
442: new           #16
445: dup
446: invokespecial #17
449: ldc           #18
451: invokevirtual #19
454: iload         20
456: invokevirtual #20
459: ldc           #21
461: invokevirtual #19
464: iconst_0
465: invokevirtual #20
468: ldc           #18
470: invokevirtual #19
473: invokevirtual #22
476: iload         20
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #23
489: aload         21
491: invokestatic  #15
494: aload         22
496: invokestatic  #15
499: new           #16
502: dup
503: invokespecial #17
506: ldc           #18
508: invokevirtual #19
511: aload         23
513: invokevirtual #19
516: ldc           #197
518: invokevirtual #19
521: invokevirtual #22
524: aload         23
526: ldc           #151
528: invokestatic  #68
531: new           #16
534: dup
535: invokespecial #17
538: ldc           #18
540: invokevirtual #19
543: aload         24
545: invokevirtual #19
548: ldc           #67
550: invokevirtual #19
553: invokevirtual #22
556: aload         24
558: ldc           #25
560: invokestatic  #68
563: aload         25
565: invokestatic  #15
568: new           #16
571: dup
572: invokespecial #17
575: ldc           #18
577: invokevirtual #19
580: aload         26
582: invokevirtual #223
585: ldc           #21
587: invokevirtual #19
590: getstatic     #224
593: invokevirtual #223
596: ldc           #18
598: invokevirtual #19
601: invokevirtual #22
604: aload         26
606: getstatic     #224
609: invokevirtual #225
612: invokestatic  #23
615: aload         27
617: invokestatic  #15
620: aload         28
622: invokestatic  #79
625: return
Exception table:
from    to  target type
253   268   271   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test032
Start line: 1396
End line: 1407
Method source code: 
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean(":gt(100)", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #226
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: ldc           #92
28: aload_1
29: invokestatic  #81
32: astore_2
33: ldc           #34
35: invokestatic  #35
38: goto          42
41: astore_2
42: return
Exception table:
from    to  target type
26    38    41   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test033
Start line: 1410
End line: 1421
Method source code: 
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #227
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: ldc           #228
28: aload_1
29: invokestatic  #14
32: istore_2
33: ldc           #34
35: invokestatic  #35
38: goto          42
41: astore_2
42: return
Exception table:
from    to  target type
26    38    41   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test034
Start line: 1424
End line: 1435
Method source code: 
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)=\"[.]\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #229
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: ldc           #230
28: aload_1
29: invokestatic  #81
32: astore_2
33: ldc           #34
35: invokestatic  #35
38: goto          42
41: astore_2
42: return
Exception table:
from    to  target type
26    38    41   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test035
Start line: 1438
End line: 1461
Method source code: 
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist8 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)", whitelist8);
        org.jsoup.safety.Whitelist whitelist13 = whitelist8.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray20 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist21 = whitelist8.addTags(strArray20);
        org.jsoup.safety.Whitelist whitelist22 = whitelist4.addProtocols(":matchesOwn(null", "hi!", strArray20);
        java.lang.Class<?> wildcardClass23 = whitelist4.getClass();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)" + "'", str9, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #231
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: aload_2
35: iconst_0
36: invokevirtual #9
39: astore_3
40: invokestatic  #118
43: astore        4
45: ldc           #43
47: aload         4
49: invokestatic  #81
52: astore        5
54: aload         4
56: ldc           #43
58: ldc           #12
60: ldc           #32
62: invokevirtual #11
65: astore        6
67: bipush        6
69: anewarray     #119
72: dup
73: iconst_0
74: ldc           #109
76: aastore
77: dup
78: iconst_1
79: ldc           #10
81: aastore
82: dup
83: iconst_2
84: ldc           #13
86: aastore
87: dup
88: iconst_3
89: ldc           #50
91: aastore
92: dup
93: iconst_4
94: ldc           #12
96: aastore
97: dup
98: iconst_5
99: ldc           #120
101: aastore
102: astore        7
104: aload         4
106: aload         7
108: invokevirtual #121
111: astore        8
113: aload_3
114: ldc           #38
116: ldc           #12
118: aload         7
120: invokevirtual #122
123: astore        9
125: aload_3
126: invokevirtual #232
129: astore        10
131: aload_1
132: invokestatic  #15
135: aload_2
136: invokestatic  #15
139: aload_3
140: invokestatic  #15
143: aload         4
145: invokestatic  #15
148: new           #16
151: dup
152: invokespecial #17
155: ldc           #18
157: invokevirtual #19
160: aload         5
162: invokevirtual #19
165: ldc           #128
167: invokevirtual #19
170: invokevirtual #22
173: aload         5
175: ldc           #43
177: invokestatic  #68
180: aload         6
182: invokestatic  #15
185: aload         7
187: invokestatic  #15
190: aload         8
192: invokestatic  #15
195: aload         9
197: invokestatic  #15
200: aload         10
202: invokestatic  #15
205: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test036
Start line: 1464
End line: 1547
Method source code: 
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        java.lang.String str9 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist6);
        java.lang.String str10 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist6);
        org.jsoup.safety.Whitelist whitelist16 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str17 = org.jsoup.Jsoup.clean(":lt(32)", whitelist16);
        boolean boolean19 = whitelist16.isSafeTag("");
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList25 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document23, "hi!");
        org.jsoup.nodes.Element element26 = document23.empty();
        org.jsoup.nodes.Element element28 = document23.removeClass("hi!");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = outputSettings39.prettyPrint(false);
        org.jsoup.nodes.Document document42 = document23.outputSettings(outputSettings41);
        java.lang.String str43 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist16, outputSettings41);
        org.jsoup.safety.Whitelist whitelist46 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str47 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist46);
        org.jsoup.safety.Whitelist whitelist49 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist51 = whitelist49.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist53 = whitelist51.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist57 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str58 = org.jsoup.Jsoup.clean(":lt(32)", whitelist57);
        org.jsoup.safety.Whitelist whitelist62 = whitelist57.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray69 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist70 = whitelist57.addTags(strArray69);
        org.jsoup.safety.Whitelist whitelist71 = whitelist53.addProtocols(":matchesOwn(null", "hi!", strArray69);
        java.lang.String[] strArray80 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean81 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray80);
        org.jsoup.safety.Whitelist whitelist82 = whitelist71.addProtocols("\n<!--hi!-->", "#document", strArray80);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray80);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray80);
        org.jsoup.safety.Whitelist whitelist85 = whitelist46.addAttributes("*", strArray80);
        org.jsoup.safety.Whitelist whitelist86 = whitelist16.addTags(strArray80);
        boolean boolean87 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", strArray80);
        org.jsoup.safety.Whitelist whitelist88 = whitelist6.addAttributes(":matchesOwn(null", strArray80);
        org.jsoup.nodes.Attributes attributes90 = whitelist6.getEnforcedAttributes("<html>\n <head></head>\n <body>\n </body>\n</html>");
        java.lang.String str91 = org.jsoup.Jsoup.clean("[^\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->]", ".", whitelist6);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[    ^=hi!]" + "'", str10, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":lt(32)" + "'", str17, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[:lt(32)]" + "'", str43, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[hi!$=   ]" + "'", str47, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + ":lt(32)" + "'", str58, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertNotNull(whitelist71);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(whitelist85);
        org.junit.Assert.assertNotNull(whitelist86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(whitelist88);
        org.junit.Assert.assertNotNull(attributes90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[^ ]" + "'", str91, "[^ ]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #233
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #118
27: astore_1
28: aload_1
29: ldc           #51
31: invokevirtual #150
34: astore_2
35: ldc           #25
37: ldc           #157
39: aload_1
40: invokestatic  #94
43: astore_3
44: ldc           #158
46: ldc           #159
48: aload_1
49: invokestatic  #94
52: astore        4
54: invokestatic  #118
57: astore        5
59: ldc           #43
61: aload         5
63: invokestatic  #81
66: astore        6
68: aload         5
70: ldc           #25
72: invokevirtual #83
75: istore        7
77: ldc           #25
79: ldc           #12
81: invokestatic  #26
84: astore        8
86: ldc           #12
88: aload         8
90: ldc           #12
92: invokestatic  #27
95: astore        9
97: aload         8
99: invokevirtual #103
102: astore        10
104: aload         8
106: ldc           #12
108: invokevirtual #59
111: astore        11
113: ldc           #25
115: ldc           #12
117: invokestatic  #26
120: astore        12
122: ldc           #12
124: aload         12
126: ldc           #12
128: invokestatic  #27
131: astore        13
133: aload         12
135: ldc           #12
137: invokevirtual #28
140: astore        14
142: aload         12
144: ldc           #25
146: invokevirtual #29
149: astore        15
151: aload         12
153: invokevirtual #30
156: astore        16
158: aload         16
160: iconst_0
161: invokevirtual #31
164: astore        17
166: aload         8
168: aload         17
170: invokevirtual #175
173: astore        18
175: ldc           #58
177: ldc           #126
179: aload         5
181: aload         17
183: invokestatic  #33
186: astore        19
188: invokestatic  #8
191: astore        20
193: ldc           #109
195: ldc           #110
197: aload         20
199: invokestatic  #94
202: astore        21
204: invokestatic  #8
207: astore        22
209: aload         22
211: iconst_1
212: invokevirtual #9
215: astore        23
217: aload         23
219: iconst_0
220: invokevirtual #9
223: astore        24
225: invokestatic  #118
228: astore        25
230: ldc           #43
232: aload         25
234: invokestatic  #81
237: astore        26
239: aload         25
241: ldc           #43
243: ldc           #12
245: ldc           #32
247: invokevirtual #11
250: astore        27
252: bipush        6
254: anewarray     #119
257: dup
258: iconst_0
259: ldc           #109
261: aastore
262: dup
263: iconst_1
264: ldc           #10
266: aastore
267: dup
268: iconst_2
269: ldc           #13
271: aastore
272: dup
273: iconst_3
274: ldc           #50
276: aastore
277: dup
278: iconst_4
279: ldc           #12
281: aastore
282: dup
283: iconst_5
284: ldc           #120
286: aastore
287: astore        28
289: aload         25
291: aload         28
293: invokevirtual #121
296: astore        29
298: aload         24
300: ldc           #38
302: ldc           #12
304: aload         28
306: invokevirtual #122
309: astore        30
311: iconst_5
312: anewarray     #119
315: dup
316: iconst_0
317: ldc           #13
319: aastore
320: dup
321: iconst_1
322: ldc           #32
324: aastore
325: dup
326: iconst_2
327: ldc           #10
329: aastore
330: dup
331: iconst_3
332: ldc           #43
334: aastore
335: dup
336: iconst_4
337: ldc           #58
339: aastore
340: astore        31
342: ldc           #10
344: aload         31
346: invokestatic  #123
349: istore        32
351: aload         30
353: ldc           #84
355: ldc           #13
357: aload         31
359: invokevirtual #122
362: astore        33
364: aload         31
366: checkcast     #124
369: invokestatic  #125
372: aload         31
374: checkcast     #124
377: invokestatic  #125
380: aload         20
382: ldc           #126
384: aload         31
386: invokevirtual #127
389: astore        34
391: aload         5
393: aload         31
395: invokevirtual #121
398: astore        35
400: ldc           #82
402: aload         31
404: invokestatic  #123
407: istore        36
409: aload_1
410: ldc           #38
412: aload         31
414: invokevirtual #127
417: astore        37
419: aload_1
420: ldc           #157
422: invokevirtual #150
425: astore        38
427: ldc           #234
429: ldc           #86
431: aload_1
432: invokestatic  #94
435: astore        39
437: aload_1
438: invokestatic  #15
441: aload_2
442: invokestatic  #15
445: new           #16
448: dup
449: invokespecial #17
452: ldc           #18
454: invokevirtual #19
457: aload_3
458: invokevirtual #19
461: ldc           #67
463: invokevirtual #19
466: invokevirtual #22
469: aload_3
470: ldc           #25
472: invokestatic  #68
475: new           #16
478: dup
479: invokespecial #17
482: ldc           #18
484: invokevirtual #19
487: aload         4
489: invokevirtual #19
492: ldc           #172
494: invokevirtual #19
497: invokevirtual #22
500: aload         4
502: ldc           #173
504: invokestatic  #68
507: aload         5
509: invokestatic  #15
512: new           #16
515: dup
516: invokespecial #17
519: ldc           #18
521: invokevirtual #19
524: aload         6
526: invokevirtual #19
529: ldc           #128
531: invokevirtual #19
534: invokevirtual #22
537: aload         6
539: ldc           #43
541: invokestatic  #68
544: new           #16
547: dup
548: invokespecial #17
551: ldc           #18
553: invokevirtual #19
556: iload         7
558: invokevirtual #20
561: ldc           #21
563: invokevirtual #19
566: iconst_0
567: invokevirtual #20
570: ldc           #18
572: invokevirtual #19
575: invokevirtual #22
578: iload         7
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #23
591: aload         8
593: invokestatic  #15
596: aload         9
598: invokestatic  #15
601: aload         10
603: invokestatic  #15
606: aload         11
608: invokestatic  #15
611: aload         12
613: invokestatic  #15
616: aload         13
618: invokestatic  #15
621: aload         14
623: invokestatic  #15
626: aload         15
628: invokestatic  #15
631: aload         16
633: invokestatic  #15
636: aload         17
638: invokestatic  #15
641: aload         18
643: invokestatic  #15
646: new           #16
649: dup
650: invokespecial #17
653: ldc           #18
655: invokevirtual #19
658: aload         19
660: invokevirtual #19
663: ldc           #184
665: invokevirtual #19
668: invokevirtual #22
671: aload         19
673: ldc           #58
675: invokestatic  #68
678: aload         20
680: invokestatic  #15
683: new           #16
686: dup
687: invokespecial #17
690: ldc           #18
692: invokevirtual #19
695: aload         21
697: invokevirtual #19
700: ldc           #111
702: invokevirtual #19
705: invokevirtual #22
708: aload         21
710: ldc           #65
712: invokestatic  #68
715: aload         22
717: invokestatic  #15
720: aload         23
722: invokestatic  #15
725: aload         24
727: invokestatic  #15
730: aload         25
732: invokestatic  #15
735: new           #16
738: dup
739: invokespecial #17
742: ldc           #18
744: invokevirtual #19
747: aload         26
749: invokevirtual #19
752: ldc           #128
754: invokevirtual #19
757: invokevirtual #22
760: aload         26
762: ldc           #43
764: invokestatic  #68
767: aload         27
769: invokestatic  #15
772: aload         28
774: invokestatic  #15
777: aload         29
779: invokestatic  #15
782: aload         30
784: invokestatic  #15
787: aload         31
789: invokestatic  #15
792: new           #16
795: dup
796: invokespecial #17
799: ldc           #18
801: invokevirtual #19
804: iload         32
806: invokevirtual #20
809: ldc           #21
811: invokevirtual #19
814: iconst_1
815: invokevirtual #20
818: ldc           #18
820: invokevirtual #19
823: invokevirtual #22
826: iload         32
828: iconst_1
829: if_icmpne     836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #23
840: aload         33
842: invokestatic  #15
845: aload         34
847: invokestatic  #15
850: aload         35
852: invokestatic  #15
855: new           #16
858: dup
859: invokespecial #17
862: ldc           #18
864: invokevirtual #19
867: iload         36
869: invokevirtual #20
872: ldc           #21
874: invokevirtual #19
877: iconst_0
878: invokevirtual #20
881: ldc           #18
883: invokevirtual #19
886: invokevirtual #22
889: iload         36
891: ifne          898
894: iconst_1
895: goto          899
898: iconst_0
899: invokestatic  #23
902: aload         37
904: invokestatic  #15
907: aload         38
909: invokestatic  #15
912: new           #16
915: dup
916: invokespecial #17
919: ldc           #18
921: invokevirtual #19
924: aload         39
926: invokevirtual #19
929: ldc           #235
931: invokevirtual #19
934: invokevirtual #22
937: aload         39
939: ldc           #236
941: invokestatic  #68
944: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test037
Start line: 1550
End line: 1581
Method source code: 
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean21 = whitelist19.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist25 = whitelist19.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        java.lang.String[] strArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist28 = whitelist25.addAttributes("[!=hi!]", strArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(whitelist25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #237
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: ldc           #32
36: aload_2
37: invokestatic  #81
40: astore_3
41: aload_2
42: ldc           #82
44: invokevirtual #83
47: istore        4
49: iconst_5
50: anewarray     #119
53: dup
54: iconst_0
55: ldc           #13
57: aastore
58: dup
59: iconst_1
60: ldc           #32
62: aastore
63: dup
64: iconst_2
65: ldc           #10
67: aastore
68: dup
69: iconst_3
70: ldc           #43
72: aastore
73: dup
74: iconst_4
75: ldc           #58
77: aastore
78: astore        5
80: ldc           #10
82: aload         5
84: invokestatic  #123
87: istore        6
89: ldc           #60
91: aload         5
93: invokestatic  #123
96: istore        7
98: aload_2
99: ldc           #238
101: ldc           #32
103: aload         5
105: invokevirtual #122
108: astore        8
110: aload         8
112: ldc           #12
114: invokevirtual #83
117: istore        9
119: aload         8
121: ldc           #86
123: ldc           #239
125: ldc           #240
127: invokevirtual #11
130: astore        10
132: aconst_null
133: astore        11
135: aload         10
137: ldc           #241
139: aload         11
141: invokevirtual #127
144: astore        12
146: ldc           #34
148: invokestatic  #35
151: goto          156
154: astore        12
156: aload_1
157: invokestatic  #15
160: aload_2
161: invokestatic  #15
164: new           #16
167: dup
168: invokespecial #17
171: ldc           #18
173: invokevirtual #19
176: aload_3
177: invokevirtual #19
180: ldc           #85
182: invokevirtual #19
185: invokevirtual #22
188: aload_3
189: ldc           #86
191: invokestatic  #68
194: new           #16
197: dup
198: invokespecial #17
201: ldc           #18
203: invokevirtual #19
206: iload         4
208: invokevirtual #20
211: ldc           #21
213: invokevirtual #19
216: iconst_0
217: invokevirtual #20
220: ldc           #18
222: invokevirtual #19
225: invokevirtual #22
228: iload         4
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #23
241: aload         5
243: invokestatic  #15
246: new           #16
249: dup
250: invokespecial #17
253: ldc           #18
255: invokevirtual #19
258: iload         6
260: invokevirtual #20
263: ldc           #21
265: invokevirtual #19
268: iconst_1
269: invokevirtual #20
272: ldc           #18
274: invokevirtual #19
277: invokevirtual #22
280: iload         6
282: iconst_1
283: if_icmpne     290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #23
294: new           #16
297: dup
298: invokespecial #17
301: ldc           #18
303: invokevirtual #19
306: iload         7
308: invokevirtual #20
311: ldc           #21
313: invokevirtual #19
316: iconst_0
317: invokevirtual #20
320: ldc           #18
322: invokevirtual #19
325: invokevirtual #22
328: iload         7
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #23
341: aload         8
343: invokestatic  #15
346: new           #16
349: dup
350: invokespecial #17
353: ldc           #18
355: invokevirtual #19
358: iload         9
360: invokevirtual #20
363: ldc           #21
365: invokevirtual #19
368: iconst_0
369: invokevirtual #20
372: ldc           #18
374: invokevirtual #19
377: invokevirtual #22
380: iload         9
382: ifne          389
385: iconst_1
386: goto          390
389: iconst_0
390: invokestatic  #23
393: aload         10
395: invokestatic  #15
398: return
Exception table:
from    to  target type
135   151   154   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test038
Start line: 1584
End line: 1633
Method source code: 
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        java.util.regex.Pattern pattern36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.select.Elements elements37 = document25.getElementsMatchingText(pattern36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #242
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: new           #40
37: dup
38: aload_2
39: invokespecial #41
42: astore_3
43: new           #42
46: dup
47: ldc           #43
49: ldc           #32
51: invokespecial #44
54: astore        4
56: ldc           #12
58: invokestatic  #45
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         4
110: aload         5
112: aload         6
114: invokevirtual #46
117: istore        11
119: aload_3
120: aload         6
122: invokevirtual #47
125: astore        12
127: ldc           #25
129: ldc           #12
131: invokestatic  #26
134: astore        13
136: ldc           #12
138: aload         13
140: ldc           #12
142: invokestatic  #27
145: astore        14
147: aload         13
149: ldc           #12
151: invokevirtual #28
154: astore        15
156: aload         13
158: ldc           #25
160: invokevirtual #29
163: astore        16
165: aload         13
167: invokevirtual #72
170: astore        17
172: aload         13
174: invokevirtual #73
177: astore        18
179: aload         13
181: invokevirtual #74
184: astore        19
186: aload_3
187: aload         13
189: invokevirtual #47
192: astore        20
194: aconst_null
195: astore        21
197: aload         13
199: aload         21
201: invokevirtual #243
204: astore        22
206: ldc           #76
208: invokestatic  #35
211: goto          216
214: astore        22
216: aload_1
217: invokestatic  #15
220: aload_2
221: invokestatic  #15
224: aload         5
226: invokestatic  #15
229: aload         6
231: invokestatic  #15
234: aload         7
236: invokestatic  #15
239: aload         8
241: invokestatic  #15
244: aload         9
246: invokestatic  #15
249: aload         10
251: invokestatic  #15
254: new           #16
257: dup
258: invokespecial #17
261: ldc           #18
263: invokevirtual #19
266: iload         11
268: invokevirtual #20
271: ldc           #21
273: invokevirtual #19
276: iconst_0
277: invokevirtual #20
280: ldc           #18
282: invokevirtual #19
285: invokevirtual #22
288: iload         11
290: ifne          297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #23
301: aload         12
303: invokestatic  #15
306: aload         13
308: invokestatic  #15
311: aload         14
313: invokestatic  #15
316: aload         15
318: invokestatic  #15
321: aload         16
323: invokestatic  #15
326: new           #16
329: dup
330: invokespecial #17
333: ldc           #18
335: invokevirtual #19
338: aload         17
340: invokevirtual #19
343: ldc           #78
345: invokevirtual #19
348: invokevirtual #22
351: aload         17
353: ldc           #10
355: invokestatic  #68
358: new           #16
361: dup
362: invokespecial #17
365: ldc           #18
367: invokevirtual #19
370: aload         18
372: invokevirtual #19
375: ldc           #67
377: invokevirtual #19
380: invokevirtual #22
383: aload         18
385: ldc           #25
387: invokestatic  #68
390: aload         19
392: invokestatic  #79
395: aload         20
397: invokestatic  #15
400: return
Exception table:
from    to  target type
197   211   214   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test039
Start line: 1636
End line: 1658
Method source code: 
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        java.lang.String str5 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist4);
        boolean boolean7 = whitelist4.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray17 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean18 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        boolean boolean19 = org.jsoup.helper.StringUtil.in(" hi!", strArray17);
        org.jsoup.safety.Whitelist whitelist20 = whitelist4.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray17, "          ");
        boolean boolean23 = org.jsoup.helper.StringUtil.in(".", strArray17);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "." + "'", str5, ".");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #244
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: ldc           #32
36: aload_2
37: invokestatic  #81
40: astore_3
41: aload_2
42: ldc           #82
44: invokevirtual #83
47: istore        4
49: iconst_5
50: anewarray     #119
53: dup
54: iconst_0
55: ldc           #13
57: aastore
58: dup
59: iconst_1
60: ldc           #32
62: aastore
63: dup
64: iconst_2
65: ldc           #10
67: aastore
68: dup
69: iconst_3
70: ldc           #43
72: aastore
73: dup
74: iconst_4
75: ldc           #58
77: aastore
78: astore        5
80: ldc           #10
82: aload         5
84: invokestatic  #123
87: istore        6
89: ldc           #60
91: aload         5
93: invokestatic  #123
96: istore        7
98: aload_2
99: ldc           #238
101: ldc           #32
103: aload         5
105: invokevirtual #122
108: astore        8
110: aload         5
112: checkcast     #124
115: ldc           #239
117: invokestatic  #245
120: ldc           #86
122: aload         5
124: invokestatic  #123
127: istore        9
129: aload_1
130: invokestatic  #15
133: aload_2
134: invokestatic  #15
137: new           #16
140: dup
141: invokespecial #17
144: ldc           #18
146: invokevirtual #19
149: aload_3
150: invokevirtual #19
153: ldc           #85
155: invokevirtual #19
158: invokevirtual #22
161: aload_3
162: ldc           #86
164: invokestatic  #68
167: new           #16
170: dup
171: invokespecial #17
174: ldc           #18
176: invokevirtual #19
179: iload         4
181: invokevirtual #20
184: ldc           #21
186: invokevirtual #19
189: iconst_0
190: invokevirtual #20
193: ldc           #18
195: invokevirtual #19
198: invokevirtual #22
201: iload         4
203: ifne          210
206: iconst_1
207: goto          211
210: iconst_0
211: invokestatic  #23
214: aload         5
216: invokestatic  #15
219: new           #16
222: dup
223: invokespecial #17
226: ldc           #18
228: invokevirtual #19
231: iload         6
233: invokevirtual #20
236: ldc           #21
238: invokevirtual #19
241: iconst_1
242: invokevirtual #20
245: ldc           #18
247: invokevirtual #19
250: invokevirtual #22
253: iload         6
255: iconst_1
256: if_icmpne     263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #23
267: new           #16
270: dup
271: invokespecial #17
274: ldc           #18
276: invokevirtual #19
279: iload         7
281: invokevirtual #20
284: ldc           #21
286: invokevirtual #19
289: iconst_0
290: invokevirtual #20
293: ldc           #18
295: invokevirtual #19
298: invokevirtual #22
301: iload         7
303: ifne          310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #23
314: aload         8
316: invokestatic  #15
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: iload         9
333: invokevirtual #20
336: ldc           #21
338: invokevirtual #19
341: iconst_0
342: invokevirtual #20
345: ldc           #18
347: invokevirtual #19
350: invokevirtual #22
353: iload         9
355: ifne          362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #23
366: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test040
Start line: 1661
End line: 1688
Method source code: 
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        java.lang.String str5 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist4);
        boolean boolean7 = whitelist4.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray17 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean18 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        boolean boolean19 = org.jsoup.helper.StringUtil.in(" hi!", strArray17);
        org.jsoup.safety.Whitelist whitelist20 = whitelist4.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        boolean boolean22 = whitelist20.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist26 = whitelist20.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(false);
        java.lang.String str29 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist28);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "." + "'", str5, ".");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "." + "'", str29, ".");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #246
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: ldc           #32
36: aload_2
37: invokestatic  #81
40: astore_3
41: aload_2
42: ldc           #82
44: invokevirtual #83
47: istore        4
49: iconst_5
50: anewarray     #119
53: dup
54: iconst_0
55: ldc           #13
57: aastore
58: dup
59: iconst_1
60: ldc           #32
62: aastore
63: dup
64: iconst_2
65: ldc           #10
67: aastore
68: dup
69: iconst_3
70: ldc           #43
72: aastore
73: dup
74: iconst_4
75: ldc           #58
77: aastore
78: astore        5
80: ldc           #10
82: aload         5
84: invokestatic  #123
87: istore        6
89: ldc           #60
91: aload         5
93: invokestatic  #123
96: istore        7
98: aload_2
99: ldc           #238
101: ldc           #32
103: aload         5
105: invokevirtual #122
108: astore        8
110: aload         8
112: ldc           #12
114: invokevirtual #83
117: istore        9
119: aload         8
121: ldc           #86
123: ldc           #239
125: ldc           #240
127: invokevirtual #11
130: astore        10
132: aload         10
134: iconst_0
135: invokevirtual #9
138: astore        11
140: ldc           #32
142: aload         11
144: invokestatic  #81
147: astore        12
149: aload_1
150: invokestatic  #15
153: aload_2
154: invokestatic  #15
157: new           #16
160: dup
161: invokespecial #17
164: ldc           #18
166: invokevirtual #19
169: aload_3
170: invokevirtual #19
173: ldc           #85
175: invokevirtual #19
178: invokevirtual #22
181: aload_3
182: ldc           #86
184: invokestatic  #68
187: new           #16
190: dup
191: invokespecial #17
194: ldc           #18
196: invokevirtual #19
199: iload         4
201: invokevirtual #20
204: ldc           #21
206: invokevirtual #19
209: iconst_0
210: invokevirtual #20
213: ldc           #18
215: invokevirtual #19
218: invokevirtual #22
221: iload         4
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #23
234: aload         5
236: invokestatic  #15
239: new           #16
242: dup
243: invokespecial #17
246: ldc           #18
248: invokevirtual #19
251: iload         6
253: invokevirtual #20
256: ldc           #21
258: invokevirtual #19
261: iconst_1
262: invokevirtual #20
265: ldc           #18
267: invokevirtual #19
270: invokevirtual #22
273: iload         6
275: iconst_1
276: if_icmpne     283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #23
287: new           #16
290: dup
291: invokespecial #17
294: ldc           #18
296: invokevirtual #19
299: iload         7
301: invokevirtual #20
304: ldc           #21
306: invokevirtual #19
309: iconst_0
310: invokevirtual #20
313: ldc           #18
315: invokevirtual #19
318: invokevirtual #22
321: iload         7
323: ifne          330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #23
334: aload         8
336: invokestatic  #15
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: iload         9
353: invokevirtual #20
356: ldc           #21
358: invokevirtual #19
361: iconst_0
362: invokevirtual #20
365: ldc           #18
367: invokevirtual #19
370: invokevirtual #22
373: iload         9
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #23
386: aload         10
388: invokestatic  #15
391: aload         11
393: invokestatic  #15
396: new           #16
399: dup
400: invokespecial #17
403: ldc           #18
405: invokevirtual #19
408: aload         12
410: invokevirtual #19
413: ldc           #85
415: invokevirtual #19
418: invokevirtual #22
421: aload         12
423: ldc           #86
425: invokestatic  #68
428: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test041
Start line: 1691
End line: 1780
Method source code: 
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean21 = whitelist19.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str27 = org.jsoup.Jsoup.clean(":lt(32)", whitelist26);
        boolean boolean29 = whitelist26.isSafeTag("");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element36 = document33.empty();
        org.jsoup.nodes.Element element38 = document33.removeClass("hi!");
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.tagName("hi!");
        org.jsoup.nodes.Element element48 = document42.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = document42.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = outputSettings49.prettyPrint(false);
        org.jsoup.nodes.Document document52 = document33.outputSettings(outputSettings51);
        java.lang.String str53 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist26, outputSettings51);
        org.jsoup.safety.Whitelist whitelist56 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str57 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist56);
        org.jsoup.safety.Whitelist whitelist59 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist61 = whitelist59.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist63 = whitelist61.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist67 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str68 = org.jsoup.Jsoup.clean(":lt(32)", whitelist67);
        org.jsoup.safety.Whitelist whitelist72 = whitelist67.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray79 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist80 = whitelist67.addTags(strArray79);
        org.jsoup.safety.Whitelist whitelist81 = whitelist63.addProtocols(":matchesOwn(null", "hi!", strArray79);
        java.lang.String[] strArray90 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean91 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray90);
        org.jsoup.safety.Whitelist whitelist92 = whitelist81.addProtocols("\n<!--hi!-->", "#document", strArray90);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray90);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray90);
        org.jsoup.safety.Whitelist whitelist95 = whitelist56.addAttributes("*", strArray90);
        org.jsoup.safety.Whitelist whitelist96 = whitelist26.addTags(strArray90);
        boolean boolean97 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", strArray90);
        org.jsoup.safety.Whitelist whitelist98 = whitelist19.addTags(strArray90);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":lt(32)" + "'", str27, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[:lt(32)]" + "'", str53, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!$=   ]" + "'", str57, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ":lt(32)" + "'", str68, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(whitelist92);
        org.junit.Assert.assertNotNull(whitelist95);
        org.junit.Assert.assertNotNull(whitelist96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(whitelist98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #247
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: ldc           #32
36: aload_2
37: invokestatic  #81
40: astore_3
41: aload_2
42: ldc           #82
44: invokevirtual #83
47: istore        4
49: iconst_5
50: anewarray     #119
53: dup
54: iconst_0
55: ldc           #13
57: aastore
58: dup
59: iconst_1
60: ldc           #32
62: aastore
63: dup
64: iconst_2
65: ldc           #10
67: aastore
68: dup
69: iconst_3
70: ldc           #43
72: aastore
73: dup
74: iconst_4
75: ldc           #58
77: aastore
78: astore        5
80: ldc           #10
82: aload         5
84: invokestatic  #123
87: istore        6
89: ldc           #60
91: aload         5
93: invokestatic  #123
96: istore        7
98: aload_2
99: ldc           #238
101: ldc           #32
103: aload         5
105: invokevirtual #122
108: astore        8
110: aload         8
112: ldc           #25
114: invokevirtual #83
117: istore        9
119: invokestatic  #118
122: astore        10
124: ldc           #43
126: aload         10
128: invokestatic  #81
131: astore        11
133: aload         10
135: ldc           #25
137: invokevirtual #83
140: istore        12
142: ldc           #25
144: ldc           #12
146: invokestatic  #26
149: astore        13
151: ldc           #12
153: aload         13
155: ldc           #12
157: invokestatic  #27
160: astore        14
162: aload         13
164: invokevirtual #103
167: astore        15
169: aload         13
171: ldc           #12
173: invokevirtual #59
176: astore        16
178: ldc           #25
180: ldc           #12
182: invokestatic  #26
185: astore        17
187: ldc           #12
189: aload         17
191: ldc           #12
193: invokestatic  #27
196: astore        18
198: aload         17
200: ldc           #12
202: invokevirtual #28
205: astore        19
207: aload         17
209: ldc           #25
211: invokevirtual #29
214: astore        20
216: aload         17
218: invokevirtual #30
221: astore        21
223: aload         21
225: iconst_0
226: invokevirtual #31
229: astore        22
231: aload         13
233: aload         22
235: invokevirtual #175
238: astore        23
240: ldc           #58
242: ldc           #126
244: aload         10
246: aload         22
248: invokestatic  #33
251: astore        24
253: invokestatic  #8
256: astore        25
258: ldc           #109
260: ldc           #110
262: aload         25
264: invokestatic  #94
267: astore        26
269: invokestatic  #8
272: astore        27
274: aload         27
276: iconst_1
277: invokevirtual #9
280: astore        28
282: aload         28
284: iconst_0
285: invokevirtual #9
288: astore        29
290: invokestatic  #118
293: astore        30
295: ldc           #43
297: aload         30
299: invokestatic  #81
302: astore        31
304: aload         30
306: ldc           #43
308: ldc           #12
310: ldc           #32
312: invokevirtual #11
315: astore        32
317: bipush        6
319: anewarray     #119
322: dup
323: iconst_0
324: ldc           #109
326: aastore
327: dup
328: iconst_1
329: ldc           #10
331: aastore
332: dup
333: iconst_2
334: ldc           #13
336: aastore
337: dup
338: iconst_3
339: ldc           #50
341: aastore
342: dup
343: iconst_4
344: ldc           #12
346: aastore
347: dup
348: iconst_5
349: ldc           #120
351: aastore
352: astore        33
354: aload         30
356: aload         33
358: invokevirtual #121
361: astore        34
363: aload         29
365: ldc           #38
367: ldc           #12
369: aload         33
371: invokevirtual #122
374: astore        35
376: iconst_5
377: anewarray     #119
380: dup
381: iconst_0
382: ldc           #13
384: aastore
385: dup
386: iconst_1
387: ldc           #32
389: aastore
390: dup
391: iconst_2
392: ldc           #10
394: aastore
395: dup
396: iconst_3
397: ldc           #43
399: aastore
400: dup
401: iconst_4
402: ldc           #58
404: aastore
405: astore        36
407: ldc           #10
409: aload         36
411: invokestatic  #123
414: istore        37
416: aload         35
418: ldc           #84
420: ldc           #13
422: aload         36
424: invokevirtual #122
427: astore        38
429: aload         36
431: checkcast     #124
434: invokestatic  #125
437: aload         36
439: checkcast     #124
442: invokestatic  #125
445: aload         25
447: ldc           #126
449: aload         36
451: invokevirtual #127
454: astore        39
456: aload         10
458: aload         36
460: invokevirtual #121
463: astore        40
465: ldc           #82
467: aload         36
469: invokestatic  #123
472: istore        41
474: aload         8
476: aload         36
478: invokevirtual #121
481: astore        42
483: aload_1
484: invokestatic  #15
487: aload_2
488: invokestatic  #15
491: new           #16
494: dup
495: invokespecial #17
498: ldc           #18
500: invokevirtual #19
503: aload_3
504: invokevirtual #19
507: ldc           #85
509: invokevirtual #19
512: invokevirtual #22
515: aload_3
516: ldc           #86
518: invokestatic  #68
521: new           #16
524: dup
525: invokespecial #17
528: ldc           #18
530: invokevirtual #19
533: iload         4
535: invokevirtual #20
538: ldc           #21
540: invokevirtual #19
543: iconst_0
544: invokevirtual #20
547: ldc           #18
549: invokevirtual #19
552: invokevirtual #22
555: iload         4
557: ifne          564
560: iconst_1
561: goto          565
564: iconst_0
565: invokestatic  #23
568: aload         5
570: invokestatic  #15
573: new           #16
576: dup
577: invokespecial #17
580: ldc           #18
582: invokevirtual #19
585: iload         6
587: invokevirtual #20
590: ldc           #21
592: invokevirtual #19
595: iconst_1
596: invokevirtual #20
599: ldc           #18
601: invokevirtual #19
604: invokevirtual #22
607: iload         6
609: iconst_1
610: if_icmpne     617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #23
621: new           #16
624: dup
625: invokespecial #17
628: ldc           #18
630: invokevirtual #19
633: iload         7
635: invokevirtual #20
638: ldc           #21
640: invokevirtual #19
643: iconst_0
644: invokevirtual #20
647: ldc           #18
649: invokevirtual #19
652: invokevirtual #22
655: iload         7
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #23
668: aload         8
670: invokestatic  #15
673: new           #16
676: dup
677: invokespecial #17
680: ldc           #18
682: invokevirtual #19
685: iload         9
687: invokevirtual #20
690: ldc           #21
692: invokevirtual #19
695: iconst_0
696: invokevirtual #20
699: ldc           #18
701: invokevirtual #19
704: invokevirtual #22
707: iload         9
709: ifne          716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #23
720: aload         10
722: invokestatic  #15
725: new           #16
728: dup
729: invokespecial #17
732: ldc           #18
734: invokevirtual #19
737: aload         11
739: invokevirtual #19
742: ldc           #128
744: invokevirtual #19
747: invokevirtual #22
750: aload         11
752: ldc           #43
754: invokestatic  #68
757: new           #16
760: dup
761: invokespecial #17
764: ldc           #18
766: invokevirtual #19
769: iload         12
771: invokevirtual #20
774: ldc           #21
776: invokevirtual #19
779: iconst_0
780: invokevirtual #20
783: ldc           #18
785: invokevirtual #19
788: invokevirtual #22
791: iload         12
793: ifne          800
796: iconst_1
797: goto          801
800: iconst_0
801: invokestatic  #23
804: aload         13
806: invokestatic  #15
809: aload         14
811: invokestatic  #15
814: aload         15
816: invokestatic  #15
819: aload         16
821: invokestatic  #15
824: aload         17
826: invokestatic  #15
829: aload         18
831: invokestatic  #15
834: aload         19
836: invokestatic  #15
839: aload         20
841: invokestatic  #15
844: aload         21
846: invokestatic  #15
849: aload         22
851: invokestatic  #15
854: aload         23
856: invokestatic  #15
859: new           #16
862: dup
863: invokespecial #17
866: ldc           #18
868: invokevirtual #19
871: aload         24
873: invokevirtual #19
876: ldc           #184
878: invokevirtual #19
881: invokevirtual #22
884: aload         24
886: ldc           #58
888: invokestatic  #68
891: aload         25
893: invokestatic  #15
896: new           #16
899: dup
900: invokespecial #17
903: ldc           #18
905: invokevirtual #19
908: aload         26
910: invokevirtual #19
913: ldc           #111
915: invokevirtual #19
918: invokevirtual #22
921: aload         26
923: ldc           #65
925: invokestatic  #68
928: aload         27
930: invokestatic  #15
933: aload         28
935: invokestatic  #15
938: aload         29
940: invokestatic  #15
943: aload         30
945: invokestatic  #15
948: new           #16
951: dup
952: invokespecial #17
955: ldc           #18
957: invokevirtual #19
960: aload         31
962: invokevirtual #19
965: ldc           #128
967: invokevirtual #19
970: invokevirtual #22
973: aload         31
975: ldc           #43
977: invokestatic  #68
980: aload         32
982: invokestatic  #15
985: aload         33
987: invokestatic  #15
990: aload         34
992: invokestatic  #15
995: aload         35
997: invokestatic  #15
1000: aload         36
1002: invokestatic  #15
1005: new           #16
1008: dup
1009: invokespecial #17
1012: ldc           #18
1014: invokevirtual #19
1017: iload         37
1019: invokevirtual #20
1022: ldc           #21
1024: invokevirtual #19
1027: iconst_1
1028: invokevirtual #20
1031: ldc           #18
1033: invokevirtual #19
1036: invokevirtual #22
1039: iload         37
1041: iconst_1
1042: if_icmpne     1049
1045: iconst_1
1046: goto          1050
1049: iconst_0
1050: invokestatic  #23
1053: aload         38
1055: invokestatic  #15
1058: aload         39
1060: invokestatic  #15
1063: aload         40
1065: invokestatic  #15
1068: new           #16
1071: dup
1072: invokespecial #17
1075: ldc           #18
1077: invokevirtual #19
1080: iload         41
1082: invokevirtual #20
1085: ldc           #21
1087: invokevirtual #19
1090: iconst_0
1091: invokevirtual #20
1094: ldc           #18
1096: invokevirtual #19
1099: invokevirtual #22
1102: iload         41
1104: ifne          1111
1107: iconst_1
1108: goto          1112
1111: iconst_0
1112: invokestatic  #23
1115: aload         42
1117: invokestatic  #15
1120: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test042
Start line: 1783
End line: 1835
Method source code: 
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("");
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist11 = whitelist9.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist15 = whitelist9.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist19 = whitelist9.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str20 = org.jsoup.Jsoup.clean("hi!", whitelist9);
        org.jsoup.safety.Whitelist whitelist22 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist24 = whitelist22.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str31 = org.jsoup.Jsoup.clean(":lt(32)", whitelist30);
        org.jsoup.safety.Whitelist whitelist35 = whitelist30.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray42 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist43 = whitelist30.addTags(strArray42);
        org.jsoup.safety.Whitelist whitelist44 = whitelist26.addProtocols(":matchesOwn(null", "hi!", strArray42);
        java.lang.String[] strArray53 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean54 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray53);
        org.jsoup.safety.Whitelist whitelist55 = whitelist44.addProtocols("\n<!--hi!-->", "#document", strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.jsoup.safety.Whitelist whitelist58 = whitelist9.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray53);
        org.jsoup.safety.Whitelist whitelist59 = whitelist4.addAttributes("*", strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":lt(32)" + "'", str31, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #248
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #8
27: astore_1
28: aload_1
29: iconst_1
30: invokevirtual #9
33: astore_2
34: aload_2
35: iconst_0
36: invokevirtual #9
39: astore_3
40: aload_3
41: ldc           #25
43: invokevirtual #150
46: astore        4
48: invokestatic  #8
51: astore        5
53: aload         5
55: iconst_1
56: invokevirtual #9
59: astore        6
61: aload         5
63: ldc           #10
65: ldc           #10
67: ldc           #10
69: invokevirtual #11
72: astore        7
74: aload         5
76: ldc           #12
78: ldc           #13
80: ldc           #12
82: invokevirtual #11
85: astore        8
87: ldc           #12
89: aload         5
91: invokestatic  #81
94: astore        9
96: invokestatic  #8
99: astore        10
101: aload         10
103: iconst_1
104: invokevirtual #9
107: astore        11
109: aload         11
111: iconst_0
112: invokevirtual #9
115: astore        12
117: invokestatic  #118
120: astore        13
122: ldc           #43
124: aload         13
126: invokestatic  #81
129: astore        14
131: aload         13
133: ldc           #43
135: ldc           #12
137: ldc           #32
139: invokevirtual #11
142: astore        15
144: bipush        6
146: anewarray     #119
149: dup
150: iconst_0
151: ldc           #109
153: aastore
154: dup
155: iconst_1
156: ldc           #10
158: aastore
159: dup
160: iconst_2
161: ldc           #13
163: aastore
164: dup
165: iconst_3
166: ldc           #50
168: aastore
169: dup
170: iconst_4
171: ldc           #12
173: aastore
174: dup
175: iconst_5
176: ldc           #120
178: aastore
179: astore        16
181: aload         13
183: aload         16
185: invokevirtual #121
188: astore        17
190: aload         12
192: ldc           #38
194: ldc           #12
196: aload         16
198: invokevirtual #122
201: astore        18
203: iconst_5
204: anewarray     #119
207: dup
208: iconst_0
209: ldc           #13
211: aastore
212: dup
213: iconst_1
214: ldc           #32
216: aastore
217: dup
218: iconst_2
219: ldc           #10
221: aastore
222: dup
223: iconst_3
224: ldc           #43
226: aastore
227: dup
228: iconst_4
229: ldc           #58
231: aastore
232: astore        19
234: ldc           #10
236: aload         19
238: invokestatic  #123
241: istore        20
243: aload         18
245: ldc           #84
247: ldc           #13
249: aload         19
251: invokevirtual #122
254: astore        21
256: aload         19
258: checkcast     #124
261: invokestatic  #125
264: aload         19
266: checkcast     #124
269: invokestatic  #125
272: aload         5
274: ldc           #249
276: aload         19
278: invokevirtual #127
281: astore        22
283: aload_3
284: ldc           #126
286: aload         19
288: invokevirtual #127
291: astore        23
293: aload         19
295: checkcast     #124
298: invokestatic  #125
301: aload_1
302: invokestatic  #15
305: aload_2
306: invokestatic  #15
309: aload_3
310: invokestatic  #15
313: aload         4
315: invokestatic  #15
318: aload         5
320: invokestatic  #15
323: aload         6
325: invokestatic  #15
328: aload         7
330: invokestatic  #15
333: aload         8
335: invokestatic  #15
338: new           #16
341: dup
342: invokespecial #17
345: ldc           #18
347: invokevirtual #19
350: aload         9
352: invokevirtual #19
355: ldc           #211
357: invokevirtual #19
360: invokevirtual #22
363: aload         9
365: ldc           #12
367: invokestatic  #68
370: aload         10
372: invokestatic  #15
375: aload         11
377: invokestatic  #15
380: aload         12
382: invokestatic  #15
385: aload         13
387: invokestatic  #15
390: new           #16
393: dup
394: invokespecial #17
397: ldc           #18
399: invokevirtual #19
402: aload         14
404: invokevirtual #19
407: ldc           #128
409: invokevirtual #19
412: invokevirtual #22
415: aload         14
417: ldc           #43
419: invokestatic  #68
422: aload         15
424: invokestatic  #15
427: aload         16
429: invokestatic  #15
432: aload         17
434: invokestatic  #15
437: aload         18
439: invokestatic  #15
442: aload         19
444: invokestatic  #15
447: new           #16
450: dup
451: invokespecial #17
454: ldc           #18
456: invokevirtual #19
459: iload         20
461: invokevirtual #20
464: ldc           #21
466: invokevirtual #19
469: iconst_1
470: invokevirtual #20
473: ldc           #18
475: invokevirtual #19
478: invokevirtual #22
481: iload         20
483: iconst_1
484: if_icmpne     491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #23
495: aload         21
497: invokestatic  #15
500: aload         22
502: invokestatic  #15
505: aload         23
507: invokestatic  #15
510: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test043
Start line: 1838
End line: 1932
Method source code: 
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.text("");
        int int8 = element7.siblingIndex();
        org.jsoup.nodes.Element element9 = element7.parent();
        org.jsoup.select.Evaluator.AttributeWithValueStarting attributeWithValueStarting12 = new org.jsoup.select.Evaluator.AttributeWithValueStarting("<html>\n <head></head>\n <body></body>\n</html>", "<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document16 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList18 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document16, "hi!");
        org.jsoup.nodes.Element element19 = document16.empty();
        org.jsoup.nodes.Element element21 = element19.toggleClass("#document");
        org.jsoup.nodes.Element element23 = element21.tagName("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parseBodyFragment("");
        boolean boolean26 = attributeWithValueStarting12.matches(element21, (org.jsoup.nodes.Element) document25);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes33 = whitelist31.getEnforcedAttributes("#text");
        java.lang.String str34 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist31);
        java.lang.String str35 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist31);
        org.jsoup.select.Evaluator.Class class38 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.tagName("hi!");
        org.jsoup.nodes.Element element48 = document42.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = document42.outputSettings();
        org.jsoup.select.Elements elements51 = document42.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element53 = document42.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes54 = document42.attributes();
        org.jsoup.nodes.Element element56 = document42.prepend("[^hi!]");
        org.jsoup.nodes.Document document60 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList62 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document60, "hi!");
        org.jsoup.nodes.Element element64 = document60.tagName("hi!");
        org.jsoup.nodes.Element element66 = document60.append("");
        org.jsoup.nodes.Element element69 = document60.attr("#document", "#document");
        org.jsoup.nodes.Element element70 = document60.body();
        boolean boolean71 = class38.matches((org.jsoup.nodes.Element) document42, (org.jsoup.nodes.Element) document60);
        org.jsoup.nodes.Attribute attribute74 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean75 = whitelist31.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document42, attribute74);
        org.jsoup.nodes.Document document79 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList81 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document79, "hi!");
        org.jsoup.nodes.Element element83 = document79.text("");
        org.jsoup.select.Elements elements86 = document79.getElementsByAttributeValueEnding("[^hi!]", "#document");
        org.jsoup.nodes.Element element88 = document79.prependText("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        java.util.Map<java.lang.String, java.lang.String> strMap89 = element88.dataset();
        boolean boolean90 = attributeWithValueStarting12.matches((org.jsoup.nodes.Element) document42, element88);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node91 = element9.after((org.jsoup.nodes.Node) document42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(element9);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(nodeList18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertNotNull(attributes33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[    ^=hi!]" + "'", str35, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(elements51);
        org.junit.Assert.assertNull(element53);
        org.junit.Assert.assertNotNull(attributes54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(document60);
        org.junit.Assert.assertNotNull(nodeList62);
        org.junit.Assert.assertNotNull(element64);
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(attribute74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(document79);
        org.junit.Assert.assertNotNull(nodeList81);
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertNotNull(elements86);
        org.junit.Assert.assertNotNull(element88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: ldc           #25
26: ldc           #12
28: invokestatic  #26
31: astore_1
32: ldc           #12
34: aload_1
35: ldc           #12
37: invokestatic  #27
40: astore_2
41: aload_1
42: ldc           #25
44: invokevirtual #64
47: astore_3
48: aload_3
49: invokevirtual #251
52: istore        4
54: aload_3
55: invokevirtual #252
58: astore        5
60: new           #253
63: dup
64: ldc           #10
66: ldc           #254
68: invokespecial #255
71: astore        6
73: ldc           #25
75: ldc           #12
77: invokestatic  #26
80: astore        7
82: ldc           #12
84: aload         7
86: ldc           #12
88: invokestatic  #27
91: astore        8
93: aload         7
95: invokevirtual #103
98: astore        9
100: aload         9
102: ldc           #13
104: invokevirtual #177
107: astore        10
109: aload         10
111: ldc           #249
113: invokevirtual #256
116: astore        11
118: ldc           #25
120: invokestatic  #193
123: astore        12
125: aload         6
127: aload         10
129: aload         12
131: invokevirtual #257
134: istore        13
136: invokestatic  #118
139: astore        14
141: aload         14
143: ldc           #51
145: invokevirtual #150
148: astore        15
150: ldc           #25
152: ldc           #157
154: aload         14
156: invokestatic  #94
159: astore        16
161: ldc           #158
163: ldc           #159
165: aload         14
167: invokestatic  #94
170: astore        17
172: new           #160
175: dup
176: ldc           #10
178: invokespecial #161
181: astore        18
183: ldc           #25
185: ldc           #12
187: invokestatic  #26
190: astore        19
192: ldc           #12
194: aload         19
196: ldc           #12
198: invokestatic  #27
201: astore        20
203: aload         19
205: ldc           #12
207: invokevirtual #28
210: astore        21
212: aload         19
214: ldc           #25
216: invokevirtual #29
219: astore        22
221: aload         19
223: invokevirtual #30
226: astore        23
228: aload         19
230: iconst_m1
231: invokevirtual #162
234: astore        24
236: aload         19
238: ldc           #10
240: invokevirtual #163
243: astore        25
245: aload         19
247: invokevirtual #164
250: astore        26
252: aload         19
254: ldc           #50
256: invokevirtual #165
259: astore        27
261: ldc           #25
263: ldc           #12
265: invokestatic  #26
268: astore        28
270: ldc           #12
272: aload         28
274: ldc           #12
276: invokestatic  #27
279: astore        29
281: aload         28
283: ldc           #12
285: invokevirtual #28
288: astore        30
290: aload         28
292: ldc           #25
294: invokevirtual #29
297: astore        31
299: aload         28
301: ldc           #13
303: ldc           #13
305: invokevirtual #56
308: astore        32
310: aload         28
312: invokevirtual #166
315: astore        33
317: aload         18
319: aload         19
321: aload         28
323: invokevirtual #167
326: istore        34
328: ldc           #114
330: ldc           #25
332: invokestatic  #168
335: astore        35
337: aload         14
339: ldc           #110
341: aload         19
343: aload         35
345: invokevirtual #169
348: istore        36
350: ldc           #25
352: ldc           #12
354: invokestatic  #26
357: astore        37
359: ldc           #12
361: aload         37
363: ldc           #12
365: invokestatic  #27
368: astore        38
370: aload         37
372: ldc           #25
374: invokevirtual #64
377: astore        39
379: aload         37
381: ldc           #50
383: ldc           #13
385: invokevirtual #153
388: astore        40
390: aload         37
392: ldc           #109
394: invokevirtual #258
397: astore        41
399: aload         41
401: invokevirtual #259
404: astore        42
406: aload         6
408: aload         19
410: aload         41
412: invokevirtual #257
415: istore        43
417: aload         5
419: aload         19
421: invokevirtual #260
424: astore        44
426: ldc           #76
428: invokestatic  #35
431: goto          436
434: astore        44
436: aload_1
437: invokestatic  #15
440: aload_2
441: invokestatic  #15
444: aload_3
445: invokestatic  #15
448: new           #16
451: dup
452: invokespecial #17
455: ldc           #18
457: invokevirtual #19
460: iload         4
462: invokevirtual #134
465: ldc           #21
467: invokevirtual #19
470: iconst_0
471: invokevirtual #134
474: ldc           #18
476: invokevirtual #19
479: invokevirtual #22
482: iload         4
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #23
495: aload         5
497: invokestatic  #79
500: aload         7
502: invokestatic  #15
505: aload         8
507: invokestatic  #15
510: aload         9
512: invokestatic  #15
515: aload         10
517: invokestatic  #15
520: aload         11
522: invokestatic  #15
525: aload         12
527: invokestatic  #15
530: new           #16
533: dup
534: invokespecial #17
537: ldc           #18
539: invokevirtual #19
542: iload         13
544: invokevirtual #20
547: ldc           #21
549: invokevirtual #19
552: iconst_0
553: invokevirtual #20
556: ldc           #18
558: invokevirtual #19
561: invokevirtual #22
564: iload         13
566: ifne          573
569: iconst_1
570: goto          574
573: iconst_0
574: invokestatic  #23
577: aload         14
579: invokestatic  #15
582: aload         15
584: invokestatic  #15
587: new           #16
590: dup
591: invokespecial #17
594: ldc           #18
596: invokevirtual #19
599: aload         16
601: invokevirtual #19
604: ldc           #67
606: invokevirtual #19
609: invokevirtual #22
612: aload         16
614: ldc           #25
616: invokestatic  #68
619: new           #16
622: dup
623: invokespecial #17
626: ldc           #18
628: invokevirtual #19
631: aload         17
633: invokevirtual #19
636: ldc           #172
638: invokevirtual #19
641: invokevirtual #22
644: aload         17
646: ldc           #173
648: invokestatic  #68
651: aload         19
653: invokestatic  #15
656: aload         20
658: invokestatic  #15
661: aload         21
663: invokestatic  #15
666: aload         22
668: invokestatic  #15
671: aload         23
673: invokestatic  #15
676: aload         24
678: invokestatic  #15
681: aload         25
683: invokestatic  #79
686: aload         26
688: invokestatic  #15
691: aload         27
693: invokestatic  #15
696: aload         28
698: invokestatic  #15
701: aload         29
703: invokestatic  #15
706: aload         30
708: invokestatic  #15
711: aload         31
713: invokestatic  #15
716: aload         32
718: invokestatic  #15
721: aload         33
723: invokestatic  #15
726: new           #16
729: dup
730: invokespecial #17
733: ldc           #18
735: invokevirtual #19
738: iload         34
740: invokevirtual #20
743: ldc           #21
745: invokevirtual #19
748: iconst_0
749: invokevirtual #20
752: ldc           #18
754: invokevirtual #19
757: invokevirtual #22
760: iload         34
762: ifne          769
765: iconst_1
766: goto          770
769: iconst_0
770: invokestatic  #23
773: aload         35
775: invokestatic  #15
778: new           #16
781: dup
782: invokespecial #17
785: ldc           #18
787: invokevirtual #19
790: iload         36
792: invokevirtual #20
795: ldc           #21
797: invokevirtual #19
800: iconst_0
801: invokevirtual #20
804: ldc           #18
806: invokevirtual #19
809: invokevirtual #22
812: iload         36
814: ifne          821
817: iconst_1
818: goto          822
821: iconst_0
822: invokestatic  #23
825: aload         37
827: invokestatic  #15
830: aload         38
832: invokestatic  #15
835: aload         39
837: invokestatic  #15
840: aload         40
842: invokestatic  #15
845: aload         41
847: invokestatic  #15
850: aload         42
852: invokestatic  #15
855: new           #16
858: dup
859: invokespecial #17
862: ldc           #18
864: invokevirtual #19
867: iload         43
869: invokevirtual #20
872: ldc           #21
874: invokevirtual #19
877: iconst_0
878: invokevirtual #20
881: ldc           #18
883: invokevirtual #19
886: invokevirtual #22
889: iload         43
891: ifne          898
894: iconst_1
895: goto          899
898: iconst_0
899: invokestatic  #23
902: return
Exception table:
from    to  target type
417   431   434   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test044
Start line: 1935
End line: 2022
Method source code: 
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean21 = whitelist19.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist25 = whitelist19.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist32 = whitelist30.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist34 = whitelist32.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist38 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str39 = org.jsoup.Jsoup.clean(":lt(32)", whitelist38);
        org.jsoup.safety.Whitelist whitelist43 = whitelist38.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray50 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist51 = whitelist38.addTags(strArray50);
        org.jsoup.safety.Whitelist whitelist52 = whitelist34.addProtocols(":matchesOwn(null", "hi!", strArray50);
        java.lang.String[] strArray61 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean62 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray61);
        org.jsoup.safety.Whitelist whitelist63 = whitelist52.addProtocols("\n<!--hi!-->", "#document", strArray61);
        org.jsoup.safety.Whitelist whitelist64 = whitelist27.addProtocols(".\n<!---->", "[:gt(100)]", strArray61);
        org.jsoup.safety.Whitelist whitelist66 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist68 = whitelist66.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner69 = new org.jsoup.safety.Cleaner(whitelist68);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining72 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document74 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document78 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList80 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document78, "hi!");
        org.jsoup.nodes.Element element82 = document78.tagName("hi!");
        org.jsoup.nodes.Element element84 = document78.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings85 = document78.outputSettings();
        boolean boolean86 = attributeWithValueContaining72.matches((org.jsoup.nodes.Element) document74, (org.jsoup.nodes.Element) document78);
        org.jsoup.nodes.Document document87 = cleaner69.clean(document78);
        org.jsoup.nodes.Document document89 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str90 = document89.toString();
        java.lang.String str91 = document89.baseUri();
        org.jsoup.nodes.Document document92 = cleaner69.clean(document89);
        org.jsoup.nodes.Attribute attribute95 = new org.jsoup.nodes.Attribute(":lt(32)", "");
        java.lang.String str96 = attribute95.getKey();
        attribute95.setKey(":contains(<html>\n <head></head>\n <body>\n  [:lt(32)]\n </body>\n</html>");
        boolean boolean99 = whitelist64.isSafeAttribute("#data", (org.jsoup.nodes.Element) document92, attribute95);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + ":lt(32)" + "'", str39, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(document74);
        org.junit.Assert.assertNotNull(document78);
        org.junit.Assert.assertNotNull(nodeList80);
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertNotNull(outputSettings85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(document87);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str90, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNotNull(document92);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ":lt(32)" + "'", str96, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #261
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: ldc           #12
115: invokevirtual #83
118: istore        9
120: aload         8
122: ldc           #86
124: ldc           #239
126: ldc           #240
128: invokevirtual #11
131: astore        10
133: aload         10
135: iconst_0
136: invokevirtual #9
139: astore        11
141: invokestatic  #8
144: astore        12
146: aload         12
148: iconst_1
149: invokevirtual #9
152: astore        13
154: aload         13
156: iconst_0
157: invokevirtual #9
160: astore        14
162: invokestatic  #118
165: astore        15
167: ldc           #43
169: aload         15
171: invokestatic  #81
174: astore        16
176: aload         15
178: ldc           #43
180: ldc           #12
182: ldc           #32
184: invokevirtual #11
187: astore        17
189: bipush        6
191: anewarray     #119
194: dup
195: iconst_0
196: ldc           #109
198: aastore
199: dup
200: iconst_1
201: ldc           #10
203: aastore
204: dup
205: iconst_2
206: ldc           #13
208: aastore
209: dup
210: iconst_3
211: ldc           #50
213: aastore
214: dup
215: iconst_4
216: ldc           #12
218: aastore
219: dup
220: iconst_5
221: ldc           #120
223: aastore
224: astore        18
226: aload         15
228: aload         18
230: invokevirtual #121
233: astore        19
235: aload         14
237: ldc           #38
239: ldc           #12
241: aload         18
243: invokevirtual #122
246: astore        20
248: iconst_5
249: anewarray     #119
252: dup
253: iconst_0
254: ldc           #13
256: aastore
257: dup
258: iconst_1
259: ldc           #32
261: aastore
262: dup
263: iconst_2
264: ldc           #10
266: aastore
267: dup
268: iconst_3
269: ldc           #43
271: aastore
272: dup
273: iconst_4
274: ldc           #58
276: aastore
277: astore        21
279: ldc           #10
281: aload         21
283: invokestatic  #123
286: istore        22
288: aload         20
290: ldc           #84
292: ldc           #13
294: aload         21
296: invokevirtual #122
299: astore        23
301: aload         11
303: ldc           #145
305: ldc_w         #262
308: aload         21
310: invokevirtual #122
313: astore        24
315: invokestatic  #8
318: astore        25
320: aload         25
322: iconst_1
323: invokevirtual #9
326: astore        26
328: new           #40
331: dup
332: aload         26
334: invokespecial #41
337: astore        27
339: new           #42
342: dup
343: ldc           #43
345: ldc           #32
347: invokespecial #44
350: astore        28
352: ldc           #12
354: invokestatic  #45
357: astore        29
359: ldc           #25
361: ldc           #12
363: invokestatic  #26
366: astore        30
368: ldc           #12
370: aload         30
372: ldc           #12
374: invokestatic  #27
377: astore        31
379: aload         30
381: ldc           #12
383: invokevirtual #28
386: astore        32
388: aload         30
390: ldc           #25
392: invokevirtual #29
395: astore        33
397: aload         30
399: invokevirtual #30
402: astore        34
404: aload         28
406: aload         29
408: aload         30
410: invokevirtual #46
413: istore        35
415: aload         27
417: aload         30
419: invokevirtual #47
422: astore        36
424: ldc           #10
426: invokestatic  #193
429: astore        37
431: aload         37
433: invokevirtual #72
436: astore        38
438: aload         37
440: invokevirtual #194
443: astore        39
445: aload         27
447: aload         37
449: invokevirtual #47
452: astore        40
454: new           #263
457: dup
458: ldc           #43
460: ldc           #25
462: invokespecial #264
465: astore        41
467: aload         41
469: invokevirtual #210
472: astore        42
474: aload         41
476: ldc_w         #265
479: invokevirtual #266
482: aload         24
484: ldc_w         #267
487: aload         40
489: aload         41
491: invokevirtual #169
494: istore        43
496: aload_1
497: invokestatic  #15
500: aload_2
501: invokestatic  #15
504: new           #16
507: dup
508: invokespecial #17
511: ldc           #18
513: invokevirtual #19
516: aload_3
517: invokevirtual #19
520: ldc           #85
522: invokevirtual #19
525: invokevirtual #22
528: aload_3
529: ldc           #86
531: invokestatic  #68
534: new           #16
537: dup
538: invokespecial #17
541: ldc           #18
543: invokevirtual #19
546: iload         4
548: invokevirtual #20
551: ldc           #21
553: invokevirtual #19
556: iconst_0
557: invokevirtual #20
560: ldc           #18
562: invokevirtual #19
565: invokevirtual #22
568: iload         4
570: ifne          577
573: iconst_1
574: goto          578
577: iconst_0
578: invokestatic  #23
581: aload         5
583: invokestatic  #15
586: new           #16
589: dup
590: invokespecial #17
593: ldc           #18
595: invokevirtual #19
598: iload         6
600: invokevirtual #20
603: ldc           #21
605: invokevirtual #19
608: iconst_1
609: invokevirtual #20
612: ldc           #18
614: invokevirtual #19
617: invokevirtual #22
620: iload         6
622: iconst_1
623: if_icmpne     630
626: iconst_1
627: goto          631
630: iconst_0
631: invokestatic  #23
634: new           #16
637: dup
638: invokespecial #17
641: ldc           #18
643: invokevirtual #19
646: iload         7
648: invokevirtual #20
651: ldc           #21
653: invokevirtual #19
656: iconst_0
657: invokevirtual #20
660: ldc           #18
662: invokevirtual #19
665: invokevirtual #22
668: iload         7
670: ifne          677
673: iconst_1
674: goto          678
677: iconst_0
678: invokestatic  #23
681: aload         8
683: invokestatic  #15
686: new           #16
689: dup
690: invokespecial #17
693: ldc           #18
695: invokevirtual #19
698: iload         9
700: invokevirtual #20
703: ldc           #21
705: invokevirtual #19
708: iconst_0
709: invokevirtual #20
712: ldc           #18
714: invokevirtual #19
717: invokevirtual #22
720: iload         9
722: ifne          729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #23
733: aload         10
735: invokestatic  #15
738: aload         11
740: invokestatic  #15
743: aload         12
745: invokestatic  #15
748: aload         13
750: invokestatic  #15
753: aload         14
755: invokestatic  #15
758: aload         15
760: invokestatic  #15
763: new           #16
766: dup
767: invokespecial #17
770: ldc           #18
772: invokevirtual #19
775: aload         16
777: invokevirtual #19
780: ldc           #128
782: invokevirtual #19
785: invokevirtual #22
788: aload         16
790: ldc           #43
792: invokestatic  #68
795: aload         17
797: invokestatic  #15
800: aload         18
802: invokestatic  #15
805: aload         19
807: invokestatic  #15
810: aload         20
812: invokestatic  #15
815: aload         21
817: invokestatic  #15
820: new           #16
823: dup
824: invokespecial #17
827: ldc           #18
829: invokevirtual #19
832: iload         22
834: invokevirtual #20
837: ldc           #21
839: invokevirtual #19
842: iconst_1
843: invokevirtual #20
846: ldc           #18
848: invokevirtual #19
851: invokevirtual #22
854: iload         22
856: iconst_1
857: if_icmpne     864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #23
868: aload         23
870: invokestatic  #15
873: aload         24
875: invokestatic  #15
878: aload         25
880: invokestatic  #15
883: aload         26
885: invokestatic  #15
888: aload         29
890: invokestatic  #15
893: aload         30
895: invokestatic  #15
898: aload         31
900: invokestatic  #15
903: aload         32
905: invokestatic  #15
908: aload         33
910: invokestatic  #15
913: aload         34
915: invokestatic  #15
918: new           #16
921: dup
922: invokespecial #17
925: ldc           #18
927: invokevirtual #19
930: iload         35
932: invokevirtual #20
935: ldc           #21
937: invokevirtual #19
940: iconst_0
941: invokevirtual #20
944: ldc           #18
946: invokevirtual #19
949: invokevirtual #22
952: iload         35
954: ifne          961
957: iconst_1
958: goto          962
961: iconst_0
962: invokestatic  #23
965: aload         36
967: invokestatic  #15
970: aload         37
972: invokestatic  #15
975: new           #16
978: dup
979: invokespecial #17
982: ldc           #18
984: invokevirtual #19
987: aload         38
989: invokevirtual #19
992: ldc           #197
994: invokevirtual #19
997: invokevirtual #22
1000: aload         38
1002: ldc           #151
1004: invokestatic  #68
1007: new           #16
1010: dup
1011: invokespecial #17
1014: ldc           #18
1016: invokevirtual #19
1019: aload         39
1021: invokevirtual #19
1024: ldc           #67
1026: invokevirtual #19
1029: invokevirtual #22
1032: aload         39
1034: ldc           #25
1036: invokestatic  #68
1039: aload         40
1041: invokestatic  #15
1044: new           #16
1047: dup
1048: invokespecial #17
1051: ldc           #18
1053: invokevirtual #19
1056: aload         42
1058: invokevirtual #19
1061: ldc           #128
1063: invokevirtual #19
1066: invokevirtual #22
1069: aload         42
1071: ldc           #43
1073: invokestatic  #68
1076: new           #16
1079: dup
1080: invokespecial #17
1083: ldc           #18
1085: invokevirtual #19
1088: iload         43
1090: invokevirtual #20
1093: ldc           #21
1095: invokevirtual #19
1098: iconst_0
1099: invokevirtual #20
1102: ldc           #18
1104: invokevirtual #19
1107: invokevirtual #22
1110: iload         43
1112: ifne          1119
1115: iconst_1
1116: goto          1120
1119: iconst_0
1120: invokestatic  #23
1123: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test045
Start line: 2025
End line: 2036
Method source code: 
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("\n<!--hi!-->[:lt(32)]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #268
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #269
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test046
Start line: 2039
End line: 2062
Method source code: 
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist8 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)", whitelist8);
        org.jsoup.safety.Whitelist whitelist13 = whitelist8.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray20 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist21 = whitelist8.addTags(strArray20);
        org.jsoup.safety.Whitelist whitelist22 = whitelist4.addProtocols(":matchesOwn(null", "hi!", strArray20);
        boolean boolean24 = whitelist4.isSafeTag(":eq(0)");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)" + "'", str9, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #270
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: invokestatic  #118
44: astore        4
46: ldc           #43
48: aload         4
50: invokestatic  #81
53: astore        5
55: aload         4
57: ldc           #43
59: ldc           #12
61: ldc           #32
63: invokevirtual #11
66: astore        6
68: bipush        6
70: anewarray     #119
73: dup
74: iconst_0
75: ldc           #109
77: aastore
78: dup
79: iconst_1
80: ldc           #10
82: aastore
83: dup
84: iconst_2
85: ldc           #13
87: aastore
88: dup
89: iconst_3
90: ldc           #50
92: aastore
93: dup
94: iconst_4
95: ldc           #12
97: aastore
98: dup
99: iconst_5
100: ldc           #120
102: aastore
103: astore        7
105: aload         4
107: aload         7
109: invokevirtual #121
112: astore        8
114: aload_3
115: ldc           #38
117: ldc           #12
119: aload         7
121: invokevirtual #122
124: astore        9
126: aload_3
127: ldc_w         #271
130: invokevirtual #83
133: istore        10
135: aload_1
136: invokestatic  #15
139: aload_2
140: invokestatic  #15
143: aload_3
144: invokestatic  #15
147: aload         4
149: invokestatic  #15
152: new           #16
155: dup
156: invokespecial #17
159: ldc           #18
161: invokevirtual #19
164: aload         5
166: invokevirtual #19
169: ldc           #128
171: invokevirtual #19
174: invokevirtual #22
177: aload         5
179: ldc           #43
181: invokestatic  #68
184: aload         6
186: invokestatic  #15
189: aload         7
191: invokestatic  #15
194: aload         8
196: invokestatic  #15
199: aload         9
201: invokestatic  #15
204: new           #16
207: dup
208: invokespecial #17
211: ldc           #18
213: invokevirtual #19
216: iload         10
218: invokevirtual #20
221: ldc           #21
223: invokevirtual #19
226: iconst_0
227: invokevirtual #20
230: ldc           #18
232: invokevirtual #19
235: invokevirtual #22
238: iload         10
240: ifne          247
243: iconst_1
244: goto          248
247: iconst_0
248: invokestatic  #23
251: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test047
Start line: 2065
End line: 2139
Method source code: 
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist11 = whitelist7.addEnforcedAttribute("[^hi!]", "<html>\n <head></head>\n <body>   \n </body>\n</html>", "#comment");
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str16 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist15);
        org.jsoup.safety.Whitelist whitelist18 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist20 = whitelist18.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist22 = whitelist20.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str27 = org.jsoup.Jsoup.clean(":lt(32)", whitelist26);
        org.jsoup.safety.Whitelist whitelist31 = whitelist26.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray38 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist39 = whitelist26.addTags(strArray38);
        org.jsoup.safety.Whitelist whitelist40 = whitelist22.addProtocols(":matchesOwn(null", "hi!", strArray38);
        org.jsoup.safety.Whitelist whitelist41 = whitelist15.addAttributes("[^hi!]", strArray38);
        org.jsoup.safety.Whitelist whitelist45 = whitelist15.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.safety.Whitelist whitelist48 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist50 = whitelist48.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist52 = whitelist50.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist56 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str57 = org.jsoup.Jsoup.clean(":lt(32)", whitelist56);
        org.jsoup.safety.Whitelist whitelist61 = whitelist56.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray68 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist69 = whitelist56.addTags(strArray68);
        org.jsoup.safety.Whitelist whitelist70 = whitelist52.addProtocols(":matchesOwn(null", "hi!", strArray68);
        java.lang.String[] strArray79 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean80 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray79);
        org.jsoup.safety.Whitelist whitelist81 = whitelist70.addProtocols("\n<!--hi!-->", "#document", strArray79);
        org.jsoup.safety.Whitelist whitelist82 = whitelist15.addProtocols("<html>\n <head></head>\n <body>\n </body>\n</html>", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]", strArray79);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray79, "<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">");
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray79);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist86 = whitelist7.addAttributes("", strArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!$=   ]" + "'", str16, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":lt(32)" + "'", str27, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ":lt(32)" + "'", str57, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertNotNull(whitelist82);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #272
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: aload         4
54: ldc           #50
56: ldc           #151
58: ldc           #114
60: invokevirtual #11
63: astore        5
65: invokestatic  #8
68: astore        6
70: ldc           #109
72: ldc           #110
74: aload         6
76: invokestatic  #94
79: astore        7
81: invokestatic  #8
84: astore        8
86: aload         8
88: iconst_1
89: invokevirtual #9
92: astore        9
94: aload         9
96: iconst_0
97: invokevirtual #9
100: astore        10
102: invokestatic  #118
105: astore        11
107: ldc           #43
109: aload         11
111: invokestatic  #81
114: astore        12
116: aload         11
118: ldc           #43
120: ldc           #12
122: ldc           #32
124: invokevirtual #11
127: astore        13
129: bipush        6
131: anewarray     #119
134: dup
135: iconst_0
136: ldc           #109
138: aastore
139: dup
140: iconst_1
141: ldc           #10
143: aastore
144: dup
145: iconst_2
146: ldc           #13
148: aastore
149: dup
150: iconst_3
151: ldc           #50
153: aastore
154: dup
155: iconst_4
156: ldc           #12
158: aastore
159: dup
160: iconst_5
161: ldc           #120
163: aastore
164: astore        14
166: aload         11
168: aload         14
170: invokevirtual #121
173: astore        15
175: aload         10
177: ldc           #38
179: ldc           #12
181: aload         14
183: invokevirtual #122
186: astore        16
188: aload         6
190: ldc           #50
192: aload         14
194: invokevirtual #127
197: astore        17
199: aload         6
201: ldc           #126
203: ldc           #109
205: ldc           #120
207: invokevirtual #11
210: astore        18
212: invokestatic  #8
215: astore        19
217: aload         19
219: iconst_1
220: invokevirtual #9
223: astore        20
225: aload         20
227: iconst_0
228: invokevirtual #9
231: astore        21
233: invokestatic  #118
236: astore        22
238: ldc           #43
240: aload         22
242: invokestatic  #81
245: astore        23
247: aload         22
249: ldc           #43
251: ldc           #12
253: ldc           #32
255: invokevirtual #11
258: astore        24
260: bipush        6
262: anewarray     #119
265: dup
266: iconst_0
267: ldc           #109
269: aastore
270: dup
271: iconst_1
272: ldc           #10
274: aastore
275: dup
276: iconst_2
277: ldc           #13
279: aastore
280: dup
281: iconst_3
282: ldc           #50
284: aastore
285: dup
286: iconst_4
287: ldc           #12
289: aastore
290: dup
291: iconst_5
292: ldc           #120
294: aastore
295: astore        25
297: aload         22
299: aload         25
301: invokevirtual #121
304: astore        26
306: aload         21
308: ldc           #38
310: ldc           #12
312: aload         25
314: invokevirtual #122
317: astore        27
319: iconst_5
320: anewarray     #119
323: dup
324: iconst_0
325: ldc           #13
327: aastore
328: dup
329: iconst_1
330: ldc           #32
332: aastore
333: dup
334: iconst_2
335: ldc           #10
337: aastore
338: dup
339: iconst_3
340: ldc           #43
342: aastore
343: dup
344: iconst_4
345: ldc           #58
347: aastore
348: astore        28
350: ldc           #10
352: aload         28
354: invokestatic  #123
357: istore        29
359: aload         27
361: ldc           #84
363: ldc           #13
365: aload         28
367: invokevirtual #122
370: astore        30
372: aload         6
374: ldc           #157
376: ldc_w         #273
379: aload         28
381: invokevirtual #122
384: astore        31
386: aload         28
388: checkcast     #124
391: ldc_w         #274
394: invokestatic  #245
397: aload         28
399: checkcast     #124
402: invokestatic  #125
405: aload         4
407: ldc           #25
409: aload         28
411: invokevirtual #127
414: astore        32
416: ldc           #141
418: invokestatic  #35
421: goto          426
424: astore        32
426: aload_1
427: invokestatic  #15
430: new           #16
433: dup
434: invokespecial #17
437: ldc           #18
439: invokevirtual #19
442: aload_2
443: invokevirtual #19
446: ldc           #111
448: invokevirtual #19
451: invokevirtual #22
454: aload_2
455: ldc           #65
457: invokestatic  #68
460: new           #16
463: dup
464: invokespecial #17
467: ldc           #18
469: invokevirtual #19
472: iload_3
473: invokevirtual #20
476: ldc           #21
478: invokevirtual #19
481: iconst_0
482: invokevirtual #20
485: ldc           #18
487: invokevirtual #19
490: invokevirtual #22
493: iload_3
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #23
505: aload         4
507: invokestatic  #15
510: aload         5
512: invokestatic  #15
515: aload         6
517: invokestatic  #15
520: new           #16
523: dup
524: invokespecial #17
527: ldc           #18
529: invokevirtual #19
532: aload         7
534: invokevirtual #19
537: ldc           #111
539: invokevirtual #19
542: invokevirtual #22
545: aload         7
547: ldc           #65
549: invokestatic  #68
552: aload         8
554: invokestatic  #15
557: aload         9
559: invokestatic  #15
562: aload         10
564: invokestatic  #15
567: aload         11
569: invokestatic  #15
572: new           #16
575: dup
576: invokespecial #17
579: ldc           #18
581: invokevirtual #19
584: aload         12
586: invokevirtual #19
589: ldc           #128
591: invokevirtual #19
594: invokevirtual #22
597: aload         12
599: ldc           #43
601: invokestatic  #68
604: aload         13
606: invokestatic  #15
609: aload         14
611: invokestatic  #15
614: aload         15
616: invokestatic  #15
619: aload         16
621: invokestatic  #15
624: aload         17
626: invokestatic  #15
629: aload         18
631: invokestatic  #15
634: aload         19
636: invokestatic  #15
639: aload         20
641: invokestatic  #15
644: aload         21
646: invokestatic  #15
649: aload         22
651: invokestatic  #15
654: new           #16
657: dup
658: invokespecial #17
661: ldc           #18
663: invokevirtual #19
666: aload         23
668: invokevirtual #19
671: ldc           #128
673: invokevirtual #19
676: invokevirtual #22
679: aload         23
681: ldc           #43
683: invokestatic  #68
686: aload         24
688: invokestatic  #15
691: aload         25
693: invokestatic  #15
696: aload         26
698: invokestatic  #15
701: aload         27
703: invokestatic  #15
706: aload         28
708: invokestatic  #15
711: new           #16
714: dup
715: invokespecial #17
718: ldc           #18
720: invokevirtual #19
723: iload         29
725: invokevirtual #20
728: ldc           #21
730: invokevirtual #19
733: iconst_1
734: invokevirtual #20
737: ldc           #18
739: invokevirtual #19
742: invokevirtual #22
745: iload         29
747: iconst_1
748: if_icmpne     755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #23
759: aload         30
761: invokestatic  #15
764: aload         31
766: invokestatic  #15
769: return
Exception table:
from    to  target type
405   421   424   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test048
Start line: 2142
End line: 2215
Method source code: 
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str7 = org.jsoup.Jsoup.clean(":lt(32)", whitelist6);
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray18 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist19 = whitelist6.addTags(strArray18);
        org.jsoup.safety.Whitelist whitelist20 = whitelist2.addAttributes(":gt(100)", strArray18);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str27 = org.jsoup.Jsoup.clean(":lt(32)", whitelist26);
        boolean boolean29 = whitelist26.isSafeTag("");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element36 = document33.empty();
        org.jsoup.nodes.Element element38 = document33.removeClass("hi!");
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.tagName("hi!");
        org.jsoup.nodes.Element element48 = document42.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = document42.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = outputSettings49.prettyPrint(false);
        org.jsoup.nodes.Document document52 = document33.outputSettings(outputSettings51);
        java.lang.String str53 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist26, outputSettings51);
        org.jsoup.safety.Whitelist whitelist55 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist57 = whitelist55.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist59 = whitelist57.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist63 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str64 = org.jsoup.Jsoup.clean(":lt(32)", whitelist63);
        org.jsoup.safety.Whitelist whitelist68 = whitelist63.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray75 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist76 = whitelist63.addTags(strArray75);
        org.jsoup.safety.Whitelist whitelist77 = whitelist59.addProtocols(":matchesOwn(null", "hi!", strArray75);
        org.jsoup.safety.Whitelist whitelist78 = whitelist26.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray75);
        org.jsoup.safety.Whitelist whitelist79 = whitelist20.addProtocols("<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", "[hi!$=<html> <head></head> <body></body> </html>]", strArray75);
        org.jsoup.safety.Cleaner cleaner80 = new org.jsoup.safety.Cleaner(whitelist20);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + ":lt(32)" + "'", str7, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":lt(32)" + "'", str27, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[:lt(32)]" + "'", str53, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ":lt(32)" + "'", str64, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(whitelist76);
        org.junit.Assert.assertNotNull(whitelist77);
        org.junit.Assert.assertNotNull(whitelist78);
        org.junit.Assert.assertNotNull(whitelist79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #275
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #118
47: astore        4
49: ldc           #43
51: aload         4
53: invokestatic  #81
56: astore        5
58: aload         4
60: ldc           #43
62: ldc           #12
64: ldc           #32
66: invokevirtual #11
69: astore        6
71: bipush        6
73: anewarray     #119
76: dup
77: iconst_0
78: ldc           #109
80: aastore
81: dup
82: iconst_1
83: ldc           #10
85: aastore
86: dup
87: iconst_2
88: ldc           #13
90: aastore
91: dup
92: iconst_3
93: ldc           #50
95: aastore
96: dup
97: iconst_4
98: ldc           #12
100: aastore
101: dup
102: iconst_5
103: ldc           #120
105: aastore
106: astore        7
108: aload         4
110: aload         7
112: invokevirtual #121
115: astore        8
117: aload_2
118: ldc           #92
120: aload         7
122: invokevirtual #127
125: astore        9
127: invokestatic  #118
130: astore        10
132: ldc           #43
134: aload         10
136: invokestatic  #81
139: astore        11
141: aload         10
143: ldc           #25
145: invokevirtual #83
148: istore        12
150: ldc           #25
152: ldc           #12
154: invokestatic  #26
157: astore        13
159: ldc           #12
161: aload         13
163: ldc           #12
165: invokestatic  #27
168: astore        14
170: aload         13
172: invokevirtual #103
175: astore        15
177: aload         13
179: ldc           #12
181: invokevirtual #59
184: astore        16
186: ldc           #25
188: ldc           #12
190: invokestatic  #26
193: astore        17
195: ldc           #12
197: aload         17
199: ldc           #12
201: invokestatic  #27
204: astore        18
206: aload         17
208: ldc           #12
210: invokevirtual #28
213: astore        19
215: aload         17
217: ldc           #25
219: invokevirtual #29
222: astore        20
224: aload         17
226: invokevirtual #30
229: astore        21
231: aload         21
233: iconst_0
234: invokevirtual #31
237: astore        22
239: aload         13
241: aload         22
243: invokevirtual #175
246: astore        23
248: ldc           #58
250: ldc           #126
252: aload         10
254: aload         22
256: invokestatic  #33
259: astore        24
261: invokestatic  #8
264: astore        25
266: aload         25
268: iconst_1
269: invokevirtual #9
272: astore        26
274: aload         26
276: iconst_0
277: invokevirtual #9
280: astore        27
282: invokestatic  #118
285: astore        28
287: ldc           #43
289: aload         28
291: invokestatic  #81
294: astore        29
296: aload         28
298: ldc           #43
300: ldc           #12
302: ldc           #32
304: invokevirtual #11
307: astore        30
309: bipush        6
311: anewarray     #119
314: dup
315: iconst_0
316: ldc           #109
318: aastore
319: dup
320: iconst_1
321: ldc           #10
323: aastore
324: dup
325: iconst_2
326: ldc           #13
328: aastore
329: dup
330: iconst_3
331: ldc           #50
333: aastore
334: dup
335: iconst_4
336: ldc           #12
338: aastore
339: dup
340: iconst_5
341: ldc           #120
343: aastore
344: astore        31
346: aload         28
348: aload         31
350: invokevirtual #121
353: astore        32
355: aload         27
357: ldc           #38
359: ldc           #12
361: aload         31
363: invokevirtual #122
366: astore        33
368: aload         10
370: ldc           #109
372: aload         31
374: invokevirtual #127
377: astore        34
379: aload         9
381: ldc           #55
383: ldc           #183
385: aload         31
387: invokevirtual #122
390: astore        35
392: new           #40
395: dup
396: aload         9
398: invokespecial #41
401: astore        36
403: aload_1
404: invokestatic  #15
407: aload_2
408: invokestatic  #15
411: aload         4
413: invokestatic  #15
416: new           #16
419: dup
420: invokespecial #17
423: ldc           #18
425: invokevirtual #19
428: aload         5
430: invokevirtual #19
433: ldc           #128
435: invokevirtual #19
438: invokevirtual #22
441: aload         5
443: ldc           #43
445: invokestatic  #68
448: aload         6
450: invokestatic  #15
453: aload         7
455: invokestatic  #15
458: aload         8
460: invokestatic  #15
463: aload         9
465: invokestatic  #15
468: aload         10
470: invokestatic  #15
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: aload         11
487: invokevirtual #19
490: ldc           #128
492: invokevirtual #19
495: invokevirtual #22
498: aload         11
500: ldc           #43
502: invokestatic  #68
505: new           #16
508: dup
509: invokespecial #17
512: ldc           #18
514: invokevirtual #19
517: iload         12
519: invokevirtual #20
522: ldc           #21
524: invokevirtual #19
527: iconst_0
528: invokevirtual #20
531: ldc           #18
533: invokevirtual #19
536: invokevirtual #22
539: iload         12
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #23
552: aload         13
554: invokestatic  #15
557: aload         14
559: invokestatic  #15
562: aload         15
564: invokestatic  #15
567: aload         16
569: invokestatic  #15
572: aload         17
574: invokestatic  #15
577: aload         18
579: invokestatic  #15
582: aload         19
584: invokestatic  #15
587: aload         20
589: invokestatic  #15
592: aload         21
594: invokestatic  #15
597: aload         22
599: invokestatic  #15
602: aload         23
604: invokestatic  #15
607: new           #16
610: dup
611: invokespecial #17
614: ldc           #18
616: invokevirtual #19
619: aload         24
621: invokevirtual #19
624: ldc           #184
626: invokevirtual #19
629: invokevirtual #22
632: aload         24
634: ldc           #58
636: invokestatic  #68
639: aload         25
641: invokestatic  #15
644: aload         26
646: invokestatic  #15
649: aload         27
651: invokestatic  #15
654: aload         28
656: invokestatic  #15
659: new           #16
662: dup
663: invokespecial #17
666: ldc           #18
668: invokevirtual #19
671: aload         29
673: invokevirtual #19
676: ldc           #128
678: invokevirtual #19
681: invokevirtual #22
684: aload         29
686: ldc           #43
688: invokestatic  #68
691: aload         30
693: invokestatic  #15
696: aload         31
698: invokestatic  #15
701: aload         32
703: invokestatic  #15
706: aload         33
708: invokestatic  #15
711: aload         34
713: invokestatic  #15
716: aload         35
718: invokestatic  #15
721: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test049
Start line: 2218
End line: 2277
Method source code: 
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str7 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist6);
        boolean boolean9 = whitelist6.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist19 = whitelist13.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist23 = whitelist13.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str24 = org.jsoup.Jsoup.clean("hi!", whitelist13);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist30 = whitelist28.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str35 = org.jsoup.Jsoup.clean(":lt(32)", whitelist34);
        org.jsoup.safety.Whitelist whitelist39 = whitelist34.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray46 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist47 = whitelist34.addTags(strArray46);
        org.jsoup.safety.Whitelist whitelist48 = whitelist30.addProtocols(":matchesOwn(null", "hi!", strArray46);
        java.lang.String[] strArray57 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean58 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray57);
        org.jsoup.safety.Whitelist whitelist59 = whitelist48.addProtocols("\n<!--hi!-->", "#document", strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.safety.Whitelist whitelist62 = whitelist13.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray57);
        org.jsoup.safety.Whitelist whitelist63 = whitelist6.addTags(strArray57);
        org.jsoup.safety.Whitelist whitelist64 = whitelist2.addAttributes("[    ^=hi!]", strArray57);
        boolean boolean65 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body>\n </body>\n</html>]", strArray57);
        boolean boolean66 = org.jsoup.helper.StringUtil.in("<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">", strArray57);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[hi!$=   ]" + "'", str7, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ":lt(32)" + "'", str35, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #276
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: invokestatic  #8
32: astore_2
33: ldc           #109
35: ldc           #110
37: aload_2
38: invokestatic  #94
41: astore_3
42: aload_2
43: ldc           #25
45: invokevirtual #83
48: istore        4
50: aload_2
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #8
60: astore        6
62: aload         6
64: iconst_1
65: invokevirtual #9
68: astore        7
70: aload         6
72: ldc           #10
74: ldc           #10
76: ldc           #10
78: invokevirtual #11
81: astore        8
83: aload         6
85: ldc           #12
87: ldc           #13
89: ldc           #12
91: invokevirtual #11
94: astore        9
96: ldc           #12
98: aload         6
100: invokestatic  #81
103: astore        10
105: invokestatic  #8
108: astore        11
110: aload         11
112: iconst_1
113: invokevirtual #9
116: astore        12
118: aload         12
120: iconst_0
121: invokevirtual #9
124: astore        13
126: invokestatic  #118
129: astore        14
131: ldc           #43
133: aload         14
135: invokestatic  #81
138: astore        15
140: aload         14
142: ldc           #43
144: ldc           #12
146: ldc           #32
148: invokevirtual #11
151: astore        16
153: bipush        6
155: anewarray     #119
158: dup
159: iconst_0
160: ldc           #109
162: aastore
163: dup
164: iconst_1
165: ldc           #10
167: aastore
168: dup
169: iconst_2
170: ldc           #13
172: aastore
173: dup
174: iconst_3
175: ldc           #50
177: aastore
178: dup
179: iconst_4
180: ldc           #12
182: aastore
183: dup
184: iconst_5
185: ldc           #120
187: aastore
188: astore        17
190: aload         14
192: aload         17
194: invokevirtual #121
197: astore        18
199: aload         13
201: ldc           #38
203: ldc           #12
205: aload         17
207: invokevirtual #122
210: astore        19
212: iconst_5
213: anewarray     #119
216: dup
217: iconst_0
218: ldc           #13
220: aastore
221: dup
222: iconst_1
223: ldc           #32
225: aastore
226: dup
227: iconst_2
228: ldc           #10
230: aastore
231: dup
232: iconst_3
233: ldc           #43
235: aastore
236: dup
237: iconst_4
238: ldc           #58
240: aastore
241: astore        20
243: ldc           #10
245: aload         20
247: invokestatic  #123
250: istore        21
252: aload         19
254: ldc           #84
256: ldc           #13
258: aload         20
260: invokevirtual #122
263: astore        22
265: aload         20
267: checkcast     #124
270: invokestatic  #125
273: aload         20
275: checkcast     #124
278: invokestatic  #125
281: aload         6
283: ldc           #249
285: aload         20
287: invokevirtual #127
290: astore        23
292: aload_2
293: aload         20
295: invokevirtual #121
298: astore        24
300: aload_1
301: ldc           #173
303: aload         20
305: invokevirtual #127
308: astore        25
310: ldc           #215
312: aload         20
314: invokestatic  #123
317: istore        26
319: ldc_w         #274
322: aload         20
324: invokestatic  #123
327: istore        27
329: aload_1
330: invokestatic  #15
333: aload_2
334: invokestatic  #15
337: new           #16
340: dup
341: invokespecial #17
344: ldc           #18
346: invokevirtual #19
349: aload_3
350: invokevirtual #19
353: ldc           #111
355: invokevirtual #19
358: invokevirtual #22
361: aload_3
362: ldc           #65
364: invokestatic  #68
367: new           #16
370: dup
371: invokespecial #17
374: ldc           #18
376: invokevirtual #19
379: iload         4
381: invokevirtual #20
384: ldc           #21
386: invokevirtual #19
389: iconst_0
390: invokevirtual #20
393: ldc           #18
395: invokevirtual #19
398: invokevirtual #22
401: iload         4
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #23
414: aload         5
416: invokestatic  #15
419: aload         6
421: invokestatic  #15
424: aload         7
426: invokestatic  #15
429: aload         8
431: invokestatic  #15
434: aload         9
436: invokestatic  #15
439: new           #16
442: dup
443: invokespecial #17
446: ldc           #18
448: invokevirtual #19
451: aload         10
453: invokevirtual #19
456: ldc           #211
458: invokevirtual #19
461: invokevirtual #22
464: aload         10
466: ldc           #12
468: invokestatic  #68
471: aload         11
473: invokestatic  #15
476: aload         12
478: invokestatic  #15
481: aload         13
483: invokestatic  #15
486: aload         14
488: invokestatic  #15
491: new           #16
494: dup
495: invokespecial #17
498: ldc           #18
500: invokevirtual #19
503: aload         15
505: invokevirtual #19
508: ldc           #128
510: invokevirtual #19
513: invokevirtual #22
516: aload         15
518: ldc           #43
520: invokestatic  #68
523: aload         16
525: invokestatic  #15
528: aload         17
530: invokestatic  #15
533: aload         18
535: invokestatic  #15
538: aload         19
540: invokestatic  #15
543: aload         20
545: invokestatic  #15
548: new           #16
551: dup
552: invokespecial #17
555: ldc           #18
557: invokevirtual #19
560: iload         21
562: invokevirtual #20
565: ldc           #21
567: invokevirtual #19
570: iconst_1
571: invokevirtual #20
574: ldc           #18
576: invokevirtual #19
579: invokevirtual #22
582: iload         21
584: iconst_1
585: if_icmpne     592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #23
596: aload         22
598: invokestatic  #15
601: aload         23
603: invokestatic  #15
606: aload         24
608: invokestatic  #15
611: aload         25
613: invokestatic  #15
616: new           #16
619: dup
620: invokespecial #17
623: ldc           #18
625: invokevirtual #19
628: iload         26
630: invokevirtual #20
633: ldc           #21
635: invokevirtual #19
638: iconst_0
639: invokevirtual #20
642: ldc           #18
644: invokevirtual #19
647: invokevirtual #22
650: iload         26
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #23
663: new           #16
666: dup
667: invokespecial #17
670: ldc           #18
672: invokevirtual #19
675: iload         27
677: invokevirtual #20
680: ldc           #21
682: invokevirtual #19
685: iconst_0
686: invokevirtual #20
689: ldc           #18
691: invokevirtual #19
694: invokevirtual #22
697: iload         27
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #23
710: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test050
Start line: 2280
End line: 2303
Method source code: 
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        org.jsoup.safety.Whitelist whitelist21 = whitelist19.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist23 = whitelist19.preserveRelativeLinks(false);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist23);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #277
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: iconst_1
114: invokevirtual #9
117: astore        9
119: aload         8
121: iconst_0
122: invokevirtual #9
125: astore        10
127: aload_1
128: invokestatic  #15
131: aload_2
132: invokestatic  #15
135: new           #16
138: dup
139: invokespecial #17
142: ldc           #18
144: invokevirtual #19
147: aload_3
148: invokevirtual #19
151: ldc           #85
153: invokevirtual #19
156: invokevirtual #22
159: aload_3
160: ldc           #86
162: invokestatic  #68
165: new           #16
168: dup
169: invokespecial #17
172: ldc           #18
174: invokevirtual #19
177: iload         4
179: invokevirtual #20
182: ldc           #21
184: invokevirtual #19
187: iconst_0
188: invokevirtual #20
191: ldc           #18
193: invokevirtual #19
196: invokevirtual #22
199: iload         4
201: ifne          208
204: iconst_1
205: goto          209
208: iconst_0
209: invokestatic  #23
212: aload         5
214: invokestatic  #15
217: new           #16
220: dup
221: invokespecial #17
224: ldc           #18
226: invokevirtual #19
229: iload         6
231: invokevirtual #20
234: ldc           #21
236: invokevirtual #19
239: iconst_1
240: invokevirtual #20
243: ldc           #18
245: invokevirtual #19
248: invokevirtual #22
251: iload         6
253: iconst_1
254: if_icmpne     261
257: iconst_1
258: goto          262
261: iconst_0
262: invokestatic  #23
265: new           #16
268: dup
269: invokespecial #17
272: ldc           #18
274: invokevirtual #19
277: iload         7
279: invokevirtual #20
282: ldc           #21
284: invokevirtual #19
287: iconst_0
288: invokevirtual #20
291: ldc           #18
293: invokevirtual #19
296: invokevirtual #22
299: iload         7
301: ifne          308
304: iconst_1
305: goto          309
308: iconst_0
309: invokestatic  #23
312: aload         8
314: invokestatic  #15
317: aload         9
319: invokestatic  #15
322: aload         10
324: invokestatic  #15
327: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test051
Start line: 2306
End line: 2389
Method source code: 
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("#text");
        java.lang.String str7 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist4);
        java.lang.String str8 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist4);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str15 = org.jsoup.Jsoup.clean(":lt(32)", whitelist14);
        boolean boolean17 = whitelist14.isSafeTag("");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element24 = document21.empty();
        org.jsoup.nodes.Element element26 = document21.removeClass("hi!");
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.tagName("hi!");
        org.jsoup.nodes.Element element36 = document30.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = document30.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings37.prettyPrint(false);
        org.jsoup.nodes.Document document40 = document21.outputSettings(outputSettings39);
        java.lang.String str41 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist14, outputSettings39);
        org.jsoup.safety.Whitelist whitelist44 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str45 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist44);
        org.jsoup.safety.Whitelist whitelist47 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist49 = whitelist47.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist51 = whitelist49.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist55 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str56 = org.jsoup.Jsoup.clean(":lt(32)", whitelist55);
        org.jsoup.safety.Whitelist whitelist60 = whitelist55.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray67 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist68 = whitelist55.addTags(strArray67);
        org.jsoup.safety.Whitelist whitelist69 = whitelist51.addProtocols(":matchesOwn(null", "hi!", strArray67);
        java.lang.String[] strArray78 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean79 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray78);
        org.jsoup.safety.Whitelist whitelist80 = whitelist69.addProtocols("\n<!--hi!-->", "#document", strArray78);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray78);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray78);
        org.jsoup.safety.Whitelist whitelist83 = whitelist44.addAttributes("*", strArray78);
        org.jsoup.safety.Whitelist whitelist84 = whitelist14.addTags(strArray78);
        boolean boolean85 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", strArray78);
        org.jsoup.safety.Whitelist whitelist86 = whitelist4.addAttributes(":matchesOwn(null", strArray78);
        org.jsoup.nodes.Attributes attributes88 = whitelist4.getEnforcedAttributes("<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.jsoup.nodes.Attributes attributes90 = whitelist4.getEnforcedAttributes(":eq(1)");
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[    ^=hi!]" + "'", str8, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":lt(32)" + "'", str15, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[:lt(32)]" + "'", str41, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!$=   ]" + "'", str45, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ":lt(32)" + "'", str56, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(whitelist84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(whitelist86);
        org.junit.Assert.assertNotNull(attributes88);
        org.junit.Assert.assertNotNull(attributes90);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #278
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: invokestatic  #118
58: astore        5
60: ldc           #43
62: aload         5
64: invokestatic  #81
67: astore        6
69: aload         5
71: ldc           #25
73: invokevirtual #83
76: istore        7
78: ldc           #25
80: ldc           #12
82: invokestatic  #26
85: astore        8
87: ldc           #12
89: aload         8
91: ldc           #12
93: invokestatic  #27
96: astore        9
98: aload         8
100: invokevirtual #103
103: astore        10
105: aload         8
107: ldc           #12
109: invokevirtual #59
112: astore        11
114: ldc           #25
116: ldc           #12
118: invokestatic  #26
121: astore        12
123: ldc           #12
125: aload         12
127: ldc           #12
129: invokestatic  #27
132: astore        13
134: aload         12
136: ldc           #12
138: invokevirtual #28
141: astore        14
143: aload         12
145: ldc           #25
147: invokevirtual #29
150: astore        15
152: aload         12
154: invokevirtual #30
157: astore        16
159: aload         16
161: iconst_0
162: invokevirtual #31
165: astore        17
167: aload         8
169: aload         17
171: invokevirtual #175
174: astore        18
176: ldc           #58
178: ldc           #126
180: aload         5
182: aload         17
184: invokestatic  #33
187: astore        19
189: invokestatic  #8
192: astore        20
194: ldc           #109
196: ldc           #110
198: aload         20
200: invokestatic  #94
203: astore        21
205: invokestatic  #8
208: astore        22
210: aload         22
212: iconst_1
213: invokevirtual #9
216: astore        23
218: aload         23
220: iconst_0
221: invokevirtual #9
224: astore        24
226: invokestatic  #118
229: astore        25
231: ldc           #43
233: aload         25
235: invokestatic  #81
238: astore        26
240: aload         25
242: ldc           #43
244: ldc           #12
246: ldc           #32
248: invokevirtual #11
251: astore        27
253: bipush        6
255: anewarray     #119
258: dup
259: iconst_0
260: ldc           #109
262: aastore
263: dup
264: iconst_1
265: ldc           #10
267: aastore
268: dup
269: iconst_2
270: ldc           #13
272: aastore
273: dup
274: iconst_3
275: ldc           #50
277: aastore
278: dup
279: iconst_4
280: ldc           #12
282: aastore
283: dup
284: iconst_5
285: ldc           #120
287: aastore
288: astore        28
290: aload         25
292: aload         28
294: invokevirtual #121
297: astore        29
299: aload         24
301: ldc           #38
303: ldc           #12
305: aload         28
307: invokevirtual #122
310: astore        30
312: iconst_5
313: anewarray     #119
316: dup
317: iconst_0
318: ldc           #13
320: aastore
321: dup
322: iconst_1
323: ldc           #32
325: aastore
326: dup
327: iconst_2
328: ldc           #10
330: aastore
331: dup
332: iconst_3
333: ldc           #43
335: aastore
336: dup
337: iconst_4
338: ldc           #58
340: aastore
341: astore        31
343: ldc           #10
345: aload         31
347: invokestatic  #123
350: istore        32
352: aload         30
354: ldc           #84
356: ldc           #13
358: aload         31
360: invokevirtual #122
363: astore        33
365: aload         31
367: checkcast     #124
370: invokestatic  #125
373: aload         31
375: checkcast     #124
378: invokestatic  #125
381: aload         20
383: ldc           #126
385: aload         31
387: invokevirtual #127
390: astore        34
392: aload         5
394: aload         31
396: invokevirtual #121
399: astore        35
401: ldc           #82
403: aload         31
405: invokestatic  #123
408: istore        36
410: aload_1
411: ldc           #38
413: aload         31
415: invokevirtual #127
418: astore        37
420: aload_1
421: ldc           #157
423: invokevirtual #150
426: astore        38
428: aload_1
429: ldc_w         #279
432: invokevirtual #150
435: astore        39
437: aload_1
438: invokestatic  #15
441: aload_2
442: invokestatic  #15
445: new           #16
448: dup
449: invokespecial #17
452: ldc           #18
454: invokevirtual #19
457: aload_3
458: invokevirtual #19
461: ldc           #67
463: invokevirtual #19
466: invokevirtual #22
469: aload_3
470: ldc           #25
472: invokestatic  #68
475: new           #16
478: dup
479: invokespecial #17
482: ldc           #18
484: invokevirtual #19
487: aload         4
489: invokevirtual #19
492: ldc           #172
494: invokevirtual #19
497: invokevirtual #22
500: aload         4
502: ldc           #173
504: invokestatic  #68
507: aload         5
509: invokestatic  #15
512: new           #16
515: dup
516: invokespecial #17
519: ldc           #18
521: invokevirtual #19
524: aload         6
526: invokevirtual #19
529: ldc           #128
531: invokevirtual #19
534: invokevirtual #22
537: aload         6
539: ldc           #43
541: invokestatic  #68
544: new           #16
547: dup
548: invokespecial #17
551: ldc           #18
553: invokevirtual #19
556: iload         7
558: invokevirtual #20
561: ldc           #21
563: invokevirtual #19
566: iconst_0
567: invokevirtual #20
570: ldc           #18
572: invokevirtual #19
575: invokevirtual #22
578: iload         7
580: ifne          587
583: iconst_1
584: goto          588
587: iconst_0
588: invokestatic  #23
591: aload         8
593: invokestatic  #15
596: aload         9
598: invokestatic  #15
601: aload         10
603: invokestatic  #15
606: aload         11
608: invokestatic  #15
611: aload         12
613: invokestatic  #15
616: aload         13
618: invokestatic  #15
621: aload         14
623: invokestatic  #15
626: aload         15
628: invokestatic  #15
631: aload         16
633: invokestatic  #15
636: aload         17
638: invokestatic  #15
641: aload         18
643: invokestatic  #15
646: new           #16
649: dup
650: invokespecial #17
653: ldc           #18
655: invokevirtual #19
658: aload         19
660: invokevirtual #19
663: ldc           #184
665: invokevirtual #19
668: invokevirtual #22
671: aload         19
673: ldc           #58
675: invokestatic  #68
678: aload         20
680: invokestatic  #15
683: new           #16
686: dup
687: invokespecial #17
690: ldc           #18
692: invokevirtual #19
695: aload         21
697: invokevirtual #19
700: ldc           #111
702: invokevirtual #19
705: invokevirtual #22
708: aload         21
710: ldc           #65
712: invokestatic  #68
715: aload         22
717: invokestatic  #15
720: aload         23
722: invokestatic  #15
725: aload         24
727: invokestatic  #15
730: aload         25
732: invokestatic  #15
735: new           #16
738: dup
739: invokespecial #17
742: ldc           #18
744: invokevirtual #19
747: aload         26
749: invokevirtual #19
752: ldc           #128
754: invokevirtual #19
757: invokevirtual #22
760: aload         26
762: ldc           #43
764: invokestatic  #68
767: aload         27
769: invokestatic  #15
772: aload         28
774: invokestatic  #15
777: aload         29
779: invokestatic  #15
782: aload         30
784: invokestatic  #15
787: aload         31
789: invokestatic  #15
792: new           #16
795: dup
796: invokespecial #17
799: ldc           #18
801: invokevirtual #19
804: iload         32
806: invokevirtual #20
809: ldc           #21
811: invokevirtual #19
814: iconst_1
815: invokevirtual #20
818: ldc           #18
820: invokevirtual #19
823: invokevirtual #22
826: iload         32
828: iconst_1
829: if_icmpne     836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #23
840: aload         33
842: invokestatic  #15
845: aload         34
847: invokestatic  #15
850: aload         35
852: invokestatic  #15
855: new           #16
858: dup
859: invokespecial #17
862: ldc           #18
864: invokevirtual #19
867: iload         36
869: invokevirtual #20
872: ldc           #21
874: invokevirtual #19
877: iconst_0
878: invokevirtual #20
881: ldc           #18
883: invokevirtual #19
886: invokevirtual #22
889: iload         36
891: ifne          898
894: iconst_1
895: goto          899
898: iconst_0
899: invokestatic  #23
902: aload         37
904: invokestatic  #15
907: aload         38
909: invokestatic  #15
912: aload         39
914: invokestatic  #15
917: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test052
Start line: 2392
End line: 2427
Method source code: 
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.jsoup.safety.Whitelist whitelist1 = new org.jsoup.safety.Whitelist();
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist11 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str12 = org.jsoup.Jsoup.clean(":lt(32)", whitelist11);
        org.jsoup.safety.Whitelist whitelist16 = whitelist11.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray23 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist24 = whitelist11.addTags(strArray23);
        org.jsoup.safety.Whitelist whitelist25 = whitelist7.addProtocols(":matchesOwn(null", "hi!", strArray23);
        java.lang.String[] strArray34 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean35 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray34);
        org.jsoup.safety.Whitelist whitelist36 = whitelist25.addProtocols("\n<!--hi!-->", "#document", strArray34);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray34);
        boolean boolean38 = org.jsoup.helper.StringUtil.in("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", strArray34);
        org.jsoup.safety.Whitelist whitelist39 = whitelist1.addTags(strArray34);
        boolean boolean40 = org.jsoup.helper.StringUtil.in("", strArray34);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ":lt(32)" + "'", str12, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #280
20: aastore
21: invokevirtual #7
24: pop
25: new           #143
28: dup
29: invokespecial #144
32: astore_1
33: invokestatic  #8
36: astore_2
37: aload_2
38: iconst_1
39: invokevirtual #9
42: astore_3
43: aload_3
44: iconst_0
45: invokevirtual #9
48: astore        4
50: invokestatic  #118
53: astore        5
55: ldc           #43
57: aload         5
59: invokestatic  #81
62: astore        6
64: aload         5
66: ldc           #43
68: ldc           #12
70: ldc           #32
72: invokevirtual #11
75: astore        7
77: bipush        6
79: anewarray     #119
82: dup
83: iconst_0
84: ldc           #109
86: aastore
87: dup
88: iconst_1
89: ldc           #10
91: aastore
92: dup
93: iconst_2
94: ldc           #13
96: aastore
97: dup
98: iconst_3
99: ldc           #50
101: aastore
102: dup
103: iconst_4
104: ldc           #12
106: aastore
107: dup
108: iconst_5
109: ldc           #120
111: aastore
112: astore        8
114: aload         5
116: aload         8
118: invokevirtual #121
121: astore        9
123: aload         4
125: ldc           #38
127: ldc           #12
129: aload         8
131: invokevirtual #122
134: astore        10
136: iconst_5
137: anewarray     #119
140: dup
141: iconst_0
142: ldc           #13
144: aastore
145: dup
146: iconst_1
147: ldc           #32
149: aastore
150: dup
151: iconst_2
152: ldc           #10
154: aastore
155: dup
156: iconst_3
157: ldc           #43
159: aastore
160: dup
161: iconst_4
162: ldc           #58
164: aastore
165: astore        11
167: ldc           #10
169: aload         11
171: invokestatic  #123
174: istore        12
176: aload         10
178: ldc           #84
180: ldc           #13
182: aload         11
184: invokevirtual #122
187: astore        13
189: aload         11
191: checkcast     #124
194: invokestatic  #125
197: ldc           #136
199: aload         11
201: invokestatic  #123
204: istore        14
206: aload_1
207: aload         11
209: invokevirtual #121
212: astore        15
214: ldc           #25
216: aload         11
218: invokestatic  #123
221: istore        16
223: aload_2
224: invokestatic  #15
227: aload_3
228: invokestatic  #15
231: aload         4
233: invokestatic  #15
236: aload         5
238: invokestatic  #15
241: new           #16
244: dup
245: invokespecial #17
248: ldc           #18
250: invokevirtual #19
253: aload         6
255: invokevirtual #19
258: ldc           #128
260: invokevirtual #19
263: invokevirtual #22
266: aload         6
268: ldc           #43
270: invokestatic  #68
273: aload         7
275: invokestatic  #15
278: aload         8
280: invokestatic  #15
283: aload         9
285: invokestatic  #15
288: aload         10
290: invokestatic  #15
293: aload         11
295: invokestatic  #15
298: new           #16
301: dup
302: invokespecial #17
305: ldc           #18
307: invokevirtual #19
310: iload         12
312: invokevirtual #20
315: ldc           #21
317: invokevirtual #19
320: iconst_1
321: invokevirtual #20
324: ldc           #18
326: invokevirtual #19
329: invokevirtual #22
332: iload         12
334: iconst_1
335: if_icmpne     342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #23
346: aload         13
348: invokestatic  #15
351: new           #16
354: dup
355: invokespecial #17
358: ldc           #18
360: invokevirtual #19
363: iload         14
365: invokevirtual #20
368: ldc           #21
370: invokevirtual #19
373: iconst_0
374: invokevirtual #20
377: ldc           #18
379: invokevirtual #19
382: invokevirtual #22
385: iload         14
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #23
398: aload         15
400: invokestatic  #15
403: new           #16
406: dup
407: invokespecial #17
410: ldc           #18
412: invokevirtual #19
415: iload         16
417: invokevirtual #20
420: ldc           #21
422: invokevirtual #19
425: iconst_0
426: invokevirtual #20
429: ldc           #18
431: invokevirtual #19
434: invokevirtual #22
437: iload         16
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #23
450: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test053
Start line: 2430
End line: 2493
Method source code: 
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.util.Spliterator<java.lang.Object> objSpliterator24 = objList0.spliterator();
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        java.lang.String str32 = org.jsoup.helper.StringUtil.join((java.util.Collection) nodeList30, "#document");
        boolean boolean33 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList30);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist36 = whitelist34.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner37 = new org.jsoup.safety.Cleaner(whitelist36);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining40 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document42 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        boolean boolean54 = attributeWithValueContaining40.matches((org.jsoup.nodes.Element) document42, (org.jsoup.nodes.Element) document46);
        org.jsoup.nodes.Document document55 = cleaner37.clean(document46);
        boolean boolean56 = objList0.contains((java.lang.Object) document46);
        java.lang.Object obj57 = objList0.peekLast();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSpliterator24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\nhi!" + "'", str32, "\nhi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #281
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #283
138: astore        12
140: ldc           #25
142: ldc           #12
144: invokestatic  #26
147: astore        13
149: ldc           #12
151: aload         13
153: ldc           #12
155: invokestatic  #27
158: astore        14
160: aload         14
162: ldc           #13
164: invokestatic  #284
167: astore        15
169: aload_1
170: aload         14
172: invokevirtual #285
175: istore        16
177: invokestatic  #8
180: astore        17
182: aload         17
184: iconst_1
185: invokevirtual #9
188: astore        18
190: new           #40
193: dup
194: aload         18
196: invokespecial #41
199: astore        19
201: new           #42
204: dup
205: ldc           #43
207: ldc           #32
209: invokespecial #44
212: astore        20
214: ldc           #12
216: invokestatic  #45
219: astore        21
221: ldc           #25
223: ldc           #12
225: invokestatic  #26
228: astore        22
230: ldc           #12
232: aload         22
234: ldc           #12
236: invokestatic  #27
239: astore        23
241: aload         22
243: ldc           #12
245: invokevirtual #28
248: astore        24
250: aload         22
252: ldc           #25
254: invokevirtual #29
257: astore        25
259: aload         22
261: invokevirtual #30
264: astore        26
266: aload         20
268: aload         21
270: aload         22
272: invokevirtual #46
275: istore        27
277: aload         19
279: aload         22
281: invokevirtual #47
284: astore        28
286: aload_1
287: aload         22
289: invokevirtual #286
292: istore        29
294: aload_1
295: invokevirtual #287
298: astore        30
300: aload_2
301: invokestatic  #15
304: aload_3
305: invokestatic  #15
308: aload         4
310: invokestatic  #15
313: aload         5
315: invokestatic  #15
318: aload         6
320: invokestatic  #15
323: aload         7
325: invokestatic  #15
328: aload         8
330: invokestatic  #15
333: new           #16
336: dup
337: invokespecial #17
340: ldc           #18
342: invokevirtual #19
345: aload         9
347: invokevirtual #19
350: ldc           #78
352: invokevirtual #19
355: invokevirtual #22
358: aload         9
360: ldc           #10
362: invokestatic  #68
365: aload         10
367: invokestatic  #15
370: aload         10
372: invokestatic  #288
375: ldc_w         #289
378: invokestatic  #290
381: aload         10
383: invokestatic  #291
386: ldc_w         #289
389: invokestatic  #290
392: new           #16
395: dup
396: invokespecial #17
399: ldc           #18
401: invokevirtual #19
404: iload         11
406: invokevirtual #20
409: ldc           #21
411: invokevirtual #19
414: iconst_1
415: invokevirtual #20
418: ldc           #18
420: invokevirtual #19
423: invokevirtual #22
426: iload         11
428: iconst_1
429: if_icmpne     436
432: iconst_1
433: goto          437
436: iconst_0
437: invokestatic  #23
440: aload         12
442: invokestatic  #15
445: aload         13
447: invokestatic  #15
450: aload         14
452: invokestatic  #15
455: new           #16
458: dup
459: invokespecial #17
462: ldc           #18
464: invokevirtual #19
467: aload         15
469: invokevirtual #19
472: ldc_w         #292
475: invokevirtual #19
478: invokevirtual #22
481: aload         15
483: ldc           #98
485: invokestatic  #68
488: new           #16
491: dup
492: invokespecial #17
495: ldc           #18
497: invokevirtual #19
500: iload         16
502: invokevirtual #20
505: ldc           #21
507: invokevirtual #19
510: iconst_0
511: invokevirtual #20
514: ldc           #18
516: invokevirtual #19
519: invokevirtual #22
522: iload         16
524: ifne          531
527: iconst_1
528: goto          532
531: iconst_0
532: invokestatic  #23
535: aload         17
537: invokestatic  #15
540: aload         18
542: invokestatic  #15
545: aload         21
547: invokestatic  #15
550: aload         22
552: invokestatic  #15
555: aload         23
557: invokestatic  #15
560: aload         24
562: invokestatic  #15
565: aload         25
567: invokestatic  #15
570: aload         26
572: invokestatic  #15
575: new           #16
578: dup
579: invokespecial #17
582: ldc           #18
584: invokevirtual #19
587: iload         27
589: invokevirtual #20
592: ldc           #21
594: invokevirtual #19
597: iconst_0
598: invokevirtual #20
601: ldc           #18
603: invokevirtual #19
606: invokevirtual #22
609: iload         27
611: ifne          618
614: iconst_1
615: goto          619
618: iconst_0
619: invokestatic  #23
622: aload         28
624: invokestatic  #15
627: new           #16
630: dup
631: invokespecial #17
634: ldc           #18
636: invokevirtual #19
639: iload         29
641: invokevirtual #20
644: ldc           #21
646: invokevirtual #19
649: iconst_0
650: invokevirtual #20
653: ldc           #18
655: invokevirtual #19
658: invokevirtual #22
661: iload         29
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #23
674: aload         30
676: invokestatic  #15
679: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test054
Start line: 2496
End line: 2542
Method source code: 
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        java.util.regex.Pattern pattern38 = null;
        org.jsoup.select.Elements elements39 = document25.getElementsByAttributeValueMatching("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", pattern38);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertNotNull(elements39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #293
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: aconst_null
203: astore        22
205: aload         13
207: ldc           #136
209: aload         22
211: invokevirtual #294
214: astore        23
216: aload_1
217: invokestatic  #15
220: aload_2
221: invokestatic  #15
224: aload         5
226: invokestatic  #15
229: aload         6
231: invokestatic  #15
234: aload         7
236: invokestatic  #15
239: aload         8
241: invokestatic  #15
244: aload         9
246: invokestatic  #15
249: aload         10
251: invokestatic  #15
254: new           #16
257: dup
258: invokespecial #17
261: ldc           #18
263: invokevirtual #19
266: iload         11
268: invokevirtual #20
271: ldc           #21
273: invokevirtual #19
276: iconst_0
277: invokevirtual #20
280: ldc           #18
282: invokevirtual #19
285: invokevirtual #22
288: iload         11
290: ifne          297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #23
301: aload         12
303: invokestatic  #15
306: aload         13
308: invokestatic  #15
311: aload         14
313: invokestatic  #15
316: aload         15
318: invokestatic  #15
321: aload         16
323: invokestatic  #15
326: new           #16
329: dup
330: invokespecial #17
333: ldc           #18
335: invokevirtual #19
338: aload         17
340: invokevirtual #19
343: ldc           #78
345: invokevirtual #19
348: invokevirtual #22
351: aload         17
353: ldc           #10
355: invokestatic  #68
358: new           #16
361: dup
362: invokespecial #17
365: ldc           #18
367: invokevirtual #19
370: aload         18
372: invokevirtual #19
375: ldc           #67
377: invokevirtual #19
380: invokevirtual #22
383: aload         18
385: ldc           #25
387: invokestatic  #68
390: aload         19
392: invokestatic  #79
395: aload         20
397: invokestatic  #15
400: aload         21
402: invokestatic  #15
405: aload         23
407: invokestatic  #15
410: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test055
Start line: 2545
End line: 2585
Method source code: 
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner5 = new org.jsoup.safety.Cleaner(whitelist4);
        org.jsoup.safety.Whitelist whitelist8 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)", whitelist8);
        org.jsoup.safety.Whitelist whitelist13 = whitelist8.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray20 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist21 = whitelist8.addTags(strArray20);
        org.jsoup.safety.Whitelist whitelist22 = whitelist4.addAttributes(":gt(100)", strArray20);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element30 = document26.tagName("hi!");
        org.jsoup.nodes.Element element32 = document26.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings33 = document26.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = outputSettings33.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = outputSettings33.prettyPrint(true);
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings33.indentAmount(0);
        int int40 = outputSettings33.indentAmount();
        java.lang.String str41 = org.jsoup.Jsoup.clean(" :lt(32)=\"\"=\".\"", "\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->", whitelist4, outputSettings33);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)" + "'", str9, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(outputSettings33);
        org.junit.Assert.assertNotNull(outputSettings35);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + ":lt(32)=&quot;&quot;=&quot;.&quot;" + "'", str41, ":lt(32)=&quot;&quot;=&quot;.&quot;");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #295
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #118
47: astore        4
49: ldc           #43
51: aload         4
53: invokestatic  #81
56: astore        5
58: aload         4
60: ldc           #43
62: ldc           #12
64: ldc           #32
66: invokevirtual #11
69: astore        6
71: bipush        6
73: anewarray     #119
76: dup
77: iconst_0
78: ldc           #109
80: aastore
81: dup
82: iconst_1
83: ldc           #10
85: aastore
86: dup
87: iconst_2
88: ldc           #13
90: aastore
91: dup
92: iconst_3
93: ldc           #50
95: aastore
96: dup
97: iconst_4
98: ldc           #12
100: aastore
101: dup
102: iconst_5
103: ldc           #120
105: aastore
106: astore        7
108: aload         4
110: aload         7
112: invokevirtual #121
115: astore        8
117: aload_2
118: ldc           #92
120: aload         7
122: invokevirtual #127
125: astore        9
127: ldc           #25
129: ldc           #12
131: invokestatic  #26
134: astore        10
136: ldc           #12
138: aload         10
140: ldc           #12
142: invokestatic  #27
145: astore        11
147: aload         10
149: ldc           #12
151: invokevirtual #28
154: astore        12
156: aload         10
158: ldc           #25
160: invokevirtual #29
163: astore        13
165: aload         10
167: invokevirtual #30
170: astore        14
172: aload         14
174: iconst_0
175: invokevirtual #31
178: astore        15
180: aload         14
182: iconst_1
183: invokevirtual #31
186: astore        16
188: aload         14
190: iconst_0
191: invokevirtual #189
194: astore        17
196: aload         14
198: invokevirtual #296
201: istore        18
203: ldc_w         #297
206: ldc_w         #298
209: aload_2
210: aload         14
212: invokestatic  #33
215: astore        19
217: aload_1
218: invokestatic  #15
221: aload_2
222: invokestatic  #15
225: aload         4
227: invokestatic  #15
230: new           #16
233: dup
234: invokespecial #17
237: ldc           #18
239: invokevirtual #19
242: aload         5
244: invokevirtual #19
247: ldc           #128
249: invokevirtual #19
252: invokevirtual #22
255: aload         5
257: ldc           #43
259: invokestatic  #68
262: aload         6
264: invokestatic  #15
267: aload         7
269: invokestatic  #15
272: aload         8
274: invokestatic  #15
277: aload         9
279: invokestatic  #15
282: aload         10
284: invokestatic  #15
287: aload         11
289: invokestatic  #15
292: aload         12
294: invokestatic  #15
297: aload         13
299: invokestatic  #15
302: aload         14
304: invokestatic  #15
307: aload         15
309: invokestatic  #15
312: aload         16
314: invokestatic  #15
317: aload         17
319: invokestatic  #15
322: new           #16
325: dup
326: invokespecial #17
329: ldc           #18
331: invokevirtual #19
334: iload         18
336: invokevirtual #134
339: ldc           #21
341: invokevirtual #19
344: iconst_0
345: invokevirtual #134
348: ldc           #18
350: invokevirtual #19
353: invokevirtual #22
356: iload         18
358: ifne          365
361: iconst_1
362: goto          366
365: iconst_0
366: invokestatic  #23
369: new           #16
372: dup
373: invokespecial #17
376: ldc           #18
378: invokevirtual #19
381: aload         19
383: invokevirtual #19
386: ldc_w         #299
389: invokevirtual #19
392: invokevirtual #22
395: aload         19
397: ldc_w         #300
400: invokestatic  #68
403: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test056
Start line: 2588
End line: 2599
Method source code: 
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("#document=\"\"", "<!---->", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #301
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #302
30: ldc_w         #303
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test057
Start line: 2602
End line: 2655
Method source code: 
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str29 = document28.toString();
        java.lang.String str30 = document28.baseUri();
        org.jsoup.nodes.Document.QuirksMode quirksMode31 = document28.quirksMode();
        boolean boolean33 = document28.hasClass(":lt(32)=\"[.]\"");
        boolean boolean34 = cleaner3.isValid(document28);
        java.util.regex.Pattern pattern35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.select.Elements elements36 = document28.getElementsMatchingOwnText(pattern35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str29, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + quirksMode31 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode31.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #304
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: ldc           #10
159: invokestatic  #193
162: astore        17
164: aload         17
166: invokevirtual #72
169: astore        18
171: aload         17
173: invokevirtual #194
176: astore        19
178: aload         17
180: invokevirtual #222
183: astore        20
185: aload         17
187: ldc           #230
189: invokevirtual #305
192: istore        21
194: aload_3
195: aload         17
197: invokevirtual #155
200: istore        22
202: aconst_null
203: astore        23
205: aload         17
207: aload         23
209: invokevirtual #306
212: astore        24
214: ldc           #76
216: invokestatic  #35
219: goto          224
222: astore        24
224: aload_1
225: invokestatic  #15
228: aload_2
229: invokestatic  #15
232: aload         5
234: invokestatic  #15
237: aload         6
239: invokestatic  #15
242: aload         7
244: invokestatic  #15
247: aload         8
249: invokestatic  #15
252: aload         9
254: invokestatic  #15
257: aload         10
259: invokestatic  #15
262: new           #16
265: dup
266: invokespecial #17
269: ldc           #18
271: invokevirtual #19
274: iload         11
276: invokevirtual #20
279: ldc           #21
281: invokevirtual #19
284: iconst_0
285: invokevirtual #20
288: ldc           #18
290: invokevirtual #19
293: invokevirtual #22
296: iload         11
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #23
309: aload         12
311: invokestatic  #15
314: aload         13
316: invokestatic  #15
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: aload         14
333: invokevirtual #19
336: ldc           #197
338: invokevirtual #19
341: invokevirtual #22
344: aload         14
346: ldc           #151
348: invokestatic  #68
351: new           #16
354: dup
355: invokespecial #17
358: ldc           #18
360: invokevirtual #19
363: aload         15
365: invokevirtual #19
368: ldc           #67
370: invokevirtual #19
373: invokevirtual #22
376: aload         15
378: ldc           #25
380: invokestatic  #68
383: aload         16
385: invokestatic  #15
388: aload         17
390: invokestatic  #15
393: new           #16
396: dup
397: invokespecial #17
400: ldc           #18
402: invokevirtual #19
405: aload         18
407: invokevirtual #19
410: ldc           #197
412: invokevirtual #19
415: invokevirtual #22
418: aload         18
420: ldc           #151
422: invokestatic  #68
425: new           #16
428: dup
429: invokespecial #17
432: ldc           #18
434: invokevirtual #19
437: aload         19
439: invokevirtual #19
442: ldc           #67
444: invokevirtual #19
447: invokevirtual #22
450: aload         19
452: ldc           #25
454: invokestatic  #68
457: new           #16
460: dup
461: invokespecial #17
464: ldc           #18
466: invokevirtual #19
469: aload         20
471: invokevirtual #223
474: ldc           #21
476: invokevirtual #19
479: getstatic     #224
482: invokevirtual #223
485: ldc           #18
487: invokevirtual #19
490: invokevirtual #22
493: aload         20
495: getstatic     #224
498: invokevirtual #225
501: invokestatic  #23
504: new           #16
507: dup
508: invokespecial #17
511: ldc           #18
513: invokevirtual #19
516: iload         21
518: invokevirtual #20
521: ldc           #21
523: invokevirtual #19
526: iconst_0
527: invokevirtual #20
530: ldc           #18
532: invokevirtual #19
535: invokevirtual #22
538: iload         21
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #23
551: new           #16
554: dup
555: invokespecial #17
558: ldc           #18
560: invokevirtual #19
563: iload         22
565: invokevirtual #20
568: ldc           #21
570: invokevirtual #19
573: iconst_1
574: invokevirtual #20
577: ldc           #18
579: invokevirtual #19
582: invokevirtual #22
585: iload         22
587: iconst_1
588: if_icmpne     595
591: iconst_1
592: goto          596
595: iconst_0
596: invokestatic  #23
599: return
Exception table:
from    to  target type
205   219   222   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test058
Start line: 2658
End line: 2706
Method source code: 
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        java.lang.String str5 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist4);
        boolean boolean7 = whitelist4.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray17 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean18 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        boolean boolean19 = org.jsoup.helper.StringUtil.in(" hi!", strArray17);
        org.jsoup.safety.Whitelist whitelist20 = whitelist4.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str32 = org.jsoup.Jsoup.clean(":lt(32)", whitelist31);
        org.jsoup.safety.Whitelist whitelist36 = whitelist31.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray43 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist44 = whitelist31.addTags(strArray43);
        org.jsoup.safety.Whitelist whitelist45 = whitelist27.addProtocols(":matchesOwn(null", "hi!", strArray43);
        java.lang.String[] strArray54 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean55 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray54);
        org.jsoup.safety.Whitelist whitelist56 = whitelist45.addProtocols("\n<!--hi!-->", "#document", strArray54);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray54, "hi!");
        org.jsoup.safety.Whitelist whitelist59 = whitelist20.addProtocols(":lt(32)", "[<html>\n <head></head>\n <body>\n </body>\n</html>]", strArray54);
        java.lang.String str60 = org.jsoup.Jsoup.clean("[[:gt(100)]$=:gt(100)]", whitelist59);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "." + "'", str5, ".");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ":lt(32)" + "'", str32, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[[:gt(100)]$=:gt(100)]" + "'", str60, "[[:gt(100)]$=:gt(100)]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #307
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: invokestatic  #8
114: astore        9
116: aload         9
118: iconst_1
119: invokevirtual #9
122: astore        10
124: aload         10
126: iconst_0
127: invokevirtual #9
130: astore        11
132: invokestatic  #118
135: astore        12
137: ldc           #43
139: aload         12
141: invokestatic  #81
144: astore        13
146: aload         12
148: ldc           #43
150: ldc           #12
152: ldc           #32
154: invokevirtual #11
157: astore        14
159: bipush        6
161: anewarray     #119
164: dup
165: iconst_0
166: ldc           #109
168: aastore
169: dup
170: iconst_1
171: ldc           #10
173: aastore
174: dup
175: iconst_2
176: ldc           #13
178: aastore
179: dup
180: iconst_3
181: ldc           #50
183: aastore
184: dup
185: iconst_4
186: ldc           #12
188: aastore
189: dup
190: iconst_5
191: ldc           #120
193: aastore
194: astore        15
196: aload         12
198: aload         15
200: invokevirtual #121
203: astore        16
205: aload         11
207: ldc           #38
209: ldc           #12
211: aload         15
213: invokevirtual #122
216: astore        17
218: iconst_5
219: anewarray     #119
222: dup
223: iconst_0
224: ldc           #13
226: aastore
227: dup
228: iconst_1
229: ldc           #32
231: aastore
232: dup
233: iconst_2
234: ldc           #10
236: aastore
237: dup
238: iconst_3
239: ldc           #43
241: aastore
242: dup
243: iconst_4
244: ldc           #58
246: aastore
247: astore        18
249: ldc           #10
251: aload         18
253: invokestatic  #123
256: istore        19
258: aload         17
260: ldc           #84
262: ldc           #13
264: aload         18
266: invokevirtual #122
269: astore        20
271: aload         18
273: checkcast     #124
276: ldc           #12
278: invokestatic  #245
281: aload         8
283: ldc           #43
285: ldc           #215
287: aload         18
289: invokevirtual #122
292: astore        21
294: ldc_w         #308
297: aload         21
299: invokestatic  #81
302: astore        22
304: aload_1
305: invokestatic  #15
308: aload_2
309: invokestatic  #15
312: new           #16
315: dup
316: invokespecial #17
319: ldc           #18
321: invokevirtual #19
324: aload_3
325: invokevirtual #19
328: ldc           #85
330: invokevirtual #19
333: invokevirtual #22
336: aload_3
337: ldc           #86
339: invokestatic  #68
342: new           #16
345: dup
346: invokespecial #17
349: ldc           #18
351: invokevirtual #19
354: iload         4
356: invokevirtual #20
359: ldc           #21
361: invokevirtual #19
364: iconst_0
365: invokevirtual #20
368: ldc           #18
370: invokevirtual #19
373: invokevirtual #22
376: iload         4
378: ifne          385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #23
389: aload         5
391: invokestatic  #15
394: new           #16
397: dup
398: invokespecial #17
401: ldc           #18
403: invokevirtual #19
406: iload         6
408: invokevirtual #20
411: ldc           #21
413: invokevirtual #19
416: iconst_1
417: invokevirtual #20
420: ldc           #18
422: invokevirtual #19
425: invokevirtual #22
428: iload         6
430: iconst_1
431: if_icmpne     438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #23
442: new           #16
445: dup
446: invokespecial #17
449: ldc           #18
451: invokevirtual #19
454: iload         7
456: invokevirtual #20
459: ldc           #21
461: invokevirtual #19
464: iconst_0
465: invokevirtual #20
468: ldc           #18
470: invokevirtual #19
473: invokevirtual #22
476: iload         7
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #23
489: aload         8
491: invokestatic  #15
494: aload         9
496: invokestatic  #15
499: aload         10
501: invokestatic  #15
504: aload         11
506: invokestatic  #15
509: aload         12
511: invokestatic  #15
514: new           #16
517: dup
518: invokespecial #17
521: ldc           #18
523: invokevirtual #19
526: aload         13
528: invokevirtual #19
531: ldc           #128
533: invokevirtual #19
536: invokevirtual #22
539: aload         13
541: ldc           #43
543: invokestatic  #68
546: aload         14
548: invokestatic  #15
551: aload         15
553: invokestatic  #15
556: aload         16
558: invokestatic  #15
561: aload         17
563: invokestatic  #15
566: aload         18
568: invokestatic  #15
571: new           #16
574: dup
575: invokespecial #17
578: ldc           #18
580: invokevirtual #19
583: iload         19
585: invokevirtual #20
588: ldc           #21
590: invokevirtual #19
593: iconst_1
594: invokevirtual #20
597: ldc           #18
599: invokevirtual #19
602: invokevirtual #22
605: iload         19
607: iconst_1
608: if_icmpne     615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #23
619: aload         20
621: invokestatic  #15
624: aload         21
626: invokestatic  #15
629: new           #16
632: dup
633: invokespecial #17
636: ldc           #18
638: invokevirtual #19
641: aload         22
643: invokevirtual #19
646: ldc_w         #309
649: invokevirtual #19
652: invokevirtual #22
655: aload         22
657: ldc_w         #308
660: invokestatic  #68
663: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test059
Start line: 2709
End line: 2720
Method source code: 
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("", "#[:lt(32)*=.\n \n \n]", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #310
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc_w         #311
32: aload_1
33: invokestatic  #94
36: astore_2
37: ldc           #34
39: invokestatic  #35
42: goto          46
45: astore_2
46: return
Exception table:
from    to  target type
27    42    45   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test060
Start line: 2723
End line: 2734
Method source code: 
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basic();
        java.lang.String str5 = org.jsoup.Jsoup.clean("\nhi!", ".<html>\n <head></head>\n <body></body>\n</html>", whitelist4);
        boolean boolean6 = org.jsoup.Jsoup.isValid("[:lt(32)]", whitelist4);
        java.lang.String str7 = org.jsoup.Jsoup.clean("[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]", whitelist4);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[    *=:lt(32)]" + "'", str7, "[    *=:lt(32)]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #312
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #313
28: astore_1
29: ldc           #98
31: ldc           #32
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #58
40: aload_1
41: invokestatic  #14
44: istore_3
45: ldc           #228
47: aload_1
48: invokestatic  #81
51: astore        4
53: aload_1
54: invokestatic  #15
57: new           #16
60: dup
61: invokespecial #17
64: ldc           #18
66: invokevirtual #19
69: aload_2
70: invokevirtual #19
73: ldc           #211
75: invokevirtual #19
78: invokevirtual #22
81: aload_2
82: ldc           #12
84: invokestatic  #68
87: new           #16
90: dup
91: invokespecial #17
94: ldc           #18
96: invokevirtual #19
99: iload_3
100: invokevirtual #20
103: ldc           #21
105: invokevirtual #19
108: iconst_1
109: invokevirtual #20
112: ldc           #18
114: invokevirtual #19
117: invokevirtual #22
120: iload_3
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #23
133: new           #16
136: dup
137: invokespecial #17
140: ldc           #18
142: invokevirtual #19
145: aload         4
147: invokevirtual #19
150: ldc_w         #314
153: invokevirtual #19
156: invokevirtual #22
159: aload         4
161: ldc_w         #315
164: invokestatic  #68
167: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test061
Start line: 2737
End line: 2749
Method source code: 
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner4 = new org.jsoup.safety.Cleaner(whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("#document");
        java.lang.String str7 = org.jsoup.Jsoup.clean("[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]", whitelist3);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[    =hi!]" + "'", str7, "[    =hi!]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #316
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: aload_2
45: ldc           #13
47: invokevirtual #83
50: istore        4
52: ldc_w         #317
55: aload_2
56: invokestatic  #81
59: astore        5
61: aload_1
62: invokestatic  #15
65: aload_2
66: invokestatic  #15
69: new           #16
72: dup
73: invokespecial #17
76: ldc           #18
78: invokevirtual #19
81: iload         4
83: invokevirtual #20
86: ldc           #21
88: invokevirtual #19
91: iconst_0
92: invokevirtual #20
95: ldc           #18
97: invokevirtual #19
100: invokevirtual #22
103: iload         4
105: ifne          112
108: iconst_1
109: goto          113
112: iconst_0
113: invokestatic  #23
116: new           #16
119: dup
120: invokespecial #17
123: ldc           #18
125: invokevirtual #19
128: aload         5
130: invokevirtual #19
133: ldc_w         #318
136: invokevirtual #19
139: invokevirtual #22
142: aload         5
144: ldc_w         #319
147: invokestatic  #68
150: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test062
Start line: 2752
End line: 2803
Method source code: 
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("#text");
        java.lang.String str7 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist4);
        java.lang.String str8 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist4);
        org.jsoup.select.Evaluator.Class class11 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList17 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document15, "hi!");
        org.jsoup.nodes.Element element19 = document15.tagName("hi!");
        org.jsoup.nodes.Element element21 = document15.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = document15.outputSettings();
        org.jsoup.select.Elements elements24 = document15.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element26 = document15.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes27 = document15.attributes();
        org.jsoup.nodes.Element element29 = document15.prepend("[^hi!]");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.tagName("hi!");
        org.jsoup.nodes.Element element39 = document33.append("");
        org.jsoup.nodes.Element element42 = document33.attr("#document", "#document");
        org.jsoup.nodes.Element element43 = document33.body();
        boolean boolean44 = class11.matches((org.jsoup.nodes.Element) document15, (org.jsoup.nodes.Element) document33);
        org.jsoup.nodes.Attribute attribute47 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean48 = whitelist4.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document15, attribute47);
        attribute47.setKey("[:gt(100)]");
        java.lang.String str51 = attribute47.html();
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[    ^=hi!]" + "'", str8, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertNotNull(elements24);
        org.junit.Assert.assertNull(element26);
        org.junit.Assert.assertNotNull(attributes27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(attribute47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[:gt(100)]=\"\"" + "'", str51, "[:gt(100)]=\"\"");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #320
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: new           #160
58: dup
59: ldc           #10
61: invokespecial #161
64: astore        5
66: ldc           #25
68: ldc           #12
70: invokestatic  #26
73: astore        6
75: ldc           #12
77: aload         6
79: ldc           #12
81: invokestatic  #27
84: astore        7
86: aload         6
88: ldc           #12
90: invokevirtual #28
93: astore        8
95: aload         6
97: ldc           #25
99: invokevirtual #29
102: astore        9
104: aload         6
106: invokevirtual #30
109: astore        10
111: aload         6
113: iconst_m1
114: invokevirtual #162
117: astore        11
119: aload         6
121: ldc           #10
123: invokevirtual #163
126: astore        12
128: aload         6
130: invokevirtual #164
133: astore        13
135: aload         6
137: ldc           #50
139: invokevirtual #165
142: astore        14
144: ldc           #25
146: ldc           #12
148: invokestatic  #26
151: astore        15
153: ldc           #12
155: aload         15
157: ldc           #12
159: invokestatic  #27
162: astore        16
164: aload         15
166: ldc           #12
168: invokevirtual #28
171: astore        17
173: aload         15
175: ldc           #25
177: invokevirtual #29
180: astore        18
182: aload         15
184: ldc           #13
186: ldc           #13
188: invokevirtual #56
191: astore        19
193: aload         15
195: invokevirtual #166
198: astore        20
200: aload         5
202: aload         6
204: aload         15
206: invokevirtual #167
209: istore        21
211: ldc           #114
213: ldc           #25
215: invokestatic  #168
218: astore        22
220: aload_1
221: ldc           #110
223: aload         6
225: aload         22
227: invokevirtual #169
230: istore        23
232: aload         22
234: ldc_w         #262
237: invokevirtual #266
240: aload         22
242: invokevirtual #321
245: astore        24
247: aload_1
248: invokestatic  #15
251: aload_2
252: invokestatic  #15
255: new           #16
258: dup
259: invokespecial #17
262: ldc           #18
264: invokevirtual #19
267: aload_3
268: invokevirtual #19
271: ldc           #67
273: invokevirtual #19
276: invokevirtual #22
279: aload_3
280: ldc           #25
282: invokestatic  #68
285: new           #16
288: dup
289: invokespecial #17
292: ldc           #18
294: invokevirtual #19
297: aload         4
299: invokevirtual #19
302: ldc           #172
304: invokevirtual #19
307: invokevirtual #22
310: aload         4
312: ldc           #173
314: invokestatic  #68
317: aload         6
319: invokestatic  #15
322: aload         7
324: invokestatic  #15
327: aload         8
329: invokestatic  #15
332: aload         9
334: invokestatic  #15
337: aload         10
339: invokestatic  #15
342: aload         11
344: invokestatic  #15
347: aload         12
349: invokestatic  #79
352: aload         13
354: invokestatic  #15
357: aload         14
359: invokestatic  #15
362: aload         15
364: invokestatic  #15
367: aload         16
369: invokestatic  #15
372: aload         17
374: invokestatic  #15
377: aload         18
379: invokestatic  #15
382: aload         19
384: invokestatic  #15
387: aload         20
389: invokestatic  #15
392: new           #16
395: dup
396: invokespecial #17
399: ldc           #18
401: invokevirtual #19
404: iload         21
406: invokevirtual #20
409: ldc           #21
411: invokevirtual #19
414: iconst_0
415: invokevirtual #20
418: ldc           #18
420: invokevirtual #19
423: invokevirtual #22
426: iload         21
428: ifne          435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #23
439: aload         22
441: invokestatic  #15
444: new           #16
447: dup
448: invokespecial #17
451: ldc           #18
453: invokevirtual #19
456: iload         23
458: invokevirtual #20
461: ldc           #21
463: invokevirtual #19
466: iconst_0
467: invokevirtual #20
470: ldc           #18
472: invokevirtual #19
475: invokevirtual #22
478: iload         23
480: ifne          487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #23
491: new           #16
494: dup
495: invokespecial #17
498: ldc           #18
500: invokevirtual #19
503: aload         24
505: invokevirtual #19
508: ldc_w         #322
511: invokevirtual #19
514: invokevirtual #22
517: aload         24
519: ldc_w         #323
522: invokestatic  #68
525: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test063
Start line: 2806
End line: 2851
Method source code: 
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str4 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str10 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist9);
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist14 = whitelist12.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist16 = whitelist14.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist20 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str21 = org.jsoup.Jsoup.clean(":lt(32)", whitelist20);
        org.jsoup.safety.Whitelist whitelist25 = whitelist20.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray32 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist33 = whitelist20.addTags(strArray32);
        org.jsoup.safety.Whitelist whitelist34 = whitelist16.addProtocols(":matchesOwn(null", "hi!", strArray32);
        java.lang.String[] strArray43 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean44 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray43);
        org.jsoup.safety.Whitelist whitelist45 = whitelist34.addProtocols("\n<!--hi!-->", "#document", strArray43);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray43);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray43);
        org.jsoup.safety.Whitelist whitelist48 = whitelist9.addAttributes("*", strArray43);
        org.jsoup.safety.Whitelist whitelist49 = whitelist3.addTags(strArray43);
        java.lang.String str50 = org.jsoup.Jsoup.clean("[:gt(100)]", whitelist49);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[hi!$=   ]" + "'", str4, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!$=   ]" + "'", str10, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":lt(32)" + "'", str21, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[:gt(100)]" + "'", str50, "[:gt(100)]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #324
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: invokestatic  #8
48: astore        4
50: ldc           #109
52: ldc           #110
54: aload         4
56: invokestatic  #94
59: astore        5
61: invokestatic  #8
64: astore        6
66: aload         6
68: iconst_1
69: invokevirtual #9
72: astore        7
74: aload         7
76: iconst_0
77: invokevirtual #9
80: astore        8
82: invokestatic  #118
85: astore        9
87: ldc           #43
89: aload         9
91: invokestatic  #81
94: astore        10
96: aload         9
98: ldc           #43
100: ldc           #12
102: ldc           #32
104: invokevirtual #11
107: astore        11
109: bipush        6
111: anewarray     #119
114: dup
115: iconst_0
116: ldc           #109
118: aastore
119: dup
120: iconst_1
121: ldc           #10
123: aastore
124: dup
125: iconst_2
126: ldc           #13
128: aastore
129: dup
130: iconst_3
131: ldc           #50
133: aastore
134: dup
135: iconst_4
136: ldc           #12
138: aastore
139: dup
140: iconst_5
141: ldc           #120
143: aastore
144: astore        12
146: aload         9
148: aload         12
150: invokevirtual #121
153: astore        13
155: aload         8
157: ldc           #38
159: ldc           #12
161: aload         12
163: invokevirtual #122
166: astore        14
168: iconst_5
169: anewarray     #119
172: dup
173: iconst_0
174: ldc           #13
176: aastore
177: dup
178: iconst_1
179: ldc           #32
181: aastore
182: dup
183: iconst_2
184: ldc           #10
186: aastore
187: dup
188: iconst_3
189: ldc           #43
191: aastore
192: dup
193: iconst_4
194: ldc           #58
196: aastore
197: astore        15
199: ldc           #10
201: aload         15
203: invokestatic  #123
206: istore        16
208: aload         14
210: ldc           #84
212: ldc           #13
214: aload         15
216: invokevirtual #122
219: astore        17
221: aload         15
223: checkcast     #124
226: invokestatic  #125
229: aload         15
231: checkcast     #124
234: invokestatic  #125
237: aload         4
239: ldc           #126
241: aload         15
243: invokevirtual #127
246: astore        18
248: aload_1
249: aload         15
251: invokevirtual #121
254: astore        19
256: ldc_w         #262
259: aload         19
261: invokestatic  #81
264: astore        20
266: aload_1
267: invokestatic  #15
270: new           #16
273: dup
274: invokespecial #17
277: ldc           #18
279: invokevirtual #19
282: aload_2
283: invokevirtual #19
286: ldc           #111
288: invokevirtual #19
291: invokevirtual #22
294: aload_2
295: ldc           #65
297: invokestatic  #68
300: new           #16
303: dup
304: invokespecial #17
307: ldc           #18
309: invokevirtual #19
312: iload_3
313: invokevirtual #20
316: ldc           #21
318: invokevirtual #19
321: iconst_0
322: invokevirtual #20
325: ldc           #18
327: invokevirtual #19
330: invokevirtual #22
333: iload_3
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #23
345: aload         4
347: invokestatic  #15
350: new           #16
353: dup
354: invokespecial #17
357: ldc           #18
359: invokevirtual #19
362: aload         5
364: invokevirtual #19
367: ldc           #111
369: invokevirtual #19
372: invokevirtual #22
375: aload         5
377: ldc           #65
379: invokestatic  #68
382: aload         6
384: invokestatic  #15
387: aload         7
389: invokestatic  #15
392: aload         8
394: invokestatic  #15
397: aload         9
399: invokestatic  #15
402: new           #16
405: dup
406: invokespecial #17
409: ldc           #18
411: invokevirtual #19
414: aload         10
416: invokevirtual #19
419: ldc           #128
421: invokevirtual #19
424: invokevirtual #22
427: aload         10
429: ldc           #43
431: invokestatic  #68
434: aload         11
436: invokestatic  #15
439: aload         12
441: invokestatic  #15
444: aload         13
446: invokestatic  #15
449: aload         14
451: invokestatic  #15
454: aload         15
456: invokestatic  #15
459: new           #16
462: dup
463: invokespecial #17
466: ldc           #18
468: invokevirtual #19
471: iload         16
473: invokevirtual #20
476: ldc           #21
478: invokevirtual #19
481: iconst_1
482: invokevirtual #20
485: ldc           #18
487: invokevirtual #19
490: invokevirtual #22
493: iload         16
495: iconst_1
496: if_icmpne     503
499: iconst_1
500: goto          504
503: iconst_0
504: invokestatic  #23
507: aload         17
509: invokestatic  #15
512: aload         18
514: invokestatic  #15
517: aload         19
519: invokestatic  #15
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: aload         20
536: invokevirtual #19
539: ldc_w         #325
542: invokevirtual #19
545: invokevirtual #22
548: aload         20
550: ldc_w         #262
553: invokestatic  #68
556: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test064
Start line: 2854
End line: 2883
Method source code: 
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist9 = whitelist7.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str14 = org.jsoup.Jsoup.clean(":lt(32)", whitelist13);
        org.jsoup.safety.Whitelist whitelist18 = whitelist13.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray25 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist26 = whitelist13.addTags(strArray25);
        org.jsoup.safety.Whitelist whitelist27 = whitelist9.addProtocols(":matchesOwn(null", "hi!", strArray25);
        org.jsoup.safety.Whitelist whitelist28 = whitelist2.addAttributes("[^hi!]", strArray25);
        org.jsoup.safety.Whitelist whitelist30 = whitelist28.preserveRelativeLinks(true);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + ":lt(32)" + "'", str14, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #326
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: invokestatic  #8
41: astore_3
42: aload_3
43: iconst_1
44: invokevirtual #9
47: astore        4
49: aload         4
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #118
60: astore        6
62: ldc           #43
64: aload         6
66: invokestatic  #81
69: astore        7
71: aload         6
73: ldc           #43
75: ldc           #12
77: ldc           #32
79: invokevirtual #11
82: astore        8
84: bipush        6
86: anewarray     #119
89: dup
90: iconst_0
91: ldc           #109
93: aastore
94: dup
95: iconst_1
96: ldc           #10
98: aastore
99: dup
100: iconst_2
101: ldc           #13
103: aastore
104: dup
105: iconst_3
106: ldc           #50
108: aastore
109: dup
110: iconst_4
111: ldc           #12
113: aastore
114: dup
115: iconst_5
116: ldc           #120
118: aastore
119: astore        9
121: aload         6
123: aload         9
125: invokevirtual #121
128: astore        10
130: aload         5
132: ldc           #38
134: ldc           #12
136: aload         9
138: invokevirtual #122
141: astore        11
143: aload_1
144: ldc           #50
146: aload         9
148: invokevirtual #127
151: astore        12
153: aload         12
155: iconst_1
156: invokevirtual #9
159: astore        13
161: aload_1
162: invokestatic  #15
165: new           #16
168: dup
169: invokespecial #17
172: ldc           #18
174: invokevirtual #19
177: aload_2
178: invokevirtual #19
181: ldc           #111
183: invokevirtual #19
186: invokevirtual #22
189: aload_2
190: ldc           #65
192: invokestatic  #68
195: aload_3
196: invokestatic  #15
199: aload         4
201: invokestatic  #15
204: aload         5
206: invokestatic  #15
209: aload         6
211: invokestatic  #15
214: new           #16
217: dup
218: invokespecial #17
221: ldc           #18
223: invokevirtual #19
226: aload         7
228: invokevirtual #19
231: ldc           #128
233: invokevirtual #19
236: invokevirtual #22
239: aload         7
241: ldc           #43
243: invokestatic  #68
246: aload         8
248: invokestatic  #15
251: aload         9
253: invokestatic  #15
256: aload         10
258: invokestatic  #15
261: aload         11
263: invokestatic  #15
266: aload         12
268: invokestatic  #15
271: aload         13
273: invokestatic  #15
276: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test065
Start line: 2886
End line: 2951
Method source code: 
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist2.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str9 = org.jsoup.Jsoup.clean("\nhi!", whitelist8);
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str16 = org.jsoup.Jsoup.clean(":lt(32)", whitelist15);
        boolean boolean18 = whitelist15.isSafeTag("");
        org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList24 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document22, "hi!");
        org.jsoup.nodes.Element element25 = document22.empty();
        org.jsoup.nodes.Element element27 = document22.removeClass("hi!");
        org.jsoup.nodes.Document document31 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList33 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document31, "hi!");
        org.jsoup.nodes.Element element35 = document31.tagName("hi!");
        org.jsoup.nodes.Element element37 = document31.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings38 = document31.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings40 = outputSettings38.prettyPrint(false);
        org.jsoup.nodes.Document document41 = document22.outputSettings(outputSettings40);
        java.lang.String str42 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist15, outputSettings40);
        org.jsoup.safety.Whitelist whitelist44 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist46 = whitelist44.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist48 = whitelist46.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist52 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str53 = org.jsoup.Jsoup.clean(":lt(32)", whitelist52);
        org.jsoup.safety.Whitelist whitelist57 = whitelist52.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray64 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist65 = whitelist52.addTags(strArray64);
        org.jsoup.safety.Whitelist whitelist66 = whitelist48.addProtocols(":matchesOwn(null", "hi!", strArray64);
        org.jsoup.safety.Whitelist whitelist67 = whitelist15.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray64);
        org.jsoup.safety.Whitelist whitelist68 = whitelist8.addProtocols("#doctype", "[]", strArray64);
        boolean boolean69 = org.jsoup.Jsoup.isValid("", whitelist68);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":lt(32)" + "'", str16, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(nodeList33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(outputSettings38);
        org.junit.Assert.assertNotNull(outputSettings40);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[:lt(32)]" + "'", str42, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":lt(32)" + "'", str53, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #327
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: ldc           #98
48: aload_3
49: invokestatic  #81
52: astore        4
54: invokestatic  #118
57: astore        5
59: ldc           #43
61: aload         5
63: invokestatic  #81
66: astore        6
68: aload         5
70: ldc           #25
72: invokevirtual #83
75: istore        7
77: ldc           #25
79: ldc           #12
81: invokestatic  #26
84: astore        8
86: ldc           #12
88: aload         8
90: ldc           #12
92: invokestatic  #27
95: astore        9
97: aload         8
99: invokevirtual #103
102: astore        10
104: aload         8
106: ldc           #12
108: invokevirtual #59
111: astore        11
113: ldc           #25
115: ldc           #12
117: invokestatic  #26
120: astore        12
122: ldc           #12
124: aload         12
126: ldc           #12
128: invokestatic  #27
131: astore        13
133: aload         12
135: ldc           #12
137: invokevirtual #28
140: astore        14
142: aload         12
144: ldc           #25
146: invokevirtual #29
149: astore        15
151: aload         12
153: invokevirtual #30
156: astore        16
158: aload         16
160: iconst_0
161: invokevirtual #31
164: astore        17
166: aload         8
168: aload         17
170: invokevirtual #175
173: astore        18
175: ldc           #58
177: ldc           #126
179: aload         5
181: aload         17
183: invokestatic  #33
186: astore        19
188: invokestatic  #8
191: astore        20
193: aload         20
195: iconst_1
196: invokevirtual #9
199: astore        21
201: aload         21
203: iconst_0
204: invokevirtual #9
207: astore        22
209: invokestatic  #118
212: astore        23
214: ldc           #43
216: aload         23
218: invokestatic  #81
221: astore        24
223: aload         23
225: ldc           #43
227: ldc           #12
229: ldc           #32
231: invokevirtual #11
234: astore        25
236: bipush        6
238: anewarray     #119
241: dup
242: iconst_0
243: ldc           #109
245: aastore
246: dup
247: iconst_1
248: ldc           #10
250: aastore
251: dup
252: iconst_2
253: ldc           #13
255: aastore
256: dup
257: iconst_3
258: ldc           #50
260: aastore
261: dup
262: iconst_4
263: ldc           #12
265: aastore
266: dup
267: iconst_5
268: ldc           #120
270: aastore
271: astore        26
273: aload         23
275: aload         26
277: invokevirtual #121
280: astore        27
282: aload         22
284: ldc           #38
286: ldc           #12
288: aload         26
290: invokevirtual #122
293: astore        28
295: aload         5
297: ldc           #109
299: aload         26
301: invokevirtual #127
304: astore        29
306: aload_3
307: ldc           #187
309: ldc           #159
311: aload         26
313: invokevirtual #122
316: astore        30
318: ldc           #25
320: aload         30
322: invokestatic  #14
325: istore        31
327: aload_1
328: invokestatic  #15
331: aload_2
332: invokestatic  #15
335: aload_3
336: invokestatic  #15
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: aload         4
353: invokevirtual #19
356: ldc           #211
358: invokevirtual #19
361: invokevirtual #22
364: aload         4
366: ldc           #12
368: invokestatic  #68
371: aload         5
373: invokestatic  #15
376: new           #16
379: dup
380: invokespecial #17
383: ldc           #18
385: invokevirtual #19
388: aload         6
390: invokevirtual #19
393: ldc           #128
395: invokevirtual #19
398: invokevirtual #22
401: aload         6
403: ldc           #43
405: invokestatic  #68
408: new           #16
411: dup
412: invokespecial #17
415: ldc           #18
417: invokevirtual #19
420: iload         7
422: invokevirtual #20
425: ldc           #21
427: invokevirtual #19
430: iconst_0
431: invokevirtual #20
434: ldc           #18
436: invokevirtual #19
439: invokevirtual #22
442: iload         7
444: ifne          451
447: iconst_1
448: goto          452
451: iconst_0
452: invokestatic  #23
455: aload         8
457: invokestatic  #15
460: aload         9
462: invokestatic  #15
465: aload         10
467: invokestatic  #15
470: aload         11
472: invokestatic  #15
475: aload         12
477: invokestatic  #15
480: aload         13
482: invokestatic  #15
485: aload         14
487: invokestatic  #15
490: aload         15
492: invokestatic  #15
495: aload         16
497: invokestatic  #15
500: aload         17
502: invokestatic  #15
505: aload         18
507: invokestatic  #15
510: new           #16
513: dup
514: invokespecial #17
517: ldc           #18
519: invokevirtual #19
522: aload         19
524: invokevirtual #19
527: ldc           #184
529: invokevirtual #19
532: invokevirtual #22
535: aload         19
537: ldc           #58
539: invokestatic  #68
542: aload         20
544: invokestatic  #15
547: aload         21
549: invokestatic  #15
552: aload         22
554: invokestatic  #15
557: aload         23
559: invokestatic  #15
562: new           #16
565: dup
566: invokespecial #17
569: ldc           #18
571: invokevirtual #19
574: aload         24
576: invokevirtual #19
579: ldc           #128
581: invokevirtual #19
584: invokevirtual #22
587: aload         24
589: ldc           #43
591: invokestatic  #68
594: aload         25
596: invokestatic  #15
599: aload         26
601: invokestatic  #15
604: aload         27
606: invokestatic  #15
609: aload         28
611: invokestatic  #15
614: aload         29
616: invokestatic  #15
619: aload         30
621: invokestatic  #15
624: new           #16
627: dup
628: invokespecial #17
631: ldc           #18
633: invokevirtual #19
636: iload         31
638: invokevirtual #20
641: ldc           #21
643: invokevirtual #19
646: iconst_1
647: invokevirtual #20
650: ldc           #18
652: invokevirtual #19
655: invokevirtual #22
658: iload         31
660: iconst_1
661: if_icmpne     668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #23
672: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test066
Start line: 2954
End line: 3035
Method source code: 
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining2 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        boolean boolean16 = attributeWithValueContaining2.matches((org.jsoup.nodes.Element) document4, (org.jsoup.nodes.Element) document8);
        org.jsoup.nodes.Element element18 = document8.toggleClass("#doctype");
        org.jsoup.nodes.Element element19 = document8.head();
        org.jsoup.select.Elements elements21 = document8.getElementsByAttributeStarting(":gt(100)");
        int int22 = document8.siblingIndex();
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner26 = new org.jsoup.safety.Cleaner(whitelist25);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining29 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document31 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = document35.outputSettings();
        boolean boolean43 = attributeWithValueContaining29.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document35);
        org.jsoup.nodes.Document document44 = cleaner26.clean(document35);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan46 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document49 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str50 = document49.ownText();
        org.jsoup.nodes.Node node53 = document49.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element68 = document57.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element70 = document57.createElement(" hi!");
        org.jsoup.select.Elements elements72 = document57.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean73 = indexLessThan46.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document74 = cleaner26.clean(document57);
        boolean boolean75 = document8.equals((java.lang.Object) document74);
        org.jsoup.nodes.Element element77 = document8.text(":lt(32)=\"\"=\".\"");
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(elements21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(elements72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(document74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(element77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #328
20: aastore
21: invokevirtual #7
24: pop
25: new           #42
28: dup
29: ldc           #43
31: ldc           #32
33: invokespecial #44
36: astore_1
37: ldc           #12
39: invokestatic  #45
42: astore_2
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore_3
51: ldc           #12
53: aload_3
54: ldc           #12
56: invokestatic  #27
59: astore        4
61: aload_3
62: ldc           #12
64: invokevirtual #28
67: astore        5
69: aload_3
70: ldc           #25
72: invokevirtual #29
75: astore        6
77: aload_3
78: invokevirtual #30
81: astore        7
83: aload_1
84: aload_2
85: aload_3
86: invokevirtual #46
89: istore        8
91: aload_3
92: ldc           #187
94: invokevirtual #199
97: astore        9
99: aload_3
100: invokevirtual #200
103: astore        10
105: aload_3
106: ldc           #92
108: invokevirtual #140
111: astore        11
113: aload_3
114: invokevirtual #201
117: istore        12
119: invokestatic  #8
122: astore        13
124: aload         13
126: iconst_1
127: invokevirtual #9
130: astore        14
132: new           #40
135: dup
136: aload         14
138: invokespecial #41
141: astore        15
143: new           #42
146: dup
147: ldc           #43
149: ldc           #32
151: invokespecial #44
154: astore        16
156: ldc           #12
158: invokestatic  #45
161: astore        17
163: ldc           #25
165: ldc           #12
167: invokestatic  #26
170: astore        18
172: ldc           #12
174: aload         18
176: ldc           #12
178: invokestatic  #27
181: astore        19
183: aload         18
185: ldc           #12
187: invokevirtual #28
190: astore        20
192: aload         18
194: ldc           #25
196: invokevirtual #29
199: astore        21
201: aload         18
203: invokevirtual #30
206: astore        22
208: aload         16
210: aload         17
212: aload         18
214: invokevirtual #46
217: istore        23
219: aload         15
221: aload         18
223: invokevirtual #47
226: astore        24
228: new           #48
231: dup
232: iconst_m1
233: invokespecial #49
236: astore        25
238: ldc           #50
240: ldc           #51
242: invokestatic  #52
245: astore        26
247: aload         26
249: invokevirtual #53
252: astore        27
254: aload         26
256: ldc           #54
258: ldc           #55
260: invokevirtual #56
263: astore        28
265: ldc           #25
267: ldc           #12
269: invokestatic  #26
272: astore        29
274: ldc           #12
276: aload         29
278: ldc           #12
280: invokestatic  #27
283: astore        30
285: aload         29
287: ldc           #12
289: invokevirtual #28
292: astore        31
294: aload         29
296: ldc           #25
298: invokevirtual #29
301: astore        32
303: aload         29
305: invokevirtual #30
308: astore        33
310: aload         29
312: ldc           #12
314: invokevirtual #57
317: astore        34
319: aload         29
321: ldc           #58
323: invokevirtual #59
326: astore        35
328: aload         29
330: ldc           #60
332: invokevirtual #61
335: astore        36
337: aload         29
339: ldc           #38
341: invokevirtual #62
344: astore        37
346: aload         25
348: aload         26
350: aload         29
352: invokevirtual #63
355: istore        38
357: aload         15
359: aload         29
361: invokevirtual #47
364: astore        39
366: aload_3
367: aload         39
369: invokevirtual #202
372: istore        40
374: aload_3
375: ldc_w         #329
378: invokevirtual #64
381: astore        41
383: aload_2
384: invokestatic  #15
387: aload_3
388: invokestatic  #15
391: aload         4
393: invokestatic  #15
396: aload         5
398: invokestatic  #15
401: aload         6
403: invokestatic  #15
406: aload         7
408: invokestatic  #15
411: new           #16
414: dup
415: invokespecial #17
418: ldc           #18
420: invokevirtual #19
423: iload         8
425: invokevirtual #20
428: ldc           #21
430: invokevirtual #19
433: iconst_0
434: invokevirtual #20
437: ldc           #18
439: invokevirtual #19
442: invokevirtual #22
445: iload         8
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #23
458: aload         9
460: invokestatic  #15
463: aload         10
465: invokestatic  #15
468: aload         11
470: invokestatic  #15
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: iload         12
487: invokevirtual #134
490: ldc           #21
492: invokevirtual #19
495: iconst_0
496: invokevirtual #134
499: ldc           #18
501: invokevirtual #19
504: invokevirtual #22
507: iload         12
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #23
520: aload         13
522: invokestatic  #15
525: aload         14
527: invokestatic  #15
530: aload         17
532: invokestatic  #15
535: aload         18
537: invokestatic  #15
540: aload         19
542: invokestatic  #15
545: aload         20
547: invokestatic  #15
550: aload         21
552: invokestatic  #15
555: aload         22
557: invokestatic  #15
560: new           #16
563: dup
564: invokespecial #17
567: ldc           #18
569: invokevirtual #19
572: iload         23
574: invokevirtual #20
577: ldc           #21
579: invokevirtual #19
582: iconst_0
583: invokevirtual #20
586: ldc           #18
588: invokevirtual #19
591: invokevirtual #22
594: iload         23
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #23
607: aload         24
609: invokestatic  #15
612: aload         26
614: invokestatic  #15
617: new           #16
620: dup
621: invokespecial #17
624: ldc           #18
626: invokevirtual #19
629: aload         27
631: invokevirtual #19
634: ldc           #67
636: invokevirtual #19
639: invokevirtual #22
642: aload         27
644: ldc           #25
646: invokestatic  #68
649: aload         28
651: invokestatic  #15
654: aload         29
656: invokestatic  #15
659: aload         30
661: invokestatic  #15
664: aload         31
666: invokestatic  #15
669: aload         32
671: invokestatic  #15
674: aload         33
676: invokestatic  #15
679: aload         34
681: invokestatic  #15
684: aload         35
686: invokestatic  #15
689: aload         36
691: invokestatic  #15
694: aload         37
696: invokestatic  #15
699: new           #16
702: dup
703: invokespecial #17
706: ldc           #18
708: invokevirtual #19
711: iload         38
713: invokevirtual #20
716: ldc           #21
718: invokevirtual #19
721: iconst_0
722: invokevirtual #20
725: ldc           #18
727: invokevirtual #19
730: invokevirtual #22
733: iload         38
735: ifne          742
738: iconst_1
739: goto          743
742: iconst_0
743: invokestatic  #23
746: aload         39
748: invokestatic  #15
751: new           #16
754: dup
755: invokespecial #17
758: ldc           #18
760: invokevirtual #19
763: iload         40
765: invokevirtual #20
768: ldc           #21
770: invokevirtual #19
773: iconst_0
774: invokevirtual #20
777: ldc           #18
779: invokevirtual #19
782: invokevirtual #22
785: iload         40
787: ifne          794
790: iconst_1
791: goto          795
794: iconst_0
795: invokestatic  #23
798: aload         41
800: invokestatic  #15
803: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test067
Start line: 3038
End line: 3051
Method source code: 
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist2.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist10 = whitelist2.preserveRelativeLinks(false);
        java.lang.String str11 = org.jsoup.Jsoup.clean("#root", "[[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]$=[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]]", whitelist10);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#root" + "'", str11, "#root");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: iconst_0
48: invokevirtual #9
51: astore        4
53: ldc_w         #331
56: ldc           #195
58: aload         4
60: invokestatic  #94
63: astore        5
65: aload_1
66: invokestatic  #15
69: aload_2
70: invokestatic  #15
73: aload_3
74: invokestatic  #15
77: aload         4
79: invokestatic  #15
82: new           #16
85: dup
86: invokespecial #17
89: ldc           #18
91: invokevirtual #19
94: aload         5
96: invokevirtual #19
99: ldc_w         #332
102: invokevirtual #19
105: invokevirtual #22
108: aload         5
110: ldc_w         #331
113: invokestatic  #68
116: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test068
Start line: 3054
End line: 3067
Method source code: 
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist11 = whitelist1.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str12 = org.jsoup.Jsoup.clean("[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]", whitelist11);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[    *=:lt(32)]" + "'", str12, "[    *=:lt(32)]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #333
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: ldc           #228
60: aload         4
62: invokestatic  #81
65: astore        5
67: aload_1
68: invokestatic  #15
71: aload_2
72: invokestatic  #15
75: aload_3
76: invokestatic  #15
79: aload         4
81: invokestatic  #15
84: new           #16
87: dup
88: invokespecial #17
91: ldc           #18
93: invokevirtual #19
96: aload         5
98: invokevirtual #19
101: ldc_w         #314
104: invokevirtual #19
107: invokevirtual #22
110: aload         5
112: ldc_w         #315
115: invokestatic  #68
118: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test069
Start line: 3070
End line: 3098
Method source code: 
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes3 = whitelist1.getEnforcedAttributes("#text");
        java.lang.String str4 = org.jsoup.Jsoup.clean(":lt(32)=\"\"=\".\"", whitelist1);
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner8 = new org.jsoup.safety.Cleaner(whitelist7);
        org.jsoup.safety.Whitelist whitelist11 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str12 = org.jsoup.Jsoup.clean(":lt(32)", whitelist11);
        org.jsoup.safety.Whitelist whitelist16 = whitelist11.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray23 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist24 = whitelist11.addTags(strArray23);
        org.jsoup.safety.Whitelist whitelist25 = whitelist7.addAttributes(":gt(100)", strArray23);
        org.jsoup.safety.Whitelist whitelist26 = whitelist1.addTags(strArray23);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(attributes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":lt(32)=&quot;&quot;=&quot;.&quot;" + "'", str4, ":lt(32)=&quot;&quot;=&quot;.&quot;");
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ":lt(32)" + "'", str12, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #334
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc_w         #329
39: aload_1
40: invokestatic  #81
43: astore_3
44: invokestatic  #8
47: astore        4
49: aload         4
51: iconst_1
52: invokevirtual #9
55: astore        5
57: new           #40
60: dup
61: aload         5
63: invokespecial #41
66: astore        6
68: invokestatic  #118
71: astore        7
73: ldc           #43
75: aload         7
77: invokestatic  #81
80: astore        8
82: aload         7
84: ldc           #43
86: ldc           #12
88: ldc           #32
90: invokevirtual #11
93: astore        9
95: bipush        6
97: anewarray     #119
100: dup
101: iconst_0
102: ldc           #109
104: aastore
105: dup
106: iconst_1
107: ldc           #10
109: aastore
110: dup
111: iconst_2
112: ldc           #13
114: aastore
115: dup
116: iconst_3
117: ldc           #50
119: aastore
120: dup
121: iconst_4
122: ldc           #12
124: aastore
125: dup
126: iconst_5
127: ldc           #120
129: aastore
130: astore        10
132: aload         7
134: aload         10
136: invokevirtual #121
139: astore        11
141: aload         5
143: ldc           #92
145: aload         10
147: invokevirtual #127
150: astore        12
152: aload_1
153: aload         10
155: invokevirtual #121
158: astore        13
160: aload_1
161: invokestatic  #15
164: aload_2
165: invokestatic  #15
168: new           #16
171: dup
172: invokespecial #17
175: ldc           #18
177: invokevirtual #19
180: aload_3
181: invokevirtual #19
184: ldc_w         #299
187: invokevirtual #19
190: invokevirtual #22
193: aload_3
194: ldc_w         #300
197: invokestatic  #68
200: aload         4
202: invokestatic  #15
205: aload         5
207: invokestatic  #15
210: aload         7
212: invokestatic  #15
215: new           #16
218: dup
219: invokespecial #17
222: ldc           #18
224: invokevirtual #19
227: aload         8
229: invokevirtual #19
232: ldc           #128
234: invokevirtual #19
237: invokevirtual #22
240: aload         8
242: ldc           #43
244: invokestatic  #68
247: aload         9
249: invokestatic  #15
252: aload         10
254: invokestatic  #15
257: aload         11
259: invokestatic  #15
262: aload         12
264: invokestatic  #15
267: aload         13
269: invokestatic  #15
272: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test070
Start line: 3101
End line: 3149
Method source code: 
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        java.lang.String str5 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist4);
        boolean boolean7 = whitelist4.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray17 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean18 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        boolean boolean19 = org.jsoup.helper.StringUtil.in(" hi!", strArray17);
        org.jsoup.safety.Whitelist whitelist20 = whitelist4.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str32 = org.jsoup.Jsoup.clean(":lt(32)", whitelist31);
        org.jsoup.safety.Whitelist whitelist36 = whitelist31.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray43 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist44 = whitelist31.addTags(strArray43);
        org.jsoup.safety.Whitelist whitelist45 = whitelist27.addProtocols(":matchesOwn(null", "hi!", strArray43);
        java.lang.String[] strArray54 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean55 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray54);
        org.jsoup.safety.Whitelist whitelist56 = whitelist45.addProtocols("\n<!--hi!-->", "#document", strArray54);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray54, "hi!");
        org.jsoup.safety.Whitelist whitelist59 = whitelist20.addProtocols(":lt(32)", "[<html>\n <head></head>\n <body>\n </body>\n</html>]", strArray54);
        java.lang.String str60 = org.jsoup.Jsoup.clean("\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->", whitelist59);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "." + "'", str5, ".");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ":lt(32)" + "'", str32, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #335
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: invokestatic  #8
114: astore        9
116: aload         9
118: iconst_1
119: invokevirtual #9
122: astore        10
124: aload         10
126: iconst_0
127: invokevirtual #9
130: astore        11
132: invokestatic  #118
135: astore        12
137: ldc           #43
139: aload         12
141: invokestatic  #81
144: astore        13
146: aload         12
148: ldc           #43
150: ldc           #12
152: ldc           #32
154: invokevirtual #11
157: astore        14
159: bipush        6
161: anewarray     #119
164: dup
165: iconst_0
166: ldc           #109
168: aastore
169: dup
170: iconst_1
171: ldc           #10
173: aastore
174: dup
175: iconst_2
176: ldc           #13
178: aastore
179: dup
180: iconst_3
181: ldc           #50
183: aastore
184: dup
185: iconst_4
186: ldc           #12
188: aastore
189: dup
190: iconst_5
191: ldc           #120
193: aastore
194: astore        15
196: aload         12
198: aload         15
200: invokevirtual #121
203: astore        16
205: aload         11
207: ldc           #38
209: ldc           #12
211: aload         15
213: invokevirtual #122
216: astore        17
218: iconst_5
219: anewarray     #119
222: dup
223: iconst_0
224: ldc           #13
226: aastore
227: dup
228: iconst_1
229: ldc           #32
231: aastore
232: dup
233: iconst_2
234: ldc           #10
236: aastore
237: dup
238: iconst_3
239: ldc           #43
241: aastore
242: dup
243: iconst_4
244: ldc           #58
246: aastore
247: astore        18
249: ldc           #10
251: aload         18
253: invokestatic  #123
256: istore        19
258: aload         17
260: ldc           #84
262: ldc           #13
264: aload         18
266: invokevirtual #122
269: astore        20
271: aload         18
273: checkcast     #124
276: ldc           #12
278: invokestatic  #245
281: aload         8
283: ldc           #43
285: ldc           #215
287: aload         18
289: invokevirtual #122
292: astore        21
294: ldc_w         #298
297: aload         21
299: invokestatic  #81
302: astore        22
304: aload_1
305: invokestatic  #15
308: aload_2
309: invokestatic  #15
312: new           #16
315: dup
316: invokespecial #17
319: ldc           #18
321: invokevirtual #19
324: aload_3
325: invokevirtual #19
328: ldc           #85
330: invokevirtual #19
333: invokevirtual #22
336: aload_3
337: ldc           #86
339: invokestatic  #68
342: new           #16
345: dup
346: invokespecial #17
349: ldc           #18
351: invokevirtual #19
354: iload         4
356: invokevirtual #20
359: ldc           #21
361: invokevirtual #19
364: iconst_0
365: invokevirtual #20
368: ldc           #18
370: invokevirtual #19
373: invokevirtual #22
376: iload         4
378: ifne          385
381: iconst_1
382: goto          386
385: iconst_0
386: invokestatic  #23
389: aload         5
391: invokestatic  #15
394: new           #16
397: dup
398: invokespecial #17
401: ldc           #18
403: invokevirtual #19
406: iload         6
408: invokevirtual #20
411: ldc           #21
413: invokevirtual #19
416: iconst_1
417: invokevirtual #20
420: ldc           #18
422: invokevirtual #19
425: invokevirtual #22
428: iload         6
430: iconst_1
431: if_icmpne     438
434: iconst_1
435: goto          439
438: iconst_0
439: invokestatic  #23
442: new           #16
445: dup
446: invokespecial #17
449: ldc           #18
451: invokevirtual #19
454: iload         7
456: invokevirtual #20
459: ldc           #21
461: invokevirtual #19
464: iconst_0
465: invokevirtual #20
468: ldc           #18
470: invokevirtual #19
473: invokevirtual #22
476: iload         7
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #23
489: aload         8
491: invokestatic  #15
494: aload         9
496: invokestatic  #15
499: aload         10
501: invokestatic  #15
504: aload         11
506: invokestatic  #15
509: aload         12
511: invokestatic  #15
514: new           #16
517: dup
518: invokespecial #17
521: ldc           #18
523: invokevirtual #19
526: aload         13
528: invokevirtual #19
531: ldc           #128
533: invokevirtual #19
536: invokevirtual #22
539: aload         13
541: ldc           #43
543: invokestatic  #68
546: aload         14
548: invokestatic  #15
551: aload         15
553: invokestatic  #15
556: aload         16
558: invokestatic  #15
561: aload         17
563: invokestatic  #15
566: aload         18
568: invokestatic  #15
571: new           #16
574: dup
575: invokespecial #17
578: ldc           #18
580: invokevirtual #19
583: iload         19
585: invokevirtual #20
588: ldc           #21
590: invokevirtual #19
593: iconst_1
594: invokevirtual #20
597: ldc           #18
599: invokevirtual #19
602: invokevirtual #22
605: iload         19
607: iconst_1
608: if_icmpne     615
611: iconst_1
612: goto          616
615: iconst_0
616: invokestatic  #23
619: aload         20
621: invokestatic  #15
624: aload         21
626: invokestatic  #15
629: new           #16
632: dup
633: invokespecial #17
636: ldc           #18
638: invokevirtual #19
641: aload         22
643: invokevirtual #19
646: ldc           #67
648: invokevirtual #19
651: invokevirtual #22
654: aload         22
656: ldc           #25
658: invokestatic  #68
661: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test071
Start line: 3152
End line: 3177
Method source code: 
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean21 = whitelist19.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist25 = whitelist19.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        org.jsoup.safety.Whitelist whitelist27 = whitelist19.preserveRelativeLinks(true);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: ldc           #12
115: invokevirtual #83
118: istore        9
120: aload         8
122: ldc           #86
124: ldc           #239
126: ldc           #240
128: invokevirtual #11
131: astore        10
133: aload         8
135: iconst_1
136: invokevirtual #9
139: astore        11
141: aload_1
142: invokestatic  #15
145: aload_2
146: invokestatic  #15
149: new           #16
152: dup
153: invokespecial #17
156: ldc           #18
158: invokevirtual #19
161: aload_3
162: invokevirtual #19
165: ldc           #85
167: invokevirtual #19
170: invokevirtual #22
173: aload_3
174: ldc           #86
176: invokestatic  #68
179: new           #16
182: dup
183: invokespecial #17
186: ldc           #18
188: invokevirtual #19
191: iload         4
193: invokevirtual #20
196: ldc           #21
198: invokevirtual #19
201: iconst_0
202: invokevirtual #20
205: ldc           #18
207: invokevirtual #19
210: invokevirtual #22
213: iload         4
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #23
226: aload         5
228: invokestatic  #15
231: new           #16
234: dup
235: invokespecial #17
238: ldc           #18
240: invokevirtual #19
243: iload         6
245: invokevirtual #20
248: ldc           #21
250: invokevirtual #19
253: iconst_1
254: invokevirtual #20
257: ldc           #18
259: invokevirtual #19
262: invokevirtual #22
265: iload         6
267: iconst_1
268: if_icmpne     275
271: iconst_1
272: goto          276
275: iconst_0
276: invokestatic  #23
279: new           #16
282: dup
283: invokespecial #17
286: ldc           #18
288: invokevirtual #19
291: iload         7
293: invokevirtual #20
296: ldc           #21
298: invokevirtual #19
301: iconst_0
302: invokevirtual #20
305: ldc           #18
307: invokevirtual #19
310: invokevirtual #22
313: iload         7
315: ifne          322
318: iconst_1
319: goto          323
322: iconst_0
323: invokestatic  #23
326: aload         8
328: invokestatic  #15
331: new           #16
334: dup
335: invokespecial #17
338: ldc           #18
340: invokevirtual #19
343: iload         9
345: invokevirtual #20
348: ldc           #21
350: invokevirtual #19
353: iconst_0
354: invokevirtual #20
357: ldc           #18
359: invokevirtual #19
362: invokevirtual #22
365: iload         9
367: ifne          374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #23
378: aload         10
380: invokestatic  #15
383: aload         11
385: invokestatic  #15
388: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test072
Start line: 3180
End line: 3233
Method source code: 
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str4 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist8 = whitelist3.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist12 = whitelist10.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist16 = whitelist10.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist20 = whitelist10.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str21 = org.jsoup.Jsoup.clean("hi!", whitelist10);
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str32 = org.jsoup.Jsoup.clean(":lt(32)", whitelist31);
        org.jsoup.safety.Whitelist whitelist36 = whitelist31.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray43 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist44 = whitelist31.addTags(strArray43);
        org.jsoup.safety.Whitelist whitelist45 = whitelist27.addProtocols(":matchesOwn(null", "hi!", strArray43);
        java.lang.String[] strArray54 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean55 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray54);
        org.jsoup.safety.Whitelist whitelist56 = whitelist45.addProtocols("\n<!--hi!-->", "#document", strArray54);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray54);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray54);
        org.jsoup.safety.Whitelist whitelist59 = whitelist10.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray54);
        org.jsoup.safety.Whitelist whitelist60 = whitelist3.addTags(strArray54);
        java.lang.String str61 = org.jsoup.Jsoup.clean("#root", whitelist60);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[hi!$=   ]" + "'", str4, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ":lt(32)" + "'", str32, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#root" + "'", str61, "#root");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #337
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: invokestatic  #8
55: astore        5
57: aload         5
59: iconst_1
60: invokevirtual #9
63: astore        6
65: aload         5
67: ldc           #10
69: ldc           #10
71: ldc           #10
73: invokevirtual #11
76: astore        7
78: aload         5
80: ldc           #12
82: ldc           #13
84: ldc           #12
86: invokevirtual #11
89: astore        8
91: ldc           #12
93: aload         5
95: invokestatic  #81
98: astore        9
100: invokestatic  #8
103: astore        10
105: aload         10
107: iconst_1
108: invokevirtual #9
111: astore        11
113: aload         11
115: iconst_0
116: invokevirtual #9
119: astore        12
121: invokestatic  #118
124: astore        13
126: ldc           #43
128: aload         13
130: invokestatic  #81
133: astore        14
135: aload         13
137: ldc           #43
139: ldc           #12
141: ldc           #32
143: invokevirtual #11
146: astore        15
148: bipush        6
150: anewarray     #119
153: dup
154: iconst_0
155: ldc           #109
157: aastore
158: dup
159: iconst_1
160: ldc           #10
162: aastore
163: dup
164: iconst_2
165: ldc           #13
167: aastore
168: dup
169: iconst_3
170: ldc           #50
172: aastore
173: dup
174: iconst_4
175: ldc           #12
177: aastore
178: dup
179: iconst_5
180: ldc           #120
182: aastore
183: astore        16
185: aload         13
187: aload         16
189: invokevirtual #121
192: astore        17
194: aload         12
196: ldc           #38
198: ldc           #12
200: aload         16
202: invokevirtual #122
205: astore        18
207: iconst_5
208: anewarray     #119
211: dup
212: iconst_0
213: ldc           #13
215: aastore
216: dup
217: iconst_1
218: ldc           #32
220: aastore
221: dup
222: iconst_2
223: ldc           #10
225: aastore
226: dup
227: iconst_3
228: ldc           #43
230: aastore
231: dup
232: iconst_4
233: ldc           #58
235: aastore
236: astore        19
238: ldc           #10
240: aload         19
242: invokestatic  #123
245: istore        20
247: aload         18
249: ldc           #84
251: ldc           #13
253: aload         19
255: invokevirtual #122
258: astore        21
260: aload         19
262: checkcast     #124
265: invokestatic  #125
268: aload         19
270: checkcast     #124
273: invokestatic  #125
276: aload         5
278: ldc           #249
280: aload         19
282: invokevirtual #127
285: astore        22
287: aload_1
288: aload         19
290: invokevirtual #121
293: astore        23
295: ldc_w         #331
298: aload         23
300: invokestatic  #81
303: astore        24
305: aload_1
306: invokestatic  #15
309: new           #16
312: dup
313: invokespecial #17
316: ldc           #18
318: invokevirtual #19
321: aload_2
322: invokevirtual #19
325: ldc           #111
327: invokevirtual #19
330: invokevirtual #22
333: aload_2
334: ldc           #65
336: invokestatic  #68
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: iload_3
352: invokevirtual #20
355: ldc           #21
357: invokevirtual #19
360: iconst_0
361: invokevirtual #20
364: ldc           #18
366: invokevirtual #19
369: invokevirtual #22
372: iload_3
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #23
384: aload         4
386: invokestatic  #15
389: aload         5
391: invokestatic  #15
394: aload         6
396: invokestatic  #15
399: aload         7
401: invokestatic  #15
404: aload         8
406: invokestatic  #15
409: new           #16
412: dup
413: invokespecial #17
416: ldc           #18
418: invokevirtual #19
421: aload         9
423: invokevirtual #19
426: ldc           #211
428: invokevirtual #19
431: invokevirtual #22
434: aload         9
436: ldc           #12
438: invokestatic  #68
441: aload         10
443: invokestatic  #15
446: aload         11
448: invokestatic  #15
451: aload         12
453: invokestatic  #15
456: aload         13
458: invokestatic  #15
461: new           #16
464: dup
465: invokespecial #17
468: ldc           #18
470: invokevirtual #19
473: aload         14
475: invokevirtual #19
478: ldc           #128
480: invokevirtual #19
483: invokevirtual #22
486: aload         14
488: ldc           #43
490: invokestatic  #68
493: aload         15
495: invokestatic  #15
498: aload         16
500: invokestatic  #15
503: aload         17
505: invokestatic  #15
508: aload         18
510: invokestatic  #15
513: aload         19
515: invokestatic  #15
518: new           #16
521: dup
522: invokespecial #17
525: ldc           #18
527: invokevirtual #19
530: iload         20
532: invokevirtual #20
535: ldc           #21
537: invokevirtual #19
540: iconst_1
541: invokevirtual #20
544: ldc           #18
546: invokevirtual #19
549: invokevirtual #22
552: iload         20
554: iconst_1
555: if_icmpne     562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #23
566: aload         21
568: invokestatic  #15
571: aload         22
573: invokestatic  #15
576: aload         23
578: invokestatic  #15
581: new           #16
584: dup
585: invokespecial #17
588: ldc           #18
590: invokevirtual #19
593: aload         24
595: invokevirtual #19
598: ldc_w         #332
601: invokevirtual #19
604: invokevirtual #22
607: aload         24
609: ldc_w         #331
612: invokestatic  #68
615: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test073
Start line: 3236
End line: 3250
Method source code: 
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes9 = whitelist7.getEnforcedAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        attributes9.remove(" text=\"[:gt(100)]\" #document=\"#document\"");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(attributes9);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: aload         4
54: ldc           #109
56: invokevirtual #150
59: astore        5
61: aload         5
63: ldc_w         #339
66: invokevirtual #340
69: aload_1
70: invokestatic  #15
73: new           #16
76: dup
77: invokespecial #17
80: ldc           #18
82: invokevirtual #19
85: aload_2
86: invokevirtual #19
89: ldc           #111
91: invokevirtual #19
94: invokevirtual #22
97: aload_2
98: ldc           #65
100: invokestatic  #68
103: new           #16
106: dup
107: invokespecial #17
110: ldc           #18
112: invokevirtual #19
115: iload_3
116: invokevirtual #20
119: ldc           #21
121: invokevirtual #19
124: iconst_0
125: invokevirtual #20
128: ldc           #18
130: invokevirtual #19
133: invokevirtual #22
136: iload_3
137: ifne          144
140: iconst_1
141: goto          145
144: iconst_0
145: invokestatic  #23
148: aload         4
150: invokestatic  #15
153: aload         5
155: invokestatic  #15
158: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test074
Start line: 3253
End line: 3310
Method source code: 
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str4 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist3);
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist8 = whitelist6.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist10 = whitelist8.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str15 = org.jsoup.Jsoup.clean(":lt(32)", whitelist14);
        org.jsoup.safety.Whitelist whitelist19 = whitelist14.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray26 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist27 = whitelist14.addTags(strArray26);
        org.jsoup.safety.Whitelist whitelist28 = whitelist10.addProtocols(":matchesOwn(null", "hi!", strArray26);
        org.jsoup.safety.Whitelist whitelist29 = whitelist3.addAttributes("[^hi!]", strArray26);
        org.jsoup.safety.Whitelist whitelist33 = whitelist3.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.safety.Whitelist whitelist36 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist38 = whitelist36.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist40 = whitelist38.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist44 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str45 = org.jsoup.Jsoup.clean(":lt(32)", whitelist44);
        org.jsoup.safety.Whitelist whitelist49 = whitelist44.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray56 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist57 = whitelist44.addTags(strArray56);
        org.jsoup.safety.Whitelist whitelist58 = whitelist40.addProtocols(":matchesOwn(null", "hi!", strArray56);
        java.lang.String[] strArray67 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean68 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray67);
        org.jsoup.safety.Whitelist whitelist69 = whitelist58.addProtocols("\n<!--hi!-->", "#document", strArray67);
        org.jsoup.safety.Whitelist whitelist70 = whitelist3.addProtocols("<html>\n <head></head>\n <body>\n </body>\n</html>", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]", strArray67);
        boolean boolean71 = org.jsoup.helper.StringUtil.in("[^ <!--[hi!$=<html> <head></head> <body></body> </html>]-->]", strArray67);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[hi!$=   ]" + "'", str4, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":lt(32)" + "'", str15, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":lt(32)" + "'", str45, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #341
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: invokestatic  #8
41: astore_3
42: aload_3
43: iconst_1
44: invokevirtual #9
47: astore        4
49: aload         4
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #118
60: astore        6
62: ldc           #43
64: aload         6
66: invokestatic  #81
69: astore        7
71: aload         6
73: ldc           #43
75: ldc           #12
77: ldc           #32
79: invokevirtual #11
82: astore        8
84: bipush        6
86: anewarray     #119
89: dup
90: iconst_0
91: ldc           #109
93: aastore
94: dup
95: iconst_1
96: ldc           #10
98: aastore
99: dup
100: iconst_2
101: ldc           #13
103: aastore
104: dup
105: iconst_3
106: ldc           #50
108: aastore
109: dup
110: iconst_4
111: ldc           #12
113: aastore
114: dup
115: iconst_5
116: ldc           #120
118: aastore
119: astore        9
121: aload         6
123: aload         9
125: invokevirtual #121
128: astore        10
130: aload         5
132: ldc           #38
134: ldc           #12
136: aload         9
138: invokevirtual #122
141: astore        11
143: aload_1
144: ldc           #50
146: aload         9
148: invokevirtual #127
151: astore        12
153: aload_1
154: ldc           #126
156: ldc           #109
158: ldc           #120
160: invokevirtual #11
163: astore        13
165: invokestatic  #8
168: astore        14
170: aload         14
172: iconst_1
173: invokevirtual #9
176: astore        15
178: aload         15
180: iconst_0
181: invokevirtual #9
184: astore        16
186: invokestatic  #118
189: astore        17
191: ldc           #43
193: aload         17
195: invokestatic  #81
198: astore        18
200: aload         17
202: ldc           #43
204: ldc           #12
206: ldc           #32
208: invokevirtual #11
211: astore        19
213: bipush        6
215: anewarray     #119
218: dup
219: iconst_0
220: ldc           #109
222: aastore
223: dup
224: iconst_1
225: ldc           #10
227: aastore
228: dup
229: iconst_2
230: ldc           #13
232: aastore
233: dup
234: iconst_3
235: ldc           #50
237: aastore
238: dup
239: iconst_4
240: ldc           #12
242: aastore
243: dup
244: iconst_5
245: ldc           #120
247: aastore
248: astore        20
250: aload         17
252: aload         20
254: invokevirtual #121
257: astore        21
259: aload         16
261: ldc           #38
263: ldc           #12
265: aload         20
267: invokevirtual #122
270: astore        22
272: iconst_5
273: anewarray     #119
276: dup
277: iconst_0
278: ldc           #13
280: aastore
281: dup
282: iconst_1
283: ldc           #32
285: aastore
286: dup
287: iconst_2
288: ldc           #10
290: aastore
291: dup
292: iconst_3
293: ldc           #43
295: aastore
296: dup
297: iconst_4
298: ldc           #58
300: aastore
301: astore        23
303: ldc           #10
305: aload         23
307: invokestatic  #123
310: istore        24
312: aload         22
314: ldc           #84
316: ldc           #13
318: aload         23
320: invokevirtual #122
323: astore        25
325: aload_1
326: ldc           #157
328: ldc_w         #273
331: aload         23
333: invokevirtual #122
336: astore        26
338: ldc_w         #342
341: aload         23
343: invokestatic  #123
346: istore        27
348: aload_1
349: invokestatic  #15
352: new           #16
355: dup
356: invokespecial #17
359: ldc           #18
361: invokevirtual #19
364: aload_2
365: invokevirtual #19
368: ldc           #111
370: invokevirtual #19
373: invokevirtual #22
376: aload_2
377: ldc           #65
379: invokestatic  #68
382: aload_3
383: invokestatic  #15
386: aload         4
388: invokestatic  #15
391: aload         5
393: invokestatic  #15
396: aload         6
398: invokestatic  #15
401: new           #16
404: dup
405: invokespecial #17
408: ldc           #18
410: invokevirtual #19
413: aload         7
415: invokevirtual #19
418: ldc           #128
420: invokevirtual #19
423: invokevirtual #22
426: aload         7
428: ldc           #43
430: invokestatic  #68
433: aload         8
435: invokestatic  #15
438: aload         9
440: invokestatic  #15
443: aload         10
445: invokestatic  #15
448: aload         11
450: invokestatic  #15
453: aload         12
455: invokestatic  #15
458: aload         13
460: invokestatic  #15
463: aload         14
465: invokestatic  #15
468: aload         15
470: invokestatic  #15
473: aload         16
475: invokestatic  #15
478: aload         17
480: invokestatic  #15
483: new           #16
486: dup
487: invokespecial #17
490: ldc           #18
492: invokevirtual #19
495: aload         18
497: invokevirtual #19
500: ldc           #128
502: invokevirtual #19
505: invokevirtual #22
508: aload         18
510: ldc           #43
512: invokestatic  #68
515: aload         19
517: invokestatic  #15
520: aload         20
522: invokestatic  #15
525: aload         21
527: invokestatic  #15
530: aload         22
532: invokestatic  #15
535: aload         23
537: invokestatic  #15
540: new           #16
543: dup
544: invokespecial #17
547: ldc           #18
549: invokevirtual #19
552: iload         24
554: invokevirtual #20
557: ldc           #21
559: invokevirtual #19
562: iconst_1
563: invokevirtual #20
566: ldc           #18
568: invokevirtual #19
571: invokevirtual #22
574: iload         24
576: iconst_1
577: if_icmpne     584
580: iconst_1
581: goto          585
584: iconst_0
585: invokestatic  #23
588: aload         25
590: invokestatic  #15
593: aload         26
595: invokestatic  #15
598: new           #16
601: dup
602: invokespecial #17
605: ldc           #18
607: invokevirtual #19
610: iload         27
612: invokevirtual #20
615: ldc           #21
617: invokevirtual #19
620: iconst_0
621: invokevirtual #20
624: ldc           #18
626: invokevirtual #19
629: invokevirtual #22
632: iload         27
634: ifne          641
637: iconst_1
638: goto          642
641: iconst_0
642: invokestatic  #23
645: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test075
Start line: 3313
End line: 3324
Method source code: 
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("[^ ]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #343
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #236
29: aload_1
30: invokestatic  #14
33: istore_2
34: ldc           #34
36: invokestatic  #35
39: goto          43
42: astore_2
43: return
Exception table:
from    to  target type
27    39    42   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test076
Start line: 3327
End line: 3381
Method source code: 
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        java.util.regex.Pattern pattern0 = null;
        org.jsoup.select.Evaluator.MatchesOwn matchesOwn1 = new org.jsoup.select.Evaluator.MatchesOwn(pattern0);
        java.lang.String str2 = matchesOwn1.toString();
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner6 = new org.jsoup.safety.Cleaner(whitelist5);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining9 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document11 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList17 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document15, "hi!");
        org.jsoup.nodes.Element element19 = document15.tagName("hi!");
        org.jsoup.nodes.Element element21 = document15.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = document15.outputSettings();
        boolean boolean23 = attributeWithValueContaining9.matches((org.jsoup.nodes.Element) document11, (org.jsoup.nodes.Element) document15);
        org.jsoup.nodes.Document document24 = cleaner6.clean(document15);
        org.jsoup.nodes.Element element26 = document24.html("#comment");
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.tagName("hi!");
        org.jsoup.nodes.Element element36 = document30.text("[:lt(32)]");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList37 = document30.dataNodes();
        org.jsoup.nodes.Node node38 = document30.previousSibling();
        java.lang.String str39 = document30.nodeName();
        java.lang.String str40 = document30.text();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = matchesOwn1.matches((org.jsoup.nodes.Element) document24, (org.jsoup.nodes.Element) document30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":matchesOwn(null" + "'", str2, ":matchesOwn(null");
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(dataNodeList37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#document" + "'", str39, "#document");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[:lt(32)]" + "'", str40, "[:lt(32)]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #344
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #345
30: dup
31: aload_1
32: invokespecial #346
35: astore_2
36: aload_2
37: invokevirtual #347
40: astore_3
41: invokestatic  #8
44: astore        4
46: aload         4
48: iconst_1
49: invokevirtual #9
52: astore        5
54: new           #40
57: dup
58: aload         5
60: invokespecial #41
63: astore        6
65: new           #42
68: dup
69: ldc           #43
71: ldc           #32
73: invokespecial #44
76: astore        7
78: ldc           #12
80: invokestatic  #45
83: astore        8
85: ldc           #25
87: ldc           #12
89: invokestatic  #26
92: astore        9
94: ldc           #12
96: aload         9
98: ldc           #12
100: invokestatic  #27
103: astore        10
105: aload         9
107: ldc           #12
109: invokevirtual #28
112: astore        11
114: aload         9
116: ldc           #25
118: invokevirtual #29
121: astore        12
123: aload         9
125: invokevirtual #30
128: astore        13
130: aload         7
132: aload         8
134: aload         9
136: invokevirtual #46
139: istore        14
141: aload         6
143: aload         9
145: invokevirtual #47
148: astore        15
150: aload         15
152: ldc           #114
154: invokevirtual #115
157: astore        16
159: ldc           #25
161: ldc           #12
163: invokestatic  #26
166: astore        17
168: ldc           #12
170: aload         17
172: ldc           #12
174: invokestatic  #27
177: astore        18
179: aload         17
181: ldc           #12
183: invokevirtual #28
186: astore        19
188: aload         17
190: ldc           #58
192: invokevirtual #64
195: astore        20
197: aload         17
199: invokevirtual #348
202: astore        21
204: aload         17
206: invokevirtual #349
209: astore        22
211: aload         17
213: invokevirtual #220
216: astore        23
218: aload         17
220: invokevirtual #350
223: astore        24
225: aload_2
226: aload         15
228: aload         17
230: invokevirtual #351
233: istore        25
235: ldc           #76
237: invokestatic  #35
240: goto          245
243: astore        25
245: new           #16
248: dup
249: invokespecial #17
252: ldc           #18
254: invokevirtual #19
257: aload_3
258: invokevirtual #19
261: ldc_w         #352
264: invokevirtual #19
267: invokevirtual #22
270: aload_3
271: ldc           #38
273: invokestatic  #68
276: aload         4
278: invokestatic  #15
281: aload         5
283: invokestatic  #15
286: aload         8
288: invokestatic  #15
291: aload         9
293: invokestatic  #15
296: aload         10
298: invokestatic  #15
301: aload         11
303: invokestatic  #15
306: aload         12
308: invokestatic  #15
311: aload         13
313: invokestatic  #15
316: new           #16
319: dup
320: invokespecial #17
323: ldc           #18
325: invokevirtual #19
328: iload         14
330: invokevirtual #20
333: ldc           #21
335: invokevirtual #19
338: iconst_0
339: invokevirtual #20
342: ldc           #18
344: invokevirtual #19
347: invokevirtual #22
350: iload         14
352: ifne          359
355: iconst_1
356: goto          360
359: iconst_0
360: invokestatic  #23
363: aload         15
365: invokestatic  #15
368: aload         16
370: invokestatic  #15
373: aload         17
375: invokestatic  #15
378: aload         18
380: invokestatic  #15
383: aload         19
385: invokestatic  #15
388: aload         20
390: invokestatic  #15
393: aload         21
395: invokestatic  #15
398: aload         22
400: invokestatic  #79
403: new           #16
406: dup
407: invokespecial #17
410: ldc           #18
412: invokevirtual #19
415: aload         23
417: invokevirtual #19
420: ldc           #107
422: invokevirtual #19
425: invokevirtual #22
428: aload         23
430: ldc           #13
432: invokestatic  #68
435: new           #16
438: dup
439: invokespecial #17
442: ldc           #18
444: invokevirtual #19
447: aload         24
449: invokevirtual #19
452: ldc           #184
454: invokevirtual #19
457: invokevirtual #22
460: aload         24
462: ldc           #58
464: invokestatic  #68
467: return
Exception table:
from    to  target type
225   240   243   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test077
Start line: 3384
End line: 3457
Method source code: 
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", ":lt(32)");
        boolean boolean26 = objList0.offerFirst((java.lang.Object) "");
        java.lang.Object obj27 = objList0.pop();
        org.jsoup.nodes.DocumentType documentType32 = new org.jsoup.nodes.DocumentType("<hi!>\n [^hi!]\n</hi!>", ":gt(100)", "[<html>\n <head></head>\n <body>\n </body>\n</html>]", "\n<!--hi!-->");
        objList0.addFirst((java.lang.Object) "<hi!>\n [^hi!]\n</hi!>");
        org.jsoup.safety.Whitelist whitelist36 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist38 = whitelist36.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist42 = whitelist36.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist46 = whitelist36.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str47 = org.jsoup.Jsoup.clean("hi!", whitelist36);
        org.jsoup.safety.Whitelist whitelist49 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist51 = whitelist49.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist53 = whitelist51.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist57 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str58 = org.jsoup.Jsoup.clean(":lt(32)", whitelist57);
        org.jsoup.safety.Whitelist whitelist62 = whitelist57.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray69 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist70 = whitelist57.addTags(strArray69);
        org.jsoup.safety.Whitelist whitelist71 = whitelist53.addProtocols(":matchesOwn(null", "hi!", strArray69);
        java.lang.String[] strArray80 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean81 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray80);
        org.jsoup.safety.Whitelist whitelist82 = whitelist71.addProtocols("\n<!--hi!-->", "#document", strArray80);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray80);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray80);
        org.jsoup.safety.Whitelist whitelist85 = whitelist36.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray80);
        java.lang.Object obj86 = objList0.set(0, (java.lang.Object) "[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + ":lt(32)" + "'", str58, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertNotNull(whitelist71);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(whitelist85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "<hi!>\n [^hi!]\n</hi!>" + "'", obj86, "<hi!>\n [^hi!]\n</hi!>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #353
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #43
127: invokestatic  #26
130: astore        12
132: aload_1
133: ldc           #25
135: invokevirtual #354
138: istore        13
140: aload_1
141: invokevirtual #355
144: astore        14
146: new           #356
149: dup
150: ldc           #54
152: ldc           #92
154: ldc           #215
156: ldc           #84
158: invokespecial #357
161: astore        15
163: aload_1
164: ldc           #54
166: invokevirtual #93
169: invokestatic  #8
172: astore        16
174: aload         16
176: iconst_1
177: invokevirtual #9
180: astore        17
182: aload         16
184: ldc           #10
186: ldc           #10
188: ldc           #10
190: invokevirtual #11
193: astore        18
195: aload         16
197: ldc           #12
199: ldc           #13
201: ldc           #12
203: invokevirtual #11
206: astore        19
208: ldc           #12
210: aload         16
212: invokestatic  #81
215: astore        20
217: invokestatic  #8
220: astore        21
222: aload         21
224: iconst_1
225: invokevirtual #9
228: astore        22
230: aload         22
232: iconst_0
233: invokevirtual #9
236: astore        23
238: invokestatic  #118
241: astore        24
243: ldc           #43
245: aload         24
247: invokestatic  #81
250: astore        25
252: aload         24
254: ldc           #43
256: ldc           #12
258: ldc           #32
260: invokevirtual #11
263: astore        26
265: bipush        6
267: anewarray     #119
270: dup
271: iconst_0
272: ldc           #109
274: aastore
275: dup
276: iconst_1
277: ldc           #10
279: aastore
280: dup
281: iconst_2
282: ldc           #13
284: aastore
285: dup
286: iconst_3
287: ldc           #50
289: aastore
290: dup
291: iconst_4
292: ldc           #12
294: aastore
295: dup
296: iconst_5
297: ldc           #120
299: aastore
300: astore        27
302: aload         24
304: aload         27
306: invokevirtual #121
309: astore        28
311: aload         23
313: ldc           #38
315: ldc           #12
317: aload         27
319: invokevirtual #122
322: astore        29
324: iconst_5
325: anewarray     #119
328: dup
329: iconst_0
330: ldc           #13
332: aastore
333: dup
334: iconst_1
335: ldc           #32
337: aastore
338: dup
339: iconst_2
340: ldc           #10
342: aastore
343: dup
344: iconst_3
345: ldc           #43
347: aastore
348: dup
349: iconst_4
350: ldc           #58
352: aastore
353: astore        30
355: ldc           #10
357: aload         30
359: invokestatic  #123
362: istore        31
364: aload         29
366: ldc           #84
368: ldc           #13
370: aload         30
372: invokevirtual #122
375: astore        32
377: aload         30
379: checkcast     #124
382: invokestatic  #125
385: aload         30
387: checkcast     #124
390: invokestatic  #125
393: aload         16
395: ldc           #249
397: aload         30
399: invokevirtual #127
402: astore        33
404: aload_1
405: iconst_0
406: ldc           #249
408: invokevirtual #104
411: astore        34
413: aload_2
414: invokestatic  #15
417: aload_3
418: invokestatic  #15
421: aload         4
423: invokestatic  #15
426: aload         5
428: invokestatic  #15
431: aload         6
433: invokestatic  #15
436: aload         7
438: invokestatic  #15
441: aload         8
443: invokestatic  #15
446: aload         9
448: invokestatic  #15
451: aload         10
453: invokestatic  #15
456: aload         11
458: invokestatic  #15
461: aload         12
463: invokestatic  #15
466: new           #16
469: dup
470: invokespecial #17
473: ldc           #18
475: invokevirtual #19
478: iload         13
480: invokevirtual #20
483: ldc           #21
485: invokevirtual #19
488: iconst_1
489: invokevirtual #20
492: ldc           #18
494: invokevirtual #19
497: invokevirtual #22
500: iload         13
502: iconst_1
503: if_icmpne     510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #23
514: new           #16
517: dup
518: invokespecial #17
521: ldc           #18
523: invokevirtual #19
526: aload         14
528: invokevirtual #223
531: ldc           #67
533: invokevirtual #19
536: invokevirtual #22
539: aload         14
541: ldc           #25
543: invokestatic  #68
546: aload         16
548: invokestatic  #15
551: aload         17
553: invokestatic  #15
556: aload         18
558: invokestatic  #15
561: aload         19
563: invokestatic  #15
566: new           #16
569: dup
570: invokespecial #17
573: ldc           #18
575: invokevirtual #19
578: aload         20
580: invokevirtual #19
583: ldc           #211
585: invokevirtual #19
588: invokevirtual #22
591: aload         20
593: ldc           #12
595: invokestatic  #68
598: aload         21
600: invokestatic  #15
603: aload         22
605: invokestatic  #15
608: aload         23
610: invokestatic  #15
613: aload         24
615: invokestatic  #15
618: new           #16
621: dup
622: invokespecial #17
625: ldc           #18
627: invokevirtual #19
630: aload         25
632: invokevirtual #19
635: ldc           #128
637: invokevirtual #19
640: invokevirtual #22
643: aload         25
645: ldc           #43
647: invokestatic  #68
650: aload         26
652: invokestatic  #15
655: aload         27
657: invokestatic  #15
660: aload         28
662: invokestatic  #15
665: aload         29
667: invokestatic  #15
670: aload         30
672: invokestatic  #15
675: new           #16
678: dup
679: invokespecial #17
682: ldc           #18
684: invokevirtual #19
687: iload         31
689: invokevirtual #20
692: ldc           #21
694: invokevirtual #19
697: iconst_1
698: invokevirtual #20
701: ldc           #18
703: invokevirtual #19
706: invokevirtual #22
709: iload         31
711: iconst_1
712: if_icmpne     719
715: iconst_1
716: goto          720
719: iconst_0
720: invokestatic  #23
723: aload         32
725: invokestatic  #15
728: aload         33
730: invokestatic  #15
733: new           #16
736: dup
737: invokespecial #17
740: ldc           #18
742: invokevirtual #19
745: aload         34
747: invokevirtual #223
750: ldc_w         #358
753: invokevirtual #19
756: invokevirtual #22
759: aload         34
761: ldc           #54
763: invokestatic  #68
766: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test078
Start line: 3460
End line: 3517
Method source code: 
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.jsoup.select.Evaluator.Tag tag1 = new org.jsoup.select.Evaluator.Tag("[^hi!]");
        java.lang.String str2 = tag1.toString();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        java.lang.String str13 = element12.toString();
        boolean boolean15 = element12.hasAttr("");
        element12.setBaseUri("[hi!$=   ]");
        org.jsoup.nodes.Element element19 = element12.html(":lt(1)");
        org.jsoup.safety.Whitelist whitelist20 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist22 = whitelist20.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner23 = new org.jsoup.safety.Cleaner(whitelist22);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining26 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document28 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        boolean boolean40 = attributeWithValueContaining26.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document32);
        org.jsoup.nodes.Document document41 = cleaner23.clean(document32);
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str44 = document43.toString();
        java.lang.String str45 = document43.baseUri();
        org.jsoup.nodes.Document document46 = cleaner23.clean(document43);
        org.jsoup.nodes.Document.QuirksMode quirksMode47 = document46.quirksMode();
        boolean boolean48 = tag1.matches(element19, (org.jsoup.nodes.Element) document46);
        java.lang.String str49 = tag1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[^hi!]" + "'", str2, "[^hi!]");
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str13, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str44, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertTrue("'" + quirksMode47 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode47.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[^hi!]" + "'", str49, "[^hi!]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #359
20: aastore
21: invokevirtual #7
24: pop
25: new           #360
28: dup
29: ldc           #50
31: invokespecial #361
34: astore_1
35: aload_1
36: invokevirtual #362
39: astore_2
40: ldc           #25
42: ldc           #12
44: invokestatic  #26
47: astore_3
48: ldc           #12
50: aload_3
51: ldc           #12
53: invokestatic  #27
56: astore        4
58: aload_3
59: ldc           #12
61: invokevirtual #28
64: astore        5
66: aload_3
67: ldc           #25
69: invokevirtual #29
72: astore        6
74: aload         6
76: invokevirtual #363
79: astore        7
81: aload         6
83: ldc           #25
85: invokevirtual #364
88: istore        8
90: aload         6
92: ldc           #65
94: invokevirtual #365
97: aload         6
99: ldc_w         #366
102: invokevirtual #367
105: astore        9
107: invokestatic  #8
110: astore        10
112: aload         10
114: iconst_1
115: invokevirtual #9
118: astore        11
120: new           #40
123: dup
124: aload         11
126: invokespecial #41
129: astore        12
131: new           #42
134: dup
135: ldc           #43
137: ldc           #32
139: invokespecial #44
142: astore        13
144: ldc           #12
146: invokestatic  #45
149: astore        14
151: ldc           #25
153: ldc           #12
155: invokestatic  #26
158: astore        15
160: ldc           #12
162: aload         15
164: ldc           #12
166: invokestatic  #27
169: astore        16
171: aload         15
173: ldc           #12
175: invokevirtual #28
178: astore        17
180: aload         15
182: ldc           #25
184: invokevirtual #29
187: astore        18
189: aload         15
191: invokevirtual #30
194: astore        19
196: aload         13
198: aload         14
200: aload         15
202: invokevirtual #46
205: istore        20
207: aload         12
209: aload         15
211: invokevirtual #47
214: astore        21
216: ldc           #10
218: invokestatic  #193
221: astore        22
223: aload         22
225: invokevirtual #72
228: astore        23
230: aload         22
232: invokevirtual #194
235: astore        24
237: aload         12
239: aload         22
241: invokevirtual #47
244: astore        25
246: aload         25
248: invokevirtual #222
251: astore        26
253: aload_1
254: aload         9
256: aload         25
258: invokevirtual #368
261: istore        27
263: aload_1
264: invokevirtual #362
267: astore        28
269: new           #16
272: dup
273: invokespecial #17
276: ldc           #18
278: invokevirtual #19
281: aload_2
282: invokevirtual #19
285: ldc           #112
287: invokevirtual #19
290: invokevirtual #22
293: aload_2
294: ldc           #50
296: invokestatic  #68
299: aload_3
300: invokestatic  #15
303: aload         4
305: invokestatic  #15
308: aload         5
310: invokestatic  #15
313: aload         6
315: invokestatic  #15
318: new           #16
321: dup
322: invokespecial #17
325: ldc           #18
327: invokevirtual #19
330: aload         7
332: invokevirtual #19
335: ldc           #78
337: invokevirtual #19
340: invokevirtual #22
343: aload         7
345: ldc           #10
347: invokestatic  #68
350: new           #16
353: dup
354: invokespecial #17
357: ldc           #18
359: invokevirtual #19
362: iload         8
364: invokevirtual #20
367: ldc           #21
369: invokevirtual #19
372: iconst_0
373: invokevirtual #20
376: ldc           #18
378: invokevirtual #19
381: invokevirtual #22
384: iload         8
386: ifne          393
389: iconst_1
390: goto          394
393: iconst_0
394: invokestatic  #23
397: aload         9
399: invokestatic  #15
402: aload         10
404: invokestatic  #15
407: aload         11
409: invokestatic  #15
412: aload         14
414: invokestatic  #15
417: aload         15
419: invokestatic  #15
422: aload         16
424: invokestatic  #15
427: aload         17
429: invokestatic  #15
432: aload         18
434: invokestatic  #15
437: aload         19
439: invokestatic  #15
442: new           #16
445: dup
446: invokespecial #17
449: ldc           #18
451: invokevirtual #19
454: iload         20
456: invokevirtual #20
459: ldc           #21
461: invokevirtual #19
464: iconst_0
465: invokevirtual #20
468: ldc           #18
470: invokevirtual #19
473: invokevirtual #22
476: iload         20
478: ifne          485
481: iconst_1
482: goto          486
485: iconst_0
486: invokestatic  #23
489: aload         21
491: invokestatic  #15
494: aload         22
496: invokestatic  #15
499: new           #16
502: dup
503: invokespecial #17
506: ldc           #18
508: invokevirtual #19
511: aload         23
513: invokevirtual #19
516: ldc           #197
518: invokevirtual #19
521: invokevirtual #22
524: aload         23
526: ldc           #151
528: invokestatic  #68
531: new           #16
534: dup
535: invokespecial #17
538: ldc           #18
540: invokevirtual #19
543: aload         24
545: invokevirtual #19
548: ldc           #67
550: invokevirtual #19
553: invokevirtual #22
556: aload         24
558: ldc           #25
560: invokestatic  #68
563: aload         25
565: invokestatic  #15
568: new           #16
571: dup
572: invokespecial #17
575: ldc           #18
577: invokevirtual #19
580: aload         26
582: invokevirtual #223
585: ldc           #21
587: invokevirtual #19
590: getstatic     #224
593: invokevirtual #223
596: ldc           #18
598: invokevirtual #19
601: invokevirtual #22
604: aload         26
606: getstatic     #224
609: invokevirtual #225
612: invokestatic  #23
615: new           #16
618: dup
619: invokespecial #17
622: ldc           #18
624: invokevirtual #19
627: iload         27
629: invokevirtual #20
632: ldc           #21
634: invokevirtual #19
637: iconst_0
638: invokevirtual #20
641: ldc           #18
643: invokevirtual #19
646: invokevirtual #22
649: iload         27
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #23
662: new           #16
665: dup
666: invokespecial #17
669: ldc           #18
671: invokevirtual #19
674: aload         28
676: invokevirtual #19
679: ldc           #112
681: invokevirtual #19
684: invokevirtual #22
687: aload         28
689: ldc           #50
691: invokestatic  #68
694: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test079
Start line: 3520
End line: 3539
Method source code: 
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(false);
        java.lang.String[] strArray15 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean16 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray15);
        org.jsoup.safety.Whitelist whitelist17 = whitelist6.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray15);
        boolean boolean18 = org.jsoup.Jsoup.isValid("", whitelist17);
        java.lang.String str19 = org.jsoup.Jsoup.clean("<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>", whitelist17);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #369
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: ldc           #25
95: aload         6
97: invokestatic  #14
100: istore        7
102: ldc           #254
104: aload         6
106: invokestatic  #81
109: astore        8
111: aload_1
112: invokestatic  #15
115: aload_2
116: invokestatic  #15
119: aload_3
120: invokestatic  #15
123: aload         4
125: invokestatic  #15
128: new           #16
131: dup
132: invokespecial #17
135: ldc           #18
137: invokevirtual #19
140: iload         5
142: invokevirtual #20
145: ldc           #21
147: invokevirtual #19
150: iconst_1
151: invokevirtual #20
154: ldc           #18
156: invokevirtual #19
159: invokevirtual #22
162: iload         5
164: iconst_1
165: if_icmpne     172
168: iconst_1
169: goto          173
172: iconst_0
173: invokestatic  #23
176: aload         6
178: invokestatic  #15
181: new           #16
184: dup
185: invokespecial #17
188: ldc           #18
190: invokevirtual #19
193: iload         7
195: invokevirtual #20
198: ldc           #21
200: invokevirtual #19
203: iconst_1
204: invokevirtual #20
207: ldc           #18
209: invokevirtual #19
212: invokevirtual #22
215: iload         7
217: iconst_1
218: if_icmpne     225
221: iconst_1
222: goto          226
225: iconst_0
226: invokestatic  #23
229: new           #16
232: dup
233: invokespecial #17
236: ldc           #18
238: invokevirtual #19
241: aload         8
243: invokevirtual #19
246: ldc           #67
248: invokevirtual #19
251: invokevirtual #22
254: aload         8
256: ldc           #25
258: invokestatic  #68
261: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test080
Start line: 3542
End line: 3552
Method source code: 
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)", whitelist1);
        org.jsoup.safety.Whitelist whitelist6 = whitelist1.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Cleaner cleaner7 = new org.jsoup.safety.Cleaner(whitelist6);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":lt(32)" + "'", str2, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #370
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #43
39: ldc           #12
41: ldc           #32
43: invokevirtual #11
46: astore_3
47: new           #40
50: dup
51: aload_3
52: invokespecial #41
55: astore        4
57: aload_1
58: invokestatic  #15
61: new           #16
64: dup
65: invokespecial #17
68: ldc           #18
70: invokevirtual #19
73: aload_2
74: invokevirtual #19
77: ldc           #128
79: invokevirtual #19
82: invokevirtual #22
85: aload_2
86: ldc           #43
88: invokestatic  #68
91: aload_3
92: invokestatic  #15
95: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test081
Start line: 3555
End line: 3567
Method source code: 
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Cleaner cleaner5 = new org.jsoup.safety.Cleaner(whitelist4);
        org.jsoup.safety.Whitelist whitelist7 = whitelist4.preserveRelativeLinks(false);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #371
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: new           #40
44: dup
45: aload_3
46: invokespecial #41
49: astore        4
51: aload_3
52: iconst_0
53: invokevirtual #9
56: astore        5
58: aload_1
59: invokestatic  #15
62: aload_2
63: invokestatic  #15
66: aload_3
67: invokestatic  #15
70: aload         5
72: invokestatic  #15
75: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test082
Start line: 3570
End line: 3583
Method source code: 
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str3 = org.jsoup.Jsoup.clean(":lt(32)", whitelist2);
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes9 = whitelist7.getEnforcedAttributes("#text");
        boolean boolean10 = org.jsoup.Jsoup.isValid(".", whitelist7);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + ":lt(32)" + "'", str3, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(attributes9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #372
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #43
39: ldc           #12
41: ldc           #32
43: invokevirtual #11
46: astore_3
47: aload_3
48: ldc           #51
50: invokevirtual #150
53: astore        4
55: ldc           #86
57: aload_3
58: invokestatic  #14
61: istore        5
63: aload_1
64: invokestatic  #15
67: new           #16
70: dup
71: invokespecial #17
74: ldc           #18
76: invokevirtual #19
79: aload_2
80: invokevirtual #19
83: ldc           #128
85: invokevirtual #19
88: invokevirtual #22
91: aload_2
92: ldc           #43
94: invokestatic  #68
97: aload_3
98: invokestatic  #15
101: aload         4
103: invokestatic  #15
106: new           #16
109: dup
110: invokespecial #17
113: ldc           #18
115: invokevirtual #19
118: iload         5
120: invokevirtual #20
123: ldc           #21
125: invokevirtual #19
128: iconst_1
129: invokevirtual #20
132: ldc           #18
134: invokevirtual #19
137: invokevirtual #22
140: iload         5
142: iconst_1
143: if_icmpne     150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #23
154: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test083
Start line: 3586
End line: 3665
Method source code: 
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        java.lang.String[] strArray13 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean14 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist15 = whitelist4.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist17 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist23 = whitelist17.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = org.jsoup.Jsoup.clean("\nhi!", whitelist23);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str31 = org.jsoup.Jsoup.clean(":lt(32)", whitelist30);
        boolean boolean33 = whitelist30.isSafeTag("");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList39 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document37, "hi!");
        org.jsoup.nodes.Element element40 = document37.empty();
        org.jsoup.nodes.Element element42 = document37.removeClass("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = outputSettings53.prettyPrint(false);
        org.jsoup.nodes.Document document56 = document37.outputSettings(outputSettings55);
        java.lang.String str57 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist30, outputSettings55);
        org.jsoup.safety.Whitelist whitelist59 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist61 = whitelist59.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist63 = whitelist61.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist67 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str68 = org.jsoup.Jsoup.clean(":lt(32)", whitelist67);
        org.jsoup.safety.Whitelist whitelist72 = whitelist67.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray79 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist80 = whitelist67.addTags(strArray79);
        org.jsoup.safety.Whitelist whitelist81 = whitelist63.addProtocols(":matchesOwn(null", "hi!", strArray79);
        org.jsoup.safety.Whitelist whitelist82 = whitelist30.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray79);
        org.jsoup.safety.Whitelist whitelist83 = whitelist23.addProtocols("#doctype", "[]", strArray79);
        org.jsoup.safety.Whitelist whitelist84 = whitelist4.addTags(strArray79);
        org.jsoup.nodes.Attributes attributes86 = whitelist84.getEnforcedAttributes(":gt(100)");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":lt(32)" + "'", str31, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(outputSettings55);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[:lt(32)]" + "'", str57, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ":lt(32)" + "'", str68, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(whitelist84);
        org.junit.Assert.assertNotNull(attributes86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #373
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: invokestatic  #8
96: astore        7
98: aload         7
100: iconst_1
101: invokevirtual #9
104: astore        8
106: aload         7
108: ldc           #10
110: ldc           #10
112: ldc           #10
114: invokevirtual #11
117: astore        9
119: ldc           #98
121: aload         9
123: invokestatic  #81
126: astore        10
128: invokestatic  #118
131: astore        11
133: ldc           #43
135: aload         11
137: invokestatic  #81
140: astore        12
142: aload         11
144: ldc           #25
146: invokevirtual #83
149: istore        13
151: ldc           #25
153: ldc           #12
155: invokestatic  #26
158: astore        14
160: ldc           #12
162: aload         14
164: ldc           #12
166: invokestatic  #27
169: astore        15
171: aload         14
173: invokevirtual #103
176: astore        16
178: aload         14
180: ldc           #12
182: invokevirtual #59
185: astore        17
187: ldc           #25
189: ldc           #12
191: invokestatic  #26
194: astore        18
196: ldc           #12
198: aload         18
200: ldc           #12
202: invokestatic  #27
205: astore        19
207: aload         18
209: ldc           #12
211: invokevirtual #28
214: astore        20
216: aload         18
218: ldc           #25
220: invokevirtual #29
223: astore        21
225: aload         18
227: invokevirtual #30
230: astore        22
232: aload         22
234: iconst_0
235: invokevirtual #31
238: astore        23
240: aload         14
242: aload         23
244: invokevirtual #175
247: astore        24
249: ldc           #58
251: ldc           #126
253: aload         11
255: aload         23
257: invokestatic  #33
260: astore        25
262: invokestatic  #8
265: astore        26
267: aload         26
269: iconst_1
270: invokevirtual #9
273: astore        27
275: aload         27
277: iconst_0
278: invokevirtual #9
281: astore        28
283: invokestatic  #118
286: astore        29
288: ldc           #43
290: aload         29
292: invokestatic  #81
295: astore        30
297: aload         29
299: ldc           #43
301: ldc           #12
303: ldc           #32
305: invokevirtual #11
308: astore        31
310: bipush        6
312: anewarray     #119
315: dup
316: iconst_0
317: ldc           #109
319: aastore
320: dup
321: iconst_1
322: ldc           #10
324: aastore
325: dup
326: iconst_2
327: ldc           #13
329: aastore
330: dup
331: iconst_3
332: ldc           #50
334: aastore
335: dup
336: iconst_4
337: ldc           #12
339: aastore
340: dup
341: iconst_5
342: ldc           #120
344: aastore
345: astore        32
347: aload         29
349: aload         32
351: invokevirtual #121
354: astore        33
356: aload         28
358: ldc           #38
360: ldc           #12
362: aload         32
364: invokevirtual #122
367: astore        34
369: aload         11
371: ldc           #109
373: aload         32
375: invokevirtual #127
378: astore        35
380: aload         9
382: ldc           #187
384: ldc           #159
386: aload         32
388: invokevirtual #122
391: astore        36
393: aload_3
394: aload         32
396: invokevirtual #121
399: astore        37
401: aload         37
403: ldc           #92
405: invokevirtual #150
408: astore        38
410: aload_1
411: invokestatic  #15
414: aload_2
415: invokestatic  #15
418: aload_3
419: invokestatic  #15
422: aload         4
424: invokestatic  #15
427: new           #16
430: dup
431: invokespecial #17
434: ldc           #18
436: invokevirtual #19
439: iload         5
441: invokevirtual #20
444: ldc           #21
446: invokevirtual #19
449: iconst_1
450: invokevirtual #20
453: ldc           #18
455: invokevirtual #19
458: invokevirtual #22
461: iload         5
463: iconst_1
464: if_icmpne     471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #23
475: aload         6
477: invokestatic  #15
480: aload         7
482: invokestatic  #15
485: aload         8
487: invokestatic  #15
490: aload         9
492: invokestatic  #15
495: new           #16
498: dup
499: invokespecial #17
502: ldc           #18
504: invokevirtual #19
507: aload         10
509: invokevirtual #19
512: ldc           #211
514: invokevirtual #19
517: invokevirtual #22
520: aload         10
522: ldc           #12
524: invokestatic  #68
527: aload         11
529: invokestatic  #15
532: new           #16
535: dup
536: invokespecial #17
539: ldc           #18
541: invokevirtual #19
544: aload         12
546: invokevirtual #19
549: ldc           #128
551: invokevirtual #19
554: invokevirtual #22
557: aload         12
559: ldc           #43
561: invokestatic  #68
564: new           #16
567: dup
568: invokespecial #17
571: ldc           #18
573: invokevirtual #19
576: iload         13
578: invokevirtual #20
581: ldc           #21
583: invokevirtual #19
586: iconst_0
587: invokevirtual #20
590: ldc           #18
592: invokevirtual #19
595: invokevirtual #22
598: iload         13
600: ifne          607
603: iconst_1
604: goto          608
607: iconst_0
608: invokestatic  #23
611: aload         14
613: invokestatic  #15
616: aload         15
618: invokestatic  #15
621: aload         16
623: invokestatic  #15
626: aload         17
628: invokestatic  #15
631: aload         18
633: invokestatic  #15
636: aload         19
638: invokestatic  #15
641: aload         20
643: invokestatic  #15
646: aload         21
648: invokestatic  #15
651: aload         22
653: invokestatic  #15
656: aload         23
658: invokestatic  #15
661: aload         24
663: invokestatic  #15
666: new           #16
669: dup
670: invokespecial #17
673: ldc           #18
675: invokevirtual #19
678: aload         25
680: invokevirtual #19
683: ldc           #184
685: invokevirtual #19
688: invokevirtual #22
691: aload         25
693: ldc           #58
695: invokestatic  #68
698: aload         26
700: invokestatic  #15
703: aload         27
705: invokestatic  #15
708: aload         28
710: invokestatic  #15
713: aload         29
715: invokestatic  #15
718: new           #16
721: dup
722: invokespecial #17
725: ldc           #18
727: invokevirtual #19
730: aload         30
732: invokevirtual #19
735: ldc           #128
737: invokevirtual #19
740: invokevirtual #22
743: aload         30
745: ldc           #43
747: invokestatic  #68
750: aload         31
752: invokestatic  #15
755: aload         32
757: invokestatic  #15
760: aload         33
762: invokestatic  #15
765: aload         34
767: invokestatic  #15
770: aload         35
772: invokestatic  #15
775: aload         36
777: invokestatic  #15
780: aload         37
782: invokestatic  #15
785: aload         38
787: invokestatic  #15
790: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test084
Start line: 3668
End line: 3697
Method source code: 
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str11 = org.jsoup.Jsoup.clean(":lt(32)", whitelist10);
        org.jsoup.safety.Whitelist whitelist15 = whitelist10.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray22 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist23 = whitelist10.addTags(strArray22);
        org.jsoup.safety.Whitelist whitelist24 = whitelist6.addProtocols(":matchesOwn(null", "hi!", strArray22);
        java.lang.String[] strArray33 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean34 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray33);
        org.jsoup.safety.Whitelist whitelist35 = whitelist24.addProtocols("\n<!--hi!-->", "#document", strArray33);
        java.lang.String str36 = org.jsoup.Jsoup.clean(".hi!", "html", whitelist35);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + ":lt(32)" + "'", str11, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".hi!" + "'", str36, ".hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #374
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: invokestatic  #118
44: astore        4
46: ldc           #43
48: aload         4
50: invokestatic  #81
53: astore        5
55: aload         4
57: ldc           #43
59: ldc           #12
61: ldc           #32
63: invokevirtual #11
66: astore        6
68: bipush        6
70: anewarray     #119
73: dup
74: iconst_0
75: ldc           #109
77: aastore
78: dup
79: iconst_1
80: ldc           #10
82: aastore
83: dup
84: iconst_2
85: ldc           #13
87: aastore
88: dup
89: iconst_3
90: ldc           #50
92: aastore
93: dup
94: iconst_4
95: ldc           #12
97: aastore
98: dup
99: iconst_5
100: ldc           #120
102: aastore
103: astore        7
105: aload         4
107: aload         7
109: invokevirtual #121
112: astore        8
114: aload_3
115: ldc           #38
117: ldc           #12
119: aload         7
121: invokevirtual #122
124: astore        9
126: iconst_5
127: anewarray     #119
130: dup
131: iconst_0
132: ldc           #13
134: aastore
135: dup
136: iconst_1
137: ldc           #32
139: aastore
140: dup
141: iconst_2
142: ldc           #10
144: aastore
145: dup
146: iconst_3
147: ldc           #43
149: aastore
150: dup
151: iconst_4
152: ldc           #58
154: aastore
155: astore        10
157: ldc           #10
159: aload         10
161: invokestatic  #123
164: istore        11
166: aload         9
168: ldc           #84
170: ldc           #13
172: aload         10
174: invokevirtual #122
177: astore        12
179: ldc_w         #375
182: ldc_w         #376
185: aload         12
187: invokestatic  #94
190: astore        13
192: aload_1
193: invokestatic  #15
196: aload_2
197: invokestatic  #15
200: aload_3
201: invokestatic  #15
204: aload         4
206: invokestatic  #15
209: new           #16
212: dup
213: invokespecial #17
216: ldc           #18
218: invokevirtual #19
221: aload         5
223: invokevirtual #19
226: ldc           #128
228: invokevirtual #19
231: invokevirtual #22
234: aload         5
236: ldc           #43
238: invokestatic  #68
241: aload         6
243: invokestatic  #15
246: aload         7
248: invokestatic  #15
251: aload         8
253: invokestatic  #15
256: aload         9
258: invokestatic  #15
261: aload         10
263: invokestatic  #15
266: new           #16
269: dup
270: invokespecial #17
273: ldc           #18
275: invokevirtual #19
278: iload         11
280: invokevirtual #20
283: ldc           #21
285: invokevirtual #19
288: iconst_1
289: invokevirtual #20
292: ldc           #18
294: invokevirtual #19
297: invokevirtual #22
300: iload         11
302: iconst_1
303: if_icmpne     310
306: iconst_1
307: goto          311
310: iconst_0
311: invokestatic  #23
314: aload         12
316: invokestatic  #15
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: aload         13
333: invokevirtual #19
336: ldc_w         #377
339: invokevirtual #19
342: invokevirtual #22
345: aload         13
347: ldc_w         #375
350: invokestatic  #68
353: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test085
Start line: 3700
End line: 3803
Method source code: 
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.lang.Object obj24 = objList0.peek();
        objList0.clear();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList26 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.text("");
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList40 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document38, "hi!");
        org.jsoup.nodes.Element element42 = document38.tagName("hi!");
        org.jsoup.nodes.Element element44 = document38.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = document38.outputSettings();
        org.jsoup.nodes.Document document46 = document30.outputSettings(outputSettings45);
        org.jsoup.nodes.Document document47 = document30.normalise();
        objList26.addLast((java.lang.Object) document47);
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parse("", ":lt(32)");
        boolean boolean52 = objList26.offerFirst((java.lang.Object) "");
        boolean boolean53 = objList0.offerLast((java.lang.Object) boolean52);
        java.lang.Object obj54 = null;
        int int55 = objList0.indexOf(obj54);
        org.jsoup.nodes.Document document59 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList61 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document59, "hi!");
        org.jsoup.nodes.Element element63 = document59.tagName("hi!");
        org.jsoup.nodes.Element element65 = document59.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings66 = document59.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = outputSettings66.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings69 = outputSettings67.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.base;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings69.escapeMode(escapeMode70);
        org.jsoup.nodes.Entities.EscapeMode escapeMode72 = outputSettings71.escapeMode();
        boolean boolean73 = objList0.contains((java.lang.Object) outputSettings71);
        java.util.Iterator<java.lang.Object> objItor74 = objList0.descendingIterator();
        java.lang.Object[] objArray75 = objList0.toArray();
        org.jsoup.safety.Whitelist whitelist77 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str78 = org.jsoup.Jsoup.clean(":lt(32)", whitelist77);
        org.jsoup.safety.Whitelist whitelist82 = whitelist77.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray89 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist90 = whitelist77.addTags(strArray89);
        org.jsoup.safety.Cleaner cleaner91 = new org.jsoup.safety.Cleaner(whitelist77);
        boolean boolean92 = objList0.offerLast((java.lang.Object) cleaner91);
        org.jsoup.helper.Validate.notNull((java.lang.Object) cleaner91);
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(outputSettings45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(element65);
        org.junit.Assert.assertNotNull(outputSettings66);
        org.junit.Assert.assertNotNull(outputSettings67);
        org.junit.Assert.assertNotNull(outputSettings69);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertTrue("'" + escapeMode72 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode72.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objItor74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[true]");
        org.junit.Assert.assertNotNull(whitelist77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ":lt(32)" + "'", str78, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(whitelist90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #378
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #379
138: astore        12
140: aload_1
141: invokevirtual #131
144: new           #88
147: dup
148: invokespecial #89
151: astore        13
153: ldc           #25
155: ldc           #12
157: invokestatic  #26
160: astore        14
162: ldc           #12
164: aload         14
166: ldc           #12
168: invokestatic  #27
171: astore        15
173: aload         14
175: ldc           #25
177: invokevirtual #64
180: astore        16
182: ldc           #25
184: ldc           #12
186: invokestatic  #26
189: astore        17
191: ldc           #12
193: aload         17
195: ldc           #12
197: invokestatic  #27
200: astore        18
202: aload         17
204: ldc           #12
206: invokevirtual #28
209: astore        19
211: aload         17
213: ldc           #25
215: invokevirtual #29
218: astore        20
220: aload         17
222: invokevirtual #30
225: astore        21
227: aload         14
229: aload         21
231: invokevirtual #175
234: astore        22
236: aload         14
238: invokevirtual #102
241: astore        23
243: aload         13
245: aload         23
247: invokevirtual #95
250: ldc           #25
252: ldc           #43
254: invokestatic  #26
257: astore        24
259: aload         13
261: ldc           #25
263: invokevirtual #354
266: istore        25
268: aload_1
269: iload         25
271: invokestatic  #137
274: invokevirtual #282
277: istore        26
279: aconst_null
280: astore        27
282: aload_1
283: aload         27
285: invokevirtual #380
288: istore        28
290: ldc           #25
292: ldc           #12
294: invokestatic  #26
297: astore        29
299: ldc           #12
301: aload         29
303: ldc           #12
305: invokestatic  #27
308: astore        30
310: aload         29
312: ldc           #12
314: invokevirtual #28
317: astore        31
319: aload         29
321: ldc           #25
323: invokevirtual #29
326: astore        32
328: aload         29
330: invokevirtual #30
333: astore        33
335: aload         33
337: invokevirtual #205
340: astore        34
342: aload         34
344: iconst_0
345: invokevirtual #31
348: astore        35
350: getstatic     #381
353: astore        36
355: aload         35
357: aload         36
359: invokevirtual #190
362: astore        37
364: aload         37
366: invokevirtual #382
369: astore        38
371: aload_1
372: aload         37
374: invokevirtual #286
377: istore        39
379: aload_1
380: invokevirtual #383
383: astore        40
385: aload_1
386: invokevirtual #384
389: astore        41
391: invokestatic  #118
394: astore        42
396: ldc           #43
398: aload         42
400: invokestatic  #81
403: astore        43
405: aload         42
407: ldc           #43
409: ldc           #12
411: ldc           #32
413: invokevirtual #11
416: astore        44
418: bipush        6
420: anewarray     #119
423: dup
424: iconst_0
425: ldc           #109
427: aastore
428: dup
429: iconst_1
430: ldc           #10
432: aastore
433: dup
434: iconst_2
435: ldc           #13
437: aastore
438: dup
439: iconst_3
440: ldc           #50
442: aastore
443: dup
444: iconst_4
445: ldc           #12
447: aastore
448: dup
449: iconst_5
450: ldc           #120
452: aastore
453: astore        45
455: aload         42
457: aload         45
459: invokevirtual #121
462: astore        46
464: new           #40
467: dup
468: aload         42
470: invokespecial #41
473: astore        47
475: aload_1
476: aload         47
478: invokevirtual #282
481: istore        48
483: aload         47
485: invokestatic  #138
488: aload_2
489: invokestatic  #15
492: aload_3
493: invokestatic  #15
496: aload         4
498: invokestatic  #15
501: aload         5
503: invokestatic  #15
506: aload         6
508: invokestatic  #15
511: aload         7
513: invokestatic  #15
516: aload         8
518: invokestatic  #15
521: new           #16
524: dup
525: invokespecial #17
528: ldc           #18
530: invokevirtual #19
533: aload         9
535: invokevirtual #19
538: ldc           #78
540: invokevirtual #19
543: invokevirtual #22
546: aload         9
548: ldc           #10
550: invokestatic  #68
553: aload         10
555: invokestatic  #15
558: aload         10
560: invokestatic  #288
563: ldc_w         #289
566: invokestatic  #290
569: aload         10
571: invokestatic  #291
574: ldc_w         #289
577: invokestatic  #290
580: new           #16
583: dup
584: invokespecial #17
587: ldc           #18
589: invokevirtual #19
592: iload         11
594: invokevirtual #20
597: ldc           #21
599: invokevirtual #19
602: iconst_1
603: invokevirtual #20
606: ldc           #18
608: invokevirtual #19
611: invokevirtual #22
614: iload         11
616: iconst_1
617: if_icmpne     624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #23
628: aload         12
630: invokestatic  #15
633: aload         14
635: invokestatic  #15
638: aload         15
640: invokestatic  #15
643: aload         16
645: invokestatic  #15
648: aload         17
650: invokestatic  #15
653: aload         18
655: invokestatic  #15
658: aload         19
660: invokestatic  #15
663: aload         20
665: invokestatic  #15
668: aload         21
670: invokestatic  #15
673: aload         22
675: invokestatic  #15
678: aload         23
680: invokestatic  #15
683: aload         24
685: invokestatic  #15
688: new           #16
691: dup
692: invokespecial #17
695: ldc           #18
697: invokevirtual #19
700: iload         25
702: invokevirtual #20
705: ldc           #21
707: invokevirtual #19
710: iconst_1
711: invokevirtual #20
714: ldc           #18
716: invokevirtual #19
719: invokevirtual #22
722: iload         25
724: iconst_1
725: if_icmpne     732
728: iconst_1
729: goto          733
732: iconst_0
733: invokestatic  #23
736: new           #16
739: dup
740: invokespecial #17
743: ldc           #18
745: invokevirtual #19
748: iload         26
750: invokevirtual #20
753: ldc           #21
755: invokevirtual #19
758: iconst_1
759: invokevirtual #20
762: ldc           #18
764: invokevirtual #19
767: invokevirtual #22
770: iload         26
772: iconst_1
773: if_icmpne     780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #23
784: new           #16
787: dup
788: invokespecial #17
791: ldc           #18
793: invokevirtual #19
796: iload         28
798: invokevirtual #134
801: ldc           #21
803: invokevirtual #19
806: iconst_m1
807: invokevirtual #134
810: ldc           #18
812: invokevirtual #19
815: invokevirtual #22
818: iload         28
820: iconst_m1
821: if_icmpne     828
824: iconst_1
825: goto          829
828: iconst_0
829: invokestatic  #23
832: aload         29
834: invokestatic  #15
837: aload         30
839: invokestatic  #15
842: aload         31
844: invokestatic  #15
847: aload         32
849: invokestatic  #15
852: aload         33
854: invokestatic  #15
857: aload         34
859: invokestatic  #15
862: aload         35
864: invokestatic  #15
867: new           #16
870: dup
871: invokespecial #17
874: ldc           #18
876: invokevirtual #19
879: aload         36
881: invokevirtual #223
884: ldc           #21
886: invokevirtual #19
889: getstatic     #381
892: invokevirtual #223
895: ldc           #18
897: invokevirtual #19
900: invokevirtual #22
903: aload         36
905: getstatic     #381
908: invokevirtual #385
911: invokestatic  #23
914: aload         37
916: invokestatic  #15
919: new           #16
922: dup
923: invokespecial #17
926: ldc           #18
928: invokevirtual #19
931: aload         38
933: invokevirtual #223
936: ldc           #21
938: invokevirtual #19
941: getstatic     #381
944: invokevirtual #223
947: ldc           #18
949: invokevirtual #19
952: invokevirtual #22
955: aload         38
957: getstatic     #381
960: invokevirtual #385
963: invokestatic  #23
966: new           #16
969: dup
970: invokespecial #17
973: ldc           #18
975: invokevirtual #19
978: iload         39
980: invokevirtual #20
983: ldc           #21
985: invokevirtual #19
988: iconst_0
989: invokevirtual #20
992: ldc           #18
994: invokevirtual #19
997: invokevirtual #22
1000: iload         39
1002: ifne          1009
1005: iconst_1
1006: goto          1010
1009: iconst_0
1010: invokestatic  #23
1013: aload         40
1015: invokestatic  #15
1018: aload         41
1020: invokestatic  #15
1023: aload         41
1025: invokestatic  #288
1028: ldc_w         #386
1031: invokestatic  #290
1034: aload         41
1036: invokestatic  #291
1039: ldc_w         #386
1042: invokestatic  #290
1045: aload         42
1047: invokestatic  #15
1050: new           #16
1053: dup
1054: invokespecial #17
1057: ldc           #18
1059: invokevirtual #19
1062: aload         43
1064: invokevirtual #19
1067: ldc           #128
1069: invokevirtual #19
1072: invokevirtual #22
1075: aload         43
1077: ldc           #43
1079: invokestatic  #68
1082: aload         44
1084: invokestatic  #15
1087: aload         45
1089: invokestatic  #15
1092: aload         46
1094: invokestatic  #15
1097: new           #16
1100: dup
1101: invokespecial #17
1104: ldc           #18
1106: invokevirtual #19
1109: iload         48
1111: invokevirtual #20
1114: ldc           #21
1116: invokevirtual #19
1119: iconst_1
1120: invokevirtual #20
1123: ldc           #18
1125: invokevirtual #19
1128: invokevirtual #22
1131: iload         48
1133: iconst_1
1134: if_icmpne     1141
1137: iconst_1
1138: goto          1142
1141: iconst_0
1142: invokestatic  #23
1145: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test086
Start line: 3806
End line: 3897
Method source code: 
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.jsoup.select.Evaluator.Id id1 = new org.jsoup.select.Evaluator.Id("hi!");
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList7 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document5, "hi!");
        org.jsoup.nodes.Element element9 = document5.tagName("hi!");
        org.jsoup.nodes.Element element11 = document5.append("");
        java.lang.String str12 = element11.toString();
        boolean boolean14 = element11.hasAttr("");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element22 = document18.tagName("hi!");
        org.jsoup.nodes.Element element24 = document18.append("");
        org.jsoup.nodes.Element element26 = element24.removeClass("hi!");
        org.jsoup.select.Elements elements29 = element24.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Element element31 = element24.prependElement("hi!");
        boolean boolean32 = element31.hasText();
        element31.remove();
        boolean boolean34 = id1.matches(element11, element31);
        org.jsoup.safety.Whitelist whitelist35 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner38 = new org.jsoup.safety.Cleaner(whitelist37);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining41 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document43 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList49 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document47, "hi!");
        org.jsoup.nodes.Element element51 = document47.tagName("hi!");
        org.jsoup.nodes.Element element53 = document47.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = document47.outputSettings();
        boolean boolean55 = attributeWithValueContaining41.matches((org.jsoup.nodes.Element) document43, (org.jsoup.nodes.Element) document47);
        org.jsoup.nodes.Document document56 = cleaner38.clean(document47);
        org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str59 = document58.toString();
        java.lang.String str60 = document58.baseUri();
        org.jsoup.nodes.Document document61 = cleaner38.clean(document58);
        org.jsoup.nodes.Document document62 = document61.clone();
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList68 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document66, "hi!");
        org.jsoup.nodes.Element element69 = document66.empty();
        org.jsoup.nodes.Element element71 = document66.removeClass("hi!");
        org.jsoup.nodes.Element element73 = element71.toggleClass("");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = element73.siblingNodes();
        org.jsoup.nodes.Element element76 = element73.addClass(":gt(100)");
        org.jsoup.nodes.Node node77 = element73.parent();
        java.lang.String str79 = element73.absUrl("[^hi!]");
        org.jsoup.select.Elements elements81 = element73.getElementsByIndexGreaterThan((int) 'a');
        boolean boolean82 = id1.matches((org.jsoup.nodes.Element) document62, element73);
        java.lang.Class<?> wildcardClass83 = id1.getClass();
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(nodeList7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str12, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(outputSettings54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str59, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(elements81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #387
20: aastore
21: invokevirtual #7
24: pop
25: new           #388
28: dup
29: ldc           #12
31: invokespecial #389
34: astore_1
35: ldc           #25
37: ldc           #12
39: invokestatic  #26
42: astore_2
43: ldc           #12
45: aload_2
46: ldc           #12
48: invokestatic  #27
51: astore_3
52: aload_2
53: ldc           #12
55: invokevirtual #28
58: astore        4
60: aload_2
61: ldc           #25
63: invokevirtual #29
66: astore        5
68: aload         5
70: invokevirtual #363
73: astore        6
75: aload         5
77: ldc           #25
79: invokevirtual #364
82: istore        7
84: ldc           #25
86: ldc           #12
88: invokestatic  #26
91: astore        8
93: ldc           #12
95: aload         8
97: ldc           #12
99: invokestatic  #27
102: astore        9
104: aload         8
106: ldc           #12
108: invokevirtual #28
111: astore        10
113: aload         8
115: ldc           #25
117: invokevirtual #29
120: astore        11
122: aload         11
124: ldc           #12
126: invokevirtual #390
129: astore        12
131: aload         11
133: ldc           #51
135: ldc           #98
137: invokevirtual #391
140: astore        13
142: aload         11
144: ldc           #12
146: invokevirtual #392
149: astore        14
151: aload         14
153: invokevirtual #393
156: istore        15
158: aload         14
160: invokevirtual #394
163: aload_1
164: aload         5
166: aload         14
168: invokevirtual #395
171: istore        16
173: invokestatic  #8
176: astore        17
178: aload         17
180: iconst_1
181: invokevirtual #9
184: astore        18
186: new           #40
189: dup
190: aload         18
192: invokespecial #41
195: astore        19
197: new           #42
200: dup
201: ldc           #43
203: ldc           #32
205: invokespecial #44
208: astore        20
210: ldc           #12
212: invokestatic  #45
215: astore        21
217: ldc           #25
219: ldc           #12
221: invokestatic  #26
224: astore        22
226: ldc           #12
228: aload         22
230: ldc           #12
232: invokestatic  #27
235: astore        23
237: aload         22
239: ldc           #12
241: invokevirtual #28
244: astore        24
246: aload         22
248: ldc           #25
250: invokevirtual #29
253: astore        25
255: aload         22
257: invokevirtual #30
260: astore        26
262: aload         20
264: aload         21
266: aload         22
268: invokevirtual #46
271: istore        27
273: aload         19
275: aload         22
277: invokevirtual #47
280: astore        28
282: ldc           #10
284: invokestatic  #193
287: astore        29
289: aload         29
291: invokevirtual #72
294: astore        30
296: aload         29
298: invokevirtual #194
301: astore        31
303: aload         19
305: aload         29
307: invokevirtual #47
310: astore        32
312: aload         32
314: invokevirtual #154
317: astore        33
319: ldc           #25
321: ldc           #12
323: invokestatic  #26
326: astore        34
328: ldc           #12
330: aload         34
332: ldc           #12
334: invokestatic  #27
337: astore        35
339: aload         34
341: invokevirtual #103
344: astore        36
346: aload         34
348: ldc           #12
350: invokevirtual #59
353: astore        37
355: aload         37
357: ldc           #25
359: invokevirtual #177
362: astore        38
364: aload         38
366: invokevirtual #396
369: astore        39
371: aload         38
373: ldc           #92
375: invokevirtual #397
378: astore        40
380: aload         38
382: invokevirtual #252
385: astore        41
387: aload         38
389: ldc           #50
391: invokevirtual #398
394: astore        42
396: aload         38
398: bipush        97
400: invokevirtual #399
403: astore        43
405: aload_1
406: aload         33
408: aload         38
410: invokevirtual #395
413: istore        44
415: aload_1
416: invokevirtual #232
419: astore        45
421: aload_2
422: invokestatic  #15
425: aload_3
426: invokestatic  #15
429: aload         4
431: invokestatic  #15
434: aload         5
436: invokestatic  #15
439: new           #16
442: dup
443: invokespecial #17
446: ldc           #18
448: invokevirtual #19
451: aload         6
453: invokevirtual #19
456: ldc           #78
458: invokevirtual #19
461: invokevirtual #22
464: aload         6
466: ldc           #10
468: invokestatic  #68
471: new           #16
474: dup
475: invokespecial #17
478: ldc           #18
480: invokevirtual #19
483: iload         7
485: invokevirtual #20
488: ldc           #21
490: invokevirtual #19
493: iconst_0
494: invokevirtual #20
497: ldc           #18
499: invokevirtual #19
502: invokevirtual #22
505: iload         7
507: ifne          514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #23
518: aload         8
520: invokestatic  #15
523: aload         9
525: invokestatic  #15
528: aload         10
530: invokestatic  #15
533: aload         11
535: invokestatic  #15
538: aload         12
540: invokestatic  #15
543: aload         13
545: invokestatic  #15
548: aload         14
550: invokestatic  #15
553: new           #16
556: dup
557: invokespecial #17
560: ldc           #18
562: invokevirtual #19
565: iload         15
567: invokevirtual #20
570: ldc           #21
572: invokevirtual #19
575: iconst_0
576: invokevirtual #20
579: ldc           #18
581: invokevirtual #19
584: invokevirtual #22
587: iload         15
589: ifne          596
592: iconst_1
593: goto          597
596: iconst_0
597: invokestatic  #23
600: new           #16
603: dup
604: invokespecial #17
607: ldc           #18
609: invokevirtual #19
612: iload         16
614: invokevirtual #20
617: ldc           #21
619: invokevirtual #19
622: iconst_0
623: invokevirtual #20
626: ldc           #18
628: invokevirtual #19
631: invokevirtual #22
634: iload         16
636: ifne          643
639: iconst_1
640: goto          644
643: iconst_0
644: invokestatic  #23
647: aload         17
649: invokestatic  #15
652: aload         18
654: invokestatic  #15
657: aload         21
659: invokestatic  #15
662: aload         22
664: invokestatic  #15
667: aload         23
669: invokestatic  #15
672: aload         24
674: invokestatic  #15
677: aload         25
679: invokestatic  #15
682: aload         26
684: invokestatic  #15
687: new           #16
690: dup
691: invokespecial #17
694: ldc           #18
696: invokevirtual #19
699: iload         27
701: invokevirtual #20
704: ldc           #21
706: invokevirtual #19
709: iconst_0
710: invokevirtual #20
713: ldc           #18
715: invokevirtual #19
718: invokevirtual #22
721: iload         27
723: ifne          730
726: iconst_1
727: goto          731
730: iconst_0
731: invokestatic  #23
734: aload         28
736: invokestatic  #15
739: aload         29
741: invokestatic  #15
744: new           #16
747: dup
748: invokespecial #17
751: ldc           #18
753: invokevirtual #19
756: aload         30
758: invokevirtual #19
761: ldc           #197
763: invokevirtual #19
766: invokevirtual #22
769: aload         30
771: ldc           #151
773: invokestatic  #68
776: new           #16
779: dup
780: invokespecial #17
783: ldc           #18
785: invokevirtual #19
788: aload         31
790: invokevirtual #19
793: ldc           #67
795: invokevirtual #19
798: invokevirtual #22
801: aload         31
803: ldc           #25
805: invokestatic  #68
808: aload         32
810: invokestatic  #15
813: aload         33
815: invokestatic  #15
818: aload         34
820: invokestatic  #15
823: aload         35
825: invokestatic  #15
828: aload         36
830: invokestatic  #15
833: aload         37
835: invokestatic  #15
838: aload         38
840: invokestatic  #15
843: aload         39
845: invokestatic  #15
848: aload         40
850: invokestatic  #15
853: aload         41
855: invokestatic  #79
858: new           #16
861: dup
862: invokespecial #17
865: ldc           #18
867: invokevirtual #19
870: aload         42
872: invokevirtual #19
875: ldc           #67
877: invokevirtual #19
880: invokevirtual #22
883: aload         42
885: ldc           #25
887: invokestatic  #68
890: aload         43
892: invokestatic  #15
895: new           #16
898: dup
899: invokespecial #17
902: ldc           #18
904: invokevirtual #19
907: iload         44
909: invokevirtual #20
912: ldc           #21
914: invokevirtual #19
917: iconst_0
918: invokevirtual #20
921: ldc           #18
923: invokevirtual #19
926: invokevirtual #22
929: iload         44
931: ifne          938
934: iconst_1
935: goto          939
938: iconst_0
939: invokestatic  #23
942: aload         45
944: invokestatic  #15
947: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test087
Start line: 3900
End line: 3969
Method source code: 
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        objList0.push((java.lang.Object) "\nhi!");
        java.lang.Object obj3 = null;
        int int4 = objList0.indexOf(obj3);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList5 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean7 = objList5.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj8 = objList5.peekFirst();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList9 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        java.lang.Object obj10 = objList9.poll();
        java.util.ListIterator<java.lang.Object> objItor11 = objList9.listIterator();
        objList5.addFirst((java.lang.Object) objItor11);
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element16 = document15.body();
        org.jsoup.nodes.Element element18 = element16.append("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        int int19 = objList5.lastIndexOf((java.lang.Object) "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList25 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document23, "hi!");
        java.util.stream.Stream<org.jsoup.nodes.Node> nodeStream26 = nodeList25.stream();
        boolean boolean27 = objList5.addAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList25);
        objList0.addLast((java.lang.Object) objList5);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str32 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist31);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist36 = whitelist34.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist38 = whitelist36.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist42 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str43 = org.jsoup.Jsoup.clean(":lt(32)", whitelist42);
        org.jsoup.safety.Whitelist whitelist47 = whitelist42.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray54 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist55 = whitelist42.addTags(strArray54);
        org.jsoup.safety.Whitelist whitelist56 = whitelist38.addProtocols(":matchesOwn(null", "hi!", strArray54);
        org.jsoup.safety.Whitelist whitelist57 = whitelist31.addAttributes("[^hi!]", strArray54);
        boolean boolean58 = objList5.equals((java.lang.Object) strArray54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = objList5.remove((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objItor11);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(nodeStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!$=   ]" + "'", str32, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":lt(32)" + "'", str43, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #400
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #98
36: invokevirtual #401
39: aconst_null
40: astore_2
41: aload_1
42: aload_2
43: invokevirtual #380
46: istore_3
47: new           #88
50: dup
51: invokespecial #89
54: astore        4
56: aload         4
58: ldc           #43
60: invokevirtual #90
63: istore        5
65: aload         4
67: invokevirtual #91
70: astore        6
72: new           #88
75: dup
76: invokespecial #89
79: astore        7
81: aload         7
83: invokevirtual #402
86: astore        8
88: aload         7
90: invokevirtual #403
93: astore        9
95: aload         4
97: aload         9
99: invokevirtual #93
102: ldc           #25
104: ldc           #12
106: invokestatic  #26
109: astore        10
111: aload         10
113: invokevirtual #166
116: astore        11
118: aload         11
120: ldc           #109
122: invokevirtual #404
125: astore        12
127: aload         4
129: ldc           #109
131: invokevirtual #130
134: istore        13
136: ldc           #25
138: ldc           #12
140: invokestatic  #26
143: astore        14
145: ldc           #12
147: aload         14
149: ldc           #12
151: invokestatic  #27
154: astore        15
156: aload         15
158: invokeinterface #405,  1
163: astore        16
165: aload         4
167: aload         15
169: invokevirtual #406
172: istore        17
174: aload_1
175: aload         4
177: invokevirtual #95
180: invokestatic  #8
183: astore        18
185: ldc           #109
187: ldc           #110
189: aload         18
191: invokestatic  #94
194: astore        19
196: invokestatic  #8
199: astore        20
201: aload         20
203: iconst_1
204: invokevirtual #9
207: astore        21
209: aload         21
211: iconst_0
212: invokevirtual #9
215: astore        22
217: invokestatic  #118
220: astore        23
222: ldc           #43
224: aload         23
226: invokestatic  #81
229: astore        24
231: aload         23
233: ldc           #43
235: ldc           #12
237: ldc           #32
239: invokevirtual #11
242: astore        25
244: bipush        6
246: anewarray     #119
249: dup
250: iconst_0
251: ldc           #109
253: aastore
254: dup
255: iconst_1
256: ldc           #10
258: aastore
259: dup
260: iconst_2
261: ldc           #13
263: aastore
264: dup
265: iconst_3
266: ldc           #50
268: aastore
269: dup
270: iconst_4
271: ldc           #12
273: aastore
274: dup
275: iconst_5
276: ldc           #120
278: aastore
279: astore        26
281: aload         23
283: aload         26
285: invokevirtual #121
288: astore        27
290: aload         22
292: ldc           #38
294: ldc           #12
296: aload         26
298: invokevirtual #122
301: astore        28
303: aload         18
305: ldc           #50
307: aload         26
309: invokevirtual #127
312: astore        29
314: aload         4
316: aload         26
318: invokevirtual #90
321: istore        30
323: aload         4
325: iconst_m1
326: invokevirtual #407
329: astore        31
331: ldc_w         #408
334: invokestatic  #35
337: goto          342
340: astore        31
342: new           #16
345: dup
346: invokespecial #17
349: ldc           #18
351: invokevirtual #19
354: iload_3
355: invokevirtual #134
358: ldc           #21
360: invokevirtual #19
363: iconst_m1
364: invokevirtual #134
367: ldc           #18
369: invokevirtual #19
372: invokevirtual #22
375: iload_3
376: iconst_m1
377: if_icmpne     384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #23
388: new           #16
391: dup
392: invokespecial #17
395: ldc           #18
397: invokevirtual #19
400: iload         5
402: invokevirtual #20
405: ldc           #21
407: invokevirtual #19
410: iconst_0
411: invokevirtual #20
414: ldc           #18
416: invokevirtual #19
419: invokevirtual #22
422: iload         5
424: ifne          431
427: iconst_1
428: goto          432
431: iconst_0
432: invokestatic  #23
435: aload         6
437: invokestatic  #79
440: aload         8
442: invokestatic  #79
445: aload         9
447: invokestatic  #15
450: aload         10
452: invokestatic  #15
455: aload         11
457: invokestatic  #15
460: aload         12
462: invokestatic  #15
465: new           #16
468: dup
469: invokespecial #17
472: ldc           #18
474: invokevirtual #19
477: iload         13
479: invokevirtual #134
482: ldc           #21
484: invokevirtual #19
487: iconst_m1
488: invokevirtual #134
491: ldc           #18
493: invokevirtual #19
496: invokevirtual #22
499: iload         13
501: iconst_m1
502: if_icmpne     509
505: iconst_1
506: goto          510
509: iconst_0
510: invokestatic  #23
513: aload         14
515: invokestatic  #15
518: aload         15
520: invokestatic  #15
523: aload         16
525: invokestatic  #15
528: new           #16
531: dup
532: invokespecial #17
535: ldc           #18
537: invokevirtual #19
540: iload         17
542: invokevirtual #20
545: ldc           #21
547: invokevirtual #19
550: iconst_1
551: invokevirtual #20
554: ldc           #18
556: invokevirtual #19
559: invokevirtual #22
562: iload         17
564: iconst_1
565: if_icmpne     572
568: iconst_1
569: goto          573
572: iconst_0
573: invokestatic  #23
576: aload         18
578: invokestatic  #15
581: new           #16
584: dup
585: invokespecial #17
588: ldc           #18
590: invokevirtual #19
593: aload         19
595: invokevirtual #19
598: ldc           #111
600: invokevirtual #19
603: invokevirtual #22
606: aload         19
608: ldc           #65
610: invokestatic  #68
613: aload         20
615: invokestatic  #15
618: aload         21
620: invokestatic  #15
623: aload         22
625: invokestatic  #15
628: aload         23
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: aload         24
647: invokevirtual #19
650: ldc           #128
652: invokevirtual #19
655: invokevirtual #22
658: aload         24
660: ldc           #43
662: invokestatic  #68
665: aload         25
667: invokestatic  #15
670: aload         26
672: invokestatic  #15
675: aload         27
677: invokestatic  #15
680: aload         28
682: invokestatic  #15
685: aload         29
687: invokestatic  #15
690: new           #16
693: dup
694: invokespecial #17
697: ldc           #18
699: invokevirtual #19
702: iload         30
704: invokevirtual #20
707: ldc           #21
709: invokevirtual #19
712: iconst_0
713: invokevirtual #20
716: ldc           #18
718: invokevirtual #19
721: invokevirtual #22
724: iload         30
726: ifne          733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #23
737: return
Exception table:
from    to  target type
323   337   340   Class java/lang/IndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test088
Start line: 3972
End line: 4019
Method source code: 
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList3 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList9 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document7, "hi!");
        org.jsoup.nodes.Element element11 = document7.text("");
        int int12 = objList3.lastIndexOf((java.lang.Object) document7);
        objList0.addFirst((java.lang.Object) document7);
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element20 = document17.empty();
        org.jsoup.nodes.Element element22 = document17.removeClass("hi!");
        boolean boolean23 = objList0.equals((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.Object> objItor24 = objList0.iterator();
        objList0.clear();
        org.jsoup.safety.Whitelist whitelist27 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist29 = whitelist27.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist33 = whitelist27.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str34 = org.jsoup.Jsoup.clean("\nhi!", whitelist33);
        objList0.addLast((java.lang.Object) "\nhi!");
        java.lang.Object obj37 = objList0.get(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = objList0.get(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objItor24);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "\nhi!" + "'", obj37, "\nhi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #409
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: new           #88
43: dup
44: invokespecial #89
47: astore_3
48: ldc           #25
50: ldc           #12
52: invokestatic  #26
55: astore        4
57: ldc           #12
59: aload         4
61: ldc           #12
63: invokestatic  #27
66: astore        5
68: aload         4
70: ldc           #25
72: invokevirtual #64
75: astore        6
77: aload_3
78: aload         4
80: invokevirtual #130
83: istore        7
85: aload_1
86: aload         4
88: invokevirtual #93
91: ldc           #25
93: ldc           #12
95: invokestatic  #26
98: astore        8
100: ldc           #12
102: aload         8
104: ldc           #12
106: invokestatic  #27
109: astore        9
111: aload         8
113: invokevirtual #103
116: astore        10
118: aload         8
120: ldc           #12
122: invokevirtual #59
125: astore        11
127: aload_1
128: ldc           #12
130: invokevirtual #90
133: istore        12
135: aload_1
136: invokevirtual #410
139: astore        13
141: aload_1
142: invokevirtual #131
145: invokestatic  #8
148: astore        14
150: aload         14
152: iconst_1
153: invokevirtual #9
156: astore        15
158: aload         14
160: ldc           #10
162: ldc           #10
164: ldc           #10
166: invokevirtual #11
169: astore        16
171: ldc           #98
173: aload         16
175: invokestatic  #81
178: astore        17
180: aload_1
181: ldc           #98
183: invokevirtual #95
186: aload_1
187: iconst_0
188: invokevirtual #411
191: astore        18
193: aload_1
194: iconst_1
195: invokevirtual #411
198: astore        19
200: ldc_w         #412
203: invokestatic  #35
206: goto          211
209: astore        19
211: new           #16
214: dup
215: invokespecial #17
218: ldc           #18
220: invokevirtual #19
223: iload_2
224: invokevirtual #20
227: ldc           #21
229: invokevirtual #19
232: iconst_0
233: invokevirtual #20
236: ldc           #18
238: invokevirtual #19
241: invokevirtual #22
244: iload_2
245: ifne          252
248: iconst_1
249: goto          253
252: iconst_0
253: invokestatic  #23
256: aload         4
258: invokestatic  #15
261: aload         5
263: invokestatic  #15
266: aload         6
268: invokestatic  #15
271: new           #16
274: dup
275: invokespecial #17
278: ldc           #18
280: invokevirtual #19
283: iload         7
285: invokevirtual #134
288: ldc           #21
290: invokevirtual #19
293: iconst_m1
294: invokevirtual #134
297: ldc           #18
299: invokevirtual #19
302: invokevirtual #22
305: iload         7
307: iconst_m1
308: if_icmpne     315
311: iconst_1
312: goto          316
315: iconst_0
316: invokestatic  #23
319: aload         8
321: invokestatic  #15
324: aload         9
326: invokestatic  #15
329: aload         10
331: invokestatic  #15
334: aload         11
336: invokestatic  #15
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: iload         12
353: invokevirtual #20
356: ldc           #21
358: invokevirtual #19
361: iconst_0
362: invokevirtual #20
365: ldc           #18
367: invokevirtual #19
370: invokevirtual #22
373: iload         12
375: ifne          382
378: iconst_1
379: goto          383
382: iconst_0
383: invokestatic  #23
386: aload         13
388: invokestatic  #15
391: aload         14
393: invokestatic  #15
396: aload         15
398: invokestatic  #15
401: aload         16
403: invokestatic  #15
406: new           #16
409: dup
410: invokespecial #17
413: ldc           #18
415: invokevirtual #19
418: aload         17
420: invokevirtual #19
423: ldc           #211
425: invokevirtual #19
428: invokevirtual #22
431: aload         17
433: ldc           #12
435: invokestatic  #68
438: new           #16
441: dup
442: invokespecial #17
445: ldc           #18
447: invokevirtual #19
450: aload         18
452: invokevirtual #223
455: ldc_w         #292
458: invokevirtual #19
461: invokevirtual #22
464: aload         18
466: ldc           #98
468: invokestatic  #68
471: return
Exception table:
from    to  target type
193   206   209   Class java/lang/IndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test089
Start line: 4022
End line: 4035
Method source code: 
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist9 = whitelist3.addEnforcedAttribute(":eq(1)", "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", ".\n<!---->");
        java.lang.String str10 = org.jsoup.Jsoup.clean(":matches(null", whitelist3);
        java.lang.String str11 = org.jsoup.Jsoup.clean(".<html> <head></head> <body></body> </html>", "#:lt(32)=\"\"", whitelist3);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + ":matches(null" + "'", str10, ":matches(null");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "." + "'", str11, ".");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #413
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc_w         #279
39: ldc           #82
41: ldc           #145
43: invokevirtual #11
46: astore_3
47: ldc_w         #414
50: aload_1
51: invokestatic  #81
54: astore        4
56: ldc_w         #415
59: ldc_w         #416
62: aload_1
63: invokestatic  #94
66: astore        5
68: aload_1
69: invokestatic  #15
72: aload_2
73: invokestatic  #15
76: aload_3
77: invokestatic  #15
80: new           #16
83: dup
84: invokespecial #17
87: ldc           #18
89: invokevirtual #19
92: aload         4
94: invokevirtual #19
97: ldc_w         #417
100: invokevirtual #19
103: invokevirtual #22
106: aload         4
108: ldc_w         #414
111: invokestatic  #68
114: new           #16
117: dup
118: invokespecial #17
121: ldc           #18
123: invokevirtual #19
126: aload         5
128: invokevirtual #19
131: ldc           #85
133: invokevirtual #19
136: invokevirtual #22
139: aload         5
141: ldc           #86
143: invokestatic  #68
146: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test090
Start line: 4038
End line: 4145
Method source code: 
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.jsoup.select.Evaluator.Id id1 = new org.jsoup.select.Evaluator.Id("hi!");
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList7 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document5, "hi!");
        org.jsoup.nodes.Element element9 = document5.tagName("hi!");
        org.jsoup.nodes.Element element11 = document5.append("");
        java.lang.String str12 = element11.toString();
        boolean boolean14 = element11.hasAttr("");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element22 = document18.tagName("hi!");
        org.jsoup.nodes.Element element24 = document18.append("");
        org.jsoup.nodes.Element element26 = element24.removeClass("hi!");
        org.jsoup.select.Elements elements29 = element24.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Element element31 = element24.prependElement("hi!");
        boolean boolean32 = element31.hasText();
        element31.remove();
        boolean boolean34 = id1.matches(element11, element31);
        org.jsoup.safety.Whitelist whitelist35 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner38 = new org.jsoup.safety.Cleaner(whitelist37);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining41 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document43 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList49 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document47, "hi!");
        org.jsoup.nodes.Element element51 = document47.tagName("hi!");
        org.jsoup.nodes.Element element53 = document47.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = document47.outputSettings();
        boolean boolean55 = attributeWithValueContaining41.matches((org.jsoup.nodes.Element) document43, (org.jsoup.nodes.Element) document47);
        org.jsoup.nodes.Document document56 = cleaner38.clean(document47);
        org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str59 = document58.toString();
        java.lang.String str60 = document58.baseUri();
        org.jsoup.nodes.Document document61 = cleaner38.clean(document58);
        org.jsoup.nodes.Document document62 = document61.clone();
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList68 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document66, "hi!");
        org.jsoup.nodes.Element element69 = document66.empty();
        org.jsoup.nodes.Element element71 = document66.removeClass("hi!");
        org.jsoup.nodes.Element element73 = element71.toggleClass("");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = element73.siblingNodes();
        org.jsoup.nodes.Element element76 = element73.addClass(":gt(100)");
        org.jsoup.nodes.Node node77 = element73.parent();
        java.lang.String str79 = element73.absUrl("[^hi!]");
        org.jsoup.select.Elements elements81 = element73.getElementsByIndexGreaterThan((int) 'a');
        boolean boolean82 = id1.matches((org.jsoup.nodes.Element) document62, element73);
        org.jsoup.parser.Parser parser83 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.nodes.Document document86 = parser83.parseInput("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document89 = parser83.parseInput("hi!", "#comment");
        org.jsoup.nodes.Document document91 = org.jsoup.nodes.Document.createShell("hi!");
        java.util.regex.Pattern pattern92 = null;
        org.jsoup.select.Evaluator.MatchesOwn matchesOwn93 = new org.jsoup.select.Evaluator.MatchesOwn(pattern92);
        boolean boolean94 = document91.equals((java.lang.Object) pattern92);
        org.jsoup.nodes.Element element97 = document91.attr("[.]", ".<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean98 = id1.matches((org.jsoup.nodes.Element) document89, element97);
        java.lang.String str99 = element97.tagName();
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(nodeList7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str12, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(outputSettings54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str59, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(elements81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parser83);
        org.junit.Assert.assertNotNull(document86);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertNotNull(document91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(element97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "#root" + "'", str99, "#root");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #418
20: aastore
21: invokevirtual #7
24: pop
25: new           #388
28: dup
29: ldc           #12
31: invokespecial #389
34: astore_1
35: ldc           #25
37: ldc           #12
39: invokestatic  #26
42: astore_2
43: ldc           #12
45: aload_2
46: ldc           #12
48: invokestatic  #27
51: astore_3
52: aload_2
53: ldc           #12
55: invokevirtual #28
58: astore        4
60: aload_2
61: ldc           #25
63: invokevirtual #29
66: astore        5
68: aload         5
70: invokevirtual #363
73: astore        6
75: aload         5
77: ldc           #25
79: invokevirtual #364
82: istore        7
84: ldc           #25
86: ldc           #12
88: invokestatic  #26
91: astore        8
93: ldc           #12
95: aload         8
97: ldc           #12
99: invokestatic  #27
102: astore        9
104: aload         8
106: ldc           #12
108: invokevirtual #28
111: astore        10
113: aload         8
115: ldc           #25
117: invokevirtual #29
120: astore        11
122: aload         11
124: ldc           #12
126: invokevirtual #390
129: astore        12
131: aload         11
133: ldc           #51
135: ldc           #98
137: invokevirtual #391
140: astore        13
142: aload         11
144: ldc           #12
146: invokevirtual #392
149: astore        14
151: aload         14
153: invokevirtual #393
156: istore        15
158: aload         14
160: invokevirtual #394
163: aload_1
164: aload         5
166: aload         14
168: invokevirtual #395
171: istore        16
173: invokestatic  #8
176: astore        17
178: aload         17
180: iconst_1
181: invokevirtual #9
184: astore        18
186: new           #40
189: dup
190: aload         18
192: invokespecial #41
195: astore        19
197: new           #42
200: dup
201: ldc           #43
203: ldc           #32
205: invokespecial #44
208: astore        20
210: ldc           #12
212: invokestatic  #45
215: astore        21
217: ldc           #25
219: ldc           #12
221: invokestatic  #26
224: astore        22
226: ldc           #12
228: aload         22
230: ldc           #12
232: invokestatic  #27
235: astore        23
237: aload         22
239: ldc           #12
241: invokevirtual #28
244: astore        24
246: aload         22
248: ldc           #25
250: invokevirtual #29
253: astore        25
255: aload         22
257: invokevirtual #30
260: astore        26
262: aload         20
264: aload         21
266: aload         22
268: invokevirtual #46
271: istore        27
273: aload         19
275: aload         22
277: invokevirtual #47
280: astore        28
282: ldc           #10
284: invokestatic  #193
287: astore        29
289: aload         29
291: invokevirtual #72
294: astore        30
296: aload         29
298: invokevirtual #194
301: astore        31
303: aload         19
305: aload         29
307: invokevirtual #47
310: astore        32
312: aload         32
314: invokevirtual #154
317: astore        33
319: ldc           #25
321: ldc           #12
323: invokestatic  #26
326: astore        34
328: ldc           #12
330: aload         34
332: ldc           #12
334: invokestatic  #27
337: astore        35
339: aload         34
341: invokevirtual #103
344: astore        36
346: aload         34
348: ldc           #12
350: invokevirtual #59
353: astore        37
355: aload         37
357: ldc           #25
359: invokevirtual #177
362: astore        38
364: aload         38
366: invokevirtual #396
369: astore        39
371: aload         38
373: ldc           #92
375: invokevirtual #397
378: astore        40
380: aload         38
382: invokevirtual #252
385: astore        41
387: aload         38
389: ldc           #50
391: invokevirtual #398
394: astore        42
396: aload         38
398: bipush        97
400: invokevirtual #399
403: astore        43
405: aload_1
406: aload         33
408: aload         38
410: invokevirtual #395
413: istore        44
415: invokestatic  #419
418: astore        45
420: aload         45
422: ldc           #151
424: ldc           #110
426: invokevirtual #420
429: astore        46
431: aload         45
433: ldc           #12
435: ldc           #114
437: invokevirtual #420
440: astore        47
442: ldc           #12
444: invokestatic  #45
447: astore        48
449: aconst_null
450: astore        49
452: new           #345
455: dup
456: aload         49
458: invokespecial #346
461: astore        50
463: aload         48
465: aload         49
467: invokevirtual #202
470: istore        51
472: aload         48
474: ldc_w         #421
477: ldc           #32
479: invokevirtual #56
482: astore        52
484: aload_1
485: aload         47
487: aload         52
489: invokevirtual #395
492: istore        53
494: aload         52
496: invokevirtual #422
499: astore        54
501: aload_2
502: invokestatic  #15
505: aload_3
506: invokestatic  #15
509: aload         4
511: invokestatic  #15
514: aload         5
516: invokestatic  #15
519: new           #16
522: dup
523: invokespecial #17
526: ldc           #18
528: invokevirtual #19
531: aload         6
533: invokevirtual #19
536: ldc           #78
538: invokevirtual #19
541: invokevirtual #22
544: aload         6
546: ldc           #10
548: invokestatic  #68
551: new           #16
554: dup
555: invokespecial #17
558: ldc           #18
560: invokevirtual #19
563: iload         7
565: invokevirtual #20
568: ldc           #21
570: invokevirtual #19
573: iconst_0
574: invokevirtual #20
577: ldc           #18
579: invokevirtual #19
582: invokevirtual #22
585: iload         7
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #23
598: aload         8
600: invokestatic  #15
603: aload         9
605: invokestatic  #15
608: aload         10
610: invokestatic  #15
613: aload         11
615: invokestatic  #15
618: aload         12
620: invokestatic  #15
623: aload         13
625: invokestatic  #15
628: aload         14
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         15
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         15
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: new           #16
683: dup
684: invokespecial #17
687: ldc           #18
689: invokevirtual #19
692: iload         16
694: invokevirtual #20
697: ldc           #21
699: invokevirtual #19
702: iconst_0
703: invokevirtual #20
706: ldc           #18
708: invokevirtual #19
711: invokevirtual #22
714: iload         16
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #23
727: aload         17
729: invokestatic  #15
732: aload         18
734: invokestatic  #15
737: aload         21
739: invokestatic  #15
742: aload         22
744: invokestatic  #15
747: aload         23
749: invokestatic  #15
752: aload         24
754: invokestatic  #15
757: aload         25
759: invokestatic  #15
762: aload         26
764: invokestatic  #15
767: new           #16
770: dup
771: invokespecial #17
774: ldc           #18
776: invokevirtual #19
779: iload         27
781: invokevirtual #20
784: ldc           #21
786: invokevirtual #19
789: iconst_0
790: invokevirtual #20
793: ldc           #18
795: invokevirtual #19
798: invokevirtual #22
801: iload         27
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #23
814: aload         28
816: invokestatic  #15
819: aload         29
821: invokestatic  #15
824: new           #16
827: dup
828: invokespecial #17
831: ldc           #18
833: invokevirtual #19
836: aload         30
838: invokevirtual #19
841: ldc           #197
843: invokevirtual #19
846: invokevirtual #22
849: aload         30
851: ldc           #151
853: invokestatic  #68
856: new           #16
859: dup
860: invokespecial #17
863: ldc           #18
865: invokevirtual #19
868: aload         31
870: invokevirtual #19
873: ldc           #67
875: invokevirtual #19
878: invokevirtual #22
881: aload         31
883: ldc           #25
885: invokestatic  #68
888: aload         32
890: invokestatic  #15
893: aload         33
895: invokestatic  #15
898: aload         34
900: invokestatic  #15
903: aload         35
905: invokestatic  #15
908: aload         36
910: invokestatic  #15
913: aload         37
915: invokestatic  #15
918: aload         38
920: invokestatic  #15
923: aload         39
925: invokestatic  #15
928: aload         40
930: invokestatic  #15
933: aload         41
935: invokestatic  #79
938: new           #16
941: dup
942: invokespecial #17
945: ldc           #18
947: invokevirtual #19
950: aload         42
952: invokevirtual #19
955: ldc           #67
957: invokevirtual #19
960: invokevirtual #22
963: aload         42
965: ldc           #25
967: invokestatic  #68
970: aload         43
972: invokestatic  #15
975: new           #16
978: dup
979: invokespecial #17
982: ldc           #18
984: invokevirtual #19
987: iload         44
989: invokevirtual #20
992: ldc           #21
994: invokevirtual #19
997: iconst_0
998: invokevirtual #20
1001: ldc           #18
1003: invokevirtual #19
1006: invokevirtual #22
1009: iload         44
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #23
1022: aload         45
1024: invokestatic  #15
1027: aload         46
1029: invokestatic  #15
1032: aload         47
1034: invokestatic  #15
1037: aload         48
1039: invokestatic  #15
1042: new           #16
1045: dup
1046: invokespecial #17
1049: ldc           #18
1051: invokevirtual #19
1054: iload         51
1056: invokevirtual #20
1059: ldc           #21
1061: invokevirtual #19
1064: iconst_0
1065: invokevirtual #20
1068: ldc           #18
1070: invokevirtual #19
1073: invokevirtual #22
1076: iload         51
1078: ifne          1085
1081: iconst_1
1082: goto          1086
1085: iconst_0
1086: invokestatic  #23
1089: aload         52
1091: invokestatic  #15
1094: new           #16
1097: dup
1098: invokespecial #17
1101: ldc           #18
1103: invokevirtual #19
1106: iload         53
1108: invokevirtual #20
1111: ldc           #21
1113: invokevirtual #19
1116: iconst_0
1117: invokevirtual #20
1120: ldc           #18
1122: invokevirtual #19
1125: invokevirtual #22
1128: iload         53
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #23
1141: new           #16
1144: dup
1145: invokespecial #17
1148: ldc           #18
1150: invokevirtual #19
1153: aload         54
1155: invokevirtual #19
1158: ldc_w         #332
1161: invokevirtual #19
1164: invokevirtual #22
1167: aload         54
1169: ldc_w         #331
1172: invokestatic  #68
1175: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test091
Start line: 4148
End line: 4204
Method source code: 
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean2 = tag1.isBlock();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = element9.toggleClass("#document");
        org.jsoup.select.Elements elements13 = element11.getElementsByAttributeStarting(":lt(32)");
        org.jsoup.select.Elements elements15 = element11.getElementsByClass("[:lt(32)]");
        boolean boolean16 = tag1.equals((java.lang.Object) elements15);
        boolean boolean17 = tag1.preserveWhitespace();
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str22 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist21);
        org.jsoup.safety.Whitelist whitelist24 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist32 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str33 = org.jsoup.Jsoup.clean(":lt(32)", whitelist32);
        org.jsoup.safety.Whitelist whitelist37 = whitelist32.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray44 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist45 = whitelist32.addTags(strArray44);
        org.jsoup.safety.Whitelist whitelist46 = whitelist28.addProtocols(":matchesOwn(null", "hi!", strArray44);
        org.jsoup.safety.Whitelist whitelist47 = whitelist21.addAttributes("[^hi!]", strArray44);
        org.jsoup.safety.Whitelist whitelist51 = whitelist21.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.nodes.Attributes attributes53 = whitelist21.getEnforcedAttributes("");
        org.jsoup.nodes.Element element54 = new org.jsoup.nodes.Element(tag1, " hi!", attributes53);
        org.jsoup.nodes.Attributes attributes55 = attributes53.clone();
        java.util.Iterator<org.jsoup.nodes.Attribute> attributeItor56 = attributes55.iterator();
        org.junit.Assert.assertNotNull(tag1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(elements13);
        org.junit.Assert.assertNotNull(elements15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!$=   ]" + "'", str22, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + ":lt(32)" + "'", str33, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(attributes53);
        org.junit.Assert.assertNotNull(attributes55);
        org.junit.Assert.assertNotNull(attributeItor56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #423
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #13
27: invokestatic  #424
30: astore_1
31: aload_1
32: invokevirtual #425
35: istore_2
36: ldc           #25
38: ldc           #12
40: invokestatic  #26
43: astore_3
44: ldc           #12
46: aload_3
47: ldc           #12
49: invokestatic  #27
52: astore        4
54: aload_3
55: invokevirtual #103
58: astore        5
60: aload         5
62: ldc           #13
64: invokevirtual #177
67: astore        6
69: aload         6
71: ldc           #43
73: invokevirtual #426
76: astore        7
78: aload         6
80: ldc           #58
82: invokevirtual #427
85: astore        8
87: aload_1
88: aload         8
90: invokevirtual #428
93: istore        9
95: aload_1
96: invokevirtual #429
99: istore        10
101: invokestatic  #8
104: astore        11
106: ldc           #109
108: ldc           #110
110: aload         11
112: invokestatic  #94
115: astore        12
117: invokestatic  #8
120: astore        13
122: aload         13
124: iconst_1
125: invokevirtual #9
128: astore        14
130: aload         14
132: iconst_0
133: invokevirtual #9
136: astore        15
138: invokestatic  #118
141: astore        16
143: ldc           #43
145: aload         16
147: invokestatic  #81
150: astore        17
152: aload         16
154: ldc           #43
156: ldc           #12
158: ldc           #32
160: invokevirtual #11
163: astore        18
165: bipush        6
167: anewarray     #119
170: dup
171: iconst_0
172: ldc           #109
174: aastore
175: dup
176: iconst_1
177: ldc           #10
179: aastore
180: dup
181: iconst_2
182: ldc           #13
184: aastore
185: dup
186: iconst_3
187: ldc           #50
189: aastore
190: dup
191: iconst_4
192: ldc           #12
194: aastore
195: dup
196: iconst_5
197: ldc           #120
199: aastore
200: astore        19
202: aload         16
204: aload         19
206: invokevirtual #121
209: astore        20
211: aload         15
213: ldc           #38
215: ldc           #12
217: aload         19
219: invokevirtual #122
222: astore        21
224: aload         11
226: ldc           #50
228: aload         19
230: invokevirtual #127
233: astore        22
235: aload         11
237: ldc           #126
239: ldc           #109
241: ldc           #120
243: invokevirtual #11
246: astore        23
248: aload         11
250: ldc           #25
252: invokevirtual #150
255: astore        24
257: new           #430
260: dup
261: aload_1
262: ldc           #60
264: aload         24
266: invokespecial #431
269: astore        25
271: aload         24
273: invokevirtual #432
276: astore        26
278: aload         26
280: invokevirtual #433
283: astore        27
285: aload_1
286: invokestatic  #15
289: new           #16
292: dup
293: invokespecial #17
296: ldc           #18
298: invokevirtual #19
301: iload_2
302: invokevirtual #20
305: ldc           #21
307: invokevirtual #19
310: iconst_0
311: invokevirtual #20
314: ldc           #18
316: invokevirtual #19
319: invokevirtual #22
322: iload_2
323: ifne          330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #23
334: aload_3
335: invokestatic  #15
338: aload         4
340: invokestatic  #15
343: aload         5
345: invokestatic  #15
348: aload         6
350: invokestatic  #15
353: aload         7
355: invokestatic  #15
358: aload         8
360: invokestatic  #15
363: new           #16
366: dup
367: invokespecial #17
370: ldc           #18
372: invokevirtual #19
375: iload         9
377: invokevirtual #20
380: ldc           #21
382: invokevirtual #19
385: iconst_0
386: invokevirtual #20
389: ldc           #18
391: invokevirtual #19
394: invokevirtual #22
397: iload         9
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #23
410: new           #16
413: dup
414: invokespecial #17
417: ldc           #18
419: invokevirtual #19
422: iload         10
424: invokevirtual #20
427: ldc           #21
429: invokevirtual #19
432: iconst_0
433: invokevirtual #20
436: ldc           #18
438: invokevirtual #19
441: invokevirtual #22
444: iload         10
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #23
457: aload         11
459: invokestatic  #15
462: new           #16
465: dup
466: invokespecial #17
469: ldc           #18
471: invokevirtual #19
474: aload         12
476: invokevirtual #19
479: ldc           #111
481: invokevirtual #19
484: invokevirtual #22
487: aload         12
489: ldc           #65
491: invokestatic  #68
494: aload         13
496: invokestatic  #15
499: aload         14
501: invokestatic  #15
504: aload         15
506: invokestatic  #15
509: aload         16
511: invokestatic  #15
514: new           #16
517: dup
518: invokespecial #17
521: ldc           #18
523: invokevirtual #19
526: aload         17
528: invokevirtual #19
531: ldc           #128
533: invokevirtual #19
536: invokevirtual #22
539: aload         17
541: ldc           #43
543: invokestatic  #68
546: aload         18
548: invokestatic  #15
551: aload         19
553: invokestatic  #15
556: aload         20
558: invokestatic  #15
561: aload         21
563: invokestatic  #15
566: aload         22
568: invokestatic  #15
571: aload         23
573: invokestatic  #15
576: aload         24
578: invokestatic  #15
581: aload         26
583: invokestatic  #15
586: aload         27
588: invokestatic  #15
591: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test092
Start line: 4207
End line: 4234
Method source code: 
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.select.Elements elements24 = document21.getElementsByAttributeValueStarting(".hi!", "[^:containsOwn([:lt(32)*=. ]]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(elements24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #434
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: aload         12
130: ldc_w         #375
133: ldc_w         #435
136: invokevirtual #436
139: astore        13
141: aload_1
142: invokestatic  #15
145: aload_2
146: invokestatic  #15
149: aload         5
151: invokestatic  #15
154: aload         6
156: invokestatic  #15
159: aload         7
161: invokestatic  #15
164: aload         8
166: invokestatic  #15
169: aload         9
171: invokestatic  #15
174: aload         10
176: invokestatic  #15
179: new           #16
182: dup
183: invokespecial #17
186: ldc           #18
188: invokevirtual #19
191: iload         11
193: invokevirtual #20
196: ldc           #21
198: invokevirtual #19
201: iconst_0
202: invokevirtual #20
205: ldc           #18
207: invokevirtual #19
210: invokevirtual #22
213: iload         11
215: ifne          222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #23
226: aload         12
228: invokestatic  #15
231: aload         13
233: invokestatic  #15
236: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test093
Start line: 4237
End line: 4318
Method source code: 
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.util.Spliterator<java.lang.Object> objSpliterator24 = objList0.spliterator();
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        java.lang.String str32 = org.jsoup.helper.StringUtil.join((java.util.Collection) nodeList30, "#document");
        boolean boolean33 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList30);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist36 = whitelist34.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner37 = new org.jsoup.safety.Cleaner(whitelist36);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining40 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document42 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        boolean boolean54 = attributeWithValueContaining40.matches((org.jsoup.nodes.Element) document42, (org.jsoup.nodes.Element) document46);
        org.jsoup.nodes.Document document55 = cleaner37.clean(document46);
        boolean boolean56 = objList0.contains((java.lang.Object) document46);
        java.lang.Object obj57 = objList0.element();
        org.jsoup.nodes.Document document61 = org.jsoup.parser.Parser.parseBodyFragment("hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Element element63 = document61.text("");
        java.util.List<org.jsoup.nodes.Node> nodeList65 = org.jsoup.parser.Parser.parseFragment("", element63, "[^[^hi!]]");
        java.util.stream.Stream<org.jsoup.nodes.Node> nodeStream66 = nodeList65.parallelStream();
        boolean boolean67 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList65);
        java.util.function.UnaryOperator<org.jsoup.nodes.Node> nodeUnaryOperator68 = null;
        // The following exception was thrown during execution in test generation
        try {
            nodeList65.replaceAll(nodeUnaryOperator68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSpliterator24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\nhi!" + "'", str32, "\nhi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(nodeList65);
        org.junit.Assert.assertNotNull(nodeStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #437
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #283
138: astore        12
140: ldc           #25
142: ldc           #12
144: invokestatic  #26
147: astore        13
149: ldc           #12
151: aload         13
153: ldc           #12
155: invokestatic  #27
158: astore        14
160: aload         14
162: ldc           #13
164: invokestatic  #284
167: astore        15
169: aload_1
170: aload         14
172: invokevirtual #285
175: istore        16
177: invokestatic  #8
180: astore        17
182: aload         17
184: iconst_1
185: invokevirtual #9
188: astore        18
190: new           #40
193: dup
194: aload         18
196: invokespecial #41
199: astore        19
201: new           #42
204: dup
205: ldc           #43
207: ldc           #32
209: invokespecial #44
212: astore        20
214: ldc           #12
216: invokestatic  #45
219: astore        21
221: ldc           #25
223: ldc           #12
225: invokestatic  #26
228: astore        22
230: ldc           #12
232: aload         22
234: ldc           #12
236: invokestatic  #27
239: astore        23
241: aload         22
243: ldc           #12
245: invokevirtual #28
248: astore        24
250: aload         22
252: ldc           #25
254: invokevirtual #29
257: astore        25
259: aload         22
261: invokevirtual #30
264: astore        26
266: aload         20
268: aload         21
270: aload         22
272: invokevirtual #46
275: istore        27
277: aload         19
279: aload         22
281: invokevirtual #47
284: astore        28
286: aload_1
287: aload         22
289: invokevirtual #286
292: istore        29
294: aload_1
295: invokevirtual #438
298: astore        30
300: ldc           #12
302: ldc           #32
304: invokestatic  #52
307: astore        31
309: aload         31
311: ldc           #25
313: invokevirtual #64
316: astore        32
318: ldc           #25
320: aload         32
322: ldc_w         #439
325: invokestatic  #27
328: astore        33
330: aload         33
332: invokeinterface #440,  1
337: astore        34
339: aload_1
340: aload         33
342: invokevirtual #285
345: istore        35
347: aconst_null
348: astore        36
350: aload         33
352: aload         36
354: invokeinterface #441,  2
359: ldc           #76
361: invokestatic  #35
364: goto          369
367: astore        37
369: aload_2
370: invokestatic  #15
373: aload_3
374: invokestatic  #15
377: aload         4
379: invokestatic  #15
382: aload         5
384: invokestatic  #15
387: aload         6
389: invokestatic  #15
392: aload         7
394: invokestatic  #15
397: aload         8
399: invokestatic  #15
402: new           #16
405: dup
406: invokespecial #17
409: ldc           #18
411: invokevirtual #19
414: aload         9
416: invokevirtual #19
419: ldc           #78
421: invokevirtual #19
424: invokevirtual #22
427: aload         9
429: ldc           #10
431: invokestatic  #68
434: aload         10
436: invokestatic  #15
439: aload         10
441: invokestatic  #288
444: ldc_w         #289
447: invokestatic  #290
450: aload         10
452: invokestatic  #291
455: ldc_w         #289
458: invokestatic  #290
461: new           #16
464: dup
465: invokespecial #17
468: ldc           #18
470: invokevirtual #19
473: iload         11
475: invokevirtual #20
478: ldc           #21
480: invokevirtual #19
483: iconst_1
484: invokevirtual #20
487: ldc           #18
489: invokevirtual #19
492: invokevirtual #22
495: iload         11
497: iconst_1
498: if_icmpne     505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #23
509: aload         12
511: invokestatic  #15
514: aload         13
516: invokestatic  #15
519: aload         14
521: invokestatic  #15
524: new           #16
527: dup
528: invokespecial #17
531: ldc           #18
533: invokevirtual #19
536: aload         15
538: invokevirtual #19
541: ldc_w         #292
544: invokevirtual #19
547: invokevirtual #22
550: aload         15
552: ldc           #98
554: invokestatic  #68
557: new           #16
560: dup
561: invokespecial #17
564: ldc           #18
566: invokevirtual #19
569: iload         16
571: invokevirtual #20
574: ldc           #21
576: invokevirtual #19
579: iconst_0
580: invokevirtual #20
583: ldc           #18
585: invokevirtual #19
588: invokevirtual #22
591: iload         16
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #23
604: aload         17
606: invokestatic  #15
609: aload         18
611: invokestatic  #15
614: aload         21
616: invokestatic  #15
619: aload         22
621: invokestatic  #15
624: aload         23
626: invokestatic  #15
629: aload         24
631: invokestatic  #15
634: aload         25
636: invokestatic  #15
639: aload         26
641: invokestatic  #15
644: new           #16
647: dup
648: invokespecial #17
651: ldc           #18
653: invokevirtual #19
656: iload         27
658: invokevirtual #20
661: ldc           #21
663: invokevirtual #19
666: iconst_0
667: invokevirtual #20
670: ldc           #18
672: invokevirtual #19
675: invokevirtual #22
678: iload         27
680: ifne          687
683: iconst_1
684: goto          688
687: iconst_0
688: invokestatic  #23
691: aload         28
693: invokestatic  #15
696: new           #16
699: dup
700: invokespecial #17
703: ldc           #18
705: invokevirtual #19
708: iload         29
710: invokevirtual #20
713: ldc           #21
715: invokevirtual #19
718: iconst_0
719: invokevirtual #20
722: ldc           #18
724: invokevirtual #19
727: invokevirtual #22
730: iload         29
732: ifne          739
735: iconst_1
736: goto          740
739: iconst_0
740: invokestatic  #23
743: aload         30
745: invokestatic  #15
748: aload         31
750: invokestatic  #15
753: aload         32
755: invokestatic  #15
758: aload         33
760: invokestatic  #15
763: aload         34
765: invokestatic  #15
768: new           #16
771: dup
772: invokespecial #17
775: ldc           #18
777: invokevirtual #19
780: iload         35
782: invokevirtual #20
785: ldc           #21
787: invokevirtual #19
790: iconst_1
791: invokevirtual #20
794: ldc           #18
796: invokevirtual #19
799: invokevirtual #22
802: iload         35
804: iconst_1
805: if_icmpne     812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #23
816: return
Exception table:
from    to  target type
350   364   367   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test094
Start line: 4321
End line: 4332
Method source code: 
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes5 = whitelist3.getEnforcedAttributes("#text");
        boolean boolean6 = org.jsoup.Jsoup.isValid("[^[^hi!]]", whitelist3);
        java.lang.String str7 = org.jsoup.Jsoup.clean("[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]", ".body", whitelist3);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(attributes5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[#data=[    =hi!]]" + "'", str7, "[#data=[    =hi!]]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #442
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc_w         #439
39: aload_1
40: invokestatic  #14
43: istore_3
44: ldc_w         #443
47: ldc_w         #444
50: aload_1
51: invokestatic  #94
54: astore        4
56: aload_1
57: invokestatic  #15
60: aload_2
61: invokestatic  #15
64: new           #16
67: dup
68: invokespecial #17
71: ldc           #18
73: invokevirtual #19
76: iload_3
77: invokevirtual #20
80: ldc           #21
82: invokevirtual #19
85: iconst_1
86: invokevirtual #20
89: ldc           #18
91: invokevirtual #19
94: invokevirtual #22
97: iload_3
98: iconst_1
99: if_icmpne     106
102: iconst_1
103: goto          107
106: iconst_0
107: invokestatic  #23
110: new           #16
113: dup
114: invokespecial #17
117: ldc           #18
119: invokevirtual #19
122: aload         4
124: invokevirtual #19
127: ldc_w         #445
130: invokevirtual #19
133: invokevirtual #22
136: aload         4
138: ldc_w         #446
141: invokestatic  #68
144: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test095
Start line: 4335
End line: 4385
Method source code: 
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        java.lang.String str36 = document25.title();
        org.jsoup.nodes.Element element38 = document25.removeClass(":eq(1)");
        org.jsoup.nodes.Element element39 = document25.clone();
        org.jsoup.nodes.Element element41 = document25.prependText("<html>\n <head></head>\n <body></body>\n</html>:containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]<html>\n <head></head>\n <body></body>\n</html>");
        document25.title("[:lt(10)!=[hi!=.<html>\n <head></head>\n <body></body>\n</html>]]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #447
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #448
200: astore        21
202: aload         13
204: ldc_w         #279
207: invokevirtual #59
210: astore        22
212: aload         13
214: invokevirtual #154
217: astore        23
219: aload         13
221: ldc_w         #449
224: invokevirtual #258
227: astore        24
229: aload         13
231: ldc_w         #450
234: invokevirtual #451
237: aload_1
238: invokestatic  #15
241: aload_2
242: invokestatic  #15
245: aload         5
247: invokestatic  #15
250: aload         6
252: invokestatic  #15
255: aload         7
257: invokestatic  #15
260: aload         8
262: invokestatic  #15
265: aload         9
267: invokestatic  #15
270: aload         10
272: invokestatic  #15
275: new           #16
278: dup
279: invokespecial #17
282: ldc           #18
284: invokevirtual #19
287: iload         11
289: invokevirtual #20
292: ldc           #21
294: invokevirtual #19
297: iconst_0
298: invokevirtual #20
301: ldc           #18
303: invokevirtual #19
306: invokevirtual #22
309: iload         11
311: ifne          318
314: iconst_1
315: goto          319
318: iconst_0
319: invokestatic  #23
322: aload         12
324: invokestatic  #15
327: aload         13
329: invokestatic  #15
332: aload         14
334: invokestatic  #15
337: aload         15
339: invokestatic  #15
342: aload         16
344: invokestatic  #15
347: new           #16
350: dup
351: invokespecial #17
354: ldc           #18
356: invokevirtual #19
359: aload         17
361: invokevirtual #19
364: ldc           #78
366: invokevirtual #19
369: invokevirtual #22
372: aload         17
374: ldc           #10
376: invokestatic  #68
379: new           #16
382: dup
383: invokespecial #17
386: ldc           #18
388: invokevirtual #19
391: aload         18
393: invokevirtual #19
396: ldc           #67
398: invokevirtual #19
401: invokevirtual #22
404: aload         18
406: ldc           #25
408: invokestatic  #68
411: aload         19
413: invokestatic  #79
416: aload         20
418: invokestatic  #15
421: new           #16
424: dup
425: invokespecial #17
428: ldc           #18
430: invokevirtual #19
433: aload         21
435: invokevirtual #19
438: ldc           #67
440: invokevirtual #19
443: invokevirtual #22
446: aload         21
448: ldc           #25
450: invokestatic  #68
453: aload         22
455: invokestatic  #15
458: aload         23
460: invokestatic  #15
463: aload         24
465: invokestatic  #15
468: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test096
Start line: 4388
End line: 4415
Method source code: 
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings13 = document6.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings14 = outputSettings13.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings16 = outputSettings14.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings18 = outputSettings16.indentAmount(10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = org.jsoup.Jsoup.clean("#document=\"\"", "", whitelist2, outputSettings16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(outputSettings13);
        org.junit.Assert.assertNotNull(outputSettings14);
        org.junit.Assert.assertNotNull(outputSettings16);
        org.junit.Assert.assertNotNull(outputSettings18);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #452
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #12
31: invokestatic  #26
34: astore_2
35: ldc           #12
37: aload_2
38: ldc           #12
40: invokestatic  #27
43: astore_3
44: aload_2
45: ldc           #12
47: invokevirtual #28
50: astore        4
52: aload_2
53: ldc           #25
55: invokevirtual #29
58: astore        5
60: aload_2
61: invokevirtual #30
64: astore        6
66: aload         6
68: invokevirtual #205
71: astore        7
73: aload         7
75: iconst_0
76: invokevirtual #31
79: astore        8
81: aload         8
83: bipush        10
85: invokevirtual #189
88: astore        9
90: ldc_w         #302
93: ldc           #25
95: aload_1
96: aload         8
98: invokestatic  #33
101: astore        10
103: ldc           #34
105: invokestatic  #35
108: goto          113
111: astore        10
113: aload_2
114: invokestatic  #15
117: aload_3
118: invokestatic  #15
121: aload         4
123: invokestatic  #15
126: aload         5
128: invokestatic  #15
131: aload         6
133: invokestatic  #15
136: aload         7
138: invokestatic  #15
141: aload         8
143: invokestatic  #15
146: aload         9
148: invokestatic  #15
151: return
Exception table:
from    to  target type
90   108   111   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test097
Start line: 4418
End line: 4429
Method source code: 
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        org.jsoup.safety.Whitelist whitelist8 = whitelist3.addEnforcedAttribute("<html> <head></head> <body> . &lt;!----&gt; </body> </html>[&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;^=&lt;hi!&gt;&lt;/hi!&gt; &lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;]", "<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertNotNull(whitelist8);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #453
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc_w         #454
46: ldc_w         #274
49: ldc           #158
51: invokevirtual #11
54: astore        4
56: aload_1
57: invokestatic  #15
60: aload_2
61: invokestatic  #15
64: new           #16
67: dup
68: invokespecial #17
71: ldc           #18
73: invokevirtual #19
76: aload_3
77: invokevirtual #19
80: ldc           #85
82: invokevirtual #19
85: invokevirtual #22
88: aload_3
89: ldc           #86
91: invokestatic  #68
94: aload         4
96: invokestatic  #15
99: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test098
Start line: 4432
End line: 4514
Method source code: 
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean2 = tag1.isBlock();
        boolean boolean3 = tag1.formatAsBlock();
        boolean boolean4 = tag1.preserveWhitespace();
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner8 = new org.jsoup.safety.Cleaner(whitelist7);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining11 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document13 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element21 = document17.tagName("hi!");
        org.jsoup.nodes.Element element23 = document17.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document17.outputSettings();
        boolean boolean25 = attributeWithValueContaining11.matches((org.jsoup.nodes.Element) document13, (org.jsoup.nodes.Element) document17);
        org.jsoup.nodes.Document document26 = cleaner8.clean(document17);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan28 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document31 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str32 = document31.ownText();
        org.jsoup.nodes.Node node35 = document31.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document39 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList41 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document39, "hi!");
        org.jsoup.nodes.Element element43 = document39.tagName("hi!");
        org.jsoup.nodes.Element element45 = document39.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings46 = document39.outputSettings();
        org.jsoup.select.Elements elements48 = document39.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element50 = document39.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element52 = document39.createElement(" hi!");
        org.jsoup.select.Elements elements54 = document39.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean55 = indexLessThan28.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document39);
        org.jsoup.nodes.Document document56 = cleaner8.clean(document39);
        org.jsoup.nodes.Document document60 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList62 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document60, "hi!");
        org.jsoup.nodes.Element element63 = document60.empty();
        org.jsoup.nodes.Element element65 = document60.removeClass("hi!");
        org.jsoup.select.Elements elements68 = document60.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        org.jsoup.nodes.Element element69 = document60.empty();
        org.jsoup.nodes.Document document70 = document60.clone();
        org.jsoup.nodes.Document document71 = cleaner8.clean(document70);
        org.jsoup.select.Elements elements73 = document71.getElementsByAttribute("[[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]$=#text]");
        boolean boolean74 = tag1.equals((java.lang.Object) document71);
        org.junit.Assert.assertNotNull(tag1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(outputSettings46);
        org.junit.Assert.assertNotNull(elements48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(elements54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(document60);
        org.junit.Assert.assertNotNull(nodeList62);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(element65);
        org.junit.Assert.assertNotNull(elements68);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertNotNull(elements73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #455
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #13
27: invokestatic  #424
30: astore_1
31: aload_1
32: invokevirtual #425
35: istore_2
36: aload_1
37: invokevirtual #456
40: istore_3
41: aload_1
42: invokevirtual #429
45: istore        4
47: invokestatic  #8
50: astore        5
52: aload         5
54: iconst_1
55: invokevirtual #9
58: astore        6
60: new           #40
63: dup
64: aload         6
66: invokespecial #41
69: astore        7
71: new           #42
74: dup
75: ldc           #43
77: ldc           #32
79: invokespecial #44
82: astore        8
84: ldc           #12
86: invokestatic  #45
89: astore        9
91: ldc           #25
93: ldc           #12
95: invokestatic  #26
98: astore        10
100: ldc           #12
102: aload         10
104: ldc           #12
106: invokestatic  #27
109: astore        11
111: aload         10
113: ldc           #12
115: invokevirtual #28
118: astore        12
120: aload         10
122: ldc           #25
124: invokevirtual #29
127: astore        13
129: aload         10
131: invokevirtual #30
134: astore        14
136: aload         8
138: aload         9
140: aload         10
142: invokevirtual #46
145: istore        15
147: aload         7
149: aload         10
151: invokevirtual #47
154: astore        16
156: new           #48
159: dup
160: iconst_m1
161: invokespecial #49
164: astore        17
166: ldc           #50
168: ldc           #51
170: invokestatic  #52
173: astore        18
175: aload         18
177: invokevirtual #53
180: astore        19
182: aload         18
184: ldc           #54
186: ldc           #55
188: invokevirtual #56
191: astore        20
193: ldc           #25
195: ldc           #12
197: invokestatic  #26
200: astore        21
202: ldc           #12
204: aload         21
206: ldc           #12
208: invokestatic  #27
211: astore        22
213: aload         21
215: ldc           #12
217: invokevirtual #28
220: astore        23
222: aload         21
224: ldc           #25
226: invokevirtual #29
229: astore        24
231: aload         21
233: invokevirtual #30
236: astore        25
238: aload         21
240: ldc           #12
242: invokevirtual #57
245: astore        26
247: aload         21
249: ldc           #58
251: invokevirtual #59
254: astore        27
256: aload         21
258: ldc           #60
260: invokevirtual #61
263: astore        28
265: aload         21
267: ldc           #38
269: invokevirtual #62
272: astore        29
274: aload         17
276: aload         18
278: aload         21
280: invokevirtual #63
283: istore        30
285: aload         7
287: aload         21
289: invokevirtual #47
292: astore        31
294: ldc           #25
296: ldc           #12
298: invokestatic  #26
301: astore        32
303: ldc           #12
305: aload         32
307: ldc           #12
309: invokestatic  #27
312: astore        33
314: aload         32
316: invokevirtual #103
319: astore        34
321: aload         32
323: ldc           #12
325: invokevirtual #59
328: astore        35
330: aload         32
332: ldc           #10
334: ldc           #58
336: invokevirtual #153
339: astore        36
341: aload         32
343: invokevirtual #103
346: astore        37
348: aload         32
350: invokevirtual #154
353: astore        38
355: aload         7
357: aload         38
359: invokevirtual #47
362: astore        39
364: aload         39
366: ldc_w         #457
369: invokevirtual #458
372: astore        40
374: aload_1
375: aload         39
377: invokevirtual #428
380: istore        41
382: aload_1
383: invokestatic  #15
386: new           #16
389: dup
390: invokespecial #17
393: ldc           #18
395: invokevirtual #19
398: iload_2
399: invokevirtual #20
402: ldc           #21
404: invokevirtual #19
407: iconst_0
408: invokevirtual #20
411: ldc           #18
413: invokevirtual #19
416: invokevirtual #22
419: iload_2
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #23
431: new           #16
434: dup
435: invokespecial #17
438: ldc           #18
440: invokevirtual #19
443: iload_3
444: invokevirtual #20
447: ldc           #21
449: invokevirtual #19
452: iconst_1
453: invokevirtual #20
456: ldc           #18
458: invokevirtual #19
461: invokevirtual #22
464: iload_3
465: iconst_1
466: if_icmpne     473
469: iconst_1
470: goto          474
473: iconst_0
474: invokestatic  #23
477: new           #16
480: dup
481: invokespecial #17
484: ldc           #18
486: invokevirtual #19
489: iload         4
491: invokevirtual #20
494: ldc           #21
496: invokevirtual #19
499: iconst_0
500: invokevirtual #20
503: ldc           #18
505: invokevirtual #19
508: invokevirtual #22
511: iload         4
513: ifne          520
516: iconst_1
517: goto          521
520: iconst_0
521: invokestatic  #23
524: aload         5
526: invokestatic  #15
529: aload         6
531: invokestatic  #15
534: aload         9
536: invokestatic  #15
539: aload         10
541: invokestatic  #15
544: aload         11
546: invokestatic  #15
549: aload         12
551: invokestatic  #15
554: aload         13
556: invokestatic  #15
559: aload         14
561: invokestatic  #15
564: new           #16
567: dup
568: invokespecial #17
571: ldc           #18
573: invokevirtual #19
576: iload         15
578: invokevirtual #20
581: ldc           #21
583: invokevirtual #19
586: iconst_0
587: invokevirtual #20
590: ldc           #18
592: invokevirtual #19
595: invokevirtual #22
598: iload         15
600: ifne          607
603: iconst_1
604: goto          608
607: iconst_0
608: invokestatic  #23
611: aload         16
613: invokestatic  #15
616: aload         18
618: invokestatic  #15
621: new           #16
624: dup
625: invokespecial #17
628: ldc           #18
630: invokevirtual #19
633: aload         19
635: invokevirtual #19
638: ldc           #67
640: invokevirtual #19
643: invokevirtual #22
646: aload         19
648: ldc           #25
650: invokestatic  #68
653: aload         20
655: invokestatic  #15
658: aload         21
660: invokestatic  #15
663: aload         22
665: invokestatic  #15
668: aload         23
670: invokestatic  #15
673: aload         24
675: invokestatic  #15
678: aload         25
680: invokestatic  #15
683: aload         26
685: invokestatic  #15
688: aload         27
690: invokestatic  #15
693: aload         28
695: invokestatic  #15
698: aload         29
700: invokestatic  #15
703: new           #16
706: dup
707: invokespecial #17
710: ldc           #18
712: invokevirtual #19
715: iload         30
717: invokevirtual #20
720: ldc           #21
722: invokevirtual #19
725: iconst_0
726: invokevirtual #20
729: ldc           #18
731: invokevirtual #19
734: invokevirtual #22
737: iload         30
739: ifne          746
742: iconst_1
743: goto          747
746: iconst_0
747: invokestatic  #23
750: aload         31
752: invokestatic  #15
755: aload         32
757: invokestatic  #15
760: aload         33
762: invokestatic  #15
765: aload         34
767: invokestatic  #15
770: aload         35
772: invokestatic  #15
775: aload         36
777: invokestatic  #15
780: aload         37
782: invokestatic  #15
785: aload         38
787: invokestatic  #15
790: aload         39
792: invokestatic  #15
795: aload         40
797: invokestatic  #15
800: new           #16
803: dup
804: invokespecial #17
807: ldc           #18
809: invokevirtual #19
812: iload         41
814: invokevirtual #20
817: ldc           #21
819: invokevirtual #19
822: iconst_0
823: invokevirtual #20
826: ldc           #18
828: invokevirtual #19
831: invokevirtual #22
834: iload         41
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #23
847: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test099
Start line: 4517
End line: 4561
Method source code: 
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str4 = org.jsoup.Jsoup.clean(":lt(32)", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList12 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document10, "hi!");
        org.jsoup.nodes.Element element13 = document10.empty();
        org.jsoup.nodes.Element element15 = document10.removeClass("hi!");
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document19, "hi!");
        org.jsoup.nodes.Element element23 = document19.tagName("hi!");
        org.jsoup.nodes.Element element25 = document19.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = document19.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings26.prettyPrint(false);
        org.jsoup.nodes.Document document29 = document10.outputSettings(outputSettings28);
        java.lang.String str30 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist3, outputSettings28);
        java.nio.charset.Charset charset31 = outputSettings28.charset();
        boolean boolean32 = outputSettings28.prettyPrint();
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document.OutputSettings outputSettings34 = outputSettings28.charset("<html>\n <head></head>\n <body></body>\n</html><hi!>\n [^hi!]\n</hi!><html>\n <head></head>\n <body></body>\n</html><hi!>\n [^hi!]\n</hi!><head></head><hi!>\n [^hi!]\n</hi!><body></body>");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: <html>? <head></head>? <body></body>?</html><hi!>? [^hi!]?</hi!><html>? <head></head>? <body></body>?</html><hi!>? [^hi!]?</hi!><head></head><hi!>? [^hi!]?</hi!><body></body>");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":lt(32)" + "'", str4, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[:lt(32)]" + "'", str30, "[:lt(32)]");
        org.junit.Assert.assertNotNull(charset31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #459
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: aload         13
155: invokevirtual #460
158: astore        16
160: aload         13
162: invokevirtual #461
165: istore        17
167: aload         13
169: ldc_w         #462
172: invokevirtual #463
175: astore        18
177: ldc_w         #464
180: invokestatic  #35
183: goto          188
186: astore        18
188: aload_1
189: invokestatic  #15
192: new           #16
195: dup
196: invokespecial #17
199: ldc           #18
201: invokevirtual #19
204: aload_2
205: invokevirtual #19
208: ldc           #128
210: invokevirtual #19
213: invokevirtual #22
216: aload_2
217: ldc           #43
219: invokestatic  #68
222: new           #16
225: dup
226: invokespecial #17
229: ldc           #18
231: invokevirtual #19
234: iload_3
235: invokevirtual #20
238: ldc           #21
240: invokevirtual #19
243: iconst_0
244: invokevirtual #20
247: ldc           #18
249: invokevirtual #19
252: invokevirtual #22
255: iload_3
256: ifne          263
259: iconst_1
260: goto          264
263: iconst_0
264: invokestatic  #23
267: aload         4
269: invokestatic  #15
272: aload         5
274: invokestatic  #15
277: aload         6
279: invokestatic  #15
282: aload         7
284: invokestatic  #15
287: aload         8
289: invokestatic  #15
292: aload         9
294: invokestatic  #15
297: aload         10
299: invokestatic  #15
302: aload         11
304: invokestatic  #15
307: aload         12
309: invokestatic  #15
312: aload         13
314: invokestatic  #15
317: aload         14
319: invokestatic  #15
322: new           #16
325: dup
326: invokespecial #17
329: ldc           #18
331: invokevirtual #19
334: aload         15
336: invokevirtual #19
339: ldc           #184
341: invokevirtual #19
344: invokevirtual #22
347: aload         15
349: ldc           #58
351: invokestatic  #68
354: aload         16
356: invokestatic  #15
359: new           #16
362: dup
363: invokespecial #17
366: ldc           #18
368: invokevirtual #19
371: iload         17
373: invokevirtual #20
376: ldc           #21
378: invokevirtual #19
381: iconst_0
382: invokevirtual #20
385: ldc           #18
387: invokevirtual #19
390: invokevirtual #22
393: iload         17
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #23
406: return
Exception table:
from    to  target type
167   183   186   Class java/nio/charset/IllegalCharsetNameException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test100
Start line: 4564
End line: 4621
Method source code: 
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.jsoup.select.Evaluator.Tag tag1 = new org.jsoup.select.Evaluator.Tag("[^hi!]");
        java.lang.String str2 = tag1.toString();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        java.lang.String str13 = element12.toString();
        boolean boolean15 = element12.hasAttr("");
        element12.setBaseUri("[hi!$=   ]");
        org.jsoup.nodes.Element element19 = element12.html(":lt(1)");
        org.jsoup.safety.Whitelist whitelist20 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist22 = whitelist20.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner23 = new org.jsoup.safety.Cleaner(whitelist22);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining26 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document28 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        boolean boolean40 = attributeWithValueContaining26.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document32);
        org.jsoup.nodes.Document document41 = cleaner23.clean(document32);
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str44 = document43.toString();
        java.lang.String str45 = document43.baseUri();
        org.jsoup.nodes.Document document46 = cleaner23.clean(document43);
        org.jsoup.nodes.Document.QuirksMode quirksMode47 = document46.quirksMode();
        boolean boolean48 = tag1.matches(element19, (org.jsoup.nodes.Element) document46);
        org.jsoup.select.Elements elements51 = element19.getElementsByAttributeValueContaining("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body>\n  .&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;\n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[^hi!]" + "'", str2, "[^hi!]");
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str13, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str44, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertTrue("'" + quirksMode47 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode47.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(elements51);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #466
20: aastore
21: invokevirtual #7
24: pop
25: new           #360
28: dup
29: ldc           #50
31: invokespecial #361
34: astore_1
35: aload_1
36: invokevirtual #362
39: astore_2
40: ldc           #25
42: ldc           #12
44: invokestatic  #26
47: astore_3
48: ldc           #12
50: aload_3
51: ldc           #12
53: invokestatic  #27
56: astore        4
58: aload_3
59: ldc           #12
61: invokevirtual #28
64: astore        5
66: aload_3
67: ldc           #25
69: invokevirtual #29
72: astore        6
74: aload         6
76: invokevirtual #363
79: astore        7
81: aload         6
83: ldc           #25
85: invokevirtual #364
88: istore        8
90: aload         6
92: ldc           #65
94: invokevirtual #365
97: aload         6
99: ldc_w         #366
102: invokevirtual #367
105: astore        9
107: invokestatic  #8
110: astore        10
112: aload         10
114: iconst_1
115: invokevirtual #9
118: astore        11
120: new           #40
123: dup
124: aload         11
126: invokespecial #41
129: astore        12
131: new           #42
134: dup
135: ldc           #43
137: ldc           #32
139: invokespecial #44
142: astore        13
144: ldc           #12
146: invokestatic  #45
149: astore        14
151: ldc           #25
153: ldc           #12
155: invokestatic  #26
158: astore        15
160: ldc           #12
162: aload         15
164: ldc           #12
166: invokestatic  #27
169: astore        16
171: aload         15
173: ldc           #12
175: invokevirtual #28
178: astore        17
180: aload         15
182: ldc           #25
184: invokevirtual #29
187: astore        18
189: aload         15
191: invokevirtual #30
194: astore        19
196: aload         13
198: aload         14
200: aload         15
202: invokevirtual #46
205: istore        20
207: aload         12
209: aload         15
211: invokevirtual #47
214: astore        21
216: ldc           #10
218: invokestatic  #193
221: astore        22
223: aload         22
225: invokevirtual #72
228: astore        23
230: aload         22
232: invokevirtual #194
235: astore        24
237: aload         12
239: aload         22
241: invokevirtual #47
244: astore        25
246: aload         25
248: invokevirtual #222
251: astore        26
253: aload_1
254: aload         9
256: aload         25
258: invokevirtual #368
261: istore        27
263: aload         9
265: ldc           #10
267: ldc_w         #467
270: invokevirtual #468
273: astore        28
275: new           #16
278: dup
279: invokespecial #17
282: ldc           #18
284: invokevirtual #19
287: aload_2
288: invokevirtual #19
291: ldc           #112
293: invokevirtual #19
296: invokevirtual #22
299: aload_2
300: ldc           #50
302: invokestatic  #68
305: aload_3
306: invokestatic  #15
309: aload         4
311: invokestatic  #15
314: aload         5
316: invokestatic  #15
319: aload         6
321: invokestatic  #15
324: new           #16
327: dup
328: invokespecial #17
331: ldc           #18
333: invokevirtual #19
336: aload         7
338: invokevirtual #19
341: ldc           #78
343: invokevirtual #19
346: invokevirtual #22
349: aload         7
351: ldc           #10
353: invokestatic  #68
356: new           #16
359: dup
360: invokespecial #17
363: ldc           #18
365: invokevirtual #19
368: iload         8
370: invokevirtual #20
373: ldc           #21
375: invokevirtual #19
378: iconst_0
379: invokevirtual #20
382: ldc           #18
384: invokevirtual #19
387: invokevirtual #22
390: iload         8
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #23
403: aload         9
405: invokestatic  #15
408: aload         10
410: invokestatic  #15
413: aload         11
415: invokestatic  #15
418: aload         14
420: invokestatic  #15
423: aload         15
425: invokestatic  #15
428: aload         16
430: invokestatic  #15
433: aload         17
435: invokestatic  #15
438: aload         18
440: invokestatic  #15
443: aload         19
445: invokestatic  #15
448: new           #16
451: dup
452: invokespecial #17
455: ldc           #18
457: invokevirtual #19
460: iload         20
462: invokevirtual #20
465: ldc           #21
467: invokevirtual #19
470: iconst_0
471: invokevirtual #20
474: ldc           #18
476: invokevirtual #19
479: invokevirtual #22
482: iload         20
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #23
495: aload         21
497: invokestatic  #15
500: aload         22
502: invokestatic  #15
505: new           #16
508: dup
509: invokespecial #17
512: ldc           #18
514: invokevirtual #19
517: aload         23
519: invokevirtual #19
522: ldc           #197
524: invokevirtual #19
527: invokevirtual #22
530: aload         23
532: ldc           #151
534: invokestatic  #68
537: new           #16
540: dup
541: invokespecial #17
544: ldc           #18
546: invokevirtual #19
549: aload         24
551: invokevirtual #19
554: ldc           #67
556: invokevirtual #19
559: invokevirtual #22
562: aload         24
564: ldc           #25
566: invokestatic  #68
569: aload         25
571: invokestatic  #15
574: new           #16
577: dup
578: invokespecial #17
581: ldc           #18
583: invokevirtual #19
586: aload         26
588: invokevirtual #223
591: ldc           #21
593: invokevirtual #19
596: getstatic     #224
599: invokevirtual #223
602: ldc           #18
604: invokevirtual #19
607: invokevirtual #22
610: aload         26
612: getstatic     #224
615: invokevirtual #225
618: invokestatic  #23
621: new           #16
624: dup
625: invokespecial #17
628: ldc           #18
630: invokevirtual #19
633: iload         27
635: invokevirtual #20
638: ldc           #21
640: invokevirtual #19
643: iconst_0
644: invokevirtual #20
647: ldc           #18
649: invokevirtual #19
652: invokevirtual #22
655: iload         27
657: ifne          664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #23
668: aload         28
670: invokestatic  #15
673: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test101
Start line: 4624
End line: 4709
Method source code: 
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean21 = whitelist19.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist25 = whitelist19.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.tagName("hi!");
        org.jsoup.nodes.Node node35 = element34.parent();
        org.jsoup.select.Elements elements37 = element34.getElementsMatchingText("[[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]$=[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]]");
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList43 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document41, "hi!");
        org.jsoup.nodes.Element element45 = document41.tagName("hi!");
        org.jsoup.nodes.Element element47 = document41.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings48 = document41.outputSettings();
        org.jsoup.select.Elements elements50 = document41.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element52 = document41.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes53 = document41.attributes();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = attributes53.dataset();
        org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList60 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document58, "hi!");
        org.jsoup.nodes.Element element62 = document58.tagName("hi!");
        org.jsoup.nodes.Element element64 = document58.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings65 = document58.outputSettings();
        org.jsoup.select.Elements elements67 = document58.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element69 = document58.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes70 = document58.attributes();
        attributes53.addAll(attributes70);
        org.jsoup.nodes.Attribute attribute74 = new org.jsoup.nodes.Attribute(":lt(32)", "");
        attributes70.put(attribute74);
        org.jsoup.nodes.Document document77 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Element element79 = document77.appendElement("#document");
        org.jsoup.nodes.Element element80 = element79.lastElementSibling();
        org.jsoup.nodes.Element element81 = element80.lastElementSibling();
        boolean boolean82 = attribute74.equals((java.lang.Object) element81);
        attribute74.setKey("\n<!--[hi!$=   ]-->");
        boolean boolean85 = whitelist25.isSafeAttribute("<html> <head></head> <body> </body> </html>", element34, attribute74);
        org.jsoup.nodes.Attributes attributes87 = whitelist25.getEnforcedAttributes("[    *=:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(elements37);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(outputSettings48);
        org.junit.Assert.assertNotNull(elements50);
        org.junit.Assert.assertNull(element52);
        org.junit.Assert.assertNotNull(attributes53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertNotNull(nodeList60);
        org.junit.Assert.assertNotNull(element62);
        org.junit.Assert.assertNotNull(element64);
        org.junit.Assert.assertNotNull(outputSettings65);
        org.junit.Assert.assertNotNull(elements67);
        org.junit.Assert.assertNull(element69);
        org.junit.Assert.assertNotNull(attributes70);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(element80);
        org.junit.Assert.assertNotNull(element81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(attributes87);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #469
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: ldc           #12
115: invokevirtual #83
118: istore        9
120: aload         8
122: ldc           #86
124: ldc           #239
126: ldc           #240
128: invokevirtual #11
131: astore        10
133: ldc           #25
135: ldc           #12
137: invokestatic  #26
140: astore        11
142: ldc           #12
144: aload         11
146: ldc           #12
148: invokestatic  #27
151: astore        12
153: aload         11
155: ldc           #12
157: invokevirtual #28
160: astore        13
162: aload         13
164: invokevirtual #252
167: astore        14
169: aload         13
171: ldc           #195
173: invokevirtual #470
176: astore        15
178: ldc           #25
180: ldc           #12
182: invokestatic  #26
185: astore        16
187: ldc           #12
189: aload         16
191: ldc           #12
193: invokestatic  #27
196: astore        17
198: aload         16
200: ldc           #12
202: invokevirtual #28
205: astore        18
207: aload         16
209: ldc           #25
211: invokevirtual #29
214: astore        19
216: aload         16
218: invokevirtual #30
221: astore        20
223: aload         16
225: iconst_m1
226: invokevirtual #162
229: astore        21
231: aload         16
233: ldc           #10
235: invokevirtual #163
238: astore        22
240: aload         16
242: invokevirtual #164
245: astore        23
247: aload         23
249: invokevirtual #471
252: astore        24
254: ldc           #25
256: ldc           #12
258: invokestatic  #26
261: astore        25
263: ldc           #12
265: aload         25
267: ldc           #12
269: invokestatic  #27
272: astore        26
274: aload         25
276: ldc           #12
278: invokevirtual #28
281: astore        27
283: aload         25
285: ldc           #25
287: invokevirtual #29
290: astore        28
292: aload         25
294: invokevirtual #30
297: astore        29
299: aload         25
301: iconst_m1
302: invokevirtual #162
305: astore        30
307: aload         25
309: ldc           #10
311: invokevirtual #163
314: astore        31
316: aload         25
318: invokevirtual #164
321: astore        32
323: aload         23
325: aload         32
327: invokevirtual #472
330: new           #263
333: dup
334: ldc           #43
336: ldc           #25
338: invokespecial #264
341: astore        33
343: aload         32
345: aload         33
347: invokevirtual #473
350: ldc           #12
352: invokestatic  #45
355: astore        34
357: aload         34
359: ldc           #13
361: invokevirtual #474
364: astore        35
366: aload         35
368: invokevirtual #475
371: astore        36
373: aload         36
375: invokevirtual #475
378: astore        37
380: aload         33
382: aload         37
384: invokevirtual #476
387: istore        38
389: aload         33
391: ldc_w         #477
394: invokevirtual #266
397: aload         10
399: ldc           #170
401: aload         13
403: aload         33
405: invokevirtual #169
408: istore        39
410: aload         10
412: ldc_w         #315
415: invokevirtual #150
418: astore        40
420: aload_1
421: invokestatic  #15
424: aload_2
425: invokestatic  #15
428: new           #16
431: dup
432: invokespecial #17
435: ldc           #18
437: invokevirtual #19
440: aload_3
441: invokevirtual #19
444: ldc           #85
446: invokevirtual #19
449: invokevirtual #22
452: aload_3
453: ldc           #86
455: invokestatic  #68
458: new           #16
461: dup
462: invokespecial #17
465: ldc           #18
467: invokevirtual #19
470: iload         4
472: invokevirtual #20
475: ldc           #21
477: invokevirtual #19
480: iconst_0
481: invokevirtual #20
484: ldc           #18
486: invokevirtual #19
489: invokevirtual #22
492: iload         4
494: ifne          501
497: iconst_1
498: goto          502
501: iconst_0
502: invokestatic  #23
505: aload         5
507: invokestatic  #15
510: new           #16
513: dup
514: invokespecial #17
517: ldc           #18
519: invokevirtual #19
522: iload         6
524: invokevirtual #20
527: ldc           #21
529: invokevirtual #19
532: iconst_1
533: invokevirtual #20
536: ldc           #18
538: invokevirtual #19
541: invokevirtual #22
544: iload         6
546: iconst_1
547: if_icmpne     554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #23
558: new           #16
561: dup
562: invokespecial #17
565: ldc           #18
567: invokevirtual #19
570: iload         7
572: invokevirtual #20
575: ldc           #21
577: invokevirtual #19
580: iconst_0
581: invokevirtual #20
584: ldc           #18
586: invokevirtual #19
589: invokevirtual #22
592: iload         7
594: ifne          601
597: iconst_1
598: goto          602
601: iconst_0
602: invokestatic  #23
605: aload         8
607: invokestatic  #15
610: new           #16
613: dup
614: invokespecial #17
617: ldc           #18
619: invokevirtual #19
622: iload         9
624: invokevirtual #20
627: ldc           #21
629: invokevirtual #19
632: iconst_0
633: invokevirtual #20
636: ldc           #18
638: invokevirtual #19
641: invokevirtual #22
644: iload         9
646: ifne          653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #23
657: aload         10
659: invokestatic  #15
662: aload         11
664: invokestatic  #15
667: aload         12
669: invokestatic  #15
672: aload         13
674: invokestatic  #15
677: aload         14
679: invokestatic  #79
682: aload         15
684: invokestatic  #15
687: aload         16
689: invokestatic  #15
692: aload         17
694: invokestatic  #15
697: aload         18
699: invokestatic  #15
702: aload         19
704: invokestatic  #15
707: aload         20
709: invokestatic  #15
712: aload         21
714: invokestatic  #15
717: aload         22
719: invokestatic  #79
722: aload         23
724: invokestatic  #15
727: aload         24
729: invokestatic  #15
732: aload         25
734: invokestatic  #15
737: aload         26
739: invokestatic  #15
742: aload         27
744: invokestatic  #15
747: aload         28
749: invokestatic  #15
752: aload         29
754: invokestatic  #15
757: aload         30
759: invokestatic  #15
762: aload         31
764: invokestatic  #79
767: aload         32
769: invokestatic  #15
772: aload         34
774: invokestatic  #15
777: aload         35
779: invokestatic  #15
782: aload         36
784: invokestatic  #15
787: aload         37
789: invokestatic  #15
792: new           #16
795: dup
796: invokespecial #17
799: ldc           #18
801: invokevirtual #19
804: iload         38
806: invokevirtual #20
809: ldc           #21
811: invokevirtual #19
814: iconst_0
815: invokevirtual #20
818: ldc           #18
820: invokevirtual #19
823: invokevirtual #22
826: iload         38
828: ifne          835
831: iconst_1
832: goto          836
835: iconst_0
836: invokestatic  #23
839: new           #16
842: dup
843: invokespecial #17
846: ldc           #18
848: invokevirtual #19
851: iload         39
853: invokevirtual #20
856: ldc           #21
858: invokevirtual #19
861: iconst_0
862: invokevirtual #20
865: ldc           #18
867: invokevirtual #19
870: invokevirtual #22
873: iload         39
875: ifne          882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #23
886: aload         40
888: invokestatic  #15
891: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test102
Start line: 4712
End line: 4725
Method source code: 
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes7 = whitelist5.getEnforcedAttributes("#text");
        java.lang.String str8 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist5);
        java.lang.String str9 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist5);
        boolean boolean10 = org.jsoup.Jsoup.isValid("[^    ]", whitelist5);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(attributes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[    ^=hi!]" + "'", str9, "[    ^=hi!]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #478
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: ldc_w         #479
58: aload_1
59: invokestatic  #14
62: istore        5
64: aload_1
65: invokestatic  #15
68: aload_2
69: invokestatic  #15
72: new           #16
75: dup
76: invokespecial #17
79: ldc           #18
81: invokevirtual #19
84: aload_3
85: invokevirtual #19
88: ldc           #67
90: invokevirtual #19
93: invokevirtual #22
96: aload_3
97: ldc           #25
99: invokestatic  #68
102: new           #16
105: dup
106: invokespecial #17
109: ldc           #18
111: invokevirtual #19
114: aload         4
116: invokevirtual #19
119: ldc           #172
121: invokevirtual #19
124: invokevirtual #22
127: aload         4
129: ldc           #173
131: invokestatic  #68
134: new           #16
137: dup
138: invokespecial #17
141: ldc           #18
143: invokevirtual #19
146: iload         5
148: invokevirtual #20
151: ldc           #21
153: invokevirtual #19
156: iconst_1
157: invokevirtual #20
160: ldc           #18
162: invokevirtual #19
165: invokevirtual #22
168: iload         5
170: iconst_1
171: if_icmpne     178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #23
182: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test103
Start line: 4728
End line: 4791
Method source code: 
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element6 = document3.empty();
        org.jsoup.nodes.Element element8 = document3.removeClass("hi!");
        java.lang.String str9 = document3.id();
        org.jsoup.nodes.Document document13 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList15 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document13, "hi!");
        org.jsoup.nodes.Element element16 = document13.empty();
        org.jsoup.nodes.Element element18 = document13.removeClass("hi!");
        java.lang.String str19 = document13.nodeName();
        org.jsoup.nodes.Document.QuirksMode quirksMode20 = document13.quirksMode();
        org.jsoup.nodes.Document document21 = document3.quirksMode(quirksMode20);
        org.jsoup.safety.Whitelist whitelist22 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist24 = whitelist22.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner25 = new org.jsoup.safety.Cleaner(whitelist24);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining28 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document30 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element38 = document34.tagName("hi!");
        org.jsoup.nodes.Element element40 = document34.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = document34.outputSettings();
        boolean boolean42 = attributeWithValueContaining28.matches((org.jsoup.nodes.Element) document30, (org.jsoup.nodes.Element) document34);
        org.jsoup.nodes.Document document43 = cleaner25.clean(document34);
        org.jsoup.nodes.Document document45 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str46 = document45.toString();
        java.lang.String str47 = document45.baseUri();
        org.jsoup.nodes.Document document48 = cleaner25.clean(document45);
        org.jsoup.nodes.Document.QuirksMode quirksMode49 = document48.quirksMode();
        org.jsoup.nodes.Document document50 = document3.quirksMode(quirksMode49);
        org.jsoup.nodes.Document document51 = document3.clone();
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#document" + "'", str19, "#document");
        org.junit.Assert.assertTrue("'" + quirksMode20 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode20.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str46, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertTrue("'" + quirksMode49 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode49.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(document51);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #480
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: invokevirtual #103
46: astore_3
47: aload_1
48: ldc           #12
50: invokevirtual #59
53: astore        4
55: aload_1
56: invokevirtual #73
59: astore        5
61: ldc           #25
63: ldc           #12
65: invokestatic  #26
68: astore        6
70: ldc           #12
72: aload         6
74: ldc           #12
76: invokestatic  #27
79: astore        7
81: aload         6
83: invokevirtual #103
86: astore        8
88: aload         6
90: ldc           #12
92: invokevirtual #59
95: astore        9
97: aload         6
99: invokevirtual #220
102: astore        10
104: aload         6
106: invokevirtual #222
109: astore        11
111: aload_1
112: aload         11
114: invokevirtual #481
117: astore        12
119: invokestatic  #8
122: astore        13
124: aload         13
126: iconst_1
127: invokevirtual #9
130: astore        14
132: new           #40
135: dup
136: aload         14
138: invokespecial #41
141: astore        15
143: new           #42
146: dup
147: ldc           #43
149: ldc           #32
151: invokespecial #44
154: astore        16
156: ldc           #12
158: invokestatic  #45
161: astore        17
163: ldc           #25
165: ldc           #12
167: invokestatic  #26
170: astore        18
172: ldc           #12
174: aload         18
176: ldc           #12
178: invokestatic  #27
181: astore        19
183: aload         18
185: ldc           #12
187: invokevirtual #28
190: astore        20
192: aload         18
194: ldc           #25
196: invokevirtual #29
199: astore        21
201: aload         18
203: invokevirtual #30
206: astore        22
208: aload         16
210: aload         17
212: aload         18
214: invokevirtual #46
217: istore        23
219: aload         15
221: aload         18
223: invokevirtual #47
226: astore        24
228: ldc           #10
230: invokestatic  #193
233: astore        25
235: aload         25
237: invokevirtual #72
240: astore        26
242: aload         25
244: invokevirtual #194
247: astore        27
249: aload         15
251: aload         25
253: invokevirtual #47
256: astore        28
258: aload         28
260: invokevirtual #222
263: astore        29
265: aload_1
266: aload         29
268: invokevirtual #481
271: astore        30
273: aload_1
274: invokevirtual #154
277: astore        31
279: aload_1
280: invokestatic  #15
283: aload_2
284: invokestatic  #15
287: aload_3
288: invokestatic  #15
291: aload         4
293: invokestatic  #15
296: new           #16
299: dup
300: invokespecial #17
303: ldc           #18
305: invokevirtual #19
308: aload         5
310: invokevirtual #19
313: ldc           #67
315: invokevirtual #19
318: invokevirtual #22
321: aload         5
323: ldc           #25
325: invokestatic  #68
328: aload         6
330: invokestatic  #15
333: aload         7
335: invokestatic  #15
338: aload         8
340: invokestatic  #15
343: aload         9
345: invokestatic  #15
348: new           #16
351: dup
352: invokespecial #17
355: ldc           #18
357: invokevirtual #19
360: aload         10
362: invokevirtual #19
365: ldc           #107
367: invokevirtual #19
370: invokevirtual #22
373: aload         10
375: ldc           #13
377: invokestatic  #68
380: new           #16
383: dup
384: invokespecial #17
387: ldc           #18
389: invokevirtual #19
392: aload         11
394: invokevirtual #223
397: ldc           #21
399: invokevirtual #19
402: getstatic     #224
405: invokevirtual #223
408: ldc           #18
410: invokevirtual #19
413: invokevirtual #22
416: aload         11
418: getstatic     #224
421: invokevirtual #225
424: invokestatic  #23
427: aload         12
429: invokestatic  #15
432: aload         13
434: invokestatic  #15
437: aload         14
439: invokestatic  #15
442: aload         17
444: invokestatic  #15
447: aload         18
449: invokestatic  #15
452: aload         19
454: invokestatic  #15
457: aload         20
459: invokestatic  #15
462: aload         21
464: invokestatic  #15
467: aload         22
469: invokestatic  #15
472: new           #16
475: dup
476: invokespecial #17
479: ldc           #18
481: invokevirtual #19
484: iload         23
486: invokevirtual #20
489: ldc           #21
491: invokevirtual #19
494: iconst_0
495: invokevirtual #20
498: ldc           #18
500: invokevirtual #19
503: invokevirtual #22
506: iload         23
508: ifne          515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #23
519: aload         24
521: invokestatic  #15
524: aload         25
526: invokestatic  #15
529: new           #16
532: dup
533: invokespecial #17
536: ldc           #18
538: invokevirtual #19
541: aload         26
543: invokevirtual #19
546: ldc           #197
548: invokevirtual #19
551: invokevirtual #22
554: aload         26
556: ldc           #151
558: invokestatic  #68
561: new           #16
564: dup
565: invokespecial #17
568: ldc           #18
570: invokevirtual #19
573: aload         27
575: invokevirtual #19
578: ldc           #67
580: invokevirtual #19
583: invokevirtual #22
586: aload         27
588: ldc           #25
590: invokestatic  #68
593: aload         28
595: invokestatic  #15
598: new           #16
601: dup
602: invokespecial #17
605: ldc           #18
607: invokevirtual #19
610: aload         29
612: invokevirtual #223
615: ldc           #21
617: invokevirtual #19
620: getstatic     #224
623: invokevirtual #223
626: ldc           #18
628: invokevirtual #19
631: invokevirtual #22
634: aload         29
636: getstatic     #224
639: invokevirtual #225
642: invokestatic  #23
645: aload         30
647: invokestatic  #15
650: aload         31
652: invokestatic  #15
655: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test104
Start line: 4794
End line: 4832
Method source code: 
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.jsoup.select.Evaluator.Tag tag1 = new org.jsoup.select.Evaluator.Tag("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner5 = new org.jsoup.safety.Cleaner(whitelist4);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining8 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document10 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document14 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList16 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document14, "hi!");
        org.jsoup.nodes.Element element18 = document14.tagName("hi!");
        org.jsoup.nodes.Element element20 = document14.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = document14.outputSettings();
        boolean boolean22 = attributeWithValueContaining8.matches((org.jsoup.nodes.Element) document10, (org.jsoup.nodes.Element) document14);
        org.jsoup.nodes.Document document23 = cleaner5.clean(document14);
        org.jsoup.nodes.Element element25 = document23.html("#comment");
        org.jsoup.nodes.Document document26 = document23.normalise();
        org.jsoup.nodes.Document document29 = org.jsoup.parser.Parser.parseBodyFragment("hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Element element31 = document29.text("");
        org.jsoup.nodes.Element element33 = document29.child((int) (short) 0);
        boolean boolean34 = tag1.matches((org.jsoup.nodes.Element) document26, element33);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(document14);
        org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(outputSettings21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #482
20: aastore
21: invokevirtual #7
24: pop
25: new           #360
28: dup
29: ldc           #10
31: invokespecial #361
34: astore_1
35: invokestatic  #8
38: astore_2
39: aload_2
40: iconst_1
41: invokevirtual #9
44: astore_3
45: new           #40
48: dup
49: aload_3
50: invokespecial #41
53: astore        4
55: new           #42
58: dup
59: ldc           #43
61: ldc           #32
63: invokespecial #44
66: astore        5
68: ldc           #12
70: invokestatic  #45
73: astore        6
75: ldc           #25
77: ldc           #12
79: invokestatic  #26
82: astore        7
84: ldc           #12
86: aload         7
88: ldc           #12
90: invokestatic  #27
93: astore        8
95: aload         7
97: ldc           #12
99: invokevirtual #28
102: astore        9
104: aload         7
106: ldc           #25
108: invokevirtual #29
111: astore        10
113: aload         7
115: invokevirtual #30
118: astore        11
120: aload         5
122: aload         6
124: aload         7
126: invokevirtual #46
129: istore        12
131: aload         4
133: aload         7
135: invokevirtual #47
138: astore        13
140: aload         13
142: ldc           #114
144: invokevirtual #115
147: astore        14
149: aload         13
151: invokevirtual #102
154: astore        15
156: ldc           #12
158: ldc           #32
160: invokestatic  #52
163: astore        16
165: aload         16
167: ldc           #25
169: invokevirtual #64
172: astore        17
174: aload         16
176: iconst_0
177: invokevirtual #483
180: astore        18
182: aload_1
183: aload         15
185: aload         18
187: invokevirtual #368
190: istore        19
192: aload_2
193: invokestatic  #15
196: aload_3
197: invokestatic  #15
200: aload         6
202: invokestatic  #15
205: aload         7
207: invokestatic  #15
210: aload         8
212: invokestatic  #15
215: aload         9
217: invokestatic  #15
220: aload         10
222: invokestatic  #15
225: aload         11
227: invokestatic  #15
230: new           #16
233: dup
234: invokespecial #17
237: ldc           #18
239: invokevirtual #19
242: iload         12
244: invokevirtual #20
247: ldc           #21
249: invokevirtual #19
252: iconst_0
253: invokevirtual #20
256: ldc           #18
258: invokevirtual #19
261: invokevirtual #22
264: iload         12
266: ifne          273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #23
277: aload         13
279: invokestatic  #15
282: aload         14
284: invokestatic  #15
287: aload         15
289: invokestatic  #15
292: aload         16
294: invokestatic  #15
297: aload         17
299: invokestatic  #15
302: aload         18
304: invokestatic  #15
307: new           #16
310: dup
311: invokespecial #17
314: ldc           #18
316: invokevirtual #19
319: iload         19
321: invokevirtual #20
324: ldc           #21
326: invokevirtual #19
329: iconst_0
330: invokevirtual #20
333: ldc           #18
335: invokevirtual #19
338: invokevirtual #22
341: iload         19
343: ifne          350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #23
354: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test105
Start line: 4835
End line: 4916
Method source code: 
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining2 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        boolean boolean16 = attributeWithValueContaining2.matches((org.jsoup.nodes.Element) document4, (org.jsoup.nodes.Element) document8);
        org.jsoup.nodes.Element element18 = document8.toggleClass("#doctype");
        org.jsoup.nodes.Element element19 = document8.head();
        org.jsoup.select.Elements elements21 = document8.getElementsByAttributeStarting(":gt(100)");
        int int22 = document8.siblingIndex();
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner26 = new org.jsoup.safety.Cleaner(whitelist25);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining29 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document31 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = document35.outputSettings();
        boolean boolean43 = attributeWithValueContaining29.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document35);
        org.jsoup.nodes.Document document44 = cleaner26.clean(document35);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan46 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document49 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str50 = document49.ownText();
        org.jsoup.nodes.Node node53 = document49.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element68 = document57.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element70 = document57.createElement(" hi!");
        org.jsoup.select.Elements elements72 = document57.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean73 = indexLessThan46.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document74 = cleaner26.clean(document57);
        boolean boolean75 = document8.equals((java.lang.Object) document74);
        org.jsoup.select.Elements elements78 = document8.getElementsByAttributeValueMatching("#*", "<html>\n <head></head>\n <body></body>\n</html>\n<[<!--[hi!$=<html> <head></head> <body></body> </html>]-->!=hi!]></[<!--[hi!$=<html> <head></head> <body></body> </html>]-->!=hi!]>");
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(elements21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(elements72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(document74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(elements78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #484
20: aastore
21: invokevirtual #7
24: pop
25: new           #42
28: dup
29: ldc           #43
31: ldc           #32
33: invokespecial #44
36: astore_1
37: ldc           #12
39: invokestatic  #45
42: astore_2
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore_3
51: ldc           #12
53: aload_3
54: ldc           #12
56: invokestatic  #27
59: astore        4
61: aload_3
62: ldc           #12
64: invokevirtual #28
67: astore        5
69: aload_3
70: ldc           #25
72: invokevirtual #29
75: astore        6
77: aload_3
78: invokevirtual #30
81: astore        7
83: aload_1
84: aload_2
85: aload_3
86: invokevirtual #46
89: istore        8
91: aload_3
92: ldc           #187
94: invokevirtual #199
97: astore        9
99: aload_3
100: invokevirtual #200
103: astore        10
105: aload_3
106: ldc           #92
108: invokevirtual #140
111: astore        11
113: aload_3
114: invokevirtual #201
117: istore        12
119: invokestatic  #8
122: astore        13
124: aload         13
126: iconst_1
127: invokevirtual #9
130: astore        14
132: new           #40
135: dup
136: aload         14
138: invokespecial #41
141: astore        15
143: new           #42
146: dup
147: ldc           #43
149: ldc           #32
151: invokespecial #44
154: astore        16
156: ldc           #12
158: invokestatic  #45
161: astore        17
163: ldc           #25
165: ldc           #12
167: invokestatic  #26
170: astore        18
172: ldc           #12
174: aload         18
176: ldc           #12
178: invokestatic  #27
181: astore        19
183: aload         18
185: ldc           #12
187: invokevirtual #28
190: astore        20
192: aload         18
194: ldc           #25
196: invokevirtual #29
199: astore        21
201: aload         18
203: invokevirtual #30
206: astore        22
208: aload         16
210: aload         17
212: aload         18
214: invokevirtual #46
217: istore        23
219: aload         15
221: aload         18
223: invokevirtual #47
226: astore        24
228: new           #48
231: dup
232: iconst_m1
233: invokespecial #49
236: astore        25
238: ldc           #50
240: ldc           #51
242: invokestatic  #52
245: astore        26
247: aload         26
249: invokevirtual #53
252: astore        27
254: aload         26
256: ldc           #54
258: ldc           #55
260: invokevirtual #56
263: astore        28
265: ldc           #25
267: ldc           #12
269: invokestatic  #26
272: astore        29
274: ldc           #12
276: aload         29
278: ldc           #12
280: invokestatic  #27
283: astore        30
285: aload         29
287: ldc           #12
289: invokevirtual #28
292: astore        31
294: aload         29
296: ldc           #25
298: invokevirtual #29
301: astore        32
303: aload         29
305: invokevirtual #30
308: astore        33
310: aload         29
312: ldc           #12
314: invokevirtual #57
317: astore        34
319: aload         29
321: ldc           #58
323: invokevirtual #59
326: astore        35
328: aload         29
330: ldc           #60
332: invokevirtual #61
335: astore        36
337: aload         29
339: ldc           #38
341: invokevirtual #62
344: astore        37
346: aload         25
348: aload         26
350: aload         29
352: invokevirtual #63
355: istore        38
357: aload         15
359: aload         29
361: invokevirtual #47
364: astore        39
366: aload_3
367: aload         39
369: invokevirtual #202
372: istore        40
374: aload_3
375: ldc_w         #485
378: ldc_w         #486
381: invokevirtual #487
384: astore        41
386: aload_2
387: invokestatic  #15
390: aload_3
391: invokestatic  #15
394: aload         4
396: invokestatic  #15
399: aload         5
401: invokestatic  #15
404: aload         6
406: invokestatic  #15
409: aload         7
411: invokestatic  #15
414: new           #16
417: dup
418: invokespecial #17
421: ldc           #18
423: invokevirtual #19
426: iload         8
428: invokevirtual #20
431: ldc           #21
433: invokevirtual #19
436: iconst_0
437: invokevirtual #20
440: ldc           #18
442: invokevirtual #19
445: invokevirtual #22
448: iload         8
450: ifne          457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #23
461: aload         9
463: invokestatic  #15
466: aload         10
468: invokestatic  #15
471: aload         11
473: invokestatic  #15
476: new           #16
479: dup
480: invokespecial #17
483: ldc           #18
485: invokevirtual #19
488: iload         12
490: invokevirtual #134
493: ldc           #21
495: invokevirtual #19
498: iconst_0
499: invokevirtual #134
502: ldc           #18
504: invokevirtual #19
507: invokevirtual #22
510: iload         12
512: ifne          519
515: iconst_1
516: goto          520
519: iconst_0
520: invokestatic  #23
523: aload         13
525: invokestatic  #15
528: aload         14
530: invokestatic  #15
533: aload         17
535: invokestatic  #15
538: aload         18
540: invokestatic  #15
543: aload         19
545: invokestatic  #15
548: aload         20
550: invokestatic  #15
553: aload         21
555: invokestatic  #15
558: aload         22
560: invokestatic  #15
563: new           #16
566: dup
567: invokespecial #17
570: ldc           #18
572: invokevirtual #19
575: iload         23
577: invokevirtual #20
580: ldc           #21
582: invokevirtual #19
585: iconst_0
586: invokevirtual #20
589: ldc           #18
591: invokevirtual #19
594: invokevirtual #22
597: iload         23
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #23
610: aload         24
612: invokestatic  #15
615: aload         26
617: invokestatic  #15
620: new           #16
623: dup
624: invokespecial #17
627: ldc           #18
629: invokevirtual #19
632: aload         27
634: invokevirtual #19
637: ldc           #67
639: invokevirtual #19
642: invokevirtual #22
645: aload         27
647: ldc           #25
649: invokestatic  #68
652: aload         28
654: invokestatic  #15
657: aload         29
659: invokestatic  #15
662: aload         30
664: invokestatic  #15
667: aload         31
669: invokestatic  #15
672: aload         32
674: invokestatic  #15
677: aload         33
679: invokestatic  #15
682: aload         34
684: invokestatic  #15
687: aload         35
689: invokestatic  #15
692: aload         36
694: invokestatic  #15
697: aload         37
699: invokestatic  #15
702: new           #16
705: dup
706: invokespecial #17
709: ldc           #18
711: invokevirtual #19
714: iload         38
716: invokevirtual #20
719: ldc           #21
721: invokevirtual #19
724: iconst_0
725: invokevirtual #20
728: ldc           #18
730: invokevirtual #19
733: invokevirtual #22
736: iload         38
738: ifne          745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #23
749: aload         39
751: invokestatic  #15
754: new           #16
757: dup
758: invokespecial #17
761: ldc           #18
763: invokevirtual #19
766: iload         40
768: invokevirtual #20
771: ldc           #21
773: invokevirtual #19
776: iconst_0
777: invokevirtual #20
780: ldc           #18
782: invokevirtual #19
785: invokevirtual #22
788: iload         40
790: ifne          797
793: iconst_1
794: goto          798
797: iconst_0
798: invokestatic  #23
801: aload         41
803: invokestatic  #15
806: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test106
Start line: 4919
End line: 5000
Method source code: 
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist11 = whitelist1.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str12 = org.jsoup.Jsoup.clean("hi!", whitelist1);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist16 = whitelist14.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist18 = whitelist16.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist22 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str23 = org.jsoup.Jsoup.clean(":lt(32)", whitelist22);
        org.jsoup.safety.Whitelist whitelist27 = whitelist22.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray34 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist35 = whitelist22.addTags(strArray34);
        org.jsoup.safety.Whitelist whitelist36 = whitelist18.addProtocols(":matchesOwn(null", "hi!", strArray34);
        java.lang.String[] strArray45 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean46 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray45);
        org.jsoup.safety.Whitelist whitelist47 = whitelist36.addProtocols("\n<!--hi!-->", "#document", strArray45);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray45);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray45);
        org.jsoup.safety.Whitelist whitelist50 = whitelist1.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray45);
        org.jsoup.select.Evaluator.Class class53 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element68 = document57.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes69 = document57.attributes();
        org.jsoup.nodes.Element element71 = document57.prepend("[^hi!]");
        org.jsoup.nodes.Document document75 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList77 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document75, "hi!");
        org.jsoup.nodes.Element element79 = document75.tagName("hi!");
        org.jsoup.nodes.Element element81 = document75.append("");
        org.jsoup.nodes.Element element84 = document75.attr("#document", "#document");
        org.jsoup.nodes.Element element85 = document75.body();
        boolean boolean86 = class53.matches((org.jsoup.nodes.Element) document57, (org.jsoup.nodes.Element) document75);
        org.jsoup.nodes.Node node87 = document75.clone();
        org.jsoup.nodes.Element element89 = document75.text(".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attribute attribute92 = new org.jsoup.nodes.Attribute("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "<html>\n <head></head>\n <body>\n </body>\n</html>");
        boolean boolean93 = whitelist1.isSafeAttribute("#document", (org.jsoup.nodes.Element) document75, attribute92);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":lt(32)" + "'", str23, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNull(element68);
        org.junit.Assert.assertNotNull(attributes69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(document75);
        org.junit.Assert.assertNotNull(nodeList77);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(element81);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertNotNull(element85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertNotNull(element89);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #488
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: ldc           #12
60: aload_1
61: invokestatic  #81
64: astore        5
66: invokestatic  #8
69: astore        6
71: aload         6
73: iconst_1
74: invokevirtual #9
77: astore        7
79: aload         7
81: iconst_0
82: invokevirtual #9
85: astore        8
87: invokestatic  #118
90: astore        9
92: ldc           #43
94: aload         9
96: invokestatic  #81
99: astore        10
101: aload         9
103: ldc           #43
105: ldc           #12
107: ldc           #32
109: invokevirtual #11
112: astore        11
114: bipush        6
116: anewarray     #119
119: dup
120: iconst_0
121: ldc           #109
123: aastore
124: dup
125: iconst_1
126: ldc           #10
128: aastore
129: dup
130: iconst_2
131: ldc           #13
133: aastore
134: dup
135: iconst_3
136: ldc           #50
138: aastore
139: dup
140: iconst_4
141: ldc           #12
143: aastore
144: dup
145: iconst_5
146: ldc           #120
148: aastore
149: astore        12
151: aload         9
153: aload         12
155: invokevirtual #121
158: astore        13
160: aload         8
162: ldc           #38
164: ldc           #12
166: aload         12
168: invokevirtual #122
171: astore        14
173: iconst_5
174: anewarray     #119
177: dup
178: iconst_0
179: ldc           #13
181: aastore
182: dup
183: iconst_1
184: ldc           #32
186: aastore
187: dup
188: iconst_2
189: ldc           #10
191: aastore
192: dup
193: iconst_3
194: ldc           #43
196: aastore
197: dup
198: iconst_4
199: ldc           #58
201: aastore
202: astore        15
204: ldc           #10
206: aload         15
208: invokestatic  #123
211: istore        16
213: aload         14
215: ldc           #84
217: ldc           #13
219: aload         15
221: invokevirtual #122
224: astore        17
226: aload         15
228: checkcast     #124
231: invokestatic  #125
234: aload         15
236: checkcast     #124
239: invokestatic  #125
242: aload_1
243: ldc           #249
245: aload         15
247: invokevirtual #127
250: astore        18
252: new           #160
255: dup
256: ldc           #10
258: invokespecial #161
261: astore        19
263: ldc           #25
265: ldc           #12
267: invokestatic  #26
270: astore        20
272: ldc           #12
274: aload         20
276: ldc           #12
278: invokestatic  #27
281: astore        21
283: aload         20
285: ldc           #12
287: invokevirtual #28
290: astore        22
292: aload         20
294: ldc           #25
296: invokevirtual #29
299: astore        23
301: aload         20
303: invokevirtual #30
306: astore        24
308: aload         20
310: iconst_m1
311: invokevirtual #162
314: astore        25
316: aload         20
318: ldc           #10
320: invokevirtual #163
323: astore        26
325: aload         20
327: invokevirtual #164
330: astore        27
332: aload         20
334: ldc           #50
336: invokevirtual #165
339: astore        28
341: ldc           #25
343: ldc           #12
345: invokestatic  #26
348: astore        29
350: ldc           #12
352: aload         29
354: ldc           #12
356: invokestatic  #27
359: astore        30
361: aload         29
363: ldc           #12
365: invokevirtual #28
368: astore        31
370: aload         29
372: ldc           #25
374: invokevirtual #29
377: astore        32
379: aload         29
381: ldc           #13
383: ldc           #13
385: invokevirtual #56
388: astore        33
390: aload         29
392: invokevirtual #166
395: astore        34
397: aload         19
399: aload         20
401: aload         29
403: invokevirtual #167
406: istore        35
408: aload         29
410: invokevirtual #154
413: astore        36
415: aload         29
417: ldc           #32
419: invokevirtual #64
422: astore        37
424: new           #263
427: dup
428: ldc           #158
430: ldc           #157
432: invokespecial #264
435: astore        38
437: aload_1
438: ldc           #13
440: aload         29
442: aload         38
444: invokevirtual #169
447: istore        39
449: aload_1
450: invokestatic  #15
453: aload_2
454: invokestatic  #15
457: aload_3
458: invokestatic  #15
461: aload         4
463: invokestatic  #15
466: new           #16
469: dup
470: invokespecial #17
473: ldc           #18
475: invokevirtual #19
478: aload         5
480: invokevirtual #19
483: ldc           #211
485: invokevirtual #19
488: invokevirtual #22
491: aload         5
493: ldc           #12
495: invokestatic  #68
498: aload         6
500: invokestatic  #15
503: aload         7
505: invokestatic  #15
508: aload         8
510: invokestatic  #15
513: aload         9
515: invokestatic  #15
518: new           #16
521: dup
522: invokespecial #17
525: ldc           #18
527: invokevirtual #19
530: aload         10
532: invokevirtual #19
535: ldc           #128
537: invokevirtual #19
540: invokevirtual #22
543: aload         10
545: ldc           #43
547: invokestatic  #68
550: aload         11
552: invokestatic  #15
555: aload         12
557: invokestatic  #15
560: aload         13
562: invokestatic  #15
565: aload         14
567: invokestatic  #15
570: aload         15
572: invokestatic  #15
575: new           #16
578: dup
579: invokespecial #17
582: ldc           #18
584: invokevirtual #19
587: iload         16
589: invokevirtual #20
592: ldc           #21
594: invokevirtual #19
597: iconst_1
598: invokevirtual #20
601: ldc           #18
603: invokevirtual #19
606: invokevirtual #22
609: iload         16
611: iconst_1
612: if_icmpne     619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #23
623: aload         17
625: invokestatic  #15
628: aload         18
630: invokestatic  #15
633: aload         20
635: invokestatic  #15
638: aload         21
640: invokestatic  #15
643: aload         22
645: invokestatic  #15
648: aload         23
650: invokestatic  #15
653: aload         24
655: invokestatic  #15
658: aload         25
660: invokestatic  #15
663: aload         26
665: invokestatic  #79
668: aload         27
670: invokestatic  #15
673: aload         28
675: invokestatic  #15
678: aload         29
680: invokestatic  #15
683: aload         30
685: invokestatic  #15
688: aload         31
690: invokestatic  #15
693: aload         32
695: invokestatic  #15
698: aload         33
700: invokestatic  #15
703: aload         34
705: invokestatic  #15
708: new           #16
711: dup
712: invokespecial #17
715: ldc           #18
717: invokevirtual #19
720: iload         35
722: invokevirtual #20
725: ldc           #21
727: invokevirtual #19
730: iconst_0
731: invokevirtual #20
734: ldc           #18
736: invokevirtual #19
739: invokevirtual #22
742: iload         35
744: ifne          751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #23
755: aload         36
757: invokestatic  #15
760: aload         37
762: invokestatic  #15
765: new           #16
768: dup
769: invokespecial #17
772: ldc           #18
774: invokevirtual #19
777: iload         39
779: invokevirtual #20
782: ldc           #21
784: invokevirtual #19
787: iconst_0
788: invokevirtual #20
791: ldc           #18
793: invokevirtual #19
796: invokevirtual #22
799: iload         39
801: ifne          808
804: iconst_1
805: goto          809
808: iconst_0
809: invokestatic  #23
812: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test107
Start line: 5003
End line: 5059
Method source code: 
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean2 = tag1.isBlock();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = element9.toggleClass("#document");
        org.jsoup.select.Elements elements13 = element11.getElementsByAttributeStarting(":lt(32)");
        org.jsoup.select.Elements elements15 = element11.getElementsByClass("[:lt(32)]");
        boolean boolean16 = tag1.equals((java.lang.Object) elements15);
        boolean boolean17 = tag1.preserveWhitespace();
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str22 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist21);
        org.jsoup.safety.Whitelist whitelist24 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist32 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str33 = org.jsoup.Jsoup.clean(":lt(32)", whitelist32);
        org.jsoup.safety.Whitelist whitelist37 = whitelist32.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray44 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist45 = whitelist32.addTags(strArray44);
        org.jsoup.safety.Whitelist whitelist46 = whitelist28.addProtocols(":matchesOwn(null", "hi!", strArray44);
        org.jsoup.safety.Whitelist whitelist47 = whitelist21.addAttributes("[^hi!]", strArray44);
        org.jsoup.safety.Whitelist whitelist51 = whitelist21.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.nodes.Attributes attributes53 = whitelist21.getEnforcedAttributes("");
        org.jsoup.nodes.Element element54 = new org.jsoup.nodes.Element(tag1, " hi!", attributes53);
        org.jsoup.nodes.Attributes attributes55 = attributes53.clone();
        java.lang.String str57 = attributes53.get(".\n<!---->");
        org.junit.Assert.assertNotNull(tag1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(elements13);
        org.junit.Assert.assertNotNull(elements15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!$=   ]" + "'", str22, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + ":lt(32)" + "'", str33, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(attributes53);
        org.junit.Assert.assertNotNull(attributes55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #489
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #13
27: invokestatic  #424
30: astore_1
31: aload_1
32: invokevirtual #425
35: istore_2
36: ldc           #25
38: ldc           #12
40: invokestatic  #26
43: astore_3
44: ldc           #12
46: aload_3
47: ldc           #12
49: invokestatic  #27
52: astore        4
54: aload_3
55: invokevirtual #103
58: astore        5
60: aload         5
62: ldc           #13
64: invokevirtual #177
67: astore        6
69: aload         6
71: ldc           #43
73: invokevirtual #426
76: astore        7
78: aload         6
80: ldc           #58
82: invokevirtual #427
85: astore        8
87: aload_1
88: aload         8
90: invokevirtual #428
93: istore        9
95: aload_1
96: invokevirtual #429
99: istore        10
101: invokestatic  #8
104: astore        11
106: ldc           #109
108: ldc           #110
110: aload         11
112: invokestatic  #94
115: astore        12
117: invokestatic  #8
120: astore        13
122: aload         13
124: iconst_1
125: invokevirtual #9
128: astore        14
130: aload         14
132: iconst_0
133: invokevirtual #9
136: astore        15
138: invokestatic  #118
141: astore        16
143: ldc           #43
145: aload         16
147: invokestatic  #81
150: astore        17
152: aload         16
154: ldc           #43
156: ldc           #12
158: ldc           #32
160: invokevirtual #11
163: astore        18
165: bipush        6
167: anewarray     #119
170: dup
171: iconst_0
172: ldc           #109
174: aastore
175: dup
176: iconst_1
177: ldc           #10
179: aastore
180: dup
181: iconst_2
182: ldc           #13
184: aastore
185: dup
186: iconst_3
187: ldc           #50
189: aastore
190: dup
191: iconst_4
192: ldc           #12
194: aastore
195: dup
196: iconst_5
197: ldc           #120
199: aastore
200: astore        19
202: aload         16
204: aload         19
206: invokevirtual #121
209: astore        20
211: aload         15
213: ldc           #38
215: ldc           #12
217: aload         19
219: invokevirtual #122
222: astore        21
224: aload         11
226: ldc           #50
228: aload         19
230: invokevirtual #127
233: astore        22
235: aload         11
237: ldc           #126
239: ldc           #109
241: ldc           #120
243: invokevirtual #11
246: astore        23
248: aload         11
250: ldc           #25
252: invokevirtual #150
255: astore        24
257: new           #430
260: dup
261: aload_1
262: ldc           #60
264: aload         24
266: invokespecial #431
269: astore        25
271: aload         24
273: invokevirtual #432
276: astore        26
278: aload         24
280: ldc           #145
282: invokevirtual #490
285: astore        27
287: aload_1
288: invokestatic  #15
291: new           #16
294: dup
295: invokespecial #17
298: ldc           #18
300: invokevirtual #19
303: iload_2
304: invokevirtual #20
307: ldc           #21
309: invokevirtual #19
312: iconst_0
313: invokevirtual #20
316: ldc           #18
318: invokevirtual #19
321: invokevirtual #22
324: iload_2
325: ifne          332
328: iconst_1
329: goto          333
332: iconst_0
333: invokestatic  #23
336: aload_3
337: invokestatic  #15
340: aload         4
342: invokestatic  #15
345: aload         5
347: invokestatic  #15
350: aload         6
352: invokestatic  #15
355: aload         7
357: invokestatic  #15
360: aload         8
362: invokestatic  #15
365: new           #16
368: dup
369: invokespecial #17
372: ldc           #18
374: invokevirtual #19
377: iload         9
379: invokevirtual #20
382: ldc           #21
384: invokevirtual #19
387: iconst_0
388: invokevirtual #20
391: ldc           #18
393: invokevirtual #19
396: invokevirtual #22
399: iload         9
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #23
412: new           #16
415: dup
416: invokespecial #17
419: ldc           #18
421: invokevirtual #19
424: iload         10
426: invokevirtual #20
429: ldc           #21
431: invokevirtual #19
434: iconst_0
435: invokevirtual #20
438: ldc           #18
440: invokevirtual #19
443: invokevirtual #22
446: iload         10
448: ifne          455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #23
459: aload         11
461: invokestatic  #15
464: new           #16
467: dup
468: invokespecial #17
471: ldc           #18
473: invokevirtual #19
476: aload         12
478: invokevirtual #19
481: ldc           #111
483: invokevirtual #19
486: invokevirtual #22
489: aload         12
491: ldc           #65
493: invokestatic  #68
496: aload         13
498: invokestatic  #15
501: aload         14
503: invokestatic  #15
506: aload         15
508: invokestatic  #15
511: aload         16
513: invokestatic  #15
516: new           #16
519: dup
520: invokespecial #17
523: ldc           #18
525: invokevirtual #19
528: aload         17
530: invokevirtual #19
533: ldc           #128
535: invokevirtual #19
538: invokevirtual #22
541: aload         17
543: ldc           #43
545: invokestatic  #68
548: aload         18
550: invokestatic  #15
553: aload         19
555: invokestatic  #15
558: aload         20
560: invokestatic  #15
563: aload         21
565: invokestatic  #15
568: aload         22
570: invokestatic  #15
573: aload         23
575: invokestatic  #15
578: aload         24
580: invokestatic  #15
583: aload         26
585: invokestatic  #15
588: new           #16
591: dup
592: invokespecial #17
595: ldc           #18
597: invokevirtual #19
600: aload         27
602: invokevirtual #19
605: ldc           #67
607: invokevirtual #19
610: invokevirtual #22
613: aload         27
615: ldc           #25
617: invokestatic  #68
620: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test108
Start line: 5062
End line: 5083
Method source code: 
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(false);
        java.lang.String[] strArray14 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean15 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray14);
        org.jsoup.safety.Whitelist whitelist16 = whitelist5.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray14);
        boolean boolean18 = whitelist5.isSafeTag("#text");
        java.lang.String str19 = org.jsoup.Jsoup.clean("[^<html> <head></head> <body> </body> </html>]", whitelist5);
        boolean boolean21 = whitelist5.isSafeTag("[<!---->!=:contains(:matchesown(null]");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[^    ]" + "'", str19, "[^    ]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #491
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: aload_3
94: ldc           #51
96: invokevirtual #83
99: istore        7
101: ldc_w         #492
104: aload_3
105: invokestatic  #81
108: astore        8
110: aload_3
111: ldc_w         #493
114: invokevirtual #83
117: istore        9
119: aload_1
120: invokestatic  #15
123: aload_2
124: invokestatic  #15
127: aload_3
128: invokestatic  #15
131: aload         4
133: invokestatic  #15
136: new           #16
139: dup
140: invokespecial #17
143: ldc           #18
145: invokevirtual #19
148: iload         5
150: invokevirtual #20
153: ldc           #21
155: invokevirtual #19
158: iconst_1
159: invokevirtual #20
162: ldc           #18
164: invokevirtual #19
167: invokevirtual #22
170: iload         5
172: iconst_1
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #23
184: aload         6
186: invokestatic  #15
189: new           #16
192: dup
193: invokespecial #17
196: ldc           #18
198: invokevirtual #19
201: iload         7
203: invokevirtual #20
206: ldc           #21
208: invokevirtual #19
211: iconst_0
212: invokevirtual #20
215: ldc           #18
217: invokevirtual #19
220: invokevirtual #22
223: iload         7
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #23
236: new           #16
239: dup
240: invokespecial #17
243: ldc           #18
245: invokevirtual #19
248: aload         8
250: invokevirtual #19
253: ldc_w         #494
256: invokevirtual #19
259: invokevirtual #22
262: aload         8
264: ldc_w         #479
267: invokestatic  #68
270: new           #16
273: dup
274: invokespecial #17
277: ldc           #18
279: invokevirtual #19
282: iload         9
284: invokevirtual #20
287: ldc           #21
289: invokevirtual #19
292: iconst_0
293: invokevirtual #20
296: ldc           #18
298: invokevirtual #19
301: invokevirtual #22
304: iload         9
306: ifne          313
309: iconst_1
310: goto          314
313: iconst_0
314: invokestatic  #23
317: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test109
Start line: 5086
End line: 5164
Method source code: 
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.ContainsOwnText containsOwnText5 = new org.jsoup.select.Evaluator.ContainsOwnText("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String str6 = containsOwnText5.toString();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList7 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean9 = objList7.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList10 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document14 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList16 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document14, "hi!");
        org.jsoup.nodes.Element element18 = document14.text("");
        int int19 = objList10.lastIndexOf((java.lang.Object) document14);
        objList7.addFirst((java.lang.Object) document14);
        java.util.Spliterator<java.lang.Object> objSpliterator21 = objList7.spliterator();
        java.util.regex.Pattern pattern23 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching24 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        java.lang.String str35 = document28.toString();
        org.jsoup.nodes.Element element37 = document28.prependElement("\nhi!");
        org.jsoup.select.Elements elements39 = document28.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList45 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document43, "hi!");
        org.jsoup.nodes.Element element47 = document43.tagName("hi!");
        org.jsoup.nodes.Element element49 = document43.append("");
        boolean boolean50 = attributeWithValueMatching24.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document43);
        org.jsoup.nodes.Document document51 = document43.normalise();
        org.jsoup.nodes.Document.OutputSettings outputSettings52 = document51.outputSettings();
        boolean boolean53 = objList7.offerLast((java.lang.Object) document51);
        org.jsoup.nodes.Document document56 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element58 = document56.text(".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan60 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        boolean boolean61 = document56.equals((java.lang.Object) (-1));
        boolean boolean62 = document56.isBlock();
        boolean boolean63 = containsOwnText5.matches((org.jsoup.nodes.Element) document51, (org.jsoup.nodes.Element) document56);
        org.jsoup.nodes.Document document64 = cleaner3.clean(document56);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node66 = document64.childNode((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]" + "'", str6, ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(document14);
        org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objSpliterator21);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str35, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(nodeList45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(outputSettings52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(document64);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #495
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #496
47: dup
48: ldc           #249
50: invokespecial #497
53: astore        4
55: aload         4
57: invokevirtual #498
60: astore        5
62: new           #88
65: dup
66: invokespecial #89
69: astore        6
71: aload         6
73: ldc           #43
75: invokevirtual #90
78: istore        7
80: new           #88
83: dup
84: invokespecial #89
87: astore        8
89: ldc           #25
91: ldc           #12
93: invokestatic  #26
96: astore        9
98: ldc           #12
100: aload         9
102: ldc           #12
104: invokestatic  #27
107: astore        10
109: aload         9
111: ldc           #25
113: invokevirtual #64
116: astore        11
118: aload         8
120: aload         9
122: invokevirtual #130
125: istore        12
127: aload         6
129: aload         9
131: invokevirtual #93
134: aload         6
136: invokevirtual #283
139: astore        13
141: aconst_null
142: astore        14
144: new           #96
147: dup
148: ldc           #25
150: aload         14
152: invokespecial #97
155: astore        15
157: ldc           #25
159: ldc           #12
161: invokestatic  #26
164: astore        16
166: ldc           #12
168: aload         16
170: ldc           #12
172: invokestatic  #27
175: astore        17
177: aload         16
179: ldc           #12
181: invokevirtual #28
184: astore        18
186: aload         16
188: ldc           #25
190: invokevirtual #29
193: astore        19
195: aload         16
197: invokevirtual #72
200: astore        20
202: aload         16
204: ldc           #98
206: invokevirtual #99
209: astore        21
211: aload         16
213: ldc           #25
215: invokevirtual #100
218: astore        22
220: ldc           #25
222: ldc           #12
224: invokestatic  #26
227: astore        23
229: ldc           #12
231: aload         23
233: ldc           #12
235: invokestatic  #27
238: astore        24
240: aload         23
242: ldc           #12
244: invokevirtual #28
247: astore        25
249: aload         23
251: ldc           #25
253: invokevirtual #29
256: astore        26
258: aload         15
260: aload         16
262: aload         23
264: invokevirtual #101
267: istore        27
269: aload         23
271: invokevirtual #102
274: astore        28
276: aload         28
278: invokevirtual #30
281: astore        29
283: aload         6
285: aload         28
287: invokevirtual #282
290: istore        30
292: ldc           #25
294: ldc           #12
296: invokestatic  #26
299: astore        31
301: aload         31
303: ldc           #32
305: invokevirtual #64
308: astore        32
310: new           #48
313: dup
314: iconst_m1
315: invokespecial #49
318: astore        33
320: aload         31
322: iconst_m1
323: invokestatic  #499
326: invokevirtual #202
329: istore        34
331: aload         31
333: invokevirtual #500
336: istore        35
338: aload         4
340: aload         28
342: aload         31
344: invokevirtual #501
347: istore        36
349: aload_3
350: aload         31
352: invokevirtual #47
355: astore        37
357: aload         37
359: bipush        100
361: invokevirtual #502
364: astore        38
366: ldc_w         #503
369: invokestatic  #35
372: goto          377
375: astore        38
377: aload_1
378: invokestatic  #15
381: aload_2
382: invokestatic  #15
385: new           #16
388: dup
389: invokespecial #17
392: ldc           #18
394: invokevirtual #19
397: aload         5
399: invokevirtual #19
402: ldc_w         #504
405: invokevirtual #19
408: invokevirtual #22
411: aload         5
413: ldc           #110
415: invokestatic  #68
418: new           #16
421: dup
422: invokespecial #17
425: ldc           #18
427: invokevirtual #19
430: iload         7
432: invokevirtual #20
435: ldc           #21
437: invokevirtual #19
440: iconst_0
441: invokevirtual #20
444: ldc           #18
446: invokevirtual #19
449: invokevirtual #22
452: iload         7
454: ifne          461
457: iconst_1
458: goto          462
461: iconst_0
462: invokestatic  #23
465: aload         9
467: invokestatic  #15
470: aload         10
472: invokestatic  #15
475: aload         11
477: invokestatic  #15
480: new           #16
483: dup
484: invokespecial #17
487: ldc           #18
489: invokevirtual #19
492: iload         12
494: invokevirtual #134
497: ldc           #21
499: invokevirtual #19
502: iconst_m1
503: invokevirtual #134
506: ldc           #18
508: invokevirtual #19
511: invokevirtual #22
514: iload         12
516: iconst_m1
517: if_icmpne     524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #23
528: aload         13
530: invokestatic  #15
533: aload         16
535: invokestatic  #15
538: aload         17
540: invokestatic  #15
543: aload         18
545: invokestatic  #15
548: aload         19
550: invokestatic  #15
553: new           #16
556: dup
557: invokespecial #17
560: ldc           #18
562: invokevirtual #19
565: aload         20
567: invokevirtual #19
570: ldc           #78
572: invokevirtual #19
575: invokevirtual #22
578: aload         20
580: ldc           #10
582: invokestatic  #68
585: aload         21
587: invokestatic  #15
590: aload         22
592: invokestatic  #15
595: aload         23
597: invokestatic  #15
600: aload         24
602: invokestatic  #15
605: aload         25
607: invokestatic  #15
610: aload         26
612: invokestatic  #15
615: new           #16
618: dup
619: invokespecial #17
622: ldc           #18
624: invokevirtual #19
627: iload         27
629: invokevirtual #20
632: ldc           #21
634: invokevirtual #19
637: iconst_0
638: invokevirtual #20
641: ldc           #18
643: invokevirtual #19
646: invokevirtual #22
649: iload         27
651: ifne          658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #23
662: aload         28
664: invokestatic  #15
667: aload         29
669: invokestatic  #15
672: new           #16
675: dup
676: invokespecial #17
679: ldc           #18
681: invokevirtual #19
684: iload         30
686: invokevirtual #20
689: ldc           #21
691: invokevirtual #19
694: iconst_1
695: invokevirtual #20
698: ldc           #18
700: invokevirtual #19
703: invokevirtual #22
706: iload         30
708: iconst_1
709: if_icmpne     716
712: iconst_1
713: goto          717
716: iconst_0
717: invokestatic  #23
720: aload         31
722: invokestatic  #15
725: aload         32
727: invokestatic  #15
730: new           #16
733: dup
734: invokespecial #17
737: ldc           #18
739: invokevirtual #19
742: iload         34
744: invokevirtual #20
747: ldc           #21
749: invokevirtual #19
752: iconst_0
753: invokevirtual #20
756: ldc           #18
758: invokevirtual #19
761: invokevirtual #22
764: iload         34
766: ifne          773
769: iconst_1
770: goto          774
773: iconst_0
774: invokestatic  #23
777: new           #16
780: dup
781: invokespecial #17
784: ldc           #18
786: invokevirtual #19
789: iload         35
791: invokevirtual #20
794: ldc           #21
796: invokevirtual #19
799: iconst_0
800: invokevirtual #20
803: ldc           #18
805: invokevirtual #19
808: invokevirtual #22
811: iload         35
813: ifne          820
816: iconst_1
817: goto          821
820: iconst_0
821: invokestatic  #23
824: new           #16
827: dup
828: invokespecial #17
831: ldc           #18
833: invokevirtual #19
836: iload         36
838: invokevirtual #20
841: ldc           #21
843: invokevirtual #19
846: iconst_0
847: invokevirtual #20
850: ldc           #18
852: invokevirtual #19
855: invokevirtual #22
858: iload         36
860: ifne          867
863: iconst_1
864: goto          868
867: iconst_0
868: invokestatic  #23
871: aload         37
873: invokestatic  #15
876: return
Exception table:
from    to  target type
357   372   375   Class java/lang/IndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test110
Start line: 5167
End line: 5198
Method source code: 
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Element element23 = document21.html("#comment");
        org.jsoup.nodes.Document document24 = document21.normalise();
        java.lang.String str25 = document24.toString();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "<html>\n <head></head>\n <body>\n  #comment \n </body>\n</html>" + "'", str25, "<html>\n <head></head>\n <body>\n  #comment \n </body>\n</html>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #505
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: aload         12
130: ldc           #114
132: invokevirtual #115
135: astore        13
137: aload         12
139: invokevirtual #102
142: astore        14
144: aload         14
146: invokevirtual #72
149: astore        15
151: aload_1
152: invokestatic  #15
155: aload_2
156: invokestatic  #15
159: aload         5
161: invokestatic  #15
164: aload         6
166: invokestatic  #15
169: aload         7
171: invokestatic  #15
174: aload         8
176: invokestatic  #15
179: aload         9
181: invokestatic  #15
184: aload         10
186: invokestatic  #15
189: new           #16
192: dup
193: invokespecial #17
196: ldc           #18
198: invokevirtual #19
201: iload         11
203: invokevirtual #20
206: ldc           #21
208: invokevirtual #19
211: iconst_0
212: invokevirtual #20
215: ldc           #18
217: invokevirtual #19
220: invokevirtual #22
223: iload         11
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #23
236: aload         12
238: invokestatic  #15
241: aload         13
243: invokestatic  #15
246: aload         14
248: invokestatic  #15
251: new           #16
254: dup
255: invokespecial #17
258: ldc           #18
260: invokevirtual #19
263: aload         15
265: invokevirtual #19
268: ldc_w         #506
271: invokevirtual #19
274: invokevirtual #22
277: aload         15
279: ldc_w         #507
282: invokestatic  #68
285: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test111
Start line: 5201
End line: 5236
Method source code: 
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Element element28 = document23.prepend("[:lt(32)=<!--hi!-->]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(element28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #508
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: aload         13
159: ldc_w         #509
162: invokevirtual #165
165: astore        17
167: aload_1
168: invokestatic  #15
171: aload_2
172: invokestatic  #15
175: aload         5
177: invokestatic  #15
180: aload         6
182: invokestatic  #15
185: aload         7
187: invokestatic  #15
190: aload         8
192: invokestatic  #15
195: aload         9
197: invokestatic  #15
200: aload         10
202: invokestatic  #15
205: new           #16
208: dup
209: invokespecial #17
212: ldc           #18
214: invokevirtual #19
217: iload         11
219: invokevirtual #20
222: ldc           #21
224: invokevirtual #19
227: iconst_0
228: invokevirtual #20
231: ldc           #18
233: invokevirtual #19
236: invokevirtual #22
239: iload         11
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #23
252: aload         12
254: invokestatic  #15
257: aload         13
259: invokestatic  #15
262: new           #16
265: dup
266: invokespecial #17
269: ldc           #18
271: invokevirtual #19
274: aload         14
276: invokevirtual #19
279: ldc           #197
281: invokevirtual #19
284: invokevirtual #22
287: aload         14
289: ldc           #151
291: invokestatic  #68
294: new           #16
297: dup
298: invokespecial #17
301: ldc           #18
303: invokevirtual #19
306: aload         15
308: invokevirtual #19
311: ldc           #67
313: invokevirtual #19
316: invokevirtual #22
319: aload         15
321: ldc           #25
323: invokestatic  #68
326: aload         16
328: invokestatic  #15
331: aload         17
333: invokestatic  #15
336: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test112
Start line: 5239
End line: 5323
Method source code: 
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes7 = whitelist5.getEnforcedAttributes("#text");
        java.lang.String str8 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist5);
        java.lang.String str9 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist5);
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str16 = org.jsoup.Jsoup.clean(":lt(32)", whitelist15);
        boolean boolean18 = whitelist15.isSafeTag("");
        org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList24 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document22, "hi!");
        org.jsoup.nodes.Element element25 = document22.empty();
        org.jsoup.nodes.Element element27 = document22.removeClass("hi!");
        org.jsoup.nodes.Document document31 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList33 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document31, "hi!");
        org.jsoup.nodes.Element element35 = document31.tagName("hi!");
        org.jsoup.nodes.Element element37 = document31.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings38 = document31.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings40 = outputSettings38.prettyPrint(false);
        org.jsoup.nodes.Document document41 = document22.outputSettings(outputSettings40);
        java.lang.String str42 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist15, outputSettings40);
        org.jsoup.safety.Whitelist whitelist45 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str46 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist45);
        org.jsoup.safety.Whitelist whitelist48 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist50 = whitelist48.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist52 = whitelist50.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist56 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str57 = org.jsoup.Jsoup.clean(":lt(32)", whitelist56);
        org.jsoup.safety.Whitelist whitelist61 = whitelist56.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray68 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist69 = whitelist56.addTags(strArray68);
        org.jsoup.safety.Whitelist whitelist70 = whitelist52.addProtocols(":matchesOwn(null", "hi!", strArray68);
        java.lang.String[] strArray79 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean80 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray79);
        org.jsoup.safety.Whitelist whitelist81 = whitelist70.addProtocols("\n<!--hi!-->", "#document", strArray79);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray79);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray79);
        org.jsoup.safety.Whitelist whitelist84 = whitelist45.addAttributes("*", strArray79);
        org.jsoup.safety.Whitelist whitelist85 = whitelist15.addTags(strArray79);
        boolean boolean86 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", strArray79);
        org.jsoup.safety.Whitelist whitelist87 = whitelist5.addAttributes(":matchesOwn(null", strArray79);
        org.jsoup.nodes.Attributes attributes89 = whitelist5.getEnforcedAttributes("<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.jsoup.safety.Cleaner cleaner90 = new org.jsoup.safety.Cleaner(whitelist5);
        boolean boolean91 = org.jsoup.Jsoup.isValid("<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">", whitelist5);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(attributes7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[    ^=hi!]" + "'", str9, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":lt(32)" + "'", str16, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(nodeList33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(outputSettings38);
        org.junit.Assert.assertNotNull(outputSettings40);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[:lt(32)]" + "'", str42, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!$=   ]" + "'", str46, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ":lt(32)" + "'", str57, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertNotNull(whitelist84);
        org.junit.Assert.assertNotNull(whitelist85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(whitelist87);
        org.junit.Assert.assertNotNull(attributes89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #510
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: invokestatic  #118
58: astore        5
60: ldc           #43
62: aload         5
64: invokestatic  #81
67: astore        6
69: aload         5
71: ldc           #25
73: invokevirtual #83
76: istore        7
78: ldc           #25
80: ldc           #12
82: invokestatic  #26
85: astore        8
87: ldc           #12
89: aload         8
91: ldc           #12
93: invokestatic  #27
96: astore        9
98: aload         8
100: invokevirtual #103
103: astore        10
105: aload         8
107: ldc           #12
109: invokevirtual #59
112: astore        11
114: ldc           #25
116: ldc           #12
118: invokestatic  #26
121: astore        12
123: ldc           #12
125: aload         12
127: ldc           #12
129: invokestatic  #27
132: astore        13
134: aload         12
136: ldc           #12
138: invokevirtual #28
141: astore        14
143: aload         12
145: ldc           #25
147: invokevirtual #29
150: astore        15
152: aload         12
154: invokevirtual #30
157: astore        16
159: aload         16
161: iconst_0
162: invokevirtual #31
165: astore        17
167: aload         8
169: aload         17
171: invokevirtual #175
174: astore        18
176: ldc           #58
178: ldc           #126
180: aload         5
182: aload         17
184: invokestatic  #33
187: astore        19
189: invokestatic  #8
192: astore        20
194: ldc           #109
196: ldc           #110
198: aload         20
200: invokestatic  #94
203: astore        21
205: invokestatic  #8
208: astore        22
210: aload         22
212: iconst_1
213: invokevirtual #9
216: astore        23
218: aload         23
220: iconst_0
221: invokevirtual #9
224: astore        24
226: invokestatic  #118
229: astore        25
231: ldc           #43
233: aload         25
235: invokestatic  #81
238: astore        26
240: aload         25
242: ldc           #43
244: ldc           #12
246: ldc           #32
248: invokevirtual #11
251: astore        27
253: bipush        6
255: anewarray     #119
258: dup
259: iconst_0
260: ldc           #109
262: aastore
263: dup
264: iconst_1
265: ldc           #10
267: aastore
268: dup
269: iconst_2
270: ldc           #13
272: aastore
273: dup
274: iconst_3
275: ldc           #50
277: aastore
278: dup
279: iconst_4
280: ldc           #12
282: aastore
283: dup
284: iconst_5
285: ldc           #120
287: aastore
288: astore        28
290: aload         25
292: aload         28
294: invokevirtual #121
297: astore        29
299: aload         24
301: ldc           #38
303: ldc           #12
305: aload         28
307: invokevirtual #122
310: astore        30
312: iconst_5
313: anewarray     #119
316: dup
317: iconst_0
318: ldc           #13
320: aastore
321: dup
322: iconst_1
323: ldc           #32
325: aastore
326: dup
327: iconst_2
328: ldc           #10
330: aastore
331: dup
332: iconst_3
333: ldc           #43
335: aastore
336: dup
337: iconst_4
338: ldc           #58
340: aastore
341: astore        31
343: ldc           #10
345: aload         31
347: invokestatic  #123
350: istore        32
352: aload         30
354: ldc           #84
356: ldc           #13
358: aload         31
360: invokevirtual #122
363: astore        33
365: aload         31
367: checkcast     #124
370: invokestatic  #125
373: aload         31
375: checkcast     #124
378: invokestatic  #125
381: aload         20
383: ldc           #126
385: aload         31
387: invokevirtual #127
390: astore        34
392: aload         5
394: aload         31
396: invokevirtual #121
399: astore        35
401: ldc           #82
403: aload         31
405: invokestatic  #123
408: istore        36
410: aload_1
411: ldc           #38
413: aload         31
415: invokevirtual #127
418: astore        37
420: aload_1
421: ldc           #157
423: invokevirtual #150
426: astore        38
428: new           #40
431: dup
432: aload_1
433: invokespecial #41
436: astore        39
438: ldc_w         #274
441: aload_1
442: invokestatic  #14
445: istore        40
447: aload_1
448: invokestatic  #15
451: aload_2
452: invokestatic  #15
455: new           #16
458: dup
459: invokespecial #17
462: ldc           #18
464: invokevirtual #19
467: aload_3
468: invokevirtual #19
471: ldc           #67
473: invokevirtual #19
476: invokevirtual #22
479: aload_3
480: ldc           #25
482: invokestatic  #68
485: new           #16
488: dup
489: invokespecial #17
492: ldc           #18
494: invokevirtual #19
497: aload         4
499: invokevirtual #19
502: ldc           #172
504: invokevirtual #19
507: invokevirtual #22
510: aload         4
512: ldc           #173
514: invokestatic  #68
517: aload         5
519: invokestatic  #15
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: aload         6
536: invokevirtual #19
539: ldc           #128
541: invokevirtual #19
544: invokevirtual #22
547: aload         6
549: ldc           #43
551: invokestatic  #68
554: new           #16
557: dup
558: invokespecial #17
561: ldc           #18
563: invokevirtual #19
566: iload         7
568: invokevirtual #20
571: ldc           #21
573: invokevirtual #19
576: iconst_0
577: invokevirtual #20
580: ldc           #18
582: invokevirtual #19
585: invokevirtual #22
588: iload         7
590: ifne          597
593: iconst_1
594: goto          598
597: iconst_0
598: invokestatic  #23
601: aload         8
603: invokestatic  #15
606: aload         9
608: invokestatic  #15
611: aload         10
613: invokestatic  #15
616: aload         11
618: invokestatic  #15
621: aload         12
623: invokestatic  #15
626: aload         13
628: invokestatic  #15
631: aload         14
633: invokestatic  #15
636: aload         15
638: invokestatic  #15
641: aload         16
643: invokestatic  #15
646: aload         17
648: invokestatic  #15
651: aload         18
653: invokestatic  #15
656: new           #16
659: dup
660: invokespecial #17
663: ldc           #18
665: invokevirtual #19
668: aload         19
670: invokevirtual #19
673: ldc           #184
675: invokevirtual #19
678: invokevirtual #22
681: aload         19
683: ldc           #58
685: invokestatic  #68
688: aload         20
690: invokestatic  #15
693: new           #16
696: dup
697: invokespecial #17
700: ldc           #18
702: invokevirtual #19
705: aload         21
707: invokevirtual #19
710: ldc           #111
712: invokevirtual #19
715: invokevirtual #22
718: aload         21
720: ldc           #65
722: invokestatic  #68
725: aload         22
727: invokestatic  #15
730: aload         23
732: invokestatic  #15
735: aload         24
737: invokestatic  #15
740: aload         25
742: invokestatic  #15
745: new           #16
748: dup
749: invokespecial #17
752: ldc           #18
754: invokevirtual #19
757: aload         26
759: invokevirtual #19
762: ldc           #128
764: invokevirtual #19
767: invokevirtual #22
770: aload         26
772: ldc           #43
774: invokestatic  #68
777: aload         27
779: invokestatic  #15
782: aload         28
784: invokestatic  #15
787: aload         29
789: invokestatic  #15
792: aload         30
794: invokestatic  #15
797: aload         31
799: invokestatic  #15
802: new           #16
805: dup
806: invokespecial #17
809: ldc           #18
811: invokevirtual #19
814: iload         32
816: invokevirtual #20
819: ldc           #21
821: invokevirtual #19
824: iconst_1
825: invokevirtual #20
828: ldc           #18
830: invokevirtual #19
833: invokevirtual #22
836: iload         32
838: iconst_1
839: if_icmpne     846
842: iconst_1
843: goto          847
846: iconst_0
847: invokestatic  #23
850: aload         33
852: invokestatic  #15
855: aload         34
857: invokestatic  #15
860: aload         35
862: invokestatic  #15
865: new           #16
868: dup
869: invokespecial #17
872: ldc           #18
874: invokevirtual #19
877: iload         36
879: invokevirtual #20
882: ldc           #21
884: invokevirtual #19
887: iconst_0
888: invokevirtual #20
891: ldc           #18
893: invokevirtual #19
896: invokevirtual #22
899: iload         36
901: ifne          908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #23
912: aload         37
914: invokestatic  #15
917: aload         38
919: invokestatic  #15
922: new           #16
925: dup
926: invokespecial #17
929: ldc           #18
931: invokevirtual #19
934: iload         40
936: invokevirtual #20
939: ldc           #21
941: invokevirtual #19
944: iconst_1
945: invokevirtual #20
948: ldc           #18
950: invokevirtual #19
953: invokevirtual #22
956: iload         40
958: iconst_1
959: if_icmpne     966
962: iconst_1
963: goto          967
966: iconst_0
967: invokestatic  #23
970: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test113
Start line: 5326
End line: 5374
Method source code: 
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        java.util.regex.Pattern pattern1 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching2 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("\nhi!", pattern1);
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = document6.removeClass("hi!");
        java.lang.String str12 = document6.id();
        org.jsoup.nodes.Node node13 = document6.previousSibling();
        org.jsoup.nodes.Node node14 = document6.clone();
        java.lang.String str15 = document6.id();
        org.jsoup.safety.Whitelist whitelist16 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist18 = whitelist16.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner19 = new org.jsoup.safety.Cleaner(whitelist18);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining22 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document24 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = document28.outputSettings();
        boolean boolean36 = attributeWithValueContaining22.matches((org.jsoup.nodes.Element) document24, (org.jsoup.nodes.Element) document28);
        org.jsoup.nodes.Document document37 = cleaner19.clean(document28);
        org.jsoup.helper.Validate.notNull((java.lang.Object) document28, "");
        boolean boolean40 = attributeWithValueMatching2.matches((org.jsoup.nodes.Element) document6, (org.jsoup.nodes.Element) document28);
        org.jsoup.select.Elements elements42 = document6.getElementsByAttributeStarting("[^[hi!$=<html>\n <head></head>\n <body></body>\n</html>]]");
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(outputSettings35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(elements42);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #511
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #96
30: dup
31: ldc           #98
33: aload_1
34: invokespecial #97
37: astore_2
38: ldc           #25
40: ldc           #12
42: invokestatic  #26
45: astore_3
46: ldc           #12
48: aload_3
49: ldc           #12
51: invokestatic  #27
54: astore        4
56: aload_3
57: invokevirtual #103
60: astore        5
62: aload_3
63: ldc           #12
65: invokevirtual #59
68: astore        6
70: aload_3
71: invokevirtual #73
74: astore        7
76: aload_3
77: invokevirtual #349
80: astore        8
82: aload_3
83: invokevirtual #154
86: astore        9
88: aload_3
89: invokevirtual #73
92: astore        10
94: invokestatic  #8
97: astore        11
99: aload         11
101: iconst_1
102: invokevirtual #9
105: astore        12
107: new           #40
110: dup
111: aload         12
113: invokespecial #41
116: astore        13
118: new           #42
121: dup
122: ldc           #43
124: ldc           #32
126: invokespecial #44
129: astore        14
131: ldc           #12
133: invokestatic  #45
136: astore        15
138: ldc           #25
140: ldc           #12
142: invokestatic  #26
145: astore        16
147: ldc           #12
149: aload         16
151: ldc           #12
153: invokestatic  #27
156: astore        17
158: aload         16
160: ldc           #12
162: invokevirtual #28
165: astore        18
167: aload         16
169: ldc           #25
171: invokevirtual #29
174: astore        19
176: aload         16
178: invokevirtual #30
181: astore        20
183: aload         14
185: aload         15
187: aload         16
189: invokevirtual #46
192: istore        21
194: aload         13
196: aload         16
198: invokevirtual #47
201: astore        22
203: aload         16
205: ldc           #25
207: invokestatic  #181
210: aload_2
211: aload_3
212: aload         16
214: invokevirtual #101
217: istore        23
219: aload_3
220: ldc_w         #512
223: invokevirtual #140
226: astore        24
228: aload_3
229: invokestatic  #15
232: aload         4
234: invokestatic  #15
237: aload         5
239: invokestatic  #15
242: aload         6
244: invokestatic  #15
247: new           #16
250: dup
251: invokespecial #17
254: ldc           #18
256: invokevirtual #19
259: aload         7
261: invokevirtual #19
264: ldc           #67
266: invokevirtual #19
269: invokevirtual #22
272: aload         7
274: ldc           #25
276: invokestatic  #68
279: aload         8
281: invokestatic  #79
284: aload         9
286: invokestatic  #15
289: new           #16
292: dup
293: invokespecial #17
296: ldc           #18
298: invokevirtual #19
301: aload         10
303: invokevirtual #19
306: ldc           #67
308: invokevirtual #19
311: invokevirtual #22
314: aload         10
316: ldc           #25
318: invokestatic  #68
321: aload         11
323: invokestatic  #15
326: aload         12
328: invokestatic  #15
331: aload         15
333: invokestatic  #15
336: aload         16
338: invokestatic  #15
341: aload         17
343: invokestatic  #15
346: aload         18
348: invokestatic  #15
351: aload         19
353: invokestatic  #15
356: aload         20
358: invokestatic  #15
361: new           #16
364: dup
365: invokespecial #17
368: ldc           #18
370: invokevirtual #19
373: iload         21
375: invokevirtual #20
378: ldc           #21
380: invokevirtual #19
383: iconst_0
384: invokevirtual #20
387: ldc           #18
389: invokevirtual #19
392: invokevirtual #22
395: iload         21
397: ifne          404
400: iconst_1
401: goto          405
404: iconst_0
405: invokestatic  #23
408: aload         22
410: invokestatic  #15
413: new           #16
416: dup
417: invokespecial #17
420: ldc           #18
422: invokevirtual #19
425: iload         23
427: invokevirtual #20
430: ldc           #21
432: invokevirtual #19
435: iconst_0
436: invokevirtual #20
439: ldc           #18
441: invokevirtual #19
444: invokevirtual #22
447: iload         23
449: ifne          456
452: iconst_1
453: goto          457
456: iconst_0
457: invokestatic  #23
460: aload         24
462: invokestatic  #15
465: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test114
Start line: 5377
End line: 5451
Method source code: 
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        org.jsoup.nodes.Element element9 = document3.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings10 = document3.outputSettings();
        org.jsoup.select.Elements elements12 = document3.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element14 = document3.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes15 = document3.attributes();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = attributes15.dataset();
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList22 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document20, "hi!");
        org.jsoup.nodes.Element element24 = document20.tagName("hi!");
        org.jsoup.nodes.Element element26 = document20.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = document20.outputSettings();
        org.jsoup.select.Elements elements29 = document20.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element31 = document20.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes32 = document20.attributes();
        attributes15.addAll(attributes32);
        org.jsoup.nodes.Attribute attribute36 = new org.jsoup.nodes.Attribute(":lt(32)", "");
        attributes32.put(attribute36);
        org.jsoup.nodes.Document document39 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Element element41 = document39.appendElement("#document");
        org.jsoup.nodes.Element element42 = element41.lastElementSibling();
        org.jsoup.nodes.Element element43 = element42.lastElementSibling();
        boolean boolean44 = attribute36.equals((java.lang.Object) element43);
        java.lang.String str46 = attribute36.setValue("\nhi!");
        java.lang.String str47 = attribute36.toString();
        java.lang.String str48 = attribute36.getKey();
        org.jsoup.safety.Whitelist whitelist50 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist52 = whitelist50.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist54 = whitelist52.preserveRelativeLinks(false);
        java.lang.String[] strArray63 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean64 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray63);
        org.jsoup.safety.Whitelist whitelist65 = whitelist54.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray63);
        boolean boolean67 = whitelist54.isSafeTag("#text");
        java.lang.String str68 = org.jsoup.Jsoup.clean("[^<html> <head></head> <body> </body> </html>]", whitelist54);
        boolean boolean69 = attribute36.equals((java.lang.Object) "[^<html> <head></head> <body> </body> </html>]");
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(outputSettings10);
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNull(element14);
        org.junit.Assert.assertNotNull(attributes15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(nodeList22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNull(element31);
        org.junit.Assert.assertNotNull(attributes32);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ":lt(32)=\"\nhi!\"" + "'", str47, ":lt(32)=\"\nhi!\"");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ":lt(32)" + "'", str48, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(whitelist54);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[^    ]" + "'", str68, "[^    ]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #513
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #25
52: invokevirtual #29
55: astore        4
57: aload_1
58: invokevirtual #30
61: astore        5
63: aload_1
64: iconst_m1
65: invokevirtual #162
68: astore        6
70: aload_1
71: ldc           #10
73: invokevirtual #163
76: astore        7
78: aload_1
79: invokevirtual #164
82: astore        8
84: aload         8
86: invokevirtual #471
89: astore        9
91: ldc           #25
93: ldc           #12
95: invokestatic  #26
98: astore        10
100: ldc           #12
102: aload         10
104: ldc           #12
106: invokestatic  #27
109: astore        11
111: aload         10
113: ldc           #12
115: invokevirtual #28
118: astore        12
120: aload         10
122: ldc           #25
124: invokevirtual #29
127: astore        13
129: aload         10
131: invokevirtual #30
134: astore        14
136: aload         10
138: iconst_m1
139: invokevirtual #162
142: astore        15
144: aload         10
146: ldc           #10
148: invokevirtual #163
151: astore        16
153: aload         10
155: invokevirtual #164
158: astore        17
160: aload         8
162: aload         17
164: invokevirtual #472
167: new           #263
170: dup
171: ldc           #43
173: ldc           #25
175: invokespecial #264
178: astore        18
180: aload         17
182: aload         18
184: invokevirtual #473
187: ldc           #12
189: invokestatic  #45
192: astore        19
194: aload         19
196: ldc           #13
198: invokevirtual #474
201: astore        20
203: aload         20
205: invokevirtual #475
208: astore        21
210: aload         21
212: invokevirtual #475
215: astore        22
217: aload         18
219: aload         22
221: invokevirtual #476
224: istore        23
226: aload         18
228: ldc           #98
230: invokevirtual #514
233: astore        24
235: aload         18
237: invokevirtual #515
240: astore        25
242: aload         18
244: invokevirtual #210
247: astore        26
249: invokestatic  #8
252: astore        27
254: aload         27
256: iconst_1
257: invokevirtual #9
260: astore        28
262: aload         28
264: iconst_0
265: invokevirtual #9
268: astore        29
270: iconst_5
271: anewarray     #119
274: dup
275: iconst_0
276: ldc           #13
278: aastore
279: dup
280: iconst_1
281: ldc           #32
283: aastore
284: dup
285: iconst_2
286: ldc           #10
288: aastore
289: dup
290: iconst_3
291: ldc           #43
293: aastore
294: dup
295: iconst_4
296: ldc           #58
298: aastore
299: astore        30
301: ldc           #10
303: aload         30
305: invokestatic  #123
308: istore        31
310: aload         29
312: ldc           #120
314: ldc           #55
316: aload         30
318: invokevirtual #122
321: astore        32
323: aload         29
325: ldc           #51
327: invokevirtual #83
330: istore        33
332: ldc_w         #492
335: aload         29
337: invokestatic  #81
340: astore        34
342: aload         18
344: ldc_w         #492
347: invokevirtual #476
350: istore        35
352: aload_1
353: invokestatic  #15
356: aload_2
357: invokestatic  #15
360: aload_3
361: invokestatic  #15
364: aload         4
366: invokestatic  #15
369: aload         5
371: invokestatic  #15
374: aload         6
376: invokestatic  #15
379: aload         7
381: invokestatic  #79
384: aload         8
386: invokestatic  #15
389: aload         9
391: invokestatic  #15
394: aload         10
396: invokestatic  #15
399: aload         11
401: invokestatic  #15
404: aload         12
406: invokestatic  #15
409: aload         13
411: invokestatic  #15
414: aload         14
416: invokestatic  #15
419: aload         15
421: invokestatic  #15
424: aload         16
426: invokestatic  #79
429: aload         17
431: invokestatic  #15
434: aload         19
436: invokestatic  #15
439: aload         20
441: invokestatic  #15
444: aload         21
446: invokestatic  #15
449: aload         22
451: invokestatic  #15
454: new           #16
457: dup
458: invokespecial #17
461: ldc           #18
463: invokevirtual #19
466: iload         23
468: invokevirtual #20
471: ldc           #21
473: invokevirtual #19
476: iconst_0
477: invokevirtual #20
480: ldc           #18
482: invokevirtual #19
485: invokevirtual #22
488: iload         23
490: ifne          497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #23
501: new           #16
504: dup
505: invokespecial #17
508: ldc           #18
510: invokevirtual #19
513: aload         24
515: invokevirtual #19
518: ldc           #67
520: invokevirtual #19
523: invokevirtual #22
526: aload         24
528: ldc           #25
530: invokestatic  #68
533: new           #16
536: dup
537: invokespecial #17
540: ldc           #18
542: invokevirtual #19
545: aload         25
547: invokevirtual #19
550: ldc_w         #516
553: invokevirtual #19
556: invokevirtual #22
559: aload         25
561: ldc           #240
563: invokestatic  #68
566: new           #16
569: dup
570: invokespecial #17
573: ldc           #18
575: invokevirtual #19
578: aload         26
580: invokevirtual #19
583: ldc           #128
585: invokevirtual #19
588: invokevirtual #22
591: aload         26
593: ldc           #43
595: invokestatic  #68
598: aload         27
600: invokestatic  #15
603: aload         28
605: invokestatic  #15
608: aload         29
610: invokestatic  #15
613: aload         30
615: invokestatic  #15
618: new           #16
621: dup
622: invokespecial #17
625: ldc           #18
627: invokevirtual #19
630: iload         31
632: invokevirtual #20
635: ldc           #21
637: invokevirtual #19
640: iconst_1
641: invokevirtual #20
644: ldc           #18
646: invokevirtual #19
649: invokevirtual #22
652: iload         31
654: iconst_1
655: if_icmpne     662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #23
666: aload         32
668: invokestatic  #15
671: new           #16
674: dup
675: invokespecial #17
678: ldc           #18
680: invokevirtual #19
683: iload         33
685: invokevirtual #20
688: ldc           #21
690: invokevirtual #19
693: iconst_0
694: invokevirtual #20
697: ldc           #18
699: invokevirtual #19
702: invokevirtual #22
705: iload         33
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #23
718: new           #16
721: dup
722: invokespecial #17
725: ldc           #18
727: invokevirtual #19
730: aload         34
732: invokevirtual #19
735: ldc_w         #494
738: invokevirtual #19
741: invokevirtual #22
744: aload         34
746: ldc_w         #479
749: invokestatic  #68
752: new           #16
755: dup
756: invokespecial #17
759: ldc           #18
761: invokevirtual #19
764: iload         35
766: invokevirtual #20
769: ldc           #21
771: invokevirtual #19
774: iconst_0
775: invokevirtual #20
778: ldc           #18
780: invokevirtual #19
783: invokevirtual #22
786: iload         35
788: ifne          795
791: iconst_1
792: goto          796
795: iconst_0
796: invokestatic  #23
799: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test115
Start line: 5454
End line: 5485
Method source code: 
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Element element23 = document21.html("#comment");
        org.jsoup.nodes.Document document24 = document21.normalise();
        org.jsoup.select.Elements elements26 = document21.getElementsContainingOwnText("[[:lt(32)*=]*=hi!]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(elements26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #517
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: aload         12
130: ldc           #114
132: invokevirtual #115
135: astore        13
137: aload         12
139: invokevirtual #102
142: astore        14
144: aload         12
146: ldc_w         #518
149: invokevirtual #62
152: astore        15
154: aload_1
155: invokestatic  #15
158: aload_2
159: invokestatic  #15
162: aload         5
164: invokestatic  #15
167: aload         6
169: invokestatic  #15
172: aload         7
174: invokestatic  #15
177: aload         8
179: invokestatic  #15
182: aload         9
184: invokestatic  #15
187: aload         10
189: invokestatic  #15
192: new           #16
195: dup
196: invokespecial #17
199: ldc           #18
201: invokevirtual #19
204: iload         11
206: invokevirtual #20
209: ldc           #21
211: invokevirtual #19
214: iconst_0
215: invokevirtual #20
218: ldc           #18
220: invokevirtual #19
223: invokevirtual #22
226: iload         11
228: ifne          235
231: iconst_1
232: goto          236
235: iconst_0
236: invokestatic  #23
239: aload         12
241: invokestatic  #15
244: aload         13
246: invokestatic  #15
249: aload         14
251: invokestatic  #15
254: aload         15
256: invokestatic  #15
259: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test116
Start line: 5488
End line: 5533
Method source code: 
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        java.util.regex.Pattern pattern1 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching2 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("#.\n<!---->", pattern1);
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner6 = new org.jsoup.safety.Cleaner(whitelist5);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining9 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document11 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList17 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document15, "hi!");
        org.jsoup.nodes.Element element19 = document15.tagName("hi!");
        org.jsoup.nodes.Element element21 = document15.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = document15.outputSettings();
        boolean boolean23 = attributeWithValueContaining9.matches((org.jsoup.nodes.Element) document11, (org.jsoup.nodes.Element) document15);
        org.jsoup.nodes.Document document24 = cleaner6.clean(document15);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        document28.title("hi!");
        org.jsoup.select.Elements elements36 = document28.getElementsByAttributeStarting("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]");
        boolean boolean37 = attributeWithValueMatching2.matches((org.jsoup.nodes.Element) document15, (org.jsoup.nodes.Element) document28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = attributeWithValueMatching2.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #519
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #96
30: dup
31: ldc_w         #520
34: aload_1
35: invokespecial #97
38: astore_2
39: invokestatic  #8
42: astore_3
43: aload_3
44: iconst_1
45: invokevirtual #9
48: astore        4
50: new           #40
53: dup
54: aload         4
56: invokespecial #41
59: astore        5
61: new           #42
64: dup
65: ldc           #43
67: ldc           #32
69: invokespecial #44
72: astore        6
74: ldc           #12
76: invokestatic  #45
79: astore        7
81: ldc           #25
83: ldc           #12
85: invokestatic  #26
88: astore        8
90: ldc           #12
92: aload         8
94: ldc           #12
96: invokestatic  #27
99: astore        9
101: aload         8
103: ldc           #12
105: invokevirtual #28
108: astore        10
110: aload         8
112: ldc           #25
114: invokevirtual #29
117: astore        11
119: aload         8
121: invokevirtual #30
124: astore        12
126: aload         6
128: aload         7
130: aload         8
132: invokevirtual #46
135: istore        13
137: aload         5
139: aload         8
141: invokevirtual #47
144: astore        14
146: ldc           #25
148: ldc           #12
150: invokestatic  #26
153: astore        15
155: ldc           #12
157: aload         15
159: ldc           #12
161: invokestatic  #27
164: astore        16
166: aload         15
168: ldc           #12
170: invokevirtual #28
173: astore        17
175: aload         15
177: ldc           #12
179: invokevirtual #451
182: aload         15
184: ldc_w         #273
187: invokevirtual #140
190: astore        18
192: aload_2
193: aload         8
195: aload         15
197: invokevirtual #101
200: istore        19
202: aload_2
203: invokevirtual #521
206: astore        20
208: ldc           #76
210: invokestatic  #35
213: goto          218
216: astore        20
218: aload_3
219: invokestatic  #15
222: aload         4
224: invokestatic  #15
227: aload         7
229: invokestatic  #15
232: aload         8
234: invokestatic  #15
237: aload         9
239: invokestatic  #15
242: aload         10
244: invokestatic  #15
247: aload         11
249: invokestatic  #15
252: aload         12
254: invokestatic  #15
257: new           #16
260: dup
261: invokespecial #17
264: ldc           #18
266: invokevirtual #19
269: iload         13
271: invokevirtual #20
274: ldc           #21
276: invokevirtual #19
279: iconst_0
280: invokevirtual #20
283: ldc           #18
285: invokevirtual #19
288: invokevirtual #22
291: iload         13
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #23
304: aload         14
306: invokestatic  #15
309: aload         15
311: invokestatic  #15
314: aload         16
316: invokestatic  #15
319: aload         17
321: invokestatic  #15
324: aload         18
326: invokestatic  #15
329: new           #16
332: dup
333: invokespecial #17
336: ldc           #18
338: invokevirtual #19
341: iload         19
343: invokevirtual #20
346: ldc           #21
348: invokevirtual #19
351: iconst_0
352: invokevirtual #20
355: ldc           #18
357: invokevirtual #19
360: invokevirtual #22
363: iload         19
365: ifne          372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #23
376: return
Exception table:
from    to  target type
202   213   216   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test117
Start line: 5536
End line: 5573
Method source code: 
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes5 = whitelist3.getEnforcedAttributes("#text");
        java.lang.String str6 = org.jsoup.Jsoup.clean(":lt(32)=\"\"=\".\"", whitelist3);
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList12 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document10, "hi!");
        org.jsoup.nodes.Element element14 = document10.tagName("hi!");
        org.jsoup.nodes.Element element16 = document10.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings17 = document10.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings18 = outputSettings17.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings20 = outputSettings18.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = outputSettings18.indentAmount((int) (short) 0);
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = outputSettings18.indentAmount((int) (byte) 1);
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = outputSettings18.prettyPrint(true);
        int int27 = outputSettings26.indentAmount();
        int int28 = outputSettings26.indentAmount();
        java.lang.String str29 = org.jsoup.Jsoup.clean("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", "[[:gt(100)]$=:gt(100)]", whitelist3, outputSettings26);
        org.jsoup.nodes.Document.OutputSettings outputSettings31 = outputSettings26.prettyPrint(true);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(attributes5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + ":lt(32)=&quot;&quot;=&quot;.&quot;" + "'", str6, ":lt(32)=&quot;&quot;=&quot;.&quot;");
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(outputSettings17);
        org.junit.Assert.assertNotNull(outputSettings18);
        org.junit.Assert.assertNotNull(outputSettings20);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[!=hi!]" + "'", str29, "[!=hi!]");
        org.junit.Assert.assertNotNull(outputSettings31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #522
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc_w         #329
39: aload_1
40: invokestatic  #81
43: astore_3
44: ldc           #25
46: ldc           #12
48: invokestatic  #26
51: astore        4
53: ldc           #12
55: aload         4
57: ldc           #12
59: invokestatic  #27
62: astore        5
64: aload         4
66: ldc           #12
68: invokevirtual #28
71: astore        6
73: aload         4
75: ldc           #25
77: invokevirtual #29
80: astore        7
82: aload         4
84: invokevirtual #30
87: astore        8
89: aload         8
91: invokevirtual #205
94: astore        9
96: aload         9
98: iconst_0
99: invokevirtual #31
102: astore        10
104: aload         9
106: iconst_0
107: invokevirtual #189
110: astore        11
112: aload         9
114: iconst_1
115: invokevirtual #189
118: astore        12
120: aload         9
122: iconst_1
123: invokevirtual #31
126: astore        13
128: aload         13
130: invokevirtual #296
133: istore        14
135: aload         13
137: invokevirtual #296
140: istore        15
142: ldc           #136
144: ldc_w         #308
147: aload_1
148: aload         13
150: invokestatic  #33
153: astore        16
155: aload         13
157: iconst_1
158: invokevirtual #31
161: astore        17
163: aload_1
164: invokestatic  #15
167: aload_2
168: invokestatic  #15
171: new           #16
174: dup
175: invokespecial #17
178: ldc           #18
180: invokevirtual #19
183: aload_3
184: invokevirtual #19
187: ldc_w         #299
190: invokevirtual #19
193: invokevirtual #22
196: aload_3
197: ldc_w         #300
200: invokestatic  #68
203: aload         4
205: invokestatic  #15
208: aload         5
210: invokestatic  #15
213: aload         6
215: invokestatic  #15
218: aload         7
220: invokestatic  #15
223: aload         8
225: invokestatic  #15
228: aload         9
230: invokestatic  #15
233: aload         10
235: invokestatic  #15
238: aload         11
240: invokestatic  #15
243: aload         12
245: invokestatic  #15
248: aload         13
250: invokestatic  #15
253: new           #16
256: dup
257: invokespecial #17
260: ldc           #18
262: invokevirtual #19
265: iload         14
267: invokevirtual #134
270: ldc           #21
272: invokevirtual #19
275: iconst_1
276: invokevirtual #134
279: ldc           #18
281: invokevirtual #19
284: invokevirtual #22
287: iload         14
289: iconst_1
290: if_icmpne     297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #23
301: new           #16
304: dup
305: invokespecial #17
308: ldc           #18
310: invokevirtual #19
313: iload         15
315: invokevirtual #134
318: ldc           #21
320: invokevirtual #19
323: iconst_1
324: invokevirtual #134
327: ldc           #18
329: invokevirtual #19
332: invokevirtual #22
335: iload         15
337: iconst_1
338: if_icmpne     345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #23
349: new           #16
352: dup
353: invokespecial #17
356: ldc           #18
358: invokevirtual #19
361: aload         16
363: invokevirtual #19
366: ldc_w         #523
369: invokevirtual #19
372: invokevirtual #22
375: aload         16
377: ldc           #241
379: invokestatic  #68
382: aload         17
384: invokestatic  #15
387: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test118
Start line: 5576
End line: 5632
Method source code: 
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan23 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document26 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str27 = document26.ownText();
        org.jsoup.nodes.Node node30 = document26.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element38 = document34.tagName("hi!");
        org.jsoup.nodes.Element element40 = document34.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = document34.outputSettings();
        org.jsoup.select.Elements elements43 = document34.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element45 = document34.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element47 = document34.createElement(" hi!");
        org.jsoup.select.Elements elements49 = document34.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean50 = indexLessThan23.matches((org.jsoup.nodes.Element) document26, (org.jsoup.nodes.Element) document34);
        org.jsoup.nodes.Document document51 = cleaner3.clean(document34);
        org.jsoup.parser.Tag tag52 = document34.tag();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertNotNull(elements43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(elements49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(tag52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #524
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: new           #48
131: dup
132: iconst_m1
133: invokespecial #49
136: astore        13
138: ldc           #50
140: ldc           #51
142: invokestatic  #52
145: astore        14
147: aload         14
149: invokevirtual #53
152: astore        15
154: aload         14
156: ldc           #54
158: ldc           #55
160: invokevirtual #56
163: astore        16
165: ldc           #25
167: ldc           #12
169: invokestatic  #26
172: astore        17
174: ldc           #12
176: aload         17
178: ldc           #12
180: invokestatic  #27
183: astore        18
185: aload         17
187: ldc           #12
189: invokevirtual #28
192: astore        19
194: aload         17
196: ldc           #25
198: invokevirtual #29
201: astore        20
203: aload         17
205: invokevirtual #30
208: astore        21
210: aload         17
212: ldc           #12
214: invokevirtual #57
217: astore        22
219: aload         17
221: ldc           #58
223: invokevirtual #59
226: astore        23
228: aload         17
230: ldc           #60
232: invokevirtual #61
235: astore        24
237: aload         17
239: ldc           #38
241: invokevirtual #62
244: astore        25
246: aload         13
248: aload         14
250: aload         17
252: invokevirtual #63
255: istore        26
257: aload_3
258: aload         17
260: invokevirtual #47
263: astore        27
265: aload         17
267: invokevirtual #207
270: astore        28
272: aload_1
273: invokestatic  #15
276: aload_2
277: invokestatic  #15
280: aload         5
282: invokestatic  #15
285: aload         6
287: invokestatic  #15
290: aload         7
292: invokestatic  #15
295: aload         8
297: invokestatic  #15
300: aload         9
302: invokestatic  #15
305: aload         10
307: invokestatic  #15
310: new           #16
313: dup
314: invokespecial #17
317: ldc           #18
319: invokevirtual #19
322: iload         11
324: invokevirtual #20
327: ldc           #21
329: invokevirtual #19
332: iconst_0
333: invokevirtual #20
336: ldc           #18
338: invokevirtual #19
341: invokevirtual #22
344: iload         11
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #23
357: aload         12
359: invokestatic  #15
362: aload         14
364: invokestatic  #15
367: new           #16
370: dup
371: invokespecial #17
374: ldc           #18
376: invokevirtual #19
379: aload         15
381: invokevirtual #19
384: ldc           #67
386: invokevirtual #19
389: invokevirtual #22
392: aload         15
394: ldc           #25
396: invokestatic  #68
399: aload         16
401: invokestatic  #15
404: aload         17
406: invokestatic  #15
409: aload         18
411: invokestatic  #15
414: aload         19
416: invokestatic  #15
419: aload         20
421: invokestatic  #15
424: aload         21
426: invokestatic  #15
429: aload         22
431: invokestatic  #15
434: aload         23
436: invokestatic  #15
439: aload         24
441: invokestatic  #15
444: aload         25
446: invokestatic  #15
449: new           #16
452: dup
453: invokespecial #17
456: ldc           #18
458: invokevirtual #19
461: iload         26
463: invokevirtual #20
466: ldc           #21
468: invokevirtual #19
471: iconst_0
472: invokevirtual #20
475: ldc           #18
477: invokevirtual #19
480: invokevirtual #22
483: iload         26
485: ifne          492
488: iconst_1
489: goto          493
492: iconst_0
493: invokestatic  #23
496: aload         27
498: invokestatic  #15
501: aload         28
503: invokestatic  #15
506: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test119
Start line: 5635
End line: 5662
Method source code: 
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean21 = whitelist19.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist25 = whitelist19.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes29 = whitelist27.getEnforcedAttributes(".<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(attributes29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #525
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: ldc           #12
115: invokevirtual #83
118: istore        9
120: aload         8
122: ldc           #86
124: ldc           #239
126: ldc           #240
128: invokevirtual #11
131: astore        10
133: aload         10
135: iconst_0
136: invokevirtual #9
139: astore        11
141: aload         11
143: ldc           #32
145: invokevirtual #150
148: astore        12
150: aload_1
151: invokestatic  #15
154: aload_2
155: invokestatic  #15
158: new           #16
161: dup
162: invokespecial #17
165: ldc           #18
167: invokevirtual #19
170: aload_3
171: invokevirtual #19
174: ldc           #85
176: invokevirtual #19
179: invokevirtual #22
182: aload_3
183: ldc           #86
185: invokestatic  #68
188: new           #16
191: dup
192: invokespecial #17
195: ldc           #18
197: invokevirtual #19
200: iload         4
202: invokevirtual #20
205: ldc           #21
207: invokevirtual #19
210: iconst_0
211: invokevirtual #20
214: ldc           #18
216: invokevirtual #19
219: invokevirtual #22
222: iload         4
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #23
235: aload         5
237: invokestatic  #15
240: new           #16
243: dup
244: invokespecial #17
247: ldc           #18
249: invokevirtual #19
252: iload         6
254: invokevirtual #20
257: ldc           #21
259: invokevirtual #19
262: iconst_1
263: invokevirtual #20
266: ldc           #18
268: invokevirtual #19
271: invokevirtual #22
274: iload         6
276: iconst_1
277: if_icmpne     284
280: iconst_1
281: goto          285
284: iconst_0
285: invokestatic  #23
288: new           #16
291: dup
292: invokespecial #17
295: ldc           #18
297: invokevirtual #19
300: iload         7
302: invokevirtual #20
305: ldc           #21
307: invokevirtual #19
310: iconst_0
311: invokevirtual #20
314: ldc           #18
316: invokevirtual #19
319: invokevirtual #22
322: iload         7
324: ifne          331
327: iconst_1
328: goto          332
331: iconst_0
332: invokestatic  #23
335: aload         8
337: invokestatic  #15
340: new           #16
343: dup
344: invokespecial #17
347: ldc           #18
349: invokevirtual #19
352: iload         9
354: invokevirtual #20
357: ldc           #21
359: invokevirtual #19
362: iconst_0
363: invokevirtual #20
366: ldc           #18
368: invokevirtual #19
371: invokevirtual #22
374: iload         9
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #23
387: aload         10
389: invokestatic  #15
392: aload         11
394: invokestatic  #15
397: aload         12
399: invokestatic  #15
402: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test120
Start line: 5665
End line: 5730
Method source code: 
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parse("", ":contains(:matchesown(null");
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)=\"\"=\".\"", whitelist6);
        org.jsoup.nodes.Document document13 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList15 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document13, "hi!");
        org.jsoup.nodes.Element element17 = document13.tagName("hi!");
        org.jsoup.nodes.Element element19 = document13.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings20 = document13.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = outputSettings20.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = outputSettings21.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = outputSettings21.indentAmount((int) (short) 0);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings21.indentAmount((int) (byte) 1);
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings21.prettyPrint(true);
        int int30 = outputSettings29.indentAmount();
        int int31 = outputSettings29.indentAmount();
        java.lang.String str32 = org.jsoup.Jsoup.clean("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", "[[:gt(100)]$=:gt(100)]", whitelist6, outputSettings29);
        org.jsoup.nodes.Document document33 = document2.outputSettings(outputSettings29);
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList39 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document37, "hi!");
        org.jsoup.nodes.Element element41 = document37.tagName("hi!");
        org.jsoup.nodes.Element element43 = document37.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = document37.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = outputSettings44.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings47 = outputSettings45.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode48 = org.jsoup.nodes.Entities.EscapeMode.base;
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = outputSettings47.escapeMode(escapeMode48);
        org.jsoup.nodes.Entities.EscapeMode escapeMode50 = org.jsoup.nodes.Entities.EscapeMode.extended;
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = outputSettings49.escapeMode(escapeMode50);
        java.util.Map<java.lang.Character, java.lang.String> charMap52 = escapeMode50.getMap();
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings29.escapeMode(escapeMode50);
        org.junit.Assert.assertNotNull(document2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)=&quot;&quot;=&quot;.&quot;" + "'", str9, ":lt(32)=&quot;&quot;=&quot;.&quot;");
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(outputSettings20);
        org.junit.Assert.assertNotNull(outputSettings21);
        org.junit.Assert.assertNotNull(outputSettings23);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[!=hi!]" + "'", str32, "[!=hi!]");
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertNotNull(outputSettings44);
        org.junit.Assert.assertNotNull(outputSettings45);
        org.junit.Assert.assertNotNull(outputSettings47);
        org.junit.Assert.assertTrue("'" + escapeMode48 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode48.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertTrue("'" + escapeMode50 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.extended + "'", escapeMode50.equals(org.jsoup.nodes.Entities.EscapeMode.extended));
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(charMap52);
        org.junit.Assert.assertNotNull(outputSettings53);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #526
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc_w         #527
30: invokestatic  #26
33: astore_1
34: invokestatic  #118
37: astore_2
38: aload_2
39: ldc           #51
41: invokevirtual #150
44: astore_3
45: ldc_w         #329
48: aload_2
49: invokestatic  #81
52: astore        4
54: ldc           #25
56: ldc           #12
58: invokestatic  #26
61: astore        5
63: ldc           #12
65: aload         5
67: ldc           #12
69: invokestatic  #27
72: astore        6
74: aload         5
76: ldc           #12
78: invokevirtual #28
81: astore        7
83: aload         5
85: ldc           #25
87: invokevirtual #29
90: astore        8
92: aload         5
94: invokevirtual #30
97: astore        9
99: aload         9
101: invokevirtual #205
104: astore        10
106: aload         10
108: iconst_0
109: invokevirtual #31
112: astore        11
114: aload         10
116: iconst_0
117: invokevirtual #189
120: astore        12
122: aload         10
124: iconst_1
125: invokevirtual #189
128: astore        13
130: aload         10
132: iconst_1
133: invokevirtual #31
136: astore        14
138: aload         14
140: invokevirtual #296
143: istore        15
145: aload         14
147: invokevirtual #296
150: istore        16
152: ldc           #136
154: ldc_w         #308
157: aload_2
158: aload         14
160: invokestatic  #33
163: astore        17
165: aload_1
166: aload         14
168: invokevirtual #175
171: astore        18
173: ldc           #25
175: ldc           #12
177: invokestatic  #26
180: astore        19
182: ldc           #12
184: aload         19
186: ldc           #12
188: invokestatic  #27
191: astore        20
193: aload         19
195: ldc           #12
197: invokevirtual #28
200: astore        21
202: aload         19
204: ldc           #25
206: invokevirtual #29
209: astore        22
211: aload         19
213: invokevirtual #30
216: astore        23
218: aload         23
220: invokevirtual #205
223: astore        24
225: aload         24
227: iconst_0
228: invokevirtual #31
231: astore        25
233: getstatic     #381
236: astore        26
238: aload         25
240: aload         26
242: invokevirtual #190
245: astore        27
247: getstatic     #528
250: astore        28
252: aload         27
254: aload         28
256: invokevirtual #190
259: astore        29
261: aload         28
263: invokevirtual #529
266: astore        30
268: aload         14
270: aload         28
272: invokevirtual #190
275: astore        31
277: aload_1
278: invokestatic  #15
281: aload_2
282: invokestatic  #15
285: aload_3
286: invokestatic  #15
289: new           #16
292: dup
293: invokespecial #17
296: ldc           #18
298: invokevirtual #19
301: aload         4
303: invokevirtual #19
306: ldc_w         #299
309: invokevirtual #19
312: invokevirtual #22
315: aload         4
317: ldc_w         #300
320: invokestatic  #68
323: aload         5
325: invokestatic  #15
328: aload         6
330: invokestatic  #15
333: aload         7
335: invokestatic  #15
338: aload         8
340: invokestatic  #15
343: aload         9
345: invokestatic  #15
348: aload         10
350: invokestatic  #15
353: aload         11
355: invokestatic  #15
358: aload         12
360: invokestatic  #15
363: aload         13
365: invokestatic  #15
368: aload         14
370: invokestatic  #15
373: new           #16
376: dup
377: invokespecial #17
380: ldc           #18
382: invokevirtual #19
385: iload         15
387: invokevirtual #134
390: ldc           #21
392: invokevirtual #19
395: iconst_1
396: invokevirtual #134
399: ldc           #18
401: invokevirtual #19
404: invokevirtual #22
407: iload         15
409: iconst_1
410: if_icmpne     417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #23
421: new           #16
424: dup
425: invokespecial #17
428: ldc           #18
430: invokevirtual #19
433: iload         16
435: invokevirtual #134
438: ldc           #21
440: invokevirtual #19
443: iconst_1
444: invokevirtual #134
447: ldc           #18
449: invokevirtual #19
452: invokevirtual #22
455: iload         16
457: iconst_1
458: if_icmpne     465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #23
469: new           #16
472: dup
473: invokespecial #17
476: ldc           #18
478: invokevirtual #19
481: aload         17
483: invokevirtual #19
486: ldc_w         #523
489: invokevirtual #19
492: invokevirtual #22
495: aload         17
497: ldc           #241
499: invokestatic  #68
502: aload         18
504: invokestatic  #15
507: aload         19
509: invokestatic  #15
512: aload         20
514: invokestatic  #15
517: aload         21
519: invokestatic  #15
522: aload         22
524: invokestatic  #15
527: aload         23
529: invokestatic  #15
532: aload         24
534: invokestatic  #15
537: aload         25
539: invokestatic  #15
542: new           #16
545: dup
546: invokespecial #17
549: ldc           #18
551: invokevirtual #19
554: aload         26
556: invokevirtual #223
559: ldc           #21
561: invokevirtual #19
564: getstatic     #381
567: invokevirtual #223
570: ldc           #18
572: invokevirtual #19
575: invokevirtual #22
578: aload         26
580: getstatic     #381
583: invokevirtual #385
586: invokestatic  #23
589: aload         27
591: invokestatic  #15
594: new           #16
597: dup
598: invokespecial #17
601: ldc           #18
603: invokevirtual #19
606: aload         28
608: invokevirtual #223
611: ldc           #21
613: invokevirtual #19
616: getstatic     #528
619: invokevirtual #223
622: ldc           #18
624: invokevirtual #19
627: invokevirtual #22
630: aload         28
632: getstatic     #528
635: invokevirtual #385
638: invokestatic  #23
641: aload         29
643: invokestatic  #15
646: aload         30
648: invokestatic  #15
651: aload         31
653: invokestatic  #15
656: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test121
Start line: 5733
End line: 5806
Method source code: 
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str7 = org.jsoup.Jsoup.clean(":lt(32)", whitelist6);
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray18 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist19 = whitelist6.addTags(strArray18);
        org.jsoup.safety.Whitelist whitelist20 = whitelist2.addAttributes(":gt(100)", strArray18);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str27 = org.jsoup.Jsoup.clean(":lt(32)", whitelist26);
        boolean boolean29 = whitelist26.isSafeTag("");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element36 = document33.empty();
        org.jsoup.nodes.Element element38 = document33.removeClass("hi!");
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.tagName("hi!");
        org.jsoup.nodes.Element element48 = document42.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = document42.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = outputSettings49.prettyPrint(false);
        org.jsoup.nodes.Document document52 = document33.outputSettings(outputSettings51);
        java.lang.String str53 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist26, outputSettings51);
        org.jsoup.safety.Whitelist whitelist55 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist57 = whitelist55.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist59 = whitelist57.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist63 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str64 = org.jsoup.Jsoup.clean(":lt(32)", whitelist63);
        org.jsoup.safety.Whitelist whitelist68 = whitelist63.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray75 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist76 = whitelist63.addTags(strArray75);
        org.jsoup.safety.Whitelist whitelist77 = whitelist59.addProtocols(":matchesOwn(null", "hi!", strArray75);
        org.jsoup.safety.Whitelist whitelist78 = whitelist26.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray75);
        org.jsoup.safety.Whitelist whitelist79 = whitelist20.addProtocols("<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", "[hi!$=<html> <head></head> <body></body> </html>]", strArray75);
        org.jsoup.safety.Cleaner cleaner80 = new org.jsoup.safety.Cleaner(whitelist79);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + ":lt(32)" + "'", str7, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":lt(32)" + "'", str27, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[:lt(32)]" + "'", str53, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ":lt(32)" + "'", str64, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(whitelist76);
        org.junit.Assert.assertNotNull(whitelist77);
        org.junit.Assert.assertNotNull(whitelist78);
        org.junit.Assert.assertNotNull(whitelist79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #530
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #118
47: astore        4
49: ldc           #43
51: aload         4
53: invokestatic  #81
56: astore        5
58: aload         4
60: ldc           #43
62: ldc           #12
64: ldc           #32
66: invokevirtual #11
69: astore        6
71: bipush        6
73: anewarray     #119
76: dup
77: iconst_0
78: ldc           #109
80: aastore
81: dup
82: iconst_1
83: ldc           #10
85: aastore
86: dup
87: iconst_2
88: ldc           #13
90: aastore
91: dup
92: iconst_3
93: ldc           #50
95: aastore
96: dup
97: iconst_4
98: ldc           #12
100: aastore
101: dup
102: iconst_5
103: ldc           #120
105: aastore
106: astore        7
108: aload         4
110: aload         7
112: invokevirtual #121
115: astore        8
117: aload_2
118: ldc           #92
120: aload         7
122: invokevirtual #127
125: astore        9
127: invokestatic  #118
130: astore        10
132: ldc           #43
134: aload         10
136: invokestatic  #81
139: astore        11
141: aload         10
143: ldc           #25
145: invokevirtual #83
148: istore        12
150: ldc           #25
152: ldc           #12
154: invokestatic  #26
157: astore        13
159: ldc           #12
161: aload         13
163: ldc           #12
165: invokestatic  #27
168: astore        14
170: aload         13
172: invokevirtual #103
175: astore        15
177: aload         13
179: ldc           #12
181: invokevirtual #59
184: astore        16
186: ldc           #25
188: ldc           #12
190: invokestatic  #26
193: astore        17
195: ldc           #12
197: aload         17
199: ldc           #12
201: invokestatic  #27
204: astore        18
206: aload         17
208: ldc           #12
210: invokevirtual #28
213: astore        19
215: aload         17
217: ldc           #25
219: invokevirtual #29
222: astore        20
224: aload         17
226: invokevirtual #30
229: astore        21
231: aload         21
233: iconst_0
234: invokevirtual #31
237: astore        22
239: aload         13
241: aload         22
243: invokevirtual #175
246: astore        23
248: ldc           #58
250: ldc           #126
252: aload         10
254: aload         22
256: invokestatic  #33
259: astore        24
261: invokestatic  #8
264: astore        25
266: aload         25
268: iconst_1
269: invokevirtual #9
272: astore        26
274: aload         26
276: iconst_0
277: invokevirtual #9
280: astore        27
282: invokestatic  #118
285: astore        28
287: ldc           #43
289: aload         28
291: invokestatic  #81
294: astore        29
296: aload         28
298: ldc           #43
300: ldc           #12
302: ldc           #32
304: invokevirtual #11
307: astore        30
309: bipush        6
311: anewarray     #119
314: dup
315: iconst_0
316: ldc           #109
318: aastore
319: dup
320: iconst_1
321: ldc           #10
323: aastore
324: dup
325: iconst_2
326: ldc           #13
328: aastore
329: dup
330: iconst_3
331: ldc           #50
333: aastore
334: dup
335: iconst_4
336: ldc           #12
338: aastore
339: dup
340: iconst_5
341: ldc           #120
343: aastore
344: astore        31
346: aload         28
348: aload         31
350: invokevirtual #121
353: astore        32
355: aload         27
357: ldc           #38
359: ldc           #12
361: aload         31
363: invokevirtual #122
366: astore        33
368: aload         10
370: ldc           #109
372: aload         31
374: invokevirtual #127
377: astore        34
379: aload         9
381: ldc           #55
383: ldc           #183
385: aload         31
387: invokevirtual #122
390: astore        35
392: new           #40
395: dup
396: aload         35
398: invokespecial #41
401: astore        36
403: aload_1
404: invokestatic  #15
407: aload_2
408: invokestatic  #15
411: aload         4
413: invokestatic  #15
416: new           #16
419: dup
420: invokespecial #17
423: ldc           #18
425: invokevirtual #19
428: aload         5
430: invokevirtual #19
433: ldc           #128
435: invokevirtual #19
438: invokevirtual #22
441: aload         5
443: ldc           #43
445: invokestatic  #68
448: aload         6
450: invokestatic  #15
453: aload         7
455: invokestatic  #15
458: aload         8
460: invokestatic  #15
463: aload         9
465: invokestatic  #15
468: aload         10
470: invokestatic  #15
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: aload         11
487: invokevirtual #19
490: ldc           #128
492: invokevirtual #19
495: invokevirtual #22
498: aload         11
500: ldc           #43
502: invokestatic  #68
505: new           #16
508: dup
509: invokespecial #17
512: ldc           #18
514: invokevirtual #19
517: iload         12
519: invokevirtual #20
522: ldc           #21
524: invokevirtual #19
527: iconst_0
528: invokevirtual #20
531: ldc           #18
533: invokevirtual #19
536: invokevirtual #22
539: iload         12
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #23
552: aload         13
554: invokestatic  #15
557: aload         14
559: invokestatic  #15
562: aload         15
564: invokestatic  #15
567: aload         16
569: invokestatic  #15
572: aload         17
574: invokestatic  #15
577: aload         18
579: invokestatic  #15
582: aload         19
584: invokestatic  #15
587: aload         20
589: invokestatic  #15
592: aload         21
594: invokestatic  #15
597: aload         22
599: invokestatic  #15
602: aload         23
604: invokestatic  #15
607: new           #16
610: dup
611: invokespecial #17
614: ldc           #18
616: invokevirtual #19
619: aload         24
621: invokevirtual #19
624: ldc           #184
626: invokevirtual #19
629: invokevirtual #22
632: aload         24
634: ldc           #58
636: invokestatic  #68
639: aload         25
641: invokestatic  #15
644: aload         26
646: invokestatic  #15
649: aload         27
651: invokestatic  #15
654: aload         28
656: invokestatic  #15
659: new           #16
662: dup
663: invokespecial #17
666: ldc           #18
668: invokevirtual #19
671: aload         29
673: invokevirtual #19
676: ldc           #128
678: invokevirtual #19
681: invokevirtual #22
684: aload         29
686: ldc           #43
688: invokestatic  #68
691: aload         30
693: invokestatic  #15
696: aload         31
698: invokestatic  #15
701: aload         32
703: invokestatic  #15
706: aload         33
708: invokestatic  #15
711: aload         34
713: invokestatic  #15
716: aload         35
718: invokestatic  #15
721: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test122
Start line: 5809
End line: 5908
Method source code: 
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element29 = document26.empty();
        org.jsoup.nodes.Element element31 = document26.removeClass("hi!");
        org.jsoup.select.Elements elements34 = document26.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        objList0.push((java.lang.Object) "[:lt(32)]");
        org.jsoup.select.Evaluator.Attribute attribute37 = new org.jsoup.select.Evaluator.Attribute(":lt(32)");
        org.jsoup.nodes.Element element38 = null;
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parse("", ":lt(32)");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = document41.dataset();
        java.lang.String str43 = document41.outerHtml();
        boolean boolean44 = attribute37.matches(element38, (org.jsoup.nodes.Element) document41);
        org.jsoup.safety.Whitelist whitelist45 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist47 = whitelist45.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner48 = new org.jsoup.safety.Cleaner(whitelist47);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining51 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document53 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        boolean boolean65 = attributeWithValueContaining51.matches((org.jsoup.nodes.Element) document53, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document66 = cleaner48.clean(document57);
        org.jsoup.nodes.Document document70 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList72 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document70, "hi!");
        org.jsoup.nodes.Element element74 = document70.tagName("hi!");
        org.jsoup.nodes.Element element76 = document70.append("");
        java.lang.String str77 = document70.toString();
        java.lang.String str78 = document70.id();
        org.jsoup.nodes.Node node79 = document70.parent();
        org.jsoup.nodes.Document document80 = cleaner48.clean(document70);
        org.jsoup.nodes.Document document84 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList86 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document84, "hi!");
        org.jsoup.nodes.Element element88 = document84.text("");
        boolean boolean89 = attribute37.matches((org.jsoup.nodes.Element) document70, (org.jsoup.nodes.Element) document84);
        boolean boolean90 = objList0.offerLast((java.lang.Object) document70);
        org.jsoup.safety.Whitelist.AttributeKey attributeKey92 = new org.jsoup.safety.Whitelist.AttributeKey(":lt(1)");
        boolean boolean93 = objList0.offerLast((java.lang.Object) attributeKey92);
        java.lang.String str94 = attributeKey92.toString();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(elements34);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str43, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str77, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNotNull(document80);
        org.junit.Assert.assertNotNull(document84);
        org.junit.Assert.assertNotNull(nodeList86);
        org.junit.Assert.assertNotNull(element88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ":lt(1)" + "'", str94, ":lt(1)");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #531
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        12
132: ldc           #12
134: aload         12
136: ldc           #12
138: invokestatic  #27
141: astore        13
143: aload         12
145: invokevirtual #103
148: astore        14
150: aload         12
152: ldc           #12
154: invokevirtual #59
157: astore        15
159: aload         12
161: ldc           #10
163: ldc           #58
165: invokevirtual #153
168: astore        16
170: aload_1
171: ldc           #58
173: invokevirtual #401
176: new           #532
179: dup
180: ldc           #43
182: invokespecial #533
185: astore        17
187: aconst_null
188: astore        18
190: ldc           #25
192: ldc           #43
194: invokestatic  #26
197: astore        19
199: aload         19
201: invokevirtual #534
204: astore        20
206: aload         19
208: invokevirtual #535
211: astore        21
213: aload         17
215: aload         18
217: aload         19
219: invokevirtual #536
222: istore        22
224: invokestatic  #8
227: astore        23
229: aload         23
231: iconst_1
232: invokevirtual #9
235: astore        24
237: new           #40
240: dup
241: aload         24
243: invokespecial #41
246: astore        25
248: new           #42
251: dup
252: ldc           #43
254: ldc           #32
256: invokespecial #44
259: astore        26
261: ldc           #12
263: invokestatic  #45
266: astore        27
268: ldc           #25
270: ldc           #12
272: invokestatic  #26
275: astore        28
277: ldc           #12
279: aload         28
281: ldc           #12
283: invokestatic  #27
286: astore        29
288: aload         28
290: ldc           #12
292: invokevirtual #28
295: astore        30
297: aload         28
299: ldc           #25
301: invokevirtual #29
304: astore        31
306: aload         28
308: invokevirtual #30
311: astore        32
313: aload         26
315: aload         27
317: aload         28
319: invokevirtual #46
322: istore        33
324: aload         25
326: aload         28
328: invokevirtual #47
331: astore        34
333: ldc           #25
335: ldc           #12
337: invokestatic  #26
340: astore        35
342: ldc           #12
344: aload         35
346: ldc           #12
348: invokestatic  #27
351: astore        36
353: aload         35
355: ldc           #12
357: invokevirtual #28
360: astore        37
362: aload         35
364: ldc           #25
366: invokevirtual #29
369: astore        38
371: aload         35
373: invokevirtual #72
376: astore        39
378: aload         35
380: invokevirtual #73
383: astore        40
385: aload         35
387: invokevirtual #74
390: astore        41
392: aload         25
394: aload         35
396: invokevirtual #47
399: astore        42
401: ldc           #25
403: ldc           #12
405: invokestatic  #26
408: astore        43
410: ldc           #12
412: aload         43
414: ldc           #12
416: invokestatic  #27
419: astore        44
421: aload         43
423: ldc           #25
425: invokevirtual #64
428: astore        45
430: aload         17
432: aload         35
434: aload         43
436: invokevirtual #536
439: istore        46
441: aload_1
442: aload         35
444: invokevirtual #282
447: istore        47
449: new           #537
452: dup
453: ldc_w         #366
456: invokespecial #538
459: astore        48
461: aload_1
462: aload         48
464: invokevirtual #282
467: istore        49
469: aload         48
471: invokevirtual #539
474: astore        50
476: aload_2
477: invokestatic  #15
480: aload_3
481: invokestatic  #15
484: aload         4
486: invokestatic  #15
489: aload         5
491: invokestatic  #15
494: aload         6
496: invokestatic  #15
499: aload         7
501: invokestatic  #15
504: aload         8
506: invokestatic  #15
509: aload         9
511: invokestatic  #15
514: aload         10
516: invokestatic  #15
519: aload         11
521: invokestatic  #15
524: aload         12
526: invokestatic  #15
529: aload         13
531: invokestatic  #15
534: aload         14
536: invokestatic  #15
539: aload         15
541: invokestatic  #15
544: aload         16
546: invokestatic  #15
549: aload         19
551: invokestatic  #15
554: aload         20
556: invokestatic  #15
559: new           #16
562: dup
563: invokespecial #17
566: ldc           #18
568: invokevirtual #19
571: aload         21
573: invokevirtual #19
576: ldc           #78
578: invokevirtual #19
581: invokevirtual #22
584: aload         21
586: ldc           #10
588: invokestatic  #68
591: new           #16
594: dup
595: invokespecial #17
598: ldc           #18
600: invokevirtual #19
603: iload         22
605: invokevirtual #20
608: ldc           #21
610: invokevirtual #19
613: iconst_0
614: invokevirtual #20
617: ldc           #18
619: invokevirtual #19
622: invokevirtual #22
625: iload         22
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #23
638: aload         23
640: invokestatic  #15
643: aload         24
645: invokestatic  #15
648: aload         27
650: invokestatic  #15
653: aload         28
655: invokestatic  #15
658: aload         29
660: invokestatic  #15
663: aload         30
665: invokestatic  #15
668: aload         31
670: invokestatic  #15
673: aload         32
675: invokestatic  #15
678: new           #16
681: dup
682: invokespecial #17
685: ldc           #18
687: invokevirtual #19
690: iload         33
692: invokevirtual #20
695: ldc           #21
697: invokevirtual #19
700: iconst_0
701: invokevirtual #20
704: ldc           #18
706: invokevirtual #19
709: invokevirtual #22
712: iload         33
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #23
725: aload         34
727: invokestatic  #15
730: aload         35
732: invokestatic  #15
735: aload         36
737: invokestatic  #15
740: aload         37
742: invokestatic  #15
745: aload         38
747: invokestatic  #15
750: new           #16
753: dup
754: invokespecial #17
757: ldc           #18
759: invokevirtual #19
762: aload         39
764: invokevirtual #19
767: ldc           #78
769: invokevirtual #19
772: invokevirtual #22
775: aload         39
777: ldc           #10
779: invokestatic  #68
782: new           #16
785: dup
786: invokespecial #17
789: ldc           #18
791: invokevirtual #19
794: aload         40
796: invokevirtual #19
799: ldc           #67
801: invokevirtual #19
804: invokevirtual #22
807: aload         40
809: ldc           #25
811: invokestatic  #68
814: aload         41
816: invokestatic  #79
819: aload         42
821: invokestatic  #15
824: aload         43
826: invokestatic  #15
829: aload         44
831: invokestatic  #15
834: aload         45
836: invokestatic  #15
839: new           #16
842: dup
843: invokespecial #17
846: ldc           #18
848: invokevirtual #19
851: iload         46
853: invokevirtual #20
856: ldc           #21
858: invokevirtual #19
861: iconst_0
862: invokevirtual #20
865: ldc           #18
867: invokevirtual #19
870: invokevirtual #22
873: iload         46
875: ifne          882
878: iconst_1
879: goto          883
882: iconst_0
883: invokestatic  #23
886: new           #16
889: dup
890: invokespecial #17
893: ldc           #18
895: invokevirtual #19
898: iload         47
900: invokevirtual #20
903: ldc           #21
905: invokevirtual #19
908: iconst_1
909: invokevirtual #20
912: ldc           #18
914: invokevirtual #19
917: invokevirtual #22
920: iload         47
922: iconst_1
923: if_icmpne     930
926: iconst_1
927: goto          931
930: iconst_0
931: invokestatic  #23
934: new           #16
937: dup
938: invokespecial #17
941: ldc           #18
943: invokevirtual #19
946: iload         49
948: invokevirtual #20
951: ldc           #21
953: invokevirtual #19
956: iconst_1
957: invokevirtual #20
960: ldc           #18
962: invokevirtual #19
965: invokevirtual #22
968: iload         49
970: iconst_1
971: if_icmpne     978
974: iconst_1
975: goto          979
978: iconst_0
979: invokestatic  #23
982: new           #16
985: dup
986: invokespecial #17
989: ldc           #18
991: invokevirtual #19
994: aload         50
996: invokevirtual #19
999: ldc_w         #540
1002: invokevirtual #19
1005: invokevirtual #22
1008: aload         50
1010: ldc_w         #366
1013: invokestatic  #68
1016: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test123
Start line: 5911
End line: 5972
Method source code: 
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList42 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document40, "hi!");
        org.jsoup.nodes.Element element44 = document40.tagName("hi!");
        org.jsoup.nodes.Element element46 = document40.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings47 = document40.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = outputSettings47.prettyPrint(false);
        boolean boolean50 = outputSettings49.prettyPrint();
        org.jsoup.nodes.Document.OutputSettings outputSettings52 = outputSettings49.prettyPrint(false);
        boolean boolean53 = tag36.equals((java.lang.Object) outputSettings52);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(nodeList42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(outputSettings47);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(outputSettings52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #541
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: ldc           #25
204: ldc           #12
206: invokestatic  #26
209: astore        22
211: ldc           #12
213: aload         22
215: ldc           #12
217: invokestatic  #27
220: astore        23
222: aload         22
224: ldc           #12
226: invokevirtual #28
229: astore        24
231: aload         22
233: ldc           #25
235: invokevirtual #29
238: astore        25
240: aload         22
242: invokevirtual #30
245: astore        26
247: aload         26
249: iconst_0
250: invokevirtual #31
253: astore        27
255: aload         27
257: invokevirtual #461
260: istore        28
262: aload         27
264: iconst_0
265: invokevirtual #31
268: astore        29
270: aload         21
272: aload         29
274: invokevirtual #428
277: istore        30
279: aload_1
280: invokestatic  #15
283: aload_2
284: invokestatic  #15
287: aload         5
289: invokestatic  #15
292: aload         6
294: invokestatic  #15
297: aload         7
299: invokestatic  #15
302: aload         8
304: invokestatic  #15
307: aload         9
309: invokestatic  #15
312: aload         10
314: invokestatic  #15
317: new           #16
320: dup
321: invokespecial #17
324: ldc           #18
326: invokevirtual #19
329: iload         11
331: invokevirtual #20
334: ldc           #21
336: invokevirtual #19
339: iconst_0
340: invokevirtual #20
343: ldc           #18
345: invokevirtual #19
348: invokevirtual #22
351: iload         11
353: ifne          360
356: iconst_1
357: goto          361
360: iconst_0
361: invokestatic  #23
364: aload         12
366: invokestatic  #15
369: aload         13
371: invokestatic  #15
374: aload         14
376: invokestatic  #15
379: aload         15
381: invokestatic  #15
384: aload         16
386: invokestatic  #15
389: new           #16
392: dup
393: invokespecial #17
396: ldc           #18
398: invokevirtual #19
401: aload         17
403: invokevirtual #19
406: ldc           #78
408: invokevirtual #19
411: invokevirtual #22
414: aload         17
416: ldc           #10
418: invokestatic  #68
421: new           #16
424: dup
425: invokespecial #17
428: ldc           #18
430: invokevirtual #19
433: aload         18
435: invokevirtual #19
438: ldc           #67
440: invokevirtual #19
443: invokevirtual #22
446: aload         18
448: ldc           #25
450: invokestatic  #68
453: aload         19
455: invokestatic  #79
458: aload         20
460: invokestatic  #15
463: aload         21
465: invokestatic  #15
468: aload         22
470: invokestatic  #15
473: aload         23
475: invokestatic  #15
478: aload         24
480: invokestatic  #15
483: aload         25
485: invokestatic  #15
488: aload         26
490: invokestatic  #15
493: aload         27
495: invokestatic  #15
498: new           #16
501: dup
502: invokespecial #17
505: ldc           #18
507: invokevirtual #19
510: iload         28
512: invokevirtual #20
515: ldc           #21
517: invokevirtual #19
520: iconst_0
521: invokevirtual #20
524: ldc           #18
526: invokevirtual #19
529: invokevirtual #22
532: iload         28
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #23
545: aload         29
547: invokestatic  #15
550: new           #16
553: dup
554: invokespecial #17
557: ldc           #18
559: invokevirtual #19
562: iload         30
564: invokevirtual #20
567: ldc           #21
569: invokevirtual #19
572: iconst_0
573: invokevirtual #20
576: ldc           #18
578: invokevirtual #19
581: invokevirtual #22
584: iload         30
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #23
597: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test124
Start line: 5975
End line: 6048
Method source code: 
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str4 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist8 = whitelist3.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist12 = whitelist10.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist16 = whitelist10.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist20 = whitelist10.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str21 = org.jsoup.Jsoup.clean("hi!", whitelist10);
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str32 = org.jsoup.Jsoup.clean(":lt(32)", whitelist31);
        org.jsoup.safety.Whitelist whitelist36 = whitelist31.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray43 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist44 = whitelist31.addTags(strArray43);
        org.jsoup.safety.Whitelist whitelist45 = whitelist27.addProtocols(":matchesOwn(null", "hi!", strArray43);
        java.lang.String[] strArray54 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean55 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray54);
        org.jsoup.safety.Whitelist whitelist56 = whitelist45.addProtocols("\n<!--hi!-->", "#document", strArray54);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray54);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray54);
        org.jsoup.safety.Whitelist whitelist59 = whitelist10.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray54);
        org.jsoup.safety.Whitelist whitelist60 = whitelist3.addTags(strArray54);
        boolean boolean61 = org.jsoup.Jsoup.isValid("", whitelist3);
        org.jsoup.safety.Whitelist whitelist63 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist65 = whitelist63.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner66 = new org.jsoup.safety.Cleaner(whitelist65);
        org.jsoup.safety.Whitelist whitelist69 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str70 = org.jsoup.Jsoup.clean(":lt(32)", whitelist69);
        org.jsoup.safety.Whitelist whitelist74 = whitelist69.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray81 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist82 = whitelist69.addTags(strArray81);
        org.jsoup.safety.Whitelist whitelist83 = whitelist65.addAttributes(":gt(100)", strArray81);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray81);
        org.jsoup.safety.Whitelist whitelist85 = whitelist3.addAttributes("<!DOCTYPE [hi!=.<html> <head></head> <body></body> </html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">", strArray81);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[hi!$=   ]" + "'", str4, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ":lt(32)" + "'", str32, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ":lt(32)" + "'", str70, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist74);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(whitelist85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #542
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: invokestatic  #8
55: astore        5
57: aload         5
59: iconst_1
60: invokevirtual #9
63: astore        6
65: aload         5
67: ldc           #10
69: ldc           #10
71: ldc           #10
73: invokevirtual #11
76: astore        7
78: aload         5
80: ldc           #12
82: ldc           #13
84: ldc           #12
86: invokevirtual #11
89: astore        8
91: ldc           #12
93: aload         5
95: invokestatic  #81
98: astore        9
100: invokestatic  #8
103: astore        10
105: aload         10
107: iconst_1
108: invokevirtual #9
111: astore        11
113: aload         11
115: iconst_0
116: invokevirtual #9
119: astore        12
121: invokestatic  #118
124: astore        13
126: ldc           #43
128: aload         13
130: invokestatic  #81
133: astore        14
135: aload         13
137: ldc           #43
139: ldc           #12
141: ldc           #32
143: invokevirtual #11
146: astore        15
148: bipush        6
150: anewarray     #119
153: dup
154: iconst_0
155: ldc           #109
157: aastore
158: dup
159: iconst_1
160: ldc           #10
162: aastore
163: dup
164: iconst_2
165: ldc           #13
167: aastore
168: dup
169: iconst_3
170: ldc           #50
172: aastore
173: dup
174: iconst_4
175: ldc           #12
177: aastore
178: dup
179: iconst_5
180: ldc           #120
182: aastore
183: astore        16
185: aload         13
187: aload         16
189: invokevirtual #121
192: astore        17
194: aload         12
196: ldc           #38
198: ldc           #12
200: aload         16
202: invokevirtual #122
205: astore        18
207: iconst_5
208: anewarray     #119
211: dup
212: iconst_0
213: ldc           #13
215: aastore
216: dup
217: iconst_1
218: ldc           #32
220: aastore
221: dup
222: iconst_2
223: ldc           #10
225: aastore
226: dup
227: iconst_3
228: ldc           #43
230: aastore
231: dup
232: iconst_4
233: ldc           #58
235: aastore
236: astore        19
238: ldc           #10
240: aload         19
242: invokestatic  #123
245: istore        20
247: aload         18
249: ldc           #84
251: ldc           #13
253: aload         19
255: invokevirtual #122
258: astore        21
260: aload         19
262: checkcast     #124
265: invokestatic  #125
268: aload         19
270: checkcast     #124
273: invokestatic  #125
276: aload         5
278: ldc           #249
280: aload         19
282: invokevirtual #127
285: astore        22
287: aload_1
288: aload         19
290: invokevirtual #121
293: astore        23
295: ldc           #25
297: aload_1
298: invokestatic  #14
301: istore        24
303: invokestatic  #8
306: astore        25
308: aload         25
310: iconst_1
311: invokevirtual #9
314: astore        26
316: new           #40
319: dup
320: aload         26
322: invokespecial #41
325: astore        27
327: invokestatic  #118
330: astore        28
332: ldc           #43
334: aload         28
336: invokestatic  #81
339: astore        29
341: aload         28
343: ldc           #43
345: ldc           #12
347: ldc           #32
349: invokevirtual #11
352: astore        30
354: bipush        6
356: anewarray     #119
359: dup
360: iconst_0
361: ldc           #109
363: aastore
364: dup
365: iconst_1
366: ldc           #10
368: aastore
369: dup
370: iconst_2
371: ldc           #13
373: aastore
374: dup
375: iconst_3
376: ldc           #50
378: aastore
379: dup
380: iconst_4
381: ldc           #12
383: aastore
384: dup
385: iconst_5
386: ldc           #120
388: aastore
389: astore        31
391: aload         28
393: aload         31
395: invokevirtual #121
398: astore        32
400: aload         26
402: ldc           #92
404: aload         31
406: invokevirtual #127
409: astore        33
411: aload         31
413: checkcast     #124
416: invokestatic  #125
419: aload_1
420: ldc_w         #543
423: aload         31
425: invokevirtual #127
428: astore        34
430: aload_1
431: invokestatic  #15
434: new           #16
437: dup
438: invokespecial #17
441: ldc           #18
443: invokevirtual #19
446: aload_2
447: invokevirtual #19
450: ldc           #111
452: invokevirtual #19
455: invokevirtual #22
458: aload_2
459: ldc           #65
461: invokestatic  #68
464: new           #16
467: dup
468: invokespecial #17
471: ldc           #18
473: invokevirtual #19
476: iload_3
477: invokevirtual #20
480: ldc           #21
482: invokevirtual #19
485: iconst_0
486: invokevirtual #20
489: ldc           #18
491: invokevirtual #19
494: invokevirtual #22
497: iload_3
498: ifne          505
501: iconst_1
502: goto          506
505: iconst_0
506: invokestatic  #23
509: aload         4
511: invokestatic  #15
514: aload         5
516: invokestatic  #15
519: aload         6
521: invokestatic  #15
524: aload         7
526: invokestatic  #15
529: aload         8
531: invokestatic  #15
534: new           #16
537: dup
538: invokespecial #17
541: ldc           #18
543: invokevirtual #19
546: aload         9
548: invokevirtual #19
551: ldc           #211
553: invokevirtual #19
556: invokevirtual #22
559: aload         9
561: ldc           #12
563: invokestatic  #68
566: aload         10
568: invokestatic  #15
571: aload         11
573: invokestatic  #15
576: aload         12
578: invokestatic  #15
581: aload         13
583: invokestatic  #15
586: new           #16
589: dup
590: invokespecial #17
593: ldc           #18
595: invokevirtual #19
598: aload         14
600: invokevirtual #19
603: ldc           #128
605: invokevirtual #19
608: invokevirtual #22
611: aload         14
613: ldc           #43
615: invokestatic  #68
618: aload         15
620: invokestatic  #15
623: aload         16
625: invokestatic  #15
628: aload         17
630: invokestatic  #15
633: aload         18
635: invokestatic  #15
638: aload         19
640: invokestatic  #15
643: new           #16
646: dup
647: invokespecial #17
650: ldc           #18
652: invokevirtual #19
655: iload         20
657: invokevirtual #20
660: ldc           #21
662: invokevirtual #19
665: iconst_1
666: invokevirtual #20
669: ldc           #18
671: invokevirtual #19
674: invokevirtual #22
677: iload         20
679: iconst_1
680: if_icmpne     687
683: iconst_1
684: goto          688
687: iconst_0
688: invokestatic  #23
691: aload         21
693: invokestatic  #15
696: aload         22
698: invokestatic  #15
701: aload         23
703: invokestatic  #15
706: new           #16
709: dup
710: invokespecial #17
713: ldc           #18
715: invokevirtual #19
718: iload         24
720: invokevirtual #20
723: ldc           #21
725: invokevirtual #19
728: iconst_1
729: invokevirtual #20
732: ldc           #18
734: invokevirtual #19
737: invokevirtual #22
740: iload         24
742: iconst_1
743: if_icmpne     750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #23
754: aload         25
756: invokestatic  #15
759: aload         26
761: invokestatic  #15
764: aload         28
766: invokestatic  #15
769: new           #16
772: dup
773: invokespecial #17
776: ldc           #18
778: invokevirtual #19
781: aload         29
783: invokevirtual #19
786: ldc           #128
788: invokevirtual #19
791: invokevirtual #22
794: aload         29
796: ldc           #43
798: invokestatic  #68
801: aload         30
803: invokestatic  #15
806: aload         31
808: invokestatic  #15
811: aload         32
813: invokestatic  #15
816: aload         33
818: invokestatic  #15
821: aload         34
823: invokestatic  #15
826: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test125
Start line: 6051
End line: 6089
Method source code: 
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist9 = whitelist7.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str14 = org.jsoup.Jsoup.clean(":lt(32)", whitelist13);
        org.jsoup.safety.Whitelist whitelist18 = whitelist13.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray25 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist26 = whitelist13.addTags(strArray25);
        org.jsoup.safety.Whitelist whitelist27 = whitelist9.addProtocols(":matchesOwn(null", "hi!", strArray25);
        org.jsoup.safety.Whitelist whitelist28 = whitelist2.addAttributes("[^hi!]", strArray25);
        org.jsoup.safety.Whitelist whitelist32 = whitelist2.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.nodes.Attributes attributes34 = whitelist2.getEnforcedAttributes("");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist38 = whitelist2.addEnforcedAttribute("", "[:gt(100)]=\"\"", "<html>\n <head></head>\n <body>\n  [:lt(32)]\n </body>\n</html>");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + ":lt(32)" + "'", str14, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(attributes34);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #544
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: invokestatic  #8
41: astore_3
42: aload_3
43: iconst_1
44: invokevirtual #9
47: astore        4
49: aload         4
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #118
60: astore        6
62: ldc           #43
64: aload         6
66: invokestatic  #81
69: astore        7
71: aload         6
73: ldc           #43
75: ldc           #12
77: ldc           #32
79: invokevirtual #11
82: astore        8
84: bipush        6
86: anewarray     #119
89: dup
90: iconst_0
91: ldc           #109
93: aastore
94: dup
95: iconst_1
96: ldc           #10
98: aastore
99: dup
100: iconst_2
101: ldc           #13
103: aastore
104: dup
105: iconst_3
106: ldc           #50
108: aastore
109: dup
110: iconst_4
111: ldc           #12
113: aastore
114: dup
115: iconst_5
116: ldc           #120
118: aastore
119: astore        9
121: aload         6
123: aload         9
125: invokevirtual #121
128: astore        10
130: aload         5
132: ldc           #38
134: ldc           #12
136: aload         9
138: invokevirtual #122
141: astore        11
143: aload_1
144: ldc           #50
146: aload         9
148: invokevirtual #127
151: astore        12
153: aload_1
154: ldc           #126
156: ldc           #109
158: ldc           #120
160: invokevirtual #11
163: astore        13
165: aload_1
166: ldc           #25
168: invokevirtual #150
171: astore        14
173: aload_1
174: ldc           #25
176: ldc_w         #323
179: ldc_w         #545
182: invokevirtual #11
185: astore        15
187: ldc           #141
189: invokestatic  #35
192: goto          197
195: astore        15
197: aload_1
198: invokestatic  #15
201: new           #16
204: dup
205: invokespecial #17
208: ldc           #18
210: invokevirtual #19
213: aload_2
214: invokevirtual #19
217: ldc           #111
219: invokevirtual #19
222: invokevirtual #22
225: aload_2
226: ldc           #65
228: invokestatic  #68
231: aload_3
232: invokestatic  #15
235: aload         4
237: invokestatic  #15
240: aload         5
242: invokestatic  #15
245: aload         6
247: invokestatic  #15
250: new           #16
253: dup
254: invokespecial #17
257: ldc           #18
259: invokevirtual #19
262: aload         7
264: invokevirtual #19
267: ldc           #128
269: invokevirtual #19
272: invokevirtual #22
275: aload         7
277: ldc           #43
279: invokestatic  #68
282: aload         8
284: invokestatic  #15
287: aload         9
289: invokestatic  #15
292: aload         10
294: invokestatic  #15
297: aload         11
299: invokestatic  #15
302: aload         12
304: invokestatic  #15
307: aload         13
309: invokestatic  #15
312: aload         14
314: invokestatic  #15
317: return
Exception table:
from    to  target type
173   192   195   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test126
Start line: 6092
End line: 6103
Method source code: 
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("hi!", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #546
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #12
29: ldc           #158
31: aload_1
32: invokestatic  #94
35: astore_2
36: ldc           #34
38: invokestatic  #35
41: goto          45
44: astore_2
45: return
Exception table:
from    to  target type
27    41    44   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test127
Start line: 6106
End line: 6134
Method source code: 
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.simpleText();
        boolean boolean2 = org.jsoup.Jsoup.isValid("#[:lt(32)*=.\n \n \n]", whitelist1);
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner8 = new org.jsoup.safety.Cleaner(whitelist7);
        org.jsoup.safety.Whitelist whitelist11 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str12 = org.jsoup.Jsoup.clean(":lt(32)", whitelist11);
        org.jsoup.safety.Whitelist whitelist16 = whitelist11.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray23 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist24 = whitelist11.addTags(strArray23);
        org.jsoup.safety.Whitelist whitelist25 = whitelist7.addAttributes(":gt(100)", strArray23);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray23);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray23);
        org.jsoup.safety.Whitelist whitelist28 = whitelist1.addProtocols("#comment", "[^<html> <head></head> <body> </body> </html>]", strArray23);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ":lt(32)" + "'", str12, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #547
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #548
28: astore_1
29: ldc_w         #311
32: aload_1
33: invokestatic  #14
36: istore_2
37: invokestatic  #8
40: astore_3
41: aload_3
42: iconst_1
43: invokevirtual #9
46: astore        4
48: new           #40
51: dup
52: aload         4
54: invokespecial #41
57: astore        5
59: invokestatic  #118
62: astore        6
64: ldc           #43
66: aload         6
68: invokestatic  #81
71: astore        7
73: aload         6
75: ldc           #43
77: ldc           #12
79: ldc           #32
81: invokevirtual #11
84: astore        8
86: bipush        6
88: anewarray     #119
91: dup
92: iconst_0
93: ldc           #109
95: aastore
96: dup
97: iconst_1
98: ldc           #10
100: aastore
101: dup
102: iconst_2
103: ldc           #13
105: aastore
106: dup
107: iconst_3
108: ldc           #50
110: aastore
111: dup
112: iconst_4
113: ldc           #12
115: aastore
116: dup
117: iconst_5
118: ldc           #120
120: aastore
121: astore        9
123: aload         6
125: aload         9
127: invokevirtual #121
130: astore        10
132: aload         4
134: ldc           #92
136: aload         9
138: invokevirtual #127
141: astore        11
143: aload         9
145: checkcast     #124
148: invokestatic  #125
151: aload         9
153: checkcast     #124
156: invokestatic  #125
159: aload_1
160: ldc           #114
162: ldc_w         #492
165: aload         9
167: invokevirtual #122
170: astore        12
172: aload_1
173: invokestatic  #15
176: new           #16
179: dup
180: invokespecial #17
183: ldc           #18
185: invokevirtual #19
188: iload_2
189: invokevirtual #20
192: ldc           #21
194: invokevirtual #19
197: iconst_1
198: invokevirtual #20
201: ldc           #18
203: invokevirtual #19
206: invokevirtual #22
209: iload_2
210: iconst_1
211: if_icmpne     218
214: iconst_1
215: goto          219
218: iconst_0
219: invokestatic  #23
222: aload_3
223: invokestatic  #15
226: aload         4
228: invokestatic  #15
231: aload         6
233: invokestatic  #15
236: new           #16
239: dup
240: invokespecial #17
243: ldc           #18
245: invokevirtual #19
248: aload         7
250: invokevirtual #19
253: ldc           #128
255: invokevirtual #19
258: invokevirtual #22
261: aload         7
263: ldc           #43
265: invokestatic  #68
268: aload         8
270: invokestatic  #15
273: aload         9
275: invokestatic  #15
278: aload         10
280: invokestatic  #15
283: aload         11
285: invokestatic  #15
288: aload         12
290: invokestatic  #15
293: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test128
Start line: 6137
End line: 6150
Method source code: 
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist2.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str9 = org.jsoup.Jsoup.clean("#comment", "*", whitelist8);
        org.jsoup.nodes.Attributes attributes11 = whitelist8.getEnforcedAttributes("[!=hi!]");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#comment" + "'", str9, "#comment");
        org.junit.Assert.assertNotNull(attributes11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #549
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: ldc           #114
48: ldc           #126
50: aload_3
51: invokestatic  #94
54: astore        4
56: aload_3
57: ldc           #241
59: invokevirtual #150
62: astore        5
64: aload_1
65: invokestatic  #15
68: aload_2
69: invokestatic  #15
72: aload_3
73: invokestatic  #15
76: new           #16
79: dup
80: invokespecial #17
83: ldc           #18
85: invokevirtual #19
88: aload         4
90: invokevirtual #19
93: ldc           #212
95: invokevirtual #19
98: invokevirtual #22
101: aload         4
103: ldc           #114
105: invokestatic  #68
108: aload         5
110: invokestatic  #15
113: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test129
Start line: 6153
End line: 6260
Method source code: 
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.jsoup.select.Evaluator.Id id1 = new org.jsoup.select.Evaluator.Id("hi!");
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList7 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document5, "hi!");
        org.jsoup.nodes.Element element9 = document5.tagName("hi!");
        org.jsoup.nodes.Element element11 = document5.append("");
        java.lang.String str12 = element11.toString();
        boolean boolean14 = element11.hasAttr("");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element22 = document18.tagName("hi!");
        org.jsoup.nodes.Element element24 = document18.append("");
        org.jsoup.nodes.Element element26 = element24.removeClass("hi!");
        org.jsoup.select.Elements elements29 = element24.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Element element31 = element24.prependElement("hi!");
        boolean boolean32 = element31.hasText();
        element31.remove();
        boolean boolean34 = id1.matches(element11, element31);
        org.jsoup.safety.Whitelist whitelist35 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner38 = new org.jsoup.safety.Cleaner(whitelist37);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining41 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document43 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList49 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document47, "hi!");
        org.jsoup.nodes.Element element51 = document47.tagName("hi!");
        org.jsoup.nodes.Element element53 = document47.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = document47.outputSettings();
        boolean boolean55 = attributeWithValueContaining41.matches((org.jsoup.nodes.Element) document43, (org.jsoup.nodes.Element) document47);
        org.jsoup.nodes.Document document56 = cleaner38.clean(document47);
        org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str59 = document58.toString();
        java.lang.String str60 = document58.baseUri();
        org.jsoup.nodes.Document document61 = cleaner38.clean(document58);
        org.jsoup.nodes.Document document62 = document61.clone();
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList68 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document66, "hi!");
        org.jsoup.nodes.Element element69 = document66.empty();
        org.jsoup.nodes.Element element71 = document66.removeClass("hi!");
        org.jsoup.nodes.Element element73 = element71.toggleClass("");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = element73.siblingNodes();
        org.jsoup.nodes.Element element76 = element73.addClass(":gt(100)");
        org.jsoup.nodes.Node node77 = element73.parent();
        java.lang.String str79 = element73.absUrl("[^hi!]");
        org.jsoup.select.Elements elements81 = element73.getElementsByIndexGreaterThan((int) 'a');
        boolean boolean82 = id1.matches((org.jsoup.nodes.Element) document62, element73);
        org.jsoup.parser.Parser parser83 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.nodes.Document document86 = parser83.parseInput("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document89 = parser83.parseInput("hi!", "#comment");
        org.jsoup.nodes.Document document91 = org.jsoup.nodes.Document.createShell("hi!");
        java.util.regex.Pattern pattern92 = null;
        org.jsoup.select.Evaluator.MatchesOwn matchesOwn93 = new org.jsoup.select.Evaluator.MatchesOwn(pattern92);
        boolean boolean94 = document91.equals((java.lang.Object) pattern92);
        org.jsoup.nodes.Element element97 = document91.attr("[.]", ".<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean98 = id1.matches((org.jsoup.nodes.Element) document89, element97);
        java.lang.String str99 = document89.title();
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(nodeList7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str12, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(outputSettings54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str59, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(elements81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parser83);
        org.junit.Assert.assertNotNull(document86);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertNotNull(document91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(element97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "" + "'", str99, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #550
20: aastore
21: invokevirtual #7
24: pop
25: new           #388
28: dup
29: ldc           #12
31: invokespecial #389
34: astore_1
35: ldc           #25
37: ldc           #12
39: invokestatic  #26
42: astore_2
43: ldc           #12
45: aload_2
46: ldc           #12
48: invokestatic  #27
51: astore_3
52: aload_2
53: ldc           #12
55: invokevirtual #28
58: astore        4
60: aload_2
61: ldc           #25
63: invokevirtual #29
66: astore        5
68: aload         5
70: invokevirtual #363
73: astore        6
75: aload         5
77: ldc           #25
79: invokevirtual #364
82: istore        7
84: ldc           #25
86: ldc           #12
88: invokestatic  #26
91: astore        8
93: ldc           #12
95: aload         8
97: ldc           #12
99: invokestatic  #27
102: astore        9
104: aload         8
106: ldc           #12
108: invokevirtual #28
111: astore        10
113: aload         8
115: ldc           #25
117: invokevirtual #29
120: astore        11
122: aload         11
124: ldc           #12
126: invokevirtual #390
129: astore        12
131: aload         11
133: ldc           #51
135: ldc           #98
137: invokevirtual #391
140: astore        13
142: aload         11
144: ldc           #12
146: invokevirtual #392
149: astore        14
151: aload         14
153: invokevirtual #393
156: istore        15
158: aload         14
160: invokevirtual #394
163: aload_1
164: aload         5
166: aload         14
168: invokevirtual #395
171: istore        16
173: invokestatic  #8
176: astore        17
178: aload         17
180: iconst_1
181: invokevirtual #9
184: astore        18
186: new           #40
189: dup
190: aload         18
192: invokespecial #41
195: astore        19
197: new           #42
200: dup
201: ldc           #43
203: ldc           #32
205: invokespecial #44
208: astore        20
210: ldc           #12
212: invokestatic  #45
215: astore        21
217: ldc           #25
219: ldc           #12
221: invokestatic  #26
224: astore        22
226: ldc           #12
228: aload         22
230: ldc           #12
232: invokestatic  #27
235: astore        23
237: aload         22
239: ldc           #12
241: invokevirtual #28
244: astore        24
246: aload         22
248: ldc           #25
250: invokevirtual #29
253: astore        25
255: aload         22
257: invokevirtual #30
260: astore        26
262: aload         20
264: aload         21
266: aload         22
268: invokevirtual #46
271: istore        27
273: aload         19
275: aload         22
277: invokevirtual #47
280: astore        28
282: ldc           #10
284: invokestatic  #193
287: astore        29
289: aload         29
291: invokevirtual #72
294: astore        30
296: aload         29
298: invokevirtual #194
301: astore        31
303: aload         19
305: aload         29
307: invokevirtual #47
310: astore        32
312: aload         32
314: invokevirtual #154
317: astore        33
319: ldc           #25
321: ldc           #12
323: invokestatic  #26
326: astore        34
328: ldc           #12
330: aload         34
332: ldc           #12
334: invokestatic  #27
337: astore        35
339: aload         34
341: invokevirtual #103
344: astore        36
346: aload         34
348: ldc           #12
350: invokevirtual #59
353: astore        37
355: aload         37
357: ldc           #25
359: invokevirtual #177
362: astore        38
364: aload         38
366: invokevirtual #396
369: astore        39
371: aload         38
373: ldc           #92
375: invokevirtual #397
378: astore        40
380: aload         38
382: invokevirtual #252
385: astore        41
387: aload         38
389: ldc           #50
391: invokevirtual #398
394: astore        42
396: aload         38
398: bipush        97
400: invokevirtual #399
403: astore        43
405: aload_1
406: aload         33
408: aload         38
410: invokevirtual #395
413: istore        44
415: invokestatic  #419
418: astore        45
420: aload         45
422: ldc           #151
424: ldc           #110
426: invokevirtual #420
429: astore        46
431: aload         45
433: ldc           #12
435: ldc           #114
437: invokevirtual #420
440: astore        47
442: ldc           #12
444: invokestatic  #45
447: astore        48
449: aconst_null
450: astore        49
452: new           #345
455: dup
456: aload         49
458: invokespecial #346
461: astore        50
463: aload         48
465: aload         49
467: invokevirtual #202
470: istore        51
472: aload         48
474: ldc_w         #421
477: ldc           #32
479: invokevirtual #56
482: astore        52
484: aload_1
485: aload         47
487: aload         52
489: invokevirtual #395
492: istore        53
494: aload         47
496: invokevirtual #448
499: astore        54
501: aload_2
502: invokestatic  #15
505: aload_3
506: invokestatic  #15
509: aload         4
511: invokestatic  #15
514: aload         5
516: invokestatic  #15
519: new           #16
522: dup
523: invokespecial #17
526: ldc           #18
528: invokevirtual #19
531: aload         6
533: invokevirtual #19
536: ldc           #78
538: invokevirtual #19
541: invokevirtual #22
544: aload         6
546: ldc           #10
548: invokestatic  #68
551: new           #16
554: dup
555: invokespecial #17
558: ldc           #18
560: invokevirtual #19
563: iload         7
565: invokevirtual #20
568: ldc           #21
570: invokevirtual #19
573: iconst_0
574: invokevirtual #20
577: ldc           #18
579: invokevirtual #19
582: invokevirtual #22
585: iload         7
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #23
598: aload         8
600: invokestatic  #15
603: aload         9
605: invokestatic  #15
608: aload         10
610: invokestatic  #15
613: aload         11
615: invokestatic  #15
618: aload         12
620: invokestatic  #15
623: aload         13
625: invokestatic  #15
628: aload         14
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         15
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         15
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: new           #16
683: dup
684: invokespecial #17
687: ldc           #18
689: invokevirtual #19
692: iload         16
694: invokevirtual #20
697: ldc           #21
699: invokevirtual #19
702: iconst_0
703: invokevirtual #20
706: ldc           #18
708: invokevirtual #19
711: invokevirtual #22
714: iload         16
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #23
727: aload         17
729: invokestatic  #15
732: aload         18
734: invokestatic  #15
737: aload         21
739: invokestatic  #15
742: aload         22
744: invokestatic  #15
747: aload         23
749: invokestatic  #15
752: aload         24
754: invokestatic  #15
757: aload         25
759: invokestatic  #15
762: aload         26
764: invokestatic  #15
767: new           #16
770: dup
771: invokespecial #17
774: ldc           #18
776: invokevirtual #19
779: iload         27
781: invokevirtual #20
784: ldc           #21
786: invokevirtual #19
789: iconst_0
790: invokevirtual #20
793: ldc           #18
795: invokevirtual #19
798: invokevirtual #22
801: iload         27
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #23
814: aload         28
816: invokestatic  #15
819: aload         29
821: invokestatic  #15
824: new           #16
827: dup
828: invokespecial #17
831: ldc           #18
833: invokevirtual #19
836: aload         30
838: invokevirtual #19
841: ldc           #197
843: invokevirtual #19
846: invokevirtual #22
849: aload         30
851: ldc           #151
853: invokestatic  #68
856: new           #16
859: dup
860: invokespecial #17
863: ldc           #18
865: invokevirtual #19
868: aload         31
870: invokevirtual #19
873: ldc           #67
875: invokevirtual #19
878: invokevirtual #22
881: aload         31
883: ldc           #25
885: invokestatic  #68
888: aload         32
890: invokestatic  #15
893: aload         33
895: invokestatic  #15
898: aload         34
900: invokestatic  #15
903: aload         35
905: invokestatic  #15
908: aload         36
910: invokestatic  #15
913: aload         37
915: invokestatic  #15
918: aload         38
920: invokestatic  #15
923: aload         39
925: invokestatic  #15
928: aload         40
930: invokestatic  #15
933: aload         41
935: invokestatic  #79
938: new           #16
941: dup
942: invokespecial #17
945: ldc           #18
947: invokevirtual #19
950: aload         42
952: invokevirtual #19
955: ldc           #67
957: invokevirtual #19
960: invokevirtual #22
963: aload         42
965: ldc           #25
967: invokestatic  #68
970: aload         43
972: invokestatic  #15
975: new           #16
978: dup
979: invokespecial #17
982: ldc           #18
984: invokevirtual #19
987: iload         44
989: invokevirtual #20
992: ldc           #21
994: invokevirtual #19
997: iconst_0
998: invokevirtual #20
1001: ldc           #18
1003: invokevirtual #19
1006: invokevirtual #22
1009: iload         44
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #23
1022: aload         45
1024: invokestatic  #15
1027: aload         46
1029: invokestatic  #15
1032: aload         47
1034: invokestatic  #15
1037: aload         48
1039: invokestatic  #15
1042: new           #16
1045: dup
1046: invokespecial #17
1049: ldc           #18
1051: invokevirtual #19
1054: iload         51
1056: invokevirtual #20
1059: ldc           #21
1061: invokevirtual #19
1064: iconst_0
1065: invokevirtual #20
1068: ldc           #18
1070: invokevirtual #19
1073: invokevirtual #22
1076: iload         51
1078: ifne          1085
1081: iconst_1
1082: goto          1086
1085: iconst_0
1086: invokestatic  #23
1089: aload         52
1091: invokestatic  #15
1094: new           #16
1097: dup
1098: invokespecial #17
1101: ldc           #18
1103: invokevirtual #19
1106: iload         53
1108: invokevirtual #20
1111: ldc           #21
1113: invokevirtual #19
1116: iconst_0
1117: invokevirtual #20
1120: ldc           #18
1122: invokevirtual #19
1125: invokevirtual #22
1128: iload         53
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #23
1141: new           #16
1144: dup
1145: invokespecial #17
1148: ldc           #18
1150: invokevirtual #19
1153: aload         54
1155: invokevirtual #19
1158: ldc           #67
1160: invokevirtual #19
1163: invokevirtual #22
1166: aload         54
1168: ldc           #25
1170: invokestatic  #68
1173: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test130
Start line: 6263
End line: 6319
Method source code: 
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList10 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        java.lang.Object obj11 = objList10.poll();
        java.util.ListIterator<java.lang.Object> objItor12 = objList10.listIterator();
        java.lang.Object obj13 = null;
        int int14 = objList10.lastIndexOf(obj13);
        java.lang.Object obj15 = null;
        boolean boolean16 = objList10.offerLast(obj15);
        java.lang.Object[] objArray17 = objList10.toArray();
        org.jsoup.safety.Whitelist whitelist18 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist20 = whitelist18.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist22 = whitelist20.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str27 = org.jsoup.Jsoup.clean(":lt(32)", whitelist26);
        org.jsoup.safety.Whitelist whitelist31 = whitelist26.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray38 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist39 = whitelist26.addTags(strArray38);
        org.jsoup.safety.Whitelist whitelist40 = whitelist22.addProtocols(":matchesOwn(null", "hi!", strArray38);
        java.lang.String[] strArray49 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean50 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray49);
        org.jsoup.safety.Whitelist whitelist51 = whitelist40.addProtocols("\n<!--hi!-->", "#document", strArray49);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray49);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray49);
        boolean boolean54 = objList10.offerLast((java.lang.Object) strArray49);
        org.jsoup.safety.Whitelist whitelist55 = whitelist7.addProtocols(" text=\"hi!\" #document=\"#document\"", ":matchesOwn(null", strArray49);
        boolean boolean56 = org.jsoup.helper.StringUtil.in("\n<!--hi!-->", strArray49);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objItor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null]");
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":lt(32)" + "'", str27, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #551
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: new           #88
49: dup
50: invokespecial #89
53: astore        4
55: aload         4
57: invokevirtual #402
60: astore        5
62: aload         4
64: invokevirtual #403
67: astore        6
69: aconst_null
70: astore        7
72: aload         4
74: aload         7
76: invokevirtual #130
79: istore        8
81: aconst_null
82: astore        9
84: aload         4
86: aload         9
88: invokevirtual #282
91: istore        10
93: aload         4
95: invokevirtual #384
98: astore        11
100: invokestatic  #8
103: astore        12
105: aload         12
107: iconst_1
108: invokevirtual #9
111: astore        13
113: aload         13
115: iconst_0
116: invokevirtual #9
119: astore        14
121: invokestatic  #118
124: astore        15
126: ldc           #43
128: aload         15
130: invokestatic  #81
133: astore        16
135: aload         15
137: ldc           #43
139: ldc           #12
141: ldc           #32
143: invokevirtual #11
146: astore        17
148: bipush        6
150: anewarray     #119
153: dup
154: iconst_0
155: ldc           #109
157: aastore
158: dup
159: iconst_1
160: ldc           #10
162: aastore
163: dup
164: iconst_2
165: ldc           #13
167: aastore
168: dup
169: iconst_3
170: ldc           #50
172: aastore
173: dup
174: iconst_4
175: ldc           #12
177: aastore
178: dup
179: iconst_5
180: ldc           #120
182: aastore
183: astore        18
185: aload         15
187: aload         18
189: invokevirtual #121
192: astore        19
194: aload         14
196: ldc           #38
198: ldc           #12
200: aload         18
202: invokevirtual #122
205: astore        20
207: iconst_5
208: anewarray     #119
211: dup
212: iconst_0
213: ldc           #13
215: aastore
216: dup
217: iconst_1
218: ldc           #32
220: aastore
221: dup
222: iconst_2
223: ldc           #10
225: aastore
226: dup
227: iconst_3
228: ldc           #43
230: aastore
231: dup
232: iconst_4
233: ldc           #58
235: aastore
236: astore        21
238: ldc           #10
240: aload         21
242: invokestatic  #123
245: istore        22
247: aload         20
249: ldc           #84
251: ldc           #13
253: aload         21
255: invokevirtual #122
258: astore        23
260: aload         21
262: checkcast     #124
265: invokestatic  #125
268: aload         21
270: checkcast     #124
273: invokestatic  #125
276: aload         4
278: aload         21
280: invokevirtual #282
283: istore        24
285: aload_3
286: ldc_w         #552
289: ldc           #38
291: aload         21
293: invokevirtual #122
296: astore        25
298: ldc           #84
300: aload         21
302: invokestatic  #123
305: istore        26
307: aload_1
308: invokestatic  #15
311: aload_2
312: invokestatic  #15
315: aload_3
316: invokestatic  #15
319: aload         5
321: invokestatic  #79
324: aload         6
326: invokestatic  #15
329: new           #16
332: dup
333: invokespecial #17
336: ldc           #18
338: invokevirtual #19
341: iload         8
343: invokevirtual #134
346: ldc           #21
348: invokevirtual #19
351: iconst_m1
352: invokevirtual #134
355: ldc           #18
357: invokevirtual #19
360: invokevirtual #22
363: iload         8
365: iconst_m1
366: if_icmpne     373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #23
377: new           #16
380: dup
381: invokespecial #17
384: ldc           #18
386: invokevirtual #19
389: iload         10
391: invokevirtual #20
394: ldc           #21
396: invokevirtual #19
399: iconst_1
400: invokevirtual #20
403: ldc           #18
405: invokevirtual #19
408: invokevirtual #22
411: iload         10
413: iconst_1
414: if_icmpne     421
417: iconst_1
418: goto          422
421: iconst_0
422: invokestatic  #23
425: aload         11
427: invokestatic  #15
430: aload         11
432: invokestatic  #288
435: ldc           #146
437: invokestatic  #290
440: aload         11
442: invokestatic  #291
445: ldc           #146
447: invokestatic  #290
450: aload         12
452: invokestatic  #15
455: aload         13
457: invokestatic  #15
460: aload         14
462: invokestatic  #15
465: aload         15
467: invokestatic  #15
470: new           #16
473: dup
474: invokespecial #17
477: ldc           #18
479: invokevirtual #19
482: aload         16
484: invokevirtual #19
487: ldc           #128
489: invokevirtual #19
492: invokevirtual #22
495: aload         16
497: ldc           #43
499: invokestatic  #68
502: aload         17
504: invokestatic  #15
507: aload         18
509: invokestatic  #15
512: aload         19
514: invokestatic  #15
517: aload         20
519: invokestatic  #15
522: aload         21
524: invokestatic  #15
527: new           #16
530: dup
531: invokespecial #17
534: ldc           #18
536: invokevirtual #19
539: iload         22
541: invokevirtual #20
544: ldc           #21
546: invokevirtual #19
549: iconst_1
550: invokevirtual #20
553: ldc           #18
555: invokevirtual #19
558: invokevirtual #22
561: iload         22
563: iconst_1
564: if_icmpne     571
567: iconst_1
568: goto          572
571: iconst_0
572: invokestatic  #23
575: aload         23
577: invokestatic  #15
580: new           #16
583: dup
584: invokespecial #17
587: ldc           #18
589: invokevirtual #19
592: iload         24
594: invokevirtual #20
597: ldc           #21
599: invokevirtual #19
602: iconst_1
603: invokevirtual #20
606: ldc           #18
608: invokevirtual #19
611: invokevirtual #22
614: iload         24
616: iconst_1
617: if_icmpne     624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #23
628: aload         25
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         26
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         26
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test131
Start line: 6322
End line: 6345
Method source code: 
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist6.preserveRelativeLinks(false);
        java.lang.String[] strArray17 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean18 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        org.jsoup.safety.Whitelist whitelist19 = whitelist8.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray17);
        org.jsoup.safety.Whitelist whitelist20 = whitelist2.addTags(strArray17);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray17, "[[^hi!]]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #553
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #8
47: astore        4
49: aload         4
51: iconst_1
52: invokevirtual #9
55: astore        5
57: aload         5
59: iconst_0
60: invokevirtual #9
63: astore        6
65: iconst_5
66: anewarray     #119
69: dup
70: iconst_0
71: ldc           #13
73: aastore
74: dup
75: iconst_1
76: ldc           #32
78: aastore
79: dup
80: iconst_2
81: ldc           #10
83: aastore
84: dup
85: iconst_3
86: ldc           #43
88: aastore
89: dup
90: iconst_4
91: ldc           #58
93: aastore
94: astore        7
96: ldc           #10
98: aload         7
100: invokestatic  #123
103: istore        8
105: aload         6
107: ldc           #120
109: ldc           #55
111: aload         7
113: invokevirtual #122
116: astore        9
118: aload_2
119: aload         7
121: invokevirtual #121
124: astore        10
126: aload         7
128: checkcast     #124
131: ldc_w         #554
134: invokestatic  #245
137: aload_1
138: invokestatic  #15
141: aload_2
142: invokestatic  #15
145: aload         4
147: invokestatic  #15
150: aload         5
152: invokestatic  #15
155: aload         6
157: invokestatic  #15
160: aload         7
162: invokestatic  #15
165: new           #16
168: dup
169: invokespecial #17
172: ldc           #18
174: invokevirtual #19
177: iload         8
179: invokevirtual #20
182: ldc           #21
184: invokevirtual #19
187: iconst_1
188: invokevirtual #20
191: ldc           #18
193: invokevirtual #19
196: invokevirtual #22
199: iload         8
201: iconst_1
202: if_icmpne     209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #23
213: aload         9
215: invokestatic  #15
218: aload         10
220: invokestatic  #15
223: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test132
Start line: 6348
End line: 6368
Method source code: 
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist2.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist12 = whitelist2.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str13 = org.jsoup.Jsoup.clean("#document", "<html>\n <head></head>\n <body></body>\n</html>", whitelist12);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist17 = whitelist12.addEnforcedAttribute("[:gt(100)]=\"\"", "[^<html> <head></head> <body> </body> </html>]", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#document" + "'", str13, "#document");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #555
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: ldc           #13
60: ldc           #10
62: aload         4
64: invokestatic  #94
67: astore        5
69: aload         4
71: ldc_w         #323
74: ldc_w         #492
77: ldc           #25
79: invokevirtual #11
82: astore        6
84: ldc           #141
86: invokestatic  #35
89: goto          94
92: astore        6
94: aload_1
95: invokestatic  #15
98: aload_2
99: invokestatic  #15
102: aload_3
103: invokestatic  #15
106: aload         4
108: invokestatic  #15
111: new           #16
114: dup
115: invokespecial #17
118: ldc           #18
120: invokevirtual #19
123: aload         5
125: invokevirtual #19
128: ldc           #107
130: invokevirtual #19
133: invokevirtual #22
136: aload         5
138: ldc           #13
140: invokestatic  #68
143: return
Exception table:
from    to  target type
69    89    92   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test133
Start line: 6371
End line: 6440
Method source code: 
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str4 = org.jsoup.Jsoup.clean(":lt(32)", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList12 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document10, "hi!");
        org.jsoup.nodes.Element element13 = document10.empty();
        org.jsoup.nodes.Element element15 = document10.removeClass("hi!");
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document19, "hi!");
        org.jsoup.nodes.Element element23 = document19.tagName("hi!");
        org.jsoup.nodes.Element element25 = document19.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = document19.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings26.prettyPrint(false);
        org.jsoup.nodes.Document document29 = document10.outputSettings(outputSettings28);
        java.lang.String str30 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist3, outputSettings28);
        org.jsoup.safety.Whitelist whitelist33 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str34 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist33);
        org.jsoup.safety.Whitelist whitelist36 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist38 = whitelist36.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist40 = whitelist38.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist44 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str45 = org.jsoup.Jsoup.clean(":lt(32)", whitelist44);
        org.jsoup.safety.Whitelist whitelist49 = whitelist44.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray56 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist57 = whitelist44.addTags(strArray56);
        org.jsoup.safety.Whitelist whitelist58 = whitelist40.addProtocols(":matchesOwn(null", "hi!", strArray56);
        java.lang.String[] strArray67 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean68 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray67);
        org.jsoup.safety.Whitelist whitelist69 = whitelist58.addProtocols("\n<!--hi!-->", "#document", strArray67);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray67);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray67);
        org.jsoup.safety.Whitelist whitelist72 = whitelist33.addAttributes("*", strArray67);
        org.jsoup.safety.Whitelist whitelist73 = whitelist3.addTags(strArray67);
        boolean boolean75 = whitelist3.isSafeTag("<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":lt(32)" + "'", str4, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[:lt(32)]" + "'", str30, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!$=   ]" + "'", str34, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":lt(32)" + "'", str45, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #556
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: invokestatic  #8
156: astore        16
158: ldc           #109
160: ldc           #110
162: aload         16
164: invokestatic  #94
167: astore        17
169: invokestatic  #8
172: astore        18
174: aload         18
176: iconst_1
177: invokevirtual #9
180: astore        19
182: aload         19
184: iconst_0
185: invokevirtual #9
188: astore        20
190: invokestatic  #118
193: astore        21
195: ldc           #43
197: aload         21
199: invokestatic  #81
202: astore        22
204: aload         21
206: ldc           #43
208: ldc           #12
210: ldc           #32
212: invokevirtual #11
215: astore        23
217: bipush        6
219: anewarray     #119
222: dup
223: iconst_0
224: ldc           #109
226: aastore
227: dup
228: iconst_1
229: ldc           #10
231: aastore
232: dup
233: iconst_2
234: ldc           #13
236: aastore
237: dup
238: iconst_3
239: ldc           #50
241: aastore
242: dup
243: iconst_4
244: ldc           #12
246: aastore
247: dup
248: iconst_5
249: ldc           #120
251: aastore
252: astore        24
254: aload         21
256: aload         24
258: invokevirtual #121
261: astore        25
263: aload         20
265: ldc           #38
267: ldc           #12
269: aload         24
271: invokevirtual #122
274: astore        26
276: iconst_5
277: anewarray     #119
280: dup
281: iconst_0
282: ldc           #13
284: aastore
285: dup
286: iconst_1
287: ldc           #32
289: aastore
290: dup
291: iconst_2
292: ldc           #10
294: aastore
295: dup
296: iconst_3
297: ldc           #43
299: aastore
300: dup
301: iconst_4
302: ldc           #58
304: aastore
305: astore        27
307: ldc           #10
309: aload         27
311: invokestatic  #123
314: istore        28
316: aload         26
318: ldc           #84
320: ldc           #13
322: aload         27
324: invokevirtual #122
327: astore        29
329: aload         27
331: checkcast     #124
334: invokestatic  #125
337: aload         27
339: checkcast     #124
342: invokestatic  #125
345: aload         16
347: ldc           #126
349: aload         27
351: invokevirtual #127
354: astore        30
356: aload_1
357: aload         27
359: invokevirtual #121
362: astore        31
364: aload_1
365: ldc           #10
367: invokevirtual #83
370: istore        32
372: aload_1
373: invokestatic  #15
376: new           #16
379: dup
380: invokespecial #17
383: ldc           #18
385: invokevirtual #19
388: aload_2
389: invokevirtual #19
392: ldc           #128
394: invokevirtual #19
397: invokevirtual #22
400: aload_2
401: ldc           #43
403: invokestatic  #68
406: new           #16
409: dup
410: invokespecial #17
413: ldc           #18
415: invokevirtual #19
418: iload_3
419: invokevirtual #20
422: ldc           #21
424: invokevirtual #19
427: iconst_0
428: invokevirtual #20
431: ldc           #18
433: invokevirtual #19
436: invokevirtual #22
439: iload_3
440: ifne          447
443: iconst_1
444: goto          448
447: iconst_0
448: invokestatic  #23
451: aload         4
453: invokestatic  #15
456: aload         5
458: invokestatic  #15
461: aload         6
463: invokestatic  #15
466: aload         7
468: invokestatic  #15
471: aload         8
473: invokestatic  #15
476: aload         9
478: invokestatic  #15
481: aload         10
483: invokestatic  #15
486: aload         11
488: invokestatic  #15
491: aload         12
493: invokestatic  #15
496: aload         13
498: invokestatic  #15
501: aload         14
503: invokestatic  #15
506: new           #16
509: dup
510: invokespecial #17
513: ldc           #18
515: invokevirtual #19
518: aload         15
520: invokevirtual #19
523: ldc           #184
525: invokevirtual #19
528: invokevirtual #22
531: aload         15
533: ldc           #58
535: invokestatic  #68
538: aload         16
540: invokestatic  #15
543: new           #16
546: dup
547: invokespecial #17
550: ldc           #18
552: invokevirtual #19
555: aload         17
557: invokevirtual #19
560: ldc           #111
562: invokevirtual #19
565: invokevirtual #22
568: aload         17
570: ldc           #65
572: invokestatic  #68
575: aload         18
577: invokestatic  #15
580: aload         19
582: invokestatic  #15
585: aload         20
587: invokestatic  #15
590: aload         21
592: invokestatic  #15
595: new           #16
598: dup
599: invokespecial #17
602: ldc           #18
604: invokevirtual #19
607: aload         22
609: invokevirtual #19
612: ldc           #128
614: invokevirtual #19
617: invokevirtual #22
620: aload         22
622: ldc           #43
624: invokestatic  #68
627: aload         23
629: invokestatic  #15
632: aload         24
634: invokestatic  #15
637: aload         25
639: invokestatic  #15
642: aload         26
644: invokestatic  #15
647: aload         27
649: invokestatic  #15
652: new           #16
655: dup
656: invokespecial #17
659: ldc           #18
661: invokevirtual #19
664: iload         28
666: invokevirtual #20
669: ldc           #21
671: invokevirtual #19
674: iconst_1
675: invokevirtual #20
678: ldc           #18
680: invokevirtual #19
683: invokevirtual #22
686: iload         28
688: iconst_1
689: if_icmpne     696
692: iconst_1
693: goto          697
696: iconst_0
697: invokestatic  #23
700: aload         29
702: invokestatic  #15
705: aload         30
707: invokestatic  #15
710: aload         31
712: invokestatic  #15
715: new           #16
718: dup
719: invokespecial #17
722: ldc           #18
724: invokevirtual #19
727: iload         32
729: invokevirtual #20
732: ldc           #21
734: invokevirtual #19
737: iconst_1
738: invokevirtual #20
741: ldc           #18
743: invokevirtual #19
746: invokevirtual #22
749: iload         32
751: iconst_1
752: if_icmpne     759
755: iconst_1
756: goto          760
759: iconst_0
760: invokestatic  #23
763: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test134
Start line: 6443
End line: 6466
Method source code: 
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str10 = org.jsoup.Jsoup.clean(":lt(32)", whitelist9);
        org.jsoup.safety.Whitelist whitelist14 = whitelist9.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray21 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist22 = whitelist9.addTags(strArray21);
        org.jsoup.safety.Whitelist whitelist23 = whitelist5.addProtocols(":matchesOwn(null", "hi!", strArray21);
        boolean boolean24 = org.jsoup.Jsoup.isValid(":contains(<html>\n <head></head>\n <body>\n  [:lt(32)]\n </body>\n</html>", whitelist23);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + ":lt(32)" + "'", str10, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #557
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: invokestatic  #118
44: astore        4
46: ldc           #43
48: aload         4
50: invokestatic  #81
53: astore        5
55: aload         4
57: ldc           #43
59: ldc           #12
61: ldc           #32
63: invokevirtual #11
66: astore        6
68: bipush        6
70: anewarray     #119
73: dup
74: iconst_0
75: ldc           #109
77: aastore
78: dup
79: iconst_1
80: ldc           #10
82: aastore
83: dup
84: iconst_2
85: ldc           #13
87: aastore
88: dup
89: iconst_3
90: ldc           #50
92: aastore
93: dup
94: iconst_4
95: ldc           #12
97: aastore
98: dup
99: iconst_5
100: ldc           #120
102: aastore
103: astore        7
105: aload         4
107: aload         7
109: invokevirtual #121
112: astore        8
114: aload_3
115: ldc           #38
117: ldc           #12
119: aload         7
121: invokevirtual #122
124: astore        9
126: ldc_w         #265
129: aload         9
131: invokestatic  #14
134: istore        10
136: aload_1
137: invokestatic  #15
140: aload_2
141: invokestatic  #15
144: aload_3
145: invokestatic  #15
148: aload         4
150: invokestatic  #15
153: new           #16
156: dup
157: invokespecial #17
160: ldc           #18
162: invokevirtual #19
165: aload         5
167: invokevirtual #19
170: ldc           #128
172: invokevirtual #19
175: invokevirtual #22
178: aload         5
180: ldc           #43
182: invokestatic  #68
185: aload         6
187: invokestatic  #15
190: aload         7
192: invokestatic  #15
195: aload         8
197: invokestatic  #15
200: aload         9
202: invokestatic  #15
205: new           #16
208: dup
209: invokespecial #17
212: ldc           #18
214: invokevirtual #19
217: iload         10
219: invokevirtual #20
222: ldc           #21
224: invokevirtual #19
227: iconst_1
228: invokevirtual #20
231: ldc           #18
233: invokevirtual #19
236: invokevirtual #22
239: iload         10
241: iconst_1
242: if_icmpne     249
245: iconst_1
246: goto          250
249: iconst_0
250: invokestatic  #23
253: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test135
Start line: 6469
End line: 6576
Method source code: 
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.jsoup.select.Evaluator.Id id1 = new org.jsoup.select.Evaluator.Id("hi!");
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList7 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document5, "hi!");
        org.jsoup.nodes.Element element9 = document5.tagName("hi!");
        org.jsoup.nodes.Element element11 = document5.append("");
        java.lang.String str12 = element11.toString();
        boolean boolean14 = element11.hasAttr("");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element22 = document18.tagName("hi!");
        org.jsoup.nodes.Element element24 = document18.append("");
        org.jsoup.nodes.Element element26 = element24.removeClass("hi!");
        org.jsoup.select.Elements elements29 = element24.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Element element31 = element24.prependElement("hi!");
        boolean boolean32 = element31.hasText();
        element31.remove();
        boolean boolean34 = id1.matches(element11, element31);
        org.jsoup.safety.Whitelist whitelist35 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner38 = new org.jsoup.safety.Cleaner(whitelist37);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining41 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document43 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList49 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document47, "hi!");
        org.jsoup.nodes.Element element51 = document47.tagName("hi!");
        org.jsoup.nodes.Element element53 = document47.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = document47.outputSettings();
        boolean boolean55 = attributeWithValueContaining41.matches((org.jsoup.nodes.Element) document43, (org.jsoup.nodes.Element) document47);
        org.jsoup.nodes.Document document56 = cleaner38.clean(document47);
        org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str59 = document58.toString();
        java.lang.String str60 = document58.baseUri();
        org.jsoup.nodes.Document document61 = cleaner38.clean(document58);
        org.jsoup.nodes.Document document62 = document61.clone();
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList68 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document66, "hi!");
        org.jsoup.nodes.Element element69 = document66.empty();
        org.jsoup.nodes.Element element71 = document66.removeClass("hi!");
        org.jsoup.nodes.Element element73 = element71.toggleClass("");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = element73.siblingNodes();
        org.jsoup.nodes.Element element76 = element73.addClass(":gt(100)");
        org.jsoup.nodes.Node node77 = element73.parent();
        java.lang.String str79 = element73.absUrl("[^hi!]");
        org.jsoup.select.Elements elements81 = element73.getElementsByIndexGreaterThan((int) 'a');
        boolean boolean82 = id1.matches((org.jsoup.nodes.Element) document62, element73);
        org.jsoup.parser.Parser parser83 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.nodes.Document document86 = parser83.parseInput("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document89 = parser83.parseInput("hi!", "#comment");
        org.jsoup.nodes.Document document91 = org.jsoup.nodes.Document.createShell("hi!");
        java.util.regex.Pattern pattern92 = null;
        org.jsoup.select.Evaluator.MatchesOwn matchesOwn93 = new org.jsoup.select.Evaluator.MatchesOwn(pattern92);
        boolean boolean94 = document91.equals((java.lang.Object) pattern92);
        org.jsoup.nodes.Element element97 = document91.attr("[.]", ".<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean98 = id1.matches((org.jsoup.nodes.Element) document89, element97);
        org.jsoup.select.Elements elements99 = document89.parents();
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(nodeList7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str12, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(outputSettings54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str59, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(elements81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parser83);
        org.junit.Assert.assertNotNull(document86);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertNotNull(document91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(element97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(elements99);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #558
20: aastore
21: invokevirtual #7
24: pop
25: new           #388
28: dup
29: ldc           #12
31: invokespecial #389
34: astore_1
35: ldc           #25
37: ldc           #12
39: invokestatic  #26
42: astore_2
43: ldc           #12
45: aload_2
46: ldc           #12
48: invokestatic  #27
51: astore_3
52: aload_2
53: ldc           #12
55: invokevirtual #28
58: astore        4
60: aload_2
61: ldc           #25
63: invokevirtual #29
66: astore        5
68: aload         5
70: invokevirtual #363
73: astore        6
75: aload         5
77: ldc           #25
79: invokevirtual #364
82: istore        7
84: ldc           #25
86: ldc           #12
88: invokestatic  #26
91: astore        8
93: ldc           #12
95: aload         8
97: ldc           #12
99: invokestatic  #27
102: astore        9
104: aload         8
106: ldc           #12
108: invokevirtual #28
111: astore        10
113: aload         8
115: ldc           #25
117: invokevirtual #29
120: astore        11
122: aload         11
124: ldc           #12
126: invokevirtual #390
129: astore        12
131: aload         11
133: ldc           #51
135: ldc           #98
137: invokevirtual #391
140: astore        13
142: aload         11
144: ldc           #12
146: invokevirtual #392
149: astore        14
151: aload         14
153: invokevirtual #393
156: istore        15
158: aload         14
160: invokevirtual #394
163: aload_1
164: aload         5
166: aload         14
168: invokevirtual #395
171: istore        16
173: invokestatic  #8
176: astore        17
178: aload         17
180: iconst_1
181: invokevirtual #9
184: astore        18
186: new           #40
189: dup
190: aload         18
192: invokespecial #41
195: astore        19
197: new           #42
200: dup
201: ldc           #43
203: ldc           #32
205: invokespecial #44
208: astore        20
210: ldc           #12
212: invokestatic  #45
215: astore        21
217: ldc           #25
219: ldc           #12
221: invokestatic  #26
224: astore        22
226: ldc           #12
228: aload         22
230: ldc           #12
232: invokestatic  #27
235: astore        23
237: aload         22
239: ldc           #12
241: invokevirtual #28
244: astore        24
246: aload         22
248: ldc           #25
250: invokevirtual #29
253: astore        25
255: aload         22
257: invokevirtual #30
260: astore        26
262: aload         20
264: aload         21
266: aload         22
268: invokevirtual #46
271: istore        27
273: aload         19
275: aload         22
277: invokevirtual #47
280: astore        28
282: ldc           #10
284: invokestatic  #193
287: astore        29
289: aload         29
291: invokevirtual #72
294: astore        30
296: aload         29
298: invokevirtual #194
301: astore        31
303: aload         19
305: aload         29
307: invokevirtual #47
310: astore        32
312: aload         32
314: invokevirtual #154
317: astore        33
319: ldc           #25
321: ldc           #12
323: invokestatic  #26
326: astore        34
328: ldc           #12
330: aload         34
332: ldc           #12
334: invokestatic  #27
337: astore        35
339: aload         34
341: invokevirtual #103
344: astore        36
346: aload         34
348: ldc           #12
350: invokevirtual #59
353: astore        37
355: aload         37
357: ldc           #25
359: invokevirtual #177
362: astore        38
364: aload         38
366: invokevirtual #396
369: astore        39
371: aload         38
373: ldc           #92
375: invokevirtual #397
378: astore        40
380: aload         38
382: invokevirtual #252
385: astore        41
387: aload         38
389: ldc           #50
391: invokevirtual #398
394: astore        42
396: aload         38
398: bipush        97
400: invokevirtual #399
403: astore        43
405: aload_1
406: aload         33
408: aload         38
410: invokevirtual #395
413: istore        44
415: invokestatic  #419
418: astore        45
420: aload         45
422: ldc           #151
424: ldc           #110
426: invokevirtual #420
429: astore        46
431: aload         45
433: ldc           #12
435: ldc           #114
437: invokevirtual #420
440: astore        47
442: ldc           #12
444: invokestatic  #45
447: astore        48
449: aconst_null
450: astore        49
452: new           #345
455: dup
456: aload         49
458: invokespecial #346
461: astore        50
463: aload         48
465: aload         49
467: invokevirtual #202
470: istore        51
472: aload         48
474: ldc_w         #421
477: ldc           #32
479: invokevirtual #56
482: astore        52
484: aload_1
485: aload         47
487: aload         52
489: invokevirtual #395
492: istore        53
494: aload         47
496: invokevirtual #203
499: astore        54
501: aload_2
502: invokestatic  #15
505: aload_3
506: invokestatic  #15
509: aload         4
511: invokestatic  #15
514: aload         5
516: invokestatic  #15
519: new           #16
522: dup
523: invokespecial #17
526: ldc           #18
528: invokevirtual #19
531: aload         6
533: invokevirtual #19
536: ldc           #78
538: invokevirtual #19
541: invokevirtual #22
544: aload         6
546: ldc           #10
548: invokestatic  #68
551: new           #16
554: dup
555: invokespecial #17
558: ldc           #18
560: invokevirtual #19
563: iload         7
565: invokevirtual #20
568: ldc           #21
570: invokevirtual #19
573: iconst_0
574: invokevirtual #20
577: ldc           #18
579: invokevirtual #19
582: invokevirtual #22
585: iload         7
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #23
598: aload         8
600: invokestatic  #15
603: aload         9
605: invokestatic  #15
608: aload         10
610: invokestatic  #15
613: aload         11
615: invokestatic  #15
618: aload         12
620: invokestatic  #15
623: aload         13
625: invokestatic  #15
628: aload         14
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         15
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         15
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: new           #16
683: dup
684: invokespecial #17
687: ldc           #18
689: invokevirtual #19
692: iload         16
694: invokevirtual #20
697: ldc           #21
699: invokevirtual #19
702: iconst_0
703: invokevirtual #20
706: ldc           #18
708: invokevirtual #19
711: invokevirtual #22
714: iload         16
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #23
727: aload         17
729: invokestatic  #15
732: aload         18
734: invokestatic  #15
737: aload         21
739: invokestatic  #15
742: aload         22
744: invokestatic  #15
747: aload         23
749: invokestatic  #15
752: aload         24
754: invokestatic  #15
757: aload         25
759: invokestatic  #15
762: aload         26
764: invokestatic  #15
767: new           #16
770: dup
771: invokespecial #17
774: ldc           #18
776: invokevirtual #19
779: iload         27
781: invokevirtual #20
784: ldc           #21
786: invokevirtual #19
789: iconst_0
790: invokevirtual #20
793: ldc           #18
795: invokevirtual #19
798: invokevirtual #22
801: iload         27
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #23
814: aload         28
816: invokestatic  #15
819: aload         29
821: invokestatic  #15
824: new           #16
827: dup
828: invokespecial #17
831: ldc           #18
833: invokevirtual #19
836: aload         30
838: invokevirtual #19
841: ldc           #197
843: invokevirtual #19
846: invokevirtual #22
849: aload         30
851: ldc           #151
853: invokestatic  #68
856: new           #16
859: dup
860: invokespecial #17
863: ldc           #18
865: invokevirtual #19
868: aload         31
870: invokevirtual #19
873: ldc           #67
875: invokevirtual #19
878: invokevirtual #22
881: aload         31
883: ldc           #25
885: invokestatic  #68
888: aload         32
890: invokestatic  #15
893: aload         33
895: invokestatic  #15
898: aload         34
900: invokestatic  #15
903: aload         35
905: invokestatic  #15
908: aload         36
910: invokestatic  #15
913: aload         37
915: invokestatic  #15
918: aload         38
920: invokestatic  #15
923: aload         39
925: invokestatic  #15
928: aload         40
930: invokestatic  #15
933: aload         41
935: invokestatic  #79
938: new           #16
941: dup
942: invokespecial #17
945: ldc           #18
947: invokevirtual #19
950: aload         42
952: invokevirtual #19
955: ldc           #67
957: invokevirtual #19
960: invokevirtual #22
963: aload         42
965: ldc           #25
967: invokestatic  #68
970: aload         43
972: invokestatic  #15
975: new           #16
978: dup
979: invokespecial #17
982: ldc           #18
984: invokevirtual #19
987: iload         44
989: invokevirtual #20
992: ldc           #21
994: invokevirtual #19
997: iconst_0
998: invokevirtual #20
1001: ldc           #18
1003: invokevirtual #19
1006: invokevirtual #22
1009: iload         44
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #23
1022: aload         45
1024: invokestatic  #15
1027: aload         46
1029: invokestatic  #15
1032: aload         47
1034: invokestatic  #15
1037: aload         48
1039: invokestatic  #15
1042: new           #16
1045: dup
1046: invokespecial #17
1049: ldc           #18
1051: invokevirtual #19
1054: iload         51
1056: invokevirtual #20
1059: ldc           #21
1061: invokevirtual #19
1064: iconst_0
1065: invokevirtual #20
1068: ldc           #18
1070: invokevirtual #19
1073: invokevirtual #22
1076: iload         51
1078: ifne          1085
1081: iconst_1
1082: goto          1086
1085: iconst_0
1086: invokestatic  #23
1089: aload         52
1091: invokestatic  #15
1094: new           #16
1097: dup
1098: invokespecial #17
1101: ldc           #18
1103: invokevirtual #19
1106: iload         53
1108: invokevirtual #20
1111: ldc           #21
1113: invokevirtual #19
1116: iconst_0
1117: invokevirtual #20
1120: ldc           #18
1122: invokevirtual #19
1125: invokevirtual #22
1128: iload         53
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #23
1141: aload         54
1143: invokestatic  #15
1146: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test136
Start line: 6579
End line: 6642
Method source code: 
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        java.lang.Object obj1 = objList0.poll();
        java.util.ListIterator<java.lang.Object> objItor2 = objList0.listIterator();
        objList0.clear();
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str7 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist6);
        boolean boolean9 = whitelist6.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist19 = whitelist13.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist23 = whitelist13.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str24 = org.jsoup.Jsoup.clean("hi!", whitelist13);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist30 = whitelist28.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str35 = org.jsoup.Jsoup.clean(":lt(32)", whitelist34);
        org.jsoup.safety.Whitelist whitelist39 = whitelist34.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray46 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist47 = whitelist34.addTags(strArray46);
        org.jsoup.safety.Whitelist whitelist48 = whitelist30.addProtocols(":matchesOwn(null", "hi!", strArray46);
        java.lang.String[] strArray57 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean58 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray57);
        org.jsoup.safety.Whitelist whitelist59 = whitelist48.addProtocols("\n<!--hi!-->", "#document", strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.safety.Whitelist whitelist62 = whitelist13.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray57);
        org.jsoup.safety.Whitelist whitelist63 = whitelist6.addTags(strArray57);
        java.lang.CharSequence[] charSequenceArray64 = objList0.toArray((java.lang.CharSequence[]) strArray57);
        java.lang.Object obj65 = null;
        objList0.addFirst(obj65);
        java.lang.Object obj67 = objList0.getFirst();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(objItor2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[hi!$=   ]" + "'", str7, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ":lt(32)" + "'", str35, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertNull(obj67);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #559
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: invokevirtual #402
37: astore_2
38: aload_1
39: invokevirtual #403
42: astore_3
43: aload_1
44: invokevirtual #131
47: invokestatic  #8
50: astore        4
52: ldc           #109
54: ldc           #110
56: aload         4
58: invokestatic  #94
61: astore        5
63: aload         4
65: ldc           #25
67: invokevirtual #83
70: istore        6
72: aload         4
74: iconst_0
75: invokevirtual #9
78: astore        7
80: invokestatic  #8
83: astore        8
85: aload         8
87: iconst_1
88: invokevirtual #9
91: astore        9
93: aload         8
95: ldc           #10
97: ldc           #10
99: ldc           #10
101: invokevirtual #11
104: astore        10
106: aload         8
108: ldc           #12
110: ldc           #13
112: ldc           #12
114: invokevirtual #11
117: astore        11
119: ldc           #12
121: aload         8
123: invokestatic  #81
126: astore        12
128: invokestatic  #8
131: astore        13
133: aload         13
135: iconst_1
136: invokevirtual #9
139: astore        14
141: aload         14
143: iconst_0
144: invokevirtual #9
147: astore        15
149: invokestatic  #118
152: astore        16
154: ldc           #43
156: aload         16
158: invokestatic  #81
161: astore        17
163: aload         16
165: ldc           #43
167: ldc           #12
169: ldc           #32
171: invokevirtual #11
174: astore        18
176: bipush        6
178: anewarray     #119
181: dup
182: iconst_0
183: ldc           #109
185: aastore
186: dup
187: iconst_1
188: ldc           #10
190: aastore
191: dup
192: iconst_2
193: ldc           #13
195: aastore
196: dup
197: iconst_3
198: ldc           #50
200: aastore
201: dup
202: iconst_4
203: ldc           #12
205: aastore
206: dup
207: iconst_5
208: ldc           #120
210: aastore
211: astore        19
213: aload         16
215: aload         19
217: invokevirtual #121
220: astore        20
222: aload         15
224: ldc           #38
226: ldc           #12
228: aload         19
230: invokevirtual #122
233: astore        21
235: iconst_5
236: anewarray     #119
239: dup
240: iconst_0
241: ldc           #13
243: aastore
244: dup
245: iconst_1
246: ldc           #32
248: aastore
249: dup
250: iconst_2
251: ldc           #10
253: aastore
254: dup
255: iconst_3
256: ldc           #43
258: aastore
259: dup
260: iconst_4
261: ldc           #58
263: aastore
264: astore        22
266: ldc           #10
268: aload         22
270: invokestatic  #123
273: istore        23
275: aload         21
277: ldc           #84
279: ldc           #13
281: aload         22
283: invokevirtual #122
286: astore        24
288: aload         22
290: checkcast     #124
293: invokestatic  #125
296: aload         22
298: checkcast     #124
301: invokestatic  #125
304: aload         8
306: ldc           #249
308: aload         22
310: invokevirtual #127
313: astore        25
315: aload         4
317: aload         22
319: invokevirtual #121
322: astore        26
324: aload_1
325: aload         22
327: checkcast     #560
330: invokevirtual #561
333: checkcast     #560
336: astore        27
338: aconst_null
339: astore        28
341: aload_1
342: aload         28
344: invokevirtual #93
347: aload_1
348: invokevirtual #562
351: astore        29
353: aload_2
354: invokestatic  #79
357: aload_3
358: invokestatic  #15
361: aload         4
363: invokestatic  #15
366: new           #16
369: dup
370: invokespecial #17
373: ldc           #18
375: invokevirtual #19
378: aload         5
380: invokevirtual #19
383: ldc           #111
385: invokevirtual #19
388: invokevirtual #22
391: aload         5
393: ldc           #65
395: invokestatic  #68
398: new           #16
401: dup
402: invokespecial #17
405: ldc           #18
407: invokevirtual #19
410: iload         6
412: invokevirtual #20
415: ldc           #21
417: invokevirtual #19
420: iconst_0
421: invokevirtual #20
424: ldc           #18
426: invokevirtual #19
429: invokevirtual #22
432: iload         6
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #23
445: aload         7
447: invokestatic  #15
450: aload         8
452: invokestatic  #15
455: aload         9
457: invokestatic  #15
460: aload         10
462: invokestatic  #15
465: aload         11
467: invokestatic  #15
470: new           #16
473: dup
474: invokespecial #17
477: ldc           #18
479: invokevirtual #19
482: aload         12
484: invokevirtual #19
487: ldc           #211
489: invokevirtual #19
492: invokevirtual #22
495: aload         12
497: ldc           #12
499: invokestatic  #68
502: aload         13
504: invokestatic  #15
507: aload         14
509: invokestatic  #15
512: aload         15
514: invokestatic  #15
517: aload         16
519: invokestatic  #15
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: aload         17
536: invokevirtual #19
539: ldc           #128
541: invokevirtual #19
544: invokevirtual #22
547: aload         17
549: ldc           #43
551: invokestatic  #68
554: aload         18
556: invokestatic  #15
559: aload         19
561: invokestatic  #15
564: aload         20
566: invokestatic  #15
569: aload         21
571: invokestatic  #15
574: aload         22
576: invokestatic  #15
579: new           #16
582: dup
583: invokespecial #17
586: ldc           #18
588: invokevirtual #19
591: iload         23
593: invokevirtual #20
596: ldc           #21
598: invokevirtual #19
601: iconst_1
602: invokevirtual #20
605: ldc           #18
607: invokevirtual #19
610: invokevirtual #22
613: iload         23
615: iconst_1
616: if_icmpne     623
619: iconst_1
620: goto          624
623: iconst_0
624: invokestatic  #23
627: aload         24
629: invokestatic  #15
632: aload         25
634: invokestatic  #15
637: aload         26
639: invokestatic  #15
642: aload         27
644: invokestatic  #15
647: aload         29
649: invokestatic  #79
652: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test137
Start line: 6645
End line: 6695
Method source code: 
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.select.Elements elements37 = document25.getElementsByIndexEquals((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node38 = document25.unwrap();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(elements37);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #563
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: bipush        10
199: invokevirtual #162
202: astore        21
204: aload         13
206: invokevirtual #564
209: astore        22
211: ldc           #34
213: invokestatic  #35
216: goto          221
219: astore        22
221: aload_1
222: invokestatic  #15
225: aload_2
226: invokestatic  #15
229: aload         5
231: invokestatic  #15
234: aload         6
236: invokestatic  #15
239: aload         7
241: invokestatic  #15
244: aload         8
246: invokestatic  #15
249: aload         9
251: invokestatic  #15
254: aload         10
256: invokestatic  #15
259: new           #16
262: dup
263: invokespecial #17
266: ldc           #18
268: invokevirtual #19
271: iload         11
273: invokevirtual #20
276: ldc           #21
278: invokevirtual #19
281: iconst_0
282: invokevirtual #20
285: ldc           #18
287: invokevirtual #19
290: invokevirtual #22
293: iload         11
295: ifne          302
298: iconst_1
299: goto          303
302: iconst_0
303: invokestatic  #23
306: aload         12
308: invokestatic  #15
311: aload         13
313: invokestatic  #15
316: aload         14
318: invokestatic  #15
321: aload         15
323: invokestatic  #15
326: aload         16
328: invokestatic  #15
331: new           #16
334: dup
335: invokespecial #17
338: ldc           #18
340: invokevirtual #19
343: aload         17
345: invokevirtual #19
348: ldc           #78
350: invokevirtual #19
353: invokevirtual #22
356: aload         17
358: ldc           #10
360: invokestatic  #68
363: new           #16
366: dup
367: invokespecial #17
370: ldc           #18
372: invokevirtual #19
375: aload         18
377: invokevirtual #19
380: ldc           #67
382: invokevirtual #19
385: invokevirtual #22
388: aload         18
390: ldc           #25
392: invokestatic  #68
395: aload         19
397: invokestatic  #79
400: aload         20
402: invokestatic  #15
405: aload         21
407: invokestatic  #15
410: return
Exception table:
from    to  target type
204   216   219   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test138
Start line: 6698
End line: 6781
Method source code: 
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("#text");
        java.lang.String str7 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist4);
        java.lang.String str8 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist4);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str15 = org.jsoup.Jsoup.clean(":lt(32)", whitelist14);
        boolean boolean17 = whitelist14.isSafeTag("");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element24 = document21.empty();
        org.jsoup.nodes.Element element26 = document21.removeClass("hi!");
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.tagName("hi!");
        org.jsoup.nodes.Element element36 = document30.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = document30.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings37.prettyPrint(false);
        org.jsoup.nodes.Document document40 = document21.outputSettings(outputSettings39);
        java.lang.String str41 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist14, outputSettings39);
        org.jsoup.safety.Whitelist whitelist44 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str45 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist44);
        org.jsoup.safety.Whitelist whitelist47 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist49 = whitelist47.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist51 = whitelist49.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist55 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str56 = org.jsoup.Jsoup.clean(":lt(32)", whitelist55);
        org.jsoup.safety.Whitelist whitelist60 = whitelist55.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray67 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist68 = whitelist55.addTags(strArray67);
        org.jsoup.safety.Whitelist whitelist69 = whitelist51.addProtocols(":matchesOwn(null", "hi!", strArray67);
        java.lang.String[] strArray78 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean79 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray78);
        org.jsoup.safety.Whitelist whitelist80 = whitelist69.addProtocols("\n<!--hi!-->", "#document", strArray78);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray78);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray78);
        org.jsoup.safety.Whitelist whitelist83 = whitelist44.addAttributes("*", strArray78);
        org.jsoup.safety.Whitelist whitelist84 = whitelist14.addTags(strArray78);
        boolean boolean85 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", strArray78);
        org.jsoup.safety.Whitelist whitelist86 = whitelist4.addAttributes(":matchesOwn(null", strArray78);
        org.jsoup.nodes.Attributes attributes88 = whitelist4.getEnforcedAttributes("<html>\n <head></head>\n <body>\n </body>\n</html>");
        java.util.Map<java.lang.String, java.lang.String> strMap89 = attributes88.dataset();
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[    ^=hi!]" + "'", str8, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":lt(32)" + "'", str15, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[:lt(32)]" + "'", str41, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!$=   ]" + "'", str45, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ":lt(32)" + "'", str56, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(whitelist84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(whitelist86);
        org.junit.Assert.assertNotNull(attributes88);
        org.junit.Assert.assertNotNull(strMap89);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #565
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: invokestatic  #118
58: astore        5
60: ldc           #43
62: aload         5
64: invokestatic  #81
67: astore        6
69: aload         5
71: ldc           #25
73: invokevirtual #83
76: istore        7
78: ldc           #25
80: ldc           #12
82: invokestatic  #26
85: astore        8
87: ldc           #12
89: aload         8
91: ldc           #12
93: invokestatic  #27
96: astore        9
98: aload         8
100: invokevirtual #103
103: astore        10
105: aload         8
107: ldc           #12
109: invokevirtual #59
112: astore        11
114: ldc           #25
116: ldc           #12
118: invokestatic  #26
121: astore        12
123: ldc           #12
125: aload         12
127: ldc           #12
129: invokestatic  #27
132: astore        13
134: aload         12
136: ldc           #12
138: invokevirtual #28
141: astore        14
143: aload         12
145: ldc           #25
147: invokevirtual #29
150: astore        15
152: aload         12
154: invokevirtual #30
157: astore        16
159: aload         16
161: iconst_0
162: invokevirtual #31
165: astore        17
167: aload         8
169: aload         17
171: invokevirtual #175
174: astore        18
176: ldc           #58
178: ldc           #126
180: aload         5
182: aload         17
184: invokestatic  #33
187: astore        19
189: invokestatic  #8
192: astore        20
194: ldc           #109
196: ldc           #110
198: aload         20
200: invokestatic  #94
203: astore        21
205: invokestatic  #8
208: astore        22
210: aload         22
212: iconst_1
213: invokevirtual #9
216: astore        23
218: aload         23
220: iconst_0
221: invokevirtual #9
224: astore        24
226: invokestatic  #118
229: astore        25
231: ldc           #43
233: aload         25
235: invokestatic  #81
238: astore        26
240: aload         25
242: ldc           #43
244: ldc           #12
246: ldc           #32
248: invokevirtual #11
251: astore        27
253: bipush        6
255: anewarray     #119
258: dup
259: iconst_0
260: ldc           #109
262: aastore
263: dup
264: iconst_1
265: ldc           #10
267: aastore
268: dup
269: iconst_2
270: ldc           #13
272: aastore
273: dup
274: iconst_3
275: ldc           #50
277: aastore
278: dup
279: iconst_4
280: ldc           #12
282: aastore
283: dup
284: iconst_5
285: ldc           #120
287: aastore
288: astore        28
290: aload         25
292: aload         28
294: invokevirtual #121
297: astore        29
299: aload         24
301: ldc           #38
303: ldc           #12
305: aload         28
307: invokevirtual #122
310: astore        30
312: iconst_5
313: anewarray     #119
316: dup
317: iconst_0
318: ldc           #13
320: aastore
321: dup
322: iconst_1
323: ldc           #32
325: aastore
326: dup
327: iconst_2
328: ldc           #10
330: aastore
331: dup
332: iconst_3
333: ldc           #43
335: aastore
336: dup
337: iconst_4
338: ldc           #58
340: aastore
341: astore        31
343: ldc           #10
345: aload         31
347: invokestatic  #123
350: istore        32
352: aload         30
354: ldc           #84
356: ldc           #13
358: aload         31
360: invokevirtual #122
363: astore        33
365: aload         31
367: checkcast     #124
370: invokestatic  #125
373: aload         31
375: checkcast     #124
378: invokestatic  #125
381: aload         20
383: ldc           #126
385: aload         31
387: invokevirtual #127
390: astore        34
392: aload         5
394: aload         31
396: invokevirtual #121
399: astore        35
401: ldc           #82
403: aload         31
405: invokestatic  #123
408: istore        36
410: aload_1
411: ldc           #38
413: aload         31
415: invokevirtual #127
418: astore        37
420: aload_1
421: ldc           #157
423: invokevirtual #150
426: astore        38
428: aload         38
430: invokevirtual #471
433: astore        39
435: aload_1
436: invokestatic  #15
439: aload_2
440: invokestatic  #15
443: new           #16
446: dup
447: invokespecial #17
450: ldc           #18
452: invokevirtual #19
455: aload_3
456: invokevirtual #19
459: ldc           #67
461: invokevirtual #19
464: invokevirtual #22
467: aload_3
468: ldc           #25
470: invokestatic  #68
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: aload         4
487: invokevirtual #19
490: ldc           #172
492: invokevirtual #19
495: invokevirtual #22
498: aload         4
500: ldc           #173
502: invokestatic  #68
505: aload         5
507: invokestatic  #15
510: new           #16
513: dup
514: invokespecial #17
517: ldc           #18
519: invokevirtual #19
522: aload         6
524: invokevirtual #19
527: ldc           #128
529: invokevirtual #19
532: invokevirtual #22
535: aload         6
537: ldc           #43
539: invokestatic  #68
542: new           #16
545: dup
546: invokespecial #17
549: ldc           #18
551: invokevirtual #19
554: iload         7
556: invokevirtual #20
559: ldc           #21
561: invokevirtual #19
564: iconst_0
565: invokevirtual #20
568: ldc           #18
570: invokevirtual #19
573: invokevirtual #22
576: iload         7
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #23
589: aload         8
591: invokestatic  #15
594: aload         9
596: invokestatic  #15
599: aload         10
601: invokestatic  #15
604: aload         11
606: invokestatic  #15
609: aload         12
611: invokestatic  #15
614: aload         13
616: invokestatic  #15
619: aload         14
621: invokestatic  #15
624: aload         15
626: invokestatic  #15
629: aload         16
631: invokestatic  #15
634: aload         17
636: invokestatic  #15
639: aload         18
641: invokestatic  #15
644: new           #16
647: dup
648: invokespecial #17
651: ldc           #18
653: invokevirtual #19
656: aload         19
658: invokevirtual #19
661: ldc           #184
663: invokevirtual #19
666: invokevirtual #22
669: aload         19
671: ldc           #58
673: invokestatic  #68
676: aload         20
678: invokestatic  #15
681: new           #16
684: dup
685: invokespecial #17
688: ldc           #18
690: invokevirtual #19
693: aload         21
695: invokevirtual #19
698: ldc           #111
700: invokevirtual #19
703: invokevirtual #22
706: aload         21
708: ldc           #65
710: invokestatic  #68
713: aload         22
715: invokestatic  #15
718: aload         23
720: invokestatic  #15
723: aload         24
725: invokestatic  #15
728: aload         25
730: invokestatic  #15
733: new           #16
736: dup
737: invokespecial #17
740: ldc           #18
742: invokevirtual #19
745: aload         26
747: invokevirtual #19
750: ldc           #128
752: invokevirtual #19
755: invokevirtual #22
758: aload         26
760: ldc           #43
762: invokestatic  #68
765: aload         27
767: invokestatic  #15
770: aload         28
772: invokestatic  #15
775: aload         29
777: invokestatic  #15
780: aload         30
782: invokestatic  #15
785: aload         31
787: invokestatic  #15
790: new           #16
793: dup
794: invokespecial #17
797: ldc           #18
799: invokevirtual #19
802: iload         32
804: invokevirtual #20
807: ldc           #21
809: invokevirtual #19
812: iconst_1
813: invokevirtual #20
816: ldc           #18
818: invokevirtual #19
821: invokevirtual #22
824: iload         32
826: iconst_1
827: if_icmpne     834
830: iconst_1
831: goto          835
834: iconst_0
835: invokestatic  #23
838: aload         33
840: invokestatic  #15
843: aload         34
845: invokestatic  #15
848: aload         35
850: invokestatic  #15
853: new           #16
856: dup
857: invokespecial #17
860: ldc           #18
862: invokevirtual #19
865: iload         36
867: invokevirtual #20
870: ldc           #21
872: invokevirtual #19
875: iconst_0
876: invokevirtual #20
879: ldc           #18
881: invokevirtual #19
884: invokevirtual #22
887: iload         36
889: ifne          896
892: iconst_1
893: goto          897
896: iconst_0
897: invokestatic  #23
900: aload         37
902: invokestatic  #15
905: aload         38
907: invokestatic  #15
910: aload         39
912: invokestatic  #15
915: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test139
Start line: 6784
End line: 6798
Method source code: 
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner4 = new org.jsoup.safety.Cleaner(whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("#document");
        org.jsoup.safety.Whitelist whitelist10 = whitelist3.addEnforcedAttribute("          ", "\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        boolean boolean11 = org.jsoup.Jsoup.isValid(":lt(32)=\"\"=\".\"", whitelist3);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #566
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: aload_2
45: ldc           #13
47: invokevirtual #83
50: istore        4
52: aload_2
53: ldc           #239
55: ldc_w         #298
58: ldc           #110
60: invokevirtual #11
63: astore        5
65: ldc_w         #329
68: aload_2
69: invokestatic  #14
72: istore        6
74: aload_1
75: invokestatic  #15
78: aload_2
79: invokestatic  #15
82: new           #16
85: dup
86: invokespecial #17
89: ldc           #18
91: invokevirtual #19
94: iload         4
96: invokevirtual #20
99: ldc           #21
101: invokevirtual #19
104: iconst_0
105: invokevirtual #20
108: ldc           #18
110: invokevirtual #19
113: invokevirtual #22
116: iload         4
118: ifne          125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #23
129: aload         5
131: invokestatic  #15
134: new           #16
137: dup
138: invokespecial #17
141: ldc           #18
143: invokevirtual #19
146: iload         6
148: invokevirtual #20
151: ldc           #21
153: invokevirtual #19
156: iconst_1
157: invokevirtual #20
160: ldc           #18
162: invokevirtual #19
165: invokevirtual #22
168: iload         6
170: iconst_1
171: if_icmpne     178
174: iconst_1
175: goto          179
178: iconst_0
179: invokestatic  #23
182: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test140
Start line: 6801
End line: 6889
Method source code: 
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList3 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList9 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document7, "hi!");
        org.jsoup.nodes.Element element11 = document7.text("");
        int int12 = objList3.lastIndexOf((java.lang.Object) document7);
        objList0.addFirst((java.lang.Object) document7);
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element20 = document17.empty();
        org.jsoup.nodes.Element element22 = document17.removeClass("hi!");
        boolean boolean23 = objList0.equals((java.lang.Object) "hi!");
        java.util.ListIterator<java.lang.Object> objItor25 = objList0.listIterator(1);
        java.lang.Object obj26 = objList0.getLast();
        java.lang.Object obj27 = objList0.getLast();
        java.lang.Object obj29 = objList0.remove(0);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist32 = whitelist30.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner33 = new org.jsoup.safety.Cleaner(whitelist32);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining36 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document38 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.tagName("hi!");
        org.jsoup.nodes.Element element48 = document42.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = document42.outputSettings();
        boolean boolean50 = attributeWithValueContaining36.matches((org.jsoup.nodes.Element) document38, (org.jsoup.nodes.Element) document42);
        org.jsoup.nodes.Document document51 = cleaner33.clean(document42);
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList57 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document55, "hi!");
        org.jsoup.nodes.Element element59 = document55.tagName("hi!");
        org.jsoup.nodes.Element element61 = document55.append("");
        java.lang.String str62 = document55.toString();
        java.lang.String str63 = document55.id();
        org.jsoup.nodes.Node node64 = document55.parent();
        org.jsoup.nodes.Document document65 = cleaner33.clean(document55);
        java.lang.String str66 = document55.title();
        org.jsoup.nodes.Element element68 = document55.removeClass(":eq(1)");
        objList0.addLast((java.lang.Object) element68);
        java.lang.String str70 = objList0.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objItor25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str62, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[<html>\n <head></head>\n <body></body>\n</html>]" + "'", str70, "[<html>\n <head></head>\n <body></body>\n</html>]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #567
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: new           #88
43: dup
44: invokespecial #89
47: astore_3
48: ldc           #25
50: ldc           #12
52: invokestatic  #26
55: astore        4
57: ldc           #12
59: aload         4
61: ldc           #12
63: invokestatic  #27
66: astore        5
68: aload         4
70: ldc           #25
72: invokevirtual #64
75: astore        6
77: aload_3
78: aload         4
80: invokevirtual #130
83: istore        7
85: aload_1
86: aload         4
88: invokevirtual #93
91: ldc           #25
93: ldc           #12
95: invokestatic  #26
98: astore        8
100: ldc           #12
102: aload         8
104: ldc           #12
106: invokestatic  #27
109: astore        9
111: aload         8
113: invokevirtual #103
116: astore        10
118: aload         8
120: ldc           #12
122: invokevirtual #59
125: astore        11
127: aload_1
128: ldc           #12
130: invokevirtual #90
133: istore        12
135: aload_1
136: iconst_1
137: invokevirtual #568
140: astore        13
142: aload_1
143: invokevirtual #569
146: astore        14
148: aload_1
149: invokevirtual #569
152: astore        15
154: aload_1
155: iconst_0
156: invokevirtual #407
159: astore        16
161: invokestatic  #8
164: astore        17
166: aload         17
168: iconst_1
169: invokevirtual #9
172: astore        18
174: new           #40
177: dup
178: aload         18
180: invokespecial #41
183: astore        19
185: new           #42
188: dup
189: ldc           #43
191: ldc           #32
193: invokespecial #44
196: astore        20
198: ldc           #12
200: invokestatic  #45
203: astore        21
205: ldc           #25
207: ldc           #12
209: invokestatic  #26
212: astore        22
214: ldc           #12
216: aload         22
218: ldc           #12
220: invokestatic  #27
223: astore        23
225: aload         22
227: ldc           #12
229: invokevirtual #28
232: astore        24
234: aload         22
236: ldc           #25
238: invokevirtual #29
241: astore        25
243: aload         22
245: invokevirtual #30
248: astore        26
250: aload         20
252: aload         21
254: aload         22
256: invokevirtual #46
259: istore        27
261: aload         19
263: aload         22
265: invokevirtual #47
268: astore        28
270: ldc           #25
272: ldc           #12
274: invokestatic  #26
277: astore        29
279: ldc           #12
281: aload         29
283: ldc           #12
285: invokestatic  #27
288: astore        30
290: aload         29
292: ldc           #12
294: invokevirtual #28
297: astore        31
299: aload         29
301: ldc           #25
303: invokevirtual #29
306: astore        32
308: aload         29
310: invokevirtual #72
313: astore        33
315: aload         29
317: invokevirtual #73
320: astore        34
322: aload         29
324: invokevirtual #74
327: astore        35
329: aload         19
331: aload         29
333: invokevirtual #47
336: astore        36
338: aload         29
340: invokevirtual #448
343: astore        37
345: aload         29
347: ldc_w         #279
350: invokevirtual #59
353: astore        38
355: aload_1
356: aload         38
358: invokevirtual #95
361: aload_1
362: invokevirtual #570
365: astore        39
367: new           #16
370: dup
371: invokespecial #17
374: ldc           #18
376: invokevirtual #19
379: iload_2
380: invokevirtual #20
383: ldc           #21
385: invokevirtual #19
388: iconst_0
389: invokevirtual #20
392: ldc           #18
394: invokevirtual #19
397: invokevirtual #22
400: iload_2
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #23
412: aload         4
414: invokestatic  #15
417: aload         5
419: invokestatic  #15
422: aload         6
424: invokestatic  #15
427: new           #16
430: dup
431: invokespecial #17
434: ldc           #18
436: invokevirtual #19
439: iload         7
441: invokevirtual #134
444: ldc           #21
446: invokevirtual #19
449: iconst_m1
450: invokevirtual #134
453: ldc           #18
455: invokevirtual #19
458: invokevirtual #22
461: iload         7
463: iconst_m1
464: if_icmpne     471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #23
475: aload         8
477: invokestatic  #15
480: aload         9
482: invokestatic  #15
485: aload         10
487: invokestatic  #15
490: aload         11
492: invokestatic  #15
495: new           #16
498: dup
499: invokespecial #17
502: ldc           #18
504: invokevirtual #19
507: iload         12
509: invokevirtual #20
512: ldc           #21
514: invokevirtual #19
517: iconst_0
518: invokevirtual #20
521: ldc           #18
523: invokevirtual #19
526: invokevirtual #22
529: iload         12
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #23
542: aload         13
544: invokestatic  #15
547: aload         14
549: invokestatic  #15
552: aload         14
554: invokevirtual #571
557: ldc           #157
559: invokestatic  #290
562: aload         14
564: invokestatic  #572
567: ldc           #157
569: invokestatic  #290
572: aload         14
574: invokestatic  #573
577: ldc           #157
579: invokestatic  #290
582: aload         15
584: invokestatic  #15
587: aload         15
589: invokevirtual #571
592: ldc           #157
594: invokestatic  #290
597: aload         15
599: invokestatic  #572
602: ldc           #157
604: invokestatic  #290
607: aload         15
609: invokestatic  #573
612: ldc           #157
614: invokestatic  #290
617: aload         16
619: invokestatic  #15
622: aload         16
624: invokevirtual #571
627: ldc           #157
629: invokestatic  #290
632: aload         16
634: invokestatic  #572
637: ldc           #157
639: invokestatic  #290
642: aload         16
644: invokestatic  #573
647: ldc           #157
649: invokestatic  #290
652: aload         17
654: invokestatic  #15
657: aload         18
659: invokestatic  #15
662: aload         21
664: invokestatic  #15
667: aload         22
669: invokestatic  #15
672: aload         23
674: invokestatic  #15
677: aload         24
679: invokestatic  #15
682: aload         25
684: invokestatic  #15
687: aload         26
689: invokestatic  #15
692: new           #16
695: dup
696: invokespecial #17
699: ldc           #18
701: invokevirtual #19
704: iload         27
706: invokevirtual #20
709: ldc           #21
711: invokevirtual #19
714: iconst_0
715: invokevirtual #20
718: ldc           #18
720: invokevirtual #19
723: invokevirtual #22
726: iload         27
728: ifne          735
731: iconst_1
732: goto          736
735: iconst_0
736: invokestatic  #23
739: aload         28
741: invokestatic  #15
744: aload         29
746: invokestatic  #15
749: aload         30
751: invokestatic  #15
754: aload         31
756: invokestatic  #15
759: aload         32
761: invokestatic  #15
764: new           #16
767: dup
768: invokespecial #17
771: ldc           #18
773: invokevirtual #19
776: aload         33
778: invokevirtual #19
781: ldc           #78
783: invokevirtual #19
786: invokevirtual #22
789: aload         33
791: ldc           #10
793: invokestatic  #68
796: new           #16
799: dup
800: invokespecial #17
803: ldc           #18
805: invokevirtual #19
808: aload         34
810: invokevirtual #19
813: ldc           #67
815: invokevirtual #19
818: invokevirtual #22
821: aload         34
823: ldc           #25
825: invokestatic  #68
828: aload         35
830: invokestatic  #79
833: aload         36
835: invokestatic  #15
838: new           #16
841: dup
842: invokespecial #17
845: ldc           #18
847: invokevirtual #19
850: aload         37
852: invokevirtual #19
855: ldc           #67
857: invokevirtual #19
860: invokevirtual #22
863: aload         37
865: ldc           #25
867: invokestatic  #68
870: aload         38
872: invokestatic  #15
875: new           #16
878: dup
879: invokespecial #17
882: ldc           #18
884: invokevirtual #19
887: aload         39
889: invokevirtual #19
892: ldc_w         #574
895: invokevirtual #19
898: invokevirtual #22
901: aload         39
903: ldc_w         #575
906: invokestatic  #68
909: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test141
Start line: 6892
End line: 6947
Method source code: 
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("");
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist11 = whitelist9.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist15 = whitelist9.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist19 = whitelist9.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str20 = org.jsoup.Jsoup.clean("hi!", whitelist9);
        org.jsoup.safety.Whitelist whitelist22 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist24 = whitelist22.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str31 = org.jsoup.Jsoup.clean(":lt(32)", whitelist30);
        org.jsoup.safety.Whitelist whitelist35 = whitelist30.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray42 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist43 = whitelist30.addTags(strArray42);
        org.jsoup.safety.Whitelist whitelist44 = whitelist26.addProtocols(":matchesOwn(null", "hi!", strArray42);
        java.lang.String[] strArray53 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean54 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray53);
        org.jsoup.safety.Whitelist whitelist55 = whitelist44.addProtocols("\n<!--hi!-->", "#document", strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.jsoup.safety.Whitelist whitelist58 = whitelist9.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray53);
        org.jsoup.safety.Whitelist whitelist59 = whitelist4.addAttributes("*", strArray53);
        boolean boolean61 = whitelist4.isSafeTag("[.]");
        org.jsoup.safety.Whitelist whitelist63 = whitelist4.preserveRelativeLinks(true);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":lt(32)" + "'", str31, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(whitelist63);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #576
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: aload_3
42: ldc           #25
44: invokevirtual #150
47: astore        4
49: invokestatic  #8
52: astore        5
54: aload         5
56: iconst_1
57: invokevirtual #9
60: astore        6
62: aload         5
64: ldc           #10
66: ldc           #10
68: ldc           #10
70: invokevirtual #11
73: astore        7
75: aload         5
77: ldc           #12
79: ldc           #13
81: ldc           #12
83: invokevirtual #11
86: astore        8
88: ldc           #12
90: aload         5
92: invokestatic  #81
95: astore        9
97: invokestatic  #8
100: astore        10
102: aload         10
104: iconst_1
105: invokevirtual #9
108: astore        11
110: aload         11
112: iconst_0
113: invokevirtual #9
116: astore        12
118: invokestatic  #118
121: astore        13
123: ldc           #43
125: aload         13
127: invokestatic  #81
130: astore        14
132: aload         13
134: ldc           #43
136: ldc           #12
138: ldc           #32
140: invokevirtual #11
143: astore        15
145: bipush        6
147: anewarray     #119
150: dup
151: iconst_0
152: ldc           #109
154: aastore
155: dup
156: iconst_1
157: ldc           #10
159: aastore
160: dup
161: iconst_2
162: ldc           #13
164: aastore
165: dup
166: iconst_3
167: ldc           #50
169: aastore
170: dup
171: iconst_4
172: ldc           #12
174: aastore
175: dup
176: iconst_5
177: ldc           #120
179: aastore
180: astore        16
182: aload         13
184: aload         16
186: invokevirtual #121
189: astore        17
191: aload         12
193: ldc           #38
195: ldc           #12
197: aload         16
199: invokevirtual #122
202: astore        18
204: iconst_5
205: anewarray     #119
208: dup
209: iconst_0
210: ldc           #13
212: aastore
213: dup
214: iconst_1
215: ldc           #32
217: aastore
218: dup
219: iconst_2
220: ldc           #10
222: aastore
223: dup
224: iconst_3
225: ldc           #43
227: aastore
228: dup
229: iconst_4
230: ldc           #58
232: aastore
233: astore        19
235: ldc           #10
237: aload         19
239: invokestatic  #123
242: istore        20
244: aload         18
246: ldc           #84
248: ldc           #13
250: aload         19
252: invokevirtual #122
255: astore        21
257: aload         19
259: checkcast     #124
262: invokestatic  #125
265: aload         19
267: checkcast     #124
270: invokestatic  #125
273: aload         5
275: ldc           #249
277: aload         19
279: invokevirtual #127
282: astore        22
284: aload_3
285: ldc           #126
287: aload         19
289: invokevirtual #127
292: astore        23
294: aload_3
295: ldc_w         #421
298: invokevirtual #83
301: istore        24
303: aload_3
304: iconst_1
305: invokevirtual #9
308: astore        25
310: aload_1
311: invokestatic  #15
314: aload_2
315: invokestatic  #15
318: aload_3
319: invokestatic  #15
322: aload         4
324: invokestatic  #15
327: aload         5
329: invokestatic  #15
332: aload         6
334: invokestatic  #15
337: aload         7
339: invokestatic  #15
342: aload         8
344: invokestatic  #15
347: new           #16
350: dup
351: invokespecial #17
354: ldc           #18
356: invokevirtual #19
359: aload         9
361: invokevirtual #19
364: ldc           #211
366: invokevirtual #19
369: invokevirtual #22
372: aload         9
374: ldc           #12
376: invokestatic  #68
379: aload         10
381: invokestatic  #15
384: aload         11
386: invokestatic  #15
389: aload         12
391: invokestatic  #15
394: aload         13
396: invokestatic  #15
399: new           #16
402: dup
403: invokespecial #17
406: ldc           #18
408: invokevirtual #19
411: aload         14
413: invokevirtual #19
416: ldc           #128
418: invokevirtual #19
421: invokevirtual #22
424: aload         14
426: ldc           #43
428: invokestatic  #68
431: aload         15
433: invokestatic  #15
436: aload         16
438: invokestatic  #15
441: aload         17
443: invokestatic  #15
446: aload         18
448: invokestatic  #15
451: aload         19
453: invokestatic  #15
456: new           #16
459: dup
460: invokespecial #17
463: ldc           #18
465: invokevirtual #19
468: iload         20
470: invokevirtual #20
473: ldc           #21
475: invokevirtual #19
478: iconst_1
479: invokevirtual #20
482: ldc           #18
484: invokevirtual #19
487: invokevirtual #22
490: iload         20
492: iconst_1
493: if_icmpne     500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #23
504: aload         21
506: invokestatic  #15
509: aload         22
511: invokestatic  #15
514: aload         23
516: invokestatic  #15
519: new           #16
522: dup
523: invokespecial #17
526: ldc           #18
528: invokevirtual #19
531: iload         24
533: invokevirtual #20
536: ldc           #21
538: invokevirtual #19
541: iconst_0
542: invokevirtual #20
545: ldc           #18
547: invokevirtual #19
550: invokevirtual #22
553: iload         24
555: ifne          562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #23
566: aload         25
568: invokestatic  #15
571: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test142
Start line: 6950
End line: 6980
Method source code: 
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist8 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)", whitelist8);
        org.jsoup.safety.Whitelist whitelist13 = whitelist8.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray20 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist21 = whitelist8.addTags(strArray20);
        org.jsoup.safety.Whitelist whitelist22 = whitelist4.addProtocols(":matchesOwn(null", "hi!", strArray20);
        java.lang.String[] strArray31 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean32 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray31);
        org.jsoup.safety.Whitelist whitelist33 = whitelist22.addProtocols("\n<!--hi!-->", "#document", strArray31);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray31);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray31);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray31, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)" + "'", str9, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(whitelist33);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #577
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: invokestatic  #118
44: astore        4
46: ldc           #43
48: aload         4
50: invokestatic  #81
53: astore        5
55: aload         4
57: ldc           #43
59: ldc           #12
61: ldc           #32
63: invokevirtual #11
66: astore        6
68: bipush        6
70: anewarray     #119
73: dup
74: iconst_0
75: ldc           #109
77: aastore
78: dup
79: iconst_1
80: ldc           #10
82: aastore
83: dup
84: iconst_2
85: ldc           #13
87: aastore
88: dup
89: iconst_3
90: ldc           #50
92: aastore
93: dup
94: iconst_4
95: ldc           #12
97: aastore
98: dup
99: iconst_5
100: ldc           #120
102: aastore
103: astore        7
105: aload         4
107: aload         7
109: invokevirtual #121
112: astore        8
114: aload_3
115: ldc           #38
117: ldc           #12
119: aload         7
121: invokevirtual #122
124: astore        9
126: iconst_5
127: anewarray     #119
130: dup
131: iconst_0
132: ldc           #13
134: aastore
135: dup
136: iconst_1
137: ldc           #32
139: aastore
140: dup
141: iconst_2
142: ldc           #10
144: aastore
145: dup
146: iconst_3
147: ldc           #43
149: aastore
150: dup
151: iconst_4
152: ldc           #58
154: aastore
155: astore        10
157: ldc           #10
159: aload         10
161: invokestatic  #123
164: istore        11
166: aload         9
168: ldc           #84
170: ldc           #13
172: aload         10
174: invokevirtual #122
177: astore        12
179: aload         10
181: checkcast     #124
184: invokestatic  #125
187: aload         10
189: checkcast     #124
192: invokestatic  #125
195: aload         10
197: checkcast     #124
200: ldc           #65
202: invokestatic  #245
205: aload_1
206: invokestatic  #15
209: aload_2
210: invokestatic  #15
213: aload_3
214: invokestatic  #15
217: aload         4
219: invokestatic  #15
222: new           #16
225: dup
226: invokespecial #17
229: ldc           #18
231: invokevirtual #19
234: aload         5
236: invokevirtual #19
239: ldc           #128
241: invokevirtual #19
244: invokevirtual #22
247: aload         5
249: ldc           #43
251: invokestatic  #68
254: aload         6
256: invokestatic  #15
259: aload         7
261: invokestatic  #15
264: aload         8
266: invokestatic  #15
269: aload         9
271: invokestatic  #15
274: aload         10
276: invokestatic  #15
279: new           #16
282: dup
283: invokespecial #17
286: ldc           #18
288: invokevirtual #19
291: iload         11
293: invokevirtual #20
296: ldc           #21
298: invokevirtual #19
301: iconst_1
302: invokevirtual #20
305: ldc           #18
307: invokevirtual #19
310: invokevirtual #22
313: iload         11
315: iconst_1
316: if_icmpne     323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #23
327: aload         12
329: invokestatic  #15
332: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test143
Start line: 6983
End line: 6998
Method source code: 
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist11 = whitelist7.addEnforcedAttribute("[^hi!]", "<html>\n <head></head>\n <body>   \n </body>\n</html>", "#comment");
        org.jsoup.nodes.Attributes attributes13 = whitelist7.getEnforcedAttributes("[^hi!]");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(attributes13);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #578
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: aload         4
54: ldc           #50
56: ldc           #151
58: ldc           #114
60: invokevirtual #11
63: astore        5
65: aload         4
67: ldc           #50
69: invokevirtual #150
72: astore        6
74: aload_1
75: invokestatic  #15
78: new           #16
81: dup
82: invokespecial #17
85: ldc           #18
87: invokevirtual #19
90: aload_2
91: invokevirtual #19
94: ldc           #111
96: invokevirtual #19
99: invokevirtual #22
102: aload_2
103: ldc           #65
105: invokestatic  #68
108: new           #16
111: dup
112: invokespecial #17
115: ldc           #18
117: invokevirtual #19
120: iload_3
121: invokevirtual #20
124: ldc           #21
126: invokevirtual #19
129: iconst_0
130: invokevirtual #20
133: ldc           #18
135: invokevirtual #19
138: invokevirtual #22
141: iload_3
142: ifne          149
145: iconst_1
146: goto          150
149: iconst_0
150: invokestatic  #23
153: aload         4
155: invokestatic  #15
158: aload         5
160: invokestatic  #15
163: aload         6
165: invokestatic  #15
168: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test144
Start line: 7001
End line: 7066
Method source code: 
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str7 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist6);
        boolean boolean9 = whitelist6.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist19 = whitelist13.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist23 = whitelist13.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str24 = org.jsoup.Jsoup.clean("hi!", whitelist13);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist30 = whitelist28.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str35 = org.jsoup.Jsoup.clean(":lt(32)", whitelist34);
        org.jsoup.safety.Whitelist whitelist39 = whitelist34.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray46 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist47 = whitelist34.addTags(strArray46);
        org.jsoup.safety.Whitelist whitelist48 = whitelist30.addProtocols(":matchesOwn(null", "hi!", strArray46);
        java.lang.String[] strArray57 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean58 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray57);
        org.jsoup.safety.Whitelist whitelist59 = whitelist48.addProtocols("\n<!--hi!-->", "#document", strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.safety.Whitelist whitelist62 = whitelist13.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray57);
        org.jsoup.safety.Whitelist whitelist63 = whitelist6.addTags(strArray57);
        org.jsoup.safety.Whitelist whitelist64 = whitelist2.addAttributes("[    ^=hi!]", strArray57);
        boolean boolean66 = whitelist64.isSafeTag(" ");
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = org.jsoup.Jsoup.clean("[[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]!=#document]", ":matchesOwn(null", whitelist64, outputSettings67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[hi!$=   ]" + "'", str7, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ":lt(32)" + "'", str35, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #579
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: invokestatic  #8
32: astore_2
33: ldc           #109
35: ldc           #110
37: aload_2
38: invokestatic  #94
41: astore_3
42: aload_2
43: ldc           #25
45: invokevirtual #83
48: istore        4
50: aload_2
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #8
60: astore        6
62: aload         6
64: iconst_1
65: invokevirtual #9
68: astore        7
70: aload         6
72: ldc           #10
74: ldc           #10
76: ldc           #10
78: invokevirtual #11
81: astore        8
83: aload         6
85: ldc           #12
87: ldc           #13
89: ldc           #12
91: invokevirtual #11
94: astore        9
96: ldc           #12
98: aload         6
100: invokestatic  #81
103: astore        10
105: invokestatic  #8
108: astore        11
110: aload         11
112: iconst_1
113: invokevirtual #9
116: astore        12
118: aload         12
120: iconst_0
121: invokevirtual #9
124: astore        13
126: invokestatic  #118
129: astore        14
131: ldc           #43
133: aload         14
135: invokestatic  #81
138: astore        15
140: aload         14
142: ldc           #43
144: ldc           #12
146: ldc           #32
148: invokevirtual #11
151: astore        16
153: bipush        6
155: anewarray     #119
158: dup
159: iconst_0
160: ldc           #109
162: aastore
163: dup
164: iconst_1
165: ldc           #10
167: aastore
168: dup
169: iconst_2
170: ldc           #13
172: aastore
173: dup
174: iconst_3
175: ldc           #50
177: aastore
178: dup
179: iconst_4
180: ldc           #12
182: aastore
183: dup
184: iconst_5
185: ldc           #120
187: aastore
188: astore        17
190: aload         14
192: aload         17
194: invokevirtual #121
197: astore        18
199: aload         13
201: ldc           #38
203: ldc           #12
205: aload         17
207: invokevirtual #122
210: astore        19
212: iconst_5
213: anewarray     #119
216: dup
217: iconst_0
218: ldc           #13
220: aastore
221: dup
222: iconst_1
223: ldc           #32
225: aastore
226: dup
227: iconst_2
228: ldc           #10
230: aastore
231: dup
232: iconst_3
233: ldc           #43
235: aastore
236: dup
237: iconst_4
238: ldc           #58
240: aastore
241: astore        20
243: ldc           #10
245: aload         20
247: invokestatic  #123
250: istore        21
252: aload         19
254: ldc           #84
256: ldc           #13
258: aload         20
260: invokevirtual #122
263: astore        22
265: aload         20
267: checkcast     #124
270: invokestatic  #125
273: aload         20
275: checkcast     #124
278: invokestatic  #125
281: aload         6
283: ldc           #249
285: aload         20
287: invokevirtual #127
290: astore        23
292: aload_2
293: aload         20
295: invokevirtual #121
298: astore        24
300: aload_1
301: ldc           #173
303: aload         20
305: invokevirtual #127
308: astore        25
310: aload         25
312: ldc           #180
314: invokevirtual #83
317: istore        26
319: aconst_null
320: astore        27
322: ldc_w         #580
325: ldc           #38
327: aload         25
329: aload         27
331: invokestatic  #33
334: astore        28
336: ldc           #34
338: invokestatic  #35
341: goto          346
344: astore        28
346: aload_1
347: invokestatic  #15
350: aload_2
351: invokestatic  #15
354: new           #16
357: dup
358: invokespecial #17
361: ldc           #18
363: invokevirtual #19
366: aload_3
367: invokevirtual #19
370: ldc           #111
372: invokevirtual #19
375: invokevirtual #22
378: aload_3
379: ldc           #65
381: invokestatic  #68
384: new           #16
387: dup
388: invokespecial #17
391: ldc           #18
393: invokevirtual #19
396: iload         4
398: invokevirtual #20
401: ldc           #21
403: invokevirtual #19
406: iconst_0
407: invokevirtual #20
410: ldc           #18
412: invokevirtual #19
415: invokevirtual #22
418: iload         4
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #23
431: aload         5
433: invokestatic  #15
436: aload         6
438: invokestatic  #15
441: aload         7
443: invokestatic  #15
446: aload         8
448: invokestatic  #15
451: aload         9
453: invokestatic  #15
456: new           #16
459: dup
460: invokespecial #17
463: ldc           #18
465: invokevirtual #19
468: aload         10
470: invokevirtual #19
473: ldc           #211
475: invokevirtual #19
478: invokevirtual #22
481: aload         10
483: ldc           #12
485: invokestatic  #68
488: aload         11
490: invokestatic  #15
493: aload         12
495: invokestatic  #15
498: aload         13
500: invokestatic  #15
503: aload         14
505: invokestatic  #15
508: new           #16
511: dup
512: invokespecial #17
515: ldc           #18
517: invokevirtual #19
520: aload         15
522: invokevirtual #19
525: ldc           #128
527: invokevirtual #19
530: invokevirtual #22
533: aload         15
535: ldc           #43
537: invokestatic  #68
540: aload         16
542: invokestatic  #15
545: aload         17
547: invokestatic  #15
550: aload         18
552: invokestatic  #15
555: aload         19
557: invokestatic  #15
560: aload         20
562: invokestatic  #15
565: new           #16
568: dup
569: invokespecial #17
572: ldc           #18
574: invokevirtual #19
577: iload         21
579: invokevirtual #20
582: ldc           #21
584: invokevirtual #19
587: iconst_1
588: invokevirtual #20
591: ldc           #18
593: invokevirtual #19
596: invokevirtual #22
599: iload         21
601: iconst_1
602: if_icmpne     609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #23
613: aload         22
615: invokestatic  #15
618: aload         23
620: invokestatic  #15
623: aload         24
625: invokestatic  #15
628: aload         25
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         26
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         26
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: return
Exception table:
from    to  target type
322   341   344   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test145
Start line: 7069
End line: 7131
Method source code: 
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist11 = whitelist7.addEnforcedAttribute("[^hi!]", "<html>\n <head></head>\n <body>   \n </body>\n</html>", "#comment");
        org.jsoup.parser.Parser parser13 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.nodes.Document document16 = parser13.parseInput("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document19 = parser13.parseInput("hi!", "#comment");
        org.jsoup.nodes.Element element21 = document19.appendElement("#doctype");
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = document25.outputSettings();
        org.jsoup.select.Elements elements34 = document25.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element36 = document25.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes37 = document25.attributes();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = attributes37.dataset();
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.tagName("hi!");
        org.jsoup.nodes.Element element48 = document42.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = document42.outputSettings();
        org.jsoup.select.Elements elements51 = document42.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element53 = document42.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes54 = document42.attributes();
        attributes37.addAll(attributes54);
        org.jsoup.nodes.Attribute attribute58 = new org.jsoup.nodes.Attribute(":lt(32)", "");
        attributes54.put(attribute58);
        java.lang.String str60 = attribute58.getValue();
        boolean boolean61 = whitelist7.isSafeAttribute("#[:lt(32)*=.\n \n \n]", (org.jsoup.nodes.Element) document19, attribute58);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(parser13);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(outputSettings32);
        org.junit.Assert.assertNotNull(elements34);
        org.junit.Assert.assertNull(element36);
        org.junit.Assert.assertNotNull(attributes37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(elements51);
        org.junit.Assert.assertNull(element53);
        org.junit.Assert.assertNotNull(attributes54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #581
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: aload         4
54: ldc           #50
56: ldc           #151
58: ldc           #114
60: invokevirtual #11
63: astore        5
65: invokestatic  #419
68: astore        6
70: aload         6
72: ldc           #151
74: ldc           #110
76: invokevirtual #420
79: astore        7
81: aload         6
83: ldc           #12
85: ldc           #114
87: invokevirtual #420
90: astore        8
92: aload         8
94: ldc           #187
96: invokevirtual #474
99: astore        9
101: ldc           #25
103: ldc           #12
105: invokestatic  #26
108: astore        10
110: ldc           #12
112: aload         10
114: ldc           #12
116: invokestatic  #27
119: astore        11
121: aload         10
123: ldc           #12
125: invokevirtual #28
128: astore        12
130: aload         10
132: ldc           #25
134: invokevirtual #29
137: astore        13
139: aload         10
141: invokevirtual #30
144: astore        14
146: aload         10
148: iconst_m1
149: invokevirtual #162
152: astore        15
154: aload         10
156: ldc           #10
158: invokevirtual #163
161: astore        16
163: aload         10
165: invokevirtual #164
168: astore        17
170: aload         17
172: invokevirtual #471
175: astore        18
177: ldc           #25
179: ldc           #12
181: invokestatic  #26
184: astore        19
186: ldc           #12
188: aload         19
190: ldc           #12
192: invokestatic  #27
195: astore        20
197: aload         19
199: ldc           #12
201: invokevirtual #28
204: astore        21
206: aload         19
208: ldc           #25
210: invokevirtual #29
213: astore        22
215: aload         19
217: invokevirtual #30
220: astore        23
222: aload         19
224: iconst_m1
225: invokevirtual #162
228: astore        24
230: aload         19
232: ldc           #10
234: invokevirtual #163
237: astore        25
239: aload         19
241: invokevirtual #164
244: astore        26
246: aload         17
248: aload         26
250: invokevirtual #472
253: new           #263
256: dup
257: ldc           #43
259: ldc           #25
261: invokespecial #264
264: astore        27
266: aload         26
268: aload         27
270: invokevirtual #473
273: aload         27
275: invokevirtual #582
278: astore        28
280: aload         4
282: ldc_w         #311
285: aload         8
287: aload         27
289: invokevirtual #169
292: istore        29
294: aload_1
295: invokestatic  #15
298: new           #16
301: dup
302: invokespecial #17
305: ldc           #18
307: invokevirtual #19
310: aload_2
311: invokevirtual #19
314: ldc           #111
316: invokevirtual #19
319: invokevirtual #22
322: aload_2
323: ldc           #65
325: invokestatic  #68
328: new           #16
331: dup
332: invokespecial #17
335: ldc           #18
337: invokevirtual #19
340: iload_3
341: invokevirtual #20
344: ldc           #21
346: invokevirtual #19
349: iconst_0
350: invokevirtual #20
353: ldc           #18
355: invokevirtual #19
358: invokevirtual #22
361: iload_3
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #23
373: aload         4
375: invokestatic  #15
378: aload         5
380: invokestatic  #15
383: aload         6
385: invokestatic  #15
388: aload         7
390: invokestatic  #15
393: aload         8
395: invokestatic  #15
398: aload         9
400: invokestatic  #15
403: aload         10
405: invokestatic  #15
408: aload         11
410: invokestatic  #15
413: aload         12
415: invokestatic  #15
418: aload         13
420: invokestatic  #15
423: aload         14
425: invokestatic  #15
428: aload         15
430: invokestatic  #15
433: aload         16
435: invokestatic  #79
438: aload         17
440: invokestatic  #15
443: aload         18
445: invokestatic  #15
448: aload         19
450: invokestatic  #15
453: aload         20
455: invokestatic  #15
458: aload         21
460: invokestatic  #15
463: aload         22
465: invokestatic  #15
468: aload         23
470: invokestatic  #15
473: aload         24
475: invokestatic  #15
478: aload         25
480: invokestatic  #79
483: aload         26
485: invokestatic  #15
488: new           #16
491: dup
492: invokespecial #17
495: ldc           #18
497: invokevirtual #19
500: aload         28
502: invokevirtual #19
505: ldc           #67
507: invokevirtual #19
510: invokevirtual #22
513: aload         28
515: ldc           #25
517: invokestatic  #68
520: new           #16
523: dup
524: invokespecial #17
527: ldc           #18
529: invokevirtual #19
532: iload         29
534: invokevirtual #20
537: ldc           #21
539: invokevirtual #19
542: iconst_0
543: invokevirtual #20
546: ldc           #18
548: invokevirtual #19
551: invokevirtual #22
554: iload         29
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #23
567: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test146
Start line: 7134
End line: 7212
Method source code: 
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element29 = document26.empty();
        org.jsoup.nodes.Element element31 = element29.toggleClass("#document");
        org.jsoup.select.Elements elements33 = element31.getElementsByAttributeStarting(":lt(32)");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = element31.siblingNodes();
        boolean boolean35 = objList0.retainAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList34);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan37 = new org.jsoup.select.Evaluator.IndexLessThan((int) ' ');
        java.lang.String str38 = indexLessThan37.toString();
        boolean boolean39 = objList0.equals((java.lang.Object) str38);
        org.jsoup.safety.Whitelist whitelist40 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist42 = whitelist40.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner43 = new org.jsoup.safety.Cleaner(whitelist42);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining46 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document48 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document52 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList54 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document52, "hi!");
        org.jsoup.nodes.Element element56 = document52.tagName("hi!");
        org.jsoup.nodes.Element element58 = document52.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = document52.outputSettings();
        boolean boolean60 = attributeWithValueContaining46.matches((org.jsoup.nodes.Element) document48, (org.jsoup.nodes.Element) document52);
        org.jsoup.nodes.Document document61 = cleaner43.clean(document52);
        org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str64 = document63.toString();
        java.lang.String str65 = document63.baseUri();
        org.jsoup.nodes.Document document66 = cleaner43.clean(document63);
        boolean boolean67 = objList0.offerLast((java.lang.Object) document63);
        java.util.Iterator<java.lang.Object> objItor68 = objList0.descendingIterator();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(elements33);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ":lt(32)" + "'", str38, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(outputSettings59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str64, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objItor68);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #583
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        12
132: ldc           #12
134: aload         12
136: ldc           #12
138: invokestatic  #27
141: astore        13
143: aload         12
145: invokevirtual #103
148: astore        14
150: aload         14
152: ldc           #13
154: invokevirtual #177
157: astore        15
159: aload         15
161: ldc           #43
163: invokevirtual #426
166: astore        16
168: aload         15
170: invokevirtual #396
173: astore        17
175: aload_1
176: aload         17
178: invokevirtual #584
181: istore        18
183: new           #48
186: dup
187: bipush        32
189: invokespecial #49
192: astore        19
194: aload         19
196: invokevirtual #585
199: astore        20
201: aload_1
202: aload         20
204: invokevirtual #90
207: istore        21
209: invokestatic  #8
212: astore        22
214: aload         22
216: iconst_1
217: invokevirtual #9
220: astore        23
222: new           #40
225: dup
226: aload         23
228: invokespecial #41
231: astore        24
233: new           #42
236: dup
237: ldc           #43
239: ldc           #32
241: invokespecial #44
244: astore        25
246: ldc           #12
248: invokestatic  #45
251: astore        26
253: ldc           #25
255: ldc           #12
257: invokestatic  #26
260: astore        27
262: ldc           #12
264: aload         27
266: ldc           #12
268: invokestatic  #27
271: astore        28
273: aload         27
275: ldc           #12
277: invokevirtual #28
280: astore        29
282: aload         27
284: ldc           #25
286: invokevirtual #29
289: astore        30
291: aload         27
293: invokevirtual #30
296: astore        31
298: aload         25
300: aload         26
302: aload         27
304: invokevirtual #46
307: istore        32
309: aload         24
311: aload         27
313: invokevirtual #47
316: astore        33
318: ldc           #10
320: invokestatic  #193
323: astore        34
325: aload         34
327: invokevirtual #72
330: astore        35
332: aload         34
334: invokevirtual #194
337: astore        36
339: aload         24
341: aload         34
343: invokevirtual #47
346: astore        37
348: aload_1
349: aload         34
351: invokevirtual #282
354: istore        38
356: aload_1
357: invokevirtual #383
360: astore        39
362: aload_2
363: invokestatic  #15
366: aload_3
367: invokestatic  #15
370: aload         4
372: invokestatic  #15
375: aload         5
377: invokestatic  #15
380: aload         6
382: invokestatic  #15
385: aload         7
387: invokestatic  #15
390: aload         8
392: invokestatic  #15
395: aload         9
397: invokestatic  #15
400: aload         10
402: invokestatic  #15
405: aload         11
407: invokestatic  #15
410: aload         12
412: invokestatic  #15
415: aload         13
417: invokestatic  #15
420: aload         14
422: invokestatic  #15
425: aload         15
427: invokestatic  #15
430: aload         16
432: invokestatic  #15
435: aload         17
437: invokestatic  #15
440: new           #16
443: dup
444: invokespecial #17
447: ldc           #18
449: invokevirtual #19
452: iload         18
454: invokevirtual #20
457: ldc           #21
459: invokevirtual #19
462: iconst_1
463: invokevirtual #20
466: ldc           #18
468: invokevirtual #19
471: invokevirtual #22
474: iload         18
476: iconst_1
477: if_icmpne     484
480: iconst_1
481: goto          485
484: iconst_0
485: invokestatic  #23
488: new           #16
491: dup
492: invokespecial #17
495: ldc           #18
497: invokevirtual #19
500: aload         20
502: invokevirtual #19
505: ldc           #128
507: invokevirtual #19
510: invokevirtual #22
513: aload         20
515: ldc           #43
517: invokestatic  #68
520: new           #16
523: dup
524: invokespecial #17
527: ldc           #18
529: invokevirtual #19
532: iload         21
534: invokevirtual #20
537: ldc           #21
539: invokevirtual #19
542: iconst_0
543: invokevirtual #20
546: ldc           #18
548: invokevirtual #19
551: invokevirtual #22
554: iload         21
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #23
567: aload         22
569: invokestatic  #15
572: aload         23
574: invokestatic  #15
577: aload         26
579: invokestatic  #15
582: aload         27
584: invokestatic  #15
587: aload         28
589: invokestatic  #15
592: aload         29
594: invokestatic  #15
597: aload         30
599: invokestatic  #15
602: aload         31
604: invokestatic  #15
607: new           #16
610: dup
611: invokespecial #17
614: ldc           #18
616: invokevirtual #19
619: iload         32
621: invokevirtual #20
624: ldc           #21
626: invokevirtual #19
629: iconst_0
630: invokevirtual #20
633: ldc           #18
635: invokevirtual #19
638: invokevirtual #22
641: iload         32
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #23
654: aload         33
656: invokestatic  #15
659: aload         34
661: invokestatic  #15
664: new           #16
667: dup
668: invokespecial #17
671: ldc           #18
673: invokevirtual #19
676: aload         35
678: invokevirtual #19
681: ldc           #197
683: invokevirtual #19
686: invokevirtual #22
689: aload         35
691: ldc           #151
693: invokestatic  #68
696: new           #16
699: dup
700: invokespecial #17
703: ldc           #18
705: invokevirtual #19
708: aload         36
710: invokevirtual #19
713: ldc           #67
715: invokevirtual #19
718: invokevirtual #22
721: aload         36
723: ldc           #25
725: invokestatic  #68
728: aload         37
730: invokestatic  #15
733: new           #16
736: dup
737: invokespecial #17
740: ldc           #18
742: invokevirtual #19
745: iload         38
747: invokevirtual #20
750: ldc           #21
752: invokevirtual #19
755: iconst_1
756: invokevirtual #20
759: ldc           #18
761: invokevirtual #19
764: invokevirtual #22
767: iload         38
769: iconst_1
770: if_icmpne     777
773: iconst_1
774: goto          778
777: iconst_0
778: invokestatic  #23
781: aload         39
783: invokestatic  #15
786: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test147
Start line: 7215
End line: 7268
Method source code: 
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        java.util.regex.Pattern pattern1 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching2 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("\nhi!", pattern1);
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = document6.removeClass("hi!");
        java.lang.String str12 = document6.id();
        org.jsoup.nodes.Node node13 = document6.previousSibling();
        org.jsoup.nodes.Node node14 = document6.clone();
        java.lang.String str15 = document6.id();
        org.jsoup.safety.Whitelist whitelist16 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist18 = whitelist16.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner19 = new org.jsoup.safety.Cleaner(whitelist18);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining22 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document24 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = document28.outputSettings();
        boolean boolean36 = attributeWithValueContaining22.matches((org.jsoup.nodes.Element) document24, (org.jsoup.nodes.Element) document28);
        org.jsoup.nodes.Document document37 = cleaner19.clean(document28);
        org.jsoup.helper.Validate.notNull((java.lang.Object) document28, "");
        boolean boolean40 = attributeWithValueMatching2.matches((org.jsoup.nodes.Element) document6, (org.jsoup.nodes.Element) document28);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Element element42 = document28.after("<html>\n <head></head>\n <body>\n  [:lt(32)]\n </body>\n</html>");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(outputSettings35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #586
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #96
30: dup
31: ldc           #98
33: aload_1
34: invokespecial #97
37: astore_2
38: ldc           #25
40: ldc           #12
42: invokestatic  #26
45: astore_3
46: ldc           #12
48: aload_3
49: ldc           #12
51: invokestatic  #27
54: astore        4
56: aload_3
57: invokevirtual #103
60: astore        5
62: aload_3
63: ldc           #12
65: invokevirtual #59
68: astore        6
70: aload_3
71: invokevirtual #73
74: astore        7
76: aload_3
77: invokevirtual #349
80: astore        8
82: aload_3
83: invokevirtual #154
86: astore        9
88: aload_3
89: invokevirtual #73
92: astore        10
94: invokestatic  #8
97: astore        11
99: aload         11
101: iconst_1
102: invokevirtual #9
105: astore        12
107: new           #40
110: dup
111: aload         12
113: invokespecial #41
116: astore        13
118: new           #42
121: dup
122: ldc           #43
124: ldc           #32
126: invokespecial #44
129: astore        14
131: ldc           #12
133: invokestatic  #45
136: astore        15
138: ldc           #25
140: ldc           #12
142: invokestatic  #26
145: astore        16
147: ldc           #12
149: aload         16
151: ldc           #12
153: invokestatic  #27
156: astore        17
158: aload         16
160: ldc           #12
162: invokevirtual #28
165: astore        18
167: aload         16
169: ldc           #25
171: invokevirtual #29
174: astore        19
176: aload         16
178: invokevirtual #30
181: astore        20
183: aload         14
185: aload         15
187: aload         16
189: invokevirtual #46
192: istore        21
194: aload         13
196: aload         16
198: invokevirtual #47
201: astore        22
203: aload         16
205: ldc           #25
207: invokestatic  #181
210: aload_2
211: aload_3
212: aload         16
214: invokevirtual #101
217: istore        23
219: aload         16
221: ldc_w         #545
224: invokevirtual #587
227: astore        24
229: ldc           #34
231: invokestatic  #35
234: goto          239
237: astore        24
239: aload_3
240: invokestatic  #15
243: aload         4
245: invokestatic  #15
248: aload         5
250: invokestatic  #15
253: aload         6
255: invokestatic  #15
258: new           #16
261: dup
262: invokespecial #17
265: ldc           #18
267: invokevirtual #19
270: aload         7
272: invokevirtual #19
275: ldc           #67
277: invokevirtual #19
280: invokevirtual #22
283: aload         7
285: ldc           #25
287: invokestatic  #68
290: aload         8
292: invokestatic  #79
295: aload         9
297: invokestatic  #15
300: new           #16
303: dup
304: invokespecial #17
307: ldc           #18
309: invokevirtual #19
312: aload         10
314: invokevirtual #19
317: ldc           #67
319: invokevirtual #19
322: invokevirtual #22
325: aload         10
327: ldc           #25
329: invokestatic  #68
332: aload         11
334: invokestatic  #15
337: aload         12
339: invokestatic  #15
342: aload         15
344: invokestatic  #15
347: aload         16
349: invokestatic  #15
352: aload         17
354: invokestatic  #15
357: aload         18
359: invokestatic  #15
362: aload         19
364: invokestatic  #15
367: aload         20
369: invokestatic  #15
372: new           #16
375: dup
376: invokespecial #17
379: ldc           #18
381: invokevirtual #19
384: iload         21
386: invokevirtual #20
389: ldc           #21
391: invokevirtual #19
394: iconst_0
395: invokevirtual #20
398: ldc           #18
400: invokevirtual #19
403: invokevirtual #22
406: iload         21
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #23
419: aload         22
421: invokestatic  #15
424: new           #16
427: dup
428: invokespecial #17
431: ldc           #18
433: invokevirtual #19
436: iload         23
438: invokevirtual #20
441: ldc           #21
443: invokevirtual #19
446: iconst_0
447: invokevirtual #20
450: ldc           #18
452: invokevirtual #19
455: invokevirtual #22
458: iload         23
460: ifne          467
463: iconst_1
464: goto          468
467: iconst_0
468: invokestatic  #23
471: return
Exception table:
from    to  target type
219   234   237   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test148
Start line: 7271
End line: 7338
Method source code: 
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)", whitelist1);
        boolean boolean4 = whitelist1.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str10 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist9);
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist14 = whitelist12.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist16 = whitelist14.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist20 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str21 = org.jsoup.Jsoup.clean(":lt(32)", whitelist20);
        org.jsoup.safety.Whitelist whitelist25 = whitelist20.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray32 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist33 = whitelist20.addTags(strArray32);
        org.jsoup.safety.Whitelist whitelist34 = whitelist16.addProtocols(":matchesOwn(null", "hi!", strArray32);
        org.jsoup.safety.Whitelist whitelist35 = whitelist9.addAttributes("[^hi!]", strArray32);
        org.jsoup.safety.Whitelist whitelist39 = whitelist9.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.safety.Whitelist whitelist42 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist44 = whitelist42.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist46 = whitelist44.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist50 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str51 = org.jsoup.Jsoup.clean(":lt(32)", whitelist50);
        org.jsoup.safety.Whitelist whitelist55 = whitelist50.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray62 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist63 = whitelist50.addTags(strArray62);
        org.jsoup.safety.Whitelist whitelist64 = whitelist46.addProtocols(":matchesOwn(null", "hi!", strArray62);
        java.lang.String[] strArray73 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean74 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray73);
        org.jsoup.safety.Whitelist whitelist75 = whitelist64.addProtocols("\n<!--hi!-->", "#document", strArray73);
        org.jsoup.safety.Whitelist whitelist76 = whitelist9.addProtocols("<html>\n <head></head>\n <body>\n </body>\n</html>", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]", strArray73);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray73, "<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">");
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray73);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray73);
        org.jsoup.safety.Whitelist whitelist81 = whitelist1.addProtocols("<hi!>\n [^hi!]\n</hi!>", "\n<!---->", strArray73);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray73);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":lt(32)" + "'", str2, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!$=   ]" + "'", str10, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":lt(32)" + "'", str21, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ":lt(32)" + "'", str51, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(whitelist75);
        org.junit.Assert.assertNotNull(whitelist76);
        org.junit.Assert.assertNotNull(whitelist81);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #588
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: invokestatic  #8
46: astore        4
48: ldc           #109
50: ldc           #110
52: aload         4
54: invokestatic  #94
57: astore        5
59: invokestatic  #8
62: astore        6
64: aload         6
66: iconst_1
67: invokevirtual #9
70: astore        7
72: aload         7
74: iconst_0
75: invokevirtual #9
78: astore        8
80: invokestatic  #118
83: astore        9
85: ldc           #43
87: aload         9
89: invokestatic  #81
92: astore        10
94: aload         9
96: ldc           #43
98: ldc           #12
100: ldc           #32
102: invokevirtual #11
105: astore        11
107: bipush        6
109: anewarray     #119
112: dup
113: iconst_0
114: ldc           #109
116: aastore
117: dup
118: iconst_1
119: ldc           #10
121: aastore
122: dup
123: iconst_2
124: ldc           #13
126: aastore
127: dup
128: iconst_3
129: ldc           #50
131: aastore
132: dup
133: iconst_4
134: ldc           #12
136: aastore
137: dup
138: iconst_5
139: ldc           #120
141: aastore
142: astore        12
144: aload         9
146: aload         12
148: invokevirtual #121
151: astore        13
153: aload         8
155: ldc           #38
157: ldc           #12
159: aload         12
161: invokevirtual #122
164: astore        14
166: aload         4
168: ldc           #50
170: aload         12
172: invokevirtual #127
175: astore        15
177: aload         4
179: ldc           #126
181: ldc           #109
183: ldc           #120
185: invokevirtual #11
188: astore        16
190: invokestatic  #8
193: astore        17
195: aload         17
197: iconst_1
198: invokevirtual #9
201: astore        18
203: aload         18
205: iconst_0
206: invokevirtual #9
209: astore        19
211: invokestatic  #118
214: astore        20
216: ldc           #43
218: aload         20
220: invokestatic  #81
223: astore        21
225: aload         20
227: ldc           #43
229: ldc           #12
231: ldc           #32
233: invokevirtual #11
236: astore        22
238: bipush        6
240: anewarray     #119
243: dup
244: iconst_0
245: ldc           #109
247: aastore
248: dup
249: iconst_1
250: ldc           #10
252: aastore
253: dup
254: iconst_2
255: ldc           #13
257: aastore
258: dup
259: iconst_3
260: ldc           #50
262: aastore
263: dup
264: iconst_4
265: ldc           #12
267: aastore
268: dup
269: iconst_5
270: ldc           #120
272: aastore
273: astore        23
275: aload         20
277: aload         23
279: invokevirtual #121
282: astore        24
284: aload         19
286: ldc           #38
288: ldc           #12
290: aload         23
292: invokevirtual #122
295: astore        25
297: iconst_5
298: anewarray     #119
301: dup
302: iconst_0
303: ldc           #13
305: aastore
306: dup
307: iconst_1
308: ldc           #32
310: aastore
311: dup
312: iconst_2
313: ldc           #10
315: aastore
316: dup
317: iconst_3
318: ldc           #43
320: aastore
321: dup
322: iconst_4
323: ldc           #58
325: aastore
326: astore        26
328: ldc           #10
330: aload         26
332: invokestatic  #123
335: istore        27
337: aload         25
339: ldc           #84
341: ldc           #13
343: aload         26
345: invokevirtual #122
348: astore        28
350: aload         4
352: ldc           #157
354: ldc_w         #273
357: aload         26
359: invokevirtual #122
362: astore        29
364: aload         26
366: checkcast     #124
369: ldc_w         #274
372: invokestatic  #245
375: aload         26
377: checkcast     #124
380: invokestatic  #125
383: aload         26
385: checkcast     #124
388: invokestatic  #125
391: aload_1
392: ldc           #54
394: ldc           #120
396: aload         26
398: invokevirtual #122
401: astore        30
403: aload         26
405: checkcast     #124
408: invokestatic  #125
411: aload_1
412: invokestatic  #15
415: new           #16
418: dup
419: invokespecial #17
422: ldc           #18
424: invokevirtual #19
427: aload_2
428: invokevirtual #19
431: ldc           #128
433: invokevirtual #19
436: invokevirtual #22
439: aload_2
440: ldc           #43
442: invokestatic  #68
445: new           #16
448: dup
449: invokespecial #17
452: ldc           #18
454: invokevirtual #19
457: iload_3
458: invokevirtual #20
461: ldc           #21
463: invokevirtual #19
466: iconst_0
467: invokevirtual #20
470: ldc           #18
472: invokevirtual #19
475: invokevirtual #22
478: iload_3
479: ifne          486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #23
490: aload         4
492: invokestatic  #15
495: new           #16
498: dup
499: invokespecial #17
502: ldc           #18
504: invokevirtual #19
507: aload         5
509: invokevirtual #19
512: ldc           #111
514: invokevirtual #19
517: invokevirtual #22
520: aload         5
522: ldc           #65
524: invokestatic  #68
527: aload         6
529: invokestatic  #15
532: aload         7
534: invokestatic  #15
537: aload         8
539: invokestatic  #15
542: aload         9
544: invokestatic  #15
547: new           #16
550: dup
551: invokespecial #17
554: ldc           #18
556: invokevirtual #19
559: aload         10
561: invokevirtual #19
564: ldc           #128
566: invokevirtual #19
569: invokevirtual #22
572: aload         10
574: ldc           #43
576: invokestatic  #68
579: aload         11
581: invokestatic  #15
584: aload         12
586: invokestatic  #15
589: aload         13
591: invokestatic  #15
594: aload         14
596: invokestatic  #15
599: aload         15
601: invokestatic  #15
604: aload         16
606: invokestatic  #15
609: aload         17
611: invokestatic  #15
614: aload         18
616: invokestatic  #15
619: aload         19
621: invokestatic  #15
624: aload         20
626: invokestatic  #15
629: new           #16
632: dup
633: invokespecial #17
636: ldc           #18
638: invokevirtual #19
641: aload         21
643: invokevirtual #19
646: ldc           #128
648: invokevirtual #19
651: invokevirtual #22
654: aload         21
656: ldc           #43
658: invokestatic  #68
661: aload         22
663: invokestatic  #15
666: aload         23
668: invokestatic  #15
671: aload         24
673: invokestatic  #15
676: aload         25
678: invokestatic  #15
681: aload         26
683: invokestatic  #15
686: new           #16
689: dup
690: invokespecial #17
693: ldc           #18
695: invokevirtual #19
698: iload         27
700: invokevirtual #20
703: ldc           #21
705: invokevirtual #19
708: iconst_1
709: invokevirtual #20
712: ldc           #18
714: invokevirtual #19
717: invokevirtual #22
720: iload         27
722: iconst_1
723: if_icmpne     730
726: iconst_1
727: goto          731
730: iconst_0
731: invokestatic  #23
734: aload         28
736: invokestatic  #15
739: aload         29
741: invokestatic  #15
744: aload         30
746: invokestatic  #15
749: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test149
Start line: 7341
End line: 7395
Method source code: 
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(false);
        java.lang.String[] strArray15 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean16 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray15);
        org.jsoup.safety.Whitelist whitelist17 = whitelist6.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray15);
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist23 = whitelist21.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist29 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str30 = org.jsoup.Jsoup.clean(":lt(32)", whitelist29);
        org.jsoup.safety.Whitelist whitelist34 = whitelist29.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray41 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist42 = whitelist29.addTags(strArray41);
        org.jsoup.safety.Whitelist whitelist43 = whitelist25.addProtocols(":matchesOwn(null", "hi!", strArray41);
        java.lang.String[] strArray52 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean53 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray52);
        org.jsoup.safety.Whitelist whitelist54 = whitelist43.addProtocols("\n<!--hi!-->", "#document", strArray52);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray52);
        boolean boolean56 = org.jsoup.helper.StringUtil.in("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", strArray52);
        org.jsoup.safety.Whitelist whitelist57 = whitelist17.addProtocols(". <!---->", ":containsOwn(:containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray52);
        java.lang.String str58 = org.jsoup.Jsoup.clean("", "\nhi!", whitelist17);
        java.lang.String[] strArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist62 = whitelist17.addProtocols("#*", "<hi!>\n [^hi!]\n</hi!>", strArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + ":lt(32)" + "'", str30, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(whitelist54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #589
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: invokestatic  #8
96: astore        7
98: aload         7
100: iconst_1
101: invokevirtual #9
104: astore        8
106: aload         8
108: iconst_0
109: invokevirtual #9
112: astore        9
114: invokestatic  #118
117: astore        10
119: ldc           #43
121: aload         10
123: invokestatic  #81
126: astore        11
128: aload         10
130: ldc           #43
132: ldc           #12
134: ldc           #32
136: invokevirtual #11
139: astore        12
141: bipush        6
143: anewarray     #119
146: dup
147: iconst_0
148: ldc           #109
150: aastore
151: dup
152: iconst_1
153: ldc           #10
155: aastore
156: dup
157: iconst_2
158: ldc           #13
160: aastore
161: dup
162: iconst_3
163: ldc           #50
165: aastore
166: dup
167: iconst_4
168: ldc           #12
170: aastore
171: dup
172: iconst_5
173: ldc           #120
175: aastore
176: astore        13
178: aload         10
180: aload         13
182: invokevirtual #121
185: astore        14
187: aload         9
189: ldc           #38
191: ldc           #12
193: aload         13
195: invokevirtual #122
198: astore        15
200: iconst_5
201: anewarray     #119
204: dup
205: iconst_0
206: ldc           #13
208: aastore
209: dup
210: iconst_1
211: ldc           #32
213: aastore
214: dup
215: iconst_2
216: ldc           #10
218: aastore
219: dup
220: iconst_3
221: ldc           #43
223: aastore
224: dup
225: iconst_4
226: ldc           #58
228: aastore
229: astore        16
231: ldc           #10
233: aload         16
235: invokestatic  #123
238: istore        17
240: aload         15
242: ldc           #84
244: ldc           #13
246: aload         16
248: invokevirtual #122
251: astore        18
253: aload         16
255: checkcast     #124
258: invokestatic  #125
261: ldc           #136
263: aload         16
265: invokestatic  #123
268: istore        19
270: aload         6
272: ldc_w         #590
275: ldc_w         #591
278: aload         16
280: invokevirtual #122
283: astore        20
285: ldc           #25
287: ldc           #98
289: aload         6
291: invokestatic  #94
294: astore        21
296: aconst_null
297: astore        22
299: aload         6
301: ldc_w         #485
304: ldc           #54
306: aload         22
308: invokevirtual #122
311: astore        23
313: ldc           #34
315: invokestatic  #35
318: goto          323
321: astore        23
323: aload_1
324: invokestatic  #15
327: aload_2
328: invokestatic  #15
331: aload_3
332: invokestatic  #15
335: aload         4
337: invokestatic  #15
340: new           #16
343: dup
344: invokespecial #17
347: ldc           #18
349: invokevirtual #19
352: iload         5
354: invokevirtual #20
357: ldc           #21
359: invokevirtual #19
362: iconst_1
363: invokevirtual #20
366: ldc           #18
368: invokevirtual #19
371: invokevirtual #22
374: iload         5
376: iconst_1
377: if_icmpne     384
380: iconst_1
381: goto          385
384: iconst_0
385: invokestatic  #23
388: aload         6
390: invokestatic  #15
393: aload         7
395: invokestatic  #15
398: aload         8
400: invokestatic  #15
403: aload         9
405: invokestatic  #15
408: aload         10
410: invokestatic  #15
413: new           #16
416: dup
417: invokespecial #17
420: ldc           #18
422: invokevirtual #19
425: aload         11
427: invokevirtual #19
430: ldc           #128
432: invokevirtual #19
435: invokevirtual #22
438: aload         11
440: ldc           #43
442: invokestatic  #68
445: aload         12
447: invokestatic  #15
450: aload         13
452: invokestatic  #15
455: aload         14
457: invokestatic  #15
460: aload         15
462: invokestatic  #15
465: aload         16
467: invokestatic  #15
470: new           #16
473: dup
474: invokespecial #17
477: ldc           #18
479: invokevirtual #19
482: iload         17
484: invokevirtual #20
487: ldc           #21
489: invokevirtual #19
492: iconst_1
493: invokevirtual #20
496: ldc           #18
498: invokevirtual #19
501: invokevirtual #22
504: iload         17
506: iconst_1
507: if_icmpne     514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #23
518: aload         18
520: invokestatic  #15
523: new           #16
526: dup
527: invokespecial #17
530: ldc           #18
532: invokevirtual #19
535: iload         19
537: invokevirtual #20
540: ldc           #21
542: invokevirtual #19
545: iconst_0
546: invokevirtual #20
549: ldc           #18
551: invokevirtual #19
554: invokevirtual #22
557: iload         19
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #23
570: aload         20
572: invokestatic  #15
575: new           #16
578: dup
579: invokespecial #17
582: ldc           #18
584: invokevirtual #19
587: aload         21
589: invokevirtual #19
592: ldc           #67
594: invokevirtual #19
597: invokevirtual #22
600: aload         21
602: ldc           #25
604: invokestatic  #68
607: return
Exception table:
from    to  target type
299   318   321   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test150
Start line: 7398
End line: 7502
Method source code: 
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.lang.Object obj24 = objList0.peek();
        objList0.clear();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList26 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.text("");
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList40 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document38, "hi!");
        org.jsoup.nodes.Element element42 = document38.tagName("hi!");
        org.jsoup.nodes.Element element44 = document38.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = document38.outputSettings();
        org.jsoup.nodes.Document document46 = document30.outputSettings(outputSettings45);
        org.jsoup.nodes.Document document47 = document30.normalise();
        objList26.addLast((java.lang.Object) document47);
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parse("", ":lt(32)");
        boolean boolean52 = objList26.offerFirst((java.lang.Object) "");
        boolean boolean53 = objList0.offerLast((java.lang.Object) boolean52);
        java.lang.Object obj54 = null;
        int int55 = objList0.indexOf(obj54);
        org.jsoup.nodes.Document document59 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList61 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document59, "hi!");
        org.jsoup.nodes.Element element63 = document59.tagName("hi!");
        org.jsoup.nodes.Element element65 = document59.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings66 = document59.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = outputSettings66.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings69 = outputSettings67.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.base;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings69.escapeMode(escapeMode70);
        org.jsoup.nodes.Entities.EscapeMode escapeMode72 = outputSettings71.escapeMode();
        boolean boolean73 = objList0.contains((java.lang.Object) outputSettings71);
        java.util.Iterator<java.lang.Object> objItor74 = objList0.descendingIterator();
        java.lang.Object[] objArray75 = objList0.toArray();
        org.jsoup.safety.Whitelist whitelist77 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str78 = org.jsoup.Jsoup.clean(":lt(32)", whitelist77);
        org.jsoup.safety.Whitelist whitelist82 = whitelist77.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray89 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist90 = whitelist77.addTags(strArray89);
        org.jsoup.safety.Cleaner cleaner91 = new org.jsoup.safety.Cleaner(whitelist77);
        boolean boolean92 = objList0.offerLast((java.lang.Object) cleaner91);
        java.lang.Object obj93 = objList0.element();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(outputSettings45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(element65);
        org.junit.Assert.assertNotNull(outputSettings66);
        org.junit.Assert.assertNotNull(outputSettings67);
        org.junit.Assert.assertNotNull(outputSettings69);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertTrue("'" + escapeMode72 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode72.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objItor74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[true]");
        org.junit.Assert.assertNotNull(whitelist77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ":lt(32)" + "'", str78, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(whitelist90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + true + "'", obj93, true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #592
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #379
138: astore        12
140: aload_1
141: invokevirtual #131
144: new           #88
147: dup
148: invokespecial #89
151: astore        13
153: ldc           #25
155: ldc           #12
157: invokestatic  #26
160: astore        14
162: ldc           #12
164: aload         14
166: ldc           #12
168: invokestatic  #27
171: astore        15
173: aload         14
175: ldc           #25
177: invokevirtual #64
180: astore        16
182: ldc           #25
184: ldc           #12
186: invokestatic  #26
189: astore        17
191: ldc           #12
193: aload         17
195: ldc           #12
197: invokestatic  #27
200: astore        18
202: aload         17
204: ldc           #12
206: invokevirtual #28
209: astore        19
211: aload         17
213: ldc           #25
215: invokevirtual #29
218: astore        20
220: aload         17
222: invokevirtual #30
225: astore        21
227: aload         14
229: aload         21
231: invokevirtual #175
234: astore        22
236: aload         14
238: invokevirtual #102
241: astore        23
243: aload         13
245: aload         23
247: invokevirtual #95
250: ldc           #25
252: ldc           #43
254: invokestatic  #26
257: astore        24
259: aload         13
261: ldc           #25
263: invokevirtual #354
266: istore        25
268: aload_1
269: iload         25
271: invokestatic  #137
274: invokevirtual #282
277: istore        26
279: aconst_null
280: astore        27
282: aload_1
283: aload         27
285: invokevirtual #380
288: istore        28
290: ldc           #25
292: ldc           #12
294: invokestatic  #26
297: astore        29
299: ldc           #12
301: aload         29
303: ldc           #12
305: invokestatic  #27
308: astore        30
310: aload         29
312: ldc           #12
314: invokevirtual #28
317: astore        31
319: aload         29
321: ldc           #25
323: invokevirtual #29
326: astore        32
328: aload         29
330: invokevirtual #30
333: astore        33
335: aload         33
337: invokevirtual #205
340: astore        34
342: aload         34
344: iconst_0
345: invokevirtual #31
348: astore        35
350: getstatic     #381
353: astore        36
355: aload         35
357: aload         36
359: invokevirtual #190
362: astore        37
364: aload         37
366: invokevirtual #382
369: astore        38
371: aload_1
372: aload         37
374: invokevirtual #286
377: istore        39
379: aload_1
380: invokevirtual #383
383: astore        40
385: aload_1
386: invokevirtual #384
389: astore        41
391: invokestatic  #118
394: astore        42
396: ldc           #43
398: aload         42
400: invokestatic  #81
403: astore        43
405: aload         42
407: ldc           #43
409: ldc           #12
411: ldc           #32
413: invokevirtual #11
416: astore        44
418: bipush        6
420: anewarray     #119
423: dup
424: iconst_0
425: ldc           #109
427: aastore
428: dup
429: iconst_1
430: ldc           #10
432: aastore
433: dup
434: iconst_2
435: ldc           #13
437: aastore
438: dup
439: iconst_3
440: ldc           #50
442: aastore
443: dup
444: iconst_4
445: ldc           #12
447: aastore
448: dup
449: iconst_5
450: ldc           #120
452: aastore
453: astore        45
455: aload         42
457: aload         45
459: invokevirtual #121
462: astore        46
464: new           #40
467: dup
468: aload         42
470: invokespecial #41
473: astore        47
475: aload_1
476: aload         47
478: invokevirtual #282
481: istore        48
483: aload_1
484: invokevirtual #438
487: astore        49
489: aload_2
490: invokestatic  #15
493: aload_3
494: invokestatic  #15
497: aload         4
499: invokestatic  #15
502: aload         5
504: invokestatic  #15
507: aload         6
509: invokestatic  #15
512: aload         7
514: invokestatic  #15
517: aload         8
519: invokestatic  #15
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: aload         9
536: invokevirtual #19
539: ldc           #78
541: invokevirtual #19
544: invokevirtual #22
547: aload         9
549: ldc           #10
551: invokestatic  #68
554: aload         10
556: invokestatic  #15
559: aload         10
561: invokestatic  #288
564: ldc_w         #289
567: invokestatic  #290
570: aload         10
572: invokestatic  #291
575: ldc_w         #289
578: invokestatic  #290
581: new           #16
584: dup
585: invokespecial #17
588: ldc           #18
590: invokevirtual #19
593: iload         11
595: invokevirtual #20
598: ldc           #21
600: invokevirtual #19
603: iconst_1
604: invokevirtual #20
607: ldc           #18
609: invokevirtual #19
612: invokevirtual #22
615: iload         11
617: iconst_1
618: if_icmpne     625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #23
629: aload         12
631: invokestatic  #15
634: aload         14
636: invokestatic  #15
639: aload         15
641: invokestatic  #15
644: aload         16
646: invokestatic  #15
649: aload         17
651: invokestatic  #15
654: aload         18
656: invokestatic  #15
659: aload         19
661: invokestatic  #15
664: aload         20
666: invokestatic  #15
669: aload         21
671: invokestatic  #15
674: aload         22
676: invokestatic  #15
679: aload         23
681: invokestatic  #15
684: aload         24
686: invokestatic  #15
689: new           #16
692: dup
693: invokespecial #17
696: ldc           #18
698: invokevirtual #19
701: iload         25
703: invokevirtual #20
706: ldc           #21
708: invokevirtual #19
711: iconst_1
712: invokevirtual #20
715: ldc           #18
717: invokevirtual #19
720: invokevirtual #22
723: iload         25
725: iconst_1
726: if_icmpne     733
729: iconst_1
730: goto          734
733: iconst_0
734: invokestatic  #23
737: new           #16
740: dup
741: invokespecial #17
744: ldc           #18
746: invokevirtual #19
749: iload         26
751: invokevirtual #20
754: ldc           #21
756: invokevirtual #19
759: iconst_1
760: invokevirtual #20
763: ldc           #18
765: invokevirtual #19
768: invokevirtual #22
771: iload         26
773: iconst_1
774: if_icmpne     781
777: iconst_1
778: goto          782
781: iconst_0
782: invokestatic  #23
785: new           #16
788: dup
789: invokespecial #17
792: ldc           #18
794: invokevirtual #19
797: iload         28
799: invokevirtual #134
802: ldc           #21
804: invokevirtual #19
807: iconst_m1
808: invokevirtual #134
811: ldc           #18
813: invokevirtual #19
816: invokevirtual #22
819: iload         28
821: iconst_m1
822: if_icmpne     829
825: iconst_1
826: goto          830
829: iconst_0
830: invokestatic  #23
833: aload         29
835: invokestatic  #15
838: aload         30
840: invokestatic  #15
843: aload         31
845: invokestatic  #15
848: aload         32
850: invokestatic  #15
853: aload         33
855: invokestatic  #15
858: aload         34
860: invokestatic  #15
863: aload         35
865: invokestatic  #15
868: new           #16
871: dup
872: invokespecial #17
875: ldc           #18
877: invokevirtual #19
880: aload         36
882: invokevirtual #223
885: ldc           #21
887: invokevirtual #19
890: getstatic     #381
893: invokevirtual #223
896: ldc           #18
898: invokevirtual #19
901: invokevirtual #22
904: aload         36
906: getstatic     #381
909: invokevirtual #385
912: invokestatic  #23
915: aload         37
917: invokestatic  #15
920: new           #16
923: dup
924: invokespecial #17
927: ldc           #18
929: invokevirtual #19
932: aload         38
934: invokevirtual #223
937: ldc           #21
939: invokevirtual #19
942: getstatic     #381
945: invokevirtual #223
948: ldc           #18
950: invokevirtual #19
953: invokevirtual #22
956: aload         38
958: getstatic     #381
961: invokevirtual #385
964: invokestatic  #23
967: new           #16
970: dup
971: invokespecial #17
974: ldc           #18
976: invokevirtual #19
979: iload         39
981: invokevirtual #20
984: ldc           #21
986: invokevirtual #19
989: iconst_0
990: invokevirtual #20
993: ldc           #18
995: invokevirtual #19
998: invokevirtual #22
1001: iload         39
1003: ifne          1010
1006: iconst_1
1007: goto          1011
1010: iconst_0
1011: invokestatic  #23
1014: aload         40
1016: invokestatic  #15
1019: aload         41
1021: invokestatic  #15
1024: aload         41
1026: invokestatic  #288
1029: ldc_w         #386
1032: invokestatic  #290
1035: aload         41
1037: invokestatic  #291
1040: ldc_w         #386
1043: invokestatic  #290
1046: aload         42
1048: invokestatic  #15
1051: new           #16
1054: dup
1055: invokespecial #17
1058: ldc           #18
1060: invokevirtual #19
1063: aload         43
1065: invokevirtual #19
1068: ldc           #128
1070: invokevirtual #19
1073: invokevirtual #22
1076: aload         43
1078: ldc           #43
1080: invokestatic  #68
1083: aload         44
1085: invokestatic  #15
1088: aload         45
1090: invokestatic  #15
1093: aload         46
1095: invokestatic  #15
1098: new           #16
1101: dup
1102: invokespecial #17
1105: ldc           #18
1107: invokevirtual #19
1110: iload         48
1112: invokevirtual #20
1115: ldc           #21
1117: invokevirtual #19
1120: iconst_1
1121: invokevirtual #20
1124: ldc           #18
1126: invokevirtual #19
1129: invokevirtual #22
1132: iload         48
1134: iconst_1
1135: if_icmpne     1142
1138: iconst_1
1139: goto          1143
1142: iconst_0
1143: invokestatic  #23
1146: new           #16
1149: dup
1150: invokespecial #17
1153: ldc           #18
1155: invokevirtual #19
1158: aload         49
1160: invokevirtual #223
1163: ldc           #21
1165: invokevirtual #19
1168: iconst_1
1169: invokevirtual #20
1172: ldc           #18
1174: invokevirtual #19
1177: invokevirtual #22
1180: aload         49
1182: iconst_1
1183: invokestatic  #137
1186: invokestatic  #68
1189: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test151
Start line: 7505
End line: 7552
Method source code: 
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        org.jsoup.select.Evaluator.IndexGreaterThan indexGreaterThan1 = new org.jsoup.select.Evaluator.IndexGreaterThan((int) (byte) 1);
        org.jsoup.nodes.Element element2 = null;
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner6 = new org.jsoup.safety.Cleaner(whitelist5);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining9 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document11 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList17 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document15, "hi!");
        org.jsoup.nodes.Element element19 = document15.tagName("hi!");
        org.jsoup.nodes.Element element21 = document15.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = document15.outputSettings();
        boolean boolean23 = attributeWithValueContaining9.matches((org.jsoup.nodes.Element) document11, (org.jsoup.nodes.Element) document15);
        org.jsoup.nodes.Document document24 = cleaner6.clean(document15);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        java.lang.String str35 = document28.toString();
        java.lang.String str36 = document28.id();
        org.jsoup.nodes.Node node37 = document28.parent();
        org.jsoup.nodes.Document document38 = cleaner6.clean(document28);
        org.jsoup.select.Elements elements40 = document28.getElementsByIndexEquals((int) (short) 10);
        boolean boolean41 = indexGreaterThan1.matches(element2, (org.jsoup.nodes.Element) document28);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str35, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(elements40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #593
20: aastore
21: invokevirtual #7
24: pop
25: new           #594
28: dup
29: iconst_1
30: invokespecial #595
33: astore_1
34: aconst_null
35: astore_2
36: invokestatic  #8
39: astore_3
40: aload_3
41: iconst_1
42: invokevirtual #9
45: astore        4
47: new           #40
50: dup
51: aload         4
53: invokespecial #41
56: astore        5
58: new           #42
61: dup
62: ldc           #43
64: ldc           #32
66: invokespecial #44
69: astore        6
71: ldc           #12
73: invokestatic  #45
76: astore        7
78: ldc           #25
80: ldc           #12
82: invokestatic  #26
85: astore        8
87: ldc           #12
89: aload         8
91: ldc           #12
93: invokestatic  #27
96: astore        9
98: aload         8
100: ldc           #12
102: invokevirtual #28
105: astore        10
107: aload         8
109: ldc           #25
111: invokevirtual #29
114: astore        11
116: aload         8
118: invokevirtual #30
121: astore        12
123: aload         6
125: aload         7
127: aload         8
129: invokevirtual #46
132: istore        13
134: aload         5
136: aload         8
138: invokevirtual #47
141: astore        14
143: ldc           #25
145: ldc           #12
147: invokestatic  #26
150: astore        15
152: ldc           #12
154: aload         15
156: ldc           #12
158: invokestatic  #27
161: astore        16
163: aload         15
165: ldc           #12
167: invokevirtual #28
170: astore        17
172: aload         15
174: ldc           #25
176: invokevirtual #29
179: astore        18
181: aload         15
183: invokevirtual #72
186: astore        19
188: aload         15
190: invokevirtual #73
193: astore        20
195: aload         15
197: invokevirtual #74
200: astore        21
202: aload         5
204: aload         15
206: invokevirtual #47
209: astore        22
211: aload         15
213: bipush        10
215: invokevirtual #162
218: astore        23
220: aload_1
221: aload_2
222: aload         15
224: invokevirtual #596
227: istore        24
229: aload_3
230: invokestatic  #15
233: aload         4
235: invokestatic  #15
238: aload         7
240: invokestatic  #15
243: aload         8
245: invokestatic  #15
248: aload         9
250: invokestatic  #15
253: aload         10
255: invokestatic  #15
258: aload         11
260: invokestatic  #15
263: aload         12
265: invokestatic  #15
268: new           #16
271: dup
272: invokespecial #17
275: ldc           #18
277: invokevirtual #19
280: iload         13
282: invokevirtual #20
285: ldc           #21
287: invokevirtual #19
290: iconst_0
291: invokevirtual #20
294: ldc           #18
296: invokevirtual #19
299: invokevirtual #22
302: iload         13
304: ifne          311
307: iconst_1
308: goto          312
311: iconst_0
312: invokestatic  #23
315: aload         14
317: invokestatic  #15
320: aload         15
322: invokestatic  #15
325: aload         16
327: invokestatic  #15
330: aload         17
332: invokestatic  #15
335: aload         18
337: invokestatic  #15
340: new           #16
343: dup
344: invokespecial #17
347: ldc           #18
349: invokevirtual #19
352: aload         19
354: invokevirtual #19
357: ldc           #78
359: invokevirtual #19
362: invokevirtual #22
365: aload         19
367: ldc           #10
369: invokestatic  #68
372: new           #16
375: dup
376: invokespecial #17
379: ldc           #18
381: invokevirtual #19
384: aload         20
386: invokevirtual #19
389: ldc           #67
391: invokevirtual #19
394: invokevirtual #22
397: aload         20
399: ldc           #25
401: invokestatic  #68
404: aload         21
406: invokestatic  #79
409: aload         22
411: invokestatic  #15
414: aload         23
416: invokestatic  #15
419: new           #16
422: dup
423: invokespecial #17
426: ldc           #18
428: invokevirtual #19
431: iload         24
433: invokevirtual #20
436: ldc           #21
438: invokevirtual #19
441: iconst_0
442: invokevirtual #20
445: ldc           #18
447: invokevirtual #19
450: invokevirtual #22
453: iload         24
455: ifne          462
458: iconst_1
459: goto          463
462: iconst_0
463: invokestatic  #23
466: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test152
Start line: 7555
End line: 7644
Method source code: 
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList3 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList9 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document7, "hi!");
        org.jsoup.nodes.Element element11 = document7.text("");
        int int12 = objList3.lastIndexOf((java.lang.Object) document7);
        objList0.addFirst((java.lang.Object) document7);
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element20 = document17.empty();
        org.jsoup.nodes.Element element22 = document17.removeClass("hi!");
        boolean boolean23 = objList0.equals((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.Object> objItor24 = objList0.iterator();
        objList0.clear();
        org.jsoup.safety.Whitelist whitelist27 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist29 = whitelist27.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist33 = whitelist27.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str34 = org.jsoup.Jsoup.clean("\nhi!", whitelist33);
        objList0.addLast((java.lang.Object) "\nhi!");
        java.lang.Object obj37 = objList0.get(0);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList38 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.text("");
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList52 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document50, "hi!");
        org.jsoup.nodes.Element element54 = document50.tagName("hi!");
        org.jsoup.nodes.Element element56 = document50.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings57 = document50.outputSettings();
        org.jsoup.nodes.Document document58 = document42.outputSettings(outputSettings57);
        org.jsoup.nodes.Document document59 = document42.normalise();
        objList38.addLast((java.lang.Object) document59);
        org.jsoup.nodes.Document document64 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList66 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document64, "hi!");
        org.jsoup.nodes.Element element67 = document64.empty();
        org.jsoup.nodes.Element element69 = element67.toggleClass("#document");
        org.jsoup.select.Elements elements71 = element69.getElementsByAttributeStarting(":lt(32)");
        java.util.List<org.jsoup.nodes.Node> nodeList72 = element69.siblingNodes();
        boolean boolean73 = objList38.retainAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList72);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan75 = new org.jsoup.select.Evaluator.IndexLessThan((int) ' ');
        java.lang.String str76 = indexLessThan75.toString();
        boolean boolean77 = objList38.equals((java.lang.Object) str76);
        boolean boolean79 = objList38.offerFirst((java.lang.Object) ":matchesOwn(null");
        org.jsoup.nodes.Document document81 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean82 = objList38.equals((java.lang.Object) "<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean83 = objList0.offerLast((java.lang.Object) objList38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objItor24);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "\nhi!" + "'", obj37, "\nhi!");
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(outputSettings57);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(document64);
        org.junit.Assert.assertNotNull(nodeList66);
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(elements71);
        org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ":lt(32)" + "'", str76, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(document81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #597
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: new           #88
43: dup
44: invokespecial #89
47: astore_3
48: ldc           #25
50: ldc           #12
52: invokestatic  #26
55: astore        4
57: ldc           #12
59: aload         4
61: ldc           #12
63: invokestatic  #27
66: astore        5
68: aload         4
70: ldc           #25
72: invokevirtual #64
75: astore        6
77: aload_3
78: aload         4
80: invokevirtual #130
83: istore        7
85: aload_1
86: aload         4
88: invokevirtual #93
91: ldc           #25
93: ldc           #12
95: invokestatic  #26
98: astore        8
100: ldc           #12
102: aload         8
104: ldc           #12
106: invokestatic  #27
109: astore        9
111: aload         8
113: invokevirtual #103
116: astore        10
118: aload         8
120: ldc           #12
122: invokevirtual #59
125: astore        11
127: aload_1
128: ldc           #12
130: invokevirtual #90
133: istore        12
135: aload_1
136: invokevirtual #410
139: astore        13
141: aload_1
142: invokevirtual #131
145: invokestatic  #8
148: astore        14
150: aload         14
152: iconst_1
153: invokevirtual #9
156: astore        15
158: aload         14
160: ldc           #10
162: ldc           #10
164: ldc           #10
166: invokevirtual #11
169: astore        16
171: ldc           #98
173: aload         16
175: invokestatic  #81
178: astore        17
180: aload_1
181: ldc           #98
183: invokevirtual #95
186: aload_1
187: iconst_0
188: invokevirtual #411
191: astore        18
193: new           #88
196: dup
197: invokespecial #89
200: astore        19
202: ldc           #25
204: ldc           #12
206: invokestatic  #26
209: astore        20
211: ldc           #12
213: aload         20
215: ldc           #12
217: invokestatic  #27
220: astore        21
222: aload         20
224: ldc           #25
226: invokevirtual #64
229: astore        22
231: ldc           #25
233: ldc           #12
235: invokestatic  #26
238: astore        23
240: ldc           #12
242: aload         23
244: ldc           #12
246: invokestatic  #27
249: astore        24
251: aload         23
253: ldc           #12
255: invokevirtual #28
258: astore        25
260: aload         23
262: ldc           #25
264: invokevirtual #29
267: astore        26
269: aload         23
271: invokevirtual #30
274: astore        27
276: aload         20
278: aload         27
280: invokevirtual #175
283: astore        28
285: aload         20
287: invokevirtual #102
290: astore        29
292: aload         19
294: aload         29
296: invokevirtual #95
299: ldc           #25
301: ldc           #12
303: invokestatic  #26
306: astore        30
308: ldc           #12
310: aload         30
312: ldc           #12
314: invokestatic  #27
317: astore        31
319: aload         30
321: invokevirtual #103
324: astore        32
326: aload         32
328: ldc           #13
330: invokevirtual #177
333: astore        33
335: aload         33
337: ldc           #43
339: invokevirtual #426
342: astore        34
344: aload         33
346: invokevirtual #396
349: astore        35
351: aload         19
353: aload         35
355: invokevirtual #584
358: istore        36
360: new           #48
363: dup
364: bipush        32
366: invokespecial #49
369: astore        37
371: aload         37
373: invokevirtual #585
376: astore        38
378: aload         19
380: aload         38
382: invokevirtual #90
385: istore        39
387: aload         19
389: ldc           #38
391: invokevirtual #354
394: istore        40
396: ldc           #10
398: invokestatic  #193
401: astore        41
403: aload         19
405: ldc           #10
407: invokevirtual #90
410: istore        42
412: aload_1
413: aload         19
415: invokevirtual #282
418: istore        43
420: new           #16
423: dup
424: invokespecial #17
427: ldc           #18
429: invokevirtual #19
432: iload_2
433: invokevirtual #20
436: ldc           #21
438: invokevirtual #19
441: iconst_0
442: invokevirtual #20
445: ldc           #18
447: invokevirtual #19
450: invokevirtual #22
453: iload_2
454: ifne          461
457: iconst_1
458: goto          462
461: iconst_0
462: invokestatic  #23
465: aload         4
467: invokestatic  #15
470: aload         5
472: invokestatic  #15
475: aload         6
477: invokestatic  #15
480: new           #16
483: dup
484: invokespecial #17
487: ldc           #18
489: invokevirtual #19
492: iload         7
494: invokevirtual #134
497: ldc           #21
499: invokevirtual #19
502: iconst_m1
503: invokevirtual #134
506: ldc           #18
508: invokevirtual #19
511: invokevirtual #22
514: iload         7
516: iconst_m1
517: if_icmpne     524
520: iconst_1
521: goto          525
524: iconst_0
525: invokestatic  #23
528: aload         8
530: invokestatic  #15
533: aload         9
535: invokestatic  #15
538: aload         10
540: invokestatic  #15
543: aload         11
545: invokestatic  #15
548: new           #16
551: dup
552: invokespecial #17
555: ldc           #18
557: invokevirtual #19
560: iload         12
562: invokevirtual #20
565: ldc           #21
567: invokevirtual #19
570: iconst_0
571: invokevirtual #20
574: ldc           #18
576: invokevirtual #19
579: invokevirtual #22
582: iload         12
584: ifne          591
587: iconst_1
588: goto          592
591: iconst_0
592: invokestatic  #23
595: aload         13
597: invokestatic  #15
600: aload         14
602: invokestatic  #15
605: aload         15
607: invokestatic  #15
610: aload         16
612: invokestatic  #15
615: new           #16
618: dup
619: invokespecial #17
622: ldc           #18
624: invokevirtual #19
627: aload         17
629: invokevirtual #19
632: ldc           #211
634: invokevirtual #19
637: invokevirtual #22
640: aload         17
642: ldc           #12
644: invokestatic  #68
647: new           #16
650: dup
651: invokespecial #17
654: ldc           #18
656: invokevirtual #19
659: aload         18
661: invokevirtual #223
664: ldc_w         #292
667: invokevirtual #19
670: invokevirtual #22
673: aload         18
675: ldc           #98
677: invokestatic  #68
680: aload         20
682: invokestatic  #15
685: aload         21
687: invokestatic  #15
690: aload         22
692: invokestatic  #15
695: aload         23
697: invokestatic  #15
700: aload         24
702: invokestatic  #15
705: aload         25
707: invokestatic  #15
710: aload         26
712: invokestatic  #15
715: aload         27
717: invokestatic  #15
720: aload         28
722: invokestatic  #15
725: aload         29
727: invokestatic  #15
730: aload         30
732: invokestatic  #15
735: aload         31
737: invokestatic  #15
740: aload         32
742: invokestatic  #15
745: aload         33
747: invokestatic  #15
750: aload         34
752: invokestatic  #15
755: aload         35
757: invokestatic  #15
760: new           #16
763: dup
764: invokespecial #17
767: ldc           #18
769: invokevirtual #19
772: iload         36
774: invokevirtual #20
777: ldc           #21
779: invokevirtual #19
782: iconst_1
783: invokevirtual #20
786: ldc           #18
788: invokevirtual #19
791: invokevirtual #22
794: iload         36
796: iconst_1
797: if_icmpne     804
800: iconst_1
801: goto          805
804: iconst_0
805: invokestatic  #23
808: new           #16
811: dup
812: invokespecial #17
815: ldc           #18
817: invokevirtual #19
820: aload         38
822: invokevirtual #19
825: ldc           #128
827: invokevirtual #19
830: invokevirtual #22
833: aload         38
835: ldc           #43
837: invokestatic  #68
840: new           #16
843: dup
844: invokespecial #17
847: ldc           #18
849: invokevirtual #19
852: iload         39
854: invokevirtual #20
857: ldc           #21
859: invokevirtual #19
862: iconst_0
863: invokevirtual #20
866: ldc           #18
868: invokevirtual #19
871: invokevirtual #22
874: iload         39
876: ifne          883
879: iconst_1
880: goto          884
883: iconst_0
884: invokestatic  #23
887: new           #16
890: dup
891: invokespecial #17
894: ldc           #18
896: invokevirtual #19
899: iload         40
901: invokevirtual #20
904: ldc           #21
906: invokevirtual #19
909: iconst_1
910: invokevirtual #20
913: ldc           #18
915: invokevirtual #19
918: invokevirtual #22
921: iload         40
923: iconst_1
924: if_icmpne     931
927: iconst_1
928: goto          932
931: iconst_0
932: invokestatic  #23
935: aload         41
937: invokestatic  #15
940: new           #16
943: dup
944: invokespecial #17
947: ldc           #18
949: invokevirtual #19
952: iload         42
954: invokevirtual #20
957: ldc           #21
959: invokevirtual #19
962: iconst_0
963: invokevirtual #20
966: ldc           #18
968: invokevirtual #19
971: invokevirtual #22
974: iload         42
976: ifne          983
979: iconst_1
980: goto          984
983: iconst_0
984: invokestatic  #23
987: new           #16
990: dup
991: invokespecial #17
994: ldc           #18
996: invokevirtual #19
999: iload         43
1001: invokevirtual #20
1004: ldc           #21
1006: invokevirtual #19
1009: iconst_1
1010: invokevirtual #20
1013: ldc           #18
1015: invokevirtual #19
1018: invokevirtual #22
1021: iload         43
1023: iconst_1
1024: if_icmpne     1031
1027: iconst_1
1028: goto          1032
1031: iconst_0
1032: invokestatic  #23
1035: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test153
Start line: 7647
End line: 7684
Method source code: 
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Element element28 = document23.text(":eq(0)");
        org.jsoup.nodes.Element element30 = document23.addClass("[ =hi!]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(element30);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #598
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: aload         13
159: ldc_w         #271
162: invokevirtual #64
165: astore        17
167: aload         13
169: ldc_w         #599
172: invokevirtual #600
175: astore        18
177: aload_1
178: invokestatic  #15
181: aload_2
182: invokestatic  #15
185: aload         5
187: invokestatic  #15
190: aload         6
192: invokestatic  #15
195: aload         7
197: invokestatic  #15
200: aload         8
202: invokestatic  #15
205: aload         9
207: invokestatic  #15
210: aload         10
212: invokestatic  #15
215: new           #16
218: dup
219: invokespecial #17
222: ldc           #18
224: invokevirtual #19
227: iload         11
229: invokevirtual #20
232: ldc           #21
234: invokevirtual #19
237: iconst_0
238: invokevirtual #20
241: ldc           #18
243: invokevirtual #19
246: invokevirtual #22
249: iload         11
251: ifne          258
254: iconst_1
255: goto          259
258: iconst_0
259: invokestatic  #23
262: aload         12
264: invokestatic  #15
267: aload         13
269: invokestatic  #15
272: new           #16
275: dup
276: invokespecial #17
279: ldc           #18
281: invokevirtual #19
284: aload         14
286: invokevirtual #19
289: ldc           #197
291: invokevirtual #19
294: invokevirtual #22
297: aload         14
299: ldc           #151
301: invokestatic  #68
304: new           #16
307: dup
308: invokespecial #17
311: ldc           #18
313: invokevirtual #19
316: aload         15
318: invokevirtual #19
321: ldc           #67
323: invokevirtual #19
326: invokevirtual #22
329: aload         15
331: ldc           #25
333: invokestatic  #68
336: aload         16
338: invokestatic  #15
341: aload         17
343: invokestatic  #15
346: aload         18
348: invokestatic  #15
351: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test154
Start line: 7687
End line: 7745
Method source code: 
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str6 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist5);
        boolean boolean8 = whitelist5.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist10 = whitelist5.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist14 = whitelist12.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist18 = whitelist12.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist22 = whitelist12.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str23 = org.jsoup.Jsoup.clean("hi!", whitelist12);
        org.jsoup.safety.Whitelist whitelist25 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist29 = whitelist27.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist33 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str34 = org.jsoup.Jsoup.clean(":lt(32)", whitelist33);
        org.jsoup.safety.Whitelist whitelist38 = whitelist33.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray45 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist46 = whitelist33.addTags(strArray45);
        org.jsoup.safety.Whitelist whitelist47 = whitelist29.addProtocols(":matchesOwn(null", "hi!", strArray45);
        java.lang.String[] strArray56 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean57 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray56);
        org.jsoup.safety.Whitelist whitelist58 = whitelist47.addProtocols("\n<!--hi!-->", "#document", strArray56);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray56);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray56);
        org.jsoup.safety.Whitelist whitelist61 = whitelist12.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray56);
        org.jsoup.safety.Whitelist whitelist62 = whitelist5.addTags(strArray56);
        org.jsoup.safety.Whitelist whitelist63 = whitelist1.addAttributes("[    ^=hi!]", strArray56);
        boolean boolean64 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body>\n </body>\n</html>]", strArray56);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray56, "<html>\n <head></head>\n <body></body>\n <#document></#document>\n</html>");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!$=   ]" + "'", str6, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ":lt(32)" + "'", str34, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #601
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: invokestatic  #8
32: astore_2
33: ldc           #109
35: ldc           #110
37: aload_2
38: invokestatic  #94
41: astore_3
42: aload_2
43: ldc           #25
45: invokevirtual #83
48: istore        4
50: aload_2
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #8
60: astore        6
62: aload         6
64: iconst_1
65: invokevirtual #9
68: astore        7
70: aload         6
72: ldc           #10
74: ldc           #10
76: ldc           #10
78: invokevirtual #11
81: astore        8
83: aload         6
85: ldc           #12
87: ldc           #13
89: ldc           #12
91: invokevirtual #11
94: astore        9
96: ldc           #12
98: aload         6
100: invokestatic  #81
103: astore        10
105: invokestatic  #8
108: astore        11
110: aload         11
112: iconst_1
113: invokevirtual #9
116: astore        12
118: aload         12
120: iconst_0
121: invokevirtual #9
124: astore        13
126: invokestatic  #118
129: astore        14
131: ldc           #43
133: aload         14
135: invokestatic  #81
138: astore        15
140: aload         14
142: ldc           #43
144: ldc           #12
146: ldc           #32
148: invokevirtual #11
151: astore        16
153: bipush        6
155: anewarray     #119
158: dup
159: iconst_0
160: ldc           #109
162: aastore
163: dup
164: iconst_1
165: ldc           #10
167: aastore
168: dup
169: iconst_2
170: ldc           #13
172: aastore
173: dup
174: iconst_3
175: ldc           #50
177: aastore
178: dup
179: iconst_4
180: ldc           #12
182: aastore
183: dup
184: iconst_5
185: ldc           #120
187: aastore
188: astore        17
190: aload         14
192: aload         17
194: invokevirtual #121
197: astore        18
199: aload         13
201: ldc           #38
203: ldc           #12
205: aload         17
207: invokevirtual #122
210: astore        19
212: iconst_5
213: anewarray     #119
216: dup
217: iconst_0
218: ldc           #13
220: aastore
221: dup
222: iconst_1
223: ldc           #32
225: aastore
226: dup
227: iconst_2
228: ldc           #10
230: aastore
231: dup
232: iconst_3
233: ldc           #43
235: aastore
236: dup
237: iconst_4
238: ldc           #58
240: aastore
241: astore        20
243: ldc           #10
245: aload         20
247: invokestatic  #123
250: istore        21
252: aload         19
254: ldc           #84
256: ldc           #13
258: aload         20
260: invokevirtual #122
263: astore        22
265: aload         20
267: checkcast     #124
270: invokestatic  #125
273: aload         20
275: checkcast     #124
278: invokestatic  #125
281: aload         6
283: ldc           #249
285: aload         20
287: invokevirtual #127
290: astore        23
292: aload_2
293: aload         20
295: invokevirtual #121
298: astore        24
300: aload_1
301: ldc           #173
303: aload         20
305: invokevirtual #127
308: astore        25
310: ldc           #215
312: aload         20
314: invokestatic  #123
317: istore        26
319: aload         20
321: checkcast     #124
324: ldc_w         #602
327: invokestatic  #245
330: aload_1
331: invokestatic  #15
334: aload_2
335: invokestatic  #15
338: new           #16
341: dup
342: invokespecial #17
345: ldc           #18
347: invokevirtual #19
350: aload_3
351: invokevirtual #19
354: ldc           #111
356: invokevirtual #19
359: invokevirtual #22
362: aload_3
363: ldc           #65
365: invokestatic  #68
368: new           #16
371: dup
372: invokespecial #17
375: ldc           #18
377: invokevirtual #19
380: iload         4
382: invokevirtual #20
385: ldc           #21
387: invokevirtual #19
390: iconst_0
391: invokevirtual #20
394: ldc           #18
396: invokevirtual #19
399: invokevirtual #22
402: iload         4
404: ifne          411
407: iconst_1
408: goto          412
411: iconst_0
412: invokestatic  #23
415: aload         5
417: invokestatic  #15
420: aload         6
422: invokestatic  #15
425: aload         7
427: invokestatic  #15
430: aload         8
432: invokestatic  #15
435: aload         9
437: invokestatic  #15
440: new           #16
443: dup
444: invokespecial #17
447: ldc           #18
449: invokevirtual #19
452: aload         10
454: invokevirtual #19
457: ldc           #211
459: invokevirtual #19
462: invokevirtual #22
465: aload         10
467: ldc           #12
469: invokestatic  #68
472: aload         11
474: invokestatic  #15
477: aload         12
479: invokestatic  #15
482: aload         13
484: invokestatic  #15
487: aload         14
489: invokestatic  #15
492: new           #16
495: dup
496: invokespecial #17
499: ldc           #18
501: invokevirtual #19
504: aload         15
506: invokevirtual #19
509: ldc           #128
511: invokevirtual #19
514: invokevirtual #22
517: aload         15
519: ldc           #43
521: invokestatic  #68
524: aload         16
526: invokestatic  #15
529: aload         17
531: invokestatic  #15
534: aload         18
536: invokestatic  #15
539: aload         19
541: invokestatic  #15
544: aload         20
546: invokestatic  #15
549: new           #16
552: dup
553: invokespecial #17
556: ldc           #18
558: invokevirtual #19
561: iload         21
563: invokevirtual #20
566: ldc           #21
568: invokevirtual #19
571: iconst_1
572: invokevirtual #20
575: ldc           #18
577: invokevirtual #19
580: invokevirtual #22
583: iload         21
585: iconst_1
586: if_icmpne     593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #23
597: aload         22
599: invokestatic  #15
602: aload         23
604: invokestatic  #15
607: aload         24
609: invokestatic  #15
612: aload         25
614: invokestatic  #15
617: new           #16
620: dup
621: invokespecial #17
624: ldc           #18
626: invokevirtual #19
629: iload         26
631: invokevirtual #20
634: ldc           #21
636: invokevirtual #19
639: iconst_0
640: invokevirtual #20
643: ldc           #18
645: invokevirtual #19
648: invokevirtual #22
651: iload         26
653: ifne          660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #23
664: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test155
Start line: 7748
End line: 7775
Method source code: 
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        org.jsoup.nodes.TextNode textNode2 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "#document");
        org.jsoup.nodes.Node node5 = textNode2.attr("#document", "#document");
        java.lang.String str6 = textNode2.getWholeText();
        boolean boolean8 = textNode2.equals((java.lang.Object) 0);
        java.lang.String str9 = textNode2.nodeName();
        java.lang.String str10 = textNode2.text();
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(false);
        java.lang.String str20 = org.jsoup.Jsoup.clean("[:lt(32)]", ":contains(:gt(100)", whitelist17);
        boolean boolean21 = textNode2.equals((java.lang.Object) whitelist17);
        org.junit.Assert.assertNotNull(textNode2);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#text" + "'", str9, "#text");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[:lt(32)]" + "'", str20, "[:lt(32)]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #603
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #12
27: ldc           #13
29: invokestatic  #604
32: astore_1
33: aload_1
34: ldc           #13
36: ldc           #13
38: invokevirtual #605
41: astore_2
42: aload_1
43: invokevirtual #606
46: astore_3
47: aload_1
48: iconst_0
49: invokestatic  #499
52: invokevirtual #607
55: istore        4
57: aload_1
58: invokevirtual #608
61: astore        5
63: aload_1
64: invokevirtual #609
67: astore        6
69: invokestatic  #8
72: astore        7
74: aload         7
76: iconst_1
77: invokevirtual #9
80: astore        8
82: aload         8
84: iconst_0
85: invokevirtual #9
88: astore        9
90: aload         9
92: iconst_0
93: invokevirtual #9
96: astore        10
98: ldc           #58
100: ldc           #214
102: aload         9
104: invokestatic  #94
107: astore        11
109: aload_1
110: aload         9
112: invokevirtual #607
115: istore        12
117: aload_1
118: invokestatic  #15
121: aload_2
122: invokestatic  #15
125: new           #16
128: dup
129: invokespecial #17
132: ldc           #18
134: invokevirtual #19
137: aload_3
138: invokevirtual #19
141: ldc           #211
143: invokevirtual #19
146: invokevirtual #22
149: aload_3
150: ldc           #12
152: invokestatic  #68
155: new           #16
158: dup
159: invokespecial #17
162: ldc           #18
164: invokevirtual #19
167: iload         4
169: invokevirtual #20
172: ldc           #21
174: invokevirtual #19
177: iconst_0
178: invokevirtual #20
181: ldc           #18
183: invokevirtual #19
186: invokevirtual #22
189: iload         4
191: ifne          198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #23
202: new           #16
205: dup
206: invokespecial #17
209: ldc           #18
211: invokevirtual #19
214: aload         5
216: invokevirtual #19
219: ldc_w         #610
222: invokevirtual #19
225: invokevirtual #22
228: aload         5
230: ldc           #51
232: invokestatic  #68
235: new           #16
238: dup
239: invokespecial #17
242: ldc           #18
244: invokevirtual #19
247: aload         6
249: invokevirtual #19
252: ldc           #211
254: invokevirtual #19
257: invokevirtual #22
260: aload         6
262: ldc           #12
264: invokestatic  #68
267: aload         7
269: invokestatic  #15
272: aload         8
274: invokestatic  #15
277: aload         9
279: invokestatic  #15
282: aload         10
284: invokestatic  #15
287: new           #16
290: dup
291: invokespecial #17
294: ldc           #18
296: invokevirtual #19
299: aload         11
301: invokevirtual #19
304: ldc           #184
306: invokevirtual #19
309: invokevirtual #22
312: aload         11
314: ldc           #58
316: invokestatic  #68
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: iload         12
333: invokevirtual #20
336: ldc           #21
338: invokevirtual #19
341: iconst_0
342: invokevirtual #20
345: ldc           #18
347: invokevirtual #19
350: invokevirtual #22
353: iload         12
355: ifne          362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #23
366: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test156
Start line: 7778
End line: 7791
Method source code: 
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist11 = whitelist1.addEnforcedAttribute("hi!", "#document", "hi!");
        boolean boolean12 = org.jsoup.Jsoup.isValid("[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]", whitelist11);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #611
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: ldc           #228
60: aload         4
62: invokestatic  #14
65: istore        5
67: aload_1
68: invokestatic  #15
71: aload_2
72: invokestatic  #15
75: aload_3
76: invokestatic  #15
79: aload         4
81: invokestatic  #15
84: new           #16
87: dup
88: invokespecial #17
91: ldc           #18
93: invokevirtual #19
96: iload         5
98: invokevirtual #20
101: ldc           #21
103: invokevirtual #19
106: iconst_1
107: invokevirtual #20
110: ldc           #18
112: invokevirtual #19
115: invokevirtual #22
118: iload         5
120: iconst_1
121: if_icmpne     128
124: iconst_1
125: goto          129
128: iconst_0
129: invokestatic  #23
132: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test157
Start line: 7794
End line: 7881
Method source code: 
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parseBodyFragment("                                                                                                    ");
        org.jsoup.nodes.Document document29 = cleaner3.clean(document28);
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.text("");
        org.jsoup.select.Elements elements40 = document33.getElementsByAttributeValueEnding("[^hi!]", "#document");
        org.jsoup.nodes.Document document44 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList46 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document44, "hi!");
        org.jsoup.nodes.Element element47 = document44.empty();
        org.jsoup.nodes.Element element49 = document44.removeClass("hi!");
        java.lang.String str50 = document44.nodeName();
        org.jsoup.nodes.Document.QuirksMode quirksMode51 = document44.quirksMode();
        org.jsoup.nodes.Document document52 = document33.quirksMode(quirksMode51);
        boolean boolean53 = cleaner3.isValid(document33);
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element60 = document57.empty();
        org.jsoup.nodes.Element element62 = document57.removeClass("hi!");
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList68 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document66, "hi!");
        org.jsoup.nodes.Element element70 = document66.tagName("hi!");
        org.jsoup.nodes.Element element72 = document66.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings73 = document66.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings75 = outputSettings73.prettyPrint(false);
        org.jsoup.nodes.Document document76 = document57.outputSettings(outputSettings75);
        org.jsoup.select.Elements elements78 = document76.getElementsMatchingOwnText("#document");
        boolean boolean79 = cleaner3.isValid(document76);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(elements40);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#document" + "'", str50, "#document");
        org.junit.Assert.assertTrue("'" + quirksMode51 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode51.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertNotNull(element62);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertNotNull(outputSettings73);
        org.junit.Assert.assertNotNull(outputSettings75);
        org.junit.Assert.assertNotNull(document76);
        org.junit.Assert.assertNotNull(elements78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #612
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: ldc_w         #613
160: invokestatic  #193
163: astore        17
165: aload_3
166: aload         17
168: invokevirtual #47
171: astore        18
173: ldc           #25
175: ldc           #12
177: invokestatic  #26
180: astore        19
182: ldc           #12
184: aload         19
186: ldc           #12
188: invokestatic  #27
191: astore        20
193: aload         19
195: ldc           #25
197: invokevirtual #64
200: astore        21
202: aload         19
204: ldc           #50
206: ldc           #13
208: invokevirtual #153
211: astore        22
213: ldc           #25
215: ldc           #12
217: invokestatic  #26
220: astore        23
222: ldc           #12
224: aload         23
226: ldc           #12
228: invokestatic  #27
231: astore        24
233: aload         23
235: invokevirtual #103
238: astore        25
240: aload         23
242: ldc           #12
244: invokevirtual #59
247: astore        26
249: aload         23
251: invokevirtual #220
254: astore        27
256: aload         23
258: invokevirtual #222
261: astore        28
263: aload         19
265: aload         28
267: invokevirtual #481
270: astore        29
272: aload_3
273: aload         19
275: invokevirtual #155
278: istore        30
280: ldc           #25
282: ldc           #12
284: invokestatic  #26
287: astore        31
289: ldc           #12
291: aload         31
293: ldc           #12
295: invokestatic  #27
298: astore        32
300: aload         31
302: invokevirtual #103
305: astore        33
307: aload         31
309: ldc           #12
311: invokevirtual #59
314: astore        34
316: ldc           #25
318: ldc           #12
320: invokestatic  #26
323: astore        35
325: ldc           #12
327: aload         35
329: ldc           #12
331: invokestatic  #27
334: astore        36
336: aload         35
338: ldc           #12
340: invokevirtual #28
343: astore        37
345: aload         35
347: ldc           #25
349: invokevirtual #29
352: astore        38
354: aload         35
356: invokevirtual #30
359: astore        39
361: aload         39
363: iconst_0
364: invokevirtual #31
367: astore        40
369: aload         31
371: aload         40
373: invokevirtual #175
376: astore        41
378: aload         41
380: ldc           #13
382: invokevirtual #100
385: astore        42
387: aload_3
388: aload         41
390: invokevirtual #155
393: istore        43
395: aload_1
396: invokestatic  #15
399: aload_2
400: invokestatic  #15
403: aload         5
405: invokestatic  #15
408: aload         6
410: invokestatic  #15
413: aload         7
415: invokestatic  #15
418: aload         8
420: invokestatic  #15
423: aload         9
425: invokestatic  #15
428: aload         10
430: invokestatic  #15
433: new           #16
436: dup
437: invokespecial #17
440: ldc           #18
442: invokevirtual #19
445: iload         11
447: invokevirtual #20
450: ldc           #21
452: invokevirtual #19
455: iconst_0
456: invokevirtual #20
459: ldc           #18
461: invokevirtual #19
464: invokevirtual #22
467: iload         11
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #23
480: aload         12
482: invokestatic  #15
485: aload         13
487: invokestatic  #15
490: new           #16
493: dup
494: invokespecial #17
497: ldc           #18
499: invokevirtual #19
502: aload         14
504: invokevirtual #19
507: ldc           #197
509: invokevirtual #19
512: invokevirtual #22
515: aload         14
517: ldc           #151
519: invokestatic  #68
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: aload         15
536: invokevirtual #19
539: ldc           #67
541: invokevirtual #19
544: invokevirtual #22
547: aload         15
549: ldc           #25
551: invokestatic  #68
554: aload         16
556: invokestatic  #15
559: aload         17
561: invokestatic  #15
564: aload         18
566: invokestatic  #15
569: aload         19
571: invokestatic  #15
574: aload         20
576: invokestatic  #15
579: aload         21
581: invokestatic  #15
584: aload         22
586: invokestatic  #15
589: aload         23
591: invokestatic  #15
594: aload         24
596: invokestatic  #15
599: aload         25
601: invokestatic  #15
604: aload         26
606: invokestatic  #15
609: new           #16
612: dup
613: invokespecial #17
616: ldc           #18
618: invokevirtual #19
621: aload         27
623: invokevirtual #19
626: ldc           #107
628: invokevirtual #19
631: invokevirtual #22
634: aload         27
636: ldc           #13
638: invokestatic  #68
641: new           #16
644: dup
645: invokespecial #17
648: ldc           #18
650: invokevirtual #19
653: aload         28
655: invokevirtual #223
658: ldc           #21
660: invokevirtual #19
663: getstatic     #224
666: invokevirtual #223
669: ldc           #18
671: invokevirtual #19
674: invokevirtual #22
677: aload         28
679: getstatic     #224
682: invokevirtual #225
685: invokestatic  #23
688: aload         29
690: invokestatic  #15
693: new           #16
696: dup
697: invokespecial #17
700: ldc           #18
702: invokevirtual #19
705: iload         30
707: invokevirtual #20
710: ldc           #21
712: invokevirtual #19
715: iconst_1
716: invokevirtual #20
719: ldc           #18
721: invokevirtual #19
724: invokevirtual #22
727: iload         30
729: iconst_1
730: if_icmpne     737
733: iconst_1
734: goto          738
737: iconst_0
738: invokestatic  #23
741: aload         31
743: invokestatic  #15
746: aload         32
748: invokestatic  #15
751: aload         33
753: invokestatic  #15
756: aload         34
758: invokestatic  #15
761: aload         35
763: invokestatic  #15
766: aload         36
768: invokestatic  #15
771: aload         37
773: invokestatic  #15
776: aload         38
778: invokestatic  #15
781: aload         39
783: invokestatic  #15
786: aload         40
788: invokestatic  #15
791: aload         41
793: invokestatic  #15
796: aload         42
798: invokestatic  #15
801: new           #16
804: dup
805: invokespecial #17
808: ldc           #18
810: invokevirtual #19
813: iload         43
815: invokevirtual #20
818: ldc           #21
820: invokevirtual #19
823: iconst_1
824: invokevirtual #20
827: ldc           #18
829: invokevirtual #19
832: invokevirtual #22
835: iload         43
837: iconst_1
838: if_icmpne     845
841: iconst_1
842: goto          846
845: iconst_0
846: invokestatic  #23
849: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test158
Start line: 7884
End line: 7906
Method source code: 
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str5 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist4);
        boolean boolean7 = whitelist4.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist9 = whitelist4.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes11 = whitelist9.getEnforcedAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String str12 = org.jsoup.Jsoup.clean("[[:gt(100)]$=:gt(100)]", "[hi!$=hi!]", whitelist9);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist16 = whitelist9.addEnforcedAttribute(" :lt(32)=\"\"", "", "[text=\"hi!\" #document=\"#document\"!=:eq(1)]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[hi!$=   ]" + "'", str5, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(attributes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[[:gt(100)]$=:gt(100)]" + "'", str12, "[[:gt(100)]$=:gt(100)]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #614
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: aload         4
54: ldc           #109
56: invokevirtual #150
59: astore        5
61: ldc_w         #308
64: ldc_w         #615
67: aload         4
69: invokestatic  #94
72: astore        6
74: aload         4
76: ldc_w         #616
79: ldc           #25
81: ldc_w         #617
84: invokevirtual #11
87: astore        7
89: ldc           #141
91: invokestatic  #35
94: goto          99
97: astore        7
99: aload_1
100: invokestatic  #15
103: new           #16
106: dup
107: invokespecial #17
110: ldc           #18
112: invokevirtual #19
115: aload_2
116: invokevirtual #19
119: ldc           #111
121: invokevirtual #19
124: invokevirtual #22
127: aload_2
128: ldc           #65
130: invokestatic  #68
133: new           #16
136: dup
137: invokespecial #17
140: ldc           #18
142: invokevirtual #19
145: iload_3
146: invokevirtual #20
149: ldc           #21
151: invokevirtual #19
154: iconst_0
155: invokevirtual #20
158: ldc           #18
160: invokevirtual #19
163: invokevirtual #22
166: iload_3
167: ifne          174
170: iconst_1
171: goto          175
174: iconst_0
175: invokestatic  #23
178: aload         4
180: invokestatic  #15
183: aload         5
185: invokestatic  #15
188: new           #16
191: dup
192: invokespecial #17
195: ldc           #18
197: invokevirtual #19
200: aload         6
202: invokevirtual #19
205: ldc_w         #309
208: invokevirtual #19
211: invokevirtual #22
214: aload         6
216: ldc_w         #308
219: invokestatic  #68
222: return
Exception table:
from    to  target type
74    94    97   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test159
Start line: 7909
End line: 7992
Method source code: 
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        int int9 = objList0.lastIndexOf((java.lang.Object) document4);
        org.jsoup.nodes.Document document13 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList15 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document13, "hi!");
        java.lang.String str17 = org.jsoup.helper.StringUtil.join((java.util.Collection) nodeList15, "#document");
        boolean boolean18 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList15);
        java.lang.Object obj19 = objList0.clone();
        java.util.ListIterator<java.lang.Object> objItor20 = objList0.listIterator();
        org.jsoup.nodes.Document document24 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList26 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document24, "hi!");
        org.jsoup.nodes.Element element27 = document24.empty();
        org.jsoup.nodes.Element element29 = document24.removeClass("hi!");
        org.jsoup.nodes.Element element31 = element29.toggleClass("");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = element31.siblingNodes();
        boolean boolean33 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList32);
        java.lang.Object obj34 = null;
        boolean boolean35 = objList0.equals(obj34);
        org.jsoup.safety.Whitelist whitelist38 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist40 = whitelist38.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist42 = whitelist40.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist46 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str47 = org.jsoup.Jsoup.clean(":lt(32)", whitelist46);
        org.jsoup.safety.Whitelist whitelist51 = whitelist46.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray58 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist59 = whitelist46.addTags(strArray58);
        org.jsoup.safety.Whitelist whitelist60 = whitelist42.addProtocols(":matchesOwn(null", "hi!", strArray58);
        org.jsoup.nodes.Document document64 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList66 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document64, "hi!");
        org.jsoup.nodes.Element element68 = document64.tagName("hi!");
        org.jsoup.nodes.Element element70 = document64.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = document64.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = outputSettings71.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings74 = outputSettings72.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = outputSettings72.indentAmount((int) (short) 0);
        org.jsoup.nodes.Entities.EscapeMode escapeMode77 = outputSettings76.escapeMode();
        java.lang.String str78 = org.jsoup.Jsoup.clean("<<html>\n <head></head>\n <body></body>\n</html>></<html>\n <head></head>\n <body></body>\n</html>><html><head><title>hi&excl;</title></head><body></body></html>", "#root", whitelist60, outputSettings76);
        objList0.addLast((java.lang.Object) str78);
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\nhi!" + "'", str17, "\nhi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertNotNull(objItor20);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ":lt(32)" + "'", str47, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertNotNull(document64);
        org.junit.Assert.assertNotNull(nodeList66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertNotNull(outputSettings72);
        org.junit.Assert.assertNotNull(outputSettings74);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertTrue("'" + escapeMode77 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode77.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "&lt;\n \n \n&gt;\n \n \n&gt;hi!" + "'", str78, "&lt;\n \n \n&gt;\n \n \n&gt;hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #618
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: aload_1
59: aload_2
60: invokevirtual #130
63: istore        5
65: ldc           #25
67: ldc           #12
69: invokestatic  #26
72: astore        6
74: ldc           #12
76: aload         6
78: ldc           #12
80: invokestatic  #27
83: astore        7
85: aload         7
87: ldc           #13
89: invokestatic  #284
92: astore        8
94: aload_1
95: aload         7
97: invokevirtual #285
100: istore        9
102: aload_1
103: invokevirtual #619
106: astore        10
108: aload_1
109: invokevirtual #403
112: astore        11
114: ldc           #25
116: ldc           #12
118: invokestatic  #26
121: astore        12
123: ldc           #12
125: aload         12
127: ldc           #12
129: invokestatic  #27
132: astore        13
134: aload         12
136: invokevirtual #103
139: astore        14
141: aload         12
143: ldc           #12
145: invokevirtual #59
148: astore        15
150: aload         15
152: ldc           #25
154: invokevirtual #177
157: astore        16
159: aload         16
161: invokevirtual #396
164: astore        17
166: aload_1
167: aload         17
169: invokevirtual #285
172: istore        18
174: aconst_null
175: astore        19
177: aload_1
178: aload         19
180: invokevirtual #90
183: istore        20
185: invokestatic  #8
188: astore        21
190: aload         21
192: iconst_1
193: invokevirtual #9
196: astore        22
198: aload         22
200: iconst_0
201: invokevirtual #9
204: astore        23
206: invokestatic  #118
209: astore        24
211: ldc           #43
213: aload         24
215: invokestatic  #81
218: astore        25
220: aload         24
222: ldc           #43
224: ldc           #12
226: ldc           #32
228: invokevirtual #11
231: astore        26
233: bipush        6
235: anewarray     #119
238: dup
239: iconst_0
240: ldc           #109
242: aastore
243: dup
244: iconst_1
245: ldc           #10
247: aastore
248: dup
249: iconst_2
250: ldc           #13
252: aastore
253: dup
254: iconst_3
255: ldc           #50
257: aastore
258: dup
259: iconst_4
260: ldc           #12
262: aastore
263: dup
264: iconst_5
265: ldc           #120
267: aastore
268: astore        27
270: aload         24
272: aload         27
274: invokevirtual #121
277: astore        28
279: aload         23
281: ldc           #38
283: ldc           #12
285: aload         27
287: invokevirtual #122
290: astore        29
292: ldc           #25
294: ldc           #12
296: invokestatic  #26
299: astore        30
301: ldc           #12
303: aload         30
305: ldc           #12
307: invokestatic  #27
310: astore        31
312: aload         30
314: ldc           #12
316: invokevirtual #28
319: astore        32
321: aload         30
323: ldc           #25
325: invokevirtual #29
328: astore        33
330: aload         30
332: invokevirtual #30
335: astore        34
337: aload         34
339: invokevirtual #205
342: astore        35
344: aload         35
346: iconst_0
347: invokevirtual #31
350: astore        36
352: aload         35
354: iconst_0
355: invokevirtual #189
358: astore        37
360: aload         37
362: invokevirtual #382
365: astore        38
367: ldc_w         #620
370: ldc_w         #331
373: aload         29
375: aload         37
377: invokestatic  #33
380: astore        39
382: aload_1
383: aload         39
385: invokevirtual #95
388: aload_2
389: invokestatic  #15
392: aload_3
393: invokestatic  #15
396: aload         4
398: invokestatic  #15
401: new           #16
404: dup
405: invokespecial #17
408: ldc           #18
410: invokevirtual #19
413: iload         5
415: invokevirtual #134
418: ldc           #21
420: invokevirtual #19
423: iconst_m1
424: invokevirtual #134
427: ldc           #18
429: invokevirtual #19
432: invokevirtual #22
435: iload         5
437: iconst_m1
438: if_icmpne     445
441: iconst_1
442: goto          446
445: iconst_0
446: invokestatic  #23
449: aload         6
451: invokestatic  #15
454: aload         7
456: invokestatic  #15
459: new           #16
462: dup
463: invokespecial #17
466: ldc           #18
468: invokevirtual #19
471: aload         8
473: invokevirtual #19
476: ldc_w         #292
479: invokevirtual #19
482: invokevirtual #22
485: aload         8
487: ldc           #98
489: invokestatic  #68
492: new           #16
495: dup
496: invokespecial #17
499: ldc           #18
501: invokevirtual #19
504: iload         9
506: invokevirtual #20
509: ldc           #21
511: invokevirtual #19
514: iconst_0
515: invokevirtual #20
518: ldc           #18
520: invokevirtual #19
523: invokevirtual #22
526: iload         9
528: ifne          535
531: iconst_1
532: goto          536
535: iconst_0
536: invokestatic  #23
539: aload         10
541: invokestatic  #15
544: aload         10
546: invokevirtual #571
549: ldc           #159
551: invokestatic  #290
554: aload         10
556: invokestatic  #572
559: ldc           #159
561: invokestatic  #290
564: aload         10
566: invokestatic  #573
569: ldc           #159
571: invokestatic  #290
574: aload         11
576: invokestatic  #15
579: aload         12
581: invokestatic  #15
584: aload         13
586: invokestatic  #15
589: aload         14
591: invokestatic  #15
594: aload         15
596: invokestatic  #15
599: aload         16
601: invokestatic  #15
604: aload         17
606: invokestatic  #15
609: new           #16
612: dup
613: invokespecial #17
616: ldc           #18
618: invokevirtual #19
621: iload         18
623: invokevirtual #20
626: ldc           #21
628: invokevirtual #19
631: iconst_1
632: invokevirtual #20
635: ldc           #18
637: invokevirtual #19
640: invokevirtual #22
643: iload         18
645: iconst_1
646: if_icmpne     653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #23
657: new           #16
660: dup
661: invokespecial #17
664: ldc           #18
666: invokevirtual #19
669: iload         20
671: invokevirtual #20
674: ldc           #21
676: invokevirtual #19
679: iconst_0
680: invokevirtual #20
683: ldc           #18
685: invokevirtual #19
688: invokevirtual #22
691: iload         20
693: ifne          700
696: iconst_1
697: goto          701
700: iconst_0
701: invokestatic  #23
704: aload         21
706: invokestatic  #15
709: aload         22
711: invokestatic  #15
714: aload         23
716: invokestatic  #15
719: aload         24
721: invokestatic  #15
724: new           #16
727: dup
728: invokespecial #17
731: ldc           #18
733: invokevirtual #19
736: aload         25
738: invokevirtual #19
741: ldc           #128
743: invokevirtual #19
746: invokevirtual #22
749: aload         25
751: ldc           #43
753: invokestatic  #68
756: aload         26
758: invokestatic  #15
761: aload         27
763: invokestatic  #15
766: aload         28
768: invokestatic  #15
771: aload         29
773: invokestatic  #15
776: aload         30
778: invokestatic  #15
781: aload         31
783: invokestatic  #15
786: aload         32
788: invokestatic  #15
791: aload         33
793: invokestatic  #15
796: aload         34
798: invokestatic  #15
801: aload         35
803: invokestatic  #15
806: aload         36
808: invokestatic  #15
811: aload         37
813: invokestatic  #15
816: new           #16
819: dup
820: invokespecial #17
823: ldc           #18
825: invokevirtual #19
828: aload         38
830: invokevirtual #223
833: ldc           #21
835: invokevirtual #19
838: getstatic     #381
841: invokevirtual #223
844: ldc           #18
846: invokevirtual #19
849: invokevirtual #22
852: aload         38
854: getstatic     #381
857: invokevirtual #385
860: invokestatic  #23
863: new           #16
866: dup
867: invokespecial #17
870: ldc           #18
872: invokevirtual #19
875: aload         39
877: invokevirtual #19
880: ldc_w         #621
883: invokevirtual #19
886: invokevirtual #22
889: aload         39
891: ldc_w         #622
894: invokestatic  #68
897: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test160
Start line: 7995
End line: 8108
Method source code: 
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str29 = document28.toString();
        java.lang.String str30 = document28.baseUri();
        org.jsoup.nodes.Document.QuirksMode quirksMode31 = document28.quirksMode();
        boolean boolean33 = document28.hasClass(":lt(32)=\"[.]\"");
        boolean boolean34 = cleaner3.isValid(document28);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList35 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean37 = objList35.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList38 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.text("");
        int int47 = objList38.lastIndexOf((java.lang.Object) document42);
        objList35.addFirst((java.lang.Object) document42);
        boolean boolean49 = cleaner3.isValid(document42);
        org.jsoup.nodes.Document document51 = new org.jsoup.nodes.Document("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList57 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document55, "hi!");
        org.jsoup.nodes.Element element58 = document55.empty();
        org.jsoup.nodes.Element element60 = document55.removeClass("hi!");
        java.lang.String str61 = document55.id();
        org.jsoup.nodes.Document document65 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList67 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document65, "hi!");
        org.jsoup.nodes.Element element68 = document65.empty();
        org.jsoup.nodes.Element element70 = document65.removeClass("hi!");
        java.lang.String str71 = document65.nodeName();
        org.jsoup.nodes.Document.QuirksMode quirksMode72 = document65.quirksMode();
        org.jsoup.nodes.Document document73 = document55.quirksMode(quirksMode72);
        java.lang.String str74 = document73.id();
        org.jsoup.nodes.Document document78 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList80 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document78, "hi!");
        org.jsoup.nodes.Element element82 = document78.tagName("hi!");
        org.jsoup.nodes.Element element84 = document78.append("");
        java.lang.String str85 = document78.toString();
        org.jsoup.nodes.Element element87 = document78.prependElement("\nhi!");
        org.jsoup.select.Elements elements89 = document78.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document.QuirksMode quirksMode90 = org.jsoup.nodes.Document.QuirksMode.quirks;
        org.jsoup.nodes.Document document91 = document78.quirksMode(quirksMode90);
        org.jsoup.nodes.Document document92 = document73.quirksMode(quirksMode90);
        org.jsoup.nodes.Document document93 = document51.quirksMode(quirksMode90);
        org.jsoup.nodes.Element element94 = document51.body();
        boolean boolean95 = cleaner3.isValid(document51);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str29, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + quirksMode31 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode31.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertNotNull(nodeList67);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "#document" + "'", str71, "#document");
        org.junit.Assert.assertTrue("'" + quirksMode72 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode72.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(document78);
        org.junit.Assert.assertNotNull(nodeList80);
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str85, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element87);
        org.junit.Assert.assertNotNull(elements89);
        org.junit.Assert.assertTrue("'" + quirksMode90 + "' != '" + org.jsoup.nodes.Document.QuirksMode.quirks + "'", quirksMode90.equals(org.jsoup.nodes.Document.QuirksMode.quirks));
        org.junit.Assert.assertNotNull(document91);
        org.junit.Assert.assertNotNull(document92);
        org.junit.Assert.assertNotNull(document93);
        org.junit.Assert.assertNull(element94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #623
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: ldc           #10
159: invokestatic  #193
162: astore        17
164: aload         17
166: invokevirtual #72
169: astore        18
171: aload         17
173: invokevirtual #194
176: astore        19
178: aload         17
180: invokevirtual #222
183: astore        20
185: aload         17
187: ldc           #230
189: invokevirtual #305
192: istore        21
194: aload_3
195: aload         17
197: invokevirtual #155
200: istore        22
202: new           #88
205: dup
206: invokespecial #89
209: astore        23
211: aload         23
213: ldc           #43
215: invokevirtual #90
218: istore        24
220: new           #88
223: dup
224: invokespecial #89
227: astore        25
229: ldc           #25
231: ldc           #12
233: invokestatic  #26
236: astore        26
238: ldc           #12
240: aload         26
242: ldc           #12
244: invokestatic  #27
247: astore        27
249: aload         26
251: ldc           #25
253: invokevirtual #64
256: astore        28
258: aload         25
260: aload         26
262: invokevirtual #130
265: istore        29
267: aload         23
269: aload         26
271: invokevirtual #93
274: aload_3
275: aload         26
277: invokevirtual #155
280: istore        30
282: new           #624
285: dup
286: ldc           #249
288: invokespecial #625
291: astore        31
293: ldc           #25
295: ldc           #12
297: invokestatic  #26
300: astore        32
302: ldc           #12
304: aload         32
306: ldc           #12
308: invokestatic  #27
311: astore        33
313: aload         32
315: invokevirtual #103
318: astore        34
320: aload         32
322: ldc           #12
324: invokevirtual #59
327: astore        35
329: aload         32
331: invokevirtual #73
334: astore        36
336: ldc           #25
338: ldc           #12
340: invokestatic  #26
343: astore        37
345: ldc           #12
347: aload         37
349: ldc           #12
351: invokestatic  #27
354: astore        38
356: aload         37
358: invokevirtual #103
361: astore        39
363: aload         37
365: ldc           #12
367: invokevirtual #59
370: astore        40
372: aload         37
374: invokevirtual #220
377: astore        41
379: aload         37
381: invokevirtual #222
384: astore        42
386: aload         32
388: aload         42
390: invokevirtual #481
393: astore        43
395: aload         43
397: invokevirtual #73
400: astore        44
402: ldc           #25
404: ldc           #12
406: invokestatic  #26
409: astore        45
411: ldc           #12
413: aload         45
415: ldc           #12
417: invokestatic  #27
420: astore        46
422: aload         45
424: ldc           #12
426: invokevirtual #28
429: astore        47
431: aload         45
433: ldc           #25
435: invokevirtual #29
438: astore        48
440: aload         45
442: invokevirtual #72
445: astore        49
447: aload         45
449: ldc           #98
451: invokevirtual #99
454: astore        50
456: aload         45
458: ldc           #25
460: invokevirtual #100
463: astore        51
465: getstatic     #626
468: astore        52
470: aload         45
472: aload         52
474: invokevirtual #481
477: astore        53
479: aload         43
481: aload         52
483: invokevirtual #481
486: astore        54
488: aload         31
490: aload         52
492: invokevirtual #481
495: astore        55
497: aload         31
499: invokevirtual #166
502: astore        56
504: aload_3
505: aload         31
507: invokevirtual #155
510: istore        57
512: aload_1
513: invokestatic  #15
516: aload_2
517: invokestatic  #15
520: aload         5
522: invokestatic  #15
525: aload         6
527: invokestatic  #15
530: aload         7
532: invokestatic  #15
535: aload         8
537: invokestatic  #15
540: aload         9
542: invokestatic  #15
545: aload         10
547: invokestatic  #15
550: new           #16
553: dup
554: invokespecial #17
557: ldc           #18
559: invokevirtual #19
562: iload         11
564: invokevirtual #20
567: ldc           #21
569: invokevirtual #19
572: iconst_0
573: invokevirtual #20
576: ldc           #18
578: invokevirtual #19
581: invokevirtual #22
584: iload         11
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #23
597: aload         12
599: invokestatic  #15
602: aload         13
604: invokestatic  #15
607: new           #16
610: dup
611: invokespecial #17
614: ldc           #18
616: invokevirtual #19
619: aload         14
621: invokevirtual #19
624: ldc           #197
626: invokevirtual #19
629: invokevirtual #22
632: aload         14
634: ldc           #151
636: invokestatic  #68
639: new           #16
642: dup
643: invokespecial #17
646: ldc           #18
648: invokevirtual #19
651: aload         15
653: invokevirtual #19
656: ldc           #67
658: invokevirtual #19
661: invokevirtual #22
664: aload         15
666: ldc           #25
668: invokestatic  #68
671: aload         16
673: invokestatic  #15
676: aload         17
678: invokestatic  #15
681: new           #16
684: dup
685: invokespecial #17
688: ldc           #18
690: invokevirtual #19
693: aload         18
695: invokevirtual #19
698: ldc           #197
700: invokevirtual #19
703: invokevirtual #22
706: aload         18
708: ldc           #151
710: invokestatic  #68
713: new           #16
716: dup
717: invokespecial #17
720: ldc           #18
722: invokevirtual #19
725: aload         19
727: invokevirtual #19
730: ldc           #67
732: invokevirtual #19
735: invokevirtual #22
738: aload         19
740: ldc           #25
742: invokestatic  #68
745: new           #16
748: dup
749: invokespecial #17
752: ldc           #18
754: invokevirtual #19
757: aload         20
759: invokevirtual #223
762: ldc           #21
764: invokevirtual #19
767: getstatic     #224
770: invokevirtual #223
773: ldc           #18
775: invokevirtual #19
778: invokevirtual #22
781: aload         20
783: getstatic     #224
786: invokevirtual #225
789: invokestatic  #23
792: new           #16
795: dup
796: invokespecial #17
799: ldc           #18
801: invokevirtual #19
804: iload         21
806: invokevirtual #20
809: ldc           #21
811: invokevirtual #19
814: iconst_0
815: invokevirtual #20
818: ldc           #18
820: invokevirtual #19
823: invokevirtual #22
826: iload         21
828: ifne          835
831: iconst_1
832: goto          836
835: iconst_0
836: invokestatic  #23
839: new           #16
842: dup
843: invokespecial #17
846: ldc           #18
848: invokevirtual #19
851: iload         22
853: invokevirtual #20
856: ldc           #21
858: invokevirtual #19
861: iconst_1
862: invokevirtual #20
865: ldc           #18
867: invokevirtual #19
870: invokevirtual #22
873: iload         22
875: iconst_1
876: if_icmpne     883
879: iconst_1
880: goto          884
883: iconst_0
884: invokestatic  #23
887: new           #16
890: dup
891: invokespecial #17
894: ldc           #18
896: invokevirtual #19
899: iload         24
901: invokevirtual #20
904: ldc           #21
906: invokevirtual #19
909: iconst_0
910: invokevirtual #20
913: ldc           #18
915: invokevirtual #19
918: invokevirtual #22
921: iload         24
923: ifne          930
926: iconst_1
927: goto          931
930: iconst_0
931: invokestatic  #23
934: aload         26
936: invokestatic  #15
939: aload         27
941: invokestatic  #15
944: aload         28
946: invokestatic  #15
949: new           #16
952: dup
953: invokespecial #17
956: ldc           #18
958: invokevirtual #19
961: iload         29
963: invokevirtual #134
966: ldc           #21
968: invokevirtual #19
971: iconst_m1
972: invokevirtual #134
975: ldc           #18
977: invokevirtual #19
980: invokevirtual #22
983: iload         29
985: iconst_m1
986: if_icmpne     993
989: iconst_1
990: goto          994
993: iconst_0
994: invokestatic  #23
997: new           #16
1000: dup
1001: invokespecial #17
1004: ldc           #18
1006: invokevirtual #19
1009: iload         30
1011: invokevirtual #20
1014: ldc           #21
1016: invokevirtual #19
1019: iconst_1
1020: invokevirtual #20
1023: ldc           #18
1025: invokevirtual #19
1028: invokevirtual #22
1031: iload         30
1033: iconst_1
1034: if_icmpne     1041
1037: iconst_1
1038: goto          1042
1041: iconst_0
1042: invokestatic  #23
1045: aload         32
1047: invokestatic  #15
1050: aload         33
1052: invokestatic  #15
1055: aload         34
1057: invokestatic  #15
1060: aload         35
1062: invokestatic  #15
1065: new           #16
1068: dup
1069: invokespecial #17
1072: ldc           #18
1074: invokevirtual #19
1077: aload         36
1079: invokevirtual #19
1082: ldc           #67
1084: invokevirtual #19
1087: invokevirtual #22
1090: aload         36
1092: ldc           #25
1094: invokestatic  #68
1097: aload         37
1099: invokestatic  #15
1102: aload         38
1104: invokestatic  #15
1107: aload         39
1109: invokestatic  #15
1112: aload         40
1114: invokestatic  #15
1117: new           #16
1120: dup
1121: invokespecial #17
1124: ldc           #18
1126: invokevirtual #19
1129: aload         41
1131: invokevirtual #19
1134: ldc           #107
1136: invokevirtual #19
1139: invokevirtual #22
1142: aload         41
1144: ldc           #13
1146: invokestatic  #68
1149: new           #16
1152: dup
1153: invokespecial #17
1156: ldc           #18
1158: invokevirtual #19
1161: aload         42
1163: invokevirtual #223
1166: ldc           #21
1168: invokevirtual #19
1171: getstatic     #224
1174: invokevirtual #223
1177: ldc           #18
1179: invokevirtual #19
1182: invokevirtual #22
1185: aload         42
1187: getstatic     #224
1190: invokevirtual #225
1193: invokestatic  #23
1196: aload         43
1198: invokestatic  #15
1201: new           #16
1204: dup
1205: invokespecial #17
1208: ldc           #18
1210: invokevirtual #19
1213: aload         44
1215: invokevirtual #19
1218: ldc           #67
1220: invokevirtual #19
1223: invokevirtual #22
1226: aload         44
1228: ldc           #25
1230: invokestatic  #68
1233: aload         45
1235: invokestatic  #15
1238: aload         46
1240: invokestatic  #15
1243: aload         47
1245: invokestatic  #15
1248: aload         48
1250: invokestatic  #15
1253: new           #16
1256: dup
1257: invokespecial #17
1260: ldc           #18
1262: invokevirtual #19
1265: aload         49
1267: invokevirtual #19
1270: ldc           #78
1272: invokevirtual #19
1275: invokevirtual #22
1278: aload         49
1280: ldc           #10
1282: invokestatic  #68
1285: aload         50
1287: invokestatic  #15
1290: aload         51
1292: invokestatic  #15
1295: new           #16
1298: dup
1299: invokespecial #17
1302: ldc           #18
1304: invokevirtual #19
1307: aload         52
1309: invokevirtual #223
1312: ldc           #21
1314: invokevirtual #19
1317: getstatic     #626
1320: invokevirtual #223
1323: ldc           #18
1325: invokevirtual #19
1328: invokevirtual #22
1331: aload         52
1333: getstatic     #626
1336: invokevirtual #225
1339: invokestatic  #23
1342: aload         53
1344: invokestatic  #15
1347: aload         54
1349: invokestatic  #15
1352: aload         55
1354: invokestatic  #15
1357: aload         56
1359: invokestatic  #79
1362: new           #16
1365: dup
1366: invokespecial #17
1369: ldc           #18
1371: invokevirtual #19
1374: iload         57
1376: invokevirtual #20
1379: ldc           #21
1381: invokevirtual #19
1384: iconst_1
1385: invokevirtual #20
1388: ldc           #18
1390: invokevirtual #19
1393: invokevirtual #22
1396: iload         57
1398: iconst_1
1399: if_icmpne     1406
1402: iconst_1
1403: goto          1407
1406: iconst_0
1407: invokestatic  #23
1410: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test161
Start line: 8111
End line: 8194
Method source code: 
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining2 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        boolean boolean16 = attributeWithValueContaining2.matches((org.jsoup.nodes.Element) document4, (org.jsoup.nodes.Element) document8);
        org.jsoup.nodes.Element element18 = document8.toggleClass("#doctype");
        org.jsoup.nodes.Element element19 = document8.head();
        org.jsoup.select.Elements elements21 = document8.getElementsByAttributeStarting(":gt(100)");
        int int22 = document8.siblingIndex();
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner26 = new org.jsoup.safety.Cleaner(whitelist25);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining29 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document31 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = document35.outputSettings();
        boolean boolean43 = attributeWithValueContaining29.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document35);
        org.jsoup.nodes.Document document44 = cleaner26.clean(document35);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan46 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document49 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str50 = document49.ownText();
        org.jsoup.nodes.Node node53 = document49.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element68 = document57.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element70 = document57.createElement(" hi!");
        org.jsoup.select.Elements elements72 = document57.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean73 = indexLessThan46.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document74 = cleaner26.clean(document57);
        boolean boolean75 = document8.equals((java.lang.Object) document74);
        org.jsoup.nodes.Element element76 = document8.nextElementSibling();
        java.lang.String str77 = document8.title();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(elements21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(elements72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(document74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(element76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #627
20: aastore
21: invokevirtual #7
24: pop
25: new           #42
28: dup
29: ldc           #43
31: ldc           #32
33: invokespecial #44
36: astore_1
37: ldc           #12
39: invokestatic  #45
42: astore_2
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore_3
51: ldc           #12
53: aload_3
54: ldc           #12
56: invokestatic  #27
59: astore        4
61: aload_3
62: ldc           #12
64: invokevirtual #28
67: astore        5
69: aload_3
70: ldc           #25
72: invokevirtual #29
75: astore        6
77: aload_3
78: invokevirtual #30
81: astore        7
83: aload_1
84: aload_2
85: aload_3
86: invokevirtual #46
89: istore        8
91: aload_3
92: ldc           #187
94: invokevirtual #199
97: astore        9
99: aload_3
100: invokevirtual #200
103: astore        10
105: aload_3
106: ldc           #92
108: invokevirtual #140
111: astore        11
113: aload_3
114: invokevirtual #201
117: istore        12
119: invokestatic  #8
122: astore        13
124: aload         13
126: iconst_1
127: invokevirtual #9
130: astore        14
132: new           #40
135: dup
136: aload         14
138: invokespecial #41
141: astore        15
143: new           #42
146: dup
147: ldc           #43
149: ldc           #32
151: invokespecial #44
154: astore        16
156: ldc           #12
158: invokestatic  #45
161: astore        17
163: ldc           #25
165: ldc           #12
167: invokestatic  #26
170: astore        18
172: ldc           #12
174: aload         18
176: ldc           #12
178: invokestatic  #27
181: astore        19
183: aload         18
185: ldc           #12
187: invokevirtual #28
190: astore        20
192: aload         18
194: ldc           #25
196: invokevirtual #29
199: astore        21
201: aload         18
203: invokevirtual #30
206: astore        22
208: aload         16
210: aload         17
212: aload         18
214: invokevirtual #46
217: istore        23
219: aload         15
221: aload         18
223: invokevirtual #47
226: astore        24
228: new           #48
231: dup
232: iconst_m1
233: invokespecial #49
236: astore        25
238: ldc           #50
240: ldc           #51
242: invokestatic  #52
245: astore        26
247: aload         26
249: invokevirtual #53
252: astore        27
254: aload         26
256: ldc           #54
258: ldc           #55
260: invokevirtual #56
263: astore        28
265: ldc           #25
267: ldc           #12
269: invokestatic  #26
272: astore        29
274: ldc           #12
276: aload         29
278: ldc           #12
280: invokestatic  #27
283: astore        30
285: aload         29
287: ldc           #12
289: invokevirtual #28
292: astore        31
294: aload         29
296: ldc           #25
298: invokevirtual #29
301: astore        32
303: aload         29
305: invokevirtual #30
308: astore        33
310: aload         29
312: ldc           #12
314: invokevirtual #57
317: astore        34
319: aload         29
321: ldc           #58
323: invokevirtual #59
326: astore        35
328: aload         29
330: ldc           #60
332: invokevirtual #61
335: astore        36
337: aload         29
339: ldc           #38
341: invokevirtual #62
344: astore        37
346: aload         25
348: aload         26
350: aload         29
352: invokevirtual #63
355: istore        38
357: aload         15
359: aload         29
361: invokevirtual #47
364: astore        39
366: aload_3
367: aload         39
369: invokevirtual #202
372: istore        40
374: aload_3
375: invokevirtual #628
378: astore        41
380: aload_3
381: invokevirtual #448
384: astore        42
386: aload_2
387: invokestatic  #15
390: aload_3
391: invokestatic  #15
394: aload         4
396: invokestatic  #15
399: aload         5
401: invokestatic  #15
404: aload         6
406: invokestatic  #15
409: aload         7
411: invokestatic  #15
414: new           #16
417: dup
418: invokespecial #17
421: ldc           #18
423: invokevirtual #19
426: iload         8
428: invokevirtual #20
431: ldc           #21
433: invokevirtual #19
436: iconst_0
437: invokevirtual #20
440: ldc           #18
442: invokevirtual #19
445: invokevirtual #22
448: iload         8
450: ifne          457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #23
461: aload         9
463: invokestatic  #15
466: aload         10
468: invokestatic  #15
471: aload         11
473: invokestatic  #15
476: new           #16
479: dup
480: invokespecial #17
483: ldc           #18
485: invokevirtual #19
488: iload         12
490: invokevirtual #134
493: ldc           #21
495: invokevirtual #19
498: iconst_0
499: invokevirtual #134
502: ldc           #18
504: invokevirtual #19
507: invokevirtual #22
510: iload         12
512: ifne          519
515: iconst_1
516: goto          520
519: iconst_0
520: invokestatic  #23
523: aload         13
525: invokestatic  #15
528: aload         14
530: invokestatic  #15
533: aload         17
535: invokestatic  #15
538: aload         18
540: invokestatic  #15
543: aload         19
545: invokestatic  #15
548: aload         20
550: invokestatic  #15
553: aload         21
555: invokestatic  #15
558: aload         22
560: invokestatic  #15
563: new           #16
566: dup
567: invokespecial #17
570: ldc           #18
572: invokevirtual #19
575: iload         23
577: invokevirtual #20
580: ldc           #21
582: invokevirtual #19
585: iconst_0
586: invokevirtual #20
589: ldc           #18
591: invokevirtual #19
594: invokevirtual #22
597: iload         23
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #23
610: aload         24
612: invokestatic  #15
615: aload         26
617: invokestatic  #15
620: new           #16
623: dup
624: invokespecial #17
627: ldc           #18
629: invokevirtual #19
632: aload         27
634: invokevirtual #19
637: ldc           #67
639: invokevirtual #19
642: invokevirtual #22
645: aload         27
647: ldc           #25
649: invokestatic  #68
652: aload         28
654: invokestatic  #15
657: aload         29
659: invokestatic  #15
662: aload         30
664: invokestatic  #15
667: aload         31
669: invokestatic  #15
672: aload         32
674: invokestatic  #15
677: aload         33
679: invokestatic  #15
682: aload         34
684: invokestatic  #15
687: aload         35
689: invokestatic  #15
692: aload         36
694: invokestatic  #15
697: aload         37
699: invokestatic  #15
702: new           #16
705: dup
706: invokespecial #17
709: ldc           #18
711: invokevirtual #19
714: iload         38
716: invokevirtual #20
719: ldc           #21
721: invokevirtual #19
724: iconst_0
725: invokevirtual #20
728: ldc           #18
730: invokevirtual #19
733: invokevirtual #22
736: iload         38
738: ifne          745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #23
749: aload         39
751: invokestatic  #15
754: new           #16
757: dup
758: invokespecial #17
761: ldc           #18
763: invokevirtual #19
766: iload         40
768: invokevirtual #20
771: ldc           #21
773: invokevirtual #19
776: iconst_0
777: invokevirtual #20
780: ldc           #18
782: invokevirtual #19
785: invokevirtual #22
788: iload         40
790: ifne          797
793: iconst_1
794: goto          798
797: iconst_0
798: invokestatic  #23
801: aload         41
803: invokestatic  #79
806: new           #16
809: dup
810: invokespecial #17
813: ldc           #18
815: invokevirtual #19
818: aload         42
820: invokevirtual #19
823: ldc           #67
825: invokevirtual #19
828: invokevirtual #22
831: aload         42
833: ldc           #25
835: invokestatic  #68
838: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test162
Start line: 8197
End line: 8210
Method source code: 
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str3 = org.jsoup.Jsoup.clean("", whitelist2);
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.addEnforcedAttribute("#comment", "[:lt(10)!=[hi!=.<html>\n <head></head>\n <body></body>\n</html>]]", "[    =hi!]");
        java.lang.String str8 = org.jsoup.Jsoup.clean("", whitelist2);
        org.jsoup.safety.Whitelist whitelist12 = whitelist2.addEnforcedAttribute("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":gt(100)", "[!=hi!]");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(whitelist12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #629
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #25
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #114
39: ldc_w         #450
42: ldc_w         #319
45: invokevirtual #11
48: astore_3
49: ldc           #25
51: aload_1
52: invokestatic  #81
55: astore        4
57: aload_1
58: ldc           #151
60: ldc           #92
62: ldc           #241
64: invokevirtual #11
67: astore        5
69: aload_1
70: invokestatic  #15
73: new           #16
76: dup
77: invokespecial #17
80: ldc           #18
82: invokevirtual #19
85: aload_2
86: invokevirtual #19
89: ldc           #67
91: invokevirtual #19
94: invokevirtual #22
97: aload_2
98: ldc           #25
100: invokestatic  #68
103: aload_3
104: invokestatic  #15
107: new           #16
110: dup
111: invokespecial #17
114: ldc           #18
116: invokevirtual #19
119: aload         4
121: invokevirtual #19
124: ldc           #67
126: invokevirtual #19
129: invokevirtual #22
132: aload         4
134: ldc           #25
136: invokestatic  #68
139: aload         5
141: invokestatic  #15
144: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test163
Start line: 8213
End line: 8266
Method source code: 
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str5 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist4);
        org.jsoup.safety.Whitelist whitelist7 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist9 = whitelist7.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist11 = whitelist9.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str16 = org.jsoup.Jsoup.clean(":lt(32)", whitelist15);
        org.jsoup.safety.Whitelist whitelist20 = whitelist15.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray27 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist28 = whitelist15.addTags(strArray27);
        org.jsoup.safety.Whitelist whitelist29 = whitelist11.addProtocols(":matchesOwn(null", "hi!", strArray27);
        java.lang.String[] strArray38 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean39 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray38);
        org.jsoup.safety.Whitelist whitelist40 = whitelist29.addProtocols("\n<!--hi!-->", "#document", strArray38);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray38);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray38);
        org.jsoup.safety.Whitelist whitelist43 = whitelist4.addAttributes("*", strArray38);
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList49 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document47, "hi!");
        org.jsoup.nodes.Element element51 = document47.tagName("hi!");
        org.jsoup.nodes.Element element53 = document47.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = document47.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings56 = outputSettings54.prettyPrint(false);
        boolean boolean57 = outputSettings56.prettyPrint();
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = outputSettings56.prettyPrint(false);
        java.lang.String str60 = org.jsoup.Jsoup.clean("", ":matchesOwn(null", whitelist43, outputSettings59);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[hi!$=   ]" + "'", str5, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":lt(32)" + "'", str16, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(outputSettings54);
        org.junit.Assert.assertNotNull(outputSettings56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(outputSettings59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #630
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: invokestatic  #8
41: astore_3
42: aload_3
43: iconst_1
44: invokevirtual #9
47: astore        4
49: aload         4
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #118
60: astore        6
62: ldc           #43
64: aload         6
66: invokestatic  #81
69: astore        7
71: aload         6
73: ldc           #43
75: ldc           #12
77: ldc           #32
79: invokevirtual #11
82: astore        8
84: bipush        6
86: anewarray     #119
89: dup
90: iconst_0
91: ldc           #109
93: aastore
94: dup
95: iconst_1
96: ldc           #10
98: aastore
99: dup
100: iconst_2
101: ldc           #13
103: aastore
104: dup
105: iconst_3
106: ldc           #50
108: aastore
109: dup
110: iconst_4
111: ldc           #12
113: aastore
114: dup
115: iconst_5
116: ldc           #120
118: aastore
119: astore        9
121: aload         6
123: aload         9
125: invokevirtual #121
128: astore        10
130: aload         5
132: ldc           #38
134: ldc           #12
136: aload         9
138: invokevirtual #122
141: astore        11
143: iconst_5
144: anewarray     #119
147: dup
148: iconst_0
149: ldc           #13
151: aastore
152: dup
153: iconst_1
154: ldc           #32
156: aastore
157: dup
158: iconst_2
159: ldc           #10
161: aastore
162: dup
163: iconst_3
164: ldc           #43
166: aastore
167: dup
168: iconst_4
169: ldc           #58
171: aastore
172: astore        12
174: ldc           #10
176: aload         12
178: invokestatic  #123
181: istore        13
183: aload         11
185: ldc           #84
187: ldc           #13
189: aload         12
191: invokevirtual #122
194: astore        14
196: aload         12
198: checkcast     #124
201: invokestatic  #125
204: aload         12
206: checkcast     #124
209: invokestatic  #125
212: aload_1
213: ldc           #126
215: aload         12
217: invokevirtual #127
220: astore        15
222: ldc           #25
224: ldc           #12
226: invokestatic  #26
229: astore        16
231: ldc           #12
233: aload         16
235: ldc           #12
237: invokestatic  #27
240: astore        17
242: aload         16
244: ldc           #12
246: invokevirtual #28
249: astore        18
251: aload         16
253: ldc           #25
255: invokevirtual #29
258: astore        19
260: aload         16
262: invokevirtual #30
265: astore        20
267: aload         20
269: iconst_0
270: invokevirtual #31
273: astore        21
275: aload         21
277: invokevirtual #461
280: istore        22
282: aload         21
284: iconst_0
285: invokevirtual #31
288: astore        23
290: ldc           #25
292: ldc           #38
294: aload         15
296: aload         23
298: invokestatic  #33
301: astore        24
303: aload_1
304: invokestatic  #15
307: new           #16
310: dup
311: invokespecial #17
314: ldc           #18
316: invokevirtual #19
319: aload_2
320: invokevirtual #19
323: ldc           #111
325: invokevirtual #19
328: invokevirtual #22
331: aload_2
332: ldc           #65
334: invokestatic  #68
337: aload_3
338: invokestatic  #15
341: aload         4
343: invokestatic  #15
346: aload         5
348: invokestatic  #15
351: aload         6
353: invokestatic  #15
356: new           #16
359: dup
360: invokespecial #17
363: ldc           #18
365: invokevirtual #19
368: aload         7
370: invokevirtual #19
373: ldc           #128
375: invokevirtual #19
378: invokevirtual #22
381: aload         7
383: ldc           #43
385: invokestatic  #68
388: aload         8
390: invokestatic  #15
393: aload         9
395: invokestatic  #15
398: aload         10
400: invokestatic  #15
403: aload         11
405: invokestatic  #15
408: aload         12
410: invokestatic  #15
413: new           #16
416: dup
417: invokespecial #17
420: ldc           #18
422: invokevirtual #19
425: iload         13
427: invokevirtual #20
430: ldc           #21
432: invokevirtual #19
435: iconst_1
436: invokevirtual #20
439: ldc           #18
441: invokevirtual #19
444: invokevirtual #22
447: iload         13
449: iconst_1
450: if_icmpne     457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #23
461: aload         14
463: invokestatic  #15
466: aload         15
468: invokestatic  #15
471: aload         16
473: invokestatic  #15
476: aload         17
478: invokestatic  #15
481: aload         18
483: invokestatic  #15
486: aload         19
488: invokestatic  #15
491: aload         20
493: invokestatic  #15
496: aload         21
498: invokestatic  #15
501: new           #16
504: dup
505: invokespecial #17
508: ldc           #18
510: invokevirtual #19
513: iload         22
515: invokevirtual #20
518: ldc           #21
520: invokevirtual #19
523: iconst_0
524: invokevirtual #20
527: ldc           #18
529: invokevirtual #19
532: invokevirtual #22
535: iload         22
537: ifne          544
540: iconst_1
541: goto          545
544: iconst_0
545: invokestatic  #23
548: aload         23
550: invokestatic  #15
553: new           #16
556: dup
557: invokespecial #17
560: ldc           #18
562: invokevirtual #19
565: aload         24
567: invokevirtual #19
570: ldc           #67
572: invokevirtual #19
575: invokevirtual #22
578: aload         24
580: ldc           #25
582: invokestatic  #68
585: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test164
Start line: 8269
End line: 8339
Method source code: 
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("#text");
        java.lang.String str7 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist4);
        java.lang.String str8 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist4);
        org.jsoup.select.Evaluator.Class class11 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList17 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document15, "hi!");
        org.jsoup.nodes.Element element19 = document15.tagName("hi!");
        org.jsoup.nodes.Element element21 = document15.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = document15.outputSettings();
        org.jsoup.select.Elements elements24 = document15.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element26 = document15.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes27 = document15.attributes();
        org.jsoup.nodes.Element element29 = document15.prepend("[^hi!]");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.tagName("hi!");
        org.jsoup.nodes.Element element39 = document33.append("");
        org.jsoup.nodes.Element element42 = document33.attr("#document", "#document");
        org.jsoup.nodes.Element element43 = document33.body();
        boolean boolean44 = class11.matches((org.jsoup.nodes.Element) document15, (org.jsoup.nodes.Element) document33);
        org.jsoup.nodes.Attribute attribute47 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean48 = whitelist4.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document15, attribute47);
        org.jsoup.safety.Whitelist whitelist51 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist53 = whitelist51.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist55 = whitelist53.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist59 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str60 = org.jsoup.Jsoup.clean(":lt(32)", whitelist59);
        org.jsoup.safety.Whitelist whitelist64 = whitelist59.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray71 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist72 = whitelist59.addTags(strArray71);
        org.jsoup.safety.Whitelist whitelist73 = whitelist55.addProtocols(":matchesOwn(null", "hi!", strArray71);
        org.jsoup.safety.Whitelist whitelist74 = whitelist4.addProtocols("[^\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->]", "<hi!>\n [^hi!]\n</hi!>", strArray71);
        org.jsoup.safety.Whitelist whitelist76 = whitelist4.preserveRelativeLinks(true);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[    ^=hi!]" + "'", str8, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertNotNull(elements24);
        org.junit.Assert.assertNull(element26);
        org.junit.Assert.assertNotNull(attributes27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(attribute47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ":lt(32)" + "'", str60, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertNotNull(whitelist74);
        org.junit.Assert.assertNotNull(whitelist76);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #631
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: new           #160
58: dup
59: ldc           #10
61: invokespecial #161
64: astore        5
66: ldc           #25
68: ldc           #12
70: invokestatic  #26
73: astore        6
75: ldc           #12
77: aload         6
79: ldc           #12
81: invokestatic  #27
84: astore        7
86: aload         6
88: ldc           #12
90: invokevirtual #28
93: astore        8
95: aload         6
97: ldc           #25
99: invokevirtual #29
102: astore        9
104: aload         6
106: invokevirtual #30
109: astore        10
111: aload         6
113: iconst_m1
114: invokevirtual #162
117: astore        11
119: aload         6
121: ldc           #10
123: invokevirtual #163
126: astore        12
128: aload         6
130: invokevirtual #164
133: astore        13
135: aload         6
137: ldc           #50
139: invokevirtual #165
142: astore        14
144: ldc           #25
146: ldc           #12
148: invokestatic  #26
151: astore        15
153: ldc           #12
155: aload         15
157: ldc           #12
159: invokestatic  #27
162: astore        16
164: aload         15
166: ldc           #12
168: invokevirtual #28
171: astore        17
173: aload         15
175: ldc           #25
177: invokevirtual #29
180: astore        18
182: aload         15
184: ldc           #13
186: ldc           #13
188: invokevirtual #56
191: astore        19
193: aload         15
195: invokevirtual #166
198: astore        20
200: aload         5
202: aload         6
204: aload         15
206: invokevirtual #167
209: istore        21
211: ldc           #114
213: ldc           #25
215: invokestatic  #168
218: astore        22
220: aload_1
221: ldc           #110
223: aload         6
225: aload         22
227: invokevirtual #169
230: istore        23
232: invokestatic  #8
235: astore        24
237: aload         24
239: iconst_1
240: invokevirtual #9
243: astore        25
245: aload         25
247: iconst_0
248: invokevirtual #9
251: astore        26
253: invokestatic  #118
256: astore        27
258: ldc           #43
260: aload         27
262: invokestatic  #81
265: astore        28
267: aload         27
269: ldc           #43
271: ldc           #12
273: ldc           #32
275: invokevirtual #11
278: astore        29
280: bipush        6
282: anewarray     #119
285: dup
286: iconst_0
287: ldc           #109
289: aastore
290: dup
291: iconst_1
292: ldc           #10
294: aastore
295: dup
296: iconst_2
297: ldc           #13
299: aastore
300: dup
301: iconst_3
302: ldc           #50
304: aastore
305: dup
306: iconst_4
307: ldc           #12
309: aastore
310: dup
311: iconst_5
312: ldc           #120
314: aastore
315: astore        30
317: aload         27
319: aload         30
321: invokevirtual #121
324: astore        31
326: aload         26
328: ldc           #38
330: ldc           #12
332: aload         30
334: invokevirtual #122
337: astore        32
339: aload_1
340: ldc           #234
342: ldc           #54
344: aload         30
346: invokevirtual #122
349: astore        33
351: aload_1
352: iconst_1
353: invokevirtual #9
356: astore        34
358: aload_1
359: invokestatic  #15
362: aload_2
363: invokestatic  #15
366: new           #16
369: dup
370: invokespecial #17
373: ldc           #18
375: invokevirtual #19
378: aload_3
379: invokevirtual #19
382: ldc           #67
384: invokevirtual #19
387: invokevirtual #22
390: aload_3
391: ldc           #25
393: invokestatic  #68
396: new           #16
399: dup
400: invokespecial #17
403: ldc           #18
405: invokevirtual #19
408: aload         4
410: invokevirtual #19
413: ldc           #172
415: invokevirtual #19
418: invokevirtual #22
421: aload         4
423: ldc           #173
425: invokestatic  #68
428: aload         6
430: invokestatic  #15
433: aload         7
435: invokestatic  #15
438: aload         8
440: invokestatic  #15
443: aload         9
445: invokestatic  #15
448: aload         10
450: invokestatic  #15
453: aload         11
455: invokestatic  #15
458: aload         12
460: invokestatic  #79
463: aload         13
465: invokestatic  #15
468: aload         14
470: invokestatic  #15
473: aload         15
475: invokestatic  #15
478: aload         16
480: invokestatic  #15
483: aload         17
485: invokestatic  #15
488: aload         18
490: invokestatic  #15
493: aload         19
495: invokestatic  #15
498: aload         20
500: invokestatic  #15
503: new           #16
506: dup
507: invokespecial #17
510: ldc           #18
512: invokevirtual #19
515: iload         21
517: invokevirtual #20
520: ldc           #21
522: invokevirtual #19
525: iconst_0
526: invokevirtual #20
529: ldc           #18
531: invokevirtual #19
534: invokevirtual #22
537: iload         21
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #23
550: aload         22
552: invokestatic  #15
555: new           #16
558: dup
559: invokespecial #17
562: ldc           #18
564: invokevirtual #19
567: iload         23
569: invokevirtual #20
572: ldc           #21
574: invokevirtual #19
577: iconst_0
578: invokevirtual #20
581: ldc           #18
583: invokevirtual #19
586: invokevirtual #22
589: iload         23
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #23
602: aload         24
604: invokestatic  #15
607: aload         25
609: invokestatic  #15
612: aload         26
614: invokestatic  #15
617: aload         27
619: invokestatic  #15
622: new           #16
625: dup
626: invokespecial #17
629: ldc           #18
631: invokevirtual #19
634: aload         28
636: invokevirtual #19
639: ldc           #128
641: invokevirtual #19
644: invokevirtual #22
647: aload         28
649: ldc           #43
651: invokestatic  #68
654: aload         29
656: invokestatic  #15
659: aload         30
661: invokestatic  #15
664: aload         31
666: invokestatic  #15
669: aload         32
671: invokestatic  #15
674: aload         33
676: invokestatic  #15
679: aload         34
681: invokestatic  #15
684: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test165
Start line: 8342
End line: 8407
Method source code: 
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)", whitelist1);
        org.jsoup.safety.Whitelist whitelist6 = whitelist1.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str10 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist9);
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist14 = whitelist12.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist16 = whitelist14.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist20 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str21 = org.jsoup.Jsoup.clean(":lt(32)", whitelist20);
        org.jsoup.safety.Whitelist whitelist25 = whitelist20.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray32 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist33 = whitelist20.addTags(strArray32);
        org.jsoup.safety.Whitelist whitelist34 = whitelist16.addProtocols(":matchesOwn(null", "hi!", strArray32);
        org.jsoup.safety.Whitelist whitelist35 = whitelist9.addAttributes("[^hi!]", strArray32);
        org.jsoup.safety.Whitelist whitelist39 = whitelist9.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.safety.Whitelist whitelist42 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist44 = whitelist42.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist46 = whitelist44.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist50 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str51 = org.jsoup.Jsoup.clean(":lt(32)", whitelist50);
        org.jsoup.safety.Whitelist whitelist55 = whitelist50.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray62 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist63 = whitelist50.addTags(strArray62);
        org.jsoup.safety.Whitelist whitelist64 = whitelist46.addProtocols(":matchesOwn(null", "hi!", strArray62);
        java.lang.String[] strArray73 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean74 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray73);
        org.jsoup.safety.Whitelist whitelist75 = whitelist64.addProtocols("\n<!--hi!-->", "#document", strArray73);
        org.jsoup.safety.Whitelist whitelist76 = whitelist9.addProtocols("<html>\n <head></head>\n <body>\n </body>\n</html>", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]", strArray73);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray73, "<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">");
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray73);
        org.jsoup.safety.Whitelist whitelist80 = whitelist6.addTags(strArray73);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":lt(32)" + "'", str2, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!$=   ]" + "'", str10, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":lt(32)" + "'", str21, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ":lt(32)" + "'", str51, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(whitelist75);
        org.junit.Assert.assertNotNull(whitelist76);
        org.junit.Assert.assertNotNull(whitelist80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #632
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #43
39: ldc           #12
41: ldc           #32
43: invokevirtual #11
46: astore_3
47: invokestatic  #8
50: astore        4
52: ldc           #109
54: ldc           #110
56: aload         4
58: invokestatic  #94
61: astore        5
63: invokestatic  #8
66: astore        6
68: aload         6
70: iconst_1
71: invokevirtual #9
74: astore        7
76: aload         7
78: iconst_0
79: invokevirtual #9
82: astore        8
84: invokestatic  #118
87: astore        9
89: ldc           #43
91: aload         9
93: invokestatic  #81
96: astore        10
98: aload         9
100: ldc           #43
102: ldc           #12
104: ldc           #32
106: invokevirtual #11
109: astore        11
111: bipush        6
113: anewarray     #119
116: dup
117: iconst_0
118: ldc           #109
120: aastore
121: dup
122: iconst_1
123: ldc           #10
125: aastore
126: dup
127: iconst_2
128: ldc           #13
130: aastore
131: dup
132: iconst_3
133: ldc           #50
135: aastore
136: dup
137: iconst_4
138: ldc           #12
140: aastore
141: dup
142: iconst_5
143: ldc           #120
145: aastore
146: astore        12
148: aload         9
150: aload         12
152: invokevirtual #121
155: astore        13
157: aload         8
159: ldc           #38
161: ldc           #12
163: aload         12
165: invokevirtual #122
168: astore        14
170: aload         4
172: ldc           #50
174: aload         12
176: invokevirtual #127
179: astore        15
181: aload         4
183: ldc           #126
185: ldc           #109
187: ldc           #120
189: invokevirtual #11
192: astore        16
194: invokestatic  #8
197: astore        17
199: aload         17
201: iconst_1
202: invokevirtual #9
205: astore        18
207: aload         18
209: iconst_0
210: invokevirtual #9
213: astore        19
215: invokestatic  #118
218: astore        20
220: ldc           #43
222: aload         20
224: invokestatic  #81
227: astore        21
229: aload         20
231: ldc           #43
233: ldc           #12
235: ldc           #32
237: invokevirtual #11
240: astore        22
242: bipush        6
244: anewarray     #119
247: dup
248: iconst_0
249: ldc           #109
251: aastore
252: dup
253: iconst_1
254: ldc           #10
256: aastore
257: dup
258: iconst_2
259: ldc           #13
261: aastore
262: dup
263: iconst_3
264: ldc           #50
266: aastore
267: dup
268: iconst_4
269: ldc           #12
271: aastore
272: dup
273: iconst_5
274: ldc           #120
276: aastore
277: astore        23
279: aload         20
281: aload         23
283: invokevirtual #121
286: astore        24
288: aload         19
290: ldc           #38
292: ldc           #12
294: aload         23
296: invokevirtual #122
299: astore        25
301: iconst_5
302: anewarray     #119
305: dup
306: iconst_0
307: ldc           #13
309: aastore
310: dup
311: iconst_1
312: ldc           #32
314: aastore
315: dup
316: iconst_2
317: ldc           #10
319: aastore
320: dup
321: iconst_3
322: ldc           #43
324: aastore
325: dup
326: iconst_4
327: ldc           #58
329: aastore
330: astore        26
332: ldc           #10
334: aload         26
336: invokestatic  #123
339: istore        27
341: aload         25
343: ldc           #84
345: ldc           #13
347: aload         26
349: invokevirtual #122
352: astore        28
354: aload         4
356: ldc           #157
358: ldc_w         #273
361: aload         26
363: invokevirtual #122
366: astore        29
368: aload         26
370: checkcast     #124
373: ldc_w         #274
376: invokestatic  #245
379: aload         26
381: checkcast     #124
384: invokestatic  #125
387: aload_3
388: aload         26
390: invokevirtual #121
393: astore        30
395: aload_1
396: invokestatic  #15
399: new           #16
402: dup
403: invokespecial #17
406: ldc           #18
408: invokevirtual #19
411: aload_2
412: invokevirtual #19
415: ldc           #128
417: invokevirtual #19
420: invokevirtual #22
423: aload_2
424: ldc           #43
426: invokestatic  #68
429: aload_3
430: invokestatic  #15
433: aload         4
435: invokestatic  #15
438: new           #16
441: dup
442: invokespecial #17
445: ldc           #18
447: invokevirtual #19
450: aload         5
452: invokevirtual #19
455: ldc           #111
457: invokevirtual #19
460: invokevirtual #22
463: aload         5
465: ldc           #65
467: invokestatic  #68
470: aload         6
472: invokestatic  #15
475: aload         7
477: invokestatic  #15
480: aload         8
482: invokestatic  #15
485: aload         9
487: invokestatic  #15
490: new           #16
493: dup
494: invokespecial #17
497: ldc           #18
499: invokevirtual #19
502: aload         10
504: invokevirtual #19
507: ldc           #128
509: invokevirtual #19
512: invokevirtual #22
515: aload         10
517: ldc           #43
519: invokestatic  #68
522: aload         11
524: invokestatic  #15
527: aload         12
529: invokestatic  #15
532: aload         13
534: invokestatic  #15
537: aload         14
539: invokestatic  #15
542: aload         15
544: invokestatic  #15
547: aload         16
549: invokestatic  #15
552: aload         17
554: invokestatic  #15
557: aload         18
559: invokestatic  #15
562: aload         19
564: invokestatic  #15
567: aload         20
569: invokestatic  #15
572: new           #16
575: dup
576: invokespecial #17
579: ldc           #18
581: invokevirtual #19
584: aload         21
586: invokevirtual #19
589: ldc           #128
591: invokevirtual #19
594: invokevirtual #22
597: aload         21
599: ldc           #43
601: invokestatic  #68
604: aload         22
606: invokestatic  #15
609: aload         23
611: invokestatic  #15
614: aload         24
616: invokestatic  #15
619: aload         25
621: invokestatic  #15
624: aload         26
626: invokestatic  #15
629: new           #16
632: dup
633: invokespecial #17
636: ldc           #18
638: invokevirtual #19
641: iload         27
643: invokevirtual #20
646: ldc           #21
648: invokevirtual #19
651: iconst_1
652: invokevirtual #20
655: ldc           #18
657: invokevirtual #19
660: invokevirtual #22
663: iload         27
665: iconst_1
666: if_icmpne     673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #23
677: aload         28
679: invokestatic  #15
682: aload         29
684: invokestatic  #15
687: aload         30
689: invokestatic  #15
692: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test166
Start line: 8410
End line: 8439
Method source code: 
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        org.jsoup.nodes.Element element9 = document3.text("[:lt(32)]");
        org.jsoup.nodes.Element element11 = element9.removeClass("[^hi!]");
        boolean boolean12 = element9.hasText();
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str16 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist15);
        boolean boolean18 = whitelist15.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist20 = whitelist15.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes22 = whitelist20.getEnforcedAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Attributes attributes24 = whitelist20.getEnforcedAttributes("\n<!--hi!-->");
        boolean boolean25 = element9.equals((java.lang.Object) attributes24);
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!$=   ]" + "'", str16, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(attributes22);
        org.junit.Assert.assertNotNull(attributes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #633
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #58
52: invokevirtual #64
55: astore        4
57: aload         4
59: ldc           #50
61: invokevirtual #390
64: astore        5
66: aload         4
68: invokevirtual #393
71: istore        6
73: invokestatic  #8
76: astore        7
78: ldc           #109
80: ldc           #110
82: aload         7
84: invokestatic  #94
87: astore        8
89: aload         7
91: ldc           #25
93: invokevirtual #83
96: istore        9
98: aload         7
100: iconst_0
101: invokevirtual #9
104: astore        10
106: aload         10
108: ldc           #109
110: invokevirtual #150
113: astore        11
115: aload         10
117: ldc           #84
119: invokevirtual #150
122: astore        12
124: aload         4
126: aload         12
128: invokevirtual #634
131: istore        13
133: aload_1
134: invokestatic  #15
137: aload_2
138: invokestatic  #15
141: aload_3
142: invokestatic  #15
145: aload         4
147: invokestatic  #15
150: aload         5
152: invokestatic  #15
155: new           #16
158: dup
159: invokespecial #17
162: ldc           #18
164: invokevirtual #19
167: iload         6
169: invokevirtual #20
172: ldc           #21
174: invokevirtual #19
177: iconst_1
178: invokevirtual #20
181: ldc           #18
183: invokevirtual #19
186: invokevirtual #22
189: iload         6
191: iconst_1
192: if_icmpne     199
195: iconst_1
196: goto          200
199: iconst_0
200: invokestatic  #23
203: aload         7
205: invokestatic  #15
208: new           #16
211: dup
212: invokespecial #17
215: ldc           #18
217: invokevirtual #19
220: aload         8
222: invokevirtual #19
225: ldc           #111
227: invokevirtual #19
230: invokevirtual #22
233: aload         8
235: ldc           #65
237: invokestatic  #68
240: new           #16
243: dup
244: invokespecial #17
247: ldc           #18
249: invokevirtual #19
252: iload         9
254: invokevirtual #20
257: ldc           #21
259: invokevirtual #19
262: iconst_0
263: invokevirtual #20
266: ldc           #18
268: invokevirtual #19
271: invokevirtual #22
274: iload         9
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #23
287: aload         10
289: invokestatic  #15
292: aload         11
294: invokestatic  #15
297: aload         12
299: invokestatic  #15
302: new           #16
305: dup
306: invokespecial #17
309: ldc           #18
311: invokevirtual #19
314: iload         13
316: invokevirtual #20
319: ldc           #21
321: invokevirtual #19
324: iconst_0
325: invokevirtual #20
328: ldc           #18
330: invokevirtual #19
333: invokevirtual #22
336: iload         13
338: ifne          345
341: iconst_1
342: goto          346
345: iconst_0
346: invokestatic  #23
349: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test167
Start line: 8442
End line: 8459
Method source code: 
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes9 = whitelist7.getEnforcedAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String str10 = attributes9.toString();
        java.lang.String str12 = attributes9.get("<html>\n <head></head>\n <body>\n </body>\n</html>\n<hi! class=\" #document\">\n <html>\n  <head></head>\n  <body></body>\n </html>\n</hi!>");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(attributes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #635
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: aload         4
54: ldc           #109
56: invokevirtual #150
59: astore        5
61: aload         5
63: invokevirtual #636
66: astore        6
68: aload         5
70: ldc_w         #637
73: invokevirtual #490
76: astore        7
78: aload_1
79: invokestatic  #15
82: new           #16
85: dup
86: invokespecial #17
89: ldc           #18
91: invokevirtual #19
94: aload_2
95: invokevirtual #19
98: ldc           #111
100: invokevirtual #19
103: invokevirtual #22
106: aload_2
107: ldc           #65
109: invokestatic  #68
112: new           #16
115: dup
116: invokespecial #17
119: ldc           #18
121: invokevirtual #19
124: iload_3
125: invokevirtual #20
128: ldc           #21
130: invokevirtual #19
133: iconst_0
134: invokevirtual #20
137: ldc           #18
139: invokevirtual #19
142: invokevirtual #22
145: iload_3
146: ifne          153
149: iconst_1
150: goto          154
153: iconst_0
154: invokestatic  #23
157: aload         4
159: invokestatic  #15
162: aload         5
164: invokestatic  #15
167: new           #16
170: dup
171: invokespecial #17
174: ldc           #18
176: invokevirtual #19
179: aload         6
181: invokevirtual #19
184: ldc           #67
186: invokevirtual #19
189: invokevirtual #22
192: aload         6
194: ldc           #25
196: invokestatic  #68
199: new           #16
202: dup
203: invokespecial #17
206: ldc           #18
208: invokevirtual #19
211: aload         7
213: invokevirtual #19
216: ldc           #67
218: invokevirtual #19
221: invokevirtual #22
224: aload         7
226: ldc           #25
228: invokestatic  #68
231: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test168
Start line: 8462
End line: 8542
Method source code: 
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("");
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist11 = whitelist9.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist15 = whitelist9.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist19 = whitelist9.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str20 = org.jsoup.Jsoup.clean("hi!", whitelist9);
        org.jsoup.safety.Whitelist whitelist22 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist24 = whitelist22.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str31 = org.jsoup.Jsoup.clean(":lt(32)", whitelist30);
        org.jsoup.safety.Whitelist whitelist35 = whitelist30.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray42 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist43 = whitelist30.addTags(strArray42);
        org.jsoup.safety.Whitelist whitelist44 = whitelist26.addProtocols(":matchesOwn(null", "hi!", strArray42);
        java.lang.String[] strArray53 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean54 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray53);
        org.jsoup.safety.Whitelist whitelist55 = whitelist44.addProtocols("\n<!--hi!-->", "#document", strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.jsoup.safety.Whitelist whitelist58 = whitelist9.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray53);
        org.jsoup.safety.Whitelist whitelist59 = whitelist4.addAttributes("*", strArray53);
        boolean boolean61 = whitelist4.isSafeTag("[.]");
        org.jsoup.safety.Whitelist whitelist64 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes66 = whitelist64.getEnforcedAttributes("#text");
        java.lang.String str67 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist64);
        org.jsoup.safety.Whitelist whitelist71 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist73 = whitelist71.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist75 = whitelist73.preserveRelativeLinks(false);
        java.lang.String[] strArray84 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean85 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray84);
        org.jsoup.safety.Whitelist whitelist86 = whitelist75.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray84);
        boolean boolean87 = org.jsoup.helper.StringUtil.in("#text", strArray84);
        boolean boolean88 = org.jsoup.helper.StringUtil.in("\n<!---->", strArray84);
        org.jsoup.safety.Whitelist whitelist89 = whitelist64.addAttributes("[:lt(32)]", strArray84);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray84);
        org.jsoup.safety.Whitelist whitelist91 = whitelist4.addTags(strArray84);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":lt(32)" + "'", str31, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(attributes66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(whitelist71);
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertNotNull(whitelist75);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(whitelist86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(whitelist89);
        org.junit.Assert.assertNotNull(whitelist91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #638
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: aload_3
42: ldc           #25
44: invokevirtual #150
47: astore        4
49: invokestatic  #8
52: astore        5
54: aload         5
56: iconst_1
57: invokevirtual #9
60: astore        6
62: aload         5
64: ldc           #10
66: ldc           #10
68: ldc           #10
70: invokevirtual #11
73: astore        7
75: aload         5
77: ldc           #12
79: ldc           #13
81: ldc           #12
83: invokevirtual #11
86: astore        8
88: ldc           #12
90: aload         5
92: invokestatic  #81
95: astore        9
97: invokestatic  #8
100: astore        10
102: aload         10
104: iconst_1
105: invokevirtual #9
108: astore        11
110: aload         11
112: iconst_0
113: invokevirtual #9
116: astore        12
118: invokestatic  #118
121: astore        13
123: ldc           #43
125: aload         13
127: invokestatic  #81
130: astore        14
132: aload         13
134: ldc           #43
136: ldc           #12
138: ldc           #32
140: invokevirtual #11
143: astore        15
145: bipush        6
147: anewarray     #119
150: dup
151: iconst_0
152: ldc           #109
154: aastore
155: dup
156: iconst_1
157: ldc           #10
159: aastore
160: dup
161: iconst_2
162: ldc           #13
164: aastore
165: dup
166: iconst_3
167: ldc           #50
169: aastore
170: dup
171: iconst_4
172: ldc           #12
174: aastore
175: dup
176: iconst_5
177: ldc           #120
179: aastore
180: astore        16
182: aload         13
184: aload         16
186: invokevirtual #121
189: astore        17
191: aload         12
193: ldc           #38
195: ldc           #12
197: aload         16
199: invokevirtual #122
202: astore        18
204: iconst_5
205: anewarray     #119
208: dup
209: iconst_0
210: ldc           #13
212: aastore
213: dup
214: iconst_1
215: ldc           #32
217: aastore
218: dup
219: iconst_2
220: ldc           #10
222: aastore
223: dup
224: iconst_3
225: ldc           #43
227: aastore
228: dup
229: iconst_4
230: ldc           #58
232: aastore
233: astore        19
235: ldc           #10
237: aload         19
239: invokestatic  #123
242: istore        20
244: aload         18
246: ldc           #84
248: ldc           #13
250: aload         19
252: invokevirtual #122
255: astore        21
257: aload         19
259: checkcast     #124
262: invokestatic  #125
265: aload         19
267: checkcast     #124
270: invokestatic  #125
273: aload         5
275: ldc           #249
277: aload         19
279: invokevirtual #127
282: astore        22
284: aload_3
285: ldc           #126
287: aload         19
289: invokevirtual #127
292: astore        23
294: aload_3
295: ldc_w         #421
298: invokevirtual #83
301: istore        24
303: invokestatic  #118
306: astore        25
308: aload         25
310: ldc           #51
312: invokevirtual #150
315: astore        26
317: ldc           #25
319: ldc           #157
321: aload         25
323: invokestatic  #94
326: astore        27
328: invokestatic  #8
331: astore        28
333: aload         28
335: iconst_1
336: invokevirtual #9
339: astore        29
341: aload         29
343: iconst_0
344: invokevirtual #9
347: astore        30
349: iconst_5
350: anewarray     #119
353: dup
354: iconst_0
355: ldc           #13
357: aastore
358: dup
359: iconst_1
360: ldc           #32
362: aastore
363: dup
364: iconst_2
365: ldc           #10
367: aastore
368: dup
369: iconst_3
370: ldc           #43
372: aastore
373: dup
374: iconst_4
375: ldc           #58
377: aastore
378: astore        31
380: ldc           #10
382: aload         31
384: invokestatic  #123
387: istore        32
389: aload         30
391: ldc           #120
393: ldc           #55
395: aload         31
397: invokevirtual #122
400: astore        33
402: ldc           #51
404: aload         31
406: invokestatic  #123
409: istore        34
411: ldc           #120
413: aload         31
415: invokestatic  #123
418: istore        35
420: aload         25
422: ldc           #58
424: aload         31
426: invokevirtual #127
429: astore        36
431: aload         31
433: checkcast     #124
436: invokestatic  #125
439: aload_3
440: aload         31
442: invokevirtual #121
445: astore        37
447: aload_1
448: invokestatic  #15
451: aload_2
452: invokestatic  #15
455: aload_3
456: invokestatic  #15
459: aload         4
461: invokestatic  #15
464: aload         5
466: invokestatic  #15
469: aload         6
471: invokestatic  #15
474: aload         7
476: invokestatic  #15
479: aload         8
481: invokestatic  #15
484: new           #16
487: dup
488: invokespecial #17
491: ldc           #18
493: invokevirtual #19
496: aload         9
498: invokevirtual #19
501: ldc           #211
503: invokevirtual #19
506: invokevirtual #22
509: aload         9
511: ldc           #12
513: invokestatic  #68
516: aload         10
518: invokestatic  #15
521: aload         11
523: invokestatic  #15
526: aload         12
528: invokestatic  #15
531: aload         13
533: invokestatic  #15
536: new           #16
539: dup
540: invokespecial #17
543: ldc           #18
545: invokevirtual #19
548: aload         14
550: invokevirtual #19
553: ldc           #128
555: invokevirtual #19
558: invokevirtual #22
561: aload         14
563: ldc           #43
565: invokestatic  #68
568: aload         15
570: invokestatic  #15
573: aload         16
575: invokestatic  #15
578: aload         17
580: invokestatic  #15
583: aload         18
585: invokestatic  #15
588: aload         19
590: invokestatic  #15
593: new           #16
596: dup
597: invokespecial #17
600: ldc           #18
602: invokevirtual #19
605: iload         20
607: invokevirtual #20
610: ldc           #21
612: invokevirtual #19
615: iconst_1
616: invokevirtual #20
619: ldc           #18
621: invokevirtual #19
624: invokevirtual #22
627: iload         20
629: iconst_1
630: if_icmpne     637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #23
641: aload         21
643: invokestatic  #15
646: aload         22
648: invokestatic  #15
651: aload         23
653: invokestatic  #15
656: new           #16
659: dup
660: invokespecial #17
663: ldc           #18
665: invokevirtual #19
668: iload         24
670: invokevirtual #20
673: ldc           #21
675: invokevirtual #19
678: iconst_0
679: invokevirtual #20
682: ldc           #18
684: invokevirtual #19
687: invokevirtual #22
690: iload         24
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #23
703: aload         25
705: invokestatic  #15
708: aload         26
710: invokestatic  #15
713: new           #16
716: dup
717: invokespecial #17
720: ldc           #18
722: invokevirtual #19
725: aload         27
727: invokevirtual #19
730: ldc           #67
732: invokevirtual #19
735: invokevirtual #22
738: aload         27
740: ldc           #25
742: invokestatic  #68
745: aload         28
747: invokestatic  #15
750: aload         29
752: invokestatic  #15
755: aload         30
757: invokestatic  #15
760: aload         31
762: invokestatic  #15
765: new           #16
768: dup
769: invokespecial #17
772: ldc           #18
774: invokevirtual #19
777: iload         32
779: invokevirtual #20
782: ldc           #21
784: invokevirtual #19
787: iconst_1
788: invokevirtual #20
791: ldc           #18
793: invokevirtual #19
796: invokevirtual #22
799: iload         32
801: iconst_1
802: if_icmpne     809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #23
813: aload         33
815: invokestatic  #15
818: new           #16
821: dup
822: invokespecial #17
825: ldc           #18
827: invokevirtual #19
830: iload         34
832: invokevirtual #20
835: ldc           #21
837: invokevirtual #19
840: iconst_0
841: invokevirtual #20
844: ldc           #18
846: invokevirtual #19
849: invokevirtual #22
852: iload         34
854: ifne          861
857: iconst_1
858: goto          862
861: iconst_0
862: invokestatic  #23
865: new           #16
868: dup
869: invokespecial #17
872: ldc           #18
874: invokevirtual #19
877: iload         35
879: invokevirtual #20
882: ldc           #21
884: invokevirtual #19
887: iconst_0
888: invokevirtual #20
891: ldc           #18
893: invokevirtual #19
896: invokevirtual #22
899: iload         35
901: ifne          908
904: iconst_1
905: goto          909
908: iconst_0
909: invokestatic  #23
912: aload         36
914: invokestatic  #15
917: aload         37
919: invokestatic  #15
922: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test169
Start line: 8545
End line: 8625
Method source code: 
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("#text");
        java.lang.String str7 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist4);
        java.lang.String str8 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist4);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str15 = org.jsoup.Jsoup.clean(":lt(32)", whitelist14);
        boolean boolean17 = whitelist14.isSafeTag("");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element24 = document21.empty();
        org.jsoup.nodes.Element element26 = document21.removeClass("hi!");
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.tagName("hi!");
        org.jsoup.nodes.Element element36 = document30.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = document30.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = outputSettings37.prettyPrint(false);
        org.jsoup.nodes.Document document40 = document21.outputSettings(outputSettings39);
        java.lang.String str41 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist14, outputSettings39);
        org.jsoup.safety.Whitelist whitelist44 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str45 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist44);
        org.jsoup.safety.Whitelist whitelist47 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist49 = whitelist47.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist51 = whitelist49.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist55 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str56 = org.jsoup.Jsoup.clean(":lt(32)", whitelist55);
        org.jsoup.safety.Whitelist whitelist60 = whitelist55.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray67 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist68 = whitelist55.addTags(strArray67);
        org.jsoup.safety.Whitelist whitelist69 = whitelist51.addProtocols(":matchesOwn(null", "hi!", strArray67);
        java.lang.String[] strArray78 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean79 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray78);
        org.jsoup.safety.Whitelist whitelist80 = whitelist69.addProtocols("\n<!--hi!-->", "#document", strArray78);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray78);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray78);
        org.jsoup.safety.Whitelist whitelist83 = whitelist44.addAttributes("*", strArray78);
        org.jsoup.safety.Whitelist whitelist84 = whitelist14.addTags(strArray78);
        boolean boolean85 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", strArray78);
        org.jsoup.safety.Whitelist whitelist86 = whitelist4.addAttributes(":matchesOwn(null", strArray78);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray78, "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[    ^=hi!]" + "'", str8, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":lt(32)" + "'", str15, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[:lt(32)]" + "'", str41, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!$=   ]" + "'", str45, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ":lt(32)" + "'", str56, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(whitelist84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(whitelist86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #639
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: invokestatic  #118
58: astore        5
60: ldc           #43
62: aload         5
64: invokestatic  #81
67: astore        6
69: aload         5
71: ldc           #25
73: invokevirtual #83
76: istore        7
78: ldc           #25
80: ldc           #12
82: invokestatic  #26
85: astore        8
87: ldc           #12
89: aload         8
91: ldc           #12
93: invokestatic  #27
96: astore        9
98: aload         8
100: invokevirtual #103
103: astore        10
105: aload         8
107: ldc           #12
109: invokevirtual #59
112: astore        11
114: ldc           #25
116: ldc           #12
118: invokestatic  #26
121: astore        12
123: ldc           #12
125: aload         12
127: ldc           #12
129: invokestatic  #27
132: astore        13
134: aload         12
136: ldc           #12
138: invokevirtual #28
141: astore        14
143: aload         12
145: ldc           #25
147: invokevirtual #29
150: astore        15
152: aload         12
154: invokevirtual #30
157: astore        16
159: aload         16
161: iconst_0
162: invokevirtual #31
165: astore        17
167: aload         8
169: aload         17
171: invokevirtual #175
174: astore        18
176: ldc           #58
178: ldc           #126
180: aload         5
182: aload         17
184: invokestatic  #33
187: astore        19
189: invokestatic  #8
192: astore        20
194: ldc           #109
196: ldc           #110
198: aload         20
200: invokestatic  #94
203: astore        21
205: invokestatic  #8
208: astore        22
210: aload         22
212: iconst_1
213: invokevirtual #9
216: astore        23
218: aload         23
220: iconst_0
221: invokevirtual #9
224: astore        24
226: invokestatic  #118
229: astore        25
231: ldc           #43
233: aload         25
235: invokestatic  #81
238: astore        26
240: aload         25
242: ldc           #43
244: ldc           #12
246: ldc           #32
248: invokevirtual #11
251: astore        27
253: bipush        6
255: anewarray     #119
258: dup
259: iconst_0
260: ldc           #109
262: aastore
263: dup
264: iconst_1
265: ldc           #10
267: aastore
268: dup
269: iconst_2
270: ldc           #13
272: aastore
273: dup
274: iconst_3
275: ldc           #50
277: aastore
278: dup
279: iconst_4
280: ldc           #12
282: aastore
283: dup
284: iconst_5
285: ldc           #120
287: aastore
288: astore        28
290: aload         25
292: aload         28
294: invokevirtual #121
297: astore        29
299: aload         24
301: ldc           #38
303: ldc           #12
305: aload         28
307: invokevirtual #122
310: astore        30
312: iconst_5
313: anewarray     #119
316: dup
317: iconst_0
318: ldc           #13
320: aastore
321: dup
322: iconst_1
323: ldc           #32
325: aastore
326: dup
327: iconst_2
328: ldc           #10
330: aastore
331: dup
332: iconst_3
333: ldc           #43
335: aastore
336: dup
337: iconst_4
338: ldc           #58
340: aastore
341: astore        31
343: ldc           #10
345: aload         31
347: invokestatic  #123
350: istore        32
352: aload         30
354: ldc           #84
356: ldc           #13
358: aload         31
360: invokevirtual #122
363: astore        33
365: aload         31
367: checkcast     #124
370: invokestatic  #125
373: aload         31
375: checkcast     #124
378: invokestatic  #125
381: aload         20
383: ldc           #126
385: aload         31
387: invokevirtual #127
390: astore        34
392: aload         5
394: aload         31
396: invokevirtual #121
399: astore        35
401: ldc           #82
403: aload         31
405: invokestatic  #123
408: istore        36
410: aload_1
411: ldc           #38
413: aload         31
415: invokevirtual #127
418: astore        37
420: aload         31
422: checkcast     #124
425: ldc           #55
427: invokestatic  #245
430: aload_1
431: invokestatic  #15
434: aload_2
435: invokestatic  #15
438: new           #16
441: dup
442: invokespecial #17
445: ldc           #18
447: invokevirtual #19
450: aload_3
451: invokevirtual #19
454: ldc           #67
456: invokevirtual #19
459: invokevirtual #22
462: aload_3
463: ldc           #25
465: invokestatic  #68
468: new           #16
471: dup
472: invokespecial #17
475: ldc           #18
477: invokevirtual #19
480: aload         4
482: invokevirtual #19
485: ldc           #172
487: invokevirtual #19
490: invokevirtual #22
493: aload         4
495: ldc           #173
497: invokestatic  #68
500: aload         5
502: invokestatic  #15
505: new           #16
508: dup
509: invokespecial #17
512: ldc           #18
514: invokevirtual #19
517: aload         6
519: invokevirtual #19
522: ldc           #128
524: invokevirtual #19
527: invokevirtual #22
530: aload         6
532: ldc           #43
534: invokestatic  #68
537: new           #16
540: dup
541: invokespecial #17
544: ldc           #18
546: invokevirtual #19
549: iload         7
551: invokevirtual #20
554: ldc           #21
556: invokevirtual #19
559: iconst_0
560: invokevirtual #20
563: ldc           #18
565: invokevirtual #19
568: invokevirtual #22
571: iload         7
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #23
584: aload         8
586: invokestatic  #15
589: aload         9
591: invokestatic  #15
594: aload         10
596: invokestatic  #15
599: aload         11
601: invokestatic  #15
604: aload         12
606: invokestatic  #15
609: aload         13
611: invokestatic  #15
614: aload         14
616: invokestatic  #15
619: aload         15
621: invokestatic  #15
624: aload         16
626: invokestatic  #15
629: aload         17
631: invokestatic  #15
634: aload         18
636: invokestatic  #15
639: new           #16
642: dup
643: invokespecial #17
646: ldc           #18
648: invokevirtual #19
651: aload         19
653: invokevirtual #19
656: ldc           #184
658: invokevirtual #19
661: invokevirtual #22
664: aload         19
666: ldc           #58
668: invokestatic  #68
671: aload         20
673: invokestatic  #15
676: new           #16
679: dup
680: invokespecial #17
683: ldc           #18
685: invokevirtual #19
688: aload         21
690: invokevirtual #19
693: ldc           #111
695: invokevirtual #19
698: invokevirtual #22
701: aload         21
703: ldc           #65
705: invokestatic  #68
708: aload         22
710: invokestatic  #15
713: aload         23
715: invokestatic  #15
718: aload         24
720: invokestatic  #15
723: aload         25
725: invokestatic  #15
728: new           #16
731: dup
732: invokespecial #17
735: ldc           #18
737: invokevirtual #19
740: aload         26
742: invokevirtual #19
745: ldc           #128
747: invokevirtual #19
750: invokevirtual #22
753: aload         26
755: ldc           #43
757: invokestatic  #68
760: aload         27
762: invokestatic  #15
765: aload         28
767: invokestatic  #15
770: aload         29
772: invokestatic  #15
775: aload         30
777: invokestatic  #15
780: aload         31
782: invokestatic  #15
785: new           #16
788: dup
789: invokespecial #17
792: ldc           #18
794: invokevirtual #19
797: iload         32
799: invokevirtual #20
802: ldc           #21
804: invokevirtual #19
807: iconst_1
808: invokevirtual #20
811: ldc           #18
813: invokevirtual #19
816: invokevirtual #22
819: iload         32
821: iconst_1
822: if_icmpne     829
825: iconst_1
826: goto          830
829: iconst_0
830: invokestatic  #23
833: aload         33
835: invokestatic  #15
838: aload         34
840: invokestatic  #15
843: aload         35
845: invokestatic  #15
848: new           #16
851: dup
852: invokespecial #17
855: ldc           #18
857: invokevirtual #19
860: iload         36
862: invokevirtual #20
865: ldc           #21
867: invokevirtual #19
870: iconst_0
871: invokevirtual #20
874: ldc           #18
876: invokevirtual #19
879: invokevirtual #22
882: iload         36
884: ifne          891
887: iconst_1
888: goto          892
891: iconst_0
892: invokestatic  #23
895: aload         37
897: invokestatic  #15
900: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test170
Start line: 8628
End line: 8668
Method source code: 
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->");
        org.jsoup.nodes.Document document3 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Element element5 = document3.appendElement("#document");
        org.jsoup.nodes.Element element6 = element5.lastElementSibling();
        org.jsoup.nodes.Element element7 = element6.lastElementSibling();
        org.jsoup.nodes.Element element9 = element7.appendText("          ");
        org.jsoup.select.Elements elements10 = element7.parents();
        boolean boolean11 = tag1.equals((java.lang.Object) element7);
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist14 = whitelist12.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner15 = new org.jsoup.safety.Cleaner(whitelist14);
        org.jsoup.safety.Whitelist whitelist16 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist18 = whitelist16.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist20 = whitelist18.preserveRelativeLinks(false);
        java.lang.String[] strArray29 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean30 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray29);
        org.jsoup.safety.Whitelist whitelist31 = whitelist20.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray29);
        org.jsoup.safety.Whitelist whitelist32 = whitelist14.addTags(strArray29);
        boolean boolean33 = tag1.equals((java.lang.Object) whitelist14);
        org.junit.Assert.assertNotNull(tag1);
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #640
20: aastore
21: invokevirtual #7
24: pop
25: ldc_w         #298
28: invokestatic  #424
31: astore_1
32: ldc           #12
34: invokestatic  #45
37: astore_2
38: aload_2
39: ldc           #13
41: invokevirtual #474
44: astore_3
45: aload_3
46: invokevirtual #475
49: astore        4
51: aload         4
53: invokevirtual #475
56: astore        5
58: aload         5
60: ldc           #239
62: invokevirtual #641
65: astore        6
67: aload         5
69: invokevirtual #642
72: astore        7
74: aload_1
75: aload         5
77: invokevirtual #428
80: istore        8
82: invokestatic  #8
85: astore        9
87: aload         9
89: iconst_1
90: invokevirtual #9
93: astore        10
95: new           #40
98: dup
99: aload         10
101: invokespecial #41
104: astore        11
106: invokestatic  #8
109: astore        12
111: aload         12
113: iconst_1
114: invokevirtual #9
117: astore        13
119: aload         13
121: iconst_0
122: invokevirtual #9
125: astore        14
127: iconst_5
128: anewarray     #119
131: dup
132: iconst_0
133: ldc           #13
135: aastore
136: dup
137: iconst_1
138: ldc           #32
140: aastore
141: dup
142: iconst_2
143: ldc           #10
145: aastore
146: dup
147: iconst_3
148: ldc           #43
150: aastore
151: dup
152: iconst_4
153: ldc           #58
155: aastore
156: astore        15
158: ldc           #10
160: aload         15
162: invokestatic  #123
165: istore        16
167: aload         14
169: ldc           #120
171: ldc           #55
173: aload         15
175: invokevirtual #122
178: astore        17
180: aload         10
182: aload         15
184: invokevirtual #121
187: astore        18
189: aload_1
190: aload         10
192: invokevirtual #428
195: istore        19
197: aload_1
198: invokestatic  #15
201: aload_2
202: invokestatic  #15
205: aload_3
206: invokestatic  #15
209: aload         4
211: invokestatic  #15
214: aload         5
216: invokestatic  #15
219: aload         6
221: invokestatic  #15
224: aload         7
226: invokestatic  #15
229: new           #16
232: dup
233: invokespecial #17
236: ldc           #18
238: invokevirtual #19
241: iload         8
243: invokevirtual #20
246: ldc           #21
248: invokevirtual #19
251: iconst_0
252: invokevirtual #20
255: ldc           #18
257: invokevirtual #19
260: invokevirtual #22
263: iload         8
265: ifne          272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #23
276: aload         9
278: invokestatic  #15
281: aload         10
283: invokestatic  #15
286: aload         12
288: invokestatic  #15
291: aload         13
293: invokestatic  #15
296: aload         14
298: invokestatic  #15
301: aload         15
303: invokestatic  #15
306: new           #16
309: dup
310: invokespecial #17
313: ldc           #18
315: invokevirtual #19
318: iload         16
320: invokevirtual #20
323: ldc           #21
325: invokevirtual #19
328: iconst_1
329: invokevirtual #20
332: ldc           #18
334: invokevirtual #19
337: invokevirtual #22
340: iload         16
342: iconst_1
343: if_icmpne     350
346: iconst_1
347: goto          351
350: iconst_0
351: invokestatic  #23
354: aload         17
356: invokestatic  #15
359: aload         18
361: invokestatic  #15
364: new           #16
367: dup
368: invokespecial #17
371: ldc           #18
373: invokevirtual #19
376: iload         19
378: invokevirtual #20
381: ldc           #21
383: invokevirtual #19
386: iconst_0
387: invokevirtual #20
390: ldc           #18
392: invokevirtual #19
395: invokevirtual #22
398: iload         19
400: ifne          407
403: iconst_1
404: goto          408
407: iconst_0
408: invokestatic  #23
411: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test171
Start line: 8671
End line: 8682
Method source code: 
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        org.jsoup.safety.Whitelist whitelist5 = whitelist2.preserveRelativeLinks(false);
        boolean boolean7 = whitelist2.isSafeTag("");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #643
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: iconst_0
40: invokevirtual #9
43: astore_3
44: aload_1
45: ldc           #25
47: invokevirtual #83
50: istore        4
52: aload_1
53: invokestatic  #15
56: new           #16
59: dup
60: invokespecial #17
63: ldc           #18
65: invokevirtual #19
68: aload_2
69: invokevirtual #19
72: ldc           #111
74: invokevirtual #19
77: invokevirtual #22
80: aload_2
81: ldc           #65
83: invokestatic  #68
86: aload_3
87: invokestatic  #15
90: new           #16
93: dup
94: invokespecial #17
97: ldc           #18
99: invokevirtual #19
102: iload         4
104: invokevirtual #20
107: ldc           #21
109: invokevirtual #19
112: iconst_0
113: invokevirtual #20
116: ldc           #18
118: invokevirtual #19
121: invokevirtual #22
124: iload         4
126: ifne          133
129: iconst_1
130: goto          134
133: iconst_0
134: invokestatic  #23
137: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test172
Start line: 8685
End line: 8718
Method source code: 
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Node node22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node23 = document21.before(node22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #644
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: aconst_null
129: astore        13
131: aload         12
133: aload         13
135: invokevirtual #66
138: astore        14
140: ldc           #34
142: invokestatic  #35
145: goto          150
148: astore        14
150: aload_1
151: invokestatic  #15
154: aload_2
155: invokestatic  #15
158: aload         5
160: invokestatic  #15
163: aload         6
165: invokestatic  #15
168: aload         7
170: invokestatic  #15
173: aload         8
175: invokestatic  #15
178: aload         9
180: invokestatic  #15
183: aload         10
185: invokestatic  #15
188: new           #16
191: dup
192: invokespecial #17
195: ldc           #18
197: invokevirtual #19
200: iload         11
202: invokevirtual #20
205: ldc           #21
207: invokevirtual #19
210: iconst_0
211: invokevirtual #20
214: ldc           #18
216: invokevirtual #19
219: invokevirtual #22
222: iload         11
224: ifne          231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #23
235: aload         12
237: invokestatic  #15
240: return
Exception table:
from    to  target type
131   145   148   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test173
Start line: 8721
End line: 8827
Method source code: 
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj3 = objList0.peekFirst();
        objList0.addFirst((java.lang.Object) ":gt(100)");
        java.lang.String str6 = objList0.toString();
        java.lang.Object obj7 = objList0.removeFirst();
        org.jsoup.nodes.Document document11 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList13 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document11, "hi!");
        org.jsoup.nodes.Element element15 = document11.tagName("hi!");
        org.jsoup.nodes.Element element17 = document11.append("");
        org.jsoup.nodes.Element element20 = document11.attr("#document", "#document");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = element20.siblingNodes();
        boolean boolean22 = objList0.removeAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList21);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList23 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean25 = objList23.equals((java.lang.Object) ":lt(32)");
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList31 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document29, "hi!");
        org.jsoup.nodes.Element element33 = document29.tagName("hi!");
        org.jsoup.nodes.Element element35 = document29.append("");
        java.lang.String str36 = element35.toString();
        int int37 = objList23.indexOf((java.lang.Object) element35);
        boolean boolean38 = objList0.remove((java.lang.Object) objList23);
        org.jsoup.safety.Whitelist whitelist39 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist41 = whitelist39.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner42 = new org.jsoup.safety.Cleaner(whitelist41);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining45 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document47 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList53 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document51, "hi!");
        org.jsoup.nodes.Element element55 = document51.tagName("hi!");
        org.jsoup.nodes.Element element57 = document51.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings58 = document51.outputSettings();
        boolean boolean59 = attributeWithValueContaining45.matches((org.jsoup.nodes.Element) document47, (org.jsoup.nodes.Element) document51);
        org.jsoup.nodes.Document document60 = cleaner42.clean(document51);
        org.jsoup.nodes.Document document62 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str63 = document62.toString();
        java.lang.String str64 = document62.baseUri();
        org.jsoup.nodes.Document document65 = cleaner42.clean(document62);
        org.jsoup.nodes.Document document66 = document65.clone();
        boolean boolean67 = objList0.offer((java.lang.Object) document66);
        java.util.Iterator<java.lang.Object> objItor68 = objList0.iterator();
        org.jsoup.nodes.Document document72 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document72, "hi!");
        org.jsoup.nodes.Element element76 = document72.text("");
        org.jsoup.nodes.Document document80 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList82 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document80, "hi!");
        org.jsoup.nodes.Element element84 = document80.tagName("hi!");
        org.jsoup.nodes.Element element86 = document80.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings87 = document80.outputSettings();
        org.jsoup.nodes.Document document88 = document72.outputSettings(outputSettings87);
        org.jsoup.nodes.Document document89 = document72.normalise();
        org.jsoup.nodes.Element element91 = document89.createElement(":lt(32)");
        org.jsoup.parser.Tag tag92 = element91.tag();
        boolean boolean93 = objList0.removeFirstOccurrence((java.lang.Object) tag92);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[:gt(100)]" + "'", str6, "[:gt(100)]");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + ":gt(100)" + "'", obj7, ":gt(100)");
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str36, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertNotNull(outputSettings58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(document60);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str63, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objItor68);
        org.junit.Assert.assertNotNull(document72);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNotNull(document80);
        org.junit.Assert.assertNotNull(nodeList82);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertNotNull(element86);
        org.junit.Assert.assertNotNull(outputSettings87);
        org.junit.Assert.assertNotNull(document88);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertNotNull(element91);
        org.junit.Assert.assertNotNull(tag92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #645
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: aload_1
41: invokevirtual #91
44: astore_3
45: aload_1
46: ldc           #92
48: invokevirtual #93
51: aload_1
52: invokevirtual #570
55: astore        4
57: aload_1
58: invokevirtual #646
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: ldc           #13
105: ldc           #13
107: invokevirtual #56
110: astore        10
112: aload         10
114: invokevirtual #396
117: astore        11
119: aload_1
120: aload         11
122: invokevirtual #647
125: istore        12
127: new           #88
130: dup
131: invokespecial #89
134: astore        13
136: aload         13
138: ldc           #43
140: invokevirtual #90
143: istore        14
145: ldc           #25
147: ldc           #12
149: invokestatic  #26
152: astore        15
154: ldc           #12
156: aload         15
158: ldc           #12
160: invokestatic  #27
163: astore        16
165: aload         15
167: ldc           #12
169: invokevirtual #28
172: astore        17
174: aload         15
176: ldc           #25
178: invokevirtual #29
181: astore        18
183: aload         18
185: invokevirtual #363
188: astore        19
190: aload         13
192: aload         18
194: invokevirtual #380
197: istore        20
199: aload_1
200: aload         13
202: invokevirtual #648
205: istore        21
207: invokestatic  #8
210: astore        22
212: aload         22
214: iconst_1
215: invokevirtual #9
218: astore        23
220: new           #40
223: dup
224: aload         23
226: invokespecial #41
229: astore        24
231: new           #42
234: dup
235: ldc           #43
237: ldc           #32
239: invokespecial #44
242: astore        25
244: ldc           #12
246: invokestatic  #45
249: astore        26
251: ldc           #25
253: ldc           #12
255: invokestatic  #26
258: astore        27
260: ldc           #12
262: aload         27
264: ldc           #12
266: invokestatic  #27
269: astore        28
271: aload         27
273: ldc           #12
275: invokevirtual #28
278: astore        29
280: aload         27
282: ldc           #25
284: invokevirtual #29
287: astore        30
289: aload         27
291: invokevirtual #30
294: astore        31
296: aload         25
298: aload         26
300: aload         27
302: invokevirtual #46
305: istore        32
307: aload         24
309: aload         27
311: invokevirtual #47
314: astore        33
316: ldc           #10
318: invokestatic  #193
321: astore        34
323: aload         34
325: invokevirtual #72
328: astore        35
330: aload         34
332: invokevirtual #194
335: astore        36
337: aload         24
339: aload         34
341: invokevirtual #47
344: astore        37
346: aload         37
348: invokevirtual #154
351: astore        38
353: aload_1
354: aload         38
356: invokevirtual #649
359: istore        39
361: aload_1
362: invokevirtual #410
365: astore        40
367: ldc           #25
369: ldc           #12
371: invokestatic  #26
374: astore        41
376: ldc           #12
378: aload         41
380: ldc           #12
382: invokestatic  #27
385: astore        42
387: aload         41
389: ldc           #25
391: invokevirtual #64
394: astore        43
396: ldc           #25
398: ldc           #12
400: invokestatic  #26
403: astore        44
405: ldc           #12
407: aload         44
409: ldc           #12
411: invokestatic  #27
414: astore        45
416: aload         44
418: ldc           #12
420: invokevirtual #28
423: astore        46
425: aload         44
427: ldc           #25
429: invokevirtual #29
432: astore        47
434: aload         44
436: invokevirtual #30
439: astore        48
441: aload         41
443: aload         48
445: invokevirtual #175
448: astore        49
450: aload         41
452: invokevirtual #102
455: astore        50
457: aload         50
459: ldc           #43
461: invokevirtual #61
464: astore        51
466: aload         51
468: invokevirtual #650
471: astore        52
473: aload_1
474: aload         52
476: invokevirtual #651
479: istore        53
481: new           #16
484: dup
485: invokespecial #17
488: ldc           #18
490: invokevirtual #19
493: iload_2
494: invokevirtual #20
497: ldc           #21
499: invokevirtual #19
502: iconst_0
503: invokevirtual #20
506: ldc           #18
508: invokevirtual #19
511: invokevirtual #22
514: iload_2
515: ifne          522
518: iconst_1
519: goto          523
522: iconst_0
523: invokestatic  #23
526: aload_3
527: invokestatic  #79
530: new           #16
533: dup
534: invokespecial #17
537: ldc           #18
539: invokevirtual #19
542: aload         4
544: invokevirtual #19
547: ldc_w         #325
550: invokevirtual #19
553: invokevirtual #22
556: aload         4
558: ldc_w         #262
561: invokestatic  #68
564: new           #16
567: dup
568: invokespecial #17
571: ldc           #18
573: invokevirtual #19
576: aload         5
578: invokevirtual #223
581: ldc_w         #652
584: invokevirtual #19
587: invokevirtual #22
590: aload         5
592: ldc           #92
594: invokestatic  #68
597: aload         6
599: invokestatic  #15
602: aload         7
604: invokestatic  #15
607: aload         8
609: invokestatic  #15
612: aload         9
614: invokestatic  #15
617: aload         10
619: invokestatic  #15
622: aload         11
624: invokestatic  #15
627: new           #16
630: dup
631: invokespecial #17
634: ldc           #18
636: invokevirtual #19
639: iload         12
641: invokevirtual #20
644: ldc           #21
646: invokevirtual #19
649: iconst_0
650: invokevirtual #20
653: ldc           #18
655: invokevirtual #19
658: invokevirtual #22
661: iload         12
663: ifne          670
666: iconst_1
667: goto          671
670: iconst_0
671: invokestatic  #23
674: new           #16
677: dup
678: invokespecial #17
681: ldc           #18
683: invokevirtual #19
686: iload         14
688: invokevirtual #20
691: ldc           #21
693: invokevirtual #19
696: iconst_0
697: invokevirtual #20
700: ldc           #18
702: invokevirtual #19
705: invokevirtual #22
708: iload         14
710: ifne          717
713: iconst_1
714: goto          718
717: iconst_0
718: invokestatic  #23
721: aload         15
723: invokestatic  #15
726: aload         16
728: invokestatic  #15
731: aload         17
733: invokestatic  #15
736: aload         18
738: invokestatic  #15
741: new           #16
744: dup
745: invokespecial #17
748: ldc           #18
750: invokevirtual #19
753: aload         19
755: invokevirtual #19
758: ldc           #78
760: invokevirtual #19
763: invokevirtual #22
766: aload         19
768: ldc           #10
770: invokestatic  #68
773: new           #16
776: dup
777: invokespecial #17
780: ldc           #18
782: invokevirtual #19
785: iload         20
787: invokevirtual #134
790: ldc           #21
792: invokevirtual #19
795: iconst_m1
796: invokevirtual #134
799: ldc           #18
801: invokevirtual #19
804: invokevirtual #22
807: iload         20
809: iconst_m1
810: if_icmpne     817
813: iconst_1
814: goto          818
817: iconst_0
818: invokestatic  #23
821: new           #16
824: dup
825: invokespecial #17
828: ldc           #18
830: invokevirtual #19
833: iload         21
835: invokevirtual #20
838: ldc           #21
840: invokevirtual #19
843: iconst_0
844: invokevirtual #20
847: ldc           #18
849: invokevirtual #19
852: invokevirtual #22
855: iload         21
857: ifne          864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #23
868: aload         22
870: invokestatic  #15
873: aload         23
875: invokestatic  #15
878: aload         26
880: invokestatic  #15
883: aload         27
885: invokestatic  #15
888: aload         28
890: invokestatic  #15
893: aload         29
895: invokestatic  #15
898: aload         30
900: invokestatic  #15
903: aload         31
905: invokestatic  #15
908: new           #16
911: dup
912: invokespecial #17
915: ldc           #18
917: invokevirtual #19
920: iload         32
922: invokevirtual #20
925: ldc           #21
927: invokevirtual #19
930: iconst_0
931: invokevirtual #20
934: ldc           #18
936: invokevirtual #19
939: invokevirtual #22
942: iload         32
944: ifne          951
947: iconst_1
948: goto          952
951: iconst_0
952: invokestatic  #23
955: aload         33
957: invokestatic  #15
960: aload         34
962: invokestatic  #15
965: new           #16
968: dup
969: invokespecial #17
972: ldc           #18
974: invokevirtual #19
977: aload         35
979: invokevirtual #19
982: ldc           #197
984: invokevirtual #19
987: invokevirtual #22
990: aload         35
992: ldc           #151
994: invokestatic  #68
997: new           #16
1000: dup
1001: invokespecial #17
1004: ldc           #18
1006: invokevirtual #19
1009: aload         36
1011: invokevirtual #19
1014: ldc           #67
1016: invokevirtual #19
1019: invokevirtual #22
1022: aload         36
1024: ldc           #25
1026: invokestatic  #68
1029: aload         37
1031: invokestatic  #15
1034: aload         38
1036: invokestatic  #15
1039: new           #16
1042: dup
1043: invokespecial #17
1046: ldc           #18
1048: invokevirtual #19
1051: iload         39
1053: invokevirtual #20
1056: ldc           #21
1058: invokevirtual #19
1061: iconst_1
1062: invokevirtual #20
1065: ldc           #18
1067: invokevirtual #19
1070: invokevirtual #22
1073: iload         39
1075: iconst_1
1076: if_icmpne     1083
1079: iconst_1
1080: goto          1084
1083: iconst_0
1084: invokestatic  #23
1087: aload         40
1089: invokestatic  #15
1092: aload         41
1094: invokestatic  #15
1097: aload         42
1099: invokestatic  #15
1102: aload         43
1104: invokestatic  #15
1107: aload         44
1109: invokestatic  #15
1112: aload         45
1114: invokestatic  #15
1117: aload         46
1119: invokestatic  #15
1122: aload         47
1124: invokestatic  #15
1127: aload         48
1129: invokestatic  #15
1132: aload         49
1134: invokestatic  #15
1137: aload         50
1139: invokestatic  #15
1142: aload         51
1144: invokestatic  #15
1147: aload         52
1149: invokestatic  #15
1152: new           #16
1155: dup
1156: invokespecial #17
1159: ldc           #18
1161: invokevirtual #19
1164: iload         53
1166: invokevirtual #20
1169: ldc           #21
1171: invokevirtual #19
1174: iconst_0
1175: invokevirtual #20
1178: ldc           #18
1180: invokevirtual #19
1183: invokevirtual #22
1186: iload         53
1188: ifne          1195
1191: iconst_1
1192: goto          1196
1195: iconst_0
1196: invokestatic  #23
1199: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test174
Start line: 8830
End line: 8865
Method source code: 
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str4 = org.jsoup.Jsoup.clean(":lt(32)", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList12 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document10, "hi!");
        org.jsoup.nodes.Element element13 = document10.empty();
        org.jsoup.nodes.Element element15 = document10.removeClass("hi!");
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document19, "hi!");
        org.jsoup.nodes.Element element23 = document19.tagName("hi!");
        org.jsoup.nodes.Element element25 = document19.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = document19.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings26.prettyPrint(false);
        org.jsoup.nodes.Document document29 = document10.outputSettings(outputSettings28);
        java.lang.String str30 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist3, outputSettings28);
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = outputSettings28.indentAmount((int) (short) 0);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":lt(32)" + "'", str4, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[:lt(32)]" + "'", str30, "[:lt(32)]");
        org.junit.Assert.assertNotNull(outputSettings32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #653
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: aload         13
155: iconst_0
156: invokevirtual #189
159: astore        16
161: aload_1
162: invokestatic  #15
165: new           #16
168: dup
169: invokespecial #17
172: ldc           #18
174: invokevirtual #19
177: aload_2
178: invokevirtual #19
181: ldc           #128
183: invokevirtual #19
186: invokevirtual #22
189: aload_2
190: ldc           #43
192: invokestatic  #68
195: new           #16
198: dup
199: invokespecial #17
202: ldc           #18
204: invokevirtual #19
207: iload_3
208: invokevirtual #20
211: ldc           #21
213: invokevirtual #19
216: iconst_0
217: invokevirtual #20
220: ldc           #18
222: invokevirtual #19
225: invokevirtual #22
228: iload_3
229: ifne          236
232: iconst_1
233: goto          237
236: iconst_0
237: invokestatic  #23
240: aload         4
242: invokestatic  #15
245: aload         5
247: invokestatic  #15
250: aload         6
252: invokestatic  #15
255: aload         7
257: invokestatic  #15
260: aload         8
262: invokestatic  #15
265: aload         9
267: invokestatic  #15
270: aload         10
272: invokestatic  #15
275: aload         11
277: invokestatic  #15
280: aload         12
282: invokestatic  #15
285: aload         13
287: invokestatic  #15
290: aload         14
292: invokestatic  #15
295: new           #16
298: dup
299: invokespecial #17
302: ldc           #18
304: invokevirtual #19
307: aload         15
309: invokevirtual #19
312: ldc           #184
314: invokevirtual #19
317: invokevirtual #22
320: aload         15
322: ldc           #58
324: invokestatic  #68
327: aload         16
329: invokestatic  #15
332: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test175
Start line: 8868
End line: 8881
Method source code: 
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute(":eq(1)", "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", ".\n<!---->");
        java.lang.String str8 = org.jsoup.Jsoup.clean(":matches(null", whitelist1);
        org.jsoup.safety.Whitelist whitelist12 = whitelist1.addEnforcedAttribute("[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]", "[<hi!>\n [^hi!]\n</hi!>]", ":containsOwn(");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + ":matches(null" + "'", str8, ":matches(null");
        org.junit.Assert.assertNotNull(whitelist12);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #654
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc_w         #279
39: ldc           #82
41: ldc           #145
43: invokevirtual #11
46: astore_3
47: ldc_w         #414
50: aload_1
51: invokestatic  #81
54: astore        4
56: aload_1
57: ldc_w         #443
60: ldc_w         #655
63: ldc_w         #656
66: invokevirtual #11
69: astore        5
71: aload_1
72: invokestatic  #15
75: aload_2
76: invokestatic  #15
79: aload_3
80: invokestatic  #15
83: new           #16
86: dup
87: invokespecial #17
90: ldc           #18
92: invokevirtual #19
95: aload         4
97: invokevirtual #19
100: ldc_w         #417
103: invokevirtual #19
106: invokevirtual #22
109: aload         4
111: ldc_w         #414
114: invokestatic  #68
117: aload         5
119: invokestatic  #15
122: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test176
Start line: 8884
End line: 8969
Method source code: 
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining2 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        boolean boolean16 = attributeWithValueContaining2.matches((org.jsoup.nodes.Element) document4, (org.jsoup.nodes.Element) document8);
        org.jsoup.nodes.Element element18 = document8.toggleClass("#doctype");
        org.jsoup.nodes.Element element19 = document8.head();
        org.jsoup.select.Elements elements21 = document8.getElementsByAttributeStarting(":gt(100)");
        int int22 = document8.siblingIndex();
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner26 = new org.jsoup.safety.Cleaner(whitelist25);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining29 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document31 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = document35.outputSettings();
        boolean boolean43 = attributeWithValueContaining29.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document35);
        org.jsoup.nodes.Document document44 = cleaner26.clean(document35);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan46 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document49 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str50 = document49.ownText();
        org.jsoup.nodes.Node node53 = document49.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element68 = document57.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element70 = document57.createElement(" hi!");
        org.jsoup.select.Elements elements72 = document57.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean73 = indexLessThan46.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document74 = cleaner26.clean(document57);
        boolean boolean75 = document8.equals((java.lang.Object) document74);
        org.jsoup.nodes.Element element76 = document8.nextElementSibling();
        java.lang.String str77 = document8.html();
        org.jsoup.nodes.Node node78 = document8.parent();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(elements21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(elements72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(document74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(element76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str77, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNull(node78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #657
20: aastore
21: invokevirtual #7
24: pop
25: new           #42
28: dup
29: ldc           #43
31: ldc           #32
33: invokespecial #44
36: astore_1
37: ldc           #12
39: invokestatic  #45
42: astore_2
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore_3
51: ldc           #12
53: aload_3
54: ldc           #12
56: invokestatic  #27
59: astore        4
61: aload_3
62: ldc           #12
64: invokevirtual #28
67: astore        5
69: aload_3
70: ldc           #25
72: invokevirtual #29
75: astore        6
77: aload_3
78: invokevirtual #30
81: astore        7
83: aload_1
84: aload_2
85: aload_3
86: invokevirtual #46
89: istore        8
91: aload_3
92: ldc           #187
94: invokevirtual #199
97: astore        9
99: aload_3
100: invokevirtual #200
103: astore        10
105: aload_3
106: ldc           #92
108: invokevirtual #140
111: astore        11
113: aload_3
114: invokevirtual #201
117: istore        12
119: invokestatic  #8
122: astore        13
124: aload         13
126: iconst_1
127: invokevirtual #9
130: astore        14
132: new           #40
135: dup
136: aload         14
138: invokespecial #41
141: astore        15
143: new           #42
146: dup
147: ldc           #43
149: ldc           #32
151: invokespecial #44
154: astore        16
156: ldc           #12
158: invokestatic  #45
161: astore        17
163: ldc           #25
165: ldc           #12
167: invokestatic  #26
170: astore        18
172: ldc           #12
174: aload         18
176: ldc           #12
178: invokestatic  #27
181: astore        19
183: aload         18
185: ldc           #12
187: invokevirtual #28
190: astore        20
192: aload         18
194: ldc           #25
196: invokevirtual #29
199: astore        21
201: aload         18
203: invokevirtual #30
206: astore        22
208: aload         16
210: aload         17
212: aload         18
214: invokevirtual #46
217: istore        23
219: aload         15
221: aload         18
223: invokevirtual #47
226: astore        24
228: new           #48
231: dup
232: iconst_m1
233: invokespecial #49
236: astore        25
238: ldc           #50
240: ldc           #51
242: invokestatic  #52
245: astore        26
247: aload         26
249: invokevirtual #53
252: astore        27
254: aload         26
256: ldc           #54
258: ldc           #55
260: invokevirtual #56
263: astore        28
265: ldc           #25
267: ldc           #12
269: invokestatic  #26
272: astore        29
274: ldc           #12
276: aload         29
278: ldc           #12
280: invokestatic  #27
283: astore        30
285: aload         29
287: ldc           #12
289: invokevirtual #28
292: astore        31
294: aload         29
296: ldc           #25
298: invokevirtual #29
301: astore        32
303: aload         29
305: invokevirtual #30
308: astore        33
310: aload         29
312: ldc           #12
314: invokevirtual #57
317: astore        34
319: aload         29
321: ldc           #58
323: invokevirtual #59
326: astore        35
328: aload         29
330: ldc           #60
332: invokevirtual #61
335: astore        36
337: aload         29
339: ldc           #38
341: invokevirtual #62
344: astore        37
346: aload         25
348: aload         26
350: aload         29
352: invokevirtual #63
355: istore        38
357: aload         15
359: aload         29
361: invokevirtual #47
364: astore        39
366: aload_3
367: aload         39
369: invokevirtual #202
372: istore        40
374: aload_3
375: invokevirtual #628
378: astore        41
380: aload_3
381: invokevirtual #658
384: astore        42
386: aload_3
387: invokevirtual #74
390: astore        43
392: aload_2
393: invokestatic  #15
396: aload_3
397: invokestatic  #15
400: aload         4
402: invokestatic  #15
405: aload         5
407: invokestatic  #15
410: aload         6
412: invokestatic  #15
415: aload         7
417: invokestatic  #15
420: new           #16
423: dup
424: invokespecial #17
427: ldc           #18
429: invokevirtual #19
432: iload         8
434: invokevirtual #20
437: ldc           #21
439: invokevirtual #19
442: iconst_0
443: invokevirtual #20
446: ldc           #18
448: invokevirtual #19
451: invokevirtual #22
454: iload         8
456: ifne          463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #23
467: aload         9
469: invokestatic  #15
472: aload         10
474: invokestatic  #15
477: aload         11
479: invokestatic  #15
482: new           #16
485: dup
486: invokespecial #17
489: ldc           #18
491: invokevirtual #19
494: iload         12
496: invokevirtual #134
499: ldc           #21
501: invokevirtual #19
504: iconst_0
505: invokevirtual #134
508: ldc           #18
510: invokevirtual #19
513: invokevirtual #22
516: iload         12
518: ifne          525
521: iconst_1
522: goto          526
525: iconst_0
526: invokestatic  #23
529: aload         13
531: invokestatic  #15
534: aload         14
536: invokestatic  #15
539: aload         17
541: invokestatic  #15
544: aload         18
546: invokestatic  #15
549: aload         19
551: invokestatic  #15
554: aload         20
556: invokestatic  #15
559: aload         21
561: invokestatic  #15
564: aload         22
566: invokestatic  #15
569: new           #16
572: dup
573: invokespecial #17
576: ldc           #18
578: invokevirtual #19
581: iload         23
583: invokevirtual #20
586: ldc           #21
588: invokevirtual #19
591: iconst_0
592: invokevirtual #20
595: ldc           #18
597: invokevirtual #19
600: invokevirtual #22
603: iload         23
605: ifne          612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #23
616: aload         24
618: invokestatic  #15
621: aload         26
623: invokestatic  #15
626: new           #16
629: dup
630: invokespecial #17
633: ldc           #18
635: invokevirtual #19
638: aload         27
640: invokevirtual #19
643: ldc           #67
645: invokevirtual #19
648: invokevirtual #22
651: aload         27
653: ldc           #25
655: invokestatic  #68
658: aload         28
660: invokestatic  #15
663: aload         29
665: invokestatic  #15
668: aload         30
670: invokestatic  #15
673: aload         31
675: invokestatic  #15
678: aload         32
680: invokestatic  #15
683: aload         33
685: invokestatic  #15
688: aload         34
690: invokestatic  #15
693: aload         35
695: invokestatic  #15
698: aload         36
700: invokestatic  #15
703: aload         37
705: invokestatic  #15
708: new           #16
711: dup
712: invokespecial #17
715: ldc           #18
717: invokevirtual #19
720: iload         38
722: invokevirtual #20
725: ldc           #21
727: invokevirtual #19
730: iconst_0
731: invokevirtual #20
734: ldc           #18
736: invokevirtual #19
739: invokevirtual #22
742: iload         38
744: ifne          751
747: iconst_1
748: goto          752
751: iconst_0
752: invokestatic  #23
755: aload         39
757: invokestatic  #15
760: new           #16
763: dup
764: invokespecial #17
767: ldc           #18
769: invokevirtual #19
772: iload         40
774: invokevirtual #20
777: ldc           #21
779: invokevirtual #19
782: iconst_0
783: invokevirtual #20
786: ldc           #18
788: invokevirtual #19
791: invokevirtual #22
794: iload         40
796: ifne          803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #23
807: aload         41
809: invokestatic  #79
812: new           #16
815: dup
816: invokespecial #17
819: ldc           #18
821: invokevirtual #19
824: aload         42
826: invokevirtual #19
829: ldc           #78
831: invokevirtual #19
834: invokevirtual #22
837: aload         42
839: ldc           #10
841: invokestatic  #68
844: aload         43
846: invokestatic  #79
849: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test177
Start line: 8972
End line: 9037
Method source code: 
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.util.Spliterator<java.lang.Object> objSpliterator24 = objList0.spliterator();
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        java.lang.String str32 = org.jsoup.helper.StringUtil.join((java.util.Collection) nodeList30, "#document");
        boolean boolean33 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList30);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist36 = whitelist34.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner37 = new org.jsoup.safety.Cleaner(whitelist36);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining40 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document42 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        boolean boolean54 = attributeWithValueContaining40.matches((org.jsoup.nodes.Element) document42, (org.jsoup.nodes.Element) document46);
        org.jsoup.nodes.Document document55 = cleaner37.clean(document46);
        boolean boolean56 = objList0.contains((java.lang.Object) document46);
        java.lang.Object obj57 = objList0.pollFirst();
        java.util.ListIterator<java.lang.Object> objItor58 = objList0.listIterator();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSpliterator24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\nhi!" + "'", str32, "\nhi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(objItor58);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #659
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #283
138: astore        12
140: ldc           #25
142: ldc           #12
144: invokestatic  #26
147: astore        13
149: ldc           #12
151: aload         13
153: ldc           #12
155: invokestatic  #27
158: astore        14
160: aload         14
162: ldc           #13
164: invokestatic  #284
167: astore        15
169: aload_1
170: aload         14
172: invokevirtual #285
175: istore        16
177: invokestatic  #8
180: astore        17
182: aload         17
184: iconst_1
185: invokevirtual #9
188: astore        18
190: new           #40
193: dup
194: aload         18
196: invokespecial #41
199: astore        19
201: new           #42
204: dup
205: ldc           #43
207: ldc           #32
209: invokespecial #44
212: astore        20
214: ldc           #12
216: invokestatic  #45
219: astore        21
221: ldc           #25
223: ldc           #12
225: invokestatic  #26
228: astore        22
230: ldc           #12
232: aload         22
234: ldc           #12
236: invokestatic  #27
239: astore        23
241: aload         22
243: ldc           #12
245: invokevirtual #28
248: astore        24
250: aload         22
252: ldc           #25
254: invokevirtual #29
257: astore        25
259: aload         22
261: invokevirtual #30
264: astore        26
266: aload         20
268: aload         21
270: aload         22
272: invokevirtual #46
275: istore        27
277: aload         19
279: aload         22
281: invokevirtual #47
284: astore        28
286: aload_1
287: aload         22
289: invokevirtual #286
292: istore        29
294: aload_1
295: invokevirtual #660
298: astore        30
300: aload_1
301: invokevirtual #403
304: astore        31
306: aload_2
307: invokestatic  #15
310: aload_3
311: invokestatic  #15
314: aload         4
316: invokestatic  #15
319: aload         5
321: invokestatic  #15
324: aload         6
326: invokestatic  #15
329: aload         7
331: invokestatic  #15
334: aload         8
336: invokestatic  #15
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: aload         9
353: invokevirtual #19
356: ldc           #78
358: invokevirtual #19
361: invokevirtual #22
364: aload         9
366: ldc           #10
368: invokestatic  #68
371: aload         10
373: invokestatic  #15
376: aload         10
378: invokestatic  #288
381: ldc_w         #289
384: invokestatic  #290
387: aload         10
389: invokestatic  #291
392: ldc_w         #289
395: invokestatic  #290
398: new           #16
401: dup
402: invokespecial #17
405: ldc           #18
407: invokevirtual #19
410: iload         11
412: invokevirtual #20
415: ldc           #21
417: invokevirtual #19
420: iconst_1
421: invokevirtual #20
424: ldc           #18
426: invokevirtual #19
429: invokevirtual #22
432: iload         11
434: iconst_1
435: if_icmpne     442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #23
446: aload         12
448: invokestatic  #15
451: aload         13
453: invokestatic  #15
456: aload         14
458: invokestatic  #15
461: new           #16
464: dup
465: invokespecial #17
468: ldc           #18
470: invokevirtual #19
473: aload         15
475: invokevirtual #19
478: ldc_w         #292
481: invokevirtual #19
484: invokevirtual #22
487: aload         15
489: ldc           #98
491: invokestatic  #68
494: new           #16
497: dup
498: invokespecial #17
501: ldc           #18
503: invokevirtual #19
506: iload         16
508: invokevirtual #20
511: ldc           #21
513: invokevirtual #19
516: iconst_0
517: invokevirtual #20
520: ldc           #18
522: invokevirtual #19
525: invokevirtual #22
528: iload         16
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #23
541: aload         17
543: invokestatic  #15
546: aload         18
548: invokestatic  #15
551: aload         21
553: invokestatic  #15
556: aload         22
558: invokestatic  #15
561: aload         23
563: invokestatic  #15
566: aload         24
568: invokestatic  #15
571: aload         25
573: invokestatic  #15
576: aload         26
578: invokestatic  #15
581: new           #16
584: dup
585: invokespecial #17
588: ldc           #18
590: invokevirtual #19
593: iload         27
595: invokevirtual #20
598: ldc           #21
600: invokevirtual #19
603: iconst_0
604: invokevirtual #20
607: ldc           #18
609: invokevirtual #19
612: invokevirtual #22
615: iload         27
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #23
628: aload         28
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         29
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         29
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: aload         30
682: invokestatic  #15
685: aload         31
687: invokestatic  #15
690: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test178
Start line: 9040
End line: 9089
Method source code: 
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        org.jsoup.nodes.Element element38 = document25.appendText(".[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]");
        org.jsoup.nodes.Element element39 = document25.empty();
        org.jsoup.nodes.Document document40 = element39.ownerDocument();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(document40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #661
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: aload         13
204: ldc           #208
206: invokevirtual #209
209: astore        22
211: aload         13
213: invokevirtual #103
216: astore        23
218: aload         23
220: invokevirtual #662
223: astore        24
225: aload_1
226: invokestatic  #15
229: aload_2
230: invokestatic  #15
233: aload         5
235: invokestatic  #15
238: aload         6
240: invokestatic  #15
243: aload         7
245: invokestatic  #15
248: aload         8
250: invokestatic  #15
253: aload         9
255: invokestatic  #15
258: aload         10
260: invokestatic  #15
263: new           #16
266: dup
267: invokespecial #17
270: ldc           #18
272: invokevirtual #19
275: iload         11
277: invokevirtual #20
280: ldc           #21
282: invokevirtual #19
285: iconst_0
286: invokevirtual #20
289: ldc           #18
291: invokevirtual #19
294: invokevirtual #22
297: iload         11
299: ifne          306
302: iconst_1
303: goto          307
306: iconst_0
307: invokestatic  #23
310: aload         12
312: invokestatic  #15
315: aload         13
317: invokestatic  #15
320: aload         14
322: invokestatic  #15
325: aload         15
327: invokestatic  #15
330: aload         16
332: invokestatic  #15
335: new           #16
338: dup
339: invokespecial #17
342: ldc           #18
344: invokevirtual #19
347: aload         17
349: invokevirtual #19
352: ldc           #78
354: invokevirtual #19
357: invokevirtual #22
360: aload         17
362: ldc           #10
364: invokestatic  #68
367: new           #16
370: dup
371: invokespecial #17
374: ldc           #18
376: invokevirtual #19
379: aload         18
381: invokevirtual #19
384: ldc           #67
386: invokevirtual #19
389: invokevirtual #22
392: aload         18
394: ldc           #25
396: invokestatic  #68
399: aload         19
401: invokestatic  #79
404: aload         20
406: invokestatic  #15
409: aload         21
411: invokestatic  #15
414: aload         22
416: invokestatic  #15
419: aload         23
421: invokestatic  #15
424: aload         24
426: invokestatic  #15
429: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test179
Start line: 9092
End line: 9143
Method source code: 
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = document25.outputSettings();
        org.jsoup.select.Elements elements34 = document25.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element36 = document25.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes37 = document25.attributes();
        org.jsoup.nodes.Element element39 = document25.prepend("[^hi!]");
        org.jsoup.nodes.Element element41 = document25.html("[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]");
        org.jsoup.nodes.Document document42 = document25.normalise();
        org.jsoup.nodes.Document document43 = cleaner3.clean(document42);
        org.jsoup.nodes.Document document44 = document43.ownerDocument();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(outputSettings32);
        org.junit.Assert.assertNotNull(elements34);
        org.junit.Assert.assertNull(element36);
        org.junit.Assert.assertNotNull(attributes37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document44);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #663
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #30
171: astore        17
173: aload         13
175: iconst_m1
176: invokevirtual #162
179: astore        18
181: aload         13
183: ldc           #10
185: invokevirtual #163
188: astore        19
190: aload         13
192: invokevirtual #164
195: astore        20
197: aload         13
199: ldc           #50
201: invokevirtual #165
204: astore        21
206: aload         13
208: ldc           #228
210: invokevirtual #115
213: astore        22
215: aload         13
217: invokevirtual #102
220: astore        23
222: aload_3
223: aload         23
225: invokevirtual #47
228: astore        24
230: aload         24
232: invokevirtual #664
235: astore        25
237: aload_1
238: invokestatic  #15
241: aload_2
242: invokestatic  #15
245: aload         5
247: invokestatic  #15
250: aload         6
252: invokestatic  #15
255: aload         7
257: invokestatic  #15
260: aload         8
262: invokestatic  #15
265: aload         9
267: invokestatic  #15
270: aload         10
272: invokestatic  #15
275: new           #16
278: dup
279: invokespecial #17
282: ldc           #18
284: invokevirtual #19
287: iload         11
289: invokevirtual #20
292: ldc           #21
294: invokevirtual #19
297: iconst_0
298: invokevirtual #20
301: ldc           #18
303: invokevirtual #19
306: invokevirtual #22
309: iload         11
311: ifne          318
314: iconst_1
315: goto          319
318: iconst_0
319: invokestatic  #23
322: aload         12
324: invokestatic  #15
327: aload         13
329: invokestatic  #15
332: aload         14
334: invokestatic  #15
337: aload         15
339: invokestatic  #15
342: aload         16
344: invokestatic  #15
347: aload         17
349: invokestatic  #15
352: aload         18
354: invokestatic  #15
357: aload         19
359: invokestatic  #79
362: aload         20
364: invokestatic  #15
367: aload         21
369: invokestatic  #15
372: aload         22
374: invokestatic  #15
377: aload         23
379: invokestatic  #15
382: aload         24
384: invokestatic  #15
387: aload         25
389: invokestatic  #15
392: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test180
Start line: 9146
End line: 9231
Method source code: 
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        org.jsoup.select.Evaluator.AttributeWithValueStarting attributeWithValueStarting2 = new org.jsoup.select.Evaluator.AttributeWithValueStarting("<html>\n <head></head>\n <body></body>\n</html>", "<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = element9.toggleClass("#document");
        org.jsoup.nodes.Element element13 = element11.tagName("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parseBodyFragment("");
        boolean boolean16 = attributeWithValueStarting2.matches(element11, (org.jsoup.nodes.Element) document15);
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes23 = whitelist21.getEnforcedAttributes("#text");
        java.lang.String str24 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist21);
        java.lang.String str25 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist21);
        org.jsoup.select.Evaluator.Class class28 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        org.jsoup.select.Elements elements41 = document32.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element43 = document32.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes44 = document32.attributes();
        org.jsoup.nodes.Element element46 = document32.prepend("[^hi!]");
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList52 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document50, "hi!");
        org.jsoup.nodes.Element element54 = document50.tagName("hi!");
        org.jsoup.nodes.Element element56 = document50.append("");
        org.jsoup.nodes.Element element59 = document50.attr("#document", "#document");
        org.jsoup.nodes.Element element60 = document50.body();
        boolean boolean61 = class28.matches((org.jsoup.nodes.Element) document32, (org.jsoup.nodes.Element) document50);
        org.jsoup.nodes.Attribute attribute64 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean65 = whitelist21.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document32, attribute64);
        org.jsoup.nodes.Document document68 = org.jsoup.parser.Parser.parseBodyFragment(":gt(100)", "");
        org.jsoup.nodes.Document document72 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document72, "hi!");
        org.jsoup.nodes.Element element76 = document72.tagName("hi!");
        org.jsoup.nodes.Element element78 = document72.append("");
        org.jsoup.nodes.Element element80 = document72.toggleClass("#document");
        java.lang.String str81 = document72.title();
        org.jsoup.nodes.Element element82 = document72.head();
        org.jsoup.nodes.Element element83 = document68.appendChild((org.jsoup.nodes.Node) element82);
        boolean boolean84 = attributeWithValueStarting2.matches((org.jsoup.nodes.Element) document32, element82);
        java.lang.String str85 = document32.title();
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(attributes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[    ^=hi!]" + "'", str25, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(elements41);
        org.junit.Assert.assertNull(element43);
        org.junit.Assert.assertNotNull(attributes44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(attribute64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(document68);
        org.junit.Assert.assertNotNull(document72);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNotNull(element78);
        org.junit.Assert.assertNotNull(element80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #665
20: aastore
21: invokevirtual #7
24: pop
25: new           #253
28: dup
29: ldc           #10
31: ldc           #254
33: invokespecial #255
36: astore_1
37: ldc           #25
39: ldc           #12
41: invokestatic  #26
44: astore_2
45: ldc           #12
47: aload_2
48: ldc           #12
50: invokestatic  #27
53: astore_3
54: aload_2
55: invokevirtual #103
58: astore        4
60: aload         4
62: ldc           #13
64: invokevirtual #177
67: astore        5
69: aload         5
71: ldc           #249
73: invokevirtual #256
76: astore        6
78: ldc           #25
80: invokestatic  #193
83: astore        7
85: aload_1
86: aload         5
88: aload         7
90: invokevirtual #257
93: istore        8
95: invokestatic  #118
98: astore        9
100: aload         9
102: ldc           #51
104: invokevirtual #150
107: astore        10
109: ldc           #25
111: ldc           #157
113: aload         9
115: invokestatic  #94
118: astore        11
120: ldc           #158
122: ldc           #159
124: aload         9
126: invokestatic  #94
129: astore        12
131: new           #160
134: dup
135: ldc           #10
137: invokespecial #161
140: astore        13
142: ldc           #25
144: ldc           #12
146: invokestatic  #26
149: astore        14
151: ldc           #12
153: aload         14
155: ldc           #12
157: invokestatic  #27
160: astore        15
162: aload         14
164: ldc           #12
166: invokevirtual #28
169: astore        16
171: aload         14
173: ldc           #25
175: invokevirtual #29
178: astore        17
180: aload         14
182: invokevirtual #30
185: astore        18
187: aload         14
189: iconst_m1
190: invokevirtual #162
193: astore        19
195: aload         14
197: ldc           #10
199: invokevirtual #163
202: astore        20
204: aload         14
206: invokevirtual #164
209: astore        21
211: aload         14
213: ldc           #50
215: invokevirtual #165
218: astore        22
220: ldc           #25
222: ldc           #12
224: invokestatic  #26
227: astore        23
229: ldc           #12
231: aload         23
233: ldc           #12
235: invokestatic  #27
238: astore        24
240: aload         23
242: ldc           #12
244: invokevirtual #28
247: astore        25
249: aload         23
251: ldc           #25
253: invokevirtual #29
256: astore        26
258: aload         23
260: ldc           #13
262: ldc           #13
264: invokevirtual #56
267: astore        27
269: aload         23
271: invokevirtual #166
274: astore        28
276: aload         13
278: aload         14
280: aload         23
282: invokevirtual #167
285: istore        29
287: ldc           #114
289: ldc           #25
291: invokestatic  #168
294: astore        30
296: aload         9
298: ldc           #110
300: aload         14
302: aload         30
304: invokevirtual #169
307: istore        31
309: ldc           #92
311: ldc           #25
313: invokestatic  #52
316: astore        32
318: ldc           #25
320: ldc           #12
322: invokestatic  #26
325: astore        33
327: ldc           #12
329: aload         33
331: ldc           #12
333: invokestatic  #27
336: astore        34
338: aload         33
340: ldc           #12
342: invokevirtual #28
345: astore        35
347: aload         33
349: ldc           #25
351: invokevirtual #29
354: astore        36
356: aload         33
358: ldc           #13
360: invokevirtual #199
363: astore        37
365: aload         33
367: invokevirtual #448
370: astore        38
372: aload         33
374: invokevirtual #200
377: astore        39
379: aload         32
381: aload         39
383: invokevirtual #666
386: astore        40
388: aload_1
389: aload         14
391: aload         39
393: invokevirtual #257
396: istore        41
398: aload         14
400: invokevirtual #448
403: astore        42
405: aload_2
406: invokestatic  #15
409: aload_3
410: invokestatic  #15
413: aload         4
415: invokestatic  #15
418: aload         5
420: invokestatic  #15
423: aload         6
425: invokestatic  #15
428: aload         7
430: invokestatic  #15
433: new           #16
436: dup
437: invokespecial #17
440: ldc           #18
442: invokevirtual #19
445: iload         8
447: invokevirtual #20
450: ldc           #21
452: invokevirtual #19
455: iconst_0
456: invokevirtual #20
459: ldc           #18
461: invokevirtual #19
464: invokevirtual #22
467: iload         8
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #23
480: aload         9
482: invokestatic  #15
485: aload         10
487: invokestatic  #15
490: new           #16
493: dup
494: invokespecial #17
497: ldc           #18
499: invokevirtual #19
502: aload         11
504: invokevirtual #19
507: ldc           #67
509: invokevirtual #19
512: invokevirtual #22
515: aload         11
517: ldc           #25
519: invokestatic  #68
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: aload         12
536: invokevirtual #19
539: ldc           #172
541: invokevirtual #19
544: invokevirtual #22
547: aload         12
549: ldc           #173
551: invokestatic  #68
554: aload         14
556: invokestatic  #15
559: aload         15
561: invokestatic  #15
564: aload         16
566: invokestatic  #15
569: aload         17
571: invokestatic  #15
574: aload         18
576: invokestatic  #15
579: aload         19
581: invokestatic  #15
584: aload         20
586: invokestatic  #79
589: aload         21
591: invokestatic  #15
594: aload         22
596: invokestatic  #15
599: aload         23
601: invokestatic  #15
604: aload         24
606: invokestatic  #15
609: aload         25
611: invokestatic  #15
614: aload         26
616: invokestatic  #15
619: aload         27
621: invokestatic  #15
624: aload         28
626: invokestatic  #15
629: new           #16
632: dup
633: invokespecial #17
636: ldc           #18
638: invokevirtual #19
641: iload         29
643: invokevirtual #20
646: ldc           #21
648: invokevirtual #19
651: iconst_0
652: invokevirtual #20
655: ldc           #18
657: invokevirtual #19
660: invokevirtual #22
663: iload         29
665: ifne          672
668: iconst_1
669: goto          673
672: iconst_0
673: invokestatic  #23
676: aload         30
678: invokestatic  #15
681: new           #16
684: dup
685: invokespecial #17
688: ldc           #18
690: invokevirtual #19
693: iload         31
695: invokevirtual #20
698: ldc           #21
700: invokevirtual #19
703: iconst_0
704: invokevirtual #20
707: ldc           #18
709: invokevirtual #19
712: invokevirtual #22
715: iload         31
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #23
728: aload         32
730: invokestatic  #15
733: aload         33
735: invokestatic  #15
738: aload         34
740: invokestatic  #15
743: aload         35
745: invokestatic  #15
748: aload         36
750: invokestatic  #15
753: aload         37
755: invokestatic  #15
758: new           #16
761: dup
762: invokespecial #17
765: ldc           #18
767: invokevirtual #19
770: aload         38
772: invokevirtual #19
775: ldc           #67
777: invokevirtual #19
780: invokevirtual #22
783: aload         38
785: ldc           #25
787: invokestatic  #68
790: aload         39
792: invokestatic  #15
795: aload         40
797: invokestatic  #15
800: new           #16
803: dup
804: invokespecial #17
807: ldc           #18
809: invokevirtual #19
812: iload         41
814: invokevirtual #20
817: ldc           #21
819: invokevirtual #19
822: iconst_0
823: invokevirtual #20
826: ldc           #18
828: invokevirtual #19
831: invokevirtual #22
834: iload         41
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #23
847: new           #16
850: dup
851: invokespecial #17
854: ldc           #18
856: invokevirtual #19
859: aload         42
861: invokevirtual #19
864: ldc           #67
866: invokevirtual #19
869: invokevirtual #22
872: aload         42
874: ldc           #25
876: invokestatic  #68
879: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test181
Start line: 9234
End line: 9263
Method source code: 
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist2.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = outputSettings19.prettyPrint(false);
        boolean boolean22 = outputSettings21.prettyPrint();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = outputSettings21.prettyPrint(false);
        java.nio.charset.Charset charset25 = outputSettings21.charset();
        java.lang.String str26 = org.jsoup.Jsoup.clean("[<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>^=.[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]]", ":lt(10)", whitelist8, outputSettings21);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(outputSettings21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(charset25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[\n \n \n  [^hi!]\n \n^=.[\n\n \n \n^=hi!]]" + "'", str26, "[\n \n \n  [^hi!]\n \n^=.[\n\n \n \n^=hi!]]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #667
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: ldc           #25
48: ldc           #12
50: invokestatic  #26
53: astore        4
55: ldc           #12
57: aload         4
59: ldc           #12
61: invokestatic  #27
64: astore        5
66: aload         4
68: ldc           #12
70: invokevirtual #28
73: astore        6
75: aload         4
77: ldc           #25
79: invokevirtual #29
82: astore        7
84: aload         4
86: invokevirtual #30
89: astore        8
91: aload         8
93: iconst_0
94: invokevirtual #31
97: astore        9
99: aload         9
101: invokevirtual #461
104: istore        10
106: aload         9
108: iconst_0
109: invokevirtual #31
112: astore        11
114: aload         9
116: invokevirtual #460
119: astore        12
121: ldc_w         #668
124: ldc_w         #669
127: aload_3
128: aload         9
130: invokestatic  #33
133: astore        13
135: aload_1
136: invokestatic  #15
139: aload_2
140: invokestatic  #15
143: aload_3
144: invokestatic  #15
147: aload         4
149: invokestatic  #15
152: aload         5
154: invokestatic  #15
157: aload         6
159: invokestatic  #15
162: aload         7
164: invokestatic  #15
167: aload         8
169: invokestatic  #15
172: aload         9
174: invokestatic  #15
177: new           #16
180: dup
181: invokespecial #17
184: ldc           #18
186: invokevirtual #19
189: iload         10
191: invokevirtual #20
194: ldc           #21
196: invokevirtual #19
199: iconst_0
200: invokevirtual #20
203: ldc           #18
205: invokevirtual #19
208: invokevirtual #22
211: iload         10
213: ifne          220
216: iconst_1
217: goto          221
220: iconst_0
221: invokestatic  #23
224: aload         11
226: invokestatic  #15
229: aload         12
231: invokestatic  #15
234: new           #16
237: dup
238: invokespecial #17
241: ldc           #18
243: invokevirtual #19
246: aload         13
248: invokevirtual #19
251: ldc_w         #670
254: invokevirtual #19
257: invokevirtual #22
260: aload         13
262: ldc_w         #671
265: invokestatic  #68
268: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test182
Start line: 9266
End line: 9347
Method source code: 
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining2 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        boolean boolean16 = attributeWithValueContaining2.matches((org.jsoup.nodes.Element) document4, (org.jsoup.nodes.Element) document8);
        org.jsoup.nodes.Element element18 = document8.toggleClass("#doctype");
        org.jsoup.nodes.Element element19 = document8.head();
        org.jsoup.select.Elements elements21 = document8.getElementsByAttributeStarting(":gt(100)");
        int int22 = document8.siblingIndex();
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner26 = new org.jsoup.safety.Cleaner(whitelist25);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining29 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document31 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = document35.outputSettings();
        boolean boolean43 = attributeWithValueContaining29.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document35);
        org.jsoup.nodes.Document document44 = cleaner26.clean(document35);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan46 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document49 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str50 = document49.ownText();
        org.jsoup.nodes.Node node53 = document49.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element68 = document57.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element70 = document57.createElement(" hi!");
        org.jsoup.select.Elements elements72 = document57.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean73 = indexLessThan46.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document74 = cleaner26.clean(document57);
        boolean boolean75 = document8.equals((java.lang.Object) document74);
        org.jsoup.select.Elements elements77 = document74.getElementsContainingOwnText("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(elements21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(elements72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(document74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(elements77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #672
20: aastore
21: invokevirtual #7
24: pop
25: new           #42
28: dup
29: ldc           #43
31: ldc           #32
33: invokespecial #44
36: astore_1
37: ldc           #12
39: invokestatic  #45
42: astore_2
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore_3
51: ldc           #12
53: aload_3
54: ldc           #12
56: invokestatic  #27
59: astore        4
61: aload_3
62: ldc           #12
64: invokevirtual #28
67: astore        5
69: aload_3
70: ldc           #25
72: invokevirtual #29
75: astore        6
77: aload_3
78: invokevirtual #30
81: astore        7
83: aload_1
84: aload_2
85: aload_3
86: invokevirtual #46
89: istore        8
91: aload_3
92: ldc           #187
94: invokevirtual #199
97: astore        9
99: aload_3
100: invokevirtual #200
103: astore        10
105: aload_3
106: ldc           #92
108: invokevirtual #140
111: astore        11
113: aload_3
114: invokevirtual #201
117: istore        12
119: invokestatic  #8
122: astore        13
124: aload         13
126: iconst_1
127: invokevirtual #9
130: astore        14
132: new           #40
135: dup
136: aload         14
138: invokespecial #41
141: astore        15
143: new           #42
146: dup
147: ldc           #43
149: ldc           #32
151: invokespecial #44
154: astore        16
156: ldc           #12
158: invokestatic  #45
161: astore        17
163: ldc           #25
165: ldc           #12
167: invokestatic  #26
170: astore        18
172: ldc           #12
174: aload         18
176: ldc           #12
178: invokestatic  #27
181: astore        19
183: aload         18
185: ldc           #12
187: invokevirtual #28
190: astore        20
192: aload         18
194: ldc           #25
196: invokevirtual #29
199: astore        21
201: aload         18
203: invokevirtual #30
206: astore        22
208: aload         16
210: aload         17
212: aload         18
214: invokevirtual #46
217: istore        23
219: aload         15
221: aload         18
223: invokevirtual #47
226: astore        24
228: new           #48
231: dup
232: iconst_m1
233: invokespecial #49
236: astore        25
238: ldc           #50
240: ldc           #51
242: invokestatic  #52
245: astore        26
247: aload         26
249: invokevirtual #53
252: astore        27
254: aload         26
256: ldc           #54
258: ldc           #55
260: invokevirtual #56
263: astore        28
265: ldc           #25
267: ldc           #12
269: invokestatic  #26
272: astore        29
274: ldc           #12
276: aload         29
278: ldc           #12
280: invokestatic  #27
283: astore        30
285: aload         29
287: ldc           #12
289: invokevirtual #28
292: astore        31
294: aload         29
296: ldc           #25
298: invokevirtual #29
301: astore        32
303: aload         29
305: invokevirtual #30
308: astore        33
310: aload         29
312: ldc           #12
314: invokevirtual #57
317: astore        34
319: aload         29
321: ldc           #58
323: invokevirtual #59
326: astore        35
328: aload         29
330: ldc           #60
332: invokevirtual #61
335: astore        36
337: aload         29
339: ldc           #38
341: invokevirtual #62
344: astore        37
346: aload         25
348: aload         26
350: aload         29
352: invokevirtual #63
355: istore        38
357: aload         15
359: aload         29
361: invokevirtual #47
364: astore        39
366: aload_3
367: aload         39
369: invokevirtual #202
372: istore        40
374: aload         39
376: ldc           #82
378: invokevirtual #62
381: astore        41
383: aload_2
384: invokestatic  #15
387: aload_3
388: invokestatic  #15
391: aload         4
393: invokestatic  #15
396: aload         5
398: invokestatic  #15
401: aload         6
403: invokestatic  #15
406: aload         7
408: invokestatic  #15
411: new           #16
414: dup
415: invokespecial #17
418: ldc           #18
420: invokevirtual #19
423: iload         8
425: invokevirtual #20
428: ldc           #21
430: invokevirtual #19
433: iconst_0
434: invokevirtual #20
437: ldc           #18
439: invokevirtual #19
442: invokevirtual #22
445: iload         8
447: ifne          454
450: iconst_1
451: goto          455
454: iconst_0
455: invokestatic  #23
458: aload         9
460: invokestatic  #15
463: aload         10
465: invokestatic  #15
468: aload         11
470: invokestatic  #15
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: iload         12
487: invokevirtual #134
490: ldc           #21
492: invokevirtual #19
495: iconst_0
496: invokevirtual #134
499: ldc           #18
501: invokevirtual #19
504: invokevirtual #22
507: iload         12
509: ifne          516
512: iconst_1
513: goto          517
516: iconst_0
517: invokestatic  #23
520: aload         13
522: invokestatic  #15
525: aload         14
527: invokestatic  #15
530: aload         17
532: invokestatic  #15
535: aload         18
537: invokestatic  #15
540: aload         19
542: invokestatic  #15
545: aload         20
547: invokestatic  #15
550: aload         21
552: invokestatic  #15
555: aload         22
557: invokestatic  #15
560: new           #16
563: dup
564: invokespecial #17
567: ldc           #18
569: invokevirtual #19
572: iload         23
574: invokevirtual #20
577: ldc           #21
579: invokevirtual #19
582: iconst_0
583: invokevirtual #20
586: ldc           #18
588: invokevirtual #19
591: invokevirtual #22
594: iload         23
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #23
607: aload         24
609: invokestatic  #15
612: aload         26
614: invokestatic  #15
617: new           #16
620: dup
621: invokespecial #17
624: ldc           #18
626: invokevirtual #19
629: aload         27
631: invokevirtual #19
634: ldc           #67
636: invokevirtual #19
639: invokevirtual #22
642: aload         27
644: ldc           #25
646: invokestatic  #68
649: aload         28
651: invokestatic  #15
654: aload         29
656: invokestatic  #15
659: aload         30
661: invokestatic  #15
664: aload         31
666: invokestatic  #15
669: aload         32
671: invokestatic  #15
674: aload         33
676: invokestatic  #15
679: aload         34
681: invokestatic  #15
684: aload         35
686: invokestatic  #15
689: aload         36
691: invokestatic  #15
694: aload         37
696: invokestatic  #15
699: new           #16
702: dup
703: invokespecial #17
706: ldc           #18
708: invokevirtual #19
711: iload         38
713: invokevirtual #20
716: ldc           #21
718: invokevirtual #19
721: iconst_0
722: invokevirtual #20
725: ldc           #18
727: invokevirtual #19
730: invokevirtual #22
733: iload         38
735: ifne          742
738: iconst_1
739: goto          743
742: iconst_0
743: invokestatic  #23
746: aload         39
748: invokestatic  #15
751: new           #16
754: dup
755: invokespecial #17
758: ldc           #18
760: invokevirtual #19
763: iload         40
765: invokevirtual #20
768: ldc           #21
770: invokevirtual #19
773: iconst_0
774: invokevirtual #20
777: ldc           #18
779: invokevirtual #19
782: invokevirtual #22
785: iload         40
787: ifne          794
790: iconst_1
791: goto          795
794: iconst_0
795: invokestatic  #23
798: aload         41
800: invokestatic  #15
803: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test183
Start line: 9350
End line: 9416
Method source code: 
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist0.addEnforcedAttribute(":eq(1)", "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", ".\n<!---->");
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str13 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist12);
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str24 = org.jsoup.Jsoup.clean(":lt(32)", whitelist23);
        org.jsoup.safety.Whitelist whitelist28 = whitelist23.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray35 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist36 = whitelist23.addTags(strArray35);
        org.jsoup.safety.Whitelist whitelist37 = whitelist19.addProtocols(":matchesOwn(null", "hi!", strArray35);
        org.jsoup.safety.Whitelist whitelist38 = whitelist12.addAttributes("[^hi!]", strArray35);
        org.jsoup.safety.Whitelist whitelist42 = whitelist12.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.safety.Whitelist whitelist45 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist47 = whitelist45.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist49 = whitelist47.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist53 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str54 = org.jsoup.Jsoup.clean(":lt(32)", whitelist53);
        org.jsoup.safety.Whitelist whitelist58 = whitelist53.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray65 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist66 = whitelist53.addTags(strArray65);
        org.jsoup.safety.Whitelist whitelist67 = whitelist49.addProtocols(":matchesOwn(null", "hi!", strArray65);
        java.lang.String[] strArray76 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean77 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray76);
        org.jsoup.safety.Whitelist whitelist78 = whitelist67.addProtocols("\n<!--hi!-->", "#document", strArray76);
        org.jsoup.safety.Whitelist whitelist79 = whitelist12.addProtocols("<html>\n <head></head>\n <body>\n </body>\n</html>", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]", strArray76);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray76, "[:gt(100)]=\"\"");
        boolean boolean82 = org.jsoup.helper.StringUtil.in("", strArray76);
        org.jsoup.safety.Whitelist whitelist83 = whitelist6.addProtocols("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[hi!$=hi!]", strArray76);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!$=   ]" + "'", str13, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":lt(32)" + "'", str24, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ":lt(32)" + "'", str54, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(whitelist78);
        org.junit.Assert.assertNotNull(whitelist79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(whitelist83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #673
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc_w         #279
39: ldc           #82
41: ldc           #145
43: invokevirtual #11
46: astore_3
47: invokestatic  #8
50: astore        4
52: ldc           #109
54: ldc           #110
56: aload         4
58: invokestatic  #94
61: astore        5
63: invokestatic  #8
66: astore        6
68: aload         6
70: iconst_1
71: invokevirtual #9
74: astore        7
76: aload         7
78: iconst_0
79: invokevirtual #9
82: astore        8
84: invokestatic  #118
87: astore        9
89: ldc           #43
91: aload         9
93: invokestatic  #81
96: astore        10
98: aload         9
100: ldc           #43
102: ldc           #12
104: ldc           #32
106: invokevirtual #11
109: astore        11
111: bipush        6
113: anewarray     #119
116: dup
117: iconst_0
118: ldc           #109
120: aastore
121: dup
122: iconst_1
123: ldc           #10
125: aastore
126: dup
127: iconst_2
128: ldc           #13
130: aastore
131: dup
132: iconst_3
133: ldc           #50
135: aastore
136: dup
137: iconst_4
138: ldc           #12
140: aastore
141: dup
142: iconst_5
143: ldc           #120
145: aastore
146: astore        12
148: aload         9
150: aload         12
152: invokevirtual #121
155: astore        13
157: aload         8
159: ldc           #38
161: ldc           #12
163: aload         12
165: invokevirtual #122
168: astore        14
170: aload         4
172: ldc           #50
174: aload         12
176: invokevirtual #127
179: astore        15
181: aload         4
183: ldc           #126
185: ldc           #109
187: ldc           #120
189: invokevirtual #11
192: astore        16
194: invokestatic  #8
197: astore        17
199: aload         17
201: iconst_1
202: invokevirtual #9
205: astore        18
207: aload         18
209: iconst_0
210: invokevirtual #9
213: astore        19
215: invokestatic  #118
218: astore        20
220: ldc           #43
222: aload         20
224: invokestatic  #81
227: astore        21
229: aload         20
231: ldc           #43
233: ldc           #12
235: ldc           #32
237: invokevirtual #11
240: astore        22
242: bipush        6
244: anewarray     #119
247: dup
248: iconst_0
249: ldc           #109
251: aastore
252: dup
253: iconst_1
254: ldc           #10
256: aastore
257: dup
258: iconst_2
259: ldc           #13
261: aastore
262: dup
263: iconst_3
264: ldc           #50
266: aastore
267: dup
268: iconst_4
269: ldc           #12
271: aastore
272: dup
273: iconst_5
274: ldc           #120
276: aastore
277: astore        23
279: aload         20
281: aload         23
283: invokevirtual #121
286: astore        24
288: aload         19
290: ldc           #38
292: ldc           #12
294: aload         23
296: invokevirtual #122
299: astore        25
301: iconst_5
302: anewarray     #119
305: dup
306: iconst_0
307: ldc           #13
309: aastore
310: dup
311: iconst_1
312: ldc           #32
314: aastore
315: dup
316: iconst_2
317: ldc           #10
319: aastore
320: dup
321: iconst_3
322: ldc           #43
324: aastore
325: dup
326: iconst_4
327: ldc           #58
329: aastore
330: astore        26
332: ldc           #10
334: aload         26
336: invokestatic  #123
339: istore        27
341: aload         25
343: ldc           #84
345: ldc           #13
347: aload         26
349: invokevirtual #122
352: astore        28
354: aload         4
356: ldc           #157
358: ldc_w         #273
361: aload         26
363: invokevirtual #122
366: astore        29
368: aload         26
370: checkcast     #124
373: ldc_w         #323
376: invokestatic  #245
379: ldc           #25
381: aload         26
383: invokestatic  #123
386: istore        30
388: aload_3
389: ldc           #158
391: ldc_w         #615
394: aload         26
396: invokevirtual #122
399: astore        31
401: aload_1
402: invokestatic  #15
405: aload_2
406: invokestatic  #15
409: aload_3
410: invokestatic  #15
413: aload         4
415: invokestatic  #15
418: new           #16
421: dup
422: invokespecial #17
425: ldc           #18
427: invokevirtual #19
430: aload         5
432: invokevirtual #19
435: ldc           #111
437: invokevirtual #19
440: invokevirtual #22
443: aload         5
445: ldc           #65
447: invokestatic  #68
450: aload         6
452: invokestatic  #15
455: aload         7
457: invokestatic  #15
460: aload         8
462: invokestatic  #15
465: aload         9
467: invokestatic  #15
470: new           #16
473: dup
474: invokespecial #17
477: ldc           #18
479: invokevirtual #19
482: aload         10
484: invokevirtual #19
487: ldc           #128
489: invokevirtual #19
492: invokevirtual #22
495: aload         10
497: ldc           #43
499: invokestatic  #68
502: aload         11
504: invokestatic  #15
507: aload         12
509: invokestatic  #15
512: aload         13
514: invokestatic  #15
517: aload         14
519: invokestatic  #15
522: aload         15
524: invokestatic  #15
527: aload         16
529: invokestatic  #15
532: aload         17
534: invokestatic  #15
537: aload         18
539: invokestatic  #15
542: aload         19
544: invokestatic  #15
547: aload         20
549: invokestatic  #15
552: new           #16
555: dup
556: invokespecial #17
559: ldc           #18
561: invokevirtual #19
564: aload         21
566: invokevirtual #19
569: ldc           #128
571: invokevirtual #19
574: invokevirtual #22
577: aload         21
579: ldc           #43
581: invokestatic  #68
584: aload         22
586: invokestatic  #15
589: aload         23
591: invokestatic  #15
594: aload         24
596: invokestatic  #15
599: aload         25
601: invokestatic  #15
604: aload         26
606: invokestatic  #15
609: new           #16
612: dup
613: invokespecial #17
616: ldc           #18
618: invokevirtual #19
621: iload         27
623: invokevirtual #20
626: ldc           #21
628: invokevirtual #19
631: iconst_1
632: invokevirtual #20
635: ldc           #18
637: invokevirtual #19
640: invokevirtual #22
643: iload         27
645: iconst_1
646: if_icmpne     653
649: iconst_1
650: goto          654
653: iconst_0
654: invokestatic  #23
657: aload         28
659: invokestatic  #15
662: aload         29
664: invokestatic  #15
667: new           #16
670: dup
671: invokespecial #17
674: ldc           #18
676: invokevirtual #19
679: iload         30
681: invokevirtual #20
684: ldc           #21
686: invokevirtual #19
689: iconst_0
690: invokevirtual #20
693: ldc           #18
695: invokevirtual #19
698: invokevirtual #22
701: iload         30
703: ifne          710
706: iconst_1
707: goto          711
710: iconst_0
711: invokestatic  #23
714: aload         31
716: invokestatic  #15
719: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test184
Start line: 9419
End line: 9450
Method source code: 
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str4 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist3);
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist8 = whitelist6.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist10 = whitelist8.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str15 = org.jsoup.Jsoup.clean(":lt(32)", whitelist14);
        org.jsoup.safety.Whitelist whitelist19 = whitelist14.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray26 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist27 = whitelist14.addTags(strArray26);
        org.jsoup.safety.Whitelist whitelist28 = whitelist10.addProtocols(":matchesOwn(null", "hi!", strArray26);
        org.jsoup.safety.Whitelist whitelist29 = whitelist3.addAttributes("[^hi!]", strArray26);
        org.jsoup.safety.Whitelist whitelist33 = whitelist3.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        java.lang.String str34 = org.jsoup.Jsoup.clean("<<html>\n <head></head>\n <body></body>\n</html>></<html>\n <head></head>\n <body></body>\n</html>><html><head><title>hi&excl;</title></head><body></body></html>", whitelist33);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[hi!$=   ]" + "'", str4, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":lt(32)" + "'", str15, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "&lt;   &gt;   &gt;hi!" + "'", str34, "&lt;   &gt;   &gt;hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #674
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: invokestatic  #8
41: astore_3
42: aload_3
43: iconst_1
44: invokevirtual #9
47: astore        4
49: aload         4
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #118
60: astore        6
62: ldc           #43
64: aload         6
66: invokestatic  #81
69: astore        7
71: aload         6
73: ldc           #43
75: ldc           #12
77: ldc           #32
79: invokevirtual #11
82: astore        8
84: bipush        6
86: anewarray     #119
89: dup
90: iconst_0
91: ldc           #109
93: aastore
94: dup
95: iconst_1
96: ldc           #10
98: aastore
99: dup
100: iconst_2
101: ldc           #13
103: aastore
104: dup
105: iconst_3
106: ldc           #50
108: aastore
109: dup
110: iconst_4
111: ldc           #12
113: aastore
114: dup
115: iconst_5
116: ldc           #120
118: aastore
119: astore        9
121: aload         6
123: aload         9
125: invokevirtual #121
128: astore        10
130: aload         5
132: ldc           #38
134: ldc           #12
136: aload         9
138: invokevirtual #122
141: astore        11
143: aload_1
144: ldc           #50
146: aload         9
148: invokevirtual #127
151: astore        12
153: aload_1
154: ldc           #126
156: ldc           #109
158: ldc           #120
160: invokevirtual #11
163: astore        13
165: ldc_w         #620
168: aload         13
170: invokestatic  #81
173: astore        14
175: aload_1
176: invokestatic  #15
179: new           #16
182: dup
183: invokespecial #17
186: ldc           #18
188: invokevirtual #19
191: aload_2
192: invokevirtual #19
195: ldc           #111
197: invokevirtual #19
200: invokevirtual #22
203: aload_2
204: ldc           #65
206: invokestatic  #68
209: aload_3
210: invokestatic  #15
213: aload         4
215: invokestatic  #15
218: aload         5
220: invokestatic  #15
223: aload         6
225: invokestatic  #15
228: new           #16
231: dup
232: invokespecial #17
235: ldc           #18
237: invokevirtual #19
240: aload         7
242: invokevirtual #19
245: ldc           #128
247: invokevirtual #19
250: invokevirtual #22
253: aload         7
255: ldc           #43
257: invokestatic  #68
260: aload         8
262: invokestatic  #15
265: aload         9
267: invokestatic  #15
270: aload         10
272: invokestatic  #15
275: aload         11
277: invokestatic  #15
280: aload         12
282: invokestatic  #15
285: aload         13
287: invokestatic  #15
290: new           #16
293: dup
294: invokespecial #17
297: ldc           #18
299: invokevirtual #19
302: aload         14
304: invokevirtual #19
307: ldc_w         #675
310: invokevirtual #19
313: invokevirtual #22
316: aload         14
318: ldc_w         #676
321: invokestatic  #68
324: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test185
Start line: 9453
End line: 9507
Method source code: 
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean2 = tag1.isBlock();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = element9.toggleClass("#document");
        org.jsoup.select.Elements elements13 = element11.getElementsByAttributeStarting(":lt(32)");
        org.jsoup.select.Elements elements15 = element11.getElementsByClass("[:lt(32)]");
        boolean boolean16 = tag1.equals((java.lang.Object) elements15);
        boolean boolean17 = tag1.preserveWhitespace();
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str22 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist21);
        org.jsoup.safety.Whitelist whitelist24 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist32 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str33 = org.jsoup.Jsoup.clean(":lt(32)", whitelist32);
        org.jsoup.safety.Whitelist whitelist37 = whitelist32.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray44 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist45 = whitelist32.addTags(strArray44);
        org.jsoup.safety.Whitelist whitelist46 = whitelist28.addProtocols(":matchesOwn(null", "hi!", strArray44);
        org.jsoup.safety.Whitelist whitelist47 = whitelist21.addAttributes("[^hi!]", strArray44);
        org.jsoup.safety.Whitelist whitelist51 = whitelist21.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.nodes.Attributes attributes53 = whitelist21.getEnforcedAttributes("");
        org.jsoup.nodes.Element element54 = new org.jsoup.nodes.Element(tag1, " hi!", attributes53);
        java.util.Spliterator<org.jsoup.nodes.Attribute> attributeSpliterator55 = attributes53.spliterator();
        org.junit.Assert.assertNotNull(tag1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(elements13);
        org.junit.Assert.assertNotNull(elements15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!$=   ]" + "'", str22, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + ":lt(32)" + "'", str33, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(attributes53);
        org.junit.Assert.assertNotNull(attributeSpliterator55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #677
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #13
27: invokestatic  #424
30: astore_1
31: aload_1
32: invokevirtual #425
35: istore_2
36: ldc           #25
38: ldc           #12
40: invokestatic  #26
43: astore_3
44: ldc           #12
46: aload_3
47: ldc           #12
49: invokestatic  #27
52: astore        4
54: aload_3
55: invokevirtual #103
58: astore        5
60: aload         5
62: ldc           #13
64: invokevirtual #177
67: astore        6
69: aload         6
71: ldc           #43
73: invokevirtual #426
76: astore        7
78: aload         6
80: ldc           #58
82: invokevirtual #427
85: astore        8
87: aload_1
88: aload         8
90: invokevirtual #428
93: istore        9
95: aload_1
96: invokevirtual #429
99: istore        10
101: invokestatic  #8
104: astore        11
106: ldc           #109
108: ldc           #110
110: aload         11
112: invokestatic  #94
115: astore        12
117: invokestatic  #8
120: astore        13
122: aload         13
124: iconst_1
125: invokevirtual #9
128: astore        14
130: aload         14
132: iconst_0
133: invokevirtual #9
136: astore        15
138: invokestatic  #118
141: astore        16
143: ldc           #43
145: aload         16
147: invokestatic  #81
150: astore        17
152: aload         16
154: ldc           #43
156: ldc           #12
158: ldc           #32
160: invokevirtual #11
163: astore        18
165: bipush        6
167: anewarray     #119
170: dup
171: iconst_0
172: ldc           #109
174: aastore
175: dup
176: iconst_1
177: ldc           #10
179: aastore
180: dup
181: iconst_2
182: ldc           #13
184: aastore
185: dup
186: iconst_3
187: ldc           #50
189: aastore
190: dup
191: iconst_4
192: ldc           #12
194: aastore
195: dup
196: iconst_5
197: ldc           #120
199: aastore
200: astore        19
202: aload         16
204: aload         19
206: invokevirtual #121
209: astore        20
211: aload         15
213: ldc           #38
215: ldc           #12
217: aload         19
219: invokevirtual #122
222: astore        21
224: aload         11
226: ldc           #50
228: aload         19
230: invokevirtual #127
233: astore        22
235: aload         11
237: ldc           #126
239: ldc           #109
241: ldc           #120
243: invokevirtual #11
246: astore        23
248: aload         11
250: ldc           #25
252: invokevirtual #150
255: astore        24
257: new           #430
260: dup
261: aload_1
262: ldc           #60
264: aload         24
266: invokespecial #431
269: astore        25
271: aload         24
273: invokevirtual #678
276: astore        26
278: aload_1
279: invokestatic  #15
282: new           #16
285: dup
286: invokespecial #17
289: ldc           #18
291: invokevirtual #19
294: iload_2
295: invokevirtual #20
298: ldc           #21
300: invokevirtual #19
303: iconst_0
304: invokevirtual #20
307: ldc           #18
309: invokevirtual #19
312: invokevirtual #22
315: iload_2
316: ifne          323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #23
327: aload_3
328: invokestatic  #15
331: aload         4
333: invokestatic  #15
336: aload         5
338: invokestatic  #15
341: aload         6
343: invokestatic  #15
346: aload         7
348: invokestatic  #15
351: aload         8
353: invokestatic  #15
356: new           #16
359: dup
360: invokespecial #17
363: ldc           #18
365: invokevirtual #19
368: iload         9
370: invokevirtual #20
373: ldc           #21
375: invokevirtual #19
378: iconst_0
379: invokevirtual #20
382: ldc           #18
384: invokevirtual #19
387: invokevirtual #22
390: iload         9
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #23
403: new           #16
406: dup
407: invokespecial #17
410: ldc           #18
412: invokevirtual #19
415: iload         10
417: invokevirtual #20
420: ldc           #21
422: invokevirtual #19
425: iconst_0
426: invokevirtual #20
429: ldc           #18
431: invokevirtual #19
434: invokevirtual #22
437: iload         10
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #23
450: aload         11
452: invokestatic  #15
455: new           #16
458: dup
459: invokespecial #17
462: ldc           #18
464: invokevirtual #19
467: aload         12
469: invokevirtual #19
472: ldc           #111
474: invokevirtual #19
477: invokevirtual #22
480: aload         12
482: ldc           #65
484: invokestatic  #68
487: aload         13
489: invokestatic  #15
492: aload         14
494: invokestatic  #15
497: aload         15
499: invokestatic  #15
502: aload         16
504: invokestatic  #15
507: new           #16
510: dup
511: invokespecial #17
514: ldc           #18
516: invokevirtual #19
519: aload         17
521: invokevirtual #19
524: ldc           #128
526: invokevirtual #19
529: invokevirtual #22
532: aload         17
534: ldc           #43
536: invokestatic  #68
539: aload         18
541: invokestatic  #15
544: aload         19
546: invokestatic  #15
549: aload         20
551: invokestatic  #15
554: aload         21
556: invokestatic  #15
559: aload         22
561: invokestatic  #15
564: aload         23
566: invokestatic  #15
569: aload         24
571: invokestatic  #15
574: aload         26
576: invokestatic  #15
579: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test186
Start line: 9510
End line: 9521
Method source code: 
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #679
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: aload_1
30: invokestatic  #14
33: istore_2
34: ldc           #34
36: invokestatic  #35
39: goto          43
42: astore_2
43: return
Exception table:
from    to  target type
27    39    42   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test187
Start line: 9524
End line: 9581
Method source code: 
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.jsoup.select.Evaluator.Tag tag1 = new org.jsoup.select.Evaluator.Tag("[^hi!]");
        java.lang.String str2 = tag1.toString();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        java.lang.String str13 = element12.toString();
        boolean boolean15 = element12.hasAttr("");
        element12.setBaseUri("[hi!$=   ]");
        org.jsoup.nodes.Element element19 = element12.html(":lt(1)");
        org.jsoup.safety.Whitelist whitelist20 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist22 = whitelist20.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner23 = new org.jsoup.safety.Cleaner(whitelist22);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining26 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document28 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        boolean boolean40 = attributeWithValueContaining26.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document32);
        org.jsoup.nodes.Document document41 = cleaner23.clean(document32);
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str44 = document43.toString();
        java.lang.String str45 = document43.baseUri();
        org.jsoup.nodes.Document document46 = cleaner23.clean(document43);
        org.jsoup.nodes.Document.QuirksMode quirksMode47 = document46.quirksMode();
        boolean boolean48 = tag1.matches(element19, (org.jsoup.nodes.Element) document46);
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList49 = document46.dataNodes();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[^hi!]" + "'", str2, "[^hi!]");
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str13, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str44, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertTrue("'" + quirksMode47 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode47.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(dataNodeList49);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #680
20: aastore
21: invokevirtual #7
24: pop
25: new           #360
28: dup
29: ldc           #50
31: invokespecial #361
34: astore_1
35: aload_1
36: invokevirtual #362
39: astore_2
40: ldc           #25
42: ldc           #12
44: invokestatic  #26
47: astore_3
48: ldc           #12
50: aload_3
51: ldc           #12
53: invokestatic  #27
56: astore        4
58: aload_3
59: ldc           #12
61: invokevirtual #28
64: astore        5
66: aload_3
67: ldc           #25
69: invokevirtual #29
72: astore        6
74: aload         6
76: invokevirtual #363
79: astore        7
81: aload         6
83: ldc           #25
85: invokevirtual #364
88: istore        8
90: aload         6
92: ldc           #65
94: invokevirtual #365
97: aload         6
99: ldc_w         #366
102: invokevirtual #367
105: astore        9
107: invokestatic  #8
110: astore        10
112: aload         10
114: iconst_1
115: invokevirtual #9
118: astore        11
120: new           #40
123: dup
124: aload         11
126: invokespecial #41
129: astore        12
131: new           #42
134: dup
135: ldc           #43
137: ldc           #32
139: invokespecial #44
142: astore        13
144: ldc           #12
146: invokestatic  #45
149: astore        14
151: ldc           #25
153: ldc           #12
155: invokestatic  #26
158: astore        15
160: ldc           #12
162: aload         15
164: ldc           #12
166: invokestatic  #27
169: astore        16
171: aload         15
173: ldc           #12
175: invokevirtual #28
178: astore        17
180: aload         15
182: ldc           #25
184: invokevirtual #29
187: astore        18
189: aload         15
191: invokevirtual #30
194: astore        19
196: aload         13
198: aload         14
200: aload         15
202: invokevirtual #46
205: istore        20
207: aload         12
209: aload         15
211: invokevirtual #47
214: astore        21
216: ldc           #10
218: invokestatic  #193
221: astore        22
223: aload         22
225: invokevirtual #72
228: astore        23
230: aload         22
232: invokevirtual #194
235: astore        24
237: aload         12
239: aload         22
241: invokevirtual #47
244: astore        25
246: aload         25
248: invokevirtual #222
251: astore        26
253: aload_1
254: aload         9
256: aload         25
258: invokevirtual #368
261: istore        27
263: aload         25
265: invokevirtual #348
268: astore        28
270: new           #16
273: dup
274: invokespecial #17
277: ldc           #18
279: invokevirtual #19
282: aload_2
283: invokevirtual #19
286: ldc           #112
288: invokevirtual #19
291: invokevirtual #22
294: aload_2
295: ldc           #50
297: invokestatic  #68
300: aload_3
301: invokestatic  #15
304: aload         4
306: invokestatic  #15
309: aload         5
311: invokestatic  #15
314: aload         6
316: invokestatic  #15
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: aload         7
333: invokevirtual #19
336: ldc           #78
338: invokevirtual #19
341: invokevirtual #22
344: aload         7
346: ldc           #10
348: invokestatic  #68
351: new           #16
354: dup
355: invokespecial #17
358: ldc           #18
360: invokevirtual #19
363: iload         8
365: invokevirtual #20
368: ldc           #21
370: invokevirtual #19
373: iconst_0
374: invokevirtual #20
377: ldc           #18
379: invokevirtual #19
382: invokevirtual #22
385: iload         8
387: ifne          394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #23
398: aload         9
400: invokestatic  #15
403: aload         10
405: invokestatic  #15
408: aload         11
410: invokestatic  #15
413: aload         14
415: invokestatic  #15
418: aload         15
420: invokestatic  #15
423: aload         16
425: invokestatic  #15
428: aload         17
430: invokestatic  #15
433: aload         18
435: invokestatic  #15
438: aload         19
440: invokestatic  #15
443: new           #16
446: dup
447: invokespecial #17
450: ldc           #18
452: invokevirtual #19
455: iload         20
457: invokevirtual #20
460: ldc           #21
462: invokevirtual #19
465: iconst_0
466: invokevirtual #20
469: ldc           #18
471: invokevirtual #19
474: invokevirtual #22
477: iload         20
479: ifne          486
482: iconst_1
483: goto          487
486: iconst_0
487: invokestatic  #23
490: aload         21
492: invokestatic  #15
495: aload         22
497: invokestatic  #15
500: new           #16
503: dup
504: invokespecial #17
507: ldc           #18
509: invokevirtual #19
512: aload         23
514: invokevirtual #19
517: ldc           #197
519: invokevirtual #19
522: invokevirtual #22
525: aload         23
527: ldc           #151
529: invokestatic  #68
532: new           #16
535: dup
536: invokespecial #17
539: ldc           #18
541: invokevirtual #19
544: aload         24
546: invokevirtual #19
549: ldc           #67
551: invokevirtual #19
554: invokevirtual #22
557: aload         24
559: ldc           #25
561: invokestatic  #68
564: aload         25
566: invokestatic  #15
569: new           #16
572: dup
573: invokespecial #17
576: ldc           #18
578: invokevirtual #19
581: aload         26
583: invokevirtual #223
586: ldc           #21
588: invokevirtual #19
591: getstatic     #224
594: invokevirtual #223
597: ldc           #18
599: invokevirtual #19
602: invokevirtual #22
605: aload         26
607: getstatic     #224
610: invokevirtual #225
613: invokestatic  #23
616: new           #16
619: dup
620: invokespecial #17
623: ldc           #18
625: invokevirtual #19
628: iload         27
630: invokevirtual #20
633: ldc           #21
635: invokevirtual #19
638: iconst_0
639: invokevirtual #20
642: ldc           #18
644: invokevirtual #19
647: invokevirtual #22
650: iload         27
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #23
663: aload         28
665: invokestatic  #15
668: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test188
Start line: 9584
End line: 9689
Method source code: 
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        java.lang.String str36 = document25.title();
        org.jsoup.nodes.Element element38 = document25.removeClass(":eq(1)");
        org.jsoup.select.Evaluator.Class class40 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document44 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList46 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document44, "hi!");
        org.jsoup.nodes.Element element48 = document44.tagName("hi!");
        org.jsoup.nodes.Element element50 = document44.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document44.outputSettings();
        org.jsoup.select.Elements elements53 = document44.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element55 = document44.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes56 = document44.attributes();
        org.jsoup.nodes.Element element58 = document44.prepend("[^hi!]");
        org.jsoup.nodes.Document document62 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList64 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document62, "hi!");
        org.jsoup.nodes.Element element66 = document62.tagName("hi!");
        org.jsoup.nodes.Element element68 = document62.append("");
        org.jsoup.nodes.Element element71 = document62.attr("#document", "#document");
        org.jsoup.nodes.Element element72 = document62.body();
        boolean boolean73 = class40.matches((org.jsoup.nodes.Element) document44, (org.jsoup.nodes.Element) document62);
        org.jsoup.nodes.Node node74 = document62.clone();
        org.jsoup.nodes.Document.QuirksMode quirksMode75 = document62.quirksMode();
        org.jsoup.nodes.Document document76 = document25.quirksMode(quirksMode75);
        org.jsoup.nodes.Document document80 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList82 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document80, "hi!");
        org.jsoup.nodes.Element element84 = document80.tagName("hi!");
        org.jsoup.nodes.Element element86 = document80.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings87 = document80.outputSettings();
        org.jsoup.select.Elements elements89 = document80.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element91 = document80.removeClass("[:lt(32)]");
        org.jsoup.select.Elements elements94 = document80.getElementsByAttributeValueNot("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        document80.title("<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.jsoup.nodes.Document.QuirksMode quirksMode97 = document80.quirksMode();
        org.jsoup.nodes.Document document98 = document25.quirksMode(quirksMode97);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(elements53);
        org.junit.Assert.assertNull(element55);
        org.junit.Assert.assertNotNull(attributes56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(nodeList64);
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + quirksMode75 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode75.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document76);
        org.junit.Assert.assertNotNull(document80);
        org.junit.Assert.assertNotNull(nodeList82);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertNotNull(element86);
        org.junit.Assert.assertNotNull(outputSettings87);
        org.junit.Assert.assertNotNull(elements89);
        org.junit.Assert.assertNotNull(element91);
        org.junit.Assert.assertNotNull(elements94);
        org.junit.Assert.assertTrue("'" + quirksMode97 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode97.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document98);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #681
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #448
200: astore        21
202: aload         13
204: ldc_w         #279
207: invokevirtual #59
210: astore        22
212: new           #160
215: dup
216: ldc           #10
218: invokespecial #161
221: astore        23
223: ldc           #25
225: ldc           #12
227: invokestatic  #26
230: astore        24
232: ldc           #12
234: aload         24
236: ldc           #12
238: invokestatic  #27
241: astore        25
243: aload         24
245: ldc           #12
247: invokevirtual #28
250: astore        26
252: aload         24
254: ldc           #25
256: invokevirtual #29
259: astore        27
261: aload         24
263: invokevirtual #30
266: astore        28
268: aload         24
270: iconst_m1
271: invokevirtual #162
274: astore        29
276: aload         24
278: ldc           #10
280: invokevirtual #163
283: astore        30
285: aload         24
287: invokevirtual #164
290: astore        31
292: aload         24
294: ldc           #50
296: invokevirtual #165
299: astore        32
301: ldc           #25
303: ldc           #12
305: invokestatic  #26
308: astore        33
310: ldc           #12
312: aload         33
314: ldc           #12
316: invokestatic  #27
319: astore        34
321: aload         33
323: ldc           #12
325: invokevirtual #28
328: astore        35
330: aload         33
332: ldc           #25
334: invokevirtual #29
337: astore        36
339: aload         33
341: ldc           #13
343: ldc           #13
345: invokevirtual #56
348: astore        37
350: aload         33
352: invokevirtual #166
355: astore        38
357: aload         23
359: aload         24
361: aload         33
363: invokevirtual #167
366: istore        39
368: aload         33
370: invokevirtual #154
373: astore        40
375: aload         33
377: invokevirtual #222
380: astore        41
382: aload         13
384: aload         41
386: invokevirtual #481
389: astore        42
391: ldc           #25
393: ldc           #12
395: invokestatic  #26
398: astore        43
400: ldc           #12
402: aload         43
404: ldc           #12
406: invokestatic  #27
409: astore        44
411: aload         43
413: ldc           #12
415: invokevirtual #28
418: astore        45
420: aload         43
422: ldc           #25
424: invokevirtual #29
427: astore        46
429: aload         43
431: invokevirtual #30
434: astore        47
436: aload         43
438: ldc           #12
440: invokevirtual #57
443: astore        48
445: aload         43
447: ldc           #58
449: invokevirtual #59
452: astore        49
454: aload         43
456: ldc           #109
458: ldc           #249
460: invokevirtual #682
463: astore        50
465: aload         43
467: ldc           #157
469: invokevirtual #451
472: aload         43
474: invokevirtual #222
477: astore        51
479: aload         13
481: aload         51
483: invokevirtual #481
486: astore        52
488: aload_1
489: invokestatic  #15
492: aload_2
493: invokestatic  #15
496: aload         5
498: invokestatic  #15
501: aload         6
503: invokestatic  #15
506: aload         7
508: invokestatic  #15
511: aload         8
513: invokestatic  #15
516: aload         9
518: invokestatic  #15
521: aload         10
523: invokestatic  #15
526: new           #16
529: dup
530: invokespecial #17
533: ldc           #18
535: invokevirtual #19
538: iload         11
540: invokevirtual #20
543: ldc           #21
545: invokevirtual #19
548: iconst_0
549: invokevirtual #20
552: ldc           #18
554: invokevirtual #19
557: invokevirtual #22
560: iload         11
562: ifne          569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #23
573: aload         12
575: invokestatic  #15
578: aload         13
580: invokestatic  #15
583: aload         14
585: invokestatic  #15
588: aload         15
590: invokestatic  #15
593: aload         16
595: invokestatic  #15
598: new           #16
601: dup
602: invokespecial #17
605: ldc           #18
607: invokevirtual #19
610: aload         17
612: invokevirtual #19
615: ldc           #78
617: invokevirtual #19
620: invokevirtual #22
623: aload         17
625: ldc           #10
627: invokestatic  #68
630: new           #16
633: dup
634: invokespecial #17
637: ldc           #18
639: invokevirtual #19
642: aload         18
644: invokevirtual #19
647: ldc           #67
649: invokevirtual #19
652: invokevirtual #22
655: aload         18
657: ldc           #25
659: invokestatic  #68
662: aload         19
664: invokestatic  #79
667: aload         20
669: invokestatic  #15
672: new           #16
675: dup
676: invokespecial #17
679: ldc           #18
681: invokevirtual #19
684: aload         21
686: invokevirtual #19
689: ldc           #67
691: invokevirtual #19
694: invokevirtual #22
697: aload         21
699: ldc           #25
701: invokestatic  #68
704: aload         22
706: invokestatic  #15
709: aload         24
711: invokestatic  #15
714: aload         25
716: invokestatic  #15
719: aload         26
721: invokestatic  #15
724: aload         27
726: invokestatic  #15
729: aload         28
731: invokestatic  #15
734: aload         29
736: invokestatic  #15
739: aload         30
741: invokestatic  #79
744: aload         31
746: invokestatic  #15
749: aload         32
751: invokestatic  #15
754: aload         33
756: invokestatic  #15
759: aload         34
761: invokestatic  #15
764: aload         35
766: invokestatic  #15
769: aload         36
771: invokestatic  #15
774: aload         37
776: invokestatic  #15
779: aload         38
781: invokestatic  #15
784: new           #16
787: dup
788: invokespecial #17
791: ldc           #18
793: invokevirtual #19
796: iload         39
798: invokevirtual #20
801: ldc           #21
803: invokevirtual #19
806: iconst_0
807: invokevirtual #20
810: ldc           #18
812: invokevirtual #19
815: invokevirtual #22
818: iload         39
820: ifne          827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #23
831: aload         40
833: invokestatic  #15
836: new           #16
839: dup
840: invokespecial #17
843: ldc           #18
845: invokevirtual #19
848: aload         41
850: invokevirtual #223
853: ldc           #21
855: invokevirtual #19
858: getstatic     #224
861: invokevirtual #223
864: ldc           #18
866: invokevirtual #19
869: invokevirtual #22
872: aload         41
874: getstatic     #224
877: invokevirtual #225
880: invokestatic  #23
883: aload         42
885: invokestatic  #15
888: aload         43
890: invokestatic  #15
893: aload         44
895: invokestatic  #15
898: aload         45
900: invokestatic  #15
903: aload         46
905: invokestatic  #15
908: aload         47
910: invokestatic  #15
913: aload         48
915: invokestatic  #15
918: aload         49
920: invokestatic  #15
923: aload         50
925: invokestatic  #15
928: new           #16
931: dup
932: invokespecial #17
935: ldc           #18
937: invokevirtual #19
940: aload         51
942: invokevirtual #223
945: ldc           #21
947: invokevirtual #19
950: getstatic     #224
953: invokevirtual #223
956: ldc           #18
958: invokevirtual #19
961: invokevirtual #22
964: aload         51
966: getstatic     #224
969: invokevirtual #225
972: invokestatic  #23
975: aload         52
977: invokestatic  #15
980: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test189
Start line: 9692
End line: 9705
Method source code: 
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)", whitelist1);
        org.jsoup.safety.Whitelist whitelist6 = whitelist1.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        boolean boolean10 = whitelist6.isSafeTag("[<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>^=.[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]]");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":lt(32)" + "'", str2, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #683
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #43
39: ldc           #12
41: ldc           #32
43: invokevirtual #11
46: astore_3
47: aload_3
48: ldc           #51
50: invokevirtual #150
53: astore        4
55: aload_3
56: ldc_w         #668
59: invokevirtual #83
62: istore        5
64: aload_1
65: invokestatic  #15
68: new           #16
71: dup
72: invokespecial #17
75: ldc           #18
77: invokevirtual #19
80: aload_2
81: invokevirtual #19
84: ldc           #128
86: invokevirtual #19
89: invokevirtual #22
92: aload_2
93: ldc           #43
95: invokestatic  #68
98: aload_3
99: invokestatic  #15
102: aload         4
104: invokestatic  #15
107: new           #16
110: dup
111: invokespecial #17
114: ldc           #18
116: invokevirtual #19
119: iload         5
121: invokevirtual #20
124: ldc           #21
126: invokevirtual #19
129: iconst_0
130: invokevirtual #20
133: ldc           #18
135: invokevirtual #19
138: invokevirtual #22
141: iload         5
143: ifne          150
146: iconst_1
147: goto          151
150: iconst_0
151: invokestatic  #23
154: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test190
Start line: 9708
End line: 9799
Method source code: 
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList3 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList9 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document7, "hi!");
        org.jsoup.nodes.Element element11 = document7.text("");
        int int12 = objList3.lastIndexOf((java.lang.Object) document7);
        objList0.addFirst((java.lang.Object) document7);
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element20 = document17.empty();
        org.jsoup.nodes.Element element22 = document17.removeClass("hi!");
        boolean boolean23 = objList0.equals((java.lang.Object) "hi!");
        java.util.ListIterator<java.lang.Object> objItor25 = objList0.listIterator(1);
        java.lang.Object obj26 = objList0.getLast();
        java.lang.Object obj27 = objList0.getLast();
        java.lang.Object obj29 = objList0.remove(0);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist32 = whitelist30.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner33 = new org.jsoup.safety.Cleaner(whitelist32);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining36 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document38 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document42 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList44 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document42, "hi!");
        org.jsoup.nodes.Element element46 = document42.tagName("hi!");
        org.jsoup.nodes.Element element48 = document42.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = document42.outputSettings();
        boolean boolean50 = attributeWithValueContaining36.matches((org.jsoup.nodes.Element) document38, (org.jsoup.nodes.Element) document42);
        org.jsoup.nodes.Document document51 = cleaner33.clean(document42);
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList57 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document55, "hi!");
        org.jsoup.nodes.Element element59 = document55.tagName("hi!");
        org.jsoup.nodes.Element element61 = document55.append("");
        java.lang.String str62 = document55.toString();
        java.lang.String str63 = document55.id();
        org.jsoup.nodes.Node node64 = document55.parent();
        org.jsoup.nodes.Document document65 = cleaner33.clean(document55);
        java.lang.String str66 = document55.title();
        org.jsoup.nodes.Element element68 = document55.removeClass(":eq(1)");
        objList0.addLast((java.lang.Object) element68);
        java.lang.Object obj70 = objList0.pollLast();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objItor25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(nodeList44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str62, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "<html>\n <head></head>\n <body></body>\n</html>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #684
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: new           #88
43: dup
44: invokespecial #89
47: astore_3
48: ldc           #25
50: ldc           #12
52: invokestatic  #26
55: astore        4
57: ldc           #12
59: aload         4
61: ldc           #12
63: invokestatic  #27
66: astore        5
68: aload         4
70: ldc           #25
72: invokevirtual #64
75: astore        6
77: aload_3
78: aload         4
80: invokevirtual #130
83: istore        7
85: aload_1
86: aload         4
88: invokevirtual #93
91: ldc           #25
93: ldc           #12
95: invokestatic  #26
98: astore        8
100: ldc           #12
102: aload         8
104: ldc           #12
106: invokestatic  #27
109: astore        9
111: aload         8
113: invokevirtual #103
116: astore        10
118: aload         8
120: ldc           #12
122: invokevirtual #59
125: astore        11
127: aload_1
128: ldc           #12
130: invokevirtual #90
133: istore        12
135: aload_1
136: iconst_1
137: invokevirtual #568
140: astore        13
142: aload_1
143: invokevirtual #569
146: astore        14
148: aload_1
149: invokevirtual #569
152: astore        15
154: aload_1
155: iconst_0
156: invokevirtual #407
159: astore        16
161: invokestatic  #8
164: astore        17
166: aload         17
168: iconst_1
169: invokevirtual #9
172: astore        18
174: new           #40
177: dup
178: aload         18
180: invokespecial #41
183: astore        19
185: new           #42
188: dup
189: ldc           #43
191: ldc           #32
193: invokespecial #44
196: astore        20
198: ldc           #12
200: invokestatic  #45
203: astore        21
205: ldc           #25
207: ldc           #12
209: invokestatic  #26
212: astore        22
214: ldc           #12
216: aload         22
218: ldc           #12
220: invokestatic  #27
223: astore        23
225: aload         22
227: ldc           #12
229: invokevirtual #28
232: astore        24
234: aload         22
236: ldc           #25
238: invokevirtual #29
241: astore        25
243: aload         22
245: invokevirtual #30
248: astore        26
250: aload         20
252: aload         21
254: aload         22
256: invokevirtual #46
259: istore        27
261: aload         19
263: aload         22
265: invokevirtual #47
268: astore        28
270: ldc           #25
272: ldc           #12
274: invokestatic  #26
277: astore        29
279: ldc           #12
281: aload         29
283: ldc           #12
285: invokestatic  #27
288: astore        30
290: aload         29
292: ldc           #12
294: invokevirtual #28
297: astore        31
299: aload         29
301: ldc           #25
303: invokevirtual #29
306: astore        32
308: aload         29
310: invokevirtual #72
313: astore        33
315: aload         29
317: invokevirtual #73
320: astore        34
322: aload         29
324: invokevirtual #74
327: astore        35
329: aload         19
331: aload         29
333: invokevirtual #47
336: astore        36
338: aload         29
340: invokevirtual #448
343: astore        37
345: aload         29
347: ldc_w         #279
350: invokevirtual #59
353: astore        38
355: aload_1
356: aload         38
358: invokevirtual #95
361: aload_1
362: invokevirtual #685
365: astore        39
367: new           #16
370: dup
371: invokespecial #17
374: ldc           #18
376: invokevirtual #19
379: iload_2
380: invokevirtual #20
383: ldc           #21
385: invokevirtual #19
388: iconst_0
389: invokevirtual #20
392: ldc           #18
394: invokevirtual #19
397: invokevirtual #22
400: iload_2
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #23
412: aload         4
414: invokestatic  #15
417: aload         5
419: invokestatic  #15
422: aload         6
424: invokestatic  #15
427: new           #16
430: dup
431: invokespecial #17
434: ldc           #18
436: invokevirtual #19
439: iload         7
441: invokevirtual #134
444: ldc           #21
446: invokevirtual #19
449: iconst_m1
450: invokevirtual #134
453: ldc           #18
455: invokevirtual #19
458: invokevirtual #22
461: iload         7
463: iconst_m1
464: if_icmpne     471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #23
475: aload         8
477: invokestatic  #15
480: aload         9
482: invokestatic  #15
485: aload         10
487: invokestatic  #15
490: aload         11
492: invokestatic  #15
495: new           #16
498: dup
499: invokespecial #17
502: ldc           #18
504: invokevirtual #19
507: iload         12
509: invokevirtual #20
512: ldc           #21
514: invokevirtual #19
517: iconst_0
518: invokevirtual #20
521: ldc           #18
523: invokevirtual #19
526: invokevirtual #22
529: iload         12
531: ifne          538
534: iconst_1
535: goto          539
538: iconst_0
539: invokestatic  #23
542: aload         13
544: invokestatic  #15
547: aload         14
549: invokestatic  #15
552: aload         14
554: invokevirtual #571
557: ldc           #157
559: invokestatic  #290
562: aload         14
564: invokestatic  #572
567: ldc           #157
569: invokestatic  #290
572: aload         14
574: invokestatic  #573
577: ldc           #157
579: invokestatic  #290
582: aload         15
584: invokestatic  #15
587: aload         15
589: invokevirtual #571
592: ldc           #157
594: invokestatic  #290
597: aload         15
599: invokestatic  #572
602: ldc           #157
604: invokestatic  #290
607: aload         15
609: invokestatic  #573
612: ldc           #157
614: invokestatic  #290
617: aload         16
619: invokestatic  #15
622: aload         16
624: invokevirtual #571
627: ldc           #157
629: invokestatic  #290
632: aload         16
634: invokestatic  #572
637: ldc           #157
639: invokestatic  #290
642: aload         16
644: invokestatic  #573
647: ldc           #157
649: invokestatic  #290
652: aload         17
654: invokestatic  #15
657: aload         18
659: invokestatic  #15
662: aload         21
664: invokestatic  #15
667: aload         22
669: invokestatic  #15
672: aload         23
674: invokestatic  #15
677: aload         24
679: invokestatic  #15
682: aload         25
684: invokestatic  #15
687: aload         26
689: invokestatic  #15
692: new           #16
695: dup
696: invokespecial #17
699: ldc           #18
701: invokevirtual #19
704: iload         27
706: invokevirtual #20
709: ldc           #21
711: invokevirtual #19
714: iconst_0
715: invokevirtual #20
718: ldc           #18
720: invokevirtual #19
723: invokevirtual #22
726: iload         27
728: ifne          735
731: iconst_1
732: goto          736
735: iconst_0
736: invokestatic  #23
739: aload         28
741: invokestatic  #15
744: aload         29
746: invokestatic  #15
749: aload         30
751: invokestatic  #15
754: aload         31
756: invokestatic  #15
759: aload         32
761: invokestatic  #15
764: new           #16
767: dup
768: invokespecial #17
771: ldc           #18
773: invokevirtual #19
776: aload         33
778: invokevirtual #19
781: ldc           #78
783: invokevirtual #19
786: invokevirtual #22
789: aload         33
791: ldc           #10
793: invokestatic  #68
796: new           #16
799: dup
800: invokespecial #17
803: ldc           #18
805: invokevirtual #19
808: aload         34
810: invokevirtual #19
813: ldc           #67
815: invokevirtual #19
818: invokevirtual #22
821: aload         34
823: ldc           #25
825: invokestatic  #68
828: aload         35
830: invokestatic  #79
833: aload         36
835: invokestatic  #15
838: new           #16
841: dup
842: invokespecial #17
845: ldc           #18
847: invokevirtual #19
850: aload         37
852: invokevirtual #19
855: ldc           #67
857: invokevirtual #19
860: invokevirtual #22
863: aload         37
865: ldc           #25
867: invokestatic  #68
870: aload         38
872: invokestatic  #15
875: aload         39
877: invokestatic  #15
880: aload         39
882: invokevirtual #571
885: ldc           #10
887: invokestatic  #290
890: aload         39
892: invokestatic  #572
895: ldc           #10
897: invokestatic  #290
900: aload         39
902: invokestatic  #573
905: ldc           #10
907: invokestatic  #290
910: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test191
Start line: 9802
End line: 9900
Method source code: 
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.select.Evaluator.AttributeWithValueStarting attributeWithValueStarting38 = new org.jsoup.select.Evaluator.AttributeWithValueStarting("<html>\n <head></head>\n <body></body>\n</html>", "<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str39 = attributeWithValueStarting38.toString();
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList45 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document43, "hi!");
        org.jsoup.nodes.Element element47 = document43.tagName("hi!");
        org.jsoup.nodes.Element element49 = document43.text("[:lt(32)]");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList50 = document43.dataNodes();
        org.jsoup.nodes.Node node51 = document43.previousSibling();
        org.jsoup.select.Evaluator.Class class53 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element68 = document57.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes69 = document57.attributes();
        org.jsoup.nodes.Element element71 = document57.prepend("[^hi!]");
        org.jsoup.nodes.Document document75 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList77 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document75, "hi!");
        org.jsoup.nodes.Element element79 = document75.tagName("hi!");
        org.jsoup.nodes.Element element81 = document75.append("");
        org.jsoup.nodes.Element element84 = document75.attr("#document", "#document");
        org.jsoup.nodes.Element element85 = document75.body();
        boolean boolean86 = class53.matches((org.jsoup.nodes.Element) document57, (org.jsoup.nodes.Element) document75);
        org.jsoup.nodes.Node node87 = document75.clone();
        document75.setBaseUri("\nhi!");
        boolean boolean90 = attributeWithValueStarting38.matches((org.jsoup.nodes.Element) document43, (org.jsoup.nodes.Element) document75);
        org.jsoup.nodes.Document document91 = cleaner3.clean(document75);
        org.jsoup.select.Elements elements93 = document91.getElementsMatchingText(" text=\"[:gt(100)]\" #document=\"#document\"");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]" + "'", str39, "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(nodeList45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(dataNodeList50);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNull(element68);
        org.junit.Assert.assertNotNull(attributes69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(document75);
        org.junit.Assert.assertNotNull(nodeList77);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(element81);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertNotNull(element85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(document91);
        org.junit.Assert.assertNotNull(elements93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #686
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: new           #253
198: dup
199: ldc           #10
201: ldc           #254
203: invokespecial #255
206: astore        21
208: aload         21
210: invokevirtual #687
213: astore        22
215: ldc           #25
217: ldc           #12
219: invokestatic  #26
222: astore        23
224: ldc           #12
226: aload         23
228: ldc           #12
230: invokestatic  #27
233: astore        24
235: aload         23
237: ldc           #12
239: invokevirtual #28
242: astore        25
244: aload         23
246: ldc           #58
248: invokevirtual #64
251: astore        26
253: aload         23
255: invokevirtual #348
258: astore        27
260: aload         23
262: invokevirtual #349
265: astore        28
267: new           #160
270: dup
271: ldc           #10
273: invokespecial #161
276: astore        29
278: ldc           #25
280: ldc           #12
282: invokestatic  #26
285: astore        30
287: ldc           #12
289: aload         30
291: ldc           #12
293: invokestatic  #27
296: astore        31
298: aload         30
300: ldc           #12
302: invokevirtual #28
305: astore        32
307: aload         30
309: ldc           #25
311: invokevirtual #29
314: astore        33
316: aload         30
318: invokevirtual #30
321: astore        34
323: aload         30
325: iconst_m1
326: invokevirtual #162
329: astore        35
331: aload         30
333: ldc           #10
335: invokevirtual #163
338: astore        36
340: aload         30
342: invokevirtual #164
345: astore        37
347: aload         30
349: ldc           #50
351: invokevirtual #165
354: astore        38
356: ldc           #25
358: ldc           #12
360: invokestatic  #26
363: astore        39
365: ldc           #12
367: aload         39
369: ldc           #12
371: invokestatic  #27
374: astore        40
376: aload         39
378: ldc           #12
380: invokevirtual #28
383: astore        41
385: aload         39
387: ldc           #25
389: invokevirtual #29
392: astore        42
394: aload         39
396: ldc           #13
398: ldc           #13
400: invokevirtual #56
403: astore        43
405: aload         39
407: invokevirtual #166
410: astore        44
412: aload         29
414: aload         30
416: aload         39
418: invokevirtual #167
421: istore        45
423: aload         39
425: invokevirtual #154
428: astore        46
430: aload         39
432: ldc           #98
434: invokevirtual #688
437: aload         21
439: aload         23
441: aload         39
443: invokevirtual #257
446: istore        47
448: aload_3
449: aload         39
451: invokevirtual #47
454: astore        48
456: aload         48
458: ldc_w         #339
461: invokevirtual #57
464: astore        49
466: aload_1
467: invokestatic  #15
470: aload_2
471: invokestatic  #15
474: aload         5
476: invokestatic  #15
479: aload         6
481: invokestatic  #15
484: aload         7
486: invokestatic  #15
489: aload         8
491: invokestatic  #15
494: aload         9
496: invokestatic  #15
499: aload         10
501: invokestatic  #15
504: new           #16
507: dup
508: invokespecial #17
511: ldc           #18
513: invokevirtual #19
516: iload         11
518: invokevirtual #20
521: ldc           #21
523: invokevirtual #19
526: iconst_0
527: invokevirtual #20
530: ldc           #18
532: invokevirtual #19
535: invokevirtual #22
538: iload         11
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #23
551: aload         12
553: invokestatic  #15
556: aload         13
558: invokestatic  #15
561: aload         14
563: invokestatic  #15
566: aload         15
568: invokestatic  #15
571: aload         16
573: invokestatic  #15
576: new           #16
579: dup
580: invokespecial #17
583: ldc           #18
585: invokevirtual #19
588: aload         17
590: invokevirtual #19
593: ldc           #78
595: invokevirtual #19
598: invokevirtual #22
601: aload         17
603: ldc           #10
605: invokestatic  #68
608: new           #16
611: dup
612: invokespecial #17
615: ldc           #18
617: invokevirtual #19
620: aload         18
622: invokevirtual #19
625: ldc           #67
627: invokevirtual #19
630: invokevirtual #22
633: aload         18
635: ldc           #25
637: invokestatic  #68
640: aload         19
642: invokestatic  #79
645: aload         20
647: invokestatic  #15
650: new           #16
653: dup
654: invokespecial #17
657: ldc           #18
659: invokevirtual #19
662: aload         22
664: invokevirtual #19
667: ldc_w         #689
670: invokevirtual #19
673: invokevirtual #22
676: aload         22
678: ldc           #82
680: invokestatic  #68
683: aload         23
685: invokestatic  #15
688: aload         24
690: invokestatic  #15
693: aload         25
695: invokestatic  #15
698: aload         26
700: invokestatic  #15
703: aload         27
705: invokestatic  #15
708: aload         28
710: invokestatic  #79
713: aload         30
715: invokestatic  #15
718: aload         31
720: invokestatic  #15
723: aload         32
725: invokestatic  #15
728: aload         33
730: invokestatic  #15
733: aload         34
735: invokestatic  #15
738: aload         35
740: invokestatic  #15
743: aload         36
745: invokestatic  #79
748: aload         37
750: invokestatic  #15
753: aload         38
755: invokestatic  #15
758: aload         39
760: invokestatic  #15
763: aload         40
765: invokestatic  #15
768: aload         41
770: invokestatic  #15
773: aload         42
775: invokestatic  #15
778: aload         43
780: invokestatic  #15
783: aload         44
785: invokestatic  #15
788: new           #16
791: dup
792: invokespecial #17
795: ldc           #18
797: invokevirtual #19
800: iload         45
802: invokevirtual #20
805: ldc           #21
807: invokevirtual #19
810: iconst_0
811: invokevirtual #20
814: ldc           #18
816: invokevirtual #19
819: invokevirtual #22
822: iload         45
824: ifne          831
827: iconst_1
828: goto          832
831: iconst_0
832: invokestatic  #23
835: aload         46
837: invokestatic  #15
840: new           #16
843: dup
844: invokespecial #17
847: ldc           #18
849: invokevirtual #19
852: iload         47
854: invokevirtual #20
857: ldc           #21
859: invokevirtual #19
862: iconst_0
863: invokevirtual #20
866: ldc           #18
868: invokevirtual #19
871: invokevirtual #22
874: iload         47
876: ifne          883
879: iconst_1
880: goto          884
883: iconst_0
884: invokestatic  #23
887: aload         48
889: invokestatic  #15
892: aload         49
894: invokestatic  #15
897: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test192
Start line: 9903
End line: 9999
Method source code: 
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element29 = document26.empty();
        org.jsoup.nodes.Element element31 = document26.removeClass("hi!");
        org.jsoup.select.Elements elements34 = document26.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        objList0.push((java.lang.Object) "[:lt(32)]");
        java.lang.Object obj36 = objList0.pollFirst();
        java.lang.Object obj37 = objList0.pop();
        java.lang.Object obj38 = objList0.pollFirst();
        org.jsoup.nodes.Comment comment41 = new org.jsoup.nodes.Comment("", "");
        java.lang.String str42 = comment41.getData();
        boolean boolean43 = objList0.offerFirst((java.lang.Object) comment41);
        org.jsoup.select.Evaluator.Id id45 = new org.jsoup.select.Evaluator.Id("hi!");
        boolean boolean46 = objList0.remove((java.lang.Object) id45);
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList52 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document50, "hi!");
        org.jsoup.nodes.Element element54 = document50.text("");
        org.jsoup.nodes.Element element55 = document50.head();
        boolean boolean56 = objList0.offerFirst((java.lang.Object) element55);
        org.jsoup.safety.Whitelist whitelist58 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist60 = whitelist58.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner61 = new org.jsoup.safety.Cleaner(whitelist60);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining64 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document66 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document70 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList72 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document70, "hi!");
        org.jsoup.nodes.Element element74 = document70.tagName("hi!");
        org.jsoup.nodes.Element element76 = document70.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings77 = document70.outputSettings();
        boolean boolean78 = attributeWithValueContaining64.matches((org.jsoup.nodes.Element) document66, (org.jsoup.nodes.Element) document70);
        org.jsoup.nodes.Document document79 = cleaner61.clean(document70);
        org.jsoup.nodes.Document document81 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str82 = document81.toString();
        java.lang.String str83 = document81.baseUri();
        org.jsoup.nodes.Document document84 = cleaner61.clean(document81);
        org.jsoup.select.Elements elements85 = document84.siblingElements();
        objList0.add((int) (byte) 1, (java.lang.Object) elements85);
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(elements34);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "[:lt(32)]" + "'", obj36, "[:lt(32)]");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNotNull(outputSettings77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(document79);
        org.junit.Assert.assertNotNull(document81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str82, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(document84);
        org.junit.Assert.assertNotNull(elements85);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #690
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        12
132: ldc           #12
134: aload         12
136: ldc           #12
138: invokestatic  #27
141: astore        13
143: aload         12
145: invokevirtual #103
148: astore        14
150: aload         12
152: ldc           #12
154: invokevirtual #59
157: astore        15
159: aload         12
161: ldc           #10
163: ldc           #58
165: invokevirtual #153
168: astore        16
170: aload_1
171: ldc           #58
173: invokevirtual #401
176: aload_1
177: invokevirtual #660
180: astore        17
182: aload_1
183: invokevirtual #355
186: astore        18
188: aload_1
189: invokevirtual #660
192: astore        19
194: new           #691
197: dup
198: ldc           #25
200: ldc           #25
202: invokespecial #692
205: astore        20
207: aload         20
209: invokevirtual #693
212: astore        21
214: aload_1
215: aload         20
217: invokevirtual #354
220: istore        22
222: new           #388
225: dup
226: ldc           #12
228: invokespecial #389
231: astore        23
233: aload_1
234: aload         23
236: invokevirtual #648
239: istore        24
241: ldc           #25
243: ldc           #12
245: invokestatic  #26
248: astore        25
250: ldc           #12
252: aload         25
254: ldc           #12
256: invokestatic  #27
259: astore        26
261: aload         25
263: ldc           #25
265: invokevirtual #64
268: astore        27
270: aload         25
272: invokevirtual #200
275: astore        28
277: aload_1
278: aload         28
280: invokevirtual #354
283: istore        29
285: invokestatic  #8
288: astore        30
290: aload         30
292: iconst_1
293: invokevirtual #9
296: astore        31
298: new           #40
301: dup
302: aload         31
304: invokespecial #41
307: astore        32
309: new           #42
312: dup
313: ldc           #43
315: ldc           #32
317: invokespecial #44
320: astore        33
322: ldc           #12
324: invokestatic  #45
327: astore        34
329: ldc           #25
331: ldc           #12
333: invokestatic  #26
336: astore        35
338: ldc           #12
340: aload         35
342: ldc           #12
344: invokestatic  #27
347: astore        36
349: aload         35
351: ldc           #12
353: invokevirtual #28
356: astore        37
358: aload         35
360: ldc           #25
362: invokevirtual #29
365: astore        38
367: aload         35
369: invokevirtual #30
372: astore        39
374: aload         33
376: aload         34
378: aload         35
380: invokevirtual #46
383: istore        40
385: aload         32
387: aload         35
389: invokevirtual #47
392: astore        41
394: ldc           #10
396: invokestatic  #193
399: astore        42
401: aload         42
403: invokevirtual #72
406: astore        43
408: aload         42
410: invokevirtual #194
413: astore        44
415: aload         32
417: aload         42
419: invokevirtual #47
422: astore        45
424: aload         45
426: invokevirtual #694
429: astore        46
431: aload_1
432: iconst_1
433: aload         46
435: invokevirtual #132
438: aload_2
439: invokestatic  #15
442: aload_3
443: invokestatic  #15
446: aload         4
448: invokestatic  #15
451: aload         5
453: invokestatic  #15
456: aload         6
458: invokestatic  #15
461: aload         7
463: invokestatic  #15
466: aload         8
468: invokestatic  #15
471: aload         9
473: invokestatic  #15
476: aload         10
478: invokestatic  #15
481: aload         11
483: invokestatic  #15
486: aload         12
488: invokestatic  #15
491: aload         13
493: invokestatic  #15
496: aload         14
498: invokestatic  #15
501: aload         15
503: invokestatic  #15
506: aload         16
508: invokestatic  #15
511: new           #16
514: dup
515: invokespecial #17
518: ldc           #18
520: invokevirtual #19
523: aload         17
525: invokevirtual #223
528: ldc           #184
530: invokevirtual #19
533: invokevirtual #22
536: aload         17
538: ldc           #58
540: invokestatic  #68
543: aload         18
545: invokestatic  #15
548: aload         18
550: invokevirtual #571
553: ldc           #157
555: invokestatic  #290
558: aload         18
560: invokestatic  #572
563: ldc           #157
565: invokestatic  #290
568: aload         18
570: invokestatic  #573
573: ldc           #157
575: invokestatic  #290
578: aload         19
580: invokestatic  #79
583: new           #16
586: dup
587: invokespecial #17
590: ldc           #18
592: invokevirtual #19
595: aload         21
597: invokevirtual #19
600: ldc           #67
602: invokevirtual #19
605: invokevirtual #22
608: aload         21
610: ldc           #25
612: invokestatic  #68
615: new           #16
618: dup
619: invokespecial #17
622: ldc           #18
624: invokevirtual #19
627: iload         22
629: invokevirtual #20
632: ldc           #21
634: invokevirtual #19
637: iconst_1
638: invokevirtual #20
641: ldc           #18
643: invokevirtual #19
646: invokevirtual #22
649: iload         22
651: iconst_1
652: if_icmpne     659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #23
663: new           #16
666: dup
667: invokespecial #17
670: ldc           #18
672: invokevirtual #19
675: iload         24
677: invokevirtual #20
680: ldc           #21
682: invokevirtual #19
685: iconst_0
686: invokevirtual #20
689: ldc           #18
691: invokevirtual #19
694: invokevirtual #22
697: iload         24
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #23
710: aload         25
712: invokestatic  #15
715: aload         26
717: invokestatic  #15
720: aload         27
722: invokestatic  #15
725: aload         28
727: invokestatic  #15
730: new           #16
733: dup
734: invokespecial #17
737: ldc           #18
739: invokevirtual #19
742: iload         29
744: invokevirtual #20
747: ldc           #21
749: invokevirtual #19
752: iconst_1
753: invokevirtual #20
756: ldc           #18
758: invokevirtual #19
761: invokevirtual #22
764: iload         29
766: iconst_1
767: if_icmpne     774
770: iconst_1
771: goto          775
774: iconst_0
775: invokestatic  #23
778: aload         30
780: invokestatic  #15
783: aload         31
785: invokestatic  #15
788: aload         34
790: invokestatic  #15
793: aload         35
795: invokestatic  #15
798: aload         36
800: invokestatic  #15
803: aload         37
805: invokestatic  #15
808: aload         38
810: invokestatic  #15
813: aload         39
815: invokestatic  #15
818: new           #16
821: dup
822: invokespecial #17
825: ldc           #18
827: invokevirtual #19
830: iload         40
832: invokevirtual #20
835: ldc           #21
837: invokevirtual #19
840: iconst_0
841: invokevirtual #20
844: ldc           #18
846: invokevirtual #19
849: invokevirtual #22
852: iload         40
854: ifne          861
857: iconst_1
858: goto          862
861: iconst_0
862: invokestatic  #23
865: aload         41
867: invokestatic  #15
870: aload         42
872: invokestatic  #15
875: new           #16
878: dup
879: invokespecial #17
882: ldc           #18
884: invokevirtual #19
887: aload         43
889: invokevirtual #19
892: ldc           #197
894: invokevirtual #19
897: invokevirtual #22
900: aload         43
902: ldc           #151
904: invokestatic  #68
907: new           #16
910: dup
911: invokespecial #17
914: ldc           #18
916: invokevirtual #19
919: aload         44
921: invokevirtual #19
924: ldc           #67
926: invokevirtual #19
929: invokevirtual #22
932: aload         44
934: ldc           #25
936: invokestatic  #68
939: aload         45
941: invokestatic  #15
944: aload         46
946: invokestatic  #15
949: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test193
Start line: 10002
End line: 10075
Method source code: 
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        java.util.regex.Pattern pattern0 = null;
        org.jsoup.select.Evaluator.Matches matches1 = new org.jsoup.select.Evaluator.Matches(pattern0);
        org.jsoup.parser.Parser parser2 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.parser.Parser parser4 = parser2.setTrackErrors(0);
        boolean boolean5 = parser2.isTrackErrors();
        org.jsoup.parser.Parser parser7 = parser2.setTrackErrors((int) (byte) 0);
        org.jsoup.nodes.Document document10 = parser2.parseInput(":lt(10)", ":eq(1)");
        org.jsoup.nodes.Element element11 = document10.clone();
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist14 = whitelist12.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner15 = new org.jsoup.safety.Cleaner(whitelist14);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining18 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document20 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document24 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList26 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document24, "hi!");
        org.jsoup.nodes.Element element28 = document24.tagName("hi!");
        org.jsoup.nodes.Element element30 = document24.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings31 = document24.outputSettings();
        boolean boolean32 = attributeWithValueContaining18.matches((org.jsoup.nodes.Element) document20, (org.jsoup.nodes.Element) document24);
        org.jsoup.nodes.Document document33 = cleaner15.clean(document24);
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList39 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document37, "hi!");
        org.jsoup.nodes.Element element41 = document37.tagName("hi!");
        org.jsoup.nodes.Element element43 = document37.append("");
        java.lang.String str44 = document37.toString();
        java.lang.String str45 = document37.id();
        org.jsoup.nodes.Node node46 = document37.parent();
        org.jsoup.nodes.Document document47 = cleaner15.clean(document37);
        java.lang.String str48 = document37.title();
        org.jsoup.nodes.Element element50 = document37.removeClass(":eq(1)");
        org.jsoup.nodes.Element element51 = document37.clone();
        org.jsoup.nodes.Element element53 = document37.prependText("<html>\n <head></head>\n <body></body>\n</html>:containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean54 = document10.equals((java.lang.Object) document37);
        org.jsoup.nodes.Element element55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = matches1.matches((org.jsoup.nodes.Element) document37, element55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(parser2);
        org.junit.Assert.assertNotNull(parser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(parser7);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(nodeList26);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(outputSettings31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str44, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #695
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #70
30: dup
31: aload_1
32: invokespecial #71
35: astore_2
36: invokestatic  #419
39: astore_3
40: aload_3
41: iconst_0
42: invokevirtual #696
45: astore        4
47: aload_3
48: invokevirtual #697
51: istore        5
53: aload_3
54: iconst_0
55: invokevirtual #696
58: astore        6
60: aload_3
61: ldc_w         #669
64: ldc_w         #279
67: invokevirtual #420
70: astore        7
72: aload         7
74: invokevirtual #154
77: astore        8
79: invokestatic  #8
82: astore        9
84: aload         9
86: iconst_1
87: invokevirtual #9
90: astore        10
92: new           #40
95: dup
96: aload         10
98: invokespecial #41
101: astore        11
103: new           #42
106: dup
107: ldc           #43
109: ldc           #32
111: invokespecial #44
114: astore        12
116: ldc           #12
118: invokestatic  #45
121: astore        13
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        14
132: ldc           #12
134: aload         14
136: ldc           #12
138: invokestatic  #27
141: astore        15
143: aload         14
145: ldc           #12
147: invokevirtual #28
150: astore        16
152: aload         14
154: ldc           #25
156: invokevirtual #29
159: astore        17
161: aload         14
163: invokevirtual #30
166: astore        18
168: aload         12
170: aload         13
172: aload         14
174: invokevirtual #46
177: istore        19
179: aload         11
181: aload         14
183: invokevirtual #47
186: astore        20
188: ldc           #25
190: ldc           #12
192: invokestatic  #26
195: astore        21
197: ldc           #12
199: aload         21
201: ldc           #12
203: invokestatic  #27
206: astore        22
208: aload         21
210: ldc           #12
212: invokevirtual #28
215: astore        23
217: aload         21
219: ldc           #25
221: invokevirtual #29
224: astore        24
226: aload         21
228: invokevirtual #72
231: astore        25
233: aload         21
235: invokevirtual #73
238: astore        26
240: aload         21
242: invokevirtual #74
245: astore        27
247: aload         11
249: aload         21
251: invokevirtual #47
254: astore        28
256: aload         21
258: invokevirtual #448
261: astore        29
263: aload         21
265: ldc_w         #279
268: invokevirtual #59
271: astore        30
273: aload         21
275: invokevirtual #154
278: astore        31
280: aload         21
282: ldc_w         #449
285: invokevirtual #258
288: astore        32
290: aload         7
292: aload         21
294: invokevirtual #202
297: istore        33
299: aconst_null
300: astore        34
302: aload_2
303: aload         21
305: aload         34
307: invokevirtual #75
310: istore        35
312: ldc           #76
314: invokestatic  #35
317: goto          322
320: astore        35
322: aload_3
323: invokestatic  #15
326: aload         4
328: invokestatic  #15
331: new           #16
334: dup
335: invokespecial #17
338: ldc           #18
340: invokevirtual #19
343: iload         5
345: invokevirtual #20
348: ldc           #21
350: invokevirtual #19
353: iconst_0
354: invokevirtual #20
357: ldc           #18
359: invokevirtual #19
362: invokevirtual #22
365: iload         5
367: ifne          374
370: iconst_1
371: goto          375
374: iconst_0
375: invokestatic  #23
378: aload         6
380: invokestatic  #15
383: aload         7
385: invokestatic  #15
388: aload         8
390: invokestatic  #15
393: aload         9
395: invokestatic  #15
398: aload         10
400: invokestatic  #15
403: aload         13
405: invokestatic  #15
408: aload         14
410: invokestatic  #15
413: aload         15
415: invokestatic  #15
418: aload         16
420: invokestatic  #15
423: aload         17
425: invokestatic  #15
428: aload         18
430: invokestatic  #15
433: new           #16
436: dup
437: invokespecial #17
440: ldc           #18
442: invokevirtual #19
445: iload         19
447: invokevirtual #20
450: ldc           #21
452: invokevirtual #19
455: iconst_0
456: invokevirtual #20
459: ldc           #18
461: invokevirtual #19
464: invokevirtual #22
467: iload         19
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #23
480: aload         20
482: invokestatic  #15
485: aload         21
487: invokestatic  #15
490: aload         22
492: invokestatic  #15
495: aload         23
497: invokestatic  #15
500: aload         24
502: invokestatic  #15
505: new           #16
508: dup
509: invokespecial #17
512: ldc           #18
514: invokevirtual #19
517: aload         25
519: invokevirtual #19
522: ldc           #78
524: invokevirtual #19
527: invokevirtual #22
530: aload         25
532: ldc           #10
534: invokestatic  #68
537: new           #16
540: dup
541: invokespecial #17
544: ldc           #18
546: invokevirtual #19
549: aload         26
551: invokevirtual #19
554: ldc           #67
556: invokevirtual #19
559: invokevirtual #22
562: aload         26
564: ldc           #25
566: invokestatic  #68
569: aload         27
571: invokestatic  #79
574: aload         28
576: invokestatic  #15
579: new           #16
582: dup
583: invokespecial #17
586: ldc           #18
588: invokevirtual #19
591: aload         29
593: invokevirtual #19
596: ldc           #67
598: invokevirtual #19
601: invokevirtual #22
604: aload         29
606: ldc           #25
608: invokestatic  #68
611: aload         30
613: invokestatic  #15
616: aload         31
618: invokestatic  #15
621: aload         32
623: invokestatic  #15
626: new           #16
629: dup
630: invokespecial #17
633: ldc           #18
635: invokevirtual #19
638: iload         33
640: invokevirtual #20
643: ldc           #21
645: invokevirtual #19
648: iconst_0
649: invokevirtual #20
652: ldc           #18
654: invokevirtual #19
657: invokevirtual #22
660: iload         33
662: ifne          669
665: iconst_1
666: goto          670
669: iconst_0
670: invokestatic  #23
673: return
Exception table:
from    to  target type
302   317   320   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test194
Start line: 10078
End line: 10107
Method source code: 
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Element element23 = document21.html("#comment");
        org.jsoup.nodes.Element element26 = document21.attr("[:lt(32)*=]", "[[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]$=[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element26);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #698
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: aload         12
130: ldc           #114
132: invokevirtual #115
135: astore        13
137: aload         12
139: ldc_w         #699
142: ldc           #195
144: invokevirtual #56
147: astore        14
149: aload_1
150: invokestatic  #15
153: aload_2
154: invokestatic  #15
157: aload         5
159: invokestatic  #15
162: aload         6
164: invokestatic  #15
167: aload         7
169: invokestatic  #15
172: aload         8
174: invokestatic  #15
177: aload         9
179: invokestatic  #15
182: aload         10
184: invokestatic  #15
187: new           #16
190: dup
191: invokespecial #17
194: ldc           #18
196: invokevirtual #19
199: iload         11
201: invokevirtual #20
204: ldc           #21
206: invokevirtual #19
209: iconst_0
210: invokevirtual #20
213: ldc           #18
215: invokevirtual #19
218: invokevirtual #22
221: iload         11
223: ifne          230
226: iconst_1
227: goto          231
230: iconst_0
231: invokestatic  #23
234: aload         12
236: invokestatic  #15
239: aload         13
241: invokestatic  #15
244: aload         14
246: invokestatic  #15
249: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test195
Start line: 10110
End line: 10175
Method source code: 
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.util.Spliterator<java.lang.Object> objSpliterator24 = objList0.spliterator();
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        java.lang.String str32 = org.jsoup.helper.StringUtil.join((java.util.Collection) nodeList30, "#document");
        boolean boolean33 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList30);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist36 = whitelist34.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner37 = new org.jsoup.safety.Cleaner(whitelist36);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining40 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document42 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        boolean boolean54 = attributeWithValueContaining40.matches((org.jsoup.nodes.Element) document42, (org.jsoup.nodes.Element) document46);
        org.jsoup.nodes.Document document55 = cleaner37.clean(document46);
        boolean boolean56 = objList0.contains((java.lang.Object) document46);
        java.lang.Object obj57 = objList0.removeLast();
        java.util.Iterator<java.lang.Object> objItor58 = objList0.descendingIterator();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSpliterator24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\nhi!" + "'", str32, "\nhi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(objItor58);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #700
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #283
138: astore        12
140: ldc           #25
142: ldc           #12
144: invokestatic  #26
147: astore        13
149: ldc           #12
151: aload         13
153: ldc           #12
155: invokestatic  #27
158: astore        14
160: aload         14
162: ldc           #13
164: invokestatic  #284
167: astore        15
169: aload_1
170: aload         14
172: invokevirtual #285
175: istore        16
177: invokestatic  #8
180: astore        17
182: aload         17
184: iconst_1
185: invokevirtual #9
188: astore        18
190: new           #40
193: dup
194: aload         18
196: invokespecial #41
199: astore        19
201: new           #42
204: dup
205: ldc           #43
207: ldc           #32
209: invokespecial #44
212: astore        20
214: ldc           #12
216: invokestatic  #45
219: astore        21
221: ldc           #25
223: ldc           #12
225: invokestatic  #26
228: astore        22
230: ldc           #12
232: aload         22
234: ldc           #12
236: invokestatic  #27
239: astore        23
241: aload         22
243: ldc           #12
245: invokevirtual #28
248: astore        24
250: aload         22
252: ldc           #25
254: invokevirtual #29
257: astore        25
259: aload         22
261: invokevirtual #30
264: astore        26
266: aload         20
268: aload         21
270: aload         22
272: invokevirtual #46
275: istore        27
277: aload         19
279: aload         22
281: invokevirtual #47
284: astore        28
286: aload_1
287: aload         22
289: invokevirtual #286
292: istore        29
294: aload_1
295: invokevirtual #701
298: astore        30
300: aload_1
301: invokevirtual #383
304: astore        31
306: aload_2
307: invokestatic  #15
310: aload_3
311: invokestatic  #15
314: aload         4
316: invokestatic  #15
319: aload         5
321: invokestatic  #15
324: aload         6
326: invokestatic  #15
329: aload         7
331: invokestatic  #15
334: aload         8
336: invokestatic  #15
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: aload         9
353: invokevirtual #19
356: ldc           #78
358: invokevirtual #19
361: invokevirtual #22
364: aload         9
366: ldc           #10
368: invokestatic  #68
371: aload         10
373: invokestatic  #15
376: aload         10
378: invokestatic  #288
381: ldc_w         #289
384: invokestatic  #290
387: aload         10
389: invokestatic  #291
392: ldc_w         #289
395: invokestatic  #290
398: new           #16
401: dup
402: invokespecial #17
405: ldc           #18
407: invokevirtual #19
410: iload         11
412: invokevirtual #20
415: ldc           #21
417: invokevirtual #19
420: iconst_1
421: invokevirtual #20
424: ldc           #18
426: invokevirtual #19
429: invokevirtual #22
432: iload         11
434: iconst_1
435: if_icmpne     442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #23
446: aload         12
448: invokestatic  #15
451: aload         13
453: invokestatic  #15
456: aload         14
458: invokestatic  #15
461: new           #16
464: dup
465: invokespecial #17
468: ldc           #18
470: invokevirtual #19
473: aload         15
475: invokevirtual #19
478: ldc_w         #292
481: invokevirtual #19
484: invokevirtual #22
487: aload         15
489: ldc           #98
491: invokestatic  #68
494: new           #16
497: dup
498: invokespecial #17
501: ldc           #18
503: invokevirtual #19
506: iload         16
508: invokevirtual #20
511: ldc           #21
513: invokevirtual #19
516: iconst_0
517: invokevirtual #20
520: ldc           #18
522: invokevirtual #19
525: invokevirtual #22
528: iload         16
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #23
541: aload         17
543: invokestatic  #15
546: aload         18
548: invokestatic  #15
551: aload         21
553: invokestatic  #15
556: aload         22
558: invokestatic  #15
561: aload         23
563: invokestatic  #15
566: aload         24
568: invokestatic  #15
571: aload         25
573: invokestatic  #15
576: aload         26
578: invokestatic  #15
581: new           #16
584: dup
585: invokespecial #17
588: ldc           #18
590: invokevirtual #19
593: iload         27
595: invokevirtual #20
598: ldc           #21
600: invokevirtual #19
603: iconst_0
604: invokevirtual #20
607: ldc           #18
609: invokevirtual #19
612: invokevirtual #22
615: iload         27
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #23
628: aload         28
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         29
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         29
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: aload         30
682: invokestatic  #15
685: aload         31
687: invokestatic  #15
690: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test196
Start line: 10178
End line: 10268
Method source code: 
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean21 = whitelist19.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist25 = whitelist19.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.tagName("hi!");
        org.jsoup.nodes.Node node35 = element34.parent();
        org.jsoup.select.Elements elements37 = element34.getElementsMatchingText("[[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]$=[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]]");
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList43 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document41, "hi!");
        org.jsoup.nodes.Element element45 = document41.tagName("hi!");
        org.jsoup.nodes.Element element47 = document41.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings48 = document41.outputSettings();
        org.jsoup.select.Elements elements50 = document41.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element52 = document41.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes53 = document41.attributes();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = attributes53.dataset();
        org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList60 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document58, "hi!");
        org.jsoup.nodes.Element element62 = document58.tagName("hi!");
        org.jsoup.nodes.Element element64 = document58.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings65 = document58.outputSettings();
        org.jsoup.select.Elements elements67 = document58.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element69 = document58.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes70 = document58.attributes();
        attributes53.addAll(attributes70);
        org.jsoup.nodes.Attribute attribute74 = new org.jsoup.nodes.Attribute(":lt(32)", "");
        attributes70.put(attribute74);
        org.jsoup.nodes.Document document77 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Element element79 = document77.appendElement("#document");
        org.jsoup.nodes.Element element80 = element79.lastElementSibling();
        org.jsoup.nodes.Element element81 = element80.lastElementSibling();
        boolean boolean82 = attribute74.equals((java.lang.Object) element81);
        attribute74.setKey("\n<!--[hi!$=   ]-->");
        boolean boolean85 = whitelist25.isSafeAttribute("<html> <head></head> <body> </body> </html>", element34, attribute74);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node86 = element34.unwrap();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(elements37);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(outputSettings48);
        org.junit.Assert.assertNotNull(elements50);
        org.junit.Assert.assertNull(element52);
        org.junit.Assert.assertNotNull(attributes53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertNotNull(nodeList60);
        org.junit.Assert.assertNotNull(element62);
        org.junit.Assert.assertNotNull(element64);
        org.junit.Assert.assertNotNull(outputSettings65);
        org.junit.Assert.assertNotNull(elements67);
        org.junit.Assert.assertNull(element69);
        org.junit.Assert.assertNotNull(attributes70);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(element80);
        org.junit.Assert.assertNotNull(element81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #702
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: ldc           #12
115: invokevirtual #83
118: istore        9
120: aload         8
122: ldc           #86
124: ldc           #239
126: ldc           #240
128: invokevirtual #11
131: astore        10
133: ldc           #25
135: ldc           #12
137: invokestatic  #26
140: astore        11
142: ldc           #12
144: aload         11
146: ldc           #12
148: invokestatic  #27
151: astore        12
153: aload         11
155: ldc           #12
157: invokevirtual #28
160: astore        13
162: aload         13
164: invokevirtual #252
167: astore        14
169: aload         13
171: ldc           #195
173: invokevirtual #470
176: astore        15
178: ldc           #25
180: ldc           #12
182: invokestatic  #26
185: astore        16
187: ldc           #12
189: aload         16
191: ldc           #12
193: invokestatic  #27
196: astore        17
198: aload         16
200: ldc           #12
202: invokevirtual #28
205: astore        18
207: aload         16
209: ldc           #25
211: invokevirtual #29
214: astore        19
216: aload         16
218: invokevirtual #30
221: astore        20
223: aload         16
225: iconst_m1
226: invokevirtual #162
229: astore        21
231: aload         16
233: ldc           #10
235: invokevirtual #163
238: astore        22
240: aload         16
242: invokevirtual #164
245: astore        23
247: aload         23
249: invokevirtual #471
252: astore        24
254: ldc           #25
256: ldc           #12
258: invokestatic  #26
261: astore        25
263: ldc           #12
265: aload         25
267: ldc           #12
269: invokestatic  #27
272: astore        26
274: aload         25
276: ldc           #12
278: invokevirtual #28
281: astore        27
283: aload         25
285: ldc           #25
287: invokevirtual #29
290: astore        28
292: aload         25
294: invokevirtual #30
297: astore        29
299: aload         25
301: iconst_m1
302: invokevirtual #162
305: astore        30
307: aload         25
309: ldc           #10
311: invokevirtual #163
314: astore        31
316: aload         25
318: invokevirtual #164
321: astore        32
323: aload         23
325: aload         32
327: invokevirtual #472
330: new           #263
333: dup
334: ldc           #43
336: ldc           #25
338: invokespecial #264
341: astore        33
343: aload         32
345: aload         33
347: invokevirtual #473
350: ldc           #12
352: invokestatic  #45
355: astore        34
357: aload         34
359: ldc           #13
361: invokevirtual #474
364: astore        35
366: aload         35
368: invokevirtual #475
371: astore        36
373: aload         36
375: invokevirtual #475
378: astore        37
380: aload         33
382: aload         37
384: invokevirtual #476
387: istore        38
389: aload         33
391: ldc_w         #477
394: invokevirtual #266
397: aload         10
399: ldc           #170
401: aload         13
403: aload         33
405: invokevirtual #169
408: istore        39
410: aload         13
412: invokevirtual #703
415: astore        40
417: ldc           #34
419: invokestatic  #35
422: goto          427
425: astore        40
427: aload_1
428: invokestatic  #15
431: aload_2
432: invokestatic  #15
435: new           #16
438: dup
439: invokespecial #17
442: ldc           #18
444: invokevirtual #19
447: aload_3
448: invokevirtual #19
451: ldc           #85
453: invokevirtual #19
456: invokevirtual #22
459: aload_3
460: ldc           #86
462: invokestatic  #68
465: new           #16
468: dup
469: invokespecial #17
472: ldc           #18
474: invokevirtual #19
477: iload         4
479: invokevirtual #20
482: ldc           #21
484: invokevirtual #19
487: iconst_0
488: invokevirtual #20
491: ldc           #18
493: invokevirtual #19
496: invokevirtual #22
499: iload         4
501: ifne          508
504: iconst_1
505: goto          509
508: iconst_0
509: invokestatic  #23
512: aload         5
514: invokestatic  #15
517: new           #16
520: dup
521: invokespecial #17
524: ldc           #18
526: invokevirtual #19
529: iload         6
531: invokevirtual #20
534: ldc           #21
536: invokevirtual #19
539: iconst_1
540: invokevirtual #20
543: ldc           #18
545: invokevirtual #19
548: invokevirtual #22
551: iload         6
553: iconst_1
554: if_icmpne     561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #23
565: new           #16
568: dup
569: invokespecial #17
572: ldc           #18
574: invokevirtual #19
577: iload         7
579: invokevirtual #20
582: ldc           #21
584: invokevirtual #19
587: iconst_0
588: invokevirtual #20
591: ldc           #18
593: invokevirtual #19
596: invokevirtual #22
599: iload         7
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #23
612: aload         8
614: invokestatic  #15
617: new           #16
620: dup
621: invokespecial #17
624: ldc           #18
626: invokevirtual #19
629: iload         9
631: invokevirtual #20
634: ldc           #21
636: invokevirtual #19
639: iconst_0
640: invokevirtual #20
643: ldc           #18
645: invokevirtual #19
648: invokevirtual #22
651: iload         9
653: ifne          660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #23
664: aload         10
666: invokestatic  #15
669: aload         11
671: invokestatic  #15
674: aload         12
676: invokestatic  #15
679: aload         13
681: invokestatic  #15
684: aload         14
686: invokestatic  #79
689: aload         15
691: invokestatic  #15
694: aload         16
696: invokestatic  #15
699: aload         17
701: invokestatic  #15
704: aload         18
706: invokestatic  #15
709: aload         19
711: invokestatic  #15
714: aload         20
716: invokestatic  #15
719: aload         21
721: invokestatic  #15
724: aload         22
726: invokestatic  #79
729: aload         23
731: invokestatic  #15
734: aload         24
736: invokestatic  #15
739: aload         25
741: invokestatic  #15
744: aload         26
746: invokestatic  #15
749: aload         27
751: invokestatic  #15
754: aload         28
756: invokestatic  #15
759: aload         29
761: invokestatic  #15
764: aload         30
766: invokestatic  #15
769: aload         31
771: invokestatic  #79
774: aload         32
776: invokestatic  #15
779: aload         34
781: invokestatic  #15
784: aload         35
786: invokestatic  #15
789: aload         36
791: invokestatic  #15
794: aload         37
796: invokestatic  #15
799: new           #16
802: dup
803: invokespecial #17
806: ldc           #18
808: invokevirtual #19
811: iload         38
813: invokevirtual #20
816: ldc           #21
818: invokevirtual #19
821: iconst_0
822: invokevirtual #20
825: ldc           #18
827: invokevirtual #19
830: invokevirtual #22
833: iload         38
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #23
846: new           #16
849: dup
850: invokespecial #17
853: ldc           #18
855: invokevirtual #19
858: iload         39
860: invokevirtual #20
863: ldc           #21
865: invokevirtual #19
868: iconst_0
869: invokevirtual #20
872: ldc           #18
874: invokevirtual #19
877: invokevirtual #22
880: iload         39
882: ifne          889
885: iconst_1
886: goto          890
889: iconst_0
890: invokestatic  #23
893: return
Exception table:
from    to  target type
410   422   425   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test197
Start line: 10271
End line: 10368
Method source code: 
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.jsoup.select.Evaluator.AttributeStarting attributeStarting1 = new org.jsoup.select.Evaluator.AttributeStarting(":gt(100)");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner5 = new org.jsoup.safety.Cleaner(whitelist4);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining8 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document10 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document14 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList16 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document14, "hi!");
        org.jsoup.nodes.Element element18 = document14.tagName("hi!");
        org.jsoup.nodes.Element element20 = document14.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = document14.outputSettings();
        boolean boolean22 = attributeWithValueContaining8.matches((org.jsoup.nodes.Element) document10, (org.jsoup.nodes.Element) document14);
        org.jsoup.nodes.Document document23 = cleaner5.clean(document14);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str26 = document25.toString();
        java.lang.String str27 = document25.baseUri();
        org.jsoup.nodes.Document document28 = cleaner5.clean(document25);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str31 = document30.toString();
        java.lang.String str32 = document30.baseUri();
        org.jsoup.nodes.Document.QuirksMode quirksMode33 = document30.quirksMode();
        boolean boolean35 = document30.hasClass(":lt(32)=\"[.]\"");
        boolean boolean36 = cleaner5.isValid(document30);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList37 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean39 = objList37.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList40 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document44 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList46 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document44, "hi!");
        org.jsoup.nodes.Element element48 = document44.text("");
        int int49 = objList40.lastIndexOf((java.lang.Object) document44);
        objList37.addFirst((java.lang.Object) document44);
        boolean boolean51 = cleaner5.isValid(document44);
        org.jsoup.nodes.Document document54 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element55 = document54.body();
        org.jsoup.select.Elements elements57 = document54.getElementsMatchingText("");
        org.jsoup.nodes.TextNode textNode60 = org.jsoup.nodes.TextNode.createFromEncoded("hi!", "#document");
        java.lang.String str61 = textNode60.text();
        java.lang.String str62 = textNode60.toString();
        org.jsoup.nodes.Node node63 = textNode60.parent();
        org.jsoup.nodes.Node node66 = textNode60.attr(".<html>\n <head></head>\n <body></body>\n</html>", "");
        boolean boolean68 = textNode60.hasAttr(":lt(32)");
        org.jsoup.nodes.Element element69 = document54.prependChild((org.jsoup.nodes.Node) textNode60);
        org.jsoup.select.Elements elements70 = document54.parents();
        boolean boolean71 = document54.isBlock();
        org.jsoup.nodes.Document document72 = cleaner5.clean(document54);
        java.lang.String str73 = document54.ownText();
        org.jsoup.nodes.Element element74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = attributeStarting1.matches((org.jsoup.nodes.Element) document54, element74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(document14);
        org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(outputSettings21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str26, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str31, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + quirksMode33 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode33.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(document54);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(elements57);
        org.junit.Assert.assertNotNull(textNode60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(elements70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(document72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #704
20: aastore
21: invokevirtual #7
24: pop
25: new           #217
28: dup
29: ldc           #92
31: invokespecial #218
34: astore_1
35: invokestatic  #8
38: astore_2
39: aload_2
40: iconst_1
41: invokevirtual #9
44: astore_3
45: new           #40
48: dup
49: aload_3
50: invokespecial #41
53: astore        4
55: new           #42
58: dup
59: ldc           #43
61: ldc           #32
63: invokespecial #44
66: astore        5
68: ldc           #12
70: invokestatic  #45
73: astore        6
75: ldc           #25
77: ldc           #12
79: invokestatic  #26
82: astore        7
84: ldc           #12
86: aload         7
88: ldc           #12
90: invokestatic  #27
93: astore        8
95: aload         7
97: ldc           #12
99: invokevirtual #28
102: astore        9
104: aload         7
106: ldc           #25
108: invokevirtual #29
111: astore        10
113: aload         7
115: invokevirtual #30
118: astore        11
120: aload         5
122: aload         6
124: aload         7
126: invokevirtual #46
129: istore        12
131: aload         4
133: aload         7
135: invokevirtual #47
138: astore        13
140: ldc           #10
142: invokestatic  #193
145: astore        14
147: aload         14
149: invokevirtual #72
152: astore        15
154: aload         14
156: invokevirtual #194
159: astore        16
161: aload         4
163: aload         14
165: invokevirtual #47
168: astore        17
170: ldc           #10
172: invokestatic  #193
175: astore        18
177: aload         18
179: invokevirtual #72
182: astore        19
184: aload         18
186: invokevirtual #194
189: astore        20
191: aload         18
193: invokevirtual #222
196: astore        21
198: aload         18
200: ldc           #230
202: invokevirtual #305
205: istore        22
207: aload         4
209: aload         18
211: invokevirtual #155
214: istore        23
216: new           #88
219: dup
220: invokespecial #89
223: astore        24
225: aload         24
227: ldc           #43
229: invokevirtual #90
232: istore        25
234: new           #88
237: dup
238: invokespecial #89
241: astore        26
243: ldc           #25
245: ldc           #12
247: invokestatic  #26
250: astore        27
252: ldc           #12
254: aload         27
256: ldc           #12
258: invokestatic  #27
261: astore        28
263: aload         27
265: ldc           #25
267: invokevirtual #64
270: astore        29
272: aload         26
274: aload         27
276: invokevirtual #130
279: istore        30
281: aload         24
283: aload         27
285: invokevirtual #93
288: aload         4
290: aload         27
292: invokevirtual #155
295: istore        31
297: ldc           #25
299: ldc           #12
301: invokestatic  #26
304: astore        32
306: aload         32
308: invokevirtual #166
311: astore        33
313: aload         32
315: ldc           #25
317: invokevirtual #57
320: astore        34
322: ldc           #12
324: ldc           #13
326: invokestatic  #604
329: astore        35
331: aload         35
333: invokevirtual #609
336: astore        36
338: aload         35
340: invokevirtual #705
343: astore        37
345: aload         35
347: invokevirtual #706
350: astore        38
352: aload         35
354: ldc           #32
356: ldc           #25
358: invokevirtual #605
361: astore        39
363: aload         35
365: ldc           #43
367: invokevirtual #707
370: istore        40
372: aload         32
374: aload         35
376: invokevirtual #708
379: astore        41
381: aload         32
383: invokevirtual #203
386: astore        42
388: aload         32
390: invokevirtual #500
393: istore        43
395: aload         4
397: aload         32
399: invokevirtual #47
402: astore        44
404: aload         32
406: invokevirtual #53
409: astore        45
411: aconst_null
412: astore        46
414: aload_1
415: aload         32
417: aload         46
419: invokevirtual #221
422: istore        47
424: ldc           #76
426: invokestatic  #35
429: goto          434
432: astore        47
434: aload_2
435: invokestatic  #15
438: aload_3
439: invokestatic  #15
442: aload         6
444: invokestatic  #15
447: aload         7
449: invokestatic  #15
452: aload         8
454: invokestatic  #15
457: aload         9
459: invokestatic  #15
462: aload         10
464: invokestatic  #15
467: aload         11
469: invokestatic  #15
472: new           #16
475: dup
476: invokespecial #17
479: ldc           #18
481: invokevirtual #19
484: iload         12
486: invokevirtual #20
489: ldc           #21
491: invokevirtual #19
494: iconst_0
495: invokevirtual #20
498: ldc           #18
500: invokevirtual #19
503: invokevirtual #22
506: iload         12
508: ifne          515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #23
519: aload         13
521: invokestatic  #15
524: aload         14
526: invokestatic  #15
529: new           #16
532: dup
533: invokespecial #17
536: ldc           #18
538: invokevirtual #19
541: aload         15
543: invokevirtual #19
546: ldc           #197
548: invokevirtual #19
551: invokevirtual #22
554: aload         15
556: ldc           #151
558: invokestatic  #68
561: new           #16
564: dup
565: invokespecial #17
568: ldc           #18
570: invokevirtual #19
573: aload         16
575: invokevirtual #19
578: ldc           #67
580: invokevirtual #19
583: invokevirtual #22
586: aload         16
588: ldc           #25
590: invokestatic  #68
593: aload         17
595: invokestatic  #15
598: aload         18
600: invokestatic  #15
603: new           #16
606: dup
607: invokespecial #17
610: ldc           #18
612: invokevirtual #19
615: aload         19
617: invokevirtual #19
620: ldc           #197
622: invokevirtual #19
625: invokevirtual #22
628: aload         19
630: ldc           #151
632: invokestatic  #68
635: new           #16
638: dup
639: invokespecial #17
642: ldc           #18
644: invokevirtual #19
647: aload         20
649: invokevirtual #19
652: ldc           #67
654: invokevirtual #19
657: invokevirtual #22
660: aload         20
662: ldc           #25
664: invokestatic  #68
667: new           #16
670: dup
671: invokespecial #17
674: ldc           #18
676: invokevirtual #19
679: aload         21
681: invokevirtual #223
684: ldc           #21
686: invokevirtual #19
689: getstatic     #224
692: invokevirtual #223
695: ldc           #18
697: invokevirtual #19
700: invokevirtual #22
703: aload         21
705: getstatic     #224
708: invokevirtual #225
711: invokestatic  #23
714: new           #16
717: dup
718: invokespecial #17
721: ldc           #18
723: invokevirtual #19
726: iload         22
728: invokevirtual #20
731: ldc           #21
733: invokevirtual #19
736: iconst_0
737: invokevirtual #20
740: ldc           #18
742: invokevirtual #19
745: invokevirtual #22
748: iload         22
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #23
761: new           #16
764: dup
765: invokespecial #17
768: ldc           #18
770: invokevirtual #19
773: iload         23
775: invokevirtual #20
778: ldc           #21
780: invokevirtual #19
783: iconst_1
784: invokevirtual #20
787: ldc           #18
789: invokevirtual #19
792: invokevirtual #22
795: iload         23
797: iconst_1
798: if_icmpne     805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #23
809: new           #16
812: dup
813: invokespecial #17
816: ldc           #18
818: invokevirtual #19
821: iload         25
823: invokevirtual #20
826: ldc           #21
828: invokevirtual #19
831: iconst_0
832: invokevirtual #20
835: ldc           #18
837: invokevirtual #19
840: invokevirtual #22
843: iload         25
845: ifne          852
848: iconst_1
849: goto          853
852: iconst_0
853: invokestatic  #23
856: aload         27
858: invokestatic  #15
861: aload         28
863: invokestatic  #15
866: aload         29
868: invokestatic  #15
871: new           #16
874: dup
875: invokespecial #17
878: ldc           #18
880: invokevirtual #19
883: iload         30
885: invokevirtual #134
888: ldc           #21
890: invokevirtual #19
893: iconst_m1
894: invokevirtual #134
897: ldc           #18
899: invokevirtual #19
902: invokevirtual #22
905: iload         30
907: iconst_m1
908: if_icmpne     915
911: iconst_1
912: goto          916
915: iconst_0
916: invokestatic  #23
919: new           #16
922: dup
923: invokespecial #17
926: ldc           #18
928: invokevirtual #19
931: iload         31
933: invokevirtual #20
936: ldc           #21
938: invokevirtual #19
941: iconst_1
942: invokevirtual #20
945: ldc           #18
947: invokevirtual #19
950: invokevirtual #22
953: iload         31
955: iconst_1
956: if_icmpne     963
959: iconst_1
960: goto          964
963: iconst_0
964: invokestatic  #23
967: aload         32
969: invokestatic  #15
972: aload         33
974: invokestatic  #15
977: aload         34
979: invokestatic  #15
982: aload         35
984: invokestatic  #15
987: new           #16
990: dup
991: invokespecial #17
994: ldc           #18
996: invokevirtual #19
999: aload         36
1001: invokevirtual #19
1004: ldc           #211
1006: invokevirtual #19
1009: invokevirtual #22
1012: aload         36
1014: ldc           #12
1016: invokestatic  #68
1019: new           #16
1022: dup
1023: invokespecial #17
1026: ldc           #18
1028: invokevirtual #19
1031: aload         37
1033: invokevirtual #19
1036: ldc           #211
1038: invokevirtual #19
1041: invokevirtual #22
1044: aload         37
1046: ldc           #12
1048: invokestatic  #68
1051: aload         38
1053: invokestatic  #79
1056: aload         39
1058: invokestatic  #15
1061: new           #16
1064: dup
1065: invokespecial #17
1068: ldc           #18
1070: invokevirtual #19
1073: iload         40
1075: invokevirtual #20
1078: ldc           #21
1080: invokevirtual #19
1083: iconst_0
1084: invokevirtual #20
1087: ldc           #18
1089: invokevirtual #19
1092: invokevirtual #22
1095: iload         40
1097: ifne          1104
1100: iconst_1
1101: goto          1105
1104: iconst_0
1105: invokestatic  #23
1108: aload         41
1110: invokestatic  #15
1113: aload         42
1115: invokestatic  #15
1118: new           #16
1121: dup
1122: invokespecial #17
1125: ldc           #18
1127: invokevirtual #19
1130: iload         43
1132: invokevirtual #20
1135: ldc           #21
1137: invokevirtual #19
1140: iconst_0
1141: invokevirtual #20
1144: ldc           #18
1146: invokevirtual #19
1149: invokevirtual #22
1152: iload         43
1154: ifne          1161
1157: iconst_1
1158: goto          1162
1161: iconst_0
1162: invokestatic  #23
1165: aload         44
1167: invokestatic  #15
1170: new           #16
1173: dup
1174: invokespecial #17
1177: ldc           #18
1179: invokevirtual #19
1182: aload         45
1184: invokevirtual #19
1187: ldc           #211
1189: invokevirtual #19
1192: invokevirtual #22
1195: aload         45
1197: ldc           #12
1199: invokestatic  #68
1202: return
Exception table:
from    to  target type
414   429   432   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test198
Start line: 10371
End line: 10441
Method source code: 
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes6 = whitelist4.getEnforcedAttributes("#text");
        java.lang.String str7 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist4);
        java.lang.String str8 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist4);
        org.jsoup.select.Evaluator.Class class11 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList17 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document15, "hi!");
        org.jsoup.nodes.Element element19 = document15.tagName("hi!");
        org.jsoup.nodes.Element element21 = document15.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = document15.outputSettings();
        org.jsoup.select.Elements elements24 = document15.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element26 = document15.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes27 = document15.attributes();
        org.jsoup.nodes.Element element29 = document15.prepend("[^hi!]");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.tagName("hi!");
        org.jsoup.nodes.Element element39 = document33.append("");
        org.jsoup.nodes.Element element42 = document33.attr("#document", "#document");
        org.jsoup.nodes.Element element43 = document33.body();
        boolean boolean44 = class11.matches((org.jsoup.nodes.Element) document15, (org.jsoup.nodes.Element) document33);
        org.jsoup.nodes.Attribute attribute47 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean48 = whitelist4.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document15, attribute47);
        org.jsoup.safety.Whitelist whitelist51 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist53 = whitelist51.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist55 = whitelist53.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist59 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str60 = org.jsoup.Jsoup.clean(":lt(32)", whitelist59);
        org.jsoup.safety.Whitelist whitelist64 = whitelist59.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray71 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist72 = whitelist59.addTags(strArray71);
        org.jsoup.safety.Whitelist whitelist73 = whitelist55.addProtocols(":matchesOwn(null", "hi!", strArray71);
        org.jsoup.safety.Whitelist whitelist74 = whitelist4.addProtocols("[^\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->]", "<hi!>\n [^hi!]\n</hi!>", strArray71);
        boolean boolean76 = whitelist4.isSafeTag(" .<html>\n <head></head>\n <body></body>\n</html>=\"\"");
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(attributes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[    ^=hi!]" + "'", str8, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(nodeList17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(outputSettings22);
        org.junit.Assert.assertNotNull(elements24);
        org.junit.Assert.assertNull(element26);
        org.junit.Assert.assertNotNull(attributes27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(attribute47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ":lt(32)" + "'", str60, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertNotNull(whitelist74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #709
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: new           #160
58: dup
59: ldc           #10
61: invokespecial #161
64: astore        5
66: ldc           #25
68: ldc           #12
70: invokestatic  #26
73: astore        6
75: ldc           #12
77: aload         6
79: ldc           #12
81: invokestatic  #27
84: astore        7
86: aload         6
88: ldc           #12
90: invokevirtual #28
93: astore        8
95: aload         6
97: ldc           #25
99: invokevirtual #29
102: astore        9
104: aload         6
106: invokevirtual #30
109: astore        10
111: aload         6
113: iconst_m1
114: invokevirtual #162
117: astore        11
119: aload         6
121: ldc           #10
123: invokevirtual #163
126: astore        12
128: aload         6
130: invokevirtual #164
133: astore        13
135: aload         6
137: ldc           #50
139: invokevirtual #165
142: astore        14
144: ldc           #25
146: ldc           #12
148: invokestatic  #26
151: astore        15
153: ldc           #12
155: aload         15
157: ldc           #12
159: invokestatic  #27
162: astore        16
164: aload         15
166: ldc           #12
168: invokevirtual #28
171: astore        17
173: aload         15
175: ldc           #25
177: invokevirtual #29
180: astore        18
182: aload         15
184: ldc           #13
186: ldc           #13
188: invokevirtual #56
191: astore        19
193: aload         15
195: invokevirtual #166
198: astore        20
200: aload         5
202: aload         6
204: aload         15
206: invokevirtual #167
209: istore        21
211: ldc           #114
213: ldc           #25
215: invokestatic  #168
218: astore        22
220: aload_1
221: ldc           #110
223: aload         6
225: aload         22
227: invokevirtual #169
230: istore        23
232: invokestatic  #8
235: astore        24
237: aload         24
239: iconst_1
240: invokevirtual #9
243: astore        25
245: aload         25
247: iconst_0
248: invokevirtual #9
251: astore        26
253: invokestatic  #118
256: astore        27
258: ldc           #43
260: aload         27
262: invokestatic  #81
265: astore        28
267: aload         27
269: ldc           #43
271: ldc           #12
273: ldc           #32
275: invokevirtual #11
278: astore        29
280: bipush        6
282: anewarray     #119
285: dup
286: iconst_0
287: ldc           #109
289: aastore
290: dup
291: iconst_1
292: ldc           #10
294: aastore
295: dup
296: iconst_2
297: ldc           #13
299: aastore
300: dup
301: iconst_3
302: ldc           #50
304: aastore
305: dup
306: iconst_4
307: ldc           #12
309: aastore
310: dup
311: iconst_5
312: ldc           #120
314: aastore
315: astore        30
317: aload         27
319: aload         30
321: invokevirtual #121
324: astore        31
326: aload         26
328: ldc           #38
330: ldc           #12
332: aload         30
334: invokevirtual #122
337: astore        32
339: aload_1
340: ldc           #234
342: ldc           #54
344: aload         30
346: invokevirtual #122
349: astore        33
351: aload_1
352: ldc_w         #710
355: invokevirtual #83
358: istore        34
360: aload_1
361: invokestatic  #15
364: aload_2
365: invokestatic  #15
368: new           #16
371: dup
372: invokespecial #17
375: ldc           #18
377: invokevirtual #19
380: aload_3
381: invokevirtual #19
384: ldc           #67
386: invokevirtual #19
389: invokevirtual #22
392: aload_3
393: ldc           #25
395: invokestatic  #68
398: new           #16
401: dup
402: invokespecial #17
405: ldc           #18
407: invokevirtual #19
410: aload         4
412: invokevirtual #19
415: ldc           #172
417: invokevirtual #19
420: invokevirtual #22
423: aload         4
425: ldc           #173
427: invokestatic  #68
430: aload         6
432: invokestatic  #15
435: aload         7
437: invokestatic  #15
440: aload         8
442: invokestatic  #15
445: aload         9
447: invokestatic  #15
450: aload         10
452: invokestatic  #15
455: aload         11
457: invokestatic  #15
460: aload         12
462: invokestatic  #79
465: aload         13
467: invokestatic  #15
470: aload         14
472: invokestatic  #15
475: aload         15
477: invokestatic  #15
480: aload         16
482: invokestatic  #15
485: aload         17
487: invokestatic  #15
490: aload         18
492: invokestatic  #15
495: aload         19
497: invokestatic  #15
500: aload         20
502: invokestatic  #15
505: new           #16
508: dup
509: invokespecial #17
512: ldc           #18
514: invokevirtual #19
517: iload         21
519: invokevirtual #20
522: ldc           #21
524: invokevirtual #19
527: iconst_0
528: invokevirtual #20
531: ldc           #18
533: invokevirtual #19
536: invokevirtual #22
539: iload         21
541: ifne          548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #23
552: aload         22
554: invokestatic  #15
557: new           #16
560: dup
561: invokespecial #17
564: ldc           #18
566: invokevirtual #19
569: iload         23
571: invokevirtual #20
574: ldc           #21
576: invokevirtual #19
579: iconst_0
580: invokevirtual #20
583: ldc           #18
585: invokevirtual #19
588: invokevirtual #22
591: iload         23
593: ifne          600
596: iconst_1
597: goto          601
600: iconst_0
601: invokestatic  #23
604: aload         24
606: invokestatic  #15
609: aload         25
611: invokestatic  #15
614: aload         26
616: invokestatic  #15
619: aload         27
621: invokestatic  #15
624: new           #16
627: dup
628: invokespecial #17
631: ldc           #18
633: invokevirtual #19
636: aload         28
638: invokevirtual #19
641: ldc           #128
643: invokevirtual #19
646: invokevirtual #22
649: aload         28
651: ldc           #43
653: invokestatic  #68
656: aload         29
658: invokestatic  #15
661: aload         30
663: invokestatic  #15
666: aload         31
668: invokestatic  #15
671: aload         32
673: invokestatic  #15
676: aload         33
678: invokestatic  #15
681: new           #16
684: dup
685: invokespecial #17
688: ldc           #18
690: invokevirtual #19
693: iload         34
695: invokevirtual #20
698: ldc           #21
700: invokevirtual #19
703: iconst_0
704: invokevirtual #20
707: ldc           #18
709: invokevirtual #19
712: invokevirtual #22
715: iload         34
717: ifne          724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #23
728: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test199
Start line: 10444
End line: 10484
Method source code: 
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList3 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList9 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document7, "hi!");
        org.jsoup.nodes.Element element11 = document7.text("");
        int int12 = objList3.lastIndexOf((java.lang.Object) document7);
        objList0.addFirst((java.lang.Object) document7);
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element20 = document17.empty();
        org.jsoup.nodes.Element element22 = document17.removeClass("hi!");
        boolean boolean23 = objList0.equals((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.Object> objItor24 = objList0.iterator();
        objList0.clear();
        org.jsoup.safety.Whitelist whitelist27 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist29 = whitelist27.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist33 = whitelist27.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str34 = org.jsoup.Jsoup.clean("\nhi!", whitelist33);
        objList0.addLast((java.lang.Object) "\nhi!");
        java.lang.Object obj36 = objList0.pollFirst();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objItor24);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "\nhi!" + "'", obj36, "\nhi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #711
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: new           #88
43: dup
44: invokespecial #89
47: astore_3
48: ldc           #25
50: ldc           #12
52: invokestatic  #26
55: astore        4
57: ldc           #12
59: aload         4
61: ldc           #12
63: invokestatic  #27
66: astore        5
68: aload         4
70: ldc           #25
72: invokevirtual #64
75: astore        6
77: aload_3
78: aload         4
80: invokevirtual #130
83: istore        7
85: aload_1
86: aload         4
88: invokevirtual #93
91: ldc           #25
93: ldc           #12
95: invokestatic  #26
98: astore        8
100: ldc           #12
102: aload         8
104: ldc           #12
106: invokestatic  #27
109: astore        9
111: aload         8
113: invokevirtual #103
116: astore        10
118: aload         8
120: ldc           #12
122: invokevirtual #59
125: astore        11
127: aload_1
128: ldc           #12
130: invokevirtual #90
133: istore        12
135: aload_1
136: invokevirtual #410
139: astore        13
141: aload_1
142: invokevirtual #131
145: invokestatic  #8
148: astore        14
150: aload         14
152: iconst_1
153: invokevirtual #9
156: astore        15
158: aload         14
160: ldc           #10
162: ldc           #10
164: ldc           #10
166: invokevirtual #11
169: astore        16
171: ldc           #98
173: aload         16
175: invokestatic  #81
178: astore        17
180: aload_1
181: ldc           #98
183: invokevirtual #95
186: aload_1
187: invokevirtual #660
190: astore        18
192: new           #16
195: dup
196: invokespecial #17
199: ldc           #18
201: invokevirtual #19
204: iload_2
205: invokevirtual #20
208: ldc           #21
210: invokevirtual #19
213: iconst_0
214: invokevirtual #20
217: ldc           #18
219: invokevirtual #19
222: invokevirtual #22
225: iload_2
226: ifne          233
229: iconst_1
230: goto          234
233: iconst_0
234: invokestatic  #23
237: aload         4
239: invokestatic  #15
242: aload         5
244: invokestatic  #15
247: aload         6
249: invokestatic  #15
252: new           #16
255: dup
256: invokespecial #17
259: ldc           #18
261: invokevirtual #19
264: iload         7
266: invokevirtual #134
269: ldc           #21
271: invokevirtual #19
274: iconst_m1
275: invokevirtual #134
278: ldc           #18
280: invokevirtual #19
283: invokevirtual #22
286: iload         7
288: iconst_m1
289: if_icmpne     296
292: iconst_1
293: goto          297
296: iconst_0
297: invokestatic  #23
300: aload         8
302: invokestatic  #15
305: aload         9
307: invokestatic  #15
310: aload         10
312: invokestatic  #15
315: aload         11
317: invokestatic  #15
320: new           #16
323: dup
324: invokespecial #17
327: ldc           #18
329: invokevirtual #19
332: iload         12
334: invokevirtual #20
337: ldc           #21
339: invokevirtual #19
342: iconst_0
343: invokevirtual #20
346: ldc           #18
348: invokevirtual #19
351: invokevirtual #22
354: iload         12
356: ifne          363
359: iconst_1
360: goto          364
363: iconst_0
364: invokestatic  #23
367: aload         13
369: invokestatic  #15
372: aload         14
374: invokestatic  #15
377: aload         15
379: invokestatic  #15
382: aload         16
384: invokestatic  #15
387: new           #16
390: dup
391: invokespecial #17
394: ldc           #18
396: invokevirtual #19
399: aload         17
401: invokevirtual #19
404: ldc           #211
406: invokevirtual #19
409: invokevirtual #22
412: aload         17
414: ldc           #12
416: invokestatic  #68
419: new           #16
422: dup
423: invokespecial #17
426: ldc           #18
428: invokevirtual #19
431: aload         18
433: invokevirtual #223
436: ldc_w         #292
439: invokevirtual #19
442: invokevirtual #22
445: aload         18
447: ldc           #98
449: invokestatic  #68
452: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test200
Start line: 10487
End line: 10500
Method source code: 
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist2.addEnforcedAttribute(":eq(1)", "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", ".\n<!---->");
        org.jsoup.nodes.Attributes attributes10 = whitelist2.getEnforcedAttributes(" hi!");
        java.lang.String str11 = org.jsoup.Jsoup.clean("<html> <head></head> <body> [:lt(32)] </body> </html>", "#[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(attributes10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[:lt(32)]" + "'", str11, "[:lt(32)]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #712
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc_w         #279
39: ldc           #82
41: ldc           #145
43: invokevirtual #11
46: astore_3
47: aload_1
48: ldc           #60
50: invokevirtual #150
53: astore        4
55: ldc_w         #713
58: ldc_w         #714
61: aload_1
62: invokestatic  #94
65: astore        5
67: aload_1
68: invokestatic  #15
71: aload_2
72: invokestatic  #15
75: aload_3
76: invokestatic  #15
79: aload         4
81: invokestatic  #15
84: new           #16
87: dup
88: invokespecial #17
91: ldc           #18
93: invokevirtual #19
96: aload         5
98: invokevirtual #19
101: ldc           #184
103: invokevirtual #19
106: invokevirtual #22
109: aload         5
111: ldc           #58
113: invokestatic  #68
116: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test201
Start line: 10503
End line: 10586
Method source code: 
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj3 = objList0.peekFirst();
        objList0.addFirst((java.lang.Object) ":gt(100)");
        java.lang.String str6 = objList0.toString();
        java.lang.Object obj7 = objList0.removeFirst();
        org.jsoup.nodes.Document document11 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList13 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document11, "hi!");
        org.jsoup.nodes.Element element15 = document11.tagName("hi!");
        org.jsoup.nodes.Element element17 = document11.append("");
        org.jsoup.nodes.Element element20 = document11.attr("#document", "#document");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = element20.siblingNodes();
        boolean boolean22 = objList0.removeAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList21);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList23 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean25 = objList23.equals((java.lang.Object) ":lt(32)");
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList31 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document29, "hi!");
        org.jsoup.nodes.Element element33 = document29.tagName("hi!");
        org.jsoup.nodes.Element element35 = document29.append("");
        java.lang.String str36 = element35.toString();
        int int37 = objList23.indexOf((java.lang.Object) element35);
        boolean boolean38 = objList0.remove((java.lang.Object) objList23);
        org.jsoup.safety.Whitelist whitelist39 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist41 = whitelist39.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner42 = new org.jsoup.safety.Cleaner(whitelist41);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining45 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document47 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList53 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document51, "hi!");
        org.jsoup.nodes.Element element55 = document51.tagName("hi!");
        org.jsoup.nodes.Element element57 = document51.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings58 = document51.outputSettings();
        boolean boolean59 = attributeWithValueContaining45.matches((org.jsoup.nodes.Element) document47, (org.jsoup.nodes.Element) document51);
        org.jsoup.nodes.Document document60 = cleaner42.clean(document51);
        org.jsoup.nodes.Document document62 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str63 = document62.toString();
        java.lang.String str64 = document62.baseUri();
        org.jsoup.nodes.Document document65 = cleaner42.clean(document62);
        org.jsoup.nodes.Document document66 = document65.clone();
        boolean boolean67 = objList0.offer((java.lang.Object) document66);
        java.lang.Object obj68 = objList0.pollLast();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[:gt(100)]" + "'", str6, "[:gt(100)]");
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + ":gt(100)" + "'", obj7, ":gt(100)");
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str36, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertNotNull(outputSettings58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(document60);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str63, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "<html>\n <head></head>\n <body>   \n </body>\n</html>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #715
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: aload_1
41: invokevirtual #91
44: astore_3
45: aload_1
46: ldc           #92
48: invokevirtual #93
51: aload_1
52: invokevirtual #570
55: astore        4
57: aload_1
58: invokevirtual #646
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: ldc           #13
105: ldc           #13
107: invokevirtual #56
110: astore        10
112: aload         10
114: invokevirtual #396
117: astore        11
119: aload_1
120: aload         11
122: invokevirtual #647
125: istore        12
127: new           #88
130: dup
131: invokespecial #89
134: astore        13
136: aload         13
138: ldc           #43
140: invokevirtual #90
143: istore        14
145: ldc           #25
147: ldc           #12
149: invokestatic  #26
152: astore        15
154: ldc           #12
156: aload         15
158: ldc           #12
160: invokestatic  #27
163: astore        16
165: aload         15
167: ldc           #12
169: invokevirtual #28
172: astore        17
174: aload         15
176: ldc           #25
178: invokevirtual #29
181: astore        18
183: aload         18
185: invokevirtual #363
188: astore        19
190: aload         13
192: aload         18
194: invokevirtual #380
197: istore        20
199: aload_1
200: aload         13
202: invokevirtual #648
205: istore        21
207: invokestatic  #8
210: astore        22
212: aload         22
214: iconst_1
215: invokevirtual #9
218: astore        23
220: new           #40
223: dup
224: aload         23
226: invokespecial #41
229: astore        24
231: new           #42
234: dup
235: ldc           #43
237: ldc           #32
239: invokespecial #44
242: astore        25
244: ldc           #12
246: invokestatic  #45
249: astore        26
251: ldc           #25
253: ldc           #12
255: invokestatic  #26
258: astore        27
260: ldc           #12
262: aload         27
264: ldc           #12
266: invokestatic  #27
269: astore        28
271: aload         27
273: ldc           #12
275: invokevirtual #28
278: astore        29
280: aload         27
282: ldc           #25
284: invokevirtual #29
287: astore        30
289: aload         27
291: invokevirtual #30
294: astore        31
296: aload         25
298: aload         26
300: aload         27
302: invokevirtual #46
305: istore        32
307: aload         24
309: aload         27
311: invokevirtual #47
314: astore        33
316: ldc           #10
318: invokestatic  #193
321: astore        34
323: aload         34
325: invokevirtual #72
328: astore        35
330: aload         34
332: invokevirtual #194
335: astore        36
337: aload         24
339: aload         34
341: invokevirtual #47
344: astore        37
346: aload         37
348: invokevirtual #154
351: astore        38
353: aload_1
354: aload         38
356: invokevirtual #649
359: istore        39
361: aload_1
362: invokevirtual #685
365: astore        40
367: new           #16
370: dup
371: invokespecial #17
374: ldc           #18
376: invokevirtual #19
379: iload_2
380: invokevirtual #20
383: ldc           #21
385: invokevirtual #19
388: iconst_0
389: invokevirtual #20
392: ldc           #18
394: invokevirtual #19
397: invokevirtual #22
400: iload_2
401: ifne          408
404: iconst_1
405: goto          409
408: iconst_0
409: invokestatic  #23
412: aload_3
413: invokestatic  #79
416: new           #16
419: dup
420: invokespecial #17
423: ldc           #18
425: invokevirtual #19
428: aload         4
430: invokevirtual #19
433: ldc_w         #325
436: invokevirtual #19
439: invokevirtual #22
442: aload         4
444: ldc_w         #262
447: invokestatic  #68
450: new           #16
453: dup
454: invokespecial #17
457: ldc           #18
459: invokevirtual #19
462: aload         5
464: invokevirtual #223
467: ldc_w         #652
470: invokevirtual #19
473: invokevirtual #22
476: aload         5
478: ldc           #92
480: invokestatic  #68
483: aload         6
485: invokestatic  #15
488: aload         7
490: invokestatic  #15
493: aload         8
495: invokestatic  #15
498: aload         9
500: invokestatic  #15
503: aload         10
505: invokestatic  #15
508: aload         11
510: invokestatic  #15
513: new           #16
516: dup
517: invokespecial #17
520: ldc           #18
522: invokevirtual #19
525: iload         12
527: invokevirtual #20
530: ldc           #21
532: invokevirtual #19
535: iconst_0
536: invokevirtual #20
539: ldc           #18
541: invokevirtual #19
544: invokevirtual #22
547: iload         12
549: ifne          556
552: iconst_1
553: goto          557
556: iconst_0
557: invokestatic  #23
560: new           #16
563: dup
564: invokespecial #17
567: ldc           #18
569: invokevirtual #19
572: iload         14
574: invokevirtual #20
577: ldc           #21
579: invokevirtual #19
582: iconst_0
583: invokevirtual #20
586: ldc           #18
588: invokevirtual #19
591: invokevirtual #22
594: iload         14
596: ifne          603
599: iconst_1
600: goto          604
603: iconst_0
604: invokestatic  #23
607: aload         15
609: invokestatic  #15
612: aload         16
614: invokestatic  #15
617: aload         17
619: invokestatic  #15
622: aload         18
624: invokestatic  #15
627: new           #16
630: dup
631: invokespecial #17
634: ldc           #18
636: invokevirtual #19
639: aload         19
641: invokevirtual #19
644: ldc           #78
646: invokevirtual #19
649: invokevirtual #22
652: aload         19
654: ldc           #10
656: invokestatic  #68
659: new           #16
662: dup
663: invokespecial #17
666: ldc           #18
668: invokevirtual #19
671: iload         20
673: invokevirtual #134
676: ldc           #21
678: invokevirtual #19
681: iconst_m1
682: invokevirtual #134
685: ldc           #18
687: invokevirtual #19
690: invokevirtual #22
693: iload         20
695: iconst_m1
696: if_icmpne     703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #23
707: new           #16
710: dup
711: invokespecial #17
714: ldc           #18
716: invokevirtual #19
719: iload         21
721: invokevirtual #20
724: ldc           #21
726: invokevirtual #19
729: iconst_0
730: invokevirtual #20
733: ldc           #18
735: invokevirtual #19
738: invokevirtual #22
741: iload         21
743: ifne          750
746: iconst_1
747: goto          751
750: iconst_0
751: invokestatic  #23
754: aload         22
756: invokestatic  #15
759: aload         23
761: invokestatic  #15
764: aload         26
766: invokestatic  #15
769: aload         27
771: invokestatic  #15
774: aload         28
776: invokestatic  #15
779: aload         29
781: invokestatic  #15
784: aload         30
786: invokestatic  #15
789: aload         31
791: invokestatic  #15
794: new           #16
797: dup
798: invokespecial #17
801: ldc           #18
803: invokevirtual #19
806: iload         32
808: invokevirtual #20
811: ldc           #21
813: invokevirtual #19
816: iconst_0
817: invokevirtual #20
820: ldc           #18
822: invokevirtual #19
825: invokevirtual #22
828: iload         32
830: ifne          837
833: iconst_1
834: goto          838
837: iconst_0
838: invokestatic  #23
841: aload         33
843: invokestatic  #15
846: aload         34
848: invokestatic  #15
851: new           #16
854: dup
855: invokespecial #17
858: ldc           #18
860: invokevirtual #19
863: aload         35
865: invokevirtual #19
868: ldc           #197
870: invokevirtual #19
873: invokevirtual #22
876: aload         35
878: ldc           #151
880: invokestatic  #68
883: new           #16
886: dup
887: invokespecial #17
890: ldc           #18
892: invokevirtual #19
895: aload         36
897: invokevirtual #19
900: ldc           #67
902: invokevirtual #19
905: invokevirtual #22
908: aload         36
910: ldc           #25
912: invokestatic  #68
915: aload         37
917: invokestatic  #15
920: aload         38
922: invokestatic  #15
925: new           #16
928: dup
929: invokespecial #17
932: ldc           #18
934: invokevirtual #19
937: iload         39
939: invokevirtual #20
942: ldc           #21
944: invokevirtual #19
947: iconst_1
948: invokevirtual #20
951: ldc           #18
953: invokevirtual #19
956: invokevirtual #22
959: iload         39
961: iconst_1
962: if_icmpne     969
965: iconst_1
966: goto          970
969: iconst_0
970: invokestatic  #23
973: aload         40
975: invokestatic  #15
978: aload         40
980: invokevirtual #571
983: ldc           #151
985: invokestatic  #290
988: aload         40
990: invokestatic  #572
993: ldc           #151
995: invokestatic  #290
998: aload         40
1000: invokestatic  #573
1003: ldc           #151
1005: invokestatic  #290
1008: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test202
Start line: 10589
End line: 10615
Method source code: 
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes2 = whitelist0.getEnforcedAttributes("#text");
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        java.lang.String str8 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist7);
        boolean boolean10 = whitelist7.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray20 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean21 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray20);
        boolean boolean22 = org.jsoup.helper.StringUtil.in(" hi!", strArray20);
        org.jsoup.safety.Whitelist whitelist23 = whitelist7.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray20);
        org.jsoup.safety.Whitelist whitelist24 = whitelist0.addAttributes(":lt(32)=&quot;&quot;=&quot;.&quot;", strArray20);
        org.jsoup.helper.Validate.notNull((java.lang.Object) whitelist0, "[:gt(100)]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(attributes2);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "." + "'", str8, ".");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist24);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #716
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: invokestatic  #8
39: astore_3
40: aload_3
41: iconst_1
42: invokevirtual #9
45: astore        4
47: ldc           #32
49: aload         4
51: invokestatic  #81
54: astore        5
56: aload         4
58: ldc           #82
60: invokevirtual #83
63: istore        6
65: iconst_5
66: anewarray     #119
69: dup
70: iconst_0
71: ldc           #13
73: aastore
74: dup
75: iconst_1
76: ldc           #32
78: aastore
79: dup
80: iconst_2
81: ldc           #10
83: aastore
84: dup
85: iconst_3
86: ldc           #43
88: aastore
89: dup
90: iconst_4
91: ldc           #58
93: aastore
94: astore        7
96: ldc           #10
98: aload         7
100: invokestatic  #123
103: istore        8
105: ldc           #60
107: aload         7
109: invokestatic  #123
112: istore        9
114: aload         4
116: ldc           #238
118: ldc           #32
120: aload         7
122: invokevirtual #122
125: astore        10
127: aload_1
128: ldc_w         #300
131: aload         7
133: invokevirtual #127
136: astore        11
138: aload_1
139: ldc_w         #262
142: invokestatic  #181
145: aload_1
146: invokestatic  #15
149: aload_2
150: invokestatic  #15
153: aload_3
154: invokestatic  #15
157: aload         4
159: invokestatic  #15
162: new           #16
165: dup
166: invokespecial #17
169: ldc           #18
171: invokevirtual #19
174: aload         5
176: invokevirtual #19
179: ldc           #85
181: invokevirtual #19
184: invokevirtual #22
187: aload         5
189: ldc           #86
191: invokestatic  #68
194: new           #16
197: dup
198: invokespecial #17
201: ldc           #18
203: invokevirtual #19
206: iload         6
208: invokevirtual #20
211: ldc           #21
213: invokevirtual #19
216: iconst_0
217: invokevirtual #20
220: ldc           #18
222: invokevirtual #19
225: invokevirtual #22
228: iload         6
230: ifne          237
233: iconst_1
234: goto          238
237: iconst_0
238: invokestatic  #23
241: aload         7
243: invokestatic  #15
246: new           #16
249: dup
250: invokespecial #17
253: ldc           #18
255: invokevirtual #19
258: iload         8
260: invokevirtual #20
263: ldc           #21
265: invokevirtual #19
268: iconst_1
269: invokevirtual #20
272: ldc           #18
274: invokevirtual #19
277: invokevirtual #22
280: iload         8
282: iconst_1
283: if_icmpne     290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #23
294: new           #16
297: dup
298: invokespecial #17
301: ldc           #18
303: invokevirtual #19
306: iload         9
308: invokevirtual #20
311: ldc           #21
313: invokevirtual #19
316: iconst_0
317: invokevirtual #20
320: ldc           #18
322: invokevirtual #19
325: invokevirtual #22
328: iload         9
330: ifne          337
333: iconst_1
334: goto          338
337: iconst_0
338: invokestatic  #23
341: aload         10
343: invokestatic  #15
346: aload         11
348: invokestatic  #15
351: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test203
Start line: 10618
End line: 10681
Method source code: 
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        org.jsoup.nodes.Element element9 = document3.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings10 = document3.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings12 = outputSettings10.prettyPrint(false);
        org.jsoup.safety.Whitelist whitelist17 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str18 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist17);
        boolean boolean20 = whitelist17.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist22 = whitelist17.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist26 = whitelist22.addEnforcedAttribute("[^hi!]", "<html>\n <head></head>\n <body>   \n </body>\n</html>", "#comment");
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.tagName("hi!");
        org.jsoup.nodes.Element element36 = document30.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = document30.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings38 = outputSettings37.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings40 = outputSettings38.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode41 = org.jsoup.nodes.Entities.EscapeMode.base;
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = outputSettings40.escapeMode(escapeMode41);
        org.jsoup.nodes.Entities.EscapeMode escapeMode43 = org.jsoup.nodes.Entities.EscapeMode.extended;
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = outputSettings42.escapeMode(escapeMode43);
        boolean boolean45 = outputSettings42.prettyPrint();
        java.lang.String str46 = org.jsoup.Jsoup.clean(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", "[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]", whitelist22, outputSettings42);
        java.nio.charset.Charset charset47 = outputSettings42.charset();
        org.jsoup.nodes.Document.OutputSettings outputSettings48 = outputSettings10.charset(charset47);
        java.nio.charset.Charset charset49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document.OutputSettings outputSettings50 = outputSettings10.charset(charset49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(outputSettings10);
        org.junit.Assert.assertNotNull(outputSettings12);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!$=   ]" + "'", str18, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertNotNull(outputSettings38);
        org.junit.Assert.assertNotNull(outputSettings40);
        org.junit.Assert.assertTrue("'" + escapeMode41 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode41.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + escapeMode43 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.extended + "'", escapeMode43.equals(org.jsoup.nodes.Entities.EscapeMode.extended));
        org.junit.Assert.assertNotNull(outputSettings44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "&colon;containsOwn&lpar;&lsqb;&colon;lt&lpar;32&rpar;&ast;&equals;&period;&NewLine; &NewLine; &NewLine;&rbrack;" + "'", str46, "&colon;containsOwn&lpar;&lsqb;&colon;lt&lpar;32&rpar;&ast;&equals;&period;&NewLine; &NewLine; &NewLine;&rbrack;");
        org.junit.Assert.assertNotNull(charset47);
        org.junit.Assert.assertNotNull(outputSettings48);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #717
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #25
52: invokevirtual #29
55: astore        4
57: aload_1
58: invokevirtual #30
61: astore        5
63: aload         5
65: iconst_0
66: invokevirtual #31
69: astore        6
71: invokestatic  #8
74: astore        7
76: ldc           #109
78: ldc           #110
80: aload         7
82: invokestatic  #94
85: astore        8
87: aload         7
89: ldc           #25
91: invokevirtual #83
94: istore        9
96: aload         7
98: iconst_0
99: invokevirtual #9
102: astore        10
104: aload         10
106: ldc           #50
108: ldc           #151
110: ldc           #114
112: invokevirtual #11
115: astore        11
117: ldc           #25
119: ldc           #12
121: invokestatic  #26
124: astore        12
126: ldc           #12
128: aload         12
130: ldc           #12
132: invokestatic  #27
135: astore        13
137: aload         12
139: ldc           #12
141: invokevirtual #28
144: astore        14
146: aload         12
148: ldc           #25
150: invokevirtual #29
153: astore        15
155: aload         12
157: invokevirtual #30
160: astore        16
162: aload         16
164: invokevirtual #205
167: astore        17
169: aload         17
171: iconst_0
172: invokevirtual #31
175: astore        18
177: getstatic     #381
180: astore        19
182: aload         18
184: aload         19
186: invokevirtual #190
189: astore        20
191: getstatic     #528
194: astore        21
196: aload         20
198: aload         21
200: invokevirtual #190
203: astore        22
205: aload         20
207: invokevirtual #461
210: istore        23
212: ldc           #110
214: ldc           #228
216: aload         10
218: aload         20
220: invokestatic  #33
223: astore        24
225: aload         20
227: invokevirtual #460
230: astore        25
232: aload         5
234: aload         25
236: invokevirtual #718
239: astore        26
241: aconst_null
242: astore        27
244: aload         5
246: aload         27
248: invokevirtual #718
251: astore        28
253: ldc           #76
255: invokestatic  #35
258: goto          263
261: astore        28
263: aload_1
264: invokestatic  #15
267: aload_2
268: invokestatic  #15
271: aload_3
272: invokestatic  #15
275: aload         4
277: invokestatic  #15
280: aload         5
282: invokestatic  #15
285: aload         6
287: invokestatic  #15
290: aload         7
292: invokestatic  #15
295: new           #16
298: dup
299: invokespecial #17
302: ldc           #18
304: invokevirtual #19
307: aload         8
309: invokevirtual #19
312: ldc           #111
314: invokevirtual #19
317: invokevirtual #22
320: aload         8
322: ldc           #65
324: invokestatic  #68
327: new           #16
330: dup
331: invokespecial #17
334: ldc           #18
336: invokevirtual #19
339: iload         9
341: invokevirtual #20
344: ldc           #21
346: invokevirtual #19
349: iconst_0
350: invokevirtual #20
353: ldc           #18
355: invokevirtual #19
358: invokevirtual #22
361: iload         9
363: ifne          370
366: iconst_1
367: goto          371
370: iconst_0
371: invokestatic  #23
374: aload         10
376: invokestatic  #15
379: aload         11
381: invokestatic  #15
384: aload         12
386: invokestatic  #15
389: aload         13
391: invokestatic  #15
394: aload         14
396: invokestatic  #15
399: aload         15
401: invokestatic  #15
404: aload         16
406: invokestatic  #15
409: aload         17
411: invokestatic  #15
414: aload         18
416: invokestatic  #15
419: new           #16
422: dup
423: invokespecial #17
426: ldc           #18
428: invokevirtual #19
431: aload         19
433: invokevirtual #223
436: ldc           #21
438: invokevirtual #19
441: getstatic     #381
444: invokevirtual #223
447: ldc           #18
449: invokevirtual #19
452: invokevirtual #22
455: aload         19
457: getstatic     #381
460: invokevirtual #385
463: invokestatic  #23
466: aload         20
468: invokestatic  #15
471: new           #16
474: dup
475: invokespecial #17
478: ldc           #18
480: invokevirtual #19
483: aload         21
485: invokevirtual #223
488: ldc           #21
490: invokevirtual #19
493: getstatic     #528
496: invokevirtual #223
499: ldc           #18
501: invokevirtual #19
504: invokevirtual #22
507: aload         21
509: getstatic     #528
512: invokevirtual #385
515: invokestatic  #23
518: aload         22
520: invokestatic  #15
523: new           #16
526: dup
527: invokespecial #17
530: ldc           #18
532: invokevirtual #19
535: iload         23
537: invokevirtual #20
540: ldc           #21
542: invokevirtual #19
545: iconst_0
546: invokevirtual #20
549: ldc           #18
551: invokevirtual #19
554: invokevirtual #22
557: iload         23
559: ifne          566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #23
570: new           #16
573: dup
574: invokespecial #17
577: ldc           #18
579: invokevirtual #19
582: aload         24
584: invokevirtual #19
587: ldc_w         #719
590: invokevirtual #19
593: invokevirtual #22
596: aload         24
598: ldc_w         #720
601: invokestatic  #68
604: aload         25
606: invokestatic  #15
609: aload         26
611: invokestatic  #15
614: return
Exception table:
from    to  target type
244   258   261   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test204
Start line: 10684
End line: 10719
Method source code: 
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Element element28 = document26.appendText("<html>\n <head></head>\n <body> \n </body>\n</html>");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(element28);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #721
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: aload         16
159: ldc_w         #722
162: invokevirtual #209
165: astore        17
167: aload_1
168: invokestatic  #15
171: aload_2
172: invokestatic  #15
175: aload         5
177: invokestatic  #15
180: aload         6
182: invokestatic  #15
185: aload         7
187: invokestatic  #15
190: aload         8
192: invokestatic  #15
195: aload         9
197: invokestatic  #15
200: aload         10
202: invokestatic  #15
205: new           #16
208: dup
209: invokespecial #17
212: ldc           #18
214: invokevirtual #19
217: iload         11
219: invokevirtual #20
222: ldc           #21
224: invokevirtual #19
227: iconst_0
228: invokevirtual #20
231: ldc           #18
233: invokevirtual #19
236: invokevirtual #22
239: iload         11
241: ifne          248
244: iconst_1
245: goto          249
248: iconst_0
249: invokestatic  #23
252: aload         12
254: invokestatic  #15
257: aload         13
259: invokestatic  #15
262: new           #16
265: dup
266: invokespecial #17
269: ldc           #18
271: invokevirtual #19
274: aload         14
276: invokevirtual #19
279: ldc           #197
281: invokevirtual #19
284: invokevirtual #22
287: aload         14
289: ldc           #151
291: invokestatic  #68
294: new           #16
297: dup
298: invokespecial #17
301: ldc           #18
303: invokevirtual #19
306: aload         15
308: invokevirtual #19
311: ldc           #67
313: invokevirtual #19
316: invokevirtual #22
319: aload         15
321: ldc           #25
323: invokestatic  #68
326: aload         16
328: invokestatic  #15
331: aload         17
333: invokestatic  #15
336: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test205
Start line: 10722
End line: 10824
Method source code: 
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.jsoup.select.Evaluator.AttributeWithValue attributeWithValue2 = new org.jsoup.select.Evaluator.AttributeWithValue("#data", "[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]");
        java.lang.String str3 = attributeWithValue2.toString();
        java.lang.String str4 = attributeWithValue2.toString();
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner8 = new org.jsoup.safety.Cleaner(whitelist7);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining11 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document13 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element21 = document17.tagName("hi!");
        org.jsoup.nodes.Element element23 = document17.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document17.outputSettings();
        boolean boolean25 = attributeWithValueContaining11.matches((org.jsoup.nodes.Element) document13, (org.jsoup.nodes.Element) document17);
        org.jsoup.nodes.Document document26 = cleaner8.clean(document17);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str29 = document28.toString();
        java.lang.String str30 = document28.baseUri();
        org.jsoup.nodes.Document document31 = cleaner8.clean(document28);
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parseBodyFragment("                                                                                                    ");
        org.jsoup.nodes.Document document34 = cleaner8.clean(document33);
        org.jsoup.nodes.Document document36 = new org.jsoup.nodes.Document("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList42 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document40, "hi!");
        org.jsoup.nodes.Element element43 = document40.empty();
        org.jsoup.nodes.Element element45 = document40.removeClass("hi!");
        java.lang.String str46 = document40.id();
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList52 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document50, "hi!");
        org.jsoup.nodes.Element element53 = document50.empty();
        org.jsoup.nodes.Element element55 = document50.removeClass("hi!");
        java.lang.String str56 = document50.nodeName();
        org.jsoup.nodes.Document.QuirksMode quirksMode57 = document50.quirksMode();
        org.jsoup.nodes.Document document58 = document40.quirksMode(quirksMode57);
        java.lang.String str59 = document58.id();
        org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList65 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document63, "hi!");
        org.jsoup.nodes.Element element67 = document63.tagName("hi!");
        org.jsoup.nodes.Element element69 = document63.append("");
        java.lang.String str70 = document63.toString();
        org.jsoup.nodes.Element element72 = document63.prependElement("\nhi!");
        org.jsoup.select.Elements elements74 = document63.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document.QuirksMode quirksMode75 = org.jsoup.nodes.Document.QuirksMode.quirks;
        org.jsoup.nodes.Document document76 = document63.quirksMode(quirksMode75);
        org.jsoup.nodes.Document document77 = document58.quirksMode(quirksMode75);
        org.jsoup.nodes.Document document78 = document36.quirksMode(quirksMode75);
        org.jsoup.select.Elements elements80 = document36.getElementsMatchingOwnText("[    =hi!]");
        boolean boolean81 = attributeWithValue2.matches((org.jsoup.nodes.Element) document34, (org.jsoup.nodes.Element) document36);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Element element83 = document34.after("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]" + "'", str3, "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]" + "'", str4, "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]");
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str29, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(nodeList42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#document" + "'", str56, "#document");
        org.junit.Assert.assertTrue("'" + quirksMode57 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode57.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(document63);
        org.junit.Assert.assertNotNull(nodeList65);
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str70, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertNotNull(elements74);
        org.junit.Assert.assertTrue("'" + quirksMode75 + "' != '" + org.jsoup.nodes.Document.QuirksMode.quirks + "'", quirksMode75.equals(org.jsoup.nodes.Document.QuirksMode.quirks));
        org.junit.Assert.assertNotNull(document76);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(document78);
        org.junit.Assert.assertNotNull(elements80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #723
20: aastore
21: invokevirtual #7
24: pop
25: new           #724
28: dup
29: ldc_w         #267
32: ldc_w         #317
35: invokespecial #725
38: astore_1
39: aload_1
40: invokevirtual #726
43: astore_2
44: aload_1
45: invokevirtual #726
48: astore_3
49: invokestatic  #8
52: astore        4
54: aload         4
56: iconst_1
57: invokevirtual #9
60: astore        5
62: new           #40
65: dup
66: aload         5
68: invokespecial #41
71: astore        6
73: new           #42
76: dup
77: ldc           #43
79: ldc           #32
81: invokespecial #44
84: astore        7
86: ldc           #12
88: invokestatic  #45
91: astore        8
93: ldc           #25
95: ldc           #12
97: invokestatic  #26
100: astore        9
102: ldc           #12
104: aload         9
106: ldc           #12
108: invokestatic  #27
111: astore        10
113: aload         9
115: ldc           #12
117: invokevirtual #28
120: astore        11
122: aload         9
124: ldc           #25
126: invokevirtual #29
129: astore        12
131: aload         9
133: invokevirtual #30
136: astore        13
138: aload         7
140: aload         8
142: aload         9
144: invokevirtual #46
147: istore        14
149: aload         6
151: aload         9
153: invokevirtual #47
156: astore        15
158: ldc           #10
160: invokestatic  #193
163: astore        16
165: aload         16
167: invokevirtual #72
170: astore        17
172: aload         16
174: invokevirtual #194
177: astore        18
179: aload         6
181: aload         16
183: invokevirtual #47
186: astore        19
188: ldc_w         #613
191: invokestatic  #193
194: astore        20
196: aload         6
198: aload         20
200: invokevirtual #47
203: astore        21
205: new           #624
208: dup
209: ldc           #249
211: invokespecial #625
214: astore        22
216: ldc           #25
218: ldc           #12
220: invokestatic  #26
223: astore        23
225: ldc           #12
227: aload         23
229: ldc           #12
231: invokestatic  #27
234: astore        24
236: aload         23
238: invokevirtual #103
241: astore        25
243: aload         23
245: ldc           #12
247: invokevirtual #59
250: astore        26
252: aload         23
254: invokevirtual #73
257: astore        27
259: ldc           #25
261: ldc           #12
263: invokestatic  #26
266: astore        28
268: ldc           #12
270: aload         28
272: ldc           #12
274: invokestatic  #27
277: astore        29
279: aload         28
281: invokevirtual #103
284: astore        30
286: aload         28
288: ldc           #12
290: invokevirtual #59
293: astore        31
295: aload         28
297: invokevirtual #220
300: astore        32
302: aload         28
304: invokevirtual #222
307: astore        33
309: aload         23
311: aload         33
313: invokevirtual #481
316: astore        34
318: aload         34
320: invokevirtual #73
323: astore        35
325: ldc           #25
327: ldc           #12
329: invokestatic  #26
332: astore        36
334: ldc           #12
336: aload         36
338: ldc           #12
340: invokestatic  #27
343: astore        37
345: aload         36
347: ldc           #12
349: invokevirtual #28
352: astore        38
354: aload         36
356: ldc           #25
358: invokevirtual #29
361: astore        39
363: aload         36
365: invokevirtual #72
368: astore        40
370: aload         36
372: ldc           #98
374: invokevirtual #99
377: astore        41
379: aload         36
381: ldc           #25
383: invokevirtual #100
386: astore        42
388: getstatic     #626
391: astore        43
393: aload         36
395: aload         43
397: invokevirtual #481
400: astore        44
402: aload         34
404: aload         43
406: invokevirtual #481
409: astore        45
411: aload         22
413: aload         43
415: invokevirtual #481
418: astore        46
420: aload         22
422: ldc_w         #319
425: invokevirtual #100
428: astore        47
430: aload_1
431: aload         21
433: aload         22
435: invokevirtual #727
438: istore        48
440: aload         21
442: ldc           #82
444: invokevirtual #587
447: astore        49
449: ldc           #34
451: invokestatic  #35
454: goto          459
457: astore        49
459: new           #16
462: dup
463: invokespecial #17
466: ldc           #18
468: invokevirtual #19
471: aload_2
472: invokevirtual #19
475: ldc_w         #728
478: invokevirtual #19
481: invokevirtual #22
484: aload_2
485: ldc_w         #443
488: invokestatic  #68
491: new           #16
494: dup
495: invokespecial #17
498: ldc           #18
500: invokevirtual #19
503: aload_3
504: invokevirtual #19
507: ldc_w         #728
510: invokevirtual #19
513: invokevirtual #22
516: aload_3
517: ldc_w         #443
520: invokestatic  #68
523: aload         4
525: invokestatic  #15
528: aload         5
530: invokestatic  #15
533: aload         8
535: invokestatic  #15
538: aload         9
540: invokestatic  #15
543: aload         10
545: invokestatic  #15
548: aload         11
550: invokestatic  #15
553: aload         12
555: invokestatic  #15
558: aload         13
560: invokestatic  #15
563: new           #16
566: dup
567: invokespecial #17
570: ldc           #18
572: invokevirtual #19
575: iload         14
577: invokevirtual #20
580: ldc           #21
582: invokevirtual #19
585: iconst_0
586: invokevirtual #20
589: ldc           #18
591: invokevirtual #19
594: invokevirtual #22
597: iload         14
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #23
610: aload         15
612: invokestatic  #15
615: aload         16
617: invokestatic  #15
620: new           #16
623: dup
624: invokespecial #17
627: ldc           #18
629: invokevirtual #19
632: aload         17
634: invokevirtual #19
637: ldc           #197
639: invokevirtual #19
642: invokevirtual #22
645: aload         17
647: ldc           #151
649: invokestatic  #68
652: new           #16
655: dup
656: invokespecial #17
659: ldc           #18
661: invokevirtual #19
664: aload         18
666: invokevirtual #19
669: ldc           #67
671: invokevirtual #19
674: invokevirtual #22
677: aload         18
679: ldc           #25
681: invokestatic  #68
684: aload         19
686: invokestatic  #15
689: aload         20
691: invokestatic  #15
694: aload         21
696: invokestatic  #15
699: aload         23
701: invokestatic  #15
704: aload         24
706: invokestatic  #15
709: aload         25
711: invokestatic  #15
714: aload         26
716: invokestatic  #15
719: new           #16
722: dup
723: invokespecial #17
726: ldc           #18
728: invokevirtual #19
731: aload         27
733: invokevirtual #19
736: ldc           #67
738: invokevirtual #19
741: invokevirtual #22
744: aload         27
746: ldc           #25
748: invokestatic  #68
751: aload         28
753: invokestatic  #15
756: aload         29
758: invokestatic  #15
761: aload         30
763: invokestatic  #15
766: aload         31
768: invokestatic  #15
771: new           #16
774: dup
775: invokespecial #17
778: ldc           #18
780: invokevirtual #19
783: aload         32
785: invokevirtual #19
788: ldc           #107
790: invokevirtual #19
793: invokevirtual #22
796: aload         32
798: ldc           #13
800: invokestatic  #68
803: new           #16
806: dup
807: invokespecial #17
810: ldc           #18
812: invokevirtual #19
815: aload         33
817: invokevirtual #223
820: ldc           #21
822: invokevirtual #19
825: getstatic     #224
828: invokevirtual #223
831: ldc           #18
833: invokevirtual #19
836: invokevirtual #22
839: aload         33
841: getstatic     #224
844: invokevirtual #225
847: invokestatic  #23
850: aload         34
852: invokestatic  #15
855: new           #16
858: dup
859: invokespecial #17
862: ldc           #18
864: invokevirtual #19
867: aload         35
869: invokevirtual #19
872: ldc           #67
874: invokevirtual #19
877: invokevirtual #22
880: aload         35
882: ldc           #25
884: invokestatic  #68
887: aload         36
889: invokestatic  #15
892: aload         37
894: invokestatic  #15
897: aload         38
899: invokestatic  #15
902: aload         39
904: invokestatic  #15
907: new           #16
910: dup
911: invokespecial #17
914: ldc           #18
916: invokevirtual #19
919: aload         40
921: invokevirtual #19
924: ldc           #78
926: invokevirtual #19
929: invokevirtual #22
932: aload         40
934: ldc           #10
936: invokestatic  #68
939: aload         41
941: invokestatic  #15
944: aload         42
946: invokestatic  #15
949: new           #16
952: dup
953: invokespecial #17
956: ldc           #18
958: invokevirtual #19
961: aload         43
963: invokevirtual #223
966: ldc           #21
968: invokevirtual #19
971: getstatic     #626
974: invokevirtual #223
977: ldc           #18
979: invokevirtual #19
982: invokevirtual #22
985: aload         43
987: getstatic     #626
990: invokevirtual #225
993: invokestatic  #23
996: aload         44
998: invokestatic  #15
1001: aload         45
1003: invokestatic  #15
1006: aload         46
1008: invokestatic  #15
1011: aload         47
1013: invokestatic  #15
1016: new           #16
1019: dup
1020: invokespecial #17
1023: ldc           #18
1025: invokevirtual #19
1028: iload         48
1030: invokevirtual #20
1033: ldc           #21
1035: invokevirtual #19
1038: iconst_0
1039: invokevirtual #20
1042: ldc           #18
1044: invokevirtual #19
1047: invokevirtual #22
1050: iload         48
1052: ifne          1059
1055: iconst_1
1056: goto          1060
1059: iconst_0
1060: invokestatic  #23
1063: return
Exception table:
from    to  target type
440   454   457   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test206
Start line: 10827
End line: 10840
Method source code: 
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        boolean boolean9 = whitelist7.isSafeTag("");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #729
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: aload         4
54: ldc           #25
56: invokevirtual #83
59: istore        5
61: aload_1
62: invokestatic  #15
65: new           #16
68: dup
69: invokespecial #17
72: ldc           #18
74: invokevirtual #19
77: aload_2
78: invokevirtual #19
81: ldc           #111
83: invokevirtual #19
86: invokevirtual #22
89: aload_2
90: ldc           #65
92: invokestatic  #68
95: new           #16
98: dup
99: invokespecial #17
102: ldc           #18
104: invokevirtual #19
107: iload_3
108: invokevirtual #20
111: ldc           #21
113: invokevirtual #19
116: iconst_0
117: invokevirtual #20
120: ldc           #18
122: invokevirtual #19
125: invokevirtual #22
128: iload_3
129: ifne          136
132: iconst_1
133: goto          137
136: iconst_0
137: invokestatic  #23
140: aload         4
142: invokestatic  #15
145: new           #16
148: dup
149: invokespecial #17
152: ldc           #18
154: invokevirtual #19
157: iload         5
159: invokevirtual #20
162: ldc           #21
164: invokevirtual #19
167: iconst_0
168: invokevirtual #20
171: ldc           #18
173: invokevirtual #19
176: invokevirtual #22
179: iload         5
181: ifne          188
184: iconst_1
185: goto          189
188: iconst_0
189: invokestatic  #23
192: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test207
Start line: 10843
End line: 10916
Method source code: 
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        org.jsoup.parser.Parser parser0 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.parser.Parser parser2 = parser0.setTrackErrors(0);
        boolean boolean3 = parser0.isTrackErrors();
        org.jsoup.parser.Parser parser5 = parser0.setTrackErrors((int) (byte) 0);
        org.jsoup.nodes.Document document8 = parser0.parseInput(":lt(10)", ":eq(1)");
        org.jsoup.nodes.Element element9 = document8.clone();
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist12 = whitelist10.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner13 = new org.jsoup.safety.Cleaner(whitelist12);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining16 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document18 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList24 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document22, "hi!");
        org.jsoup.nodes.Element element26 = document22.tagName("hi!");
        org.jsoup.nodes.Element element28 = document22.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = document22.outputSettings();
        boolean boolean30 = attributeWithValueContaining16.matches((org.jsoup.nodes.Element) document18, (org.jsoup.nodes.Element) document22);
        org.jsoup.nodes.Document document31 = cleaner13.clean(document22);
        org.jsoup.select.Evaluator.Tag tag33 = new org.jsoup.select.Evaluator.Tag("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList39 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document37, "hi!");
        org.jsoup.nodes.Element element41 = document37.tagName("hi!");
        org.jsoup.nodes.Element element43 = document37.append("");
        org.jsoup.nodes.Element element45 = element43.removeClass("hi!");
        org.jsoup.select.Elements elements48 = element43.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Document document52 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList54 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document52, "hi!");
        org.jsoup.nodes.Element element56 = document52.tagName("hi!");
        boolean boolean57 = tag33.matches(element43, (org.jsoup.nodes.Element) document52);
        boolean boolean58 = document52.hasText();
        org.jsoup.nodes.Document document59 = document52.clone();
        org.jsoup.select.Elements elements62 = document52.getElementsByAttributeValueMatching("\nhi!", ":lt(32)=\"\"");
        org.jsoup.nodes.Document document63 = cleaner13.clean(document52);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Element element64 = element9.after((org.jsoup.nodes.Node) document63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(parser0);
        org.junit.Assert.assertNotNull(parser2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(parser5);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(elements48);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(elements62);
        org.junit.Assert.assertNotNull(document63);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #730
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #419
28: astore_1
29: aload_1
30: iconst_0
31: invokevirtual #696
34: astore_2
35: aload_1
36: invokevirtual #697
39: istore_3
40: aload_1
41: iconst_0
42: invokevirtual #696
45: astore        4
47: aload_1
48: ldc_w         #669
51: ldc_w         #279
54: invokevirtual #420
57: astore        5
59: aload         5
61: invokevirtual #154
64: astore        6
66: invokestatic  #8
69: astore        7
71: aload         7
73: iconst_1
74: invokevirtual #9
77: astore        8
79: new           #40
82: dup
83: aload         8
85: invokespecial #41
88: astore        9
90: new           #42
93: dup
94: ldc           #43
96: ldc           #32
98: invokespecial #44
101: astore        10
103: ldc           #12
105: invokestatic  #45
108: astore        11
110: ldc           #25
112: ldc           #12
114: invokestatic  #26
117: astore        12
119: ldc           #12
121: aload         12
123: ldc           #12
125: invokestatic  #27
128: astore        13
130: aload         12
132: ldc           #12
134: invokevirtual #28
137: astore        14
139: aload         12
141: ldc           #25
143: invokevirtual #29
146: astore        15
148: aload         12
150: invokevirtual #30
153: astore        16
155: aload         10
157: aload         11
159: aload         12
161: invokevirtual #46
164: istore        17
166: aload         9
168: aload         12
170: invokevirtual #47
173: astore        18
175: new           #360
178: dup
179: ldc           #109
181: invokespecial #361
184: astore        19
186: ldc           #25
188: ldc           #12
190: invokestatic  #26
193: astore        20
195: ldc           #12
197: aload         20
199: ldc           #12
201: invokestatic  #27
204: astore        21
206: aload         20
208: ldc           #12
210: invokevirtual #28
213: astore        22
215: aload         20
217: ldc           #25
219: invokevirtual #29
222: astore        23
224: aload         23
226: ldc           #12
228: invokevirtual #390
231: astore        24
233: aload         23
235: ldc           #51
237: ldc           #98
239: invokevirtual #391
242: astore        25
244: ldc           #25
246: ldc           #12
248: invokestatic  #26
251: astore        26
253: ldc           #12
255: aload         26
257: ldc           #12
259: invokestatic  #27
262: astore        27
264: aload         26
266: ldc           #12
268: invokevirtual #28
271: astore        28
273: aload         19
275: aload         23
277: aload         26
279: invokevirtual #368
282: istore        29
284: aload         26
286: invokevirtual #731
289: istore        30
291: aload         26
293: invokevirtual #154
296: astore        31
298: aload         26
300: ldc           #98
302: ldc           #238
304: invokevirtual #487
307: astore        32
309: aload         9
311: aload         26
313: invokevirtual #47
316: astore        33
318: aload         6
320: aload         33
322: invokevirtual #260
325: astore        34
327: ldc           #34
329: invokestatic  #35
332: goto          337
335: astore        34
337: aload_1
338: invokestatic  #15
341: aload_2
342: invokestatic  #15
345: new           #16
348: dup
349: invokespecial #17
352: ldc           #18
354: invokevirtual #19
357: iload_3
358: invokevirtual #20
361: ldc           #21
363: invokevirtual #19
366: iconst_0
367: invokevirtual #20
370: ldc           #18
372: invokevirtual #19
375: invokevirtual #22
378: iload_3
379: ifne          386
382: iconst_1
383: goto          387
386: iconst_0
387: invokestatic  #23
390: aload         4
392: invokestatic  #15
395: aload         5
397: invokestatic  #15
400: aload         6
402: invokestatic  #15
405: aload         7
407: invokestatic  #15
410: aload         8
412: invokestatic  #15
415: aload         11
417: invokestatic  #15
420: aload         12
422: invokestatic  #15
425: aload         13
427: invokestatic  #15
430: aload         14
432: invokestatic  #15
435: aload         15
437: invokestatic  #15
440: aload         16
442: invokestatic  #15
445: new           #16
448: dup
449: invokespecial #17
452: ldc           #18
454: invokevirtual #19
457: iload         17
459: invokevirtual #20
462: ldc           #21
464: invokevirtual #19
467: iconst_0
468: invokevirtual #20
471: ldc           #18
473: invokevirtual #19
476: invokevirtual #22
479: iload         17
481: ifne          488
484: iconst_1
485: goto          489
488: iconst_0
489: invokestatic  #23
492: aload         18
494: invokestatic  #15
497: aload         20
499: invokestatic  #15
502: aload         21
504: invokestatic  #15
507: aload         22
509: invokestatic  #15
512: aload         23
514: invokestatic  #15
517: aload         24
519: invokestatic  #15
522: aload         25
524: invokestatic  #15
527: aload         26
529: invokestatic  #15
532: aload         27
534: invokestatic  #15
537: aload         28
539: invokestatic  #15
542: new           #16
545: dup
546: invokespecial #17
549: ldc           #18
551: invokevirtual #19
554: iload         29
556: invokevirtual #20
559: ldc           #21
561: invokevirtual #19
564: iconst_0
565: invokevirtual #20
568: ldc           #18
570: invokevirtual #19
573: invokevirtual #22
576: iload         29
578: ifne          585
581: iconst_1
582: goto          586
585: iconst_0
586: invokestatic  #23
589: new           #16
592: dup
593: invokespecial #17
596: ldc           #18
598: invokevirtual #19
601: iload         30
603: invokevirtual #20
606: ldc           #21
608: invokevirtual #19
611: iconst_0
612: invokevirtual #20
615: ldc           #18
617: invokevirtual #19
620: invokevirtual #22
623: iload         30
625: ifne          632
628: iconst_1
629: goto          633
632: iconst_0
633: invokestatic  #23
636: aload         31
638: invokestatic  #15
641: aload         32
643: invokestatic  #15
646: aload         33
648: invokestatic  #15
651: return
Exception table:
from    to  target type
318   332   335   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test208
Start line: 10919
End line: 10939
Method source code: 
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str4 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist8 = whitelist3.preserveRelativeLinks(false);
        java.lang.String str9 = org.jsoup.Jsoup.clean("#data", whitelist3);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist13 = whitelist3.addEnforcedAttribute("&lt;   &gt;   &gt;hi!", "<html>\n <head></head>\n <body>\n  . &lt;!----&gt;\n </body>\n</html>[&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;^=&lt;hi!&gt;&lt;/hi!&gt; &lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;]", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[hi!$=   ]" + "'", str4, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#data" + "'", str9, "#data");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #732
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: ldc_w         #267
55: aload_1
56: invokestatic  #81
59: astore        5
61: aload_1
62: ldc_w         #676
65: ldc_w         #733
68: ldc           #25
70: invokevirtual #11
73: astore        6
75: ldc           #141
77: invokestatic  #35
80: goto          85
83: astore        6
85: aload_1
86: invokestatic  #15
89: new           #16
92: dup
93: invokespecial #17
96: ldc           #18
98: invokevirtual #19
101: aload_2
102: invokevirtual #19
105: ldc           #111
107: invokevirtual #19
110: invokevirtual #22
113: aload_2
114: ldc           #65
116: invokestatic  #68
119: new           #16
122: dup
123: invokespecial #17
126: ldc           #18
128: invokevirtual #19
131: iload_3
132: invokevirtual #20
135: ldc           #21
137: invokevirtual #19
140: iconst_0
141: invokevirtual #20
144: ldc           #18
146: invokevirtual #19
149: invokevirtual #22
152: iload_3
153: ifne          160
156: iconst_1
157: goto          161
160: iconst_0
161: invokestatic  #23
164: aload         4
166: invokestatic  #15
169: new           #16
172: dup
173: invokespecial #17
176: ldc           #18
178: invokevirtual #19
181: aload         5
183: invokevirtual #19
186: ldc_w         #734
189: invokevirtual #19
192: invokevirtual #22
195: aload         5
197: ldc_w         #267
200: invokestatic  #68
203: return
Exception table:
from    to  target type
61    80    83   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test209
Start line: 10942
End line: 10955
Method source code: 
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.nodes.Attributes attributes7 = whitelist2.getEnforcedAttributes("\n<!--hi!-->");
        boolean boolean9 = attributes7.hasKey("<html>\n <head></head>\n <body>\n  #text\n </body>\n</html>");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(attributes7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #735
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: ldc           #84
48: invokevirtual #150
51: astore        4
53: aload         4
55: ldc_w         #736
58: invokevirtual #737
61: istore        5
63: aload_1
64: invokestatic  #15
67: new           #16
70: dup
71: invokespecial #17
74: ldc           #18
76: invokevirtual #19
79: aload_2
80: invokevirtual #19
83: ldc           #111
85: invokevirtual #19
88: invokevirtual #22
91: aload_2
92: ldc           #65
94: invokestatic  #68
97: new           #16
100: dup
101: invokespecial #17
104: ldc           #18
106: invokevirtual #19
109: iload_3
110: invokevirtual #20
113: ldc           #21
115: invokevirtual #19
118: iconst_0
119: invokevirtual #20
122: ldc           #18
124: invokevirtual #19
127: invokevirtual #22
130: iload_3
131: ifne          138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #23
142: aload         4
144: invokestatic  #15
147: new           #16
150: dup
151: invokespecial #17
154: ldc           #18
156: invokevirtual #19
159: iload         5
161: invokevirtual #20
164: ldc           #21
166: invokevirtual #19
169: iconst_0
170: invokevirtual #20
173: ldc           #18
175: invokevirtual #19
178: invokevirtual #22
181: iload         5
183: ifne          190
186: iconst_1
187: goto          191
190: iconst_0
191: invokestatic  #23
194: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test210
Start line: 10958
End line: 11015
Method source code: 
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str5 = org.jsoup.Jsoup.clean(":lt(32)", whitelist4);
        boolean boolean7 = whitelist4.isSafeTag("");
        org.jsoup.nodes.Document document11 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList13 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document11, "hi!");
        org.jsoup.nodes.Element element14 = document11.empty();
        org.jsoup.nodes.Element element16 = document11.removeClass("hi!");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList22 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document20, "hi!");
        org.jsoup.nodes.Element element24 = document20.tagName("hi!");
        org.jsoup.nodes.Element element26 = document20.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = document20.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings27.prettyPrint(false);
        org.jsoup.nodes.Document document30 = document11.outputSettings(outputSettings29);
        java.lang.String str31 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist4, outputSettings29);
        org.jsoup.safety.Whitelist whitelist33 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist35 = whitelist33.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist41 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str42 = org.jsoup.Jsoup.clean(":lt(32)", whitelist41);
        org.jsoup.safety.Whitelist whitelist46 = whitelist41.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray53 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist54 = whitelist41.addTags(strArray53);
        org.jsoup.safety.Whitelist whitelist55 = whitelist37.addProtocols(":matchesOwn(null", "hi!", strArray53);
        org.jsoup.safety.Whitelist whitelist56 = whitelist4.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray53);
        java.lang.String str57 = org.jsoup.Jsoup.clean("[hi!$=<html> <head></head> <body></body> </html>]", whitelist4);
        boolean boolean59 = whitelist4.isSafeTag(":lt(32)=\"#[:lt(32)*=.&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;]\"");
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + ":lt(32)" + "'", str5, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(nodeList22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[:lt(32)]" + "'", str31, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":lt(32)" + "'", str42, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(whitelist54);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!$=   ]" + "'", str57, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #738
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: invokestatic  #8
156: astore        16
158: aload         16
160: iconst_1
161: invokevirtual #9
164: astore        17
166: aload         17
168: iconst_0
169: invokevirtual #9
172: astore        18
174: invokestatic  #118
177: astore        19
179: ldc           #43
181: aload         19
183: invokestatic  #81
186: astore        20
188: aload         19
190: ldc           #43
192: ldc           #12
194: ldc           #32
196: invokevirtual #11
199: astore        21
201: bipush        6
203: anewarray     #119
206: dup
207: iconst_0
208: ldc           #109
210: aastore
211: dup
212: iconst_1
213: ldc           #10
215: aastore
216: dup
217: iconst_2
218: ldc           #13
220: aastore
221: dup
222: iconst_3
223: ldc           #50
225: aastore
226: dup
227: iconst_4
228: ldc           #12
230: aastore
231: dup
232: iconst_5
233: ldc           #120
235: aastore
236: astore        22
238: aload         19
240: aload         22
242: invokevirtual #121
245: astore        23
247: aload         18
249: ldc           #38
251: ldc           #12
253: aload         22
255: invokevirtual #122
258: astore        24
260: aload_1
261: ldc           #109
263: aload         22
265: invokevirtual #127
268: astore        25
270: ldc           #183
272: aload_1
273: invokestatic  #81
276: astore        26
278: aload_1
279: ldc_w         #739
282: invokevirtual #83
285: istore        27
287: aload_1
288: invokestatic  #15
291: new           #16
294: dup
295: invokespecial #17
298: ldc           #18
300: invokevirtual #19
303: aload_2
304: invokevirtual #19
307: ldc           #128
309: invokevirtual #19
312: invokevirtual #22
315: aload_2
316: ldc           #43
318: invokestatic  #68
321: new           #16
324: dup
325: invokespecial #17
328: ldc           #18
330: invokevirtual #19
333: iload_3
334: invokevirtual #20
337: ldc           #21
339: invokevirtual #19
342: iconst_0
343: invokevirtual #20
346: ldc           #18
348: invokevirtual #19
351: invokevirtual #22
354: iload_3
355: ifne          362
358: iconst_1
359: goto          363
362: iconst_0
363: invokestatic  #23
366: aload         4
368: invokestatic  #15
371: aload         5
373: invokestatic  #15
376: aload         6
378: invokestatic  #15
381: aload         7
383: invokestatic  #15
386: aload         8
388: invokestatic  #15
391: aload         9
393: invokestatic  #15
396: aload         10
398: invokestatic  #15
401: aload         11
403: invokestatic  #15
406: aload         12
408: invokestatic  #15
411: aload         13
413: invokestatic  #15
416: aload         14
418: invokestatic  #15
421: new           #16
424: dup
425: invokespecial #17
428: ldc           #18
430: invokevirtual #19
433: aload         15
435: invokevirtual #19
438: ldc           #184
440: invokevirtual #19
443: invokevirtual #22
446: aload         15
448: ldc           #58
450: invokestatic  #68
453: aload         16
455: invokestatic  #15
458: aload         17
460: invokestatic  #15
463: aload         18
465: invokestatic  #15
468: aload         19
470: invokestatic  #15
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: aload         20
487: invokevirtual #19
490: ldc           #128
492: invokevirtual #19
495: invokevirtual #22
498: aload         20
500: ldc           #43
502: invokestatic  #68
505: aload         21
507: invokestatic  #15
510: aload         22
512: invokestatic  #15
515: aload         23
517: invokestatic  #15
520: aload         24
522: invokestatic  #15
525: aload         25
527: invokestatic  #15
530: new           #16
533: dup
534: invokespecial #17
537: ldc           #18
539: invokevirtual #19
542: aload         26
544: invokevirtual #19
547: ldc           #111
549: invokevirtual #19
552: invokevirtual #22
555: aload         26
557: ldc           #65
559: invokestatic  #68
562: new           #16
565: dup
566: invokespecial #17
569: ldc           #18
571: invokevirtual #19
574: iload         27
576: invokevirtual #20
579: ldc           #21
581: invokevirtual #19
584: iconst_0
585: invokevirtual #20
588: ldc           #18
590: invokevirtual #19
593: invokevirtual #22
596: iload         27
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #23
609: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test211
Start line: 11018
End line: 11071
Method source code: 
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist11 = whitelist9.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist15 = whitelist9.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist19 = whitelist9.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str20 = org.jsoup.Jsoup.clean("hi!", whitelist9);
        org.jsoup.safety.Whitelist whitelist22 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist24 = whitelist22.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str31 = org.jsoup.Jsoup.clean(":lt(32)", whitelist30);
        org.jsoup.safety.Whitelist whitelist35 = whitelist30.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray42 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist43 = whitelist30.addTags(strArray42);
        org.jsoup.safety.Whitelist whitelist44 = whitelist26.addProtocols(":matchesOwn(null", "hi!", strArray42);
        java.lang.String[] strArray53 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean54 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray53);
        org.jsoup.safety.Whitelist whitelist55 = whitelist44.addProtocols("\n<!--hi!-->", "#document", strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray53);
        org.jsoup.safety.Whitelist whitelist58 = whitelist9.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray53);
        org.jsoup.safety.Whitelist whitelist59 = whitelist2.addTags(strArray53);
        org.jsoup.nodes.Attributes attributes61 = whitelist59.getEnforcedAttributes("[:matchesown(null!=[^[hi!$=<html>\n <head></head>\n <body></body>\n</html>]]]");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":lt(32)" + "'", str31, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(attributes61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #740
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: invokestatic  #8
55: astore        5
57: aload         5
59: iconst_1
60: invokevirtual #9
63: astore        6
65: aload         5
67: ldc           #10
69: ldc           #10
71: ldc           #10
73: invokevirtual #11
76: astore        7
78: aload         5
80: ldc           #12
82: ldc           #13
84: ldc           #12
86: invokevirtual #11
89: astore        8
91: ldc           #12
93: aload         5
95: invokestatic  #81
98: astore        9
100: invokestatic  #8
103: astore        10
105: aload         10
107: iconst_1
108: invokevirtual #9
111: astore        11
113: aload         11
115: iconst_0
116: invokevirtual #9
119: astore        12
121: invokestatic  #118
124: astore        13
126: ldc           #43
128: aload         13
130: invokestatic  #81
133: astore        14
135: aload         13
137: ldc           #43
139: ldc           #12
141: ldc           #32
143: invokevirtual #11
146: astore        15
148: bipush        6
150: anewarray     #119
153: dup
154: iconst_0
155: ldc           #109
157: aastore
158: dup
159: iconst_1
160: ldc           #10
162: aastore
163: dup
164: iconst_2
165: ldc           #13
167: aastore
168: dup
169: iconst_3
170: ldc           #50
172: aastore
173: dup
174: iconst_4
175: ldc           #12
177: aastore
178: dup
179: iconst_5
180: ldc           #120
182: aastore
183: astore        16
185: aload         13
187: aload         16
189: invokevirtual #121
192: astore        17
194: aload         12
196: ldc           #38
198: ldc           #12
200: aload         16
202: invokevirtual #122
205: astore        18
207: iconst_5
208: anewarray     #119
211: dup
212: iconst_0
213: ldc           #13
215: aastore
216: dup
217: iconst_1
218: ldc           #32
220: aastore
221: dup
222: iconst_2
223: ldc           #10
225: aastore
226: dup
227: iconst_3
228: ldc           #43
230: aastore
231: dup
232: iconst_4
233: ldc           #58
235: aastore
236: astore        19
238: ldc           #10
240: aload         19
242: invokestatic  #123
245: istore        20
247: aload         18
249: ldc           #84
251: ldc           #13
253: aload         19
255: invokevirtual #122
258: astore        21
260: aload         19
262: checkcast     #124
265: invokestatic  #125
268: aload         19
270: checkcast     #124
273: invokestatic  #125
276: aload         5
278: ldc           #249
280: aload         19
282: invokevirtual #127
285: astore        22
287: aload_1
288: aload         19
290: invokevirtual #121
293: astore        23
295: aload         23
297: ldc_w         #741
300: invokevirtual #150
303: astore        24
305: aload_1
306: invokestatic  #15
309: new           #16
312: dup
313: invokespecial #17
316: ldc           #18
318: invokevirtual #19
321: aload_2
322: invokevirtual #19
325: ldc           #111
327: invokevirtual #19
330: invokevirtual #22
333: aload_2
334: ldc           #65
336: invokestatic  #68
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: iload_3
352: invokevirtual #20
355: ldc           #21
357: invokevirtual #19
360: iconst_0
361: invokevirtual #20
364: ldc           #18
366: invokevirtual #19
369: invokevirtual #22
372: iload_3
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #23
384: aload         4
386: invokestatic  #15
389: aload         5
391: invokestatic  #15
394: aload         6
396: invokestatic  #15
399: aload         7
401: invokestatic  #15
404: aload         8
406: invokestatic  #15
409: new           #16
412: dup
413: invokespecial #17
416: ldc           #18
418: invokevirtual #19
421: aload         9
423: invokevirtual #19
426: ldc           #211
428: invokevirtual #19
431: invokevirtual #22
434: aload         9
436: ldc           #12
438: invokestatic  #68
441: aload         10
443: invokestatic  #15
446: aload         11
448: invokestatic  #15
451: aload         12
453: invokestatic  #15
456: aload         13
458: invokestatic  #15
461: new           #16
464: dup
465: invokespecial #17
468: ldc           #18
470: invokevirtual #19
473: aload         14
475: invokevirtual #19
478: ldc           #128
480: invokevirtual #19
483: invokevirtual #22
486: aload         14
488: ldc           #43
490: invokestatic  #68
493: aload         15
495: invokestatic  #15
498: aload         16
500: invokestatic  #15
503: aload         17
505: invokestatic  #15
508: aload         18
510: invokestatic  #15
513: aload         19
515: invokestatic  #15
518: new           #16
521: dup
522: invokespecial #17
525: ldc           #18
527: invokevirtual #19
530: iload         20
532: invokevirtual #20
535: ldc           #21
537: invokevirtual #19
540: iconst_1
541: invokevirtual #20
544: ldc           #18
546: invokevirtual #19
549: invokevirtual #22
552: iload         20
554: iconst_1
555: if_icmpne     562
558: iconst_1
559: goto          563
562: iconst_0
563: invokestatic  #23
566: aload         21
568: invokestatic  #15
571: aload         22
573: invokestatic  #15
576: aload         23
578: invokestatic  #15
581: aload         24
583: invokestatic  #15
586: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test212
Start line: 11074
End line: 11136
Method source code: 
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList42 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document40, "hi!");
        org.jsoup.nodes.Element element44 = document40.tagName("hi!");
        org.jsoup.nodes.Element element46 = document40.append("");
        org.jsoup.nodes.Element element48 = element46.removeClass("hi!");
        org.jsoup.select.Elements elements51 = element46.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.helper.Validate.notNull((java.lang.Object) element46, ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Element element55 = element46.html("#document");
        java.util.Set<java.lang.String> strSet56 = element55.classNames();
        org.jsoup.nodes.Element element57 = document25.classNames(strSet56);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(nodeList42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(elements51);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(element57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #742
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: ldc           #25
204: ldc           #12
206: invokestatic  #26
209: astore        22
211: ldc           #12
213: aload         22
215: ldc           #12
217: invokestatic  #27
220: astore        23
222: aload         22
224: ldc           #12
226: invokevirtual #28
229: astore        24
231: aload         22
233: ldc           #25
235: invokevirtual #29
238: astore        25
240: aload         25
242: ldc           #12
244: invokevirtual #390
247: astore        26
249: aload         25
251: ldc           #51
253: ldc           #98
255: invokevirtual #391
258: astore        27
260: aload         25
262: ldc           #32
264: invokestatic  #181
267: aload         25
269: ldc           #13
271: invokevirtual #367
274: astore        28
276: aload         28
278: invokevirtual #743
281: astore        29
283: aload         13
285: aload         29
287: invokevirtual #744
290: astore        30
292: aload_1
293: invokestatic  #15
296: aload_2
297: invokestatic  #15
300: aload         5
302: invokestatic  #15
305: aload         6
307: invokestatic  #15
310: aload         7
312: invokestatic  #15
315: aload         8
317: invokestatic  #15
320: aload         9
322: invokestatic  #15
325: aload         10
327: invokestatic  #15
330: new           #16
333: dup
334: invokespecial #17
337: ldc           #18
339: invokevirtual #19
342: iload         11
344: invokevirtual #20
347: ldc           #21
349: invokevirtual #19
352: iconst_0
353: invokevirtual #20
356: ldc           #18
358: invokevirtual #19
361: invokevirtual #22
364: iload         11
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #23
377: aload         12
379: invokestatic  #15
382: aload         13
384: invokestatic  #15
387: aload         14
389: invokestatic  #15
392: aload         15
394: invokestatic  #15
397: aload         16
399: invokestatic  #15
402: new           #16
405: dup
406: invokespecial #17
409: ldc           #18
411: invokevirtual #19
414: aload         17
416: invokevirtual #19
419: ldc           #78
421: invokevirtual #19
424: invokevirtual #22
427: aload         17
429: ldc           #10
431: invokestatic  #68
434: new           #16
437: dup
438: invokespecial #17
441: ldc           #18
443: invokevirtual #19
446: aload         18
448: invokevirtual #19
451: ldc           #67
453: invokevirtual #19
456: invokevirtual #22
459: aload         18
461: ldc           #25
463: invokestatic  #68
466: aload         19
468: invokestatic  #79
471: aload         20
473: invokestatic  #15
476: aload         21
478: invokestatic  #15
481: aload         22
483: invokestatic  #15
486: aload         23
488: invokestatic  #15
491: aload         24
493: invokestatic  #15
496: aload         25
498: invokestatic  #15
501: aload         26
503: invokestatic  #15
506: aload         27
508: invokestatic  #15
511: aload         28
513: invokestatic  #15
516: aload         29
518: invokestatic  #15
521: aload         30
523: invokestatic  #15
526: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test213
Start line: 11139
End line: 11154
Method source code: 
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("");
        java.lang.String str9 = org.jsoup.Jsoup.clean("body", "[^:containsOwn([:lt(32)*=. ]]", whitelist6);
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.preserveRelativeLinks(true);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "body" + "'", str9, "body");
        org.junit.Assert.assertNotNull(whitelist11);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #745
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: aload_3
42: ldc           #25
44: invokevirtual #150
47: astore        4
49: ldc_w         #746
52: ldc_w         #435
55: aload_3
56: invokestatic  #94
59: astore        5
61: aload_3
62: iconst_1
63: invokevirtual #9
66: astore        6
68: aload_1
69: invokestatic  #15
72: aload_2
73: invokestatic  #15
76: aload_3
77: invokestatic  #15
80: aload         4
82: invokestatic  #15
85: new           #16
88: dup
89: invokespecial #17
92: ldc           #18
94: invokevirtual #19
97: aload         5
99: invokevirtual #19
102: ldc_w         #747
105: invokevirtual #19
108: invokevirtual #22
111: aload         5
113: ldc_w         #746
116: invokestatic  #68
119: aload         6
121: invokestatic  #15
124: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test214
Start line: 11157
End line: 11222
Method source code: 
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.util.Spliterator<java.lang.Object> objSpliterator24 = objList0.spliterator();
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        java.lang.String str32 = org.jsoup.helper.StringUtil.join((java.util.Collection) nodeList30, "#document");
        boolean boolean33 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList30);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist36 = whitelist34.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner37 = new org.jsoup.safety.Cleaner(whitelist36);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining40 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document42 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        boolean boolean54 = attributeWithValueContaining40.matches((org.jsoup.nodes.Element) document42, (org.jsoup.nodes.Element) document46);
        org.jsoup.nodes.Document document55 = cleaner37.clean(document46);
        boolean boolean56 = objList0.contains((java.lang.Object) document46);
        java.lang.Object obj57 = objList0.pollFirst();
        java.lang.Object obj58 = objList0.peekLast();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSpliterator24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\nhi!" + "'", str32, "\nhi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNull(obj58);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #748
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #283
138: astore        12
140: ldc           #25
142: ldc           #12
144: invokestatic  #26
147: astore        13
149: ldc           #12
151: aload         13
153: ldc           #12
155: invokestatic  #27
158: astore        14
160: aload         14
162: ldc           #13
164: invokestatic  #284
167: astore        15
169: aload_1
170: aload         14
172: invokevirtual #285
175: istore        16
177: invokestatic  #8
180: astore        17
182: aload         17
184: iconst_1
185: invokevirtual #9
188: astore        18
190: new           #40
193: dup
194: aload         18
196: invokespecial #41
199: astore        19
201: new           #42
204: dup
205: ldc           #43
207: ldc           #32
209: invokespecial #44
212: astore        20
214: ldc           #12
216: invokestatic  #45
219: astore        21
221: ldc           #25
223: ldc           #12
225: invokestatic  #26
228: astore        22
230: ldc           #12
232: aload         22
234: ldc           #12
236: invokestatic  #27
239: astore        23
241: aload         22
243: ldc           #12
245: invokevirtual #28
248: astore        24
250: aload         22
252: ldc           #25
254: invokevirtual #29
257: astore        25
259: aload         22
261: invokevirtual #30
264: astore        26
266: aload         20
268: aload         21
270: aload         22
272: invokevirtual #46
275: istore        27
277: aload         19
279: aload         22
281: invokevirtual #47
284: astore        28
286: aload_1
287: aload         22
289: invokevirtual #286
292: istore        29
294: aload_1
295: invokevirtual #660
298: astore        30
300: aload_1
301: invokevirtual #287
304: astore        31
306: aload_2
307: invokestatic  #15
310: aload_3
311: invokestatic  #15
314: aload         4
316: invokestatic  #15
319: aload         5
321: invokestatic  #15
324: aload         6
326: invokestatic  #15
329: aload         7
331: invokestatic  #15
334: aload         8
336: invokestatic  #15
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: aload         9
353: invokevirtual #19
356: ldc           #78
358: invokevirtual #19
361: invokevirtual #22
364: aload         9
366: ldc           #10
368: invokestatic  #68
371: aload         10
373: invokestatic  #15
376: aload         10
378: invokestatic  #288
381: ldc_w         #289
384: invokestatic  #290
387: aload         10
389: invokestatic  #291
392: ldc_w         #289
395: invokestatic  #290
398: new           #16
401: dup
402: invokespecial #17
405: ldc           #18
407: invokevirtual #19
410: iload         11
412: invokevirtual #20
415: ldc           #21
417: invokevirtual #19
420: iconst_1
421: invokevirtual #20
424: ldc           #18
426: invokevirtual #19
429: invokevirtual #22
432: iload         11
434: iconst_1
435: if_icmpne     442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #23
446: aload         12
448: invokestatic  #15
451: aload         13
453: invokestatic  #15
456: aload         14
458: invokestatic  #15
461: new           #16
464: dup
465: invokespecial #17
468: ldc           #18
470: invokevirtual #19
473: aload         15
475: invokevirtual #19
478: ldc_w         #292
481: invokevirtual #19
484: invokevirtual #22
487: aload         15
489: ldc           #98
491: invokestatic  #68
494: new           #16
497: dup
498: invokespecial #17
501: ldc           #18
503: invokevirtual #19
506: iload         16
508: invokevirtual #20
511: ldc           #21
513: invokevirtual #19
516: iconst_0
517: invokevirtual #20
520: ldc           #18
522: invokevirtual #19
525: invokevirtual #22
528: iload         16
530: ifne          537
533: iconst_1
534: goto          538
537: iconst_0
538: invokestatic  #23
541: aload         17
543: invokestatic  #15
546: aload         18
548: invokestatic  #15
551: aload         21
553: invokestatic  #15
556: aload         22
558: invokestatic  #15
561: aload         23
563: invokestatic  #15
566: aload         24
568: invokestatic  #15
571: aload         25
573: invokestatic  #15
576: aload         26
578: invokestatic  #15
581: new           #16
584: dup
585: invokespecial #17
588: ldc           #18
590: invokevirtual #19
593: iload         27
595: invokevirtual #20
598: ldc           #21
600: invokevirtual #19
603: iconst_0
604: invokevirtual #20
607: ldc           #18
609: invokevirtual #19
612: invokevirtual #22
615: iload         27
617: ifne          624
620: iconst_1
621: goto          625
624: iconst_0
625: invokestatic  #23
628: aload         28
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         29
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         29
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: aload         30
682: invokestatic  #15
685: aload         31
687: invokestatic  #79
690: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test215
Start line: 11225
End line: 11268
Method source code: 
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str11 = org.jsoup.Jsoup.clean(":lt(32)", whitelist10);
        org.jsoup.safety.Whitelist whitelist15 = whitelist10.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray22 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist23 = whitelist10.addTags(strArray22);
        org.jsoup.safety.Whitelist whitelist24 = whitelist6.addProtocols(":matchesOwn(null", "hi!", strArray22);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = document28.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings36 = outputSettings35.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings38 = outputSettings36.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings40 = outputSettings36.indentAmount((int) (short) 0);
        org.jsoup.nodes.Entities.EscapeMode escapeMode41 = outputSettings40.escapeMode();
        java.lang.String str42 = org.jsoup.Jsoup.clean("<<html>\n <head></head>\n <body></body>\n</html>></<html>\n <head></head>\n <body></body>\n</html>><html><head><title>hi&excl;</title></head><body></body></html>", "#root", whitelist24, outputSettings40);
        org.jsoup.nodes.Document.OutputSettings outputSettings43 = outputSettings40.clone();
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + ":lt(32)" + "'", str11, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(outputSettings35);
        org.junit.Assert.assertNotNull(outputSettings36);
        org.junit.Assert.assertNotNull(outputSettings38);
        org.junit.Assert.assertNotNull(outputSettings40);
        org.junit.Assert.assertTrue("'" + escapeMode41 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode41.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "&lt;\n \n \n&gt;\n \n \n&gt;hi!" + "'", str42, "&lt;\n \n \n&gt;\n \n \n&gt;hi!");
        org.junit.Assert.assertNotNull(outputSettings43);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #749
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: invokestatic  #118
44: astore        4
46: ldc           #43
48: aload         4
50: invokestatic  #81
53: astore        5
55: aload         4
57: ldc           #43
59: ldc           #12
61: ldc           #32
63: invokevirtual #11
66: astore        6
68: bipush        6
70: anewarray     #119
73: dup
74: iconst_0
75: ldc           #109
77: aastore
78: dup
79: iconst_1
80: ldc           #10
82: aastore
83: dup
84: iconst_2
85: ldc           #13
87: aastore
88: dup
89: iconst_3
90: ldc           #50
92: aastore
93: dup
94: iconst_4
95: ldc           #12
97: aastore
98: dup
99: iconst_5
100: ldc           #120
102: aastore
103: astore        7
105: aload         4
107: aload         7
109: invokevirtual #121
112: astore        8
114: aload_3
115: ldc           #38
117: ldc           #12
119: aload         7
121: invokevirtual #122
124: astore        9
126: ldc           #25
128: ldc           #12
130: invokestatic  #26
133: astore        10
135: ldc           #12
137: aload         10
139: ldc           #12
141: invokestatic  #27
144: astore        11
146: aload         10
148: ldc           #12
150: invokevirtual #28
153: astore        12
155: aload         10
157: ldc           #25
159: invokevirtual #29
162: astore        13
164: aload         10
166: invokevirtual #30
169: astore        14
171: aload         14
173: invokevirtual #205
176: astore        15
178: aload         15
180: iconst_0
181: invokevirtual #31
184: astore        16
186: aload         15
188: iconst_0
189: invokevirtual #189
192: astore        17
194: aload         17
196: invokevirtual #382
199: astore        18
201: ldc_w         #620
204: ldc_w         #331
207: aload         9
209: aload         17
211: invokestatic  #33
214: astore        19
216: aload         17
218: invokevirtual #205
221: astore        20
223: aload_1
224: invokestatic  #15
227: aload_2
228: invokestatic  #15
231: aload_3
232: invokestatic  #15
235: aload         4
237: invokestatic  #15
240: new           #16
243: dup
244: invokespecial #17
247: ldc           #18
249: invokevirtual #19
252: aload         5
254: invokevirtual #19
257: ldc           #128
259: invokevirtual #19
262: invokevirtual #22
265: aload         5
267: ldc           #43
269: invokestatic  #68
272: aload         6
274: invokestatic  #15
277: aload         7
279: invokestatic  #15
282: aload         8
284: invokestatic  #15
287: aload         9
289: invokestatic  #15
292: aload         10
294: invokestatic  #15
297: aload         11
299: invokestatic  #15
302: aload         12
304: invokestatic  #15
307: aload         13
309: invokestatic  #15
312: aload         14
314: invokestatic  #15
317: aload         15
319: invokestatic  #15
322: aload         16
324: invokestatic  #15
327: aload         17
329: invokestatic  #15
332: new           #16
335: dup
336: invokespecial #17
339: ldc           #18
341: invokevirtual #19
344: aload         18
346: invokevirtual #223
349: ldc           #21
351: invokevirtual #19
354: getstatic     #381
357: invokevirtual #223
360: ldc           #18
362: invokevirtual #19
365: invokevirtual #22
368: aload         18
370: getstatic     #381
373: invokevirtual #385
376: invokestatic  #23
379: new           #16
382: dup
383: invokespecial #17
386: ldc           #18
388: invokevirtual #19
391: aload         19
393: invokevirtual #19
396: ldc_w         #621
399: invokevirtual #19
402: invokevirtual #22
405: aload         19
407: ldc_w         #622
410: invokestatic  #68
413: aload         20
415: invokestatic  #15
418: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test216
Start line: 11271
End line: 11341
Method source code: 
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        java.lang.String str9 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist6);
        java.lang.String str10 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist6);
        org.jsoup.select.Evaluator.Class class13 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element21 = document17.tagName("hi!");
        org.jsoup.nodes.Element element23 = document17.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document17.outputSettings();
        org.jsoup.select.Elements elements26 = document17.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element28 = document17.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes29 = document17.attributes();
        org.jsoup.nodes.Element element31 = document17.prepend("[^hi!]");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        org.jsoup.nodes.Element element44 = document35.attr("#document", "#document");
        org.jsoup.nodes.Element element45 = document35.body();
        boolean boolean46 = class13.matches((org.jsoup.nodes.Element) document17, (org.jsoup.nodes.Element) document35);
        org.jsoup.nodes.Attribute attribute49 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean50 = whitelist6.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document17, attribute49);
        org.jsoup.safety.Whitelist whitelist53 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist55 = whitelist53.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist57 = whitelist55.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist61 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str62 = org.jsoup.Jsoup.clean(":lt(32)", whitelist61);
        org.jsoup.safety.Whitelist whitelist66 = whitelist61.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray73 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist74 = whitelist61.addTags(strArray73);
        org.jsoup.safety.Whitelist whitelist75 = whitelist57.addProtocols(":matchesOwn(null", "hi!", strArray73);
        org.jsoup.safety.Whitelist whitelist76 = whitelist6.addProtocols("[^\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->]", "<hi!>\n [^hi!]\n</hi!>", strArray73);
        java.lang.String str77 = org.jsoup.Jsoup.clean("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", "hi!", whitelist76);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[    ^=hi!]" + "'", str10, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(elements26);
        org.junit.Assert.assertNull(element28);
        org.junit.Assert.assertNotNull(attributes29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(attribute49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":lt(32)" + "'", str62, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(whitelist74);
        org.junit.Assert.assertNotNull(whitelist75);
        org.junit.Assert.assertNotNull(whitelist76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[!=hi!]" + "'", str77, "[!=hi!]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #750
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: new           #160
58: dup
59: ldc           #10
61: invokespecial #161
64: astore        5
66: ldc           #25
68: ldc           #12
70: invokestatic  #26
73: astore        6
75: ldc           #12
77: aload         6
79: ldc           #12
81: invokestatic  #27
84: astore        7
86: aload         6
88: ldc           #12
90: invokevirtual #28
93: astore        8
95: aload         6
97: ldc           #25
99: invokevirtual #29
102: astore        9
104: aload         6
106: invokevirtual #30
109: astore        10
111: aload         6
113: iconst_m1
114: invokevirtual #162
117: astore        11
119: aload         6
121: ldc           #10
123: invokevirtual #163
126: astore        12
128: aload         6
130: invokevirtual #164
133: astore        13
135: aload         6
137: ldc           #50
139: invokevirtual #165
142: astore        14
144: ldc           #25
146: ldc           #12
148: invokestatic  #26
151: astore        15
153: ldc           #12
155: aload         15
157: ldc           #12
159: invokestatic  #27
162: astore        16
164: aload         15
166: ldc           #12
168: invokevirtual #28
171: astore        17
173: aload         15
175: ldc           #25
177: invokevirtual #29
180: astore        18
182: aload         15
184: ldc           #13
186: ldc           #13
188: invokevirtual #56
191: astore        19
193: aload         15
195: invokevirtual #166
198: astore        20
200: aload         5
202: aload         6
204: aload         15
206: invokevirtual #167
209: istore        21
211: ldc           #114
213: ldc           #25
215: invokestatic  #168
218: astore        22
220: aload_1
221: ldc           #110
223: aload         6
225: aload         22
227: invokevirtual #169
230: istore        23
232: invokestatic  #8
235: astore        24
237: aload         24
239: iconst_1
240: invokevirtual #9
243: astore        25
245: aload         25
247: iconst_0
248: invokevirtual #9
251: astore        26
253: invokestatic  #118
256: astore        27
258: ldc           #43
260: aload         27
262: invokestatic  #81
265: astore        28
267: aload         27
269: ldc           #43
271: ldc           #12
273: ldc           #32
275: invokevirtual #11
278: astore        29
280: bipush        6
282: anewarray     #119
285: dup
286: iconst_0
287: ldc           #109
289: aastore
290: dup
291: iconst_1
292: ldc           #10
294: aastore
295: dup
296: iconst_2
297: ldc           #13
299: aastore
300: dup
301: iconst_3
302: ldc           #50
304: aastore
305: dup
306: iconst_4
307: ldc           #12
309: aastore
310: dup
311: iconst_5
312: ldc           #120
314: aastore
315: astore        30
317: aload         27
319: aload         30
321: invokevirtual #121
324: astore        31
326: aload         26
328: ldc           #38
330: ldc           #12
332: aload         30
334: invokevirtual #122
337: astore        32
339: aload_1
340: ldc           #234
342: ldc           #54
344: aload         30
346: invokevirtual #122
349: astore        33
351: ldc           #136
353: ldc           #12
355: aload         33
357: invokestatic  #94
360: astore        34
362: aload_1
363: invokestatic  #15
366: aload_2
367: invokestatic  #15
370: new           #16
373: dup
374: invokespecial #17
377: ldc           #18
379: invokevirtual #19
382: aload_3
383: invokevirtual #19
386: ldc           #67
388: invokevirtual #19
391: invokevirtual #22
394: aload_3
395: ldc           #25
397: invokestatic  #68
400: new           #16
403: dup
404: invokespecial #17
407: ldc           #18
409: invokevirtual #19
412: aload         4
414: invokevirtual #19
417: ldc           #172
419: invokevirtual #19
422: invokevirtual #22
425: aload         4
427: ldc           #173
429: invokestatic  #68
432: aload         6
434: invokestatic  #15
437: aload         7
439: invokestatic  #15
442: aload         8
444: invokestatic  #15
447: aload         9
449: invokestatic  #15
452: aload         10
454: invokestatic  #15
457: aload         11
459: invokestatic  #15
462: aload         12
464: invokestatic  #79
467: aload         13
469: invokestatic  #15
472: aload         14
474: invokestatic  #15
477: aload         15
479: invokestatic  #15
482: aload         16
484: invokestatic  #15
487: aload         17
489: invokestatic  #15
492: aload         18
494: invokestatic  #15
497: aload         19
499: invokestatic  #15
502: aload         20
504: invokestatic  #15
507: new           #16
510: dup
511: invokespecial #17
514: ldc           #18
516: invokevirtual #19
519: iload         21
521: invokevirtual #20
524: ldc           #21
526: invokevirtual #19
529: iconst_0
530: invokevirtual #20
533: ldc           #18
535: invokevirtual #19
538: invokevirtual #22
541: iload         21
543: ifne          550
546: iconst_1
547: goto          551
550: iconst_0
551: invokestatic  #23
554: aload         22
556: invokestatic  #15
559: new           #16
562: dup
563: invokespecial #17
566: ldc           #18
568: invokevirtual #19
571: iload         23
573: invokevirtual #20
576: ldc           #21
578: invokevirtual #19
581: iconst_0
582: invokevirtual #20
585: ldc           #18
587: invokevirtual #19
590: invokevirtual #22
593: iload         23
595: ifne          602
598: iconst_1
599: goto          603
602: iconst_0
603: invokestatic  #23
606: aload         24
608: invokestatic  #15
611: aload         25
613: invokestatic  #15
616: aload         26
618: invokestatic  #15
621: aload         27
623: invokestatic  #15
626: new           #16
629: dup
630: invokespecial #17
633: ldc           #18
635: invokevirtual #19
638: aload         28
640: invokevirtual #19
643: ldc           #128
645: invokevirtual #19
648: invokevirtual #22
651: aload         28
653: ldc           #43
655: invokestatic  #68
658: aload         29
660: invokestatic  #15
663: aload         30
665: invokestatic  #15
668: aload         31
670: invokestatic  #15
673: aload         32
675: invokestatic  #15
678: aload         33
680: invokestatic  #15
683: new           #16
686: dup
687: invokespecial #17
690: ldc           #18
692: invokevirtual #19
695: aload         34
697: invokevirtual #19
700: ldc_w         #523
703: invokevirtual #19
706: invokevirtual #22
709: aload         34
711: ldc           #241
713: invokestatic  #68
716: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test217
Start line: 11344
End line: 11371
Method source code: 
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(false);
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        org.jsoup.safety.Whitelist whitelist18 = whitelist7.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray16);
        boolean boolean20 = whitelist7.isSafeTag("#text");
        java.lang.String str21 = org.jsoup.Jsoup.clean("[^<html> <head></head> <body> </body> </html>]", whitelist7);
        org.jsoup.nodes.Document.OutputSettings outputSettings22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = org.jsoup.Jsoup.clean(":contains(<html>\n <head></head>\n <body>\n  [:lt(32)]\n </body>\n</html>", ".body", whitelist7, outputSettings22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[^    ]" + "'", str21, "[^    ]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #751
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: aload_3
94: ldc           #51
96: invokevirtual #83
99: istore        7
101: ldc_w         #492
104: aload_3
105: invokestatic  #81
108: astore        8
110: aconst_null
111: astore        9
113: ldc_w         #265
116: ldc_w         #444
119: aload_3
120: aload         9
122: invokestatic  #33
125: astore        10
127: ldc           #34
129: invokestatic  #35
132: goto          137
135: astore        10
137: aload_1
138: invokestatic  #15
141: aload_2
142: invokestatic  #15
145: aload_3
146: invokestatic  #15
149: aload         4
151: invokestatic  #15
154: new           #16
157: dup
158: invokespecial #17
161: ldc           #18
163: invokevirtual #19
166: iload         5
168: invokevirtual #20
171: ldc           #21
173: invokevirtual #19
176: iconst_1
177: invokevirtual #20
180: ldc           #18
182: invokevirtual #19
185: invokevirtual #22
188: iload         5
190: iconst_1
191: if_icmpne     198
194: iconst_1
195: goto          199
198: iconst_0
199: invokestatic  #23
202: aload         6
204: invokestatic  #15
207: new           #16
210: dup
211: invokespecial #17
214: ldc           #18
216: invokevirtual #19
219: iload         7
221: invokevirtual #20
224: ldc           #21
226: invokevirtual #19
229: iconst_0
230: invokevirtual #20
233: ldc           #18
235: invokevirtual #19
238: invokevirtual #22
241: iload         7
243: ifne          250
246: iconst_1
247: goto          251
250: iconst_0
251: invokestatic  #23
254: new           #16
257: dup
258: invokespecial #17
261: ldc           #18
263: invokevirtual #19
266: aload         8
268: invokevirtual #19
271: ldc_w         #494
274: invokevirtual #19
277: invokevirtual #22
280: aload         8
282: ldc_w         #479
285: invokestatic  #68
288: return
Exception table:
from    to  target type
113   132   135   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test218
Start line: 11374
End line: 11446
Method source code: 
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.jsoup.safety.Whitelist whitelist7 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes9 = whitelist7.getEnforcedAttributes("#text");
        java.lang.String str10 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist7);
        java.lang.String str11 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist7);
        org.jsoup.select.Evaluator.Class class14 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element22 = document18.tagName("hi!");
        org.jsoup.nodes.Element element24 = document18.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = document18.outputSettings();
        org.jsoup.select.Elements elements27 = document18.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element29 = document18.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes30 = document18.attributes();
        org.jsoup.nodes.Element element32 = document18.prepend("[^hi!]");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList38 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document36, "hi!");
        org.jsoup.nodes.Element element40 = document36.tagName("hi!");
        org.jsoup.nodes.Element element42 = document36.append("");
        org.jsoup.nodes.Element element45 = document36.attr("#document", "#document");
        org.jsoup.nodes.Element element46 = document36.body();
        boolean boolean47 = class14.matches((org.jsoup.nodes.Element) document18, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Attribute attribute50 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean51 = whitelist7.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document18, attribute50);
        org.jsoup.safety.Whitelist whitelist54 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist56 = whitelist54.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist58 = whitelist56.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist62 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str63 = org.jsoup.Jsoup.clean(":lt(32)", whitelist62);
        org.jsoup.safety.Whitelist whitelist67 = whitelist62.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray74 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist75 = whitelist62.addTags(strArray74);
        org.jsoup.safety.Whitelist whitelist76 = whitelist58.addProtocols(":matchesOwn(null", "hi!", strArray74);
        org.jsoup.safety.Whitelist whitelist77 = whitelist7.addProtocols("[^\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->]", "<hi!>\n [^hi!]\n</hi!>", strArray74);
        java.lang.String str78 = org.jsoup.Jsoup.clean("#[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist77);
        java.lang.String str79 = org.jsoup.Jsoup.clean("<html>\n <head></head>\n <body></body>\n</html>#document", ":contains(:gt(100)", whitelist77);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(attributes9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[    ^=hi!]" + "'", str11, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(elements27);
        org.junit.Assert.assertNull(element29);
        org.junit.Assert.assertNotNull(attributes30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(attribute50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(whitelist54);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ":lt(32)" + "'", str63, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(whitelist75);
        org.junit.Assert.assertNotNull(whitelist76);
        org.junit.Assert.assertNotNull(whitelist77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "#[:lt(32)*=.   ]" + "'", str78, "#[:lt(32)*=.   ]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "#document" + "'", str79, "#document");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #752
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: ldc           #158
47: ldc           #159
49: aload_1
50: invokestatic  #94
53: astore        4
55: new           #160
58: dup
59: ldc           #10
61: invokespecial #161
64: astore        5
66: ldc           #25
68: ldc           #12
70: invokestatic  #26
73: astore        6
75: ldc           #12
77: aload         6
79: ldc           #12
81: invokestatic  #27
84: astore        7
86: aload         6
88: ldc           #12
90: invokevirtual #28
93: astore        8
95: aload         6
97: ldc           #25
99: invokevirtual #29
102: astore        9
104: aload         6
106: invokevirtual #30
109: astore        10
111: aload         6
113: iconst_m1
114: invokevirtual #162
117: astore        11
119: aload         6
121: ldc           #10
123: invokevirtual #163
126: astore        12
128: aload         6
130: invokevirtual #164
133: astore        13
135: aload         6
137: ldc           #50
139: invokevirtual #165
142: astore        14
144: ldc           #25
146: ldc           #12
148: invokestatic  #26
151: astore        15
153: ldc           #12
155: aload         15
157: ldc           #12
159: invokestatic  #27
162: astore        16
164: aload         15
166: ldc           #12
168: invokevirtual #28
171: astore        17
173: aload         15
175: ldc           #25
177: invokevirtual #29
180: astore        18
182: aload         15
184: ldc           #13
186: ldc           #13
188: invokevirtual #56
191: astore        19
193: aload         15
195: invokevirtual #166
198: astore        20
200: aload         5
202: aload         6
204: aload         15
206: invokevirtual #167
209: istore        21
211: ldc           #114
213: ldc           #25
215: invokestatic  #168
218: astore        22
220: aload_1
221: ldc           #110
223: aload         6
225: aload         22
227: invokevirtual #169
230: istore        23
232: invokestatic  #8
235: astore        24
237: aload         24
239: iconst_1
240: invokevirtual #9
243: astore        25
245: aload         25
247: iconst_0
248: invokevirtual #9
251: astore        26
253: invokestatic  #118
256: astore        27
258: ldc           #43
260: aload         27
262: invokestatic  #81
265: astore        28
267: aload         27
269: ldc           #43
271: ldc           #12
273: ldc           #32
275: invokevirtual #11
278: astore        29
280: bipush        6
282: anewarray     #119
285: dup
286: iconst_0
287: ldc           #109
289: aastore
290: dup
291: iconst_1
292: ldc           #10
294: aastore
295: dup
296: iconst_2
297: ldc           #13
299: aastore
300: dup
301: iconst_3
302: ldc           #50
304: aastore
305: dup
306: iconst_4
307: ldc           #12
309: aastore
310: dup
311: iconst_5
312: ldc           #120
314: aastore
315: astore        30
317: aload         27
319: aload         30
321: invokevirtual #121
324: astore        31
326: aload         26
328: ldc           #38
330: ldc           #12
332: aload         30
334: invokevirtual #122
337: astore        32
339: aload_1
340: ldc           #234
342: ldc           #54
344: aload         30
346: invokevirtual #122
349: astore        33
351: ldc_w         #714
354: aload         33
356: invokestatic  #81
359: astore        34
361: ldc_w         #753
364: ldc           #214
366: aload         33
368: invokestatic  #94
371: astore        35
373: aload_1
374: invokestatic  #15
377: aload_2
378: invokestatic  #15
381: new           #16
384: dup
385: invokespecial #17
388: ldc           #18
390: invokevirtual #19
393: aload_3
394: invokevirtual #19
397: ldc           #67
399: invokevirtual #19
402: invokevirtual #22
405: aload_3
406: ldc           #25
408: invokestatic  #68
411: new           #16
414: dup
415: invokespecial #17
418: ldc           #18
420: invokevirtual #19
423: aload         4
425: invokevirtual #19
428: ldc           #172
430: invokevirtual #19
433: invokevirtual #22
436: aload         4
438: ldc           #173
440: invokestatic  #68
443: aload         6
445: invokestatic  #15
448: aload         7
450: invokestatic  #15
453: aload         8
455: invokestatic  #15
458: aload         9
460: invokestatic  #15
463: aload         10
465: invokestatic  #15
468: aload         11
470: invokestatic  #15
473: aload         12
475: invokestatic  #79
478: aload         13
480: invokestatic  #15
483: aload         14
485: invokestatic  #15
488: aload         15
490: invokestatic  #15
493: aload         16
495: invokestatic  #15
498: aload         17
500: invokestatic  #15
503: aload         18
505: invokestatic  #15
508: aload         19
510: invokestatic  #15
513: aload         20
515: invokestatic  #15
518: new           #16
521: dup
522: invokespecial #17
525: ldc           #18
527: invokevirtual #19
530: iload         21
532: invokevirtual #20
535: ldc           #21
537: invokevirtual #19
540: iconst_0
541: invokevirtual #20
544: ldc           #18
546: invokevirtual #19
549: invokevirtual #22
552: iload         21
554: ifne          561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #23
565: aload         22
567: invokestatic  #15
570: new           #16
573: dup
574: invokespecial #17
577: ldc           #18
579: invokevirtual #19
582: iload         23
584: invokevirtual #20
587: ldc           #21
589: invokevirtual #19
592: iconst_0
593: invokevirtual #20
596: ldc           #18
598: invokevirtual #19
601: invokevirtual #22
604: iload         23
606: ifne          613
609: iconst_1
610: goto          614
613: iconst_0
614: invokestatic  #23
617: aload         24
619: invokestatic  #15
622: aload         25
624: invokestatic  #15
627: aload         26
629: invokestatic  #15
632: aload         27
634: invokestatic  #15
637: new           #16
640: dup
641: invokespecial #17
644: ldc           #18
646: invokevirtual #19
649: aload         28
651: invokevirtual #19
654: ldc           #128
656: invokevirtual #19
659: invokevirtual #22
662: aload         28
664: ldc           #43
666: invokestatic  #68
669: aload         29
671: invokestatic  #15
674: aload         30
676: invokestatic  #15
679: aload         31
681: invokestatic  #15
684: aload         32
686: invokestatic  #15
689: aload         33
691: invokestatic  #15
694: new           #16
697: dup
698: invokespecial #17
701: ldc           #18
703: invokevirtual #19
706: aload         34
708: invokevirtual #19
711: ldc_w         #754
714: invokevirtual #19
717: invokevirtual #22
720: aload         34
722: ldc_w         #755
725: invokestatic  #68
728: new           #16
731: dup
732: invokespecial #17
735: ldc           #18
737: invokevirtual #19
740: aload         35
742: invokevirtual #19
745: ldc           #107
747: invokevirtual #19
750: invokevirtual #22
753: aload         35
755: ldc           #13
757: invokestatic  #68
760: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test219
Start line: 11449
End line: 11529
Method source code: 
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element29 = document26.empty();
        org.jsoup.nodes.Element element31 = element29.toggleClass("#document");
        org.jsoup.select.Elements elements33 = element31.getElementsByAttributeStarting(":lt(32)");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = element31.siblingNodes();
        boolean boolean35 = objList0.retainAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList34);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan37 = new org.jsoup.select.Evaluator.IndexLessThan((int) ' ');
        java.lang.String str38 = indexLessThan37.toString();
        boolean boolean39 = objList0.equals((java.lang.Object) str38);
        org.jsoup.safety.Whitelist whitelist40 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist42 = whitelist40.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner43 = new org.jsoup.safety.Cleaner(whitelist42);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining46 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document48 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document52 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList54 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document52, "hi!");
        org.jsoup.nodes.Element element56 = document52.tagName("hi!");
        org.jsoup.nodes.Element element58 = document52.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = document52.outputSettings();
        boolean boolean60 = attributeWithValueContaining46.matches((org.jsoup.nodes.Element) document48, (org.jsoup.nodes.Element) document52);
        org.jsoup.nodes.Document document61 = cleaner43.clean(document52);
        org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str64 = document63.toString();
        java.lang.String str65 = document63.baseUri();
        org.jsoup.nodes.Document document66 = cleaner43.clean(document63);
        boolean boolean67 = objList0.offerLast((java.lang.Object) document63);
        org.jsoup.select.Elements elements70 = document63.getElementsByAttributeValueEnding("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", ":gt(100)");
        java.lang.String str71 = document63.outerHtml();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(elements33);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ":lt(32)" + "'", str38, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(outputSettings59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str64, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(elements70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str71, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #756
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        12
132: ldc           #12
134: aload         12
136: ldc           #12
138: invokestatic  #27
141: astore        13
143: aload         12
145: invokevirtual #103
148: astore        14
150: aload         14
152: ldc           #13
154: invokevirtual #177
157: astore        15
159: aload         15
161: ldc           #43
163: invokevirtual #426
166: astore        16
168: aload         15
170: invokevirtual #396
173: astore        17
175: aload_1
176: aload         17
178: invokevirtual #584
181: istore        18
183: new           #48
186: dup
187: bipush        32
189: invokespecial #49
192: astore        19
194: aload         19
196: invokevirtual #585
199: astore        20
201: aload_1
202: aload         20
204: invokevirtual #90
207: istore        21
209: invokestatic  #8
212: astore        22
214: aload         22
216: iconst_1
217: invokevirtual #9
220: astore        23
222: new           #40
225: dup
226: aload         23
228: invokespecial #41
231: astore        24
233: new           #42
236: dup
237: ldc           #43
239: ldc           #32
241: invokespecial #44
244: astore        25
246: ldc           #12
248: invokestatic  #45
251: astore        26
253: ldc           #25
255: ldc           #12
257: invokestatic  #26
260: astore        27
262: ldc           #12
264: aload         27
266: ldc           #12
268: invokestatic  #27
271: astore        28
273: aload         27
275: ldc           #12
277: invokevirtual #28
280: astore        29
282: aload         27
284: ldc           #25
286: invokevirtual #29
289: astore        30
291: aload         27
293: invokevirtual #30
296: astore        31
298: aload         25
300: aload         26
302: aload         27
304: invokevirtual #46
307: istore        32
309: aload         24
311: aload         27
313: invokevirtual #47
316: astore        33
318: ldc           #10
320: invokestatic  #193
323: astore        34
325: aload         34
327: invokevirtual #72
330: astore        35
332: aload         34
334: invokevirtual #194
337: astore        36
339: aload         24
341: aload         34
343: invokevirtual #47
346: astore        37
348: aload_1
349: aload         34
351: invokevirtual #282
354: istore        38
356: aload         34
358: ldc           #82
360: ldc           #92
362: invokevirtual #153
365: astore        39
367: aload         34
369: invokevirtual #535
372: astore        40
374: aload_2
375: invokestatic  #15
378: aload_3
379: invokestatic  #15
382: aload         4
384: invokestatic  #15
387: aload         5
389: invokestatic  #15
392: aload         6
394: invokestatic  #15
397: aload         7
399: invokestatic  #15
402: aload         8
404: invokestatic  #15
407: aload         9
409: invokestatic  #15
412: aload         10
414: invokestatic  #15
417: aload         11
419: invokestatic  #15
422: aload         12
424: invokestatic  #15
427: aload         13
429: invokestatic  #15
432: aload         14
434: invokestatic  #15
437: aload         15
439: invokestatic  #15
442: aload         16
444: invokestatic  #15
447: aload         17
449: invokestatic  #15
452: new           #16
455: dup
456: invokespecial #17
459: ldc           #18
461: invokevirtual #19
464: iload         18
466: invokevirtual #20
469: ldc           #21
471: invokevirtual #19
474: iconst_1
475: invokevirtual #20
478: ldc           #18
480: invokevirtual #19
483: invokevirtual #22
486: iload         18
488: iconst_1
489: if_icmpne     496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #23
500: new           #16
503: dup
504: invokespecial #17
507: ldc           #18
509: invokevirtual #19
512: aload         20
514: invokevirtual #19
517: ldc           #128
519: invokevirtual #19
522: invokevirtual #22
525: aload         20
527: ldc           #43
529: invokestatic  #68
532: new           #16
535: dup
536: invokespecial #17
539: ldc           #18
541: invokevirtual #19
544: iload         21
546: invokevirtual #20
549: ldc           #21
551: invokevirtual #19
554: iconst_0
555: invokevirtual #20
558: ldc           #18
560: invokevirtual #19
563: invokevirtual #22
566: iload         21
568: ifne          575
571: iconst_1
572: goto          576
575: iconst_0
576: invokestatic  #23
579: aload         22
581: invokestatic  #15
584: aload         23
586: invokestatic  #15
589: aload         26
591: invokestatic  #15
594: aload         27
596: invokestatic  #15
599: aload         28
601: invokestatic  #15
604: aload         29
606: invokestatic  #15
609: aload         30
611: invokestatic  #15
614: aload         31
616: invokestatic  #15
619: new           #16
622: dup
623: invokespecial #17
626: ldc           #18
628: invokevirtual #19
631: iload         32
633: invokevirtual #20
636: ldc           #21
638: invokevirtual #19
641: iconst_0
642: invokevirtual #20
645: ldc           #18
647: invokevirtual #19
650: invokevirtual #22
653: iload         32
655: ifne          662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #23
666: aload         33
668: invokestatic  #15
671: aload         34
673: invokestatic  #15
676: new           #16
679: dup
680: invokespecial #17
683: ldc           #18
685: invokevirtual #19
688: aload         35
690: invokevirtual #19
693: ldc           #197
695: invokevirtual #19
698: invokevirtual #22
701: aload         35
703: ldc           #151
705: invokestatic  #68
708: new           #16
711: dup
712: invokespecial #17
715: ldc           #18
717: invokevirtual #19
720: aload         36
722: invokevirtual #19
725: ldc           #67
727: invokevirtual #19
730: invokevirtual #22
733: aload         36
735: ldc           #25
737: invokestatic  #68
740: aload         37
742: invokestatic  #15
745: new           #16
748: dup
749: invokespecial #17
752: ldc           #18
754: invokevirtual #19
757: iload         38
759: invokevirtual #20
762: ldc           #21
764: invokevirtual #19
767: iconst_1
768: invokevirtual #20
771: ldc           #18
773: invokevirtual #19
776: invokevirtual #22
779: iload         38
781: iconst_1
782: if_icmpne     789
785: iconst_1
786: goto          790
789: iconst_0
790: invokestatic  #23
793: aload         39
795: invokestatic  #15
798: new           #16
801: dup
802: invokespecial #17
805: ldc           #18
807: invokevirtual #19
810: aload         40
812: invokevirtual #19
815: ldc           #197
817: invokevirtual #19
820: invokevirtual #22
823: aload         40
825: ldc           #151
827: invokestatic  #68
830: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test220
Start line: 11532
End line: 11567
Method source code: 
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str6 = org.jsoup.Jsoup.clean(":lt(32)", whitelist5);
        boolean boolean8 = whitelist5.isSafeTag("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element15 = document12.empty();
        org.jsoup.nodes.Element element17 = document12.removeClass("hi!");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element25 = document21.tagName("hi!");
        org.jsoup.nodes.Element element27 = document21.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = document21.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings30 = outputSettings28.prettyPrint(false);
        org.jsoup.nodes.Document document31 = document12.outputSettings(outputSettings30);
        java.lang.String str32 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist5, outputSettings30);
        java.lang.String str33 = org.jsoup.Jsoup.clean("[.hi!=<!---->]", "<!---->", whitelist5);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + ":lt(32)" + "'", str6, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(outputSettings30);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[:lt(32)]" + "'", str32, "[:lt(32)]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[.hi!=]" + "'", str33, "[.hi!=]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #757
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: ldc_w         #758
156: ldc_w         #303
159: aload_1
160: invokestatic  #94
163: astore        16
165: aload_1
166: invokestatic  #15
169: new           #16
172: dup
173: invokespecial #17
176: ldc           #18
178: invokevirtual #19
181: aload_2
182: invokevirtual #19
185: ldc           #128
187: invokevirtual #19
190: invokevirtual #22
193: aload_2
194: ldc           #43
196: invokestatic  #68
199: new           #16
202: dup
203: invokespecial #17
206: ldc           #18
208: invokevirtual #19
211: iload_3
212: invokevirtual #20
215: ldc           #21
217: invokevirtual #19
220: iconst_0
221: invokevirtual #20
224: ldc           #18
226: invokevirtual #19
229: invokevirtual #22
232: iload_3
233: ifne          240
236: iconst_1
237: goto          241
240: iconst_0
241: invokestatic  #23
244: aload         4
246: invokestatic  #15
249: aload         5
251: invokestatic  #15
254: aload         6
256: invokestatic  #15
259: aload         7
261: invokestatic  #15
264: aload         8
266: invokestatic  #15
269: aload         9
271: invokestatic  #15
274: aload         10
276: invokestatic  #15
279: aload         11
281: invokestatic  #15
284: aload         12
286: invokestatic  #15
289: aload         13
291: invokestatic  #15
294: aload         14
296: invokestatic  #15
299: new           #16
302: dup
303: invokespecial #17
306: ldc           #18
308: invokevirtual #19
311: aload         15
313: invokevirtual #19
316: ldc           #184
318: invokevirtual #19
321: invokevirtual #22
324: aload         15
326: ldc           #58
328: invokestatic  #68
331: new           #16
334: dup
335: invokespecial #17
338: ldc           #18
340: invokevirtual #19
343: aload         16
345: invokevirtual #19
348: ldc_w         #759
351: invokevirtual #19
354: invokevirtual #22
357: aload         16
359: ldc_w         #760
362: invokestatic  #68
365: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test221
Start line: 11570
End line: 11610
Method source code: 
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList9 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document7, "hi!");
        org.jsoup.nodes.Element element11 = document7.tagName("hi!");
        org.jsoup.nodes.Element element13 = document7.text("[:lt(32)]");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList14 = document7.dataNodes();
        org.jsoup.parser.Tag tag15 = document7.tag();
        java.lang.String str16 = document7.outerHtml();
        org.jsoup.nodes.Document document17 = cleaner3.clean(document7);
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element24 = document21.empty();
        org.jsoup.nodes.Element element26 = document21.removeClass("hi!");
        org.jsoup.select.Elements elements29 = document21.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        org.jsoup.select.Elements elements30 = document21.getAllElements();
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList31 = document21.dataNodes();
        org.jsoup.nodes.Document document32 = cleaner3.clean(document21);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertNotNull(nodeList9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(dataNodeList14);
        org.junit.Assert.assertNotNull(tag15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "<html>\n <head></head>\n <body>\n  [:lt(32)]\n </body>\n</html>" + "'", str16, "<html>\n <head></head>\n <body>\n  [:lt(32)]\n </body>\n</html>");
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNotNull(elements30);
        org.junit.Assert.assertNotNull(dataNodeList31);
        org.junit.Assert.assertNotNull(document32);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #761
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: ldc           #25
46: ldc           #12
48: invokestatic  #26
51: astore        4
53: ldc           #12
55: aload         4
57: ldc           #12
59: invokestatic  #27
62: astore        5
64: aload         4
66: ldc           #12
68: invokevirtual #28
71: astore        6
73: aload         4
75: ldc           #58
77: invokevirtual #64
80: astore        7
82: aload         4
84: invokevirtual #348
87: astore        8
89: aload         4
91: invokevirtual #207
94: astore        9
96: aload         4
98: invokevirtual #535
101: astore        10
103: aload_3
104: aload         4
106: invokevirtual #47
109: astore        11
111: ldc           #25
113: ldc           #12
115: invokestatic  #26
118: astore        12
120: ldc           #12
122: aload         12
124: ldc           #12
126: invokestatic  #27
129: astore        13
131: aload         12
133: invokevirtual #103
136: astore        14
138: aload         12
140: ldc           #12
142: invokevirtual #59
145: astore        15
147: aload         12
149: ldc           #10
151: ldc           #58
153: invokevirtual #153
156: astore        16
158: aload         12
160: invokevirtual #762
163: astore        17
165: aload         12
167: invokevirtual #348
170: astore        18
172: aload_3
173: aload         12
175: invokevirtual #47
178: astore        19
180: aload_1
181: invokestatic  #15
184: aload_2
185: invokestatic  #15
188: aload         4
190: invokestatic  #15
193: aload         5
195: invokestatic  #15
198: aload         6
200: invokestatic  #15
203: aload         7
205: invokestatic  #15
208: aload         8
210: invokestatic  #15
213: aload         9
215: invokestatic  #15
218: new           #16
221: dup
222: invokespecial #17
225: ldc           #18
227: invokevirtual #19
230: aload         10
232: invokevirtual #19
235: ldc_w         #763
238: invokevirtual #19
241: invokevirtual #22
244: aload         10
246: ldc_w         #545
249: invokestatic  #68
252: aload         11
254: invokestatic  #15
257: aload         12
259: invokestatic  #15
262: aload         13
264: invokestatic  #15
267: aload         14
269: invokestatic  #15
272: aload         15
274: invokestatic  #15
277: aload         16
279: invokestatic  #15
282: aload         17
284: invokestatic  #15
287: aload         18
289: invokestatic  #15
292: aload         19
294: invokestatic  #15
297: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test222
Start line: 11613
End line: 11624
Method source code: 
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)", whitelist1);
        boolean boolean4 = whitelist1.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist6 = whitelist1.preserveRelativeLinks(true);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":lt(32)" + "'", str2, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(whitelist6);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #764
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: aload_1
44: iconst_1
45: invokevirtual #9
48: astore        4
50: aload_1
51: invokestatic  #15
54: new           #16
57: dup
58: invokespecial #17
61: ldc           #18
63: invokevirtual #19
66: aload_2
67: invokevirtual #19
70: ldc           #128
72: invokevirtual #19
75: invokevirtual #22
78: aload_2
79: ldc           #43
81: invokestatic  #68
84: new           #16
87: dup
88: invokespecial #17
91: ldc           #18
93: invokevirtual #19
96: iload_3
97: invokevirtual #20
100: ldc           #21
102: invokevirtual #19
105: iconst_0
106: invokevirtual #20
109: ldc           #18
111: invokevirtual #19
114: invokevirtual #22
117: iload_3
118: ifne          125
121: iconst_1
122: goto          126
125: iconst_0
126: invokestatic  #23
129: aload         4
131: invokestatic  #15
134: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test223
Start line: 11627
End line: 11692
Method source code: 
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basic();
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(true);
        java.lang.String str6 = org.jsoup.Jsoup.clean("\n<!--[hi!$=   ]-->", "[:gt(100)]=\"\"", whitelist5);
        org.jsoup.safety.Whitelist whitelist7 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist11 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str12 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist11);
        boolean boolean14 = whitelist11.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist16 = whitelist11.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist18 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist20 = whitelist18.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist24 = whitelist18.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist28 = whitelist18.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str29 = org.jsoup.Jsoup.clean("hi!", whitelist18);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist33 = whitelist31.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist35 = whitelist33.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist39 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str40 = org.jsoup.Jsoup.clean(":lt(32)", whitelist39);
        org.jsoup.safety.Whitelist whitelist44 = whitelist39.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray51 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist52 = whitelist39.addTags(strArray51);
        org.jsoup.safety.Whitelist whitelist53 = whitelist35.addProtocols(":matchesOwn(null", "hi!", strArray51);
        java.lang.String[] strArray62 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean63 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray62);
        org.jsoup.safety.Whitelist whitelist64 = whitelist53.addProtocols("\n<!--hi!-->", "#document", strArray62);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray62);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray62);
        org.jsoup.safety.Whitelist whitelist67 = whitelist18.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray62);
        org.jsoup.safety.Whitelist whitelist68 = whitelist11.addTags(strArray62);
        org.jsoup.safety.Whitelist whitelist69 = whitelist7.addAttributes("[    ^=hi!]", strArray62);
        org.jsoup.safety.Whitelist whitelist70 = whitelist5.addTags(strArray62);
        java.lang.String str71 = org.jsoup.Jsoup.clean("#[:lt(32)*=.   ]", whitelist5);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!$=   ]" + "'", str12, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":lt(32)" + "'", str40, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "#[:lt(32)*=. ]" + "'", str71, "#[:lt(32)*=. ]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #765
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #313
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc_w         #477
38: ldc_w         #323
41: aload_2
42: invokestatic  #94
45: astore_3
46: invokestatic  #8
49: astore        4
51: invokestatic  #8
54: astore        5
56: ldc           #109
58: ldc           #110
60: aload         5
62: invokestatic  #94
65: astore        6
67: aload         5
69: ldc           #25
71: invokevirtual #83
74: istore        7
76: aload         5
78: iconst_0
79: invokevirtual #9
82: astore        8
84: invokestatic  #8
87: astore        9
89: aload         9
91: iconst_1
92: invokevirtual #9
95: astore        10
97: aload         9
99: ldc           #10
101: ldc           #10
103: ldc           #10
105: invokevirtual #11
108: astore        11
110: aload         9
112: ldc           #12
114: ldc           #13
116: ldc           #12
118: invokevirtual #11
121: astore        12
123: ldc           #12
125: aload         9
127: invokestatic  #81
130: astore        13
132: invokestatic  #8
135: astore        14
137: aload         14
139: iconst_1
140: invokevirtual #9
143: astore        15
145: aload         15
147: iconst_0
148: invokevirtual #9
151: astore        16
153: invokestatic  #118
156: astore        17
158: ldc           #43
160: aload         17
162: invokestatic  #81
165: astore        18
167: aload         17
169: ldc           #43
171: ldc           #12
173: ldc           #32
175: invokevirtual #11
178: astore        19
180: bipush        6
182: anewarray     #119
185: dup
186: iconst_0
187: ldc           #109
189: aastore
190: dup
191: iconst_1
192: ldc           #10
194: aastore
195: dup
196: iconst_2
197: ldc           #13
199: aastore
200: dup
201: iconst_3
202: ldc           #50
204: aastore
205: dup
206: iconst_4
207: ldc           #12
209: aastore
210: dup
211: iconst_5
212: ldc           #120
214: aastore
215: astore        20
217: aload         17
219: aload         20
221: invokevirtual #121
224: astore        21
226: aload         16
228: ldc           #38
230: ldc           #12
232: aload         20
234: invokevirtual #122
237: astore        22
239: iconst_5
240: anewarray     #119
243: dup
244: iconst_0
245: ldc           #13
247: aastore
248: dup
249: iconst_1
250: ldc           #32
252: aastore
253: dup
254: iconst_2
255: ldc           #10
257: aastore
258: dup
259: iconst_3
260: ldc           #43
262: aastore
263: dup
264: iconst_4
265: ldc           #58
267: aastore
268: astore        23
270: ldc           #10
272: aload         23
274: invokestatic  #123
277: istore        24
279: aload         22
281: ldc           #84
283: ldc           #13
285: aload         23
287: invokevirtual #122
290: astore        25
292: aload         23
294: checkcast     #124
297: invokestatic  #125
300: aload         23
302: checkcast     #124
305: invokestatic  #125
308: aload         9
310: ldc           #249
312: aload         23
314: invokevirtual #127
317: astore        26
319: aload         5
321: aload         23
323: invokevirtual #121
326: astore        27
328: aload         4
330: ldc           #173
332: aload         23
334: invokevirtual #127
337: astore        28
339: aload_2
340: aload         23
342: invokevirtual #121
345: astore        29
347: ldc_w         #755
350: aload_2
351: invokestatic  #81
354: astore        30
356: aload_1
357: invokestatic  #15
360: aload_2
361: invokestatic  #15
364: new           #16
367: dup
368: invokespecial #17
371: ldc           #18
373: invokevirtual #19
376: aload_3
377: invokevirtual #19
380: ldc           #67
382: invokevirtual #19
385: invokevirtual #22
388: aload_3
389: ldc           #25
391: invokestatic  #68
394: aload         4
396: invokestatic  #15
399: aload         5
401: invokestatic  #15
404: new           #16
407: dup
408: invokespecial #17
411: ldc           #18
413: invokevirtual #19
416: aload         6
418: invokevirtual #19
421: ldc           #111
423: invokevirtual #19
426: invokevirtual #22
429: aload         6
431: ldc           #65
433: invokestatic  #68
436: new           #16
439: dup
440: invokespecial #17
443: ldc           #18
445: invokevirtual #19
448: iload         7
450: invokevirtual #20
453: ldc           #21
455: invokevirtual #19
458: iconst_0
459: invokevirtual #20
462: ldc           #18
464: invokevirtual #19
467: invokevirtual #22
470: iload         7
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #23
483: aload         8
485: invokestatic  #15
488: aload         9
490: invokestatic  #15
493: aload         10
495: invokestatic  #15
498: aload         11
500: invokestatic  #15
503: aload         12
505: invokestatic  #15
508: new           #16
511: dup
512: invokespecial #17
515: ldc           #18
517: invokevirtual #19
520: aload         13
522: invokevirtual #19
525: ldc           #211
527: invokevirtual #19
530: invokevirtual #22
533: aload         13
535: ldc           #12
537: invokestatic  #68
540: aload         14
542: invokestatic  #15
545: aload         15
547: invokestatic  #15
550: aload         16
552: invokestatic  #15
555: aload         17
557: invokestatic  #15
560: new           #16
563: dup
564: invokespecial #17
567: ldc           #18
569: invokevirtual #19
572: aload         18
574: invokevirtual #19
577: ldc           #128
579: invokevirtual #19
582: invokevirtual #22
585: aload         18
587: ldc           #43
589: invokestatic  #68
592: aload         19
594: invokestatic  #15
597: aload         20
599: invokestatic  #15
602: aload         21
604: invokestatic  #15
607: aload         22
609: invokestatic  #15
612: aload         23
614: invokestatic  #15
617: new           #16
620: dup
621: invokespecial #17
624: ldc           #18
626: invokevirtual #19
629: iload         24
631: invokevirtual #20
634: ldc           #21
636: invokevirtual #19
639: iconst_1
640: invokevirtual #20
643: ldc           #18
645: invokevirtual #19
648: invokevirtual #22
651: iload         24
653: iconst_1
654: if_icmpne     661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #23
665: aload         25
667: invokestatic  #15
670: aload         26
672: invokestatic  #15
675: aload         27
677: invokestatic  #15
680: aload         28
682: invokestatic  #15
685: aload         29
687: invokestatic  #15
690: new           #16
693: dup
694: invokespecial #17
697: ldc           #18
699: invokevirtual #19
702: aload         30
704: invokevirtual #19
707: ldc_w         #766
710: invokevirtual #19
713: invokevirtual #22
716: aload         30
718: ldc_w         #767
721: invokestatic  #68
724: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test224
Start line: 11695
End line: 11706
Method source code: 
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("#root", ":containsOwn(<html>\n <head></head>\n <body>   \n </body>\n</html>", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #768
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #331
30: ldc_w         #769
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test225
Start line: 11709
End line: 11740
Method source code: 
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str10 = org.jsoup.Jsoup.clean(":lt(32)", whitelist9);
        org.jsoup.safety.Whitelist whitelist14 = whitelist9.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray21 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist22 = whitelist9.addTags(strArray21);
        org.jsoup.safety.Whitelist whitelist23 = whitelist5.addProtocols(":matchesOwn(null", "hi!", strArray21);
        java.lang.String[] strArray32 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean33 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray32);
        org.jsoup.safety.Whitelist whitelist34 = whitelist23.addProtocols("\n<!--hi!-->", "#document", strArray32);
        boolean boolean35 = org.jsoup.helper.StringUtil.in(":eq(1)", strArray32);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray32, "<hi!>\n [^hi!]\n</hi!>");
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray32, "                                                    ");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + ":lt(32)" + "'", str10, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #770
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: invokestatic  #118
44: astore        4
46: ldc           #43
48: aload         4
50: invokestatic  #81
53: astore        5
55: aload         4
57: ldc           #43
59: ldc           #12
61: ldc           #32
63: invokevirtual #11
66: astore        6
68: bipush        6
70: anewarray     #119
73: dup
74: iconst_0
75: ldc           #109
77: aastore
78: dup
79: iconst_1
80: ldc           #10
82: aastore
83: dup
84: iconst_2
85: ldc           #13
87: aastore
88: dup
89: iconst_3
90: ldc           #50
92: aastore
93: dup
94: iconst_4
95: ldc           #12
97: aastore
98: dup
99: iconst_5
100: ldc           #120
102: aastore
103: astore        7
105: aload         4
107: aload         7
109: invokevirtual #121
112: astore        8
114: aload_3
115: ldc           #38
117: ldc           #12
119: aload         7
121: invokevirtual #122
124: astore        9
126: iconst_5
127: anewarray     #119
130: dup
131: iconst_0
132: ldc           #13
134: aastore
135: dup
136: iconst_1
137: ldc           #32
139: aastore
140: dup
141: iconst_2
142: ldc           #10
144: aastore
145: dup
146: iconst_3
147: ldc           #43
149: aastore
150: dup
151: iconst_4
152: ldc           #58
154: aastore
155: astore        10
157: ldc           #10
159: aload         10
161: invokestatic  #123
164: istore        11
166: aload         9
168: ldc           #84
170: ldc           #13
172: aload         10
174: invokevirtual #122
177: astore        12
179: ldc_w         #279
182: aload         10
184: invokestatic  #123
187: istore        13
189: aload         10
191: checkcast     #124
194: ldc           #54
196: invokestatic  #245
199: aload         10
201: checkcast     #124
204: ldc_w         #771
207: invokestatic  #245
210: aload_1
211: invokestatic  #15
214: aload_2
215: invokestatic  #15
218: aload_3
219: invokestatic  #15
222: aload         4
224: invokestatic  #15
227: new           #16
230: dup
231: invokespecial #17
234: ldc           #18
236: invokevirtual #19
239: aload         5
241: invokevirtual #19
244: ldc           #128
246: invokevirtual #19
249: invokevirtual #22
252: aload         5
254: ldc           #43
256: invokestatic  #68
259: aload         6
261: invokestatic  #15
264: aload         7
266: invokestatic  #15
269: aload         8
271: invokestatic  #15
274: aload         9
276: invokestatic  #15
279: aload         10
281: invokestatic  #15
284: new           #16
287: dup
288: invokespecial #17
291: ldc           #18
293: invokevirtual #19
296: iload         11
298: invokevirtual #20
301: ldc           #21
303: invokevirtual #19
306: iconst_1
307: invokevirtual #20
310: ldc           #18
312: invokevirtual #19
315: invokevirtual #22
318: iload         11
320: iconst_1
321: if_icmpne     328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #23
332: aload         12
334: invokestatic  #15
337: new           #16
340: dup
341: invokespecial #17
344: ldc           #18
346: invokevirtual #19
349: iload         13
351: invokevirtual #20
354: ldc           #21
356: invokevirtual #19
359: iconst_0
360: invokevirtual #20
363: ldc           #18
365: invokevirtual #19
368: invokevirtual #22
371: iload         13
373: ifne          380
376: iconst_1
377: goto          381
380: iconst_0
381: invokestatic  #23
384: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test226
Start line: 11743
End line: 11788
Method source code: 
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        boolean boolean37 = tag36.isEmpty();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #772
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: aload         21
204: invokevirtual #773
207: istore        22
209: aload_1
210: invokestatic  #15
213: aload_2
214: invokestatic  #15
217: aload         5
219: invokestatic  #15
222: aload         6
224: invokestatic  #15
227: aload         7
229: invokestatic  #15
232: aload         8
234: invokestatic  #15
237: aload         9
239: invokestatic  #15
242: aload         10
244: invokestatic  #15
247: new           #16
250: dup
251: invokespecial #17
254: ldc           #18
256: invokevirtual #19
259: iload         11
261: invokevirtual #20
264: ldc           #21
266: invokevirtual #19
269: iconst_0
270: invokevirtual #20
273: ldc           #18
275: invokevirtual #19
278: invokevirtual #22
281: iload         11
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #23
294: aload         12
296: invokestatic  #15
299: aload         13
301: invokestatic  #15
304: aload         14
306: invokestatic  #15
309: aload         15
311: invokestatic  #15
314: aload         16
316: invokestatic  #15
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: aload         17
333: invokevirtual #19
336: ldc           #78
338: invokevirtual #19
341: invokevirtual #22
344: aload         17
346: ldc           #10
348: invokestatic  #68
351: new           #16
354: dup
355: invokespecial #17
358: ldc           #18
360: invokevirtual #19
363: aload         18
365: invokevirtual #19
368: ldc           #67
370: invokevirtual #19
373: invokevirtual #22
376: aload         18
378: ldc           #25
380: invokestatic  #68
383: aload         19
385: invokestatic  #79
388: aload         20
390: invokestatic  #15
393: aload         21
395: invokestatic  #15
398: new           #16
401: dup
402: invokespecial #17
405: ldc           #18
407: invokevirtual #19
410: iload         22
412: invokevirtual #20
415: ldc           #21
417: invokevirtual #19
420: iconst_0
421: invokevirtual #20
424: ldc           #18
426: invokevirtual #19
429: invokevirtual #22
432: iload         22
434: ifne          441
437: iconst_1
438: goto          442
441: iconst_0
442: invokestatic  #23
445: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test227
Start line: 11791
End line: 11827
Method source code: 
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        java.lang.String str9 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist6);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(false);
        java.lang.String[] strArray26 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean27 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray26);
        org.jsoup.safety.Whitelist whitelist28 = whitelist17.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray26);
        boolean boolean29 = org.jsoup.helper.StringUtil.in("#text", strArray26);
        boolean boolean30 = org.jsoup.helper.StringUtil.in("\n<!---->", strArray26);
        org.jsoup.safety.Whitelist whitelist31 = whitelist6.addAttributes("[:lt(32)]", strArray26);
        org.jsoup.safety.Whitelist whitelist32 = whitelist3.addTags(strArray26);
        boolean boolean33 = org.jsoup.Jsoup.isValid(" text=\"hi!\" #document=\"#document\"", whitelist32);
        org.jsoup.safety.Cleaner cleaner34 = new org.jsoup.safety.Cleaner(whitelist32);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #774
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: invokestatic  #118
38: astore_3
39: aload_3
40: ldc           #51
42: invokevirtual #150
45: astore        4
47: ldc           #25
49: ldc           #157
51: aload_3
52: invokestatic  #94
55: astore        5
57: invokestatic  #8
60: astore        6
62: aload         6
64: iconst_1
65: invokevirtual #9
68: astore        7
70: aload         7
72: iconst_0
73: invokevirtual #9
76: astore        8
78: iconst_5
79: anewarray     #119
82: dup
83: iconst_0
84: ldc           #13
86: aastore
87: dup
88: iconst_1
89: ldc           #32
91: aastore
92: dup
93: iconst_2
94: ldc           #10
96: aastore
97: dup
98: iconst_3
99: ldc           #43
101: aastore
102: dup
103: iconst_4
104: ldc           #58
106: aastore
107: astore        9
109: ldc           #10
111: aload         9
113: invokestatic  #123
116: istore        10
118: aload         8
120: ldc           #120
122: ldc           #55
124: aload         9
126: invokevirtual #122
129: astore        11
131: ldc           #51
133: aload         9
135: invokestatic  #123
138: istore        12
140: ldc           #120
142: aload         9
144: invokestatic  #123
147: istore        13
149: aload_3
150: ldc           #58
152: aload         9
154: invokevirtual #127
157: astore        14
159: aload_2
160: aload         9
162: invokevirtual #121
165: astore        15
167: ldc_w         #552
170: aload         15
172: invokestatic  #14
175: istore        16
177: new           #40
180: dup
181: aload         15
183: invokespecial #41
186: astore        17
188: aload_1
189: invokestatic  #15
192: aload_2
193: invokestatic  #15
196: aload_3
197: invokestatic  #15
200: aload         4
202: invokestatic  #15
205: new           #16
208: dup
209: invokespecial #17
212: ldc           #18
214: invokevirtual #19
217: aload         5
219: invokevirtual #19
222: ldc           #67
224: invokevirtual #19
227: invokevirtual #22
230: aload         5
232: ldc           #25
234: invokestatic  #68
237: aload         6
239: invokestatic  #15
242: aload         7
244: invokestatic  #15
247: aload         8
249: invokestatic  #15
252: aload         9
254: invokestatic  #15
257: new           #16
260: dup
261: invokespecial #17
264: ldc           #18
266: invokevirtual #19
269: iload         10
271: invokevirtual #20
274: ldc           #21
276: invokevirtual #19
279: iconst_1
280: invokevirtual #20
283: ldc           #18
285: invokevirtual #19
288: invokevirtual #22
291: iload         10
293: iconst_1
294: if_icmpne     301
297: iconst_1
298: goto          302
301: iconst_0
302: invokestatic  #23
305: aload         11
307: invokestatic  #15
310: new           #16
313: dup
314: invokespecial #17
317: ldc           #18
319: invokevirtual #19
322: iload         12
324: invokevirtual #20
327: ldc           #21
329: invokevirtual #19
332: iconst_0
333: invokevirtual #20
336: ldc           #18
338: invokevirtual #19
341: invokevirtual #22
344: iload         12
346: ifne          353
349: iconst_1
350: goto          354
353: iconst_0
354: invokestatic  #23
357: new           #16
360: dup
361: invokespecial #17
364: ldc           #18
366: invokevirtual #19
369: iload         13
371: invokevirtual #20
374: ldc           #21
376: invokevirtual #19
379: iconst_0
380: invokevirtual #20
383: ldc           #18
385: invokevirtual #19
388: invokevirtual #22
391: iload         13
393: ifne          400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #23
404: aload         14
406: invokestatic  #15
409: aload         15
411: invokestatic  #15
414: new           #16
417: dup
418: invokespecial #17
421: ldc           #18
423: invokevirtual #19
426: iload         16
428: invokevirtual #20
431: ldc           #21
433: invokevirtual #19
436: iconst_1
437: invokevirtual #20
440: ldc           #18
442: invokevirtual #19
445: invokevirtual #22
448: iload         16
450: iconst_1
451: if_icmpne     458
454: iconst_1
455: goto          459
458: iconst_0
459: invokestatic  #23
462: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test228
Start line: 11830
End line: 11919
Method source code: 
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        org.jsoup.safety.Whitelist whitelist21 = whitelist19.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist27 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str28 = org.jsoup.Jsoup.clean(":lt(32)", whitelist27);
        boolean boolean30 = whitelist27.isSafeTag("");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element37 = document34.empty();
        org.jsoup.nodes.Element element39 = document34.removeClass("hi!");
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList45 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document43, "hi!");
        org.jsoup.nodes.Element element47 = document43.tagName("hi!");
        org.jsoup.nodes.Element element49 = document43.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings50 = document43.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings52 = outputSettings50.prettyPrint(false);
        org.jsoup.nodes.Document document53 = document34.outputSettings(outputSettings52);
        java.lang.String str54 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist27, outputSettings52);
        org.jsoup.safety.Whitelist whitelist57 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str58 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist57);
        org.jsoup.safety.Whitelist whitelist60 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist62 = whitelist60.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist64 = whitelist62.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist68 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str69 = org.jsoup.Jsoup.clean(":lt(32)", whitelist68);
        org.jsoup.safety.Whitelist whitelist73 = whitelist68.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray80 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist81 = whitelist68.addTags(strArray80);
        org.jsoup.safety.Whitelist whitelist82 = whitelist64.addProtocols(":matchesOwn(null", "hi!", strArray80);
        java.lang.String[] strArray91 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean92 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray91);
        org.jsoup.safety.Whitelist whitelist93 = whitelist82.addProtocols("\n<!--hi!-->", "#document", strArray91);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray91);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray91);
        org.jsoup.safety.Whitelist whitelist96 = whitelist57.addAttributes("*", strArray91);
        org.jsoup.safety.Whitelist whitelist97 = whitelist27.addTags(strArray91);
        boolean boolean98 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", strArray91);
        org.jsoup.safety.Whitelist whitelist99 = whitelist21.addAttributes("<hi!></hi!>", strArray91);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + ":lt(32)" + "'", str28, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(nodeList45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(outputSettings50);
        org.junit.Assert.assertNotNull(outputSettings52);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[:lt(32)]" + "'", str54, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!$=   ]" + "'", str58, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ":lt(32)" + "'", str69, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(whitelist93);
        org.junit.Assert.assertNotNull(whitelist96);
        org.junit.Assert.assertNotNull(whitelist97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(whitelist99);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #775
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: iconst_1
114: invokevirtual #9
117: astore        9
119: invokestatic  #118
122: astore        10
124: ldc           #43
126: aload         10
128: invokestatic  #81
131: astore        11
133: aload         10
135: ldc           #25
137: invokevirtual #83
140: istore        12
142: ldc           #25
144: ldc           #12
146: invokestatic  #26
149: astore        13
151: ldc           #12
153: aload         13
155: ldc           #12
157: invokestatic  #27
160: astore        14
162: aload         13
164: invokevirtual #103
167: astore        15
169: aload         13
171: ldc           #12
173: invokevirtual #59
176: astore        16
178: ldc           #25
180: ldc           #12
182: invokestatic  #26
185: astore        17
187: ldc           #12
189: aload         17
191: ldc           #12
193: invokestatic  #27
196: astore        18
198: aload         17
200: ldc           #12
202: invokevirtual #28
205: astore        19
207: aload         17
209: ldc           #25
211: invokevirtual #29
214: astore        20
216: aload         17
218: invokevirtual #30
221: astore        21
223: aload         21
225: iconst_0
226: invokevirtual #31
229: astore        22
231: aload         13
233: aload         22
235: invokevirtual #175
238: astore        23
240: ldc           #58
242: ldc           #126
244: aload         10
246: aload         22
248: invokestatic  #33
251: astore        24
253: invokestatic  #8
256: astore        25
258: ldc           #109
260: ldc           #110
262: aload         25
264: invokestatic  #94
267: astore        26
269: invokestatic  #8
272: astore        27
274: aload         27
276: iconst_1
277: invokevirtual #9
280: astore        28
282: aload         28
284: iconst_0
285: invokevirtual #9
288: astore        29
290: invokestatic  #118
293: astore        30
295: ldc           #43
297: aload         30
299: invokestatic  #81
302: astore        31
304: aload         30
306: ldc           #43
308: ldc           #12
310: ldc           #32
312: invokevirtual #11
315: astore        32
317: bipush        6
319: anewarray     #119
322: dup
323: iconst_0
324: ldc           #109
326: aastore
327: dup
328: iconst_1
329: ldc           #10
331: aastore
332: dup
333: iconst_2
334: ldc           #13
336: aastore
337: dup
338: iconst_3
339: ldc           #50
341: aastore
342: dup
343: iconst_4
344: ldc           #12
346: aastore
347: dup
348: iconst_5
349: ldc           #120
351: aastore
352: astore        33
354: aload         30
356: aload         33
358: invokevirtual #121
361: astore        34
363: aload         29
365: ldc           #38
367: ldc           #12
369: aload         33
371: invokevirtual #122
374: astore        35
376: iconst_5
377: anewarray     #119
380: dup
381: iconst_0
382: ldc           #13
384: aastore
385: dup
386: iconst_1
387: ldc           #32
389: aastore
390: dup
391: iconst_2
392: ldc           #10
394: aastore
395: dup
396: iconst_3
397: ldc           #43
399: aastore
400: dup
401: iconst_4
402: ldc           #58
404: aastore
405: astore        36
407: ldc           #10
409: aload         36
411: invokestatic  #123
414: istore        37
416: aload         35
418: ldc           #84
420: ldc           #13
422: aload         36
424: invokevirtual #122
427: astore        38
429: aload         36
431: checkcast     #124
434: invokestatic  #125
437: aload         36
439: checkcast     #124
442: invokestatic  #125
445: aload         25
447: ldc           #126
449: aload         36
451: invokevirtual #127
454: astore        39
456: aload         10
458: aload         36
460: invokevirtual #121
463: astore        40
465: ldc           #82
467: aload         36
469: invokestatic  #123
472: istore        41
474: aload         9
476: ldc_w         #776
479: aload         36
481: invokevirtual #127
484: astore        42
486: aload_1
487: invokestatic  #15
490: aload_2
491: invokestatic  #15
494: new           #16
497: dup
498: invokespecial #17
501: ldc           #18
503: invokevirtual #19
506: aload_3
507: invokevirtual #19
510: ldc           #85
512: invokevirtual #19
515: invokevirtual #22
518: aload_3
519: ldc           #86
521: invokestatic  #68
524: new           #16
527: dup
528: invokespecial #17
531: ldc           #18
533: invokevirtual #19
536: iload         4
538: invokevirtual #20
541: ldc           #21
543: invokevirtual #19
546: iconst_0
547: invokevirtual #20
550: ldc           #18
552: invokevirtual #19
555: invokevirtual #22
558: iload         4
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #23
571: aload         5
573: invokestatic  #15
576: new           #16
579: dup
580: invokespecial #17
583: ldc           #18
585: invokevirtual #19
588: iload         6
590: invokevirtual #20
593: ldc           #21
595: invokevirtual #19
598: iconst_1
599: invokevirtual #20
602: ldc           #18
604: invokevirtual #19
607: invokevirtual #22
610: iload         6
612: iconst_1
613: if_icmpne     620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #23
624: new           #16
627: dup
628: invokespecial #17
631: ldc           #18
633: invokevirtual #19
636: iload         7
638: invokevirtual #20
641: ldc           #21
643: invokevirtual #19
646: iconst_0
647: invokevirtual #20
650: ldc           #18
652: invokevirtual #19
655: invokevirtual #22
658: iload         7
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #23
671: aload         8
673: invokestatic  #15
676: aload         9
678: invokestatic  #15
681: aload         10
683: invokestatic  #15
686: new           #16
689: dup
690: invokespecial #17
693: ldc           #18
695: invokevirtual #19
698: aload         11
700: invokevirtual #19
703: ldc           #128
705: invokevirtual #19
708: invokevirtual #22
711: aload         11
713: ldc           #43
715: invokestatic  #68
718: new           #16
721: dup
722: invokespecial #17
725: ldc           #18
727: invokevirtual #19
730: iload         12
732: invokevirtual #20
735: ldc           #21
737: invokevirtual #19
740: iconst_0
741: invokevirtual #20
744: ldc           #18
746: invokevirtual #19
749: invokevirtual #22
752: iload         12
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #23
765: aload         13
767: invokestatic  #15
770: aload         14
772: invokestatic  #15
775: aload         15
777: invokestatic  #15
780: aload         16
782: invokestatic  #15
785: aload         17
787: invokestatic  #15
790: aload         18
792: invokestatic  #15
795: aload         19
797: invokestatic  #15
800: aload         20
802: invokestatic  #15
805: aload         21
807: invokestatic  #15
810: aload         22
812: invokestatic  #15
815: aload         23
817: invokestatic  #15
820: new           #16
823: dup
824: invokespecial #17
827: ldc           #18
829: invokevirtual #19
832: aload         24
834: invokevirtual #19
837: ldc           #184
839: invokevirtual #19
842: invokevirtual #22
845: aload         24
847: ldc           #58
849: invokestatic  #68
852: aload         25
854: invokestatic  #15
857: new           #16
860: dup
861: invokespecial #17
864: ldc           #18
866: invokevirtual #19
869: aload         26
871: invokevirtual #19
874: ldc           #111
876: invokevirtual #19
879: invokevirtual #22
882: aload         26
884: ldc           #65
886: invokestatic  #68
889: aload         27
891: invokestatic  #15
894: aload         28
896: invokestatic  #15
899: aload         29
901: invokestatic  #15
904: aload         30
906: invokestatic  #15
909: new           #16
912: dup
913: invokespecial #17
916: ldc           #18
918: invokevirtual #19
921: aload         31
923: invokevirtual #19
926: ldc           #128
928: invokevirtual #19
931: invokevirtual #22
934: aload         31
936: ldc           #43
938: invokestatic  #68
941: aload         32
943: invokestatic  #15
946: aload         33
948: invokestatic  #15
951: aload         34
953: invokestatic  #15
956: aload         35
958: invokestatic  #15
961: aload         36
963: invokestatic  #15
966: new           #16
969: dup
970: invokespecial #17
973: ldc           #18
975: invokevirtual #19
978: iload         37
980: invokevirtual #20
983: ldc           #21
985: invokevirtual #19
988: iconst_1
989: invokevirtual #20
992: ldc           #18
994: invokevirtual #19
997: invokevirtual #22
1000: iload         37
1002: iconst_1
1003: if_icmpne     1010
1006: iconst_1
1007: goto          1011
1010: iconst_0
1011: invokestatic  #23
1014: aload         38
1016: invokestatic  #15
1019: aload         39
1021: invokestatic  #15
1024: aload         40
1026: invokestatic  #15
1029: new           #16
1032: dup
1033: invokespecial #17
1036: ldc           #18
1038: invokevirtual #19
1041: iload         41
1043: invokevirtual #20
1046: ldc           #21
1048: invokevirtual #19
1051: iconst_0
1052: invokevirtual #20
1055: ldc           #18
1057: invokevirtual #19
1060: invokevirtual #22
1063: iload         41
1065: ifne          1072
1068: iconst_1
1069: goto          1073
1072: iconst_0
1073: invokestatic  #23
1076: aload         42
1078: invokestatic  #15
1081: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test229
Start line: 11922
End line: 11953
Method source code: 
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str10 = org.jsoup.Jsoup.clean(":lt(32)", whitelist9);
        org.jsoup.safety.Whitelist whitelist14 = whitelist9.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray21 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist22 = whitelist9.addTags(strArray21);
        org.jsoup.safety.Whitelist whitelist23 = whitelist5.addProtocols(":matchesOwn(null", "hi!", strArray21);
        java.lang.String[] strArray32 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean33 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray32);
        org.jsoup.safety.Whitelist whitelist34 = whitelist23.addProtocols("\n<!--hi!-->", "#document", strArray32);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray32);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray32);
        boolean boolean37 = org.jsoup.helper.StringUtil.in("[hi!$=hi!]", strArray32);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + ":lt(32)" + "'", str10, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #777
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: invokestatic  #118
44: astore        4
46: ldc           #43
48: aload         4
50: invokestatic  #81
53: astore        5
55: aload         4
57: ldc           #43
59: ldc           #12
61: ldc           #32
63: invokevirtual #11
66: astore        6
68: bipush        6
70: anewarray     #119
73: dup
74: iconst_0
75: ldc           #109
77: aastore
78: dup
79: iconst_1
80: ldc           #10
82: aastore
83: dup
84: iconst_2
85: ldc           #13
87: aastore
88: dup
89: iconst_3
90: ldc           #50
92: aastore
93: dup
94: iconst_4
95: ldc           #12
97: aastore
98: dup
99: iconst_5
100: ldc           #120
102: aastore
103: astore        7
105: aload         4
107: aload         7
109: invokevirtual #121
112: astore        8
114: aload_3
115: ldc           #38
117: ldc           #12
119: aload         7
121: invokevirtual #122
124: astore        9
126: iconst_5
127: anewarray     #119
130: dup
131: iconst_0
132: ldc           #13
134: aastore
135: dup
136: iconst_1
137: ldc           #32
139: aastore
140: dup
141: iconst_2
142: ldc           #10
144: aastore
145: dup
146: iconst_3
147: ldc           #43
149: aastore
150: dup
151: iconst_4
152: ldc           #58
154: aastore
155: astore        10
157: ldc           #10
159: aload         10
161: invokestatic  #123
164: istore        11
166: aload         9
168: ldc           #84
170: ldc           #13
172: aload         10
174: invokevirtual #122
177: astore        12
179: aload         10
181: checkcast     #124
184: invokestatic  #125
187: aload         10
189: checkcast     #124
192: invokestatic  #125
195: ldc_w         #615
198: aload         10
200: invokestatic  #123
203: istore        13
205: aload_1
206: invokestatic  #15
209: aload_2
210: invokestatic  #15
213: aload_3
214: invokestatic  #15
217: aload         4
219: invokestatic  #15
222: new           #16
225: dup
226: invokespecial #17
229: ldc           #18
231: invokevirtual #19
234: aload         5
236: invokevirtual #19
239: ldc           #128
241: invokevirtual #19
244: invokevirtual #22
247: aload         5
249: ldc           #43
251: invokestatic  #68
254: aload         6
256: invokestatic  #15
259: aload         7
261: invokestatic  #15
264: aload         8
266: invokestatic  #15
269: aload         9
271: invokestatic  #15
274: aload         10
276: invokestatic  #15
279: new           #16
282: dup
283: invokespecial #17
286: ldc           #18
288: invokevirtual #19
291: iload         11
293: invokevirtual #20
296: ldc           #21
298: invokevirtual #19
301: iconst_1
302: invokevirtual #20
305: ldc           #18
307: invokevirtual #19
310: invokevirtual #22
313: iload         11
315: iconst_1
316: if_icmpne     323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #23
327: aload         12
329: invokestatic  #15
332: new           #16
335: dup
336: invokespecial #17
339: ldc           #18
341: invokevirtual #19
344: iload         13
346: invokevirtual #20
349: ldc           #21
351: invokevirtual #19
354: iconst_0
355: invokevirtual #20
358: ldc           #18
360: invokevirtual #19
363: invokevirtual #22
366: iload         13
368: ifne          375
371: iconst_1
372: goto          376
375: iconst_0
376: invokestatic  #23
379: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test230
Start line: 11956
End line: 12034
Method source code: 
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        java.lang.String[] strArray13 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean14 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist15 = whitelist4.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist17 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist23 = whitelist17.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = org.jsoup.Jsoup.clean("\nhi!", whitelist23);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str31 = org.jsoup.Jsoup.clean(":lt(32)", whitelist30);
        boolean boolean33 = whitelist30.isSafeTag("");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList39 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document37, "hi!");
        org.jsoup.nodes.Element element40 = document37.empty();
        org.jsoup.nodes.Element element42 = document37.removeClass("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = outputSettings53.prettyPrint(false);
        org.jsoup.nodes.Document document56 = document37.outputSettings(outputSettings55);
        java.lang.String str57 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist30, outputSettings55);
        org.jsoup.safety.Whitelist whitelist59 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist61 = whitelist59.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist63 = whitelist61.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist67 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str68 = org.jsoup.Jsoup.clean(":lt(32)", whitelist67);
        org.jsoup.safety.Whitelist whitelist72 = whitelist67.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray79 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist80 = whitelist67.addTags(strArray79);
        org.jsoup.safety.Whitelist whitelist81 = whitelist63.addProtocols(":matchesOwn(null", "hi!", strArray79);
        org.jsoup.safety.Whitelist whitelist82 = whitelist30.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray79);
        org.jsoup.safety.Whitelist whitelist83 = whitelist23.addProtocols("#doctype", "[]", strArray79);
        org.jsoup.safety.Whitelist whitelist84 = whitelist4.addTags(strArray79);
        org.jsoup.safety.Cleaner cleaner85 = new org.jsoup.safety.Cleaner(whitelist4);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":lt(32)" + "'", str31, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(outputSettings55);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[:lt(32)]" + "'", str57, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ":lt(32)" + "'", str68, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(whitelist84);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #778
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: invokestatic  #8
96: astore        7
98: aload         7
100: iconst_1
101: invokevirtual #9
104: astore        8
106: aload         7
108: ldc           #10
110: ldc           #10
112: ldc           #10
114: invokevirtual #11
117: astore        9
119: ldc           #98
121: aload         9
123: invokestatic  #81
126: astore        10
128: invokestatic  #118
131: astore        11
133: ldc           #43
135: aload         11
137: invokestatic  #81
140: astore        12
142: aload         11
144: ldc           #25
146: invokevirtual #83
149: istore        13
151: ldc           #25
153: ldc           #12
155: invokestatic  #26
158: astore        14
160: ldc           #12
162: aload         14
164: ldc           #12
166: invokestatic  #27
169: astore        15
171: aload         14
173: invokevirtual #103
176: astore        16
178: aload         14
180: ldc           #12
182: invokevirtual #59
185: astore        17
187: ldc           #25
189: ldc           #12
191: invokestatic  #26
194: astore        18
196: ldc           #12
198: aload         18
200: ldc           #12
202: invokestatic  #27
205: astore        19
207: aload         18
209: ldc           #12
211: invokevirtual #28
214: astore        20
216: aload         18
218: ldc           #25
220: invokevirtual #29
223: astore        21
225: aload         18
227: invokevirtual #30
230: astore        22
232: aload         22
234: iconst_0
235: invokevirtual #31
238: astore        23
240: aload         14
242: aload         23
244: invokevirtual #175
247: astore        24
249: ldc           #58
251: ldc           #126
253: aload         11
255: aload         23
257: invokestatic  #33
260: astore        25
262: invokestatic  #8
265: astore        26
267: aload         26
269: iconst_1
270: invokevirtual #9
273: astore        27
275: aload         27
277: iconst_0
278: invokevirtual #9
281: astore        28
283: invokestatic  #118
286: astore        29
288: ldc           #43
290: aload         29
292: invokestatic  #81
295: astore        30
297: aload         29
299: ldc           #43
301: ldc           #12
303: ldc           #32
305: invokevirtual #11
308: astore        31
310: bipush        6
312: anewarray     #119
315: dup
316: iconst_0
317: ldc           #109
319: aastore
320: dup
321: iconst_1
322: ldc           #10
324: aastore
325: dup
326: iconst_2
327: ldc           #13
329: aastore
330: dup
331: iconst_3
332: ldc           #50
334: aastore
335: dup
336: iconst_4
337: ldc           #12
339: aastore
340: dup
341: iconst_5
342: ldc           #120
344: aastore
345: astore        32
347: aload         29
349: aload         32
351: invokevirtual #121
354: astore        33
356: aload         28
358: ldc           #38
360: ldc           #12
362: aload         32
364: invokevirtual #122
367: astore        34
369: aload         11
371: ldc           #109
373: aload         32
375: invokevirtual #127
378: astore        35
380: aload         9
382: ldc           #187
384: ldc           #159
386: aload         32
388: invokevirtual #122
391: astore        36
393: aload_3
394: aload         32
396: invokevirtual #121
399: astore        37
401: new           #40
404: dup
405: aload_3
406: invokespecial #41
409: astore        38
411: aload_1
412: invokestatic  #15
415: aload_2
416: invokestatic  #15
419: aload_3
420: invokestatic  #15
423: aload         4
425: invokestatic  #15
428: new           #16
431: dup
432: invokespecial #17
435: ldc           #18
437: invokevirtual #19
440: iload         5
442: invokevirtual #20
445: ldc           #21
447: invokevirtual #19
450: iconst_1
451: invokevirtual #20
454: ldc           #18
456: invokevirtual #19
459: invokevirtual #22
462: iload         5
464: iconst_1
465: if_icmpne     472
468: iconst_1
469: goto          473
472: iconst_0
473: invokestatic  #23
476: aload         6
478: invokestatic  #15
481: aload         7
483: invokestatic  #15
486: aload         8
488: invokestatic  #15
491: aload         9
493: invokestatic  #15
496: new           #16
499: dup
500: invokespecial #17
503: ldc           #18
505: invokevirtual #19
508: aload         10
510: invokevirtual #19
513: ldc           #211
515: invokevirtual #19
518: invokevirtual #22
521: aload         10
523: ldc           #12
525: invokestatic  #68
528: aload         11
530: invokestatic  #15
533: new           #16
536: dup
537: invokespecial #17
540: ldc           #18
542: invokevirtual #19
545: aload         12
547: invokevirtual #19
550: ldc           #128
552: invokevirtual #19
555: invokevirtual #22
558: aload         12
560: ldc           #43
562: invokestatic  #68
565: new           #16
568: dup
569: invokespecial #17
572: ldc           #18
574: invokevirtual #19
577: iload         13
579: invokevirtual #20
582: ldc           #21
584: invokevirtual #19
587: iconst_0
588: invokevirtual #20
591: ldc           #18
593: invokevirtual #19
596: invokevirtual #22
599: iload         13
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #23
612: aload         14
614: invokestatic  #15
617: aload         15
619: invokestatic  #15
622: aload         16
624: invokestatic  #15
627: aload         17
629: invokestatic  #15
632: aload         18
634: invokestatic  #15
637: aload         19
639: invokestatic  #15
642: aload         20
644: invokestatic  #15
647: aload         21
649: invokestatic  #15
652: aload         22
654: invokestatic  #15
657: aload         23
659: invokestatic  #15
662: aload         24
664: invokestatic  #15
667: new           #16
670: dup
671: invokespecial #17
674: ldc           #18
676: invokevirtual #19
679: aload         25
681: invokevirtual #19
684: ldc           #184
686: invokevirtual #19
689: invokevirtual #22
692: aload         25
694: ldc           #58
696: invokestatic  #68
699: aload         26
701: invokestatic  #15
704: aload         27
706: invokestatic  #15
709: aload         28
711: invokestatic  #15
714: aload         29
716: invokestatic  #15
719: new           #16
722: dup
723: invokespecial #17
726: ldc           #18
728: invokevirtual #19
731: aload         30
733: invokevirtual #19
736: ldc           #128
738: invokevirtual #19
741: invokevirtual #22
744: aload         30
746: ldc           #43
748: invokestatic  #68
751: aload         31
753: invokestatic  #15
756: aload         32
758: invokestatic  #15
761: aload         33
763: invokestatic  #15
766: aload         34
768: invokestatic  #15
771: aload         35
773: invokestatic  #15
776: aload         36
778: invokestatic  #15
781: aload         37
783: invokestatic  #15
786: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test231
Start line: 12037
End line: 12083
Method source code: 
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist2.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist12 = whitelist2.addEnforcedAttribute("hi!", "#document", "hi!");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parseBodyFragmentRelaxed("[^hi!]", "[^[^hi!]]");
        org.jsoup.nodes.Document.OutputSettings outputSettings16 = document15.outputSettings();
        java.lang.String str17 = org.jsoup.Jsoup.clean("", "[!=hi!]", whitelist12, outputSettings16);
        org.jsoup.safety.Whitelist whitelist20 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist22 = whitelist20.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist24 = whitelist22.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist28 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str29 = org.jsoup.Jsoup.clean(":lt(32)", whitelist28);
        org.jsoup.safety.Whitelist whitelist33 = whitelist28.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray40 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist41 = whitelist28.addTags(strArray40);
        org.jsoup.safety.Whitelist whitelist42 = whitelist24.addProtocols(":matchesOwn(null", "hi!", strArray40);
        java.lang.String[] strArray51 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean52 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray51);
        org.jsoup.safety.Whitelist whitelist53 = whitelist42.addProtocols("\n<!--hi!-->", "#document", strArray51);
        boolean boolean54 = org.jsoup.helper.StringUtil.in(":eq(1)", strArray51);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray51, "<hi!>\n [^hi!]\n</hi!>");
        org.jsoup.safety.Whitelist whitelist57 = whitelist12.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray51);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(outputSettings16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + ":lt(32)" + "'", str29, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(whitelist57);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #779
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: ldc           #50
60: ldc_w         #439
63: invokestatic  #780
66: astore        5
68: aload         5
70: invokevirtual #30
73: astore        6
75: ldc           #25
77: ldc           #241
79: aload         4
81: aload         6
83: invokestatic  #33
86: astore        7
88: invokestatic  #8
91: astore        8
93: aload         8
95: iconst_1
96: invokevirtual #9
99: astore        9
101: aload         9
103: iconst_0
104: invokevirtual #9
107: astore        10
109: invokestatic  #118
112: astore        11
114: ldc           #43
116: aload         11
118: invokestatic  #81
121: astore        12
123: aload         11
125: ldc           #43
127: ldc           #12
129: ldc           #32
131: invokevirtual #11
134: astore        13
136: bipush        6
138: anewarray     #119
141: dup
142: iconst_0
143: ldc           #109
145: aastore
146: dup
147: iconst_1
148: ldc           #10
150: aastore
151: dup
152: iconst_2
153: ldc           #13
155: aastore
156: dup
157: iconst_3
158: ldc           #50
160: aastore
161: dup
162: iconst_4
163: ldc           #12
165: aastore
166: dup
167: iconst_5
168: ldc           #120
170: aastore
171: astore        14
173: aload         11
175: aload         14
177: invokevirtual #121
180: astore        15
182: aload         10
184: ldc           #38
186: ldc           #12
188: aload         14
190: invokevirtual #122
193: astore        16
195: iconst_5
196: anewarray     #119
199: dup
200: iconst_0
201: ldc           #13
203: aastore
204: dup
205: iconst_1
206: ldc           #32
208: aastore
209: dup
210: iconst_2
211: ldc           #10
213: aastore
214: dup
215: iconst_3
216: ldc           #43
218: aastore
219: dup
220: iconst_4
221: ldc           #58
223: aastore
224: astore        17
226: ldc           #10
228: aload         17
230: invokestatic  #123
233: istore        18
235: aload         16
237: ldc           #84
239: ldc           #13
241: aload         17
243: invokevirtual #122
246: astore        19
248: ldc_w         #279
251: aload         17
253: invokestatic  #123
256: istore        20
258: aload         17
260: checkcast     #124
263: ldc           #54
265: invokestatic  #245
268: aload         4
270: ldc           #109
272: aload         17
274: invokevirtual #127
277: astore        21
279: aload_1
280: invokestatic  #15
283: aload_2
284: invokestatic  #15
287: aload_3
288: invokestatic  #15
291: aload         4
293: invokestatic  #15
296: aload         5
298: invokestatic  #15
301: aload         6
303: invokestatic  #15
306: new           #16
309: dup
310: invokespecial #17
313: ldc           #18
315: invokevirtual #19
318: aload         7
320: invokevirtual #19
323: ldc           #67
325: invokevirtual #19
328: invokevirtual #22
331: aload         7
333: ldc           #25
335: invokestatic  #68
338: aload         8
340: invokestatic  #15
343: aload         9
345: invokestatic  #15
348: aload         10
350: invokestatic  #15
353: aload         11
355: invokestatic  #15
358: new           #16
361: dup
362: invokespecial #17
365: ldc           #18
367: invokevirtual #19
370: aload         12
372: invokevirtual #19
375: ldc           #128
377: invokevirtual #19
380: invokevirtual #22
383: aload         12
385: ldc           #43
387: invokestatic  #68
390: aload         13
392: invokestatic  #15
395: aload         14
397: invokestatic  #15
400: aload         15
402: invokestatic  #15
405: aload         16
407: invokestatic  #15
410: aload         17
412: invokestatic  #15
415: new           #16
418: dup
419: invokespecial #17
422: ldc           #18
424: invokevirtual #19
427: iload         18
429: invokevirtual #20
432: ldc           #21
434: invokevirtual #19
437: iconst_1
438: invokevirtual #20
441: ldc           #18
443: invokevirtual #19
446: invokevirtual #22
449: iload         18
451: iconst_1
452: if_icmpne     459
455: iconst_1
456: goto          460
459: iconst_0
460: invokestatic  #23
463: aload         19
465: invokestatic  #15
468: new           #16
471: dup
472: invokespecial #17
475: ldc           #18
477: invokevirtual #19
480: iload         20
482: invokevirtual #20
485: ldc           #21
487: invokevirtual #19
490: iconst_0
491: invokevirtual #20
494: ldc           #18
496: invokevirtual #19
499: invokevirtual #22
502: iload         20
504: ifne          511
507: iconst_1
508: goto          512
511: iconst_0
512: invokestatic  #23
515: aload         21
517: invokestatic  #15
520: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test232
Start line: 12086
End line: 12143
Method source code: 
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.jsoup.select.Evaluator.Tag tag1 = new org.jsoup.select.Evaluator.Tag("[^hi!]");
        java.lang.String str2 = tag1.toString();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        java.lang.String str13 = element12.toString();
        boolean boolean15 = element12.hasAttr("");
        element12.setBaseUri("[hi!$=   ]");
        org.jsoup.nodes.Element element19 = element12.html(":lt(1)");
        org.jsoup.safety.Whitelist whitelist20 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist22 = whitelist20.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner23 = new org.jsoup.safety.Cleaner(whitelist22);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining26 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document28 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        boolean boolean40 = attributeWithValueContaining26.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document32);
        org.jsoup.nodes.Document document41 = cleaner23.clean(document32);
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str44 = document43.toString();
        java.lang.String str45 = document43.baseUri();
        org.jsoup.nodes.Document document46 = cleaner23.clean(document43);
        org.jsoup.nodes.Document.QuirksMode quirksMode47 = document46.quirksMode();
        boolean boolean48 = tag1.matches(element19, (org.jsoup.nodes.Element) document46);
        org.jsoup.nodes.Element element50 = document46.html(" text=&quot;hi!&quot; #document=&quot;#document&quot;");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[^hi!]" + "'", str2, "[^hi!]");
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str13, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str44, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertTrue("'" + quirksMode47 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode47.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(element50);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #781
20: aastore
21: invokevirtual #7
24: pop
25: new           #360
28: dup
29: ldc           #50
31: invokespecial #361
34: astore_1
35: aload_1
36: invokevirtual #362
39: astore_2
40: ldc           #25
42: ldc           #12
44: invokestatic  #26
47: astore_3
48: ldc           #12
50: aload_3
51: ldc           #12
53: invokestatic  #27
56: astore        4
58: aload_3
59: ldc           #12
61: invokevirtual #28
64: astore        5
66: aload_3
67: ldc           #25
69: invokevirtual #29
72: astore        6
74: aload         6
76: invokevirtual #363
79: astore        7
81: aload         6
83: ldc           #25
85: invokevirtual #364
88: istore        8
90: aload         6
92: ldc           #65
94: invokevirtual #365
97: aload         6
99: ldc_w         #366
102: invokevirtual #367
105: astore        9
107: invokestatic  #8
110: astore        10
112: aload         10
114: iconst_1
115: invokevirtual #9
118: astore        11
120: new           #40
123: dup
124: aload         11
126: invokespecial #41
129: astore        12
131: new           #42
134: dup
135: ldc           #43
137: ldc           #32
139: invokespecial #44
142: astore        13
144: ldc           #12
146: invokestatic  #45
149: astore        14
151: ldc           #25
153: ldc           #12
155: invokestatic  #26
158: astore        15
160: ldc           #12
162: aload         15
164: ldc           #12
166: invokestatic  #27
169: astore        16
171: aload         15
173: ldc           #12
175: invokevirtual #28
178: astore        17
180: aload         15
182: ldc           #25
184: invokevirtual #29
187: astore        18
189: aload         15
191: invokevirtual #30
194: astore        19
196: aload         13
198: aload         14
200: aload         15
202: invokevirtual #46
205: istore        20
207: aload         12
209: aload         15
211: invokevirtual #47
214: astore        21
216: ldc           #10
218: invokestatic  #193
221: astore        22
223: aload         22
225: invokevirtual #72
228: astore        23
230: aload         22
232: invokevirtual #194
235: astore        24
237: aload         12
239: aload         22
241: invokevirtual #47
244: astore        25
246: aload         25
248: invokevirtual #222
251: astore        26
253: aload_1
254: aload         9
256: aload         25
258: invokevirtual #368
261: istore        27
263: aload         25
265: ldc_w         #782
268: invokevirtual #115
271: astore        28
273: new           #16
276: dup
277: invokespecial #17
280: ldc           #18
282: invokevirtual #19
285: aload_2
286: invokevirtual #19
289: ldc           #112
291: invokevirtual #19
294: invokevirtual #22
297: aload_2
298: ldc           #50
300: invokestatic  #68
303: aload_3
304: invokestatic  #15
307: aload         4
309: invokestatic  #15
312: aload         5
314: invokestatic  #15
317: aload         6
319: invokestatic  #15
322: new           #16
325: dup
326: invokespecial #17
329: ldc           #18
331: invokevirtual #19
334: aload         7
336: invokevirtual #19
339: ldc           #78
341: invokevirtual #19
344: invokevirtual #22
347: aload         7
349: ldc           #10
351: invokestatic  #68
354: new           #16
357: dup
358: invokespecial #17
361: ldc           #18
363: invokevirtual #19
366: iload         8
368: invokevirtual #20
371: ldc           #21
373: invokevirtual #19
376: iconst_0
377: invokevirtual #20
380: ldc           #18
382: invokevirtual #19
385: invokevirtual #22
388: iload         8
390: ifne          397
393: iconst_1
394: goto          398
397: iconst_0
398: invokestatic  #23
401: aload         9
403: invokestatic  #15
406: aload         10
408: invokestatic  #15
411: aload         11
413: invokestatic  #15
416: aload         14
418: invokestatic  #15
421: aload         15
423: invokestatic  #15
426: aload         16
428: invokestatic  #15
431: aload         17
433: invokestatic  #15
436: aload         18
438: invokestatic  #15
441: aload         19
443: invokestatic  #15
446: new           #16
449: dup
450: invokespecial #17
453: ldc           #18
455: invokevirtual #19
458: iload         20
460: invokevirtual #20
463: ldc           #21
465: invokevirtual #19
468: iconst_0
469: invokevirtual #20
472: ldc           #18
474: invokevirtual #19
477: invokevirtual #22
480: iload         20
482: ifne          489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #23
493: aload         21
495: invokestatic  #15
498: aload         22
500: invokestatic  #15
503: new           #16
506: dup
507: invokespecial #17
510: ldc           #18
512: invokevirtual #19
515: aload         23
517: invokevirtual #19
520: ldc           #197
522: invokevirtual #19
525: invokevirtual #22
528: aload         23
530: ldc           #151
532: invokestatic  #68
535: new           #16
538: dup
539: invokespecial #17
542: ldc           #18
544: invokevirtual #19
547: aload         24
549: invokevirtual #19
552: ldc           #67
554: invokevirtual #19
557: invokevirtual #22
560: aload         24
562: ldc           #25
564: invokestatic  #68
567: aload         25
569: invokestatic  #15
572: new           #16
575: dup
576: invokespecial #17
579: ldc           #18
581: invokevirtual #19
584: aload         26
586: invokevirtual #223
589: ldc           #21
591: invokevirtual #19
594: getstatic     #224
597: invokevirtual #223
600: ldc           #18
602: invokevirtual #19
605: invokevirtual #22
608: aload         26
610: getstatic     #224
613: invokevirtual #225
616: invokestatic  #23
619: new           #16
622: dup
623: invokespecial #17
626: ldc           #18
628: invokevirtual #19
631: iload         27
633: invokevirtual #20
636: ldc           #21
638: invokevirtual #19
641: iconst_0
642: invokevirtual #20
645: ldc           #18
647: invokevirtual #19
650: invokevirtual #22
653: iload         27
655: ifne          662
658: iconst_1
659: goto          663
662: iconst_0
663: invokestatic  #23
666: aload         28
668: invokestatic  #15
671: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test233
Start line: 12146
End line: 12248
Method source code: 
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        java.util.regex.Pattern pattern23 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching24 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("\nhi!", pattern23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element31 = document28.empty();
        org.jsoup.nodes.Element element33 = document28.removeClass("hi!");
        java.lang.String str34 = document28.id();
        org.jsoup.nodes.Node node35 = document28.previousSibling();
        org.jsoup.nodes.Node node36 = document28.clone();
        java.lang.String str37 = document28.id();
        org.jsoup.safety.Whitelist whitelist38 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist40 = whitelist38.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner41 = new org.jsoup.safety.Cleaner(whitelist40);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining44 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document46 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList52 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document50, "hi!");
        org.jsoup.nodes.Element element54 = document50.tagName("hi!");
        org.jsoup.nodes.Element element56 = document50.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings57 = document50.outputSettings();
        boolean boolean58 = attributeWithValueContaining44.matches((org.jsoup.nodes.Element) document46, (org.jsoup.nodes.Element) document50);
        org.jsoup.nodes.Document document59 = cleaner41.clean(document50);
        org.jsoup.helper.Validate.notNull((java.lang.Object) document50, "");
        boolean boolean62 = attributeWithValueMatching24.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document50);
        boolean boolean63 = cleaner3.isValid(document28);
        java.util.regex.Pattern pattern65 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching66 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern65);
        org.jsoup.nodes.Document document70 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList72 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document70, "hi!");
        org.jsoup.nodes.Element element74 = document70.tagName("hi!");
        org.jsoup.nodes.Element element76 = document70.append("");
        java.lang.String str77 = document70.toString();
        org.jsoup.nodes.Element element79 = document70.prependElement("\nhi!");
        org.jsoup.select.Elements elements81 = document70.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document85 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList87 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document85, "hi!");
        org.jsoup.nodes.Element element89 = document85.tagName("hi!");
        org.jsoup.nodes.Element element91 = document85.append("");
        boolean boolean92 = attributeWithValueMatching66.matches((org.jsoup.nodes.Element) document70, (org.jsoup.nodes.Element) document85);
        org.jsoup.nodes.Document document93 = document85.normalise();
        org.jsoup.nodes.Document.OutputSettings outputSettings94 = document93.outputSettings();
        org.jsoup.nodes.Document document95 = cleaner3.clean(document93);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(outputSettings57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str77, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(elements81);
        org.junit.Assert.assertNotNull(document85);
        org.junit.Assert.assertNotNull(nodeList87);
        org.junit.Assert.assertNotNull(element89);
        org.junit.Assert.assertNotNull(element91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(document93);
        org.junit.Assert.assertNotNull(outputSettings94);
        org.junit.Assert.assertNotNull(document95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #783
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: aconst_null
129: astore        13
131: new           #96
134: dup
135: ldc           #98
137: aload         13
139: invokespecial #97
142: astore        14
144: ldc           #25
146: ldc           #12
148: invokestatic  #26
151: astore        15
153: ldc           #12
155: aload         15
157: ldc           #12
159: invokestatic  #27
162: astore        16
164: aload         15
166: invokevirtual #103
169: astore        17
171: aload         15
173: ldc           #12
175: invokevirtual #59
178: astore        18
180: aload         15
182: invokevirtual #73
185: astore        19
187: aload         15
189: invokevirtual #349
192: astore        20
194: aload         15
196: invokevirtual #154
199: astore        21
201: aload         15
203: invokevirtual #73
206: astore        22
208: invokestatic  #8
211: astore        23
213: aload         23
215: iconst_1
216: invokevirtual #9
219: astore        24
221: new           #40
224: dup
225: aload         24
227: invokespecial #41
230: astore        25
232: new           #42
235: dup
236: ldc           #43
238: ldc           #32
240: invokespecial #44
243: astore        26
245: ldc           #12
247: invokestatic  #45
250: astore        27
252: ldc           #25
254: ldc           #12
256: invokestatic  #26
259: astore        28
261: ldc           #12
263: aload         28
265: ldc           #12
267: invokestatic  #27
270: astore        29
272: aload         28
274: ldc           #12
276: invokevirtual #28
279: astore        30
281: aload         28
283: ldc           #25
285: invokevirtual #29
288: astore        31
290: aload         28
292: invokevirtual #30
295: astore        32
297: aload         26
299: aload         27
301: aload         28
303: invokevirtual #46
306: istore        33
308: aload         25
310: aload         28
312: invokevirtual #47
315: astore        34
317: aload         28
319: ldc           #25
321: invokestatic  #181
324: aload         14
326: aload         15
328: aload         28
330: invokevirtual #101
333: istore        35
335: aload_3
336: aload         15
338: invokevirtual #155
341: istore        36
343: aconst_null
344: astore        37
346: new           #96
349: dup
350: ldc           #25
352: aload         37
354: invokespecial #97
357: astore        38
359: ldc           #25
361: ldc           #12
363: invokestatic  #26
366: astore        39
368: ldc           #12
370: aload         39
372: ldc           #12
374: invokestatic  #27
377: astore        40
379: aload         39
381: ldc           #12
383: invokevirtual #28
386: astore        41
388: aload         39
390: ldc           #25
392: invokevirtual #29
395: astore        42
397: aload         39
399: invokevirtual #72
402: astore        43
404: aload         39
406: ldc           #98
408: invokevirtual #99
411: astore        44
413: aload         39
415: ldc           #25
417: invokevirtual #100
420: astore        45
422: ldc           #25
424: ldc           #12
426: invokestatic  #26
429: astore        46
431: ldc           #12
433: aload         46
435: ldc           #12
437: invokestatic  #27
440: astore        47
442: aload         46
444: ldc           #12
446: invokevirtual #28
449: astore        48
451: aload         46
453: ldc           #25
455: invokevirtual #29
458: astore        49
460: aload         38
462: aload         39
464: aload         46
466: invokevirtual #101
469: istore        50
471: aload         46
473: invokevirtual #102
476: astore        51
478: aload         51
480: invokevirtual #30
483: astore        52
485: aload_3
486: aload         51
488: invokevirtual #47
491: astore        53
493: aload_1
494: invokestatic  #15
497: aload_2
498: invokestatic  #15
501: aload         5
503: invokestatic  #15
506: aload         6
508: invokestatic  #15
511: aload         7
513: invokestatic  #15
516: aload         8
518: invokestatic  #15
521: aload         9
523: invokestatic  #15
526: aload         10
528: invokestatic  #15
531: new           #16
534: dup
535: invokespecial #17
538: ldc           #18
540: invokevirtual #19
543: iload         11
545: invokevirtual #20
548: ldc           #21
550: invokevirtual #19
553: iconst_0
554: invokevirtual #20
557: ldc           #18
559: invokevirtual #19
562: invokevirtual #22
565: iload         11
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #23
578: aload         12
580: invokestatic  #15
583: aload         15
585: invokestatic  #15
588: aload         16
590: invokestatic  #15
593: aload         17
595: invokestatic  #15
598: aload         18
600: invokestatic  #15
603: new           #16
606: dup
607: invokespecial #17
610: ldc           #18
612: invokevirtual #19
615: aload         19
617: invokevirtual #19
620: ldc           #67
622: invokevirtual #19
625: invokevirtual #22
628: aload         19
630: ldc           #25
632: invokestatic  #68
635: aload         20
637: invokestatic  #79
640: aload         21
642: invokestatic  #15
645: new           #16
648: dup
649: invokespecial #17
652: ldc           #18
654: invokevirtual #19
657: aload         22
659: invokevirtual #19
662: ldc           #67
664: invokevirtual #19
667: invokevirtual #22
670: aload         22
672: ldc           #25
674: invokestatic  #68
677: aload         23
679: invokestatic  #15
682: aload         24
684: invokestatic  #15
687: aload         27
689: invokestatic  #15
692: aload         28
694: invokestatic  #15
697: aload         29
699: invokestatic  #15
702: aload         30
704: invokestatic  #15
707: aload         31
709: invokestatic  #15
712: aload         32
714: invokestatic  #15
717: new           #16
720: dup
721: invokespecial #17
724: ldc           #18
726: invokevirtual #19
729: iload         33
731: invokevirtual #20
734: ldc           #21
736: invokevirtual #19
739: iconst_0
740: invokevirtual #20
743: ldc           #18
745: invokevirtual #19
748: invokevirtual #22
751: iload         33
753: ifne          760
756: iconst_1
757: goto          761
760: iconst_0
761: invokestatic  #23
764: aload         34
766: invokestatic  #15
769: new           #16
772: dup
773: invokespecial #17
776: ldc           #18
778: invokevirtual #19
781: iload         35
783: invokevirtual #20
786: ldc           #21
788: invokevirtual #19
791: iconst_0
792: invokevirtual #20
795: ldc           #18
797: invokevirtual #19
800: invokevirtual #22
803: iload         35
805: ifne          812
808: iconst_1
809: goto          813
812: iconst_0
813: invokestatic  #23
816: new           #16
819: dup
820: invokespecial #17
823: ldc           #18
825: invokevirtual #19
828: iload         36
830: invokevirtual #20
833: ldc           #21
835: invokevirtual #19
838: iconst_1
839: invokevirtual #20
842: ldc           #18
844: invokevirtual #19
847: invokevirtual #22
850: iload         36
852: iconst_1
853: if_icmpne     860
856: iconst_1
857: goto          861
860: iconst_0
861: invokestatic  #23
864: aload         39
866: invokestatic  #15
869: aload         40
871: invokestatic  #15
874: aload         41
876: invokestatic  #15
879: aload         42
881: invokestatic  #15
884: new           #16
887: dup
888: invokespecial #17
891: ldc           #18
893: invokevirtual #19
896: aload         43
898: invokevirtual #19
901: ldc           #78
903: invokevirtual #19
906: invokevirtual #22
909: aload         43
911: ldc           #10
913: invokestatic  #68
916: aload         44
918: invokestatic  #15
921: aload         45
923: invokestatic  #15
926: aload         46
928: invokestatic  #15
931: aload         47
933: invokestatic  #15
936: aload         48
938: invokestatic  #15
941: aload         49
943: invokestatic  #15
946: new           #16
949: dup
950: invokespecial #17
953: ldc           #18
955: invokevirtual #19
958: iload         50
960: invokevirtual #20
963: ldc           #21
965: invokevirtual #19
968: iconst_0
969: invokevirtual #20
972: ldc           #18
974: invokevirtual #19
977: invokevirtual #22
980: iload         50
982: ifne          989
985: iconst_1
986: goto          990
989: iconst_0
990: invokestatic  #23
993: aload         51
995: invokestatic  #15
998: aload         52
1000: invokestatic  #15
1003: aload         53
1005: invokestatic  #15
1008: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test234
Start line: 12251
End line: 12326
Method source code: 
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.util.Spliterator<java.lang.Object> objSpliterator24 = objList0.spliterator();
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        java.lang.String str32 = org.jsoup.helper.StringUtil.join((java.util.Collection) nodeList30, "#document");
        boolean boolean33 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList30);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist36 = whitelist34.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner37 = new org.jsoup.safety.Cleaner(whitelist36);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining40 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document42 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        boolean boolean54 = attributeWithValueContaining40.matches((org.jsoup.nodes.Element) document42, (org.jsoup.nodes.Element) document46);
        org.jsoup.nodes.Document document55 = cleaner37.clean(document46);
        boolean boolean56 = objList0.contains((java.lang.Object) document46);
        java.lang.Object obj57 = objList0.element();
        org.jsoup.nodes.Document document61 = org.jsoup.parser.Parser.parseBodyFragment("hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Element element63 = document61.text("");
        java.util.List<org.jsoup.nodes.Node> nodeList65 = org.jsoup.parser.Parser.parseFragment("", element63, "[^[^hi!]]");
        java.util.stream.Stream<org.jsoup.nodes.Node> nodeStream66 = nodeList65.parallelStream();
        boolean boolean67 = objList0.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList65);
        java.lang.Object obj68 = objList0.poll();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSpliterator24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\nhi!" + "'", str32, "\nhi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(nodeList65);
        org.junit.Assert.assertNotNull(nodeStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #784
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #283
138: astore        12
140: ldc           #25
142: ldc           #12
144: invokestatic  #26
147: astore        13
149: ldc           #12
151: aload         13
153: ldc           #12
155: invokestatic  #27
158: astore        14
160: aload         14
162: ldc           #13
164: invokestatic  #284
167: astore        15
169: aload_1
170: aload         14
172: invokevirtual #285
175: istore        16
177: invokestatic  #8
180: astore        17
182: aload         17
184: iconst_1
185: invokevirtual #9
188: astore        18
190: new           #40
193: dup
194: aload         18
196: invokespecial #41
199: astore        19
201: new           #42
204: dup
205: ldc           #43
207: ldc           #32
209: invokespecial #44
212: astore        20
214: ldc           #12
216: invokestatic  #45
219: astore        21
221: ldc           #25
223: ldc           #12
225: invokestatic  #26
228: astore        22
230: ldc           #12
232: aload         22
234: ldc           #12
236: invokestatic  #27
239: astore        23
241: aload         22
243: ldc           #12
245: invokevirtual #28
248: astore        24
250: aload         22
252: ldc           #25
254: invokevirtual #29
257: astore        25
259: aload         22
261: invokevirtual #30
264: astore        26
266: aload         20
268: aload         21
270: aload         22
272: invokevirtual #46
275: istore        27
277: aload         19
279: aload         22
281: invokevirtual #47
284: astore        28
286: aload_1
287: aload         22
289: invokevirtual #286
292: istore        29
294: aload_1
295: invokevirtual #438
298: astore        30
300: ldc           #12
302: ldc           #32
304: invokestatic  #52
307: astore        31
309: aload         31
311: ldc           #25
313: invokevirtual #64
316: astore        32
318: ldc           #25
320: aload         32
322: ldc_w         #439
325: invokestatic  #27
328: astore        33
330: aload         33
332: invokeinterface #440,  1
337: astore        34
339: aload_1
340: aload         33
342: invokevirtual #285
345: istore        35
347: aload_1
348: invokevirtual #402
351: astore        36
353: aload_2
354: invokestatic  #15
357: aload_3
358: invokestatic  #15
361: aload         4
363: invokestatic  #15
366: aload         5
368: invokestatic  #15
371: aload         6
373: invokestatic  #15
376: aload         7
378: invokestatic  #15
381: aload         8
383: invokestatic  #15
386: new           #16
389: dup
390: invokespecial #17
393: ldc           #18
395: invokevirtual #19
398: aload         9
400: invokevirtual #19
403: ldc           #78
405: invokevirtual #19
408: invokevirtual #22
411: aload         9
413: ldc           #10
415: invokestatic  #68
418: aload         10
420: invokestatic  #15
423: aload         10
425: invokestatic  #288
428: ldc_w         #289
431: invokestatic  #290
434: aload         10
436: invokestatic  #291
439: ldc_w         #289
442: invokestatic  #290
445: new           #16
448: dup
449: invokespecial #17
452: ldc           #18
454: invokevirtual #19
457: iload         11
459: invokevirtual #20
462: ldc           #21
464: invokevirtual #19
467: iconst_1
468: invokevirtual #20
471: ldc           #18
473: invokevirtual #19
476: invokevirtual #22
479: iload         11
481: iconst_1
482: if_icmpne     489
485: iconst_1
486: goto          490
489: iconst_0
490: invokestatic  #23
493: aload         12
495: invokestatic  #15
498: aload         13
500: invokestatic  #15
503: aload         14
505: invokestatic  #15
508: new           #16
511: dup
512: invokespecial #17
515: ldc           #18
517: invokevirtual #19
520: aload         15
522: invokevirtual #19
525: ldc_w         #292
528: invokevirtual #19
531: invokevirtual #22
534: aload         15
536: ldc           #98
538: invokestatic  #68
541: new           #16
544: dup
545: invokespecial #17
548: ldc           #18
550: invokevirtual #19
553: iload         16
555: invokevirtual #20
558: ldc           #21
560: invokevirtual #19
563: iconst_0
564: invokevirtual #20
567: ldc           #18
569: invokevirtual #19
572: invokevirtual #22
575: iload         16
577: ifne          584
580: iconst_1
581: goto          585
584: iconst_0
585: invokestatic  #23
588: aload         17
590: invokestatic  #15
593: aload         18
595: invokestatic  #15
598: aload         21
600: invokestatic  #15
603: aload         22
605: invokestatic  #15
608: aload         23
610: invokestatic  #15
613: aload         24
615: invokestatic  #15
618: aload         25
620: invokestatic  #15
623: aload         26
625: invokestatic  #15
628: new           #16
631: dup
632: invokespecial #17
635: ldc           #18
637: invokevirtual #19
640: iload         27
642: invokevirtual #20
645: ldc           #21
647: invokevirtual #19
650: iconst_0
651: invokevirtual #20
654: ldc           #18
656: invokevirtual #19
659: invokevirtual #22
662: iload         27
664: ifne          671
667: iconst_1
668: goto          672
671: iconst_0
672: invokestatic  #23
675: aload         28
677: invokestatic  #15
680: new           #16
683: dup
684: invokespecial #17
687: ldc           #18
689: invokevirtual #19
692: iload         29
694: invokevirtual #20
697: ldc           #21
699: invokevirtual #19
702: iconst_0
703: invokevirtual #20
706: ldc           #18
708: invokevirtual #19
711: invokevirtual #22
714: iload         29
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #23
727: aload         30
729: invokestatic  #15
732: aload         31
734: invokestatic  #15
737: aload         32
739: invokestatic  #15
742: aload         33
744: invokestatic  #15
747: aload         34
749: invokestatic  #15
752: new           #16
755: dup
756: invokespecial #17
759: ldc           #18
761: invokevirtual #19
764: iload         35
766: invokevirtual #20
769: ldc           #21
771: invokevirtual #19
774: iconst_1
775: invokevirtual #20
778: ldc           #18
780: invokevirtual #19
783: invokevirtual #22
786: iload         35
788: iconst_1
789: if_icmpne     796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #23
800: aload         36
802: invokestatic  #15
805: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test235
Start line: 12329
End line: 12402
Method source code: 
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        org.jsoup.nodes.Element element9 = document3.text("[:lt(32)]");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList10 = document3.dataNodes();
        org.jsoup.parser.Tag tag11 = document3.tag();
        boolean boolean12 = tag11.isEmpty();
        boolean boolean13 = tag11.isBlock();
        org.jsoup.parser.Tag tag16 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean17 = tag16.isBlock();
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element24 = document21.empty();
        org.jsoup.nodes.Element element26 = element24.toggleClass("#document");
        org.jsoup.select.Elements elements28 = element26.getElementsByAttributeStarting(":lt(32)");
        org.jsoup.select.Elements elements30 = element26.getElementsByClass("[:lt(32)]");
        boolean boolean31 = tag16.equals((java.lang.Object) elements30);
        boolean boolean32 = tag16.preserveWhitespace();
        org.jsoup.safety.Whitelist whitelist36 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str37 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist36);
        org.jsoup.safety.Whitelist whitelist39 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist41 = whitelist39.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist43 = whitelist41.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist47 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str48 = org.jsoup.Jsoup.clean(":lt(32)", whitelist47);
        org.jsoup.safety.Whitelist whitelist52 = whitelist47.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray59 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist60 = whitelist47.addTags(strArray59);
        org.jsoup.safety.Whitelist whitelist61 = whitelist43.addProtocols(":matchesOwn(null", "hi!", strArray59);
        org.jsoup.safety.Whitelist whitelist62 = whitelist36.addAttributes("[^hi!]", strArray59);
        org.jsoup.safety.Whitelist whitelist66 = whitelist36.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.nodes.Attributes attributes68 = whitelist36.getEnforcedAttributes("");
        org.jsoup.nodes.Element element69 = new org.jsoup.nodes.Element(tag16, " hi!", attributes68);
        org.jsoup.nodes.Attributes attributes70 = attributes68.clone();
        org.jsoup.nodes.Element element71 = new org.jsoup.nodes.Element(tag11, "<html>\n <head></head>\n <body>   \n </body>\n</html>", attributes68);
        boolean boolean72 = tag11.preserveWhitespace();
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(dataNodeList10);
        org.junit.Assert.assertNotNull(tag11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tag16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements28);
        org.junit.Assert.assertNotNull(elements30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!$=   ]" + "'", str37, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ":lt(32)" + "'", str48, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(attributes68);
        org.junit.Assert.assertNotNull(attributes70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #785
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #58
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #348
61: astore        5
63: aload_1
64: invokevirtual #207
67: astore        6
69: aload         6
71: invokevirtual #773
74: istore        7
76: aload         6
78: invokevirtual #425
81: istore        8
83: ldc           #13
85: invokestatic  #424
88: astore        9
90: aload         9
92: invokevirtual #425
95: istore        10
97: ldc           #25
99: ldc           #12
101: invokestatic  #26
104: astore        11
106: ldc           #12
108: aload         11
110: ldc           #12
112: invokestatic  #27
115: astore        12
117: aload         11
119: invokevirtual #103
122: astore        13
124: aload         13
126: ldc           #13
128: invokevirtual #177
131: astore        14
133: aload         14
135: ldc           #43
137: invokevirtual #426
140: astore        15
142: aload         14
144: ldc           #58
146: invokevirtual #427
149: astore        16
151: aload         9
153: aload         16
155: invokevirtual #428
158: istore        17
160: aload         9
162: invokevirtual #429
165: istore        18
167: invokestatic  #8
170: astore        19
172: ldc           #109
174: ldc           #110
176: aload         19
178: invokestatic  #94
181: astore        20
183: invokestatic  #8
186: astore        21
188: aload         21
190: iconst_1
191: invokevirtual #9
194: astore        22
196: aload         22
198: iconst_0
199: invokevirtual #9
202: astore        23
204: invokestatic  #118
207: astore        24
209: ldc           #43
211: aload         24
213: invokestatic  #81
216: astore        25
218: aload         24
220: ldc           #43
222: ldc           #12
224: ldc           #32
226: invokevirtual #11
229: astore        26
231: bipush        6
233: anewarray     #119
236: dup
237: iconst_0
238: ldc           #109
240: aastore
241: dup
242: iconst_1
243: ldc           #10
245: aastore
246: dup
247: iconst_2
248: ldc           #13
250: aastore
251: dup
252: iconst_3
253: ldc           #50
255: aastore
256: dup
257: iconst_4
258: ldc           #12
260: aastore
261: dup
262: iconst_5
263: ldc           #120
265: aastore
266: astore        27
268: aload         24
270: aload         27
272: invokevirtual #121
275: astore        28
277: aload         23
279: ldc           #38
281: ldc           #12
283: aload         27
285: invokevirtual #122
288: astore        29
290: aload         19
292: ldc           #50
294: aload         27
296: invokevirtual #127
299: astore        30
301: aload         19
303: ldc           #126
305: ldc           #109
307: ldc           #120
309: invokevirtual #11
312: astore        31
314: aload         19
316: ldc           #25
318: invokevirtual #150
321: astore        32
323: new           #430
326: dup
327: aload         9
329: ldc           #60
331: aload         32
333: invokespecial #431
336: astore        33
338: aload         32
340: invokevirtual #432
343: astore        34
345: new           #430
348: dup
349: aload         6
351: ldc           #151
353: aload         32
355: invokespecial #431
358: astore        35
360: aload         6
362: invokevirtual #429
365: istore        36
367: aload_1
368: invokestatic  #15
371: aload_2
372: invokestatic  #15
375: aload_3
376: invokestatic  #15
379: aload         4
381: invokestatic  #15
384: aload         5
386: invokestatic  #15
389: aload         6
391: invokestatic  #15
394: new           #16
397: dup
398: invokespecial #17
401: ldc           #18
403: invokevirtual #19
406: iload         7
408: invokevirtual #20
411: ldc           #21
413: invokevirtual #19
416: iconst_0
417: invokevirtual #20
420: ldc           #18
422: invokevirtual #19
425: invokevirtual #22
428: iload         7
430: ifne          437
433: iconst_1
434: goto          438
437: iconst_0
438: invokestatic  #23
441: new           #16
444: dup
445: invokespecial #17
448: ldc           #18
450: invokevirtual #19
453: iload         8
455: invokevirtual #20
458: ldc           #21
460: invokevirtual #19
463: iconst_0
464: invokevirtual #20
467: ldc           #18
469: invokevirtual #19
472: invokevirtual #22
475: iload         8
477: ifne          484
480: iconst_1
481: goto          485
484: iconst_0
485: invokestatic  #23
488: aload         9
490: invokestatic  #15
493: new           #16
496: dup
497: invokespecial #17
500: ldc           #18
502: invokevirtual #19
505: iload         10
507: invokevirtual #20
510: ldc           #21
512: invokevirtual #19
515: iconst_0
516: invokevirtual #20
519: ldc           #18
521: invokevirtual #19
524: invokevirtual #22
527: iload         10
529: ifne          536
532: iconst_1
533: goto          537
536: iconst_0
537: invokestatic  #23
540: aload         11
542: invokestatic  #15
545: aload         12
547: invokestatic  #15
550: aload         13
552: invokestatic  #15
555: aload         14
557: invokestatic  #15
560: aload         15
562: invokestatic  #15
565: aload         16
567: invokestatic  #15
570: new           #16
573: dup
574: invokespecial #17
577: ldc           #18
579: invokevirtual #19
582: iload         17
584: invokevirtual #20
587: ldc           #21
589: invokevirtual #19
592: iconst_0
593: invokevirtual #20
596: ldc           #18
598: invokevirtual #19
601: invokevirtual #22
604: iload         17
606: ifne          613
609: iconst_1
610: goto          614
613: iconst_0
614: invokestatic  #23
617: new           #16
620: dup
621: invokespecial #17
624: ldc           #18
626: invokevirtual #19
629: iload         18
631: invokevirtual #20
634: ldc           #21
636: invokevirtual #19
639: iconst_0
640: invokevirtual #20
643: ldc           #18
645: invokevirtual #19
648: invokevirtual #22
651: iload         18
653: ifne          660
656: iconst_1
657: goto          661
660: iconst_0
661: invokestatic  #23
664: aload         19
666: invokestatic  #15
669: new           #16
672: dup
673: invokespecial #17
676: ldc           #18
678: invokevirtual #19
681: aload         20
683: invokevirtual #19
686: ldc           #111
688: invokevirtual #19
691: invokevirtual #22
694: aload         20
696: ldc           #65
698: invokestatic  #68
701: aload         21
703: invokestatic  #15
706: aload         22
708: invokestatic  #15
711: aload         23
713: invokestatic  #15
716: aload         24
718: invokestatic  #15
721: new           #16
724: dup
725: invokespecial #17
728: ldc           #18
730: invokevirtual #19
733: aload         25
735: invokevirtual #19
738: ldc           #128
740: invokevirtual #19
743: invokevirtual #22
746: aload         25
748: ldc           #43
750: invokestatic  #68
753: aload         26
755: invokestatic  #15
758: aload         27
760: invokestatic  #15
763: aload         28
765: invokestatic  #15
768: aload         29
770: invokestatic  #15
773: aload         30
775: invokestatic  #15
778: aload         31
780: invokestatic  #15
783: aload         32
785: invokestatic  #15
788: aload         34
790: invokestatic  #15
793: new           #16
796: dup
797: invokespecial #17
800: ldc           #18
802: invokevirtual #19
805: iload         36
807: invokevirtual #20
810: ldc           #21
812: invokevirtual #19
815: iconst_0
816: invokevirtual #20
819: ldc           #18
821: invokevirtual #19
824: invokevirtual #22
827: iload         36
829: ifne          836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #23
840: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test236
Start line: 12405
End line: 12466
Method source code: 
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist2.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist12 = whitelist2.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str13 = org.jsoup.Jsoup.clean("#document", "<html>\n <head></head>\n <body></body>\n</html>", whitelist12);
        java.util.regex.Pattern pattern16 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching17 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern16);
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element25 = document21.tagName("hi!");
        org.jsoup.nodes.Element element27 = document21.append("");
        java.lang.String str28 = document21.toString();
        org.jsoup.nodes.Element element30 = document21.prependElement("\nhi!");
        org.jsoup.select.Elements elements32 = document21.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList38 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document36, "hi!");
        org.jsoup.nodes.Element element40 = document36.tagName("hi!");
        org.jsoup.nodes.Element element42 = document36.append("");
        boolean boolean43 = attributeWithValueMatching17.matches((org.jsoup.nodes.Element) document21, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Element element44 = null;
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element48 = document47.body();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = document47.dataset();
        boolean boolean50 = attributeWithValueMatching17.matches(element44, (org.jsoup.nodes.Element) document47);
        org.jsoup.nodes.Document document52 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document55 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        boolean boolean56 = attributeWithValueMatching17.matches((org.jsoup.nodes.Element) document52, (org.jsoup.nodes.Element) document55);
        org.jsoup.nodes.Attribute attribute59 = new org.jsoup.nodes.Attribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", ".\n<!---->");
        java.lang.String str60 = attribute59.getKey();
        boolean boolean61 = whitelist12.isSafeAttribute("[ =hi!]", (org.jsoup.nodes.Element) document55, attribute59);
        org.jsoup.nodes.Element element63 = document55.toggleClass(".body");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#document" + "'", str13, "#document");
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str28, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(nodeList38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ":containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]" + "'", str60, ":containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(element63);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #786
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: ldc           #13
60: ldc           #10
62: aload         4
64: invokestatic  #94
67: astore        5
69: aconst_null
70: astore        6
72: new           #96
75: dup
76: ldc           #25
78: aload         6
80: invokespecial #97
83: astore        7
85: ldc           #25
87: ldc           #12
89: invokestatic  #26
92: astore        8
94: ldc           #12
96: aload         8
98: ldc           #12
100: invokestatic  #27
103: astore        9
105: aload         8
107: ldc           #12
109: invokevirtual #28
112: astore        10
114: aload         8
116: ldc           #25
118: invokevirtual #29
121: astore        11
123: aload         8
125: invokevirtual #72
128: astore        12
130: aload         8
132: ldc           #98
134: invokevirtual #99
137: astore        13
139: aload         8
141: ldc           #25
143: invokevirtual #100
146: astore        14
148: ldc           #25
150: ldc           #12
152: invokestatic  #26
155: astore        15
157: ldc           #12
159: aload         15
161: ldc           #12
163: invokestatic  #27
166: astore        16
168: aload         15
170: ldc           #12
172: invokevirtual #28
175: astore        17
177: aload         15
179: ldc           #25
181: invokevirtual #29
184: astore        18
186: aload         7
188: aload         8
190: aload         15
192: invokevirtual #101
195: istore        19
197: aconst_null
198: astore        20
200: ldc           #25
202: ldc           #12
204: invokestatic  #26
207: astore        21
209: aload         21
211: invokevirtual #166
214: astore        22
216: aload         21
218: invokevirtual #534
221: astore        23
223: aload         7
225: aload         20
227: aload         21
229: invokevirtual #101
232: istore        24
234: ldc           #10
236: invokestatic  #193
239: astore        25
241: ldc           #50
243: ldc           #51
245: invokestatic  #52
248: astore        26
250: aload         7
252: aload         25
254: aload         26
256: invokevirtual #101
259: istore        27
261: new           #263
264: dup
265: ldc           #110
267: ldc           #145
269: invokespecial #264
272: astore        28
274: aload         28
276: invokevirtual #210
279: astore        29
281: aload         4
283: ldc_w         #599
286: aload         26
288: aload         28
290: invokevirtual #169
293: istore        30
295: aload         26
297: ldc_w         #444
300: invokevirtual #199
303: astore        31
305: aload_1
306: invokestatic  #15
309: aload_2
310: invokestatic  #15
313: aload_3
314: invokestatic  #15
317: aload         4
319: invokestatic  #15
322: new           #16
325: dup
326: invokespecial #17
329: ldc           #18
331: invokevirtual #19
334: aload         5
336: invokevirtual #19
339: ldc           #107
341: invokevirtual #19
344: invokevirtual #22
347: aload         5
349: ldc           #13
351: invokestatic  #68
354: aload         8
356: invokestatic  #15
359: aload         9
361: invokestatic  #15
364: aload         10
366: invokestatic  #15
369: aload         11
371: invokestatic  #15
374: new           #16
377: dup
378: invokespecial #17
381: ldc           #18
383: invokevirtual #19
386: aload         12
388: invokevirtual #19
391: ldc           #78
393: invokevirtual #19
396: invokevirtual #22
399: aload         12
401: ldc           #10
403: invokestatic  #68
406: aload         13
408: invokestatic  #15
411: aload         14
413: invokestatic  #15
416: aload         15
418: invokestatic  #15
421: aload         16
423: invokestatic  #15
426: aload         17
428: invokestatic  #15
431: aload         18
433: invokestatic  #15
436: new           #16
439: dup
440: invokespecial #17
443: ldc           #18
445: invokevirtual #19
448: iload         19
450: invokevirtual #20
453: ldc           #21
455: invokevirtual #19
458: iconst_0
459: invokevirtual #20
462: ldc           #18
464: invokevirtual #19
467: invokevirtual #22
470: iload         19
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #23
483: aload         21
485: invokestatic  #15
488: aload         22
490: invokestatic  #15
493: aload         23
495: invokestatic  #15
498: new           #16
501: dup
502: invokespecial #17
505: ldc           #18
507: invokevirtual #19
510: iload         24
512: invokevirtual #20
515: ldc           #21
517: invokevirtual #19
520: iconst_0
521: invokevirtual #20
524: ldc           #18
526: invokevirtual #19
529: invokevirtual #22
532: iload         24
534: ifne          541
537: iconst_1
538: goto          542
541: iconst_0
542: invokestatic  #23
545: aload         25
547: invokestatic  #15
550: aload         26
552: invokestatic  #15
555: new           #16
558: dup
559: invokespecial #17
562: ldc           #18
564: invokevirtual #19
567: iload         27
569: invokevirtual #20
572: ldc           #21
574: invokevirtual #19
577: iconst_0
578: invokevirtual #20
581: ldc           #18
583: invokevirtual #19
586: invokevirtual #22
589: iload         27
591: ifne          598
594: iconst_1
595: goto          599
598: iconst_0
599: invokestatic  #23
602: new           #16
605: dup
606: invokespecial #17
609: ldc           #18
611: invokevirtual #19
614: aload         29
616: invokevirtual #19
619: ldc_w         #787
622: invokevirtual #19
625: invokevirtual #22
628: aload         29
630: ldc_w         #788
633: invokestatic  #68
636: new           #16
639: dup
640: invokespecial #17
643: ldc           #18
645: invokevirtual #19
648: iload         30
650: invokevirtual #20
653: ldc           #21
655: invokevirtual #19
658: iconst_0
659: invokevirtual #20
662: ldc           #18
664: invokevirtual #19
667: invokevirtual #22
670: iload         30
672: ifne          679
675: iconst_1
676: goto          680
679: iconst_0
680: invokestatic  #23
683: aload         31
685: invokestatic  #15
688: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test237
Start line: 12469
End line: 12490
Method source code: 
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(false);
        java.lang.String[] strArray14 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean15 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray14);
        org.jsoup.safety.Whitelist whitelist16 = whitelist5.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray14);
        boolean boolean18 = whitelist5.isSafeTag("#text");
        java.lang.String str19 = org.jsoup.Jsoup.clean("[^<html> <head></head> <body> </body> </html>]", whitelist5);
        org.jsoup.nodes.Attributes attributes21 = whitelist5.getEnforcedAttributes("&lt;\n \n \n&gt;\n \n \n&gt;hi!");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[^    ]" + "'", str19, "[^    ]");
        org.junit.Assert.assertNotNull(attributes21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #789
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: aload_3
94: ldc           #51
96: invokevirtual #83
99: istore        7
101: ldc_w         #492
104: aload_3
105: invokestatic  #81
108: astore        8
110: aload_3
111: ldc_w         #622
114: invokevirtual #150
117: astore        9
119: aload_1
120: invokestatic  #15
123: aload_2
124: invokestatic  #15
127: aload_3
128: invokestatic  #15
131: aload         4
133: invokestatic  #15
136: new           #16
139: dup
140: invokespecial #17
143: ldc           #18
145: invokevirtual #19
148: iload         5
150: invokevirtual #20
153: ldc           #21
155: invokevirtual #19
158: iconst_1
159: invokevirtual #20
162: ldc           #18
164: invokevirtual #19
167: invokevirtual #22
170: iload         5
172: iconst_1
173: if_icmpne     180
176: iconst_1
177: goto          181
180: iconst_0
181: invokestatic  #23
184: aload         6
186: invokestatic  #15
189: new           #16
192: dup
193: invokespecial #17
196: ldc           #18
198: invokevirtual #19
201: iload         7
203: invokevirtual #20
206: ldc           #21
208: invokevirtual #19
211: iconst_0
212: invokevirtual #20
215: ldc           #18
217: invokevirtual #19
220: invokevirtual #22
223: iload         7
225: ifne          232
228: iconst_1
229: goto          233
232: iconst_0
233: invokestatic  #23
236: new           #16
239: dup
240: invokespecial #17
243: ldc           #18
245: invokevirtual #19
248: aload         8
250: invokevirtual #19
253: ldc_w         #494
256: invokevirtual #19
259: invokevirtual #22
262: aload         8
264: ldc_w         #479
267: invokestatic  #68
270: aload         9
272: invokestatic  #15
275: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test238
Start line: 12493
End line: 12557
Method source code: 
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element29 = document26.empty();
        org.jsoup.nodes.Node node32 = element29.attr("[^hi!]", "#document");
        int int33 = objList0.lastIndexOf((java.lang.Object) node32);
        java.util.ListIterator<java.lang.Object> objItor35 = objList0.listIterator(0);
        org.jsoup.nodes.Document document39 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList41 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document39, "hi!");
        org.jsoup.nodes.Element element42 = document39.empty();
        org.jsoup.nodes.Element element44 = document39.removeClass("hi!");
        org.jsoup.nodes.Element element46 = element44.toggleClass("");
        boolean boolean47 = objList0.removeFirstOccurrence((java.lang.Object) element46);
        org.jsoup.safety.Whitelist whitelist50 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist52 = whitelist50.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist56 = whitelist50.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str57 = org.jsoup.Jsoup.clean("#comment", "*", whitelist56);
        int int58 = objList0.indexOf((java.lang.Object) "*");
        java.lang.Object obj59 = objList0.pollLast();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(objItor35);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "<html>\n <head></head>\n <body>\n </body>\n</html>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #790
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        12
132: ldc           #12
134: aload         12
136: ldc           #12
138: invokestatic  #27
141: astore        13
143: aload         12
145: invokevirtual #103
148: astore        14
150: aload         14
152: ldc           #50
154: ldc           #13
156: invokevirtual #791
159: astore        15
161: aload_1
162: aload         15
164: invokevirtual #130
167: istore        16
169: aload_1
170: iconst_0
171: invokevirtual #568
174: astore        17
176: ldc           #25
178: ldc           #12
180: invokestatic  #26
183: astore        18
185: ldc           #12
187: aload         18
189: ldc           #12
191: invokestatic  #27
194: astore        19
196: aload         18
198: invokevirtual #103
201: astore        20
203: aload         18
205: ldc           #12
207: invokevirtual #59
210: astore        21
212: aload         21
214: ldc           #25
216: invokevirtual #177
219: astore        22
221: aload_1
222: aload         22
224: invokevirtual #651
227: istore        23
229: invokestatic  #8
232: astore        24
234: aload         24
236: iconst_1
237: invokevirtual #9
240: astore        25
242: aload         24
244: ldc           #10
246: ldc           #10
248: ldc           #10
250: invokevirtual #11
253: astore        26
255: ldc           #114
257: ldc           #126
259: aload         26
261: invokestatic  #94
264: astore        27
266: aload_1
267: ldc           #126
269: invokevirtual #380
272: istore        28
274: aload_1
275: invokevirtual #685
278: astore        29
280: aload_2
281: invokestatic  #15
284: aload_3
285: invokestatic  #15
288: aload         4
290: invokestatic  #15
293: aload         5
295: invokestatic  #15
298: aload         6
300: invokestatic  #15
303: aload         7
305: invokestatic  #15
308: aload         8
310: invokestatic  #15
313: aload         9
315: invokestatic  #15
318: aload         10
320: invokestatic  #15
323: aload         11
325: invokestatic  #15
328: aload         12
330: invokestatic  #15
333: aload         13
335: invokestatic  #15
338: aload         14
340: invokestatic  #15
343: aload         15
345: invokestatic  #15
348: new           #16
351: dup
352: invokespecial #17
355: ldc           #18
357: invokevirtual #19
360: iload         16
362: invokevirtual #134
365: ldc           #21
367: invokevirtual #19
370: iconst_m1
371: invokevirtual #134
374: ldc           #18
376: invokevirtual #19
379: invokevirtual #22
382: iload         16
384: iconst_m1
385: if_icmpne     392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #23
396: aload         17
398: invokestatic  #15
401: aload         18
403: invokestatic  #15
406: aload         19
408: invokestatic  #15
411: aload         20
413: invokestatic  #15
416: aload         21
418: invokestatic  #15
421: aload         22
423: invokestatic  #15
426: new           #16
429: dup
430: invokespecial #17
433: ldc           #18
435: invokevirtual #19
438: iload         23
440: invokevirtual #20
443: ldc           #21
445: invokevirtual #19
448: iconst_0
449: invokevirtual #20
452: ldc           #18
454: invokevirtual #19
457: invokevirtual #22
460: iload         23
462: ifne          469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #23
473: aload         24
475: invokestatic  #15
478: aload         25
480: invokestatic  #15
483: aload         26
485: invokestatic  #15
488: new           #16
491: dup
492: invokespecial #17
495: ldc           #18
497: invokevirtual #19
500: aload         27
502: invokevirtual #19
505: ldc           #212
507: invokevirtual #19
510: invokevirtual #22
513: aload         27
515: ldc           #114
517: invokestatic  #68
520: new           #16
523: dup
524: invokespecial #17
527: ldc           #18
529: invokevirtual #19
532: iload         28
534: invokevirtual #134
537: ldc           #21
539: invokevirtual #19
542: iconst_m1
543: invokevirtual #134
546: ldc           #18
548: invokevirtual #19
551: invokevirtual #22
554: iload         28
556: iconst_m1
557: if_icmpne     564
560: iconst_1
561: goto          565
564: iconst_0
565: invokestatic  #23
568: aload         29
570: invokestatic  #15
573: aload         29
575: invokevirtual #571
578: ldc           #157
580: invokestatic  #290
583: aload         29
585: invokestatic  #572
588: ldc           #157
590: invokestatic  #290
593: aload         29
595: invokestatic  #573
598: ldc           #157
600: invokestatic  #290
603: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test239
Start line: 12560
End line: 12651
Method source code: 
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.tagName("hi!");
        org.jsoup.nodes.Element element10 = document4.append("");
        java.lang.String str11 = element10.toString();
        objList0.push((java.lang.Object) element10);
        java.lang.Object obj13 = objList0.pollFirst();
        objList0.clear();
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element21 = document18.empty();
        org.jsoup.nodes.Element element23 = document18.removeClass("hi!");
        java.lang.String str24 = document18.id();
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element31 = document28.empty();
        org.jsoup.nodes.Element element33 = document28.removeClass("hi!");
        java.lang.String str34 = document28.nodeName();
        org.jsoup.nodes.Document.QuirksMode quirksMode35 = document28.quirksMode();
        org.jsoup.nodes.Document document36 = document18.quirksMode(quirksMode35);
        org.jsoup.safety.Whitelist whitelist37 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist39 = whitelist37.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner40 = new org.jsoup.safety.Cleaner(whitelist39);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining43 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document45 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document49 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList51 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document49, "hi!");
        org.jsoup.nodes.Element element53 = document49.tagName("hi!");
        org.jsoup.nodes.Element element55 = document49.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings56 = document49.outputSettings();
        boolean boolean57 = attributeWithValueContaining43.matches((org.jsoup.nodes.Element) document45, (org.jsoup.nodes.Element) document49);
        org.jsoup.nodes.Document document58 = cleaner40.clean(document49);
        org.jsoup.nodes.Document document60 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str61 = document60.toString();
        java.lang.String str62 = document60.baseUri();
        org.jsoup.nodes.Document document63 = cleaner40.clean(document60);
        org.jsoup.nodes.Document.QuirksMode quirksMode64 = document63.quirksMode();
        org.jsoup.nodes.Document document65 = document18.quirksMode(quirksMode64);
        org.jsoup.nodes.Node node67 = document18.removeAttr("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]");
        org.jsoup.nodes.Document document69 = org.jsoup.nodes.Document.createShell("<html>\n <head></head>\n <body></body>\n</html>\n<:lt(32)></:lt(32)>");
        java.util.Map<java.lang.String, java.lang.String> strMap70 = document69.dataset();
        org.jsoup.nodes.Element element72 = document69.text("<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Element element73 = document18.appendChild((org.jsoup.nodes.Node) element72);
        boolean boolean74 = objList0.equals((java.lang.Object) element72);
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str11, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#document" + "'", str34, "#document");
        org.junit.Assert.assertTrue("'" + quirksMode35 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode35.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertNotNull(nodeList51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(outputSettings56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertNotNull(document60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str61, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(document63);
        org.junit.Assert.assertTrue("'" + quirksMode64 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode64.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(document69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #792
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #12
53: invokevirtual #28
56: astore        4
58: aload_2
59: ldc           #25
61: invokevirtual #29
64: astore        5
66: aload         5
68: invokevirtual #363
71: astore        6
73: aload_1
74: aload         5
76: invokevirtual #401
79: aload_1
80: invokevirtual #660
83: astore        7
85: aload_1
86: invokevirtual #131
89: ldc           #25
91: ldc           #12
93: invokestatic  #26
96: astore        8
98: ldc           #12
100: aload         8
102: ldc           #12
104: invokestatic  #27
107: astore        9
109: aload         8
111: invokevirtual #103
114: astore        10
116: aload         8
118: ldc           #12
120: invokevirtual #59
123: astore        11
125: aload         8
127: invokevirtual #73
130: astore        12
132: ldc           #25
134: ldc           #12
136: invokestatic  #26
139: astore        13
141: ldc           #12
143: aload         13
145: ldc           #12
147: invokestatic  #27
150: astore        14
152: aload         13
154: invokevirtual #103
157: astore        15
159: aload         13
161: ldc           #12
163: invokevirtual #59
166: astore        16
168: aload         13
170: invokevirtual #220
173: astore        17
175: aload         13
177: invokevirtual #222
180: astore        18
182: aload         8
184: aload         18
186: invokevirtual #481
189: astore        19
191: invokestatic  #8
194: astore        20
196: aload         20
198: iconst_1
199: invokevirtual #9
202: astore        21
204: new           #40
207: dup
208: aload         21
210: invokespecial #41
213: astore        22
215: new           #42
218: dup
219: ldc           #43
221: ldc           #32
223: invokespecial #44
226: astore        23
228: ldc           #12
230: invokestatic  #45
233: astore        24
235: ldc           #25
237: ldc           #12
239: invokestatic  #26
242: astore        25
244: ldc           #12
246: aload         25
248: ldc           #12
250: invokestatic  #27
253: astore        26
255: aload         25
257: ldc           #12
259: invokevirtual #28
262: astore        27
264: aload         25
266: ldc           #25
268: invokevirtual #29
271: astore        28
273: aload         25
275: invokevirtual #30
278: astore        29
280: aload         23
282: aload         24
284: aload         25
286: invokevirtual #46
289: istore        30
291: aload         22
293: aload         25
295: invokevirtual #47
298: astore        31
300: ldc           #10
302: invokestatic  #193
305: astore        32
307: aload         32
309: invokevirtual #72
312: astore        33
314: aload         32
316: invokevirtual #194
319: astore        34
321: aload         22
323: aload         32
325: invokevirtual #47
328: astore        35
330: aload         35
332: invokevirtual #222
335: astore        36
337: aload         8
339: aload         36
341: invokevirtual #481
344: astore        37
346: aload         8
348: ldc_w         #273
351: invokevirtual #793
354: astore        38
356: ldc_w         #794
359: invokestatic  #45
362: astore        39
364: aload         39
366: invokevirtual #534
369: astore        40
371: aload         39
373: ldc           #55
375: invokevirtual #64
378: astore        41
380: aload         8
382: aload         41
384: invokevirtual #666
387: astore        42
389: aload_1
390: aload         41
392: invokevirtual #90
395: istore        43
397: aload_2
398: invokestatic  #15
401: aload_3
402: invokestatic  #15
405: aload         4
407: invokestatic  #15
410: aload         5
412: invokestatic  #15
415: new           #16
418: dup
419: invokespecial #17
422: ldc           #18
424: invokevirtual #19
427: aload         6
429: invokevirtual #19
432: ldc           #78
434: invokevirtual #19
437: invokevirtual #22
440: aload         6
442: ldc           #10
444: invokestatic  #68
447: aload         7
449: invokestatic  #15
452: aload         7
454: invokevirtual #571
457: ldc           #10
459: invokestatic  #290
462: aload         7
464: invokestatic  #572
467: ldc           #10
469: invokestatic  #290
472: aload         7
474: invokestatic  #573
477: ldc           #10
479: invokestatic  #290
482: aload         8
484: invokestatic  #15
487: aload         9
489: invokestatic  #15
492: aload         10
494: invokestatic  #15
497: aload         11
499: invokestatic  #15
502: new           #16
505: dup
506: invokespecial #17
509: ldc           #18
511: invokevirtual #19
514: aload         12
516: invokevirtual #19
519: ldc           #67
521: invokevirtual #19
524: invokevirtual #22
527: aload         12
529: ldc           #25
531: invokestatic  #68
534: aload         13
536: invokestatic  #15
539: aload         14
541: invokestatic  #15
544: aload         15
546: invokestatic  #15
549: aload         16
551: invokestatic  #15
554: new           #16
557: dup
558: invokespecial #17
561: ldc           #18
563: invokevirtual #19
566: aload         17
568: invokevirtual #19
571: ldc           #107
573: invokevirtual #19
576: invokevirtual #22
579: aload         17
581: ldc           #13
583: invokestatic  #68
586: new           #16
589: dup
590: invokespecial #17
593: ldc           #18
595: invokevirtual #19
598: aload         18
600: invokevirtual #223
603: ldc           #21
605: invokevirtual #19
608: getstatic     #224
611: invokevirtual #223
614: ldc           #18
616: invokevirtual #19
619: invokevirtual #22
622: aload         18
624: getstatic     #224
627: invokevirtual #225
630: invokestatic  #23
633: aload         19
635: invokestatic  #15
638: aload         20
640: invokestatic  #15
643: aload         21
645: invokestatic  #15
648: aload         24
650: invokestatic  #15
653: aload         25
655: invokestatic  #15
658: aload         26
660: invokestatic  #15
663: aload         27
665: invokestatic  #15
668: aload         28
670: invokestatic  #15
673: aload         29
675: invokestatic  #15
678: new           #16
681: dup
682: invokespecial #17
685: ldc           #18
687: invokevirtual #19
690: iload         30
692: invokevirtual #20
695: ldc           #21
697: invokevirtual #19
700: iconst_0
701: invokevirtual #20
704: ldc           #18
706: invokevirtual #19
709: invokevirtual #22
712: iload         30
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #23
725: aload         31
727: invokestatic  #15
730: aload         32
732: invokestatic  #15
735: new           #16
738: dup
739: invokespecial #17
742: ldc           #18
744: invokevirtual #19
747: aload         33
749: invokevirtual #19
752: ldc           #197
754: invokevirtual #19
757: invokevirtual #22
760: aload         33
762: ldc           #151
764: invokestatic  #68
767: new           #16
770: dup
771: invokespecial #17
774: ldc           #18
776: invokevirtual #19
779: aload         34
781: invokevirtual #19
784: ldc           #67
786: invokevirtual #19
789: invokevirtual #22
792: aload         34
794: ldc           #25
796: invokestatic  #68
799: aload         35
801: invokestatic  #15
804: new           #16
807: dup
808: invokespecial #17
811: ldc           #18
813: invokevirtual #19
816: aload         36
818: invokevirtual #223
821: ldc           #21
823: invokevirtual #19
826: getstatic     #224
829: invokevirtual #223
832: ldc           #18
834: invokevirtual #19
837: invokevirtual #22
840: aload         36
842: getstatic     #224
845: invokevirtual #225
848: invokestatic  #23
851: aload         37
853: invokestatic  #15
856: aload         38
858: invokestatic  #15
861: aload         39
863: invokestatic  #15
866: aload         40
868: invokestatic  #15
871: aload         41
873: invokestatic  #15
876: aload         42
878: invokestatic  #15
881: new           #16
884: dup
885: invokespecial #17
888: ldc           #18
890: invokevirtual #19
893: iload         43
895: invokevirtual #20
898: ldc           #21
900: invokevirtual #19
903: iconst_0
904: invokevirtual #20
907: ldc           #18
909: invokevirtual #19
912: invokevirtual #22
915: iload         43
917: ifne          924
920: iconst_1
921: goto          925
924: iconst_0
925: invokestatic  #23
928: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test240
Start line: 12654
End line: 12743
Method source code: 
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner5 = new org.jsoup.safety.Cleaner(whitelist4);
        org.jsoup.select.Evaluator.Id id8 = new org.jsoup.select.Evaluator.Id("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = element18.toString();
        boolean boolean21 = element18.hasAttr("");
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        org.jsoup.nodes.Element element33 = element31.removeClass("hi!");
        org.jsoup.select.Elements elements36 = element31.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Element element38 = element31.prependElement("hi!");
        boolean boolean39 = element38.hasText();
        element38.remove();
        boolean boolean41 = id8.matches(element18, element38);
        java.lang.String str42 = element38.outerHtml();
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        org.jsoup.select.Elements elements55 = document46.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element57 = document46.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes58 = document46.attributes();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = attributes58.dataset();
        org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList65 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document63, "hi!");
        org.jsoup.nodes.Element element67 = document63.tagName("hi!");
        org.jsoup.nodes.Element element69 = document63.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings70 = document63.outputSettings();
        org.jsoup.select.Elements elements72 = document63.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element74 = document63.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes75 = document63.attributes();
        attributes58.addAll(attributes75);
        int int77 = attributes75.size();
        java.lang.String str78 = attributes75.toString();
        org.jsoup.nodes.Attribute attribute81 = new org.jsoup.nodes.Attribute("#[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html><hi!>\n [^hi!]\n</hi!><html>\n <head></head>\n <body></body>\n</html><hi!>\n [^hi!]\n</hi!><head></head><hi!>\n [^hi!]\n</hi!><body></body>");
        attributes75.put(attribute81);
        java.lang.String str83 = attribute81.getKey();
        boolean boolean84 = whitelist4.isSafeAttribute("[hi!$=<html> <head></head> <body></body> </html>]", element38, attribute81);
        java.lang.String str85 = org.jsoup.Jsoup.clean(" .<html> <head></head> <body></body> </html>=\"\"", ".[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", whitelist4);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "<hi!></hi!>" + "'", str42, "<hi!></hi!>");
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(elements55);
        org.junit.Assert.assertNull(element57);
        org.junit.Assert.assertNotNull(attributes58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(document63);
        org.junit.Assert.assertNotNull(nodeList65);
        org.junit.Assert.assertNotNull(element67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(outputSettings70);
        org.junit.Assert.assertNotNull(elements72);
        org.junit.Assert.assertNull(element74);
        org.junit.Assert.assertNotNull(attributes75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "#[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]" + "'", str83, "#[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".   =&quot;&quot;" + "'", str85, ".   =&quot;&quot;");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #795
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #388
47: dup
48: ldc           #12
50: invokespecial #389
53: astore        4
55: ldc           #25
57: ldc           #12
59: invokestatic  #26
62: astore        5
64: ldc           #12
66: aload         5
68: ldc           #12
70: invokestatic  #27
73: astore        6
75: aload         5
77: ldc           #12
79: invokevirtual #28
82: astore        7
84: aload         5
86: ldc           #25
88: invokevirtual #29
91: astore        8
93: aload         8
95: invokevirtual #363
98: astore        9
100: aload         8
102: ldc           #25
104: invokevirtual #364
107: istore        10
109: ldc           #25
111: ldc           #12
113: invokestatic  #26
116: astore        11
118: ldc           #12
120: aload         11
122: ldc           #12
124: invokestatic  #27
127: astore        12
129: aload         11
131: ldc           #12
133: invokevirtual #28
136: astore        13
138: aload         11
140: ldc           #25
142: invokevirtual #29
145: astore        14
147: aload         14
149: ldc           #12
151: invokevirtual #390
154: astore        15
156: aload         14
158: ldc           #51
160: ldc           #98
162: invokevirtual #391
165: astore        16
167: aload         14
169: ldc           #12
171: invokevirtual #392
174: astore        17
176: aload         17
178: invokevirtual #393
181: istore        18
183: aload         17
185: invokevirtual #394
188: aload         4
190: aload         8
192: aload         17
194: invokevirtual #395
197: istore        19
199: aload         17
201: invokevirtual #796
204: astore        20
206: ldc           #25
208: ldc           #12
210: invokestatic  #26
213: astore        21
215: ldc           #12
217: aload         21
219: ldc           #12
221: invokestatic  #27
224: astore        22
226: aload         21
228: ldc           #12
230: invokevirtual #28
233: astore        23
235: aload         21
237: ldc           #25
239: invokevirtual #29
242: astore        24
244: aload         21
246: invokevirtual #30
249: astore        25
251: aload         21
253: iconst_m1
254: invokevirtual #162
257: astore        26
259: aload         21
261: ldc           #10
263: invokevirtual #163
266: astore        27
268: aload         21
270: invokevirtual #164
273: astore        28
275: aload         28
277: invokevirtual #471
280: astore        29
282: ldc           #25
284: ldc           #12
286: invokestatic  #26
289: astore        30
291: ldc           #12
293: aload         30
295: ldc           #12
297: invokestatic  #27
300: astore        31
302: aload         30
304: ldc           #12
306: invokevirtual #28
309: astore        32
311: aload         30
313: ldc           #25
315: invokevirtual #29
318: astore        33
320: aload         30
322: invokevirtual #30
325: astore        34
327: aload         30
329: iconst_m1
330: invokevirtual #162
333: astore        35
335: aload         30
337: ldc           #10
339: invokevirtual #163
342: astore        36
344: aload         30
346: invokevirtual #164
349: astore        37
351: aload         28
353: aload         37
355: invokevirtual #472
358: aload         37
360: invokevirtual #797
363: istore        38
365: aload         37
367: invokevirtual #636
370: astore        39
372: new           #263
375: dup
376: ldc_w         #714
379: ldc_w         #462
382: invokespecial #264
385: astore        40
387: aload         37
389: aload         40
391: invokevirtual #473
394: aload         40
396: invokevirtual #210
399: astore        41
401: aload_2
402: ldc           #183
404: aload         17
406: aload         40
408: invokevirtual #169
411: istore        42
413: ldc_w         #798
416: ldc           #208
418: aload_2
419: invokestatic  #94
422: astore        43
424: aload_1
425: invokestatic  #15
428: aload_2
429: invokestatic  #15
432: aload         5
434: invokestatic  #15
437: aload         6
439: invokestatic  #15
442: aload         7
444: invokestatic  #15
447: aload         8
449: invokestatic  #15
452: new           #16
455: dup
456: invokespecial #17
459: ldc           #18
461: invokevirtual #19
464: aload         9
466: invokevirtual #19
469: ldc           #78
471: invokevirtual #19
474: invokevirtual #22
477: aload         9
479: ldc           #10
481: invokestatic  #68
484: new           #16
487: dup
488: invokespecial #17
491: ldc           #18
493: invokevirtual #19
496: iload         10
498: invokevirtual #20
501: ldc           #21
503: invokevirtual #19
506: iconst_0
507: invokevirtual #20
510: ldc           #18
512: invokevirtual #19
515: invokevirtual #22
518: iload         10
520: ifne          527
523: iconst_1
524: goto          528
527: iconst_0
528: invokestatic  #23
531: aload         11
533: invokestatic  #15
536: aload         12
538: invokestatic  #15
541: aload         13
543: invokestatic  #15
546: aload         14
548: invokestatic  #15
551: aload         15
553: invokestatic  #15
556: aload         16
558: invokestatic  #15
561: aload         17
563: invokestatic  #15
566: new           #16
569: dup
570: invokespecial #17
573: ldc           #18
575: invokevirtual #19
578: iload         18
580: invokevirtual #20
583: ldc           #21
585: invokevirtual #19
588: iconst_0
589: invokevirtual #20
592: ldc           #18
594: invokevirtual #19
597: invokevirtual #22
600: iload         18
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #23
613: new           #16
616: dup
617: invokespecial #17
620: ldc           #18
622: invokevirtual #19
625: iload         19
627: invokevirtual #20
630: ldc           #21
632: invokevirtual #19
635: iconst_0
636: invokevirtual #20
639: ldc           #18
641: invokevirtual #19
644: invokevirtual #22
647: iload         19
649: ifne          656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #23
660: new           #16
663: dup
664: invokespecial #17
667: ldc           #18
669: invokevirtual #19
672: aload         20
674: invokevirtual #19
677: ldc_w         #799
680: invokevirtual #19
683: invokevirtual #22
686: aload         20
688: ldc_w         #776
691: invokestatic  #68
694: aload         21
696: invokestatic  #15
699: aload         22
701: invokestatic  #15
704: aload         23
706: invokestatic  #15
709: aload         24
711: invokestatic  #15
714: aload         25
716: invokestatic  #15
719: aload         26
721: invokestatic  #15
724: aload         27
726: invokestatic  #79
729: aload         28
731: invokestatic  #15
734: aload         29
736: invokestatic  #15
739: aload         30
741: invokestatic  #15
744: aload         31
746: invokestatic  #15
749: aload         32
751: invokestatic  #15
754: aload         33
756: invokestatic  #15
759: aload         34
761: invokestatic  #15
764: aload         35
766: invokestatic  #15
769: aload         36
771: invokestatic  #79
774: aload         37
776: invokestatic  #15
779: new           #16
782: dup
783: invokespecial #17
786: ldc           #18
788: invokevirtual #19
791: iload         38
793: invokevirtual #134
796: ldc           #21
798: invokevirtual #19
801: iconst_0
802: invokevirtual #134
805: ldc           #18
807: invokevirtual #19
810: invokevirtual #22
813: iload         38
815: ifne          822
818: iconst_1
819: goto          823
822: iconst_0
823: invokestatic  #23
826: new           #16
829: dup
830: invokespecial #17
833: ldc           #18
835: invokevirtual #19
838: aload         39
840: invokevirtual #19
843: ldc           #67
845: invokevirtual #19
848: invokevirtual #22
851: aload         39
853: ldc           #25
855: invokestatic  #68
858: new           #16
861: dup
862: invokespecial #17
865: ldc           #18
867: invokevirtual #19
870: aload         41
872: invokevirtual #19
875: ldc_w         #800
878: invokevirtual #19
881: invokevirtual #22
884: aload         41
886: ldc_w         #714
889: invokestatic  #68
892: new           #16
895: dup
896: invokespecial #17
899: ldc           #18
901: invokevirtual #19
904: iload         42
906: invokevirtual #20
909: ldc           #21
911: invokevirtual #19
914: iconst_0
915: invokevirtual #20
918: ldc           #18
920: invokevirtual #19
923: invokevirtual #22
926: iload         42
928: ifne          935
931: iconst_1
932: goto          936
935: iconst_0
936: invokestatic  #23
939: new           #16
942: dup
943: invokespecial #17
946: ldc           #18
948: invokevirtual #19
951: aload         43
953: invokevirtual #19
956: ldc_w         #801
959: invokevirtual #19
962: invokevirtual #22
965: aload         43
967: ldc_w         #802
970: invokestatic  #68
973: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test241
Start line: 12746
End line: 12847
Method source code: 
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        java.util.regex.Pattern pattern1 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching2 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("\nhi!", pattern1);
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = document6.removeClass("hi!");
        java.lang.String str12 = document6.id();
        org.jsoup.nodes.Node node13 = document6.previousSibling();
        org.jsoup.nodes.Node node14 = document6.clone();
        java.lang.String str15 = document6.id();
        org.jsoup.safety.Whitelist whitelist16 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist18 = whitelist16.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner19 = new org.jsoup.safety.Cleaner(whitelist18);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining22 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document24 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = document28.outputSettings();
        boolean boolean36 = attributeWithValueContaining22.matches((org.jsoup.nodes.Element) document24, (org.jsoup.nodes.Element) document28);
        org.jsoup.nodes.Document document37 = cleaner19.clean(document28);
        org.jsoup.helper.Validate.notNull((java.lang.Object) document28, "");
        boolean boolean40 = attributeWithValueMatching2.matches((org.jsoup.nodes.Element) document6, (org.jsoup.nodes.Element) document28);
        java.util.regex.Pattern pattern42 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching43 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern42);
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList49 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document47, "hi!");
        org.jsoup.nodes.Element element51 = document47.tagName("hi!");
        org.jsoup.nodes.Element element53 = document47.append("");
        java.lang.String str54 = document47.toString();
        org.jsoup.nodes.Element element56 = document47.prependElement("\nhi!");
        org.jsoup.select.Elements elements58 = document47.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document62 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList64 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document62, "hi!");
        org.jsoup.nodes.Element element66 = document62.tagName("hi!");
        org.jsoup.nodes.Element element68 = document62.append("");
        boolean boolean69 = attributeWithValueMatching43.matches((org.jsoup.nodes.Element) document47, (org.jsoup.nodes.Element) document62);
        org.jsoup.nodes.Element element70 = null;
        org.jsoup.nodes.Document document73 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element74 = document73.body();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = document73.dataset();
        boolean boolean76 = attributeWithValueMatching43.matches(element70, (org.jsoup.nodes.Element) document73);
        org.jsoup.nodes.Element element79 = document73.attr("[^ ]", "");
        org.jsoup.nodes.Document document83 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList85 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document83, "hi!");
        org.jsoup.nodes.Element element87 = document83.tagName("hi!");
        org.jsoup.nodes.Element element89 = document83.append("");
        org.jsoup.nodes.Element element91 = element89.removeClass("hi!");
        org.jsoup.select.Elements elements94 = element89.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Element element96 = element89.prependElement("hi!");
        org.jsoup.nodes.Element element98 = element96.appendText("");
        boolean boolean99 = attributeWithValueMatching2.matches((org.jsoup.nodes.Element) document73, element98);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(outputSettings35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str54, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(elements58);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(nodeList64);
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(document73);
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(document83);
        org.junit.Assert.assertNotNull(nodeList85);
        org.junit.Assert.assertNotNull(element87);
        org.junit.Assert.assertNotNull(element89);
        org.junit.Assert.assertNotNull(element91);
        org.junit.Assert.assertNotNull(elements94);
        org.junit.Assert.assertNotNull(element96);
        org.junit.Assert.assertNotNull(element98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #803
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #96
30: dup
31: ldc           #98
33: aload_1
34: invokespecial #97
37: astore_2
38: ldc           #25
40: ldc           #12
42: invokestatic  #26
45: astore_3
46: ldc           #12
48: aload_3
49: ldc           #12
51: invokestatic  #27
54: astore        4
56: aload_3
57: invokevirtual #103
60: astore        5
62: aload_3
63: ldc           #12
65: invokevirtual #59
68: astore        6
70: aload_3
71: invokevirtual #73
74: astore        7
76: aload_3
77: invokevirtual #349
80: astore        8
82: aload_3
83: invokevirtual #154
86: astore        9
88: aload_3
89: invokevirtual #73
92: astore        10
94: invokestatic  #8
97: astore        11
99: aload         11
101: iconst_1
102: invokevirtual #9
105: astore        12
107: new           #40
110: dup
111: aload         12
113: invokespecial #41
116: astore        13
118: new           #42
121: dup
122: ldc           #43
124: ldc           #32
126: invokespecial #44
129: astore        14
131: ldc           #12
133: invokestatic  #45
136: astore        15
138: ldc           #25
140: ldc           #12
142: invokestatic  #26
145: astore        16
147: ldc           #12
149: aload         16
151: ldc           #12
153: invokestatic  #27
156: astore        17
158: aload         16
160: ldc           #12
162: invokevirtual #28
165: astore        18
167: aload         16
169: ldc           #25
171: invokevirtual #29
174: astore        19
176: aload         16
178: invokevirtual #30
181: astore        20
183: aload         14
185: aload         15
187: aload         16
189: invokevirtual #46
192: istore        21
194: aload         13
196: aload         16
198: invokevirtual #47
201: astore        22
203: aload         16
205: ldc           #25
207: invokestatic  #181
210: aload_2
211: aload_3
212: aload         16
214: invokevirtual #101
217: istore        23
219: aconst_null
220: astore        24
222: new           #96
225: dup
226: ldc           #25
228: aload         24
230: invokespecial #97
233: astore        25
235: ldc           #25
237: ldc           #12
239: invokestatic  #26
242: astore        26
244: ldc           #12
246: aload         26
248: ldc           #12
250: invokestatic  #27
253: astore        27
255: aload         26
257: ldc           #12
259: invokevirtual #28
262: astore        28
264: aload         26
266: ldc           #25
268: invokevirtual #29
271: astore        29
273: aload         26
275: invokevirtual #72
278: astore        30
280: aload         26
282: ldc           #98
284: invokevirtual #99
287: astore        31
289: aload         26
291: ldc           #25
293: invokevirtual #100
296: astore        32
298: ldc           #25
300: ldc           #12
302: invokestatic  #26
305: astore        33
307: ldc           #12
309: aload         33
311: ldc           #12
313: invokestatic  #27
316: astore        34
318: aload         33
320: ldc           #12
322: invokevirtual #28
325: astore        35
327: aload         33
329: ldc           #25
331: invokevirtual #29
334: astore        36
336: aload         25
338: aload         26
340: aload         33
342: invokevirtual #101
345: istore        37
347: aconst_null
348: astore        38
350: ldc           #25
352: ldc           #12
354: invokestatic  #26
357: astore        39
359: aload         39
361: invokevirtual #166
364: astore        40
366: aload         39
368: invokevirtual #534
371: astore        41
373: aload         25
375: aload         38
377: aload         39
379: invokevirtual #101
382: istore        42
384: aload         39
386: ldc           #236
388: ldc           #25
390: invokevirtual #56
393: astore        43
395: ldc           #25
397: ldc           #12
399: invokestatic  #26
402: astore        44
404: ldc           #12
406: aload         44
408: ldc           #12
410: invokestatic  #27
413: astore        45
415: aload         44
417: ldc           #12
419: invokevirtual #28
422: astore        46
424: aload         44
426: ldc           #25
428: invokevirtual #29
431: astore        47
433: aload         47
435: ldc           #12
437: invokevirtual #390
440: astore        48
442: aload         47
444: ldc           #51
446: ldc           #98
448: invokevirtual #391
451: astore        49
453: aload         47
455: ldc           #12
457: invokevirtual #392
460: astore        50
462: aload         50
464: ldc           #25
466: invokevirtual #641
469: astore        51
471: aload_2
472: aload         39
474: aload         51
476: invokevirtual #101
479: istore        52
481: aload_3
482: invokestatic  #15
485: aload         4
487: invokestatic  #15
490: aload         5
492: invokestatic  #15
495: aload         6
497: invokestatic  #15
500: new           #16
503: dup
504: invokespecial #17
507: ldc           #18
509: invokevirtual #19
512: aload         7
514: invokevirtual #19
517: ldc           #67
519: invokevirtual #19
522: invokevirtual #22
525: aload         7
527: ldc           #25
529: invokestatic  #68
532: aload         8
534: invokestatic  #79
537: aload         9
539: invokestatic  #15
542: new           #16
545: dup
546: invokespecial #17
549: ldc           #18
551: invokevirtual #19
554: aload         10
556: invokevirtual #19
559: ldc           #67
561: invokevirtual #19
564: invokevirtual #22
567: aload         10
569: ldc           #25
571: invokestatic  #68
574: aload         11
576: invokestatic  #15
579: aload         12
581: invokestatic  #15
584: aload         15
586: invokestatic  #15
589: aload         16
591: invokestatic  #15
594: aload         17
596: invokestatic  #15
599: aload         18
601: invokestatic  #15
604: aload         19
606: invokestatic  #15
609: aload         20
611: invokestatic  #15
614: new           #16
617: dup
618: invokespecial #17
621: ldc           #18
623: invokevirtual #19
626: iload         21
628: invokevirtual #20
631: ldc           #21
633: invokevirtual #19
636: iconst_0
637: invokevirtual #20
640: ldc           #18
642: invokevirtual #19
645: invokevirtual #22
648: iload         21
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #23
661: aload         22
663: invokestatic  #15
666: new           #16
669: dup
670: invokespecial #17
673: ldc           #18
675: invokevirtual #19
678: iload         23
680: invokevirtual #20
683: ldc           #21
685: invokevirtual #19
688: iconst_0
689: invokevirtual #20
692: ldc           #18
694: invokevirtual #19
697: invokevirtual #22
700: iload         23
702: ifne          709
705: iconst_1
706: goto          710
709: iconst_0
710: invokestatic  #23
713: aload         26
715: invokestatic  #15
718: aload         27
720: invokestatic  #15
723: aload         28
725: invokestatic  #15
728: aload         29
730: invokestatic  #15
733: new           #16
736: dup
737: invokespecial #17
740: ldc           #18
742: invokevirtual #19
745: aload         30
747: invokevirtual #19
750: ldc           #78
752: invokevirtual #19
755: invokevirtual #22
758: aload         30
760: ldc           #10
762: invokestatic  #68
765: aload         31
767: invokestatic  #15
770: aload         32
772: invokestatic  #15
775: aload         33
777: invokestatic  #15
780: aload         34
782: invokestatic  #15
785: aload         35
787: invokestatic  #15
790: aload         36
792: invokestatic  #15
795: new           #16
798: dup
799: invokespecial #17
802: ldc           #18
804: invokevirtual #19
807: iload         37
809: invokevirtual #20
812: ldc           #21
814: invokevirtual #19
817: iconst_0
818: invokevirtual #20
821: ldc           #18
823: invokevirtual #19
826: invokevirtual #22
829: iload         37
831: ifne          838
834: iconst_1
835: goto          839
838: iconst_0
839: invokestatic  #23
842: aload         39
844: invokestatic  #15
847: aload         40
849: invokestatic  #15
852: aload         41
854: invokestatic  #15
857: new           #16
860: dup
861: invokespecial #17
864: ldc           #18
866: invokevirtual #19
869: iload         42
871: invokevirtual #20
874: ldc           #21
876: invokevirtual #19
879: iconst_0
880: invokevirtual #20
883: ldc           #18
885: invokevirtual #19
888: invokevirtual #22
891: iload         42
893: ifne          900
896: iconst_1
897: goto          901
900: iconst_0
901: invokestatic  #23
904: aload         43
906: invokestatic  #15
909: aload         44
911: invokestatic  #15
914: aload         45
916: invokestatic  #15
919: aload         46
921: invokestatic  #15
924: aload         47
926: invokestatic  #15
929: aload         48
931: invokestatic  #15
934: aload         49
936: invokestatic  #15
939: aload         50
941: invokestatic  #15
944: aload         51
946: invokestatic  #15
949: new           #16
952: dup
953: invokespecial #17
956: ldc           #18
958: invokevirtual #19
961: iload         52
963: invokevirtual #20
966: ldc           #21
968: invokevirtual #19
971: iconst_0
972: invokevirtual #20
975: ldc           #18
977: invokevirtual #19
980: invokevirtual #22
983: iload         52
985: ifne          992
988: iconst_1
989: goto          993
992: iconst_0
993: invokestatic  #23
996: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test242
Start line: 12850
End line: 12959
Method source code: 
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        java.lang.String str13 = element12.toString();
        int int14 = objList0.indexOf((java.lang.Object) element12);
        org.jsoup.nodes.Document document16 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str17 = document16.toString();
        java.lang.String str18 = document16.baseUri();
        org.jsoup.nodes.Document.QuirksMode quirksMode19 = document16.quirksMode();
        objList0.addLast((java.lang.Object) quirksMode19);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList22 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean24 = objList22.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj25 = objList22.peekFirst();
        objList22.addFirst((java.lang.Object) ":gt(100)");
        java.lang.String str28 = objList22.toString();
        java.lang.Object obj29 = objList22.removeFirst();
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.tagName("hi!");
        org.jsoup.nodes.Element element39 = document33.append("");
        org.jsoup.nodes.Element element42 = document33.attr("#document", "#document");
        java.util.List<org.jsoup.nodes.Node> nodeList43 = element42.siblingNodes();
        boolean boolean44 = objList22.removeAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList43);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList45 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean47 = objList45.equals((java.lang.Object) ":lt(32)");
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList53 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document51, "hi!");
        org.jsoup.nodes.Element element55 = document51.tagName("hi!");
        org.jsoup.nodes.Element element57 = document51.append("");
        java.lang.String str58 = element57.toString();
        int int59 = objList45.indexOf((java.lang.Object) element57);
        boolean boolean60 = objList22.remove((java.lang.Object) objList45);
        org.jsoup.safety.Whitelist whitelist61 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist63 = whitelist61.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner64 = new org.jsoup.safety.Cleaner(whitelist63);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining67 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document69 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document73 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList75 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document73, "hi!");
        org.jsoup.nodes.Element element77 = document73.tagName("hi!");
        org.jsoup.nodes.Element element79 = document73.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = document73.outputSettings();
        boolean boolean81 = attributeWithValueContaining67.matches((org.jsoup.nodes.Element) document69, (org.jsoup.nodes.Element) document73);
        org.jsoup.nodes.Document document82 = cleaner64.clean(document73);
        org.jsoup.nodes.Document document84 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str85 = document84.toString();
        java.lang.String str86 = document84.baseUri();
        org.jsoup.nodes.Document document87 = cleaner64.clean(document84);
        org.jsoup.nodes.Document document88 = document87.clone();
        boolean boolean89 = objList22.offer((java.lang.Object) document88);
        // The following exception was thrown during execution in test generation
        try {
            objList0.add((int) (byte) -1, (java.lang.Object) boolean89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str13, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str17, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + quirksMode19 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode19.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[:gt(100)]" + "'", str28, "[:gt(100)]");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + ":gt(100)" + "'", obj29, ":gt(100)");
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertNotNull(element55);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str58, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(document69);
        org.junit.Assert.assertNotNull(document73);
        org.junit.Assert.assertNotNull(nodeList75);
        org.junit.Assert.assertNotNull(element77);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(document82);
        org.junit.Assert.assertNotNull(document84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str85, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(document87);
        org.junit.Assert.assertNotNull(document88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #804
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: ldc           #25
42: ldc           #12
44: invokestatic  #26
47: astore_3
48: ldc           #12
50: aload_3
51: ldc           #12
53: invokestatic  #27
56: astore        4
58: aload_3
59: ldc           #12
61: invokevirtual #28
64: astore        5
66: aload_3
67: ldc           #25
69: invokevirtual #29
72: astore        6
74: aload         6
76: invokevirtual #363
79: astore        7
81: aload_1
82: aload         6
84: invokevirtual #380
87: istore        8
89: ldc           #10
91: invokestatic  #193
94: astore        9
96: aload         9
98: invokevirtual #72
101: astore        10
103: aload         9
105: invokevirtual #194
108: astore        11
110: aload         9
112: invokevirtual #222
115: astore        12
117: aload_1
118: aload         12
120: invokevirtual #95
123: new           #88
126: dup
127: invokespecial #89
130: astore        13
132: aload         13
134: ldc           #43
136: invokevirtual #90
139: istore        14
141: aload         13
143: invokevirtual #91
146: astore        15
148: aload         13
150: ldc           #92
152: invokevirtual #93
155: aload         13
157: invokevirtual #570
160: astore        16
162: aload         13
164: invokevirtual #646
167: astore        17
169: ldc           #25
171: ldc           #12
173: invokestatic  #26
176: astore        18
178: ldc           #12
180: aload         18
182: ldc           #12
184: invokestatic  #27
187: astore        19
189: aload         18
191: ldc           #12
193: invokevirtual #28
196: astore        20
198: aload         18
200: ldc           #25
202: invokevirtual #29
205: astore        21
207: aload         18
209: ldc           #13
211: ldc           #13
213: invokevirtual #56
216: astore        22
218: aload         22
220: invokevirtual #396
223: astore        23
225: aload         13
227: aload         23
229: invokevirtual #647
232: istore        24
234: new           #88
237: dup
238: invokespecial #89
241: astore        25
243: aload         25
245: ldc           #43
247: invokevirtual #90
250: istore        26
252: ldc           #25
254: ldc           #12
256: invokestatic  #26
259: astore        27
261: ldc           #12
263: aload         27
265: ldc           #12
267: invokestatic  #27
270: astore        28
272: aload         27
274: ldc           #12
276: invokevirtual #28
279: astore        29
281: aload         27
283: ldc           #25
285: invokevirtual #29
288: astore        30
290: aload         30
292: invokevirtual #363
295: astore        31
297: aload         25
299: aload         30
301: invokevirtual #380
304: istore        32
306: aload         13
308: aload         25
310: invokevirtual #648
313: istore        33
315: invokestatic  #8
318: astore        34
320: aload         34
322: iconst_1
323: invokevirtual #9
326: astore        35
328: new           #40
331: dup
332: aload         35
334: invokespecial #41
337: astore        36
339: new           #42
342: dup
343: ldc           #43
345: ldc           #32
347: invokespecial #44
350: astore        37
352: ldc           #12
354: invokestatic  #45
357: astore        38
359: ldc           #25
361: ldc           #12
363: invokestatic  #26
366: astore        39
368: ldc           #12
370: aload         39
372: ldc           #12
374: invokestatic  #27
377: astore        40
379: aload         39
381: ldc           #12
383: invokevirtual #28
386: astore        41
388: aload         39
390: ldc           #25
392: invokevirtual #29
395: astore        42
397: aload         39
399: invokevirtual #30
402: astore        43
404: aload         37
406: aload         38
408: aload         39
410: invokevirtual #46
413: istore        44
415: aload         36
417: aload         39
419: invokevirtual #47
422: astore        45
424: ldc           #10
426: invokestatic  #193
429: astore        46
431: aload         46
433: invokevirtual #72
436: astore        47
438: aload         46
440: invokevirtual #194
443: astore        48
445: aload         36
447: aload         46
449: invokevirtual #47
452: astore        49
454: aload         49
456: invokevirtual #154
459: astore        50
461: aload         13
463: aload         50
465: invokevirtual #649
468: istore        51
470: aload_1
471: iconst_m1
472: iload         51
474: invokestatic  #137
477: invokevirtual #132
480: ldc_w         #805
483: invokestatic  #35
486: goto          491
489: astore        52
491: new           #16
494: dup
495: invokespecial #17
498: ldc           #18
500: invokevirtual #19
503: iload_2
504: invokevirtual #20
507: ldc           #21
509: invokevirtual #19
512: iconst_0
513: invokevirtual #20
516: ldc           #18
518: invokevirtual #19
521: invokevirtual #22
524: iload_2
525: ifne          532
528: iconst_1
529: goto          533
532: iconst_0
533: invokestatic  #23
536: aload_3
537: invokestatic  #15
540: aload         4
542: invokestatic  #15
545: aload         5
547: invokestatic  #15
550: aload         6
552: invokestatic  #15
555: new           #16
558: dup
559: invokespecial #17
562: ldc           #18
564: invokevirtual #19
567: aload         7
569: invokevirtual #19
572: ldc           #78
574: invokevirtual #19
577: invokevirtual #22
580: aload         7
582: ldc           #10
584: invokestatic  #68
587: new           #16
590: dup
591: invokespecial #17
594: ldc           #18
596: invokevirtual #19
599: iload         8
601: invokevirtual #134
604: ldc           #21
606: invokevirtual #19
609: iconst_m1
610: invokevirtual #134
613: ldc           #18
615: invokevirtual #19
618: invokevirtual #22
621: iload         8
623: iconst_m1
624: if_icmpne     631
627: iconst_1
628: goto          632
631: iconst_0
632: invokestatic  #23
635: aload         9
637: invokestatic  #15
640: new           #16
643: dup
644: invokespecial #17
647: ldc           #18
649: invokevirtual #19
652: aload         10
654: invokevirtual #19
657: ldc           #197
659: invokevirtual #19
662: invokevirtual #22
665: aload         10
667: ldc           #151
669: invokestatic  #68
672: new           #16
675: dup
676: invokespecial #17
679: ldc           #18
681: invokevirtual #19
684: aload         11
686: invokevirtual #19
689: ldc           #67
691: invokevirtual #19
694: invokevirtual #22
697: aload         11
699: ldc           #25
701: invokestatic  #68
704: new           #16
707: dup
708: invokespecial #17
711: ldc           #18
713: invokevirtual #19
716: aload         12
718: invokevirtual #223
721: ldc           #21
723: invokevirtual #19
726: getstatic     #224
729: invokevirtual #223
732: ldc           #18
734: invokevirtual #19
737: invokevirtual #22
740: aload         12
742: getstatic     #224
745: invokevirtual #225
748: invokestatic  #23
751: new           #16
754: dup
755: invokespecial #17
758: ldc           #18
760: invokevirtual #19
763: iload         14
765: invokevirtual #20
768: ldc           #21
770: invokevirtual #19
773: iconst_0
774: invokevirtual #20
777: ldc           #18
779: invokevirtual #19
782: invokevirtual #22
785: iload         14
787: ifne          794
790: iconst_1
791: goto          795
794: iconst_0
795: invokestatic  #23
798: aload         15
800: invokestatic  #79
803: new           #16
806: dup
807: invokespecial #17
810: ldc           #18
812: invokevirtual #19
815: aload         16
817: invokevirtual #19
820: ldc_w         #325
823: invokevirtual #19
826: invokevirtual #22
829: aload         16
831: ldc_w         #262
834: invokestatic  #68
837: new           #16
840: dup
841: invokespecial #17
844: ldc           #18
846: invokevirtual #19
849: aload         17
851: invokevirtual #223
854: ldc_w         #652
857: invokevirtual #19
860: invokevirtual #22
863: aload         17
865: ldc           #92
867: invokestatic  #68
870: aload         18
872: invokestatic  #15
875: aload         19
877: invokestatic  #15
880: aload         20
882: invokestatic  #15
885: aload         21
887: invokestatic  #15
890: aload         22
892: invokestatic  #15
895: aload         23
897: invokestatic  #15
900: new           #16
903: dup
904: invokespecial #17
907: ldc           #18
909: invokevirtual #19
912: iload         24
914: invokevirtual #20
917: ldc           #21
919: invokevirtual #19
922: iconst_0
923: invokevirtual #20
926: ldc           #18
928: invokevirtual #19
931: invokevirtual #22
934: iload         24
936: ifne          943
939: iconst_1
940: goto          944
943: iconst_0
944: invokestatic  #23
947: new           #16
950: dup
951: invokespecial #17
954: ldc           #18
956: invokevirtual #19
959: iload         26
961: invokevirtual #20
964: ldc           #21
966: invokevirtual #19
969: iconst_0
970: invokevirtual #20
973: ldc           #18
975: invokevirtual #19
978: invokevirtual #22
981: iload         26
983: ifne          990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #23
994: aload         27
996: invokestatic  #15
999: aload         28
1001: invokestatic  #15
1004: aload         29
1006: invokestatic  #15
1009: aload         30
1011: invokestatic  #15
1014: new           #16
1017: dup
1018: invokespecial #17
1021: ldc           #18
1023: invokevirtual #19
1026: aload         31
1028: invokevirtual #19
1031: ldc           #78
1033: invokevirtual #19
1036: invokevirtual #22
1039: aload         31
1041: ldc           #10
1043: invokestatic  #68
1046: new           #16
1049: dup
1050: invokespecial #17
1053: ldc           #18
1055: invokevirtual #19
1058: iload         32
1060: invokevirtual #134
1063: ldc           #21
1065: invokevirtual #19
1068: iconst_m1
1069: invokevirtual #134
1072: ldc           #18
1074: invokevirtual #19
1077: invokevirtual #22
1080: iload         32
1082: iconst_m1
1083: if_icmpne     1090
1086: iconst_1
1087: goto          1091
1090: iconst_0
1091: invokestatic  #23
1094: new           #16
1097: dup
1098: invokespecial #17
1101: ldc           #18
1103: invokevirtual #19
1106: iload         33
1108: invokevirtual #20
1111: ldc           #21
1113: invokevirtual #19
1116: iconst_0
1117: invokevirtual #20
1120: ldc           #18
1122: invokevirtual #19
1125: invokevirtual #22
1128: iload         33
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #23
1141: aload         34
1143: invokestatic  #15
1146: aload         35
1148: invokestatic  #15
1151: aload         38
1153: invokestatic  #15
1156: aload         39
1158: invokestatic  #15
1161: aload         40
1163: invokestatic  #15
1166: aload         41
1168: invokestatic  #15
1171: aload         42
1173: invokestatic  #15
1176: aload         43
1178: invokestatic  #15
1181: new           #16
1184: dup
1185: invokespecial #17
1188: ldc           #18
1190: invokevirtual #19
1193: iload         44
1195: invokevirtual #20
1198: ldc           #21
1200: invokevirtual #19
1203: iconst_0
1204: invokevirtual #20
1207: ldc           #18
1209: invokevirtual #19
1212: invokevirtual #22
1215: iload         44
1217: ifne          1224
1220: iconst_1
1221: goto          1225
1224: iconst_0
1225: invokestatic  #23
1228: aload         45
1230: invokestatic  #15
1233: aload         46
1235: invokestatic  #15
1238: new           #16
1241: dup
1242: invokespecial #17
1245: ldc           #18
1247: invokevirtual #19
1250: aload         47
1252: invokevirtual #19
1255: ldc           #197
1257: invokevirtual #19
1260: invokevirtual #22
1263: aload         47
1265: ldc           #151
1267: invokestatic  #68
1270: new           #16
1273: dup
1274: invokespecial #17
1277: ldc           #18
1279: invokevirtual #19
1282: aload         48
1284: invokevirtual #19
1287: ldc           #67
1289: invokevirtual #19
1292: invokevirtual #22
1295: aload         48
1297: ldc           #25
1299: invokestatic  #68
1302: aload         49
1304: invokestatic  #15
1307: aload         50
1309: invokestatic  #15
1312: new           #16
1315: dup
1316: invokespecial #17
1319: ldc           #18
1321: invokevirtual #19
1324: iload         51
1326: invokevirtual #20
1329: ldc           #21
1331: invokevirtual #19
1334: iconst_1
1335: invokevirtual #20
1338: ldc           #18
1340: invokevirtual #19
1343: invokevirtual #22
1346: iload         51
1348: iconst_1
1349: if_icmpne     1356
1352: iconst_1
1353: goto          1357
1356: iconst_0
1357: invokestatic  #23
1360: return
Exception table:
from    to  target type
470   486   489   Class java/lang/IndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test243
Start line: 12962
End line: 13009
Method source code: 
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        boolean boolean37 = tag36.preserveWhitespace();
        boolean boolean38 = tag36.isInline();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #806
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: aload         21
204: invokevirtual #429
207: istore        22
209: aload         21
211: invokevirtual #807
214: istore        23
216: aload_1
217: invokestatic  #15
220: aload_2
221: invokestatic  #15
224: aload         5
226: invokestatic  #15
229: aload         6
231: invokestatic  #15
234: aload         7
236: invokestatic  #15
239: aload         8
241: invokestatic  #15
244: aload         9
246: invokestatic  #15
249: aload         10
251: invokestatic  #15
254: new           #16
257: dup
258: invokespecial #17
261: ldc           #18
263: invokevirtual #19
266: iload         11
268: invokevirtual #20
271: ldc           #21
273: invokevirtual #19
276: iconst_0
277: invokevirtual #20
280: ldc           #18
282: invokevirtual #19
285: invokevirtual #22
288: iload         11
290: ifne          297
293: iconst_1
294: goto          298
297: iconst_0
298: invokestatic  #23
301: aload         12
303: invokestatic  #15
306: aload         13
308: invokestatic  #15
311: aload         14
313: invokestatic  #15
316: aload         15
318: invokestatic  #15
321: aload         16
323: invokestatic  #15
326: new           #16
329: dup
330: invokespecial #17
333: ldc           #18
335: invokevirtual #19
338: aload         17
340: invokevirtual #19
343: ldc           #78
345: invokevirtual #19
348: invokevirtual #22
351: aload         17
353: ldc           #10
355: invokestatic  #68
358: new           #16
361: dup
362: invokespecial #17
365: ldc           #18
367: invokevirtual #19
370: aload         18
372: invokevirtual #19
375: ldc           #67
377: invokevirtual #19
380: invokevirtual #22
383: aload         18
385: ldc           #25
387: invokestatic  #68
390: aload         19
392: invokestatic  #79
395: aload         20
397: invokestatic  #15
400: aload         21
402: invokestatic  #15
405: new           #16
408: dup
409: invokespecial #17
412: ldc           #18
414: invokevirtual #19
417: iload         22
419: invokevirtual #20
422: ldc           #21
424: invokevirtual #19
427: iconst_0
428: invokevirtual #20
431: ldc           #18
433: invokevirtual #19
436: invokevirtual #22
439: iload         22
441: ifne          448
444: iconst_1
445: goto          449
448: iconst_0
449: invokestatic  #23
452: new           #16
455: dup
456: invokespecial #17
459: ldc           #18
461: invokevirtual #19
464: iload         23
466: invokevirtual #20
469: ldc           #21
471: invokevirtual #19
474: iconst_1
475: invokevirtual #20
478: ldc           #18
480: invokevirtual #19
483: invokevirtual #22
486: iload         23
488: iconst_1
489: if_icmpne     496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #23
500: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test244
Start line: 13012
End line: 13093
Method source code: 
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element29 = document26.empty();
        org.jsoup.nodes.Element element31 = element29.toggleClass("#document");
        org.jsoup.select.Elements elements33 = element31.getElementsByAttributeStarting(":lt(32)");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = element31.siblingNodes();
        boolean boolean35 = objList0.retainAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList34);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan37 = new org.jsoup.select.Evaluator.IndexLessThan((int) ' ');
        java.lang.String str38 = indexLessThan37.toString();
        boolean boolean39 = objList0.equals((java.lang.Object) str38);
        org.jsoup.safety.Whitelist whitelist40 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist42 = whitelist40.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner43 = new org.jsoup.safety.Cleaner(whitelist42);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining46 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document48 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document52 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList54 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document52, "hi!");
        org.jsoup.nodes.Element element56 = document52.tagName("hi!");
        org.jsoup.nodes.Element element58 = document52.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings59 = document52.outputSettings();
        boolean boolean60 = attributeWithValueContaining46.matches((org.jsoup.nodes.Element) document48, (org.jsoup.nodes.Element) document52);
        org.jsoup.nodes.Document document61 = cleaner43.clean(document52);
        org.jsoup.nodes.Document document63 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str64 = document63.toString();
        java.lang.String str65 = document63.baseUri();
        org.jsoup.nodes.Document document66 = cleaner43.clean(document63);
        boolean boolean67 = objList0.offerLast((java.lang.Object) document63);
        java.lang.Object obj68 = objList0.getFirst();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(elements33);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ":lt(32)" + "'", str38, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(outputSettings59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str64, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "<html>\n <head></head>\n <body>   \n </body>\n</html>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #808
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        12
132: ldc           #12
134: aload         12
136: ldc           #12
138: invokestatic  #27
141: astore        13
143: aload         12
145: invokevirtual #103
148: astore        14
150: aload         14
152: ldc           #13
154: invokevirtual #177
157: astore        15
159: aload         15
161: ldc           #43
163: invokevirtual #426
166: astore        16
168: aload         15
170: invokevirtual #396
173: astore        17
175: aload_1
176: aload         17
178: invokevirtual #584
181: istore        18
183: new           #48
186: dup
187: bipush        32
189: invokespecial #49
192: astore        19
194: aload         19
196: invokevirtual #585
199: astore        20
201: aload_1
202: aload         20
204: invokevirtual #90
207: istore        21
209: invokestatic  #8
212: astore        22
214: aload         22
216: iconst_1
217: invokevirtual #9
220: astore        23
222: new           #40
225: dup
226: aload         23
228: invokespecial #41
231: astore        24
233: new           #42
236: dup
237: ldc           #43
239: ldc           #32
241: invokespecial #44
244: astore        25
246: ldc           #12
248: invokestatic  #45
251: astore        26
253: ldc           #25
255: ldc           #12
257: invokestatic  #26
260: astore        27
262: ldc           #12
264: aload         27
266: ldc           #12
268: invokestatic  #27
271: astore        28
273: aload         27
275: ldc           #12
277: invokevirtual #28
280: astore        29
282: aload         27
284: ldc           #25
286: invokevirtual #29
289: astore        30
291: aload         27
293: invokevirtual #30
296: astore        31
298: aload         25
300: aload         26
302: aload         27
304: invokevirtual #46
307: istore        32
309: aload         24
311: aload         27
313: invokevirtual #47
316: astore        33
318: ldc           #10
320: invokestatic  #193
323: astore        34
325: aload         34
327: invokevirtual #72
330: astore        35
332: aload         34
334: invokevirtual #194
337: astore        36
339: aload         24
341: aload         34
343: invokevirtual #47
346: astore        37
348: aload_1
349: aload         34
351: invokevirtual #282
354: istore        38
356: aload_1
357: invokevirtual #562
360: astore        39
362: aload_2
363: invokestatic  #15
366: aload_3
367: invokestatic  #15
370: aload         4
372: invokestatic  #15
375: aload         5
377: invokestatic  #15
380: aload         6
382: invokestatic  #15
385: aload         7
387: invokestatic  #15
390: aload         8
392: invokestatic  #15
395: aload         9
397: invokestatic  #15
400: aload         10
402: invokestatic  #15
405: aload         11
407: invokestatic  #15
410: aload         12
412: invokestatic  #15
415: aload         13
417: invokestatic  #15
420: aload         14
422: invokestatic  #15
425: aload         15
427: invokestatic  #15
430: aload         16
432: invokestatic  #15
435: aload         17
437: invokestatic  #15
440: new           #16
443: dup
444: invokespecial #17
447: ldc           #18
449: invokevirtual #19
452: iload         18
454: invokevirtual #20
457: ldc           #21
459: invokevirtual #19
462: iconst_1
463: invokevirtual #20
466: ldc           #18
468: invokevirtual #19
471: invokevirtual #22
474: iload         18
476: iconst_1
477: if_icmpne     484
480: iconst_1
481: goto          485
484: iconst_0
485: invokestatic  #23
488: new           #16
491: dup
492: invokespecial #17
495: ldc           #18
497: invokevirtual #19
500: aload         20
502: invokevirtual #19
505: ldc           #128
507: invokevirtual #19
510: invokevirtual #22
513: aload         20
515: ldc           #43
517: invokestatic  #68
520: new           #16
523: dup
524: invokespecial #17
527: ldc           #18
529: invokevirtual #19
532: iload         21
534: invokevirtual #20
537: ldc           #21
539: invokevirtual #19
542: iconst_0
543: invokevirtual #20
546: ldc           #18
548: invokevirtual #19
551: invokevirtual #22
554: iload         21
556: ifne          563
559: iconst_1
560: goto          564
563: iconst_0
564: invokestatic  #23
567: aload         22
569: invokestatic  #15
572: aload         23
574: invokestatic  #15
577: aload         26
579: invokestatic  #15
582: aload         27
584: invokestatic  #15
587: aload         28
589: invokestatic  #15
592: aload         29
594: invokestatic  #15
597: aload         30
599: invokestatic  #15
602: aload         31
604: invokestatic  #15
607: new           #16
610: dup
611: invokespecial #17
614: ldc           #18
616: invokevirtual #19
619: iload         32
621: invokevirtual #20
624: ldc           #21
626: invokevirtual #19
629: iconst_0
630: invokevirtual #20
633: ldc           #18
635: invokevirtual #19
638: invokevirtual #22
641: iload         32
643: ifne          650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #23
654: aload         33
656: invokestatic  #15
659: aload         34
661: invokestatic  #15
664: new           #16
667: dup
668: invokespecial #17
671: ldc           #18
673: invokevirtual #19
676: aload         35
678: invokevirtual #19
681: ldc           #197
683: invokevirtual #19
686: invokevirtual #22
689: aload         35
691: ldc           #151
693: invokestatic  #68
696: new           #16
699: dup
700: invokespecial #17
703: ldc           #18
705: invokevirtual #19
708: aload         36
710: invokevirtual #19
713: ldc           #67
715: invokevirtual #19
718: invokevirtual #22
721: aload         36
723: ldc           #25
725: invokestatic  #68
728: aload         37
730: invokestatic  #15
733: new           #16
736: dup
737: invokespecial #17
740: ldc           #18
742: invokevirtual #19
745: iload         38
747: invokevirtual #20
750: ldc           #21
752: invokevirtual #19
755: iconst_1
756: invokevirtual #20
759: ldc           #18
761: invokevirtual #19
764: invokevirtual #22
767: iload         38
769: iconst_1
770: if_icmpne     777
773: iconst_1
774: goto          778
777: iconst_0
778: invokestatic  #23
781: aload         39
783: invokestatic  #15
786: aload         39
788: invokevirtual #571
791: ldc           #151
793: invokestatic  #290
796: aload         39
798: invokestatic  #572
801: ldc           #151
803: invokestatic  #290
806: aload         39
808: invokestatic  #573
811: ldc           #151
813: invokestatic  #290
816: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test245
Start line: 13096
End line: 13111
Method source code: 
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist6.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist10 = whitelist8.preserveRelativeLinks(false);
        java.lang.String str11 = org.jsoup.Jsoup.clean("[:lt(32)]", ":contains(:gt(100)", whitelist8);
        java.lang.String str12 = org.jsoup.Jsoup.clean(":contains(.hi!", "[^    ]", whitelist8);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[:lt(32)]" + "'", str11, "[:lt(32)]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ":contains(.hi!" + "'", str12, ":contains(.hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #809
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: aload_3
42: iconst_0
43: invokevirtual #9
46: astore        4
48: ldc           #58
50: ldc           #214
52: aload_3
53: invokestatic  #94
56: astore        5
58: ldc_w         #810
61: ldc_w         #479
64: aload_3
65: invokestatic  #94
68: astore        6
70: aload_1
71: invokestatic  #15
74: aload_2
75: invokestatic  #15
78: aload_3
79: invokestatic  #15
82: aload         4
84: invokestatic  #15
87: new           #16
90: dup
91: invokespecial #17
94: ldc           #18
96: invokevirtual #19
99: aload         5
101: invokevirtual #19
104: ldc           #184
106: invokevirtual #19
109: invokevirtual #22
112: aload         5
114: ldc           #58
116: invokestatic  #68
119: new           #16
122: dup
123: invokespecial #17
126: ldc           #18
128: invokevirtual #19
131: aload         6
133: invokevirtual #19
136: ldc_w         #811
139: invokevirtual #19
142: invokevirtual #22
145: aload         6
147: ldc_w         #810
150: invokestatic  #68
153: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test246
Start line: 13114
End line: 13165
Method source code: 
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str4 = org.jsoup.Jsoup.clean(":lt(32)", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList12 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document10, "hi!");
        org.jsoup.nodes.Element element13 = document10.empty();
        org.jsoup.nodes.Element element15 = document10.removeClass("hi!");
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document19, "hi!");
        org.jsoup.nodes.Element element23 = document19.tagName("hi!");
        org.jsoup.nodes.Element element25 = document19.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = document19.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings26.prettyPrint(false);
        org.jsoup.nodes.Document document29 = document10.outputSettings(outputSettings28);
        java.lang.String str30 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist3, outputSettings28);
        org.jsoup.safety.Whitelist whitelist32 = whitelist3.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist36 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist38 = whitelist36.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist40 = whitelist38.preserveRelativeLinks(false);
        java.lang.String[] strArray49 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean50 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray49);
        org.jsoup.safety.Whitelist whitelist51 = whitelist40.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray49);
        boolean boolean52 = org.jsoup.helper.StringUtil.in(" text=\"hi!\" #document=\"#document\"", strArray49);
        org.jsoup.safety.Whitelist whitelist53 = whitelist32.addProtocols("*", "<html>\n <head></head>\n <body></body>\n</html>\n<[<!--[hi!$=<html> <head></head> <body></body> </html>]-->!=hi!]></[<!--[hi!$=<html> <head></head> <body></body> </html>]-->!=hi!]>", strArray49);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":lt(32)" + "'", str4, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[:lt(32)]" + "'", str30, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(whitelist53);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #812
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: aload_1
154: iconst_1
155: invokevirtual #9
158: astore        16
160: invokestatic  #8
163: astore        17
165: aload         17
167: iconst_1
168: invokevirtual #9
171: astore        18
173: aload         18
175: iconst_0
176: invokevirtual #9
179: astore        19
181: iconst_5
182: anewarray     #119
185: dup
186: iconst_0
187: ldc           #13
189: aastore
190: dup
191: iconst_1
192: ldc           #32
194: aastore
195: dup
196: iconst_2
197: ldc           #10
199: aastore
200: dup
201: iconst_3
202: ldc           #43
204: aastore
205: dup
206: iconst_4
207: ldc           #58
209: aastore
210: astore        20
212: ldc           #10
214: aload         20
216: invokestatic  #123
219: istore        21
221: aload         19
223: ldc           #120
225: ldc           #55
227: aload         20
229: invokevirtual #122
232: astore        22
234: ldc_w         #552
237: aload         20
239: invokestatic  #123
242: istore        23
244: aload         16
246: ldc           #126
248: ldc_w         #486
251: aload         20
253: invokevirtual #122
256: astore        24
258: aload_1
259: invokestatic  #15
262: new           #16
265: dup
266: invokespecial #17
269: ldc           #18
271: invokevirtual #19
274: aload_2
275: invokevirtual #19
278: ldc           #128
280: invokevirtual #19
283: invokevirtual #22
286: aload_2
287: ldc           #43
289: invokestatic  #68
292: new           #16
295: dup
296: invokespecial #17
299: ldc           #18
301: invokevirtual #19
304: iload_3
305: invokevirtual #20
308: ldc           #21
310: invokevirtual #19
313: iconst_0
314: invokevirtual #20
317: ldc           #18
319: invokevirtual #19
322: invokevirtual #22
325: iload_3
326: ifne          333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #23
337: aload         4
339: invokestatic  #15
342: aload         5
344: invokestatic  #15
347: aload         6
349: invokestatic  #15
352: aload         7
354: invokestatic  #15
357: aload         8
359: invokestatic  #15
362: aload         9
364: invokestatic  #15
367: aload         10
369: invokestatic  #15
372: aload         11
374: invokestatic  #15
377: aload         12
379: invokestatic  #15
382: aload         13
384: invokestatic  #15
387: aload         14
389: invokestatic  #15
392: new           #16
395: dup
396: invokespecial #17
399: ldc           #18
401: invokevirtual #19
404: aload         15
406: invokevirtual #19
409: ldc           #184
411: invokevirtual #19
414: invokevirtual #22
417: aload         15
419: ldc           #58
421: invokestatic  #68
424: aload         16
426: invokestatic  #15
429: aload         17
431: invokestatic  #15
434: aload         18
436: invokestatic  #15
439: aload         19
441: invokestatic  #15
444: aload         20
446: invokestatic  #15
449: new           #16
452: dup
453: invokespecial #17
456: ldc           #18
458: invokevirtual #19
461: iload         21
463: invokevirtual #20
466: ldc           #21
468: invokevirtual #19
471: iconst_1
472: invokevirtual #20
475: ldc           #18
477: invokevirtual #19
480: invokevirtual #22
483: iload         21
485: iconst_1
486: if_icmpne     493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #23
497: aload         22
499: invokestatic  #15
502: new           #16
505: dup
506: invokespecial #17
509: ldc           #18
511: invokevirtual #19
514: iload         23
516: invokevirtual #20
519: ldc           #21
521: invokevirtual #19
524: iconst_0
525: invokevirtual #20
528: ldc           #18
530: invokevirtual #19
533: invokevirtual #22
536: iload         23
538: ifne          545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #23
549: aload         24
551: invokestatic  #15
554: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test247
Start line: 13168
End line: 13247
Method source code: 
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.ContainsOwnText containsOwnText5 = new org.jsoup.select.Evaluator.ContainsOwnText("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String str6 = containsOwnText5.toString();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList7 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean9 = objList7.equals((java.lang.Object) ":lt(32)");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList10 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document14 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList16 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document14, "hi!");
        org.jsoup.nodes.Element element18 = document14.text("");
        int int19 = objList10.lastIndexOf((java.lang.Object) document14);
        objList7.addFirst((java.lang.Object) document14);
        java.util.Spliterator<java.lang.Object> objSpliterator21 = objList7.spliterator();
        java.util.regex.Pattern pattern23 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching24 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        java.lang.String str35 = document28.toString();
        org.jsoup.nodes.Element element37 = document28.prependElement("\nhi!");
        org.jsoup.select.Elements elements39 = document28.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document43 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList45 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document43, "hi!");
        org.jsoup.nodes.Element element47 = document43.tagName("hi!");
        org.jsoup.nodes.Element element49 = document43.append("");
        boolean boolean50 = attributeWithValueMatching24.matches((org.jsoup.nodes.Element) document28, (org.jsoup.nodes.Element) document43);
        org.jsoup.nodes.Document document51 = document43.normalise();
        org.jsoup.nodes.Document.OutputSettings outputSettings52 = document51.outputSettings();
        boolean boolean53 = objList7.offerLast((java.lang.Object) document51);
        org.jsoup.nodes.Document document56 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element58 = document56.text(".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan60 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        boolean boolean61 = document56.equals((java.lang.Object) (-1));
        boolean boolean62 = document56.isBlock();
        boolean boolean63 = containsOwnText5.matches((org.jsoup.nodes.Element) document51, (org.jsoup.nodes.Element) document56);
        org.jsoup.nodes.Document document64 = cleaner3.clean(document56);
        document64.setBaseUri(":containsOwn(");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Node node68 = document64.childNode((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]" + "'", str6, ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(document14);
        org.junit.Assert.assertNotNull(nodeList16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objSpliterator21);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str35, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(nodeList45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(outputSettings52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(document64);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #813
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #496
47: dup
48: ldc           #249
50: invokespecial #497
53: astore        4
55: aload         4
57: invokevirtual #498
60: astore        5
62: new           #88
65: dup
66: invokespecial #89
69: astore        6
71: aload         6
73: ldc           #43
75: invokevirtual #90
78: istore        7
80: new           #88
83: dup
84: invokespecial #89
87: astore        8
89: ldc           #25
91: ldc           #12
93: invokestatic  #26
96: astore        9
98: ldc           #12
100: aload         9
102: ldc           #12
104: invokestatic  #27
107: astore        10
109: aload         9
111: ldc           #25
113: invokevirtual #64
116: astore        11
118: aload         8
120: aload         9
122: invokevirtual #130
125: istore        12
127: aload         6
129: aload         9
131: invokevirtual #93
134: aload         6
136: invokevirtual #283
139: astore        13
141: aconst_null
142: astore        14
144: new           #96
147: dup
148: ldc           #25
150: aload         14
152: invokespecial #97
155: astore        15
157: ldc           #25
159: ldc           #12
161: invokestatic  #26
164: astore        16
166: ldc           #12
168: aload         16
170: ldc           #12
172: invokestatic  #27
175: astore        17
177: aload         16
179: ldc           #12
181: invokevirtual #28
184: astore        18
186: aload         16
188: ldc           #25
190: invokevirtual #29
193: astore        19
195: aload         16
197: invokevirtual #72
200: astore        20
202: aload         16
204: ldc           #98
206: invokevirtual #99
209: astore        21
211: aload         16
213: ldc           #25
215: invokevirtual #100
218: astore        22
220: ldc           #25
222: ldc           #12
224: invokestatic  #26
227: astore        23
229: ldc           #12
231: aload         23
233: ldc           #12
235: invokestatic  #27
238: astore        24
240: aload         23
242: ldc           #12
244: invokevirtual #28
247: astore        25
249: aload         23
251: ldc           #25
253: invokevirtual #29
256: astore        26
258: aload         15
260: aload         16
262: aload         23
264: invokevirtual #101
267: istore        27
269: aload         23
271: invokevirtual #102
274: astore        28
276: aload         28
278: invokevirtual #30
281: astore        29
283: aload         6
285: aload         28
287: invokevirtual #282
290: istore        30
292: ldc           #25
294: ldc           #12
296: invokestatic  #26
299: astore        31
301: aload         31
303: ldc           #32
305: invokevirtual #64
308: astore        32
310: new           #48
313: dup
314: iconst_m1
315: invokespecial #49
318: astore        33
320: aload         31
322: iconst_m1
323: invokestatic  #499
326: invokevirtual #202
329: istore        34
331: aload         31
333: invokevirtual #500
336: istore        35
338: aload         4
340: aload         28
342: aload         31
344: invokevirtual #501
347: istore        36
349: aload_3
350: aload         31
352: invokevirtual #47
355: astore        37
357: aload         37
359: ldc_w         #656
362: invokevirtual #688
365: aload         37
367: iconst_m1
368: invokevirtual #502
371: astore        38
373: ldc_w         #814
376: invokestatic  #35
379: goto          384
382: astore        38
384: aload_1
385: invokestatic  #15
388: aload_2
389: invokestatic  #15
392: new           #16
395: dup
396: invokespecial #17
399: ldc           #18
401: invokevirtual #19
404: aload         5
406: invokevirtual #19
409: ldc_w         #504
412: invokevirtual #19
415: invokevirtual #22
418: aload         5
420: ldc           #110
422: invokestatic  #68
425: new           #16
428: dup
429: invokespecial #17
432: ldc           #18
434: invokevirtual #19
437: iload         7
439: invokevirtual #20
442: ldc           #21
444: invokevirtual #19
447: iconst_0
448: invokevirtual #20
451: ldc           #18
453: invokevirtual #19
456: invokevirtual #22
459: iload         7
461: ifne          468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #23
472: aload         9
474: invokestatic  #15
477: aload         10
479: invokestatic  #15
482: aload         11
484: invokestatic  #15
487: new           #16
490: dup
491: invokespecial #17
494: ldc           #18
496: invokevirtual #19
499: iload         12
501: invokevirtual #134
504: ldc           #21
506: invokevirtual #19
509: iconst_m1
510: invokevirtual #134
513: ldc           #18
515: invokevirtual #19
518: invokevirtual #22
521: iload         12
523: iconst_m1
524: if_icmpne     531
527: iconst_1
528: goto          532
531: iconst_0
532: invokestatic  #23
535: aload         13
537: invokestatic  #15
540: aload         16
542: invokestatic  #15
545: aload         17
547: invokestatic  #15
550: aload         18
552: invokestatic  #15
555: aload         19
557: invokestatic  #15
560: new           #16
563: dup
564: invokespecial #17
567: ldc           #18
569: invokevirtual #19
572: aload         20
574: invokevirtual #19
577: ldc           #78
579: invokevirtual #19
582: invokevirtual #22
585: aload         20
587: ldc           #10
589: invokestatic  #68
592: aload         21
594: invokestatic  #15
597: aload         22
599: invokestatic  #15
602: aload         23
604: invokestatic  #15
607: aload         24
609: invokestatic  #15
612: aload         25
614: invokestatic  #15
617: aload         26
619: invokestatic  #15
622: new           #16
625: dup
626: invokespecial #17
629: ldc           #18
631: invokevirtual #19
634: iload         27
636: invokevirtual #20
639: ldc           #21
641: invokevirtual #19
644: iconst_0
645: invokevirtual #20
648: ldc           #18
650: invokevirtual #19
653: invokevirtual #22
656: iload         27
658: ifne          665
661: iconst_1
662: goto          666
665: iconst_0
666: invokestatic  #23
669: aload         28
671: invokestatic  #15
674: aload         29
676: invokestatic  #15
679: new           #16
682: dup
683: invokespecial #17
686: ldc           #18
688: invokevirtual #19
691: iload         30
693: invokevirtual #20
696: ldc           #21
698: invokevirtual #19
701: iconst_1
702: invokevirtual #20
705: ldc           #18
707: invokevirtual #19
710: invokevirtual #22
713: iload         30
715: iconst_1
716: if_icmpne     723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #23
727: aload         31
729: invokestatic  #15
732: aload         32
734: invokestatic  #15
737: new           #16
740: dup
741: invokespecial #17
744: ldc           #18
746: invokevirtual #19
749: iload         34
751: invokevirtual #20
754: ldc           #21
756: invokevirtual #19
759: iconst_0
760: invokevirtual #20
763: ldc           #18
765: invokevirtual #19
768: invokevirtual #22
771: iload         34
773: ifne          780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #23
784: new           #16
787: dup
788: invokespecial #17
791: ldc           #18
793: invokevirtual #19
796: iload         35
798: invokevirtual #20
801: ldc           #21
803: invokevirtual #19
806: iconst_0
807: invokevirtual #20
810: ldc           #18
812: invokevirtual #19
815: invokevirtual #22
818: iload         35
820: ifne          827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #23
831: new           #16
834: dup
835: invokespecial #17
838: ldc           #18
840: invokevirtual #19
843: iload         36
845: invokevirtual #20
848: ldc           #21
850: invokevirtual #19
853: iconst_0
854: invokevirtual #20
857: ldc           #18
859: invokevirtual #19
862: invokevirtual #22
865: iload         36
867: ifne          874
870: iconst_1
871: goto          875
874: iconst_0
875: invokestatic  #23
878: aload         37
880: invokestatic  #15
883: return
Exception table:
from    to  target type
365   379   382   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test248
Start line: 13250
End line: 13279
Method source code: 
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        org.jsoup.nodes.Element element9 = document3.text("[:lt(32)]");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList10 = document3.dataNodes();
        org.jsoup.parser.Tag tag11 = document3.tag();
        java.lang.String str12 = tag11.toString();
        boolean boolean13 = tag11.formatAsBlock();
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str16 = org.jsoup.Jsoup.clean("", whitelist15);
        org.jsoup.safety.Whitelist whitelist20 = whitelist15.addEnforcedAttribute("#comment", "[:lt(10)!=[hi!=.<html>\n <head></head>\n <body></body>\n</html>]]", "[    =hi!]");
        boolean boolean21 = tag11.equals((java.lang.Object) whitelist20);
        boolean boolean22 = tag11.isBlock();
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(dataNodeList10);
        org.junit.Assert.assertNotNull(tag11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #816
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #58
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #348
61: astore        5
63: aload_1
64: invokevirtual #207
67: astore        6
69: aload         6
71: invokevirtual #817
74: astore        7
76: aload         6
78: invokevirtual #456
81: istore        8
83: invokestatic  #118
86: astore        9
88: ldc           #25
90: aload         9
92: invokestatic  #81
95: astore        10
97: aload         9
99: ldc           #114
101: ldc_w         #450
104: ldc_w         #319
107: invokevirtual #11
110: astore        11
112: aload         6
114: aload         11
116: invokevirtual #428
119: istore        12
121: aload         6
123: invokevirtual #425
126: istore        13
128: aload_1
129: invokestatic  #15
132: aload_2
133: invokestatic  #15
136: aload_3
137: invokestatic  #15
140: aload         4
142: invokestatic  #15
145: aload         5
147: invokestatic  #15
150: aload         6
152: invokestatic  #15
155: new           #16
158: dup
159: invokespecial #17
162: ldc           #18
164: invokevirtual #19
167: aload         7
169: invokevirtual #19
172: ldc           #211
174: invokevirtual #19
177: invokevirtual #22
180: aload         7
182: ldc           #12
184: invokestatic  #68
187: new           #16
190: dup
191: invokespecial #17
194: ldc           #18
196: invokevirtual #19
199: iload         8
201: invokevirtual #20
204: ldc           #21
206: invokevirtual #19
209: iconst_1
210: invokevirtual #20
213: ldc           #18
215: invokevirtual #19
218: invokevirtual #22
221: iload         8
223: iconst_1
224: if_icmpne     231
227: iconst_1
228: goto          232
231: iconst_0
232: invokestatic  #23
235: aload         9
237: invokestatic  #15
240: new           #16
243: dup
244: invokespecial #17
247: ldc           #18
249: invokevirtual #19
252: aload         10
254: invokevirtual #19
257: ldc           #67
259: invokevirtual #19
262: invokevirtual #22
265: aload         10
267: ldc           #25
269: invokestatic  #68
272: aload         11
274: invokestatic  #15
277: new           #16
280: dup
281: invokespecial #17
284: ldc           #18
286: invokevirtual #19
289: iload         12
291: invokevirtual #20
294: ldc           #21
296: invokevirtual #19
299: iconst_0
300: invokevirtual #20
303: ldc           #18
305: invokevirtual #19
308: invokevirtual #22
311: iload         12
313: ifne          320
316: iconst_1
317: goto          321
320: iconst_0
321: invokestatic  #23
324: new           #16
327: dup
328: invokespecial #17
331: ldc           #18
333: invokevirtual #19
336: iload         13
338: invokevirtual #20
341: ldc           #21
343: invokevirtual #19
346: iconst_0
347: invokevirtual #20
350: ldc           #18
352: invokevirtual #19
355: invokevirtual #22
358: iload         13
360: ifne          367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #23
371: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test249
Start line: 13282
End line: 13332
Method source code: 
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        document3.title("hi!");
        org.jsoup.nodes.Element element11 = document3.prependElement("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.select.Elements elements13 = document3.getElementsContainingText("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document.QuirksMode quirksMode14 = document3.quirksMode();
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner18 = new org.jsoup.safety.Cleaner(whitelist17);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining21 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document23 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document27 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList29 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document27, "hi!");
        org.jsoup.nodes.Element element31 = document27.tagName("hi!");
        org.jsoup.nodes.Element element33 = document27.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings34 = document27.outputSettings();
        boolean boolean35 = attributeWithValueContaining21.matches((org.jsoup.nodes.Element) document23, (org.jsoup.nodes.Element) document27);
        org.jsoup.nodes.Document document36 = cleaner18.clean(document27);
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str39 = document38.toString();
        java.lang.String str40 = document38.baseUri();
        org.jsoup.nodes.Document document41 = cleaner18.clean(document38);
        org.jsoup.nodes.Document.QuirksMode quirksMode42 = document41.quirksMode();
        org.jsoup.nodes.Document document43 = document3.quirksMode(quirksMode42);
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(elements13);
        org.junit.Assert.assertTrue("'" + quirksMode14 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode14.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(outputSettings34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str39, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertTrue("'" + quirksMode42 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode42.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document43);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #818
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #12
52: invokevirtual #451
55: aload_1
56: ldc           #10
58: invokevirtual #99
61: astore        4
63: aload_1
64: ldc           #10
66: invokevirtual #819
69: astore        5
71: aload_1
72: invokevirtual #222
75: astore        6
77: invokestatic  #8
80: astore        7
82: aload         7
84: iconst_1
85: invokevirtual #9
88: astore        8
90: new           #40
93: dup
94: aload         8
96: invokespecial #41
99: astore        9
101: new           #42
104: dup
105: ldc           #43
107: ldc           #32
109: invokespecial #44
112: astore        10
114: ldc           #12
116: invokestatic  #45
119: astore        11
121: ldc           #25
123: ldc           #12
125: invokestatic  #26
128: astore        12
130: ldc           #12
132: aload         12
134: ldc           #12
136: invokestatic  #27
139: astore        13
141: aload         12
143: ldc           #12
145: invokevirtual #28
148: astore        14
150: aload         12
152: ldc           #25
154: invokevirtual #29
157: astore        15
159: aload         12
161: invokevirtual #30
164: astore        16
166: aload         10
168: aload         11
170: aload         12
172: invokevirtual #46
175: istore        17
177: aload         9
179: aload         12
181: invokevirtual #47
184: astore        18
186: ldc           #10
188: invokestatic  #193
191: astore        19
193: aload         19
195: invokevirtual #72
198: astore        20
200: aload         19
202: invokevirtual #194
205: astore        21
207: aload         9
209: aload         19
211: invokevirtual #47
214: astore        22
216: aload         22
218: invokevirtual #222
221: astore        23
223: aload_1
224: aload         23
226: invokevirtual #481
229: astore        24
231: aload_1
232: invokestatic  #15
235: aload_2
236: invokestatic  #15
239: aload_3
240: invokestatic  #15
243: aload         4
245: invokestatic  #15
248: aload         5
250: invokestatic  #15
253: new           #16
256: dup
257: invokespecial #17
260: ldc           #18
262: invokevirtual #19
265: aload         6
267: invokevirtual #223
270: ldc           #21
272: invokevirtual #19
275: getstatic     #224
278: invokevirtual #223
281: ldc           #18
283: invokevirtual #19
286: invokevirtual #22
289: aload         6
291: getstatic     #224
294: invokevirtual #225
297: invokestatic  #23
300: aload         7
302: invokestatic  #15
305: aload         8
307: invokestatic  #15
310: aload         11
312: invokestatic  #15
315: aload         12
317: invokestatic  #15
320: aload         13
322: invokestatic  #15
325: aload         14
327: invokestatic  #15
330: aload         15
332: invokestatic  #15
335: aload         16
337: invokestatic  #15
340: new           #16
343: dup
344: invokespecial #17
347: ldc           #18
349: invokevirtual #19
352: iload         17
354: invokevirtual #20
357: ldc           #21
359: invokevirtual #19
362: iconst_0
363: invokevirtual #20
366: ldc           #18
368: invokevirtual #19
371: invokevirtual #22
374: iload         17
376: ifne          383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #23
387: aload         18
389: invokestatic  #15
392: aload         19
394: invokestatic  #15
397: new           #16
400: dup
401: invokespecial #17
404: ldc           #18
406: invokevirtual #19
409: aload         20
411: invokevirtual #19
414: ldc           #197
416: invokevirtual #19
419: invokevirtual #22
422: aload         20
424: ldc           #151
426: invokestatic  #68
429: new           #16
432: dup
433: invokespecial #17
436: ldc           #18
438: invokevirtual #19
441: aload         21
443: invokevirtual #19
446: ldc           #67
448: invokevirtual #19
451: invokevirtual #22
454: aload         21
456: ldc           #25
458: invokestatic  #68
461: aload         22
463: invokestatic  #15
466: new           #16
469: dup
470: invokespecial #17
473: ldc           #18
475: invokevirtual #19
478: aload         23
480: invokevirtual #223
483: ldc           #21
485: invokevirtual #19
488: getstatic     #224
491: invokevirtual #223
494: ldc           #18
496: invokevirtual #19
499: invokevirtual #22
502: aload         23
504: getstatic     #224
507: invokevirtual #225
510: invokestatic  #23
513: aload         24
515: invokestatic  #15
518: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test250
Start line: 13335
End line: 13413
Method source code: 
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        java.lang.String[] strArray13 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean14 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist15 = whitelist4.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist17 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist23 = whitelist17.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = org.jsoup.Jsoup.clean("\nhi!", whitelist23);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str31 = org.jsoup.Jsoup.clean(":lt(32)", whitelist30);
        boolean boolean33 = whitelist30.isSafeTag("");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList39 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document37, "hi!");
        org.jsoup.nodes.Element element40 = document37.empty();
        org.jsoup.nodes.Element element42 = document37.removeClass("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = outputSettings53.prettyPrint(false);
        org.jsoup.nodes.Document document56 = document37.outputSettings(outputSettings55);
        java.lang.String str57 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist30, outputSettings55);
        org.jsoup.safety.Whitelist whitelist59 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist61 = whitelist59.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist63 = whitelist61.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist67 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str68 = org.jsoup.Jsoup.clean(":lt(32)", whitelist67);
        org.jsoup.safety.Whitelist whitelist72 = whitelist67.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray79 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist80 = whitelist67.addTags(strArray79);
        org.jsoup.safety.Whitelist whitelist81 = whitelist63.addProtocols(":matchesOwn(null", "hi!", strArray79);
        org.jsoup.safety.Whitelist whitelist82 = whitelist30.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray79);
        org.jsoup.safety.Whitelist whitelist83 = whitelist23.addProtocols("#doctype", "[]", strArray79);
        org.jsoup.safety.Whitelist whitelist84 = whitelist4.addTags(strArray79);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray79);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":lt(32)" + "'", str31, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(outputSettings55);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[:lt(32)]" + "'", str57, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ":lt(32)" + "'", str68, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(whitelist84);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #820
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: invokestatic  #8
96: astore        7
98: aload         7
100: iconst_1
101: invokevirtual #9
104: astore        8
106: aload         7
108: ldc           #10
110: ldc           #10
112: ldc           #10
114: invokevirtual #11
117: astore        9
119: ldc           #98
121: aload         9
123: invokestatic  #81
126: astore        10
128: invokestatic  #118
131: astore        11
133: ldc           #43
135: aload         11
137: invokestatic  #81
140: astore        12
142: aload         11
144: ldc           #25
146: invokevirtual #83
149: istore        13
151: ldc           #25
153: ldc           #12
155: invokestatic  #26
158: astore        14
160: ldc           #12
162: aload         14
164: ldc           #12
166: invokestatic  #27
169: astore        15
171: aload         14
173: invokevirtual #103
176: astore        16
178: aload         14
180: ldc           #12
182: invokevirtual #59
185: astore        17
187: ldc           #25
189: ldc           #12
191: invokestatic  #26
194: astore        18
196: ldc           #12
198: aload         18
200: ldc           #12
202: invokestatic  #27
205: astore        19
207: aload         18
209: ldc           #12
211: invokevirtual #28
214: astore        20
216: aload         18
218: ldc           #25
220: invokevirtual #29
223: astore        21
225: aload         18
227: invokevirtual #30
230: astore        22
232: aload         22
234: iconst_0
235: invokevirtual #31
238: astore        23
240: aload         14
242: aload         23
244: invokevirtual #175
247: astore        24
249: ldc           #58
251: ldc           #126
253: aload         11
255: aload         23
257: invokestatic  #33
260: astore        25
262: invokestatic  #8
265: astore        26
267: aload         26
269: iconst_1
270: invokevirtual #9
273: astore        27
275: aload         27
277: iconst_0
278: invokevirtual #9
281: astore        28
283: invokestatic  #118
286: astore        29
288: ldc           #43
290: aload         29
292: invokestatic  #81
295: astore        30
297: aload         29
299: ldc           #43
301: ldc           #12
303: ldc           #32
305: invokevirtual #11
308: astore        31
310: bipush        6
312: anewarray     #119
315: dup
316: iconst_0
317: ldc           #109
319: aastore
320: dup
321: iconst_1
322: ldc           #10
324: aastore
325: dup
326: iconst_2
327: ldc           #13
329: aastore
330: dup
331: iconst_3
332: ldc           #50
334: aastore
335: dup
336: iconst_4
337: ldc           #12
339: aastore
340: dup
341: iconst_5
342: ldc           #120
344: aastore
345: astore        32
347: aload         29
349: aload         32
351: invokevirtual #121
354: astore        33
356: aload         28
358: ldc           #38
360: ldc           #12
362: aload         32
364: invokevirtual #122
367: astore        34
369: aload         11
371: ldc           #109
373: aload         32
375: invokevirtual #127
378: astore        35
380: aload         9
382: ldc           #187
384: ldc           #159
386: aload         32
388: invokevirtual #122
391: astore        36
393: aload_3
394: aload         32
396: invokevirtual #121
399: astore        37
401: aload         32
403: checkcast     #124
406: invokestatic  #125
409: aload_1
410: invokestatic  #15
413: aload_2
414: invokestatic  #15
417: aload_3
418: invokestatic  #15
421: aload         4
423: invokestatic  #15
426: new           #16
429: dup
430: invokespecial #17
433: ldc           #18
435: invokevirtual #19
438: iload         5
440: invokevirtual #20
443: ldc           #21
445: invokevirtual #19
448: iconst_1
449: invokevirtual #20
452: ldc           #18
454: invokevirtual #19
457: invokevirtual #22
460: iload         5
462: iconst_1
463: if_icmpne     470
466: iconst_1
467: goto          471
470: iconst_0
471: invokestatic  #23
474: aload         6
476: invokestatic  #15
479: aload         7
481: invokestatic  #15
484: aload         8
486: invokestatic  #15
489: aload         9
491: invokestatic  #15
494: new           #16
497: dup
498: invokespecial #17
501: ldc           #18
503: invokevirtual #19
506: aload         10
508: invokevirtual #19
511: ldc           #211
513: invokevirtual #19
516: invokevirtual #22
519: aload         10
521: ldc           #12
523: invokestatic  #68
526: aload         11
528: invokestatic  #15
531: new           #16
534: dup
535: invokespecial #17
538: ldc           #18
540: invokevirtual #19
543: aload         12
545: invokevirtual #19
548: ldc           #128
550: invokevirtual #19
553: invokevirtual #22
556: aload         12
558: ldc           #43
560: invokestatic  #68
563: new           #16
566: dup
567: invokespecial #17
570: ldc           #18
572: invokevirtual #19
575: iload         13
577: invokevirtual #20
580: ldc           #21
582: invokevirtual #19
585: iconst_0
586: invokevirtual #20
589: ldc           #18
591: invokevirtual #19
594: invokevirtual #22
597: iload         13
599: ifne          606
602: iconst_1
603: goto          607
606: iconst_0
607: invokestatic  #23
610: aload         14
612: invokestatic  #15
615: aload         15
617: invokestatic  #15
620: aload         16
622: invokestatic  #15
625: aload         17
627: invokestatic  #15
630: aload         18
632: invokestatic  #15
635: aload         19
637: invokestatic  #15
640: aload         20
642: invokestatic  #15
645: aload         21
647: invokestatic  #15
650: aload         22
652: invokestatic  #15
655: aload         23
657: invokestatic  #15
660: aload         24
662: invokestatic  #15
665: new           #16
668: dup
669: invokespecial #17
672: ldc           #18
674: invokevirtual #19
677: aload         25
679: invokevirtual #19
682: ldc           #184
684: invokevirtual #19
687: invokevirtual #22
690: aload         25
692: ldc           #58
694: invokestatic  #68
697: aload         26
699: invokestatic  #15
702: aload         27
704: invokestatic  #15
707: aload         28
709: invokestatic  #15
712: aload         29
714: invokestatic  #15
717: new           #16
720: dup
721: invokespecial #17
724: ldc           #18
726: invokevirtual #19
729: aload         30
731: invokevirtual #19
734: ldc           #128
736: invokevirtual #19
739: invokevirtual #22
742: aload         30
744: ldc           #43
746: invokestatic  #68
749: aload         31
751: invokestatic  #15
754: aload         32
756: invokestatic  #15
759: aload         33
761: invokestatic  #15
764: aload         34
766: invokestatic  #15
769: aload         35
771: invokestatic  #15
774: aload         36
776: invokestatic  #15
779: aload         37
781: invokestatic  #15
784: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test251
Start line: 13416
End line: 13473
Method source code: 
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str5 = org.jsoup.Jsoup.clean(":lt(32)", whitelist4);
        boolean boolean7 = whitelist4.isSafeTag("");
        org.jsoup.nodes.Document document11 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList13 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document11, "hi!");
        org.jsoup.nodes.Element element14 = document11.empty();
        org.jsoup.nodes.Element element16 = document11.removeClass("hi!");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList22 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document20, "hi!");
        org.jsoup.nodes.Element element24 = document20.tagName("hi!");
        org.jsoup.nodes.Element element26 = document20.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = document20.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings27.prettyPrint(false);
        org.jsoup.nodes.Document document30 = document11.outputSettings(outputSettings29);
        java.lang.String str31 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist4, outputSettings29);
        org.jsoup.safety.Whitelist whitelist33 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist35 = whitelist33.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist41 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str42 = org.jsoup.Jsoup.clean(":lt(32)", whitelist41);
        org.jsoup.safety.Whitelist whitelist46 = whitelist41.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray53 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist54 = whitelist41.addTags(strArray53);
        org.jsoup.safety.Whitelist whitelist55 = whitelist37.addProtocols(":matchesOwn(null", "hi!", strArray53);
        org.jsoup.safety.Whitelist whitelist56 = whitelist4.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray53);
        java.lang.String str57 = org.jsoup.Jsoup.clean("<html>\n <head></head> \n <body>  \n </body>\n</html>", whitelist4);
        org.jsoup.nodes.Attributes attributes59 = whitelist4.getEnforcedAttributes("\n<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->");
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + ":lt(32)" + "'", str5, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(nodeList22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[:lt(32)]" + "'", str31, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":lt(32)" + "'", str42, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(whitelist54);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(attributes59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #821
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: invokestatic  #8
156: astore        16
158: aload         16
160: iconst_1
161: invokevirtual #9
164: astore        17
166: aload         17
168: iconst_0
169: invokevirtual #9
172: astore        18
174: invokestatic  #118
177: astore        19
179: ldc           #43
181: aload         19
183: invokestatic  #81
186: astore        20
188: aload         19
190: ldc           #43
192: ldc           #12
194: ldc           #32
196: invokevirtual #11
199: astore        21
201: bipush        6
203: anewarray     #119
206: dup
207: iconst_0
208: ldc           #109
210: aastore
211: dup
212: iconst_1
213: ldc           #10
215: aastore
216: dup
217: iconst_2
218: ldc           #13
220: aastore
221: dup
222: iconst_3
223: ldc           #50
225: aastore
226: dup
227: iconst_4
228: ldc           #12
230: aastore
231: dup
232: iconst_5
233: ldc           #120
235: aastore
236: astore        22
238: aload         19
240: aload         22
242: invokevirtual #121
245: astore        23
247: aload         18
249: ldc           #38
251: ldc           #12
253: aload         22
255: invokevirtual #122
258: astore        24
260: aload_1
261: ldc           #109
263: aload         22
265: invokevirtual #127
268: astore        25
270: ldc_w         #822
273: aload_1
274: invokestatic  #81
277: astore        26
279: aload_1
280: ldc_w         #298
283: invokevirtual #150
286: astore        27
288: aload_1
289: invokestatic  #15
292: new           #16
295: dup
296: invokespecial #17
299: ldc           #18
301: invokevirtual #19
304: aload_2
305: invokevirtual #19
308: ldc           #128
310: invokevirtual #19
313: invokevirtual #22
316: aload_2
317: ldc           #43
319: invokestatic  #68
322: new           #16
325: dup
326: invokespecial #17
329: ldc           #18
331: invokevirtual #19
334: iload_3
335: invokevirtual #20
338: ldc           #21
340: invokevirtual #19
343: iconst_0
344: invokevirtual #20
347: ldc           #18
349: invokevirtual #19
352: invokevirtual #22
355: iload_3
356: ifne          363
359: iconst_1
360: goto          364
363: iconst_0
364: invokestatic  #23
367: aload         4
369: invokestatic  #15
372: aload         5
374: invokestatic  #15
377: aload         6
379: invokestatic  #15
382: aload         7
384: invokestatic  #15
387: aload         8
389: invokestatic  #15
392: aload         9
394: invokestatic  #15
397: aload         10
399: invokestatic  #15
402: aload         11
404: invokestatic  #15
407: aload         12
409: invokestatic  #15
412: aload         13
414: invokestatic  #15
417: aload         14
419: invokestatic  #15
422: new           #16
425: dup
426: invokespecial #17
429: ldc           #18
431: invokevirtual #19
434: aload         15
436: invokevirtual #19
439: ldc           #184
441: invokevirtual #19
444: invokevirtual #22
447: aload         15
449: ldc           #58
451: invokestatic  #68
454: aload         16
456: invokestatic  #15
459: aload         17
461: invokestatic  #15
464: aload         18
466: invokestatic  #15
469: aload         19
471: invokestatic  #15
474: new           #16
477: dup
478: invokespecial #17
481: ldc           #18
483: invokevirtual #19
486: aload         20
488: invokevirtual #19
491: ldc           #128
493: invokevirtual #19
496: invokevirtual #22
499: aload         20
501: ldc           #43
503: invokestatic  #68
506: aload         21
508: invokestatic  #15
511: aload         22
513: invokestatic  #15
516: aload         23
518: invokestatic  #15
521: aload         24
523: invokestatic  #15
526: aload         25
528: invokestatic  #15
531: new           #16
534: dup
535: invokespecial #17
538: ldc           #18
540: invokevirtual #19
543: aload         26
545: invokevirtual #19
548: ldc           #67
550: invokevirtual #19
553: invokevirtual #22
556: aload         26
558: ldc           #25
560: invokestatic  #68
563: aload         27
565: invokestatic  #15
568: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test252
Start line: 13476
End line: 13529
Method source code: 
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = document25.outputSettings();
        org.jsoup.select.Elements elements34 = document25.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element36 = document25.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes37 = document25.attributes();
        org.jsoup.nodes.Element element39 = document25.prepend("[^hi!]");
        org.jsoup.nodes.Element element41 = document25.html("[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]");
        org.jsoup.nodes.Document document42 = document25.normalise();
        org.jsoup.nodes.Document document43 = cleaner3.clean(document42);
        java.lang.String str44 = document43.nodeName();
        org.jsoup.nodes.Element element46 = document43.removeClass("#[:lt(32)*=.\n \n \n]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(outputSettings32);
        org.junit.Assert.assertNotNull(elements34);
        org.junit.Assert.assertNull(element36);
        org.junit.Assert.assertNotNull(attributes37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#document" + "'", str44, "#document");
        org.junit.Assert.assertNotNull(element46);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #823
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #30
171: astore        17
173: aload         13
175: iconst_m1
176: invokevirtual #162
179: astore        18
181: aload         13
183: ldc           #10
185: invokevirtual #163
188: astore        19
190: aload         13
192: invokevirtual #164
195: astore        20
197: aload         13
199: ldc           #50
201: invokevirtual #165
204: astore        21
206: aload         13
208: ldc           #228
210: invokevirtual #115
213: astore        22
215: aload         13
217: invokevirtual #102
220: astore        23
222: aload_3
223: aload         23
225: invokevirtual #47
228: astore        24
230: aload         24
232: invokevirtual #220
235: astore        25
237: aload         24
239: ldc_w         #311
242: invokevirtual #59
245: astore        26
247: aload_1
248: invokestatic  #15
251: aload_2
252: invokestatic  #15
255: aload         5
257: invokestatic  #15
260: aload         6
262: invokestatic  #15
265: aload         7
267: invokestatic  #15
270: aload         8
272: invokestatic  #15
275: aload         9
277: invokestatic  #15
280: aload         10
282: invokestatic  #15
285: new           #16
288: dup
289: invokespecial #17
292: ldc           #18
294: invokevirtual #19
297: iload         11
299: invokevirtual #20
302: ldc           #21
304: invokevirtual #19
307: iconst_0
308: invokevirtual #20
311: ldc           #18
313: invokevirtual #19
316: invokevirtual #22
319: iload         11
321: ifne          328
324: iconst_1
325: goto          329
328: iconst_0
329: invokestatic  #23
332: aload         12
334: invokestatic  #15
337: aload         13
339: invokestatic  #15
342: aload         14
344: invokestatic  #15
347: aload         15
349: invokestatic  #15
352: aload         16
354: invokestatic  #15
357: aload         17
359: invokestatic  #15
362: aload         18
364: invokestatic  #15
367: aload         19
369: invokestatic  #79
372: aload         20
374: invokestatic  #15
377: aload         21
379: invokestatic  #15
382: aload         22
384: invokestatic  #15
387: aload         23
389: invokestatic  #15
392: aload         24
394: invokestatic  #15
397: new           #16
400: dup
401: invokespecial #17
404: ldc           #18
406: invokevirtual #19
409: aload         25
411: invokevirtual #19
414: ldc           #107
416: invokevirtual #19
419: invokevirtual #22
422: aload         25
424: ldc           #13
426: invokestatic  #68
429: aload         26
431: invokestatic  #15
434: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test253
Start line: 13532
End line: 13577
Method source code: 
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings17 = outputSettings15.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = outputSettings15.indentAmount(100);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList25 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document23, "hi!");
        org.jsoup.nodes.Element element27 = document23.tagName("hi!");
        org.jsoup.nodes.Element element29 = document23.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings30 = document23.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = outputSettings30.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings34 = outputSettings30.prettyPrint(true);
        org.jsoup.nodes.Document.OutputSettings outputSettings36 = outputSettings30.indentAmount(0);
        java.nio.charset.Charset charset37 = outputSettings36.charset();
        org.jsoup.nodes.Document.OutputSettings outputSettings38 = outputSettings15.charset(charset37);
        java.lang.String str39 = org.jsoup.Jsoup.clean("#[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", "<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>", whitelist2, outputSettings38);
        java.nio.charset.Charset charset40 = outputSettings38.charset();
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertNotNull(outputSettings17);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(outputSettings30);
        org.junit.Assert.assertNotNull(outputSettings32);
        org.junit.Assert.assertNotNull(outputSettings34);
        org.junit.Assert.assertNotNull(outputSettings36);
        org.junit.Assert.assertNotNull(charset37);
        org.junit.Assert.assertNotNull(outputSettings38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#[:lt(32)*=.\n \n \n]" + "'", str39, "#[:lt(32)*=.\n \n \n]");
        org.junit.Assert.assertNotNull(charset40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #824
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #25
37: ldc           #12
39: invokestatic  #26
42: astore_3
43: ldc           #12
45: aload_3
46: ldc           #12
48: invokestatic  #27
51: astore        4
53: aload_3
54: ldc           #12
56: invokevirtual #28
59: astore        5
61: aload_3
62: ldc           #25
64: invokevirtual #29
67: astore        6
69: aload_3
70: invokevirtual #30
73: astore        7
75: aload         7
77: iconst_0
78: invokevirtual #31
81: astore        8
83: aload         7
85: bipush        100
87: invokevirtual #189
90: astore        9
92: ldc           #25
94: ldc           #12
96: invokestatic  #26
99: astore        10
101: ldc           #12
103: aload         10
105: ldc           #12
107: invokestatic  #27
110: astore        11
112: aload         10
114: ldc           #12
116: invokevirtual #28
119: astore        12
121: aload         10
123: ldc           #25
125: invokevirtual #29
128: astore        13
130: aload         10
132: invokevirtual #30
135: astore        14
137: aload         14
139: iconst_0
140: invokevirtual #31
143: astore        15
145: aload         14
147: iconst_1
148: invokevirtual #31
151: astore        16
153: aload         14
155: iconst_0
156: invokevirtual #189
159: astore        17
161: aload         17
163: invokevirtual #460
166: astore        18
168: aload         7
170: aload         18
172: invokevirtual #718
175: astore        19
177: ldc_w         #714
180: ldc           #254
182: aload_1
183: aload         19
185: invokestatic  #33
188: astore        20
190: aload         19
192: invokevirtual #460
195: astore        21
197: aload_1
198: invokestatic  #15
201: aload_2
202: invokestatic  #15
205: aload_3
206: invokestatic  #15
209: aload         4
211: invokestatic  #15
214: aload         5
216: invokestatic  #15
219: aload         6
221: invokestatic  #15
224: aload         7
226: invokestatic  #15
229: aload         8
231: invokestatic  #15
234: aload         9
236: invokestatic  #15
239: aload         10
241: invokestatic  #15
244: aload         11
246: invokestatic  #15
249: aload         12
251: invokestatic  #15
254: aload         13
256: invokestatic  #15
259: aload         14
261: invokestatic  #15
264: aload         15
266: invokestatic  #15
269: aload         16
271: invokestatic  #15
274: aload         17
276: invokestatic  #15
279: aload         18
281: invokestatic  #15
284: aload         19
286: invokestatic  #15
289: new           #16
292: dup
293: invokespecial #17
296: ldc           #18
298: invokevirtual #19
301: aload         20
303: invokevirtual #19
306: ldc_w         #825
309: invokevirtual #19
312: invokevirtual #22
315: aload         20
317: ldc_w         #311
320: invokestatic  #68
323: aload         21
325: invokestatic  #15
328: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test254
Start line: 13580
End line: 13593
Method source code: 
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist11 = whitelist1.addEnforcedAttribute("hi!", "#document", "hi!");
        boolean boolean12 = org.jsoup.Jsoup.isValid(":lt(32)=&quot;&quot;=&quot;.&quot;", whitelist11);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #826
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: ldc_w         #300
61: aload         4
63: invokestatic  #14
66: istore        5
68: aload_1
69: invokestatic  #15
72: aload_2
73: invokestatic  #15
76: aload_3
77: invokestatic  #15
80: aload         4
82: invokestatic  #15
85: new           #16
88: dup
89: invokespecial #17
92: ldc           #18
94: invokevirtual #19
97: iload         5
99: invokevirtual #20
102: ldc           #21
104: invokevirtual #19
107: iconst_1
108: invokevirtual #20
111: ldc           #18
113: invokevirtual #19
116: invokevirtual #22
119: iload         5
121: iconst_1
122: if_icmpne     129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #23
133: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test255
Start line: 13596
End line: 13669
Method source code: 
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        java.lang.Object obj1 = objList0.poll();
        java.util.ListIterator<java.lang.Object> objItor2 = objList0.listIterator();
        objList0.clear();
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str7 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist6);
        boolean boolean9 = whitelist6.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist19 = whitelist13.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist23 = whitelist13.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str24 = org.jsoup.Jsoup.clean("hi!", whitelist13);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist30 = whitelist28.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str35 = org.jsoup.Jsoup.clean(":lt(32)", whitelist34);
        org.jsoup.safety.Whitelist whitelist39 = whitelist34.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray46 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist47 = whitelist34.addTags(strArray46);
        org.jsoup.safety.Whitelist whitelist48 = whitelist30.addProtocols(":matchesOwn(null", "hi!", strArray46);
        java.lang.String[] strArray57 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean58 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray57);
        org.jsoup.safety.Whitelist whitelist59 = whitelist48.addProtocols("\n<!--hi!-->", "#document", strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.safety.Whitelist whitelist62 = whitelist13.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray57);
        org.jsoup.safety.Whitelist whitelist63 = whitelist6.addTags(strArray57);
        java.lang.CharSequence[] charSequenceArray64 = objList0.toArray((java.lang.CharSequence[]) strArray57);
        org.jsoup.nodes.Document document66 = org.jsoup.nodes.Document.createShell("<html>\n <head></head>\n <body></body>\n</html>\n<:lt(32)></:lt(32)>");
        java.util.Map<java.lang.String, java.lang.String> strMap67 = document66.dataset();
        org.jsoup.nodes.Element element69 = document66.text("<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Element element71 = element69.append("[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]");
        java.util.Set<java.lang.String> strSet72 = element69.classNames();
        boolean boolean73 = objList0.offer((java.lang.Object) element69);
        org.jsoup.select.Elements elements74 = element69.children();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(objItor2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[hi!$=   ]" + "'", str7, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ":lt(32)" + "'", str35, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(elements74);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #827
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: invokevirtual #402
37: astore_2
38: aload_1
39: invokevirtual #403
42: astore_3
43: aload_1
44: invokevirtual #131
47: invokestatic  #8
50: astore        4
52: ldc           #109
54: ldc           #110
56: aload         4
58: invokestatic  #94
61: astore        5
63: aload         4
65: ldc           #25
67: invokevirtual #83
70: istore        6
72: aload         4
74: iconst_0
75: invokevirtual #9
78: astore        7
80: invokestatic  #8
83: astore        8
85: aload         8
87: iconst_1
88: invokevirtual #9
91: astore        9
93: aload         8
95: ldc           #10
97: ldc           #10
99: ldc           #10
101: invokevirtual #11
104: astore        10
106: aload         8
108: ldc           #12
110: ldc           #13
112: ldc           #12
114: invokevirtual #11
117: astore        11
119: ldc           #12
121: aload         8
123: invokestatic  #81
126: astore        12
128: invokestatic  #8
131: astore        13
133: aload         13
135: iconst_1
136: invokevirtual #9
139: astore        14
141: aload         14
143: iconst_0
144: invokevirtual #9
147: astore        15
149: invokestatic  #118
152: astore        16
154: ldc           #43
156: aload         16
158: invokestatic  #81
161: astore        17
163: aload         16
165: ldc           #43
167: ldc           #12
169: ldc           #32
171: invokevirtual #11
174: astore        18
176: bipush        6
178: anewarray     #119
181: dup
182: iconst_0
183: ldc           #109
185: aastore
186: dup
187: iconst_1
188: ldc           #10
190: aastore
191: dup
192: iconst_2
193: ldc           #13
195: aastore
196: dup
197: iconst_3
198: ldc           #50
200: aastore
201: dup
202: iconst_4
203: ldc           #12
205: aastore
206: dup
207: iconst_5
208: ldc           #120
210: aastore
211: astore        19
213: aload         16
215: aload         19
217: invokevirtual #121
220: astore        20
222: aload         15
224: ldc           #38
226: ldc           #12
228: aload         19
230: invokevirtual #122
233: astore        21
235: iconst_5
236: anewarray     #119
239: dup
240: iconst_0
241: ldc           #13
243: aastore
244: dup
245: iconst_1
246: ldc           #32
248: aastore
249: dup
250: iconst_2
251: ldc           #10
253: aastore
254: dup
255: iconst_3
256: ldc           #43
258: aastore
259: dup
260: iconst_4
261: ldc           #58
263: aastore
264: astore        22
266: ldc           #10
268: aload         22
270: invokestatic  #123
273: istore        23
275: aload         21
277: ldc           #84
279: ldc           #13
281: aload         22
283: invokevirtual #122
286: astore        24
288: aload         22
290: checkcast     #124
293: invokestatic  #125
296: aload         22
298: checkcast     #124
301: invokestatic  #125
304: aload         8
306: ldc           #249
308: aload         22
310: invokevirtual #127
313: astore        25
315: aload         4
317: aload         22
319: invokevirtual #121
322: astore        26
324: aload_1
325: aload         22
327: checkcast     #560
330: invokevirtual #561
333: checkcast     #560
336: astore        27
338: ldc_w         #794
341: invokestatic  #45
344: astore        28
346: aload         28
348: invokevirtual #534
351: astore        29
353: aload         28
355: ldc           #55
357: invokevirtual #64
360: astore        30
362: aload         30
364: ldc_w         #317
367: invokevirtual #404
370: astore        31
372: aload         30
374: invokevirtual #743
377: astore        32
379: aload_1
380: aload         30
382: invokevirtual #649
385: istore        33
387: aload         30
389: invokevirtual #828
392: astore        34
394: aload_2
395: invokestatic  #79
398: aload_3
399: invokestatic  #15
402: aload         4
404: invokestatic  #15
407: new           #16
410: dup
411: invokespecial #17
414: ldc           #18
416: invokevirtual #19
419: aload         5
421: invokevirtual #19
424: ldc           #111
426: invokevirtual #19
429: invokevirtual #22
432: aload         5
434: ldc           #65
436: invokestatic  #68
439: new           #16
442: dup
443: invokespecial #17
446: ldc           #18
448: invokevirtual #19
451: iload         6
453: invokevirtual #20
456: ldc           #21
458: invokevirtual #19
461: iconst_0
462: invokevirtual #20
465: ldc           #18
467: invokevirtual #19
470: invokevirtual #22
473: iload         6
475: ifne          482
478: iconst_1
479: goto          483
482: iconst_0
483: invokestatic  #23
486: aload         7
488: invokestatic  #15
491: aload         8
493: invokestatic  #15
496: aload         9
498: invokestatic  #15
501: aload         10
503: invokestatic  #15
506: aload         11
508: invokestatic  #15
511: new           #16
514: dup
515: invokespecial #17
518: ldc           #18
520: invokevirtual #19
523: aload         12
525: invokevirtual #19
528: ldc           #211
530: invokevirtual #19
533: invokevirtual #22
536: aload         12
538: ldc           #12
540: invokestatic  #68
543: aload         13
545: invokestatic  #15
548: aload         14
550: invokestatic  #15
553: aload         15
555: invokestatic  #15
558: aload         16
560: invokestatic  #15
563: new           #16
566: dup
567: invokespecial #17
570: ldc           #18
572: invokevirtual #19
575: aload         17
577: invokevirtual #19
580: ldc           #128
582: invokevirtual #19
585: invokevirtual #22
588: aload         17
590: ldc           #43
592: invokestatic  #68
595: aload         18
597: invokestatic  #15
600: aload         19
602: invokestatic  #15
605: aload         20
607: invokestatic  #15
610: aload         21
612: invokestatic  #15
615: aload         22
617: invokestatic  #15
620: new           #16
623: dup
624: invokespecial #17
627: ldc           #18
629: invokevirtual #19
632: iload         23
634: invokevirtual #20
637: ldc           #21
639: invokevirtual #19
642: iconst_1
643: invokevirtual #20
646: ldc           #18
648: invokevirtual #19
651: invokevirtual #22
654: iload         23
656: iconst_1
657: if_icmpne     664
660: iconst_1
661: goto          665
664: iconst_0
665: invokestatic  #23
668: aload         24
670: invokestatic  #15
673: aload         25
675: invokestatic  #15
678: aload         26
680: invokestatic  #15
683: aload         27
685: invokestatic  #15
688: aload         28
690: invokestatic  #15
693: aload         29
695: invokestatic  #15
698: aload         30
700: invokestatic  #15
703: aload         31
705: invokestatic  #15
708: aload         32
710: invokestatic  #15
713: new           #16
716: dup
717: invokespecial #17
720: ldc           #18
722: invokevirtual #19
725: iload         33
727: invokevirtual #20
730: ldc           #21
732: invokevirtual #19
735: iconst_1
736: invokevirtual #20
739: ldc           #18
741: invokevirtual #19
744: invokevirtual #22
747: iload         33
749: iconst_1
750: if_icmpne     757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #23
761: aload         34
763: invokestatic  #15
766: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test256
Start line: 13672
End line: 13735
Method source code: 
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist10 = whitelist4.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist14 = whitelist4.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str15 = org.jsoup.Jsoup.clean("#document", "<html>\n <head></head>\n <body></body>\n</html>", whitelist14);
        java.util.regex.Pattern pattern18 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching19 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern18);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList25 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document23, "hi!");
        org.jsoup.nodes.Element element27 = document23.tagName("hi!");
        org.jsoup.nodes.Element element29 = document23.append("");
        java.lang.String str30 = document23.toString();
        org.jsoup.nodes.Element element32 = document23.prependElement("\nhi!");
        org.jsoup.select.Elements elements34 = document23.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList40 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document38, "hi!");
        org.jsoup.nodes.Element element42 = document38.tagName("hi!");
        org.jsoup.nodes.Element element44 = document38.append("");
        boolean boolean45 = attributeWithValueMatching19.matches((org.jsoup.nodes.Element) document23, (org.jsoup.nodes.Element) document38);
        org.jsoup.nodes.Element element46 = null;
        org.jsoup.nodes.Document document49 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element50 = document49.body();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = document49.dataset();
        boolean boolean52 = attributeWithValueMatching19.matches(element46, (org.jsoup.nodes.Element) document49);
        org.jsoup.nodes.Document document54 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        boolean boolean58 = attributeWithValueMatching19.matches((org.jsoup.nodes.Element) document54, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Attribute attribute61 = new org.jsoup.nodes.Attribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", ".\n<!---->");
        java.lang.String str62 = attribute61.getKey();
        boolean boolean63 = whitelist14.isSafeAttribute("[ =hi!]", (org.jsoup.nodes.Element) document57, attribute61);
        org.jsoup.safety.Whitelist whitelist67 = whitelist14.addEnforcedAttribute("<html> <head></head> <body> [:lt(32)] </body> </html>", "[<hi!>\n [^hi!]\n</hi!>]", " text=\"hi!\" .<html>\n <head></head>\n <body></body>\n</html>=\"\"");
        java.lang.String str68 = org.jsoup.Jsoup.clean("<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">", "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]", whitelist14);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#document" + "'", str15, "#document");
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str30, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(elements34);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(document54);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]" + "'", str62, ":containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "] PUBLIC &quot;:contains(:gt(100)&quot; &quot;:lt(32)=&quot;&quot;=&quot;.&quot;&quot;&gt;" + "'", str68, "] PUBLIC &quot;:contains(:gt(100)&quot; &quot;:lt(32)=&quot;&quot;=&quot;.&quot;&quot;&gt;");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #829
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: ldc           #13
60: ldc           #10
62: aload         4
64: invokestatic  #94
67: astore        5
69: aconst_null
70: astore        6
72: new           #96
75: dup
76: ldc           #25
78: aload         6
80: invokespecial #97
83: astore        7
85: ldc           #25
87: ldc           #12
89: invokestatic  #26
92: astore        8
94: ldc           #12
96: aload         8
98: ldc           #12
100: invokestatic  #27
103: astore        9
105: aload         8
107: ldc           #12
109: invokevirtual #28
112: astore        10
114: aload         8
116: ldc           #25
118: invokevirtual #29
121: astore        11
123: aload         8
125: invokevirtual #72
128: astore        12
130: aload         8
132: ldc           #98
134: invokevirtual #99
137: astore        13
139: aload         8
141: ldc           #25
143: invokevirtual #100
146: astore        14
148: ldc           #25
150: ldc           #12
152: invokestatic  #26
155: astore        15
157: ldc           #12
159: aload         15
161: ldc           #12
163: invokestatic  #27
166: astore        16
168: aload         15
170: ldc           #12
172: invokevirtual #28
175: astore        17
177: aload         15
179: ldc           #25
181: invokevirtual #29
184: astore        18
186: aload         7
188: aload         8
190: aload         15
192: invokevirtual #101
195: istore        19
197: aconst_null
198: astore        20
200: ldc           #25
202: ldc           #12
204: invokestatic  #26
207: astore        21
209: aload         21
211: invokevirtual #166
214: astore        22
216: aload         21
218: invokevirtual #534
221: astore        23
223: aload         7
225: aload         20
227: aload         21
229: invokevirtual #101
232: istore        24
234: ldc           #10
236: invokestatic  #193
239: astore        25
241: ldc           #50
243: ldc           #51
245: invokestatic  #52
248: astore        26
250: aload         7
252: aload         25
254: aload         26
256: invokevirtual #101
259: istore        27
261: new           #263
264: dup
265: ldc           #110
267: ldc           #145
269: invokespecial #264
272: astore        28
274: aload         28
276: invokevirtual #210
279: astore        29
281: aload         4
283: ldc_w         #599
286: aload         26
288: aload         28
290: invokevirtual #169
293: istore        30
295: aload         4
297: ldc_w         #713
300: ldc_w         #655
303: ldc_w         #830
306: invokevirtual #11
309: astore        31
311: ldc_w         #274
314: ldc_w         #443
317: aload         4
319: invokestatic  #94
322: astore        32
324: aload_1
325: invokestatic  #15
328: aload_2
329: invokestatic  #15
332: aload_3
333: invokestatic  #15
336: aload         4
338: invokestatic  #15
341: new           #16
344: dup
345: invokespecial #17
348: ldc           #18
350: invokevirtual #19
353: aload         5
355: invokevirtual #19
358: ldc           #107
360: invokevirtual #19
363: invokevirtual #22
366: aload         5
368: ldc           #13
370: invokestatic  #68
373: aload         8
375: invokestatic  #15
378: aload         9
380: invokestatic  #15
383: aload         10
385: invokestatic  #15
388: aload         11
390: invokestatic  #15
393: new           #16
396: dup
397: invokespecial #17
400: ldc           #18
402: invokevirtual #19
405: aload         12
407: invokevirtual #19
410: ldc           #78
412: invokevirtual #19
415: invokevirtual #22
418: aload         12
420: ldc           #10
422: invokestatic  #68
425: aload         13
427: invokestatic  #15
430: aload         14
432: invokestatic  #15
435: aload         15
437: invokestatic  #15
440: aload         16
442: invokestatic  #15
445: aload         17
447: invokestatic  #15
450: aload         18
452: invokestatic  #15
455: new           #16
458: dup
459: invokespecial #17
462: ldc           #18
464: invokevirtual #19
467: iload         19
469: invokevirtual #20
472: ldc           #21
474: invokevirtual #19
477: iconst_0
478: invokevirtual #20
481: ldc           #18
483: invokevirtual #19
486: invokevirtual #22
489: iload         19
491: ifne          498
494: iconst_1
495: goto          499
498: iconst_0
499: invokestatic  #23
502: aload         21
504: invokestatic  #15
507: aload         22
509: invokestatic  #15
512: aload         23
514: invokestatic  #15
517: new           #16
520: dup
521: invokespecial #17
524: ldc           #18
526: invokevirtual #19
529: iload         24
531: invokevirtual #20
534: ldc           #21
536: invokevirtual #19
539: iconst_0
540: invokevirtual #20
543: ldc           #18
545: invokevirtual #19
548: invokevirtual #22
551: iload         24
553: ifne          560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #23
564: aload         25
566: invokestatic  #15
569: aload         26
571: invokestatic  #15
574: new           #16
577: dup
578: invokespecial #17
581: ldc           #18
583: invokevirtual #19
586: iload         27
588: invokevirtual #20
591: ldc           #21
593: invokevirtual #19
596: iconst_0
597: invokevirtual #20
600: ldc           #18
602: invokevirtual #19
605: invokevirtual #22
608: iload         27
610: ifne          617
613: iconst_1
614: goto          618
617: iconst_0
618: invokestatic  #23
621: new           #16
624: dup
625: invokespecial #17
628: ldc           #18
630: invokevirtual #19
633: aload         29
635: invokevirtual #19
638: ldc_w         #787
641: invokevirtual #19
644: invokevirtual #22
647: aload         29
649: ldc_w         #788
652: invokestatic  #68
655: new           #16
658: dup
659: invokespecial #17
662: ldc           #18
664: invokevirtual #19
667: iload         30
669: invokevirtual #20
672: ldc           #21
674: invokevirtual #19
677: iconst_0
678: invokevirtual #20
681: ldc           #18
683: invokevirtual #19
686: invokevirtual #22
689: iload         30
691: ifne          698
694: iconst_1
695: goto          699
698: iconst_0
699: invokestatic  #23
702: aload         31
704: invokestatic  #15
707: new           #16
710: dup
711: invokespecial #17
714: ldc           #18
716: invokevirtual #19
719: aload         32
721: invokevirtual #19
724: ldc_w         #831
727: invokevirtual #19
730: invokevirtual #22
733: aload         32
735: ldc_w         #832
738: invokestatic  #68
741: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test257
Start line: 13738
End line: 13802
Method source code: 
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        objList0.push((java.lang.Object) "\nhi!");
        java.lang.Object obj3 = null;
        int int4 = objList0.indexOf(obj3);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList5 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean7 = objList5.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj8 = objList5.peekFirst();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList9 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        java.lang.Object obj10 = objList9.poll();
        java.util.ListIterator<java.lang.Object> objItor11 = objList9.listIterator();
        objList5.addFirst((java.lang.Object) objItor11);
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element16 = document15.body();
        org.jsoup.nodes.Element element18 = element16.append("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        int int19 = objList5.lastIndexOf((java.lang.Object) "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList25 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document23, "hi!");
        java.util.stream.Stream<org.jsoup.nodes.Node> nodeStream26 = nodeList25.stream();
        boolean boolean27 = objList5.addAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList25);
        objList0.addLast((java.lang.Object) objList5);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str32 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist31);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist36 = whitelist34.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist38 = whitelist36.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist42 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str43 = org.jsoup.Jsoup.clean(":lt(32)", whitelist42);
        org.jsoup.safety.Whitelist whitelist47 = whitelist42.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray54 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist55 = whitelist42.addTags(strArray54);
        org.jsoup.safety.Whitelist whitelist56 = whitelist38.addProtocols(":matchesOwn(null", "hi!", strArray54);
        org.jsoup.safety.Whitelist whitelist57 = whitelist31.addAttributes("[^hi!]", strArray54);
        boolean boolean58 = objList5.equals((java.lang.Object) strArray54);
        java.lang.Object obj59 = objList5.pop();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objItor11);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(nodeStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!$=   ]" + "'", str32, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":lt(32)" + "'", str43, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(whitelist55);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(obj59);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #833
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #98
36: invokevirtual #401
39: aconst_null
40: astore_2
41: aload_1
42: aload_2
43: invokevirtual #380
46: istore_3
47: new           #88
50: dup
51: invokespecial #89
54: astore        4
56: aload         4
58: ldc           #43
60: invokevirtual #90
63: istore        5
65: aload         4
67: invokevirtual #91
70: astore        6
72: new           #88
75: dup
76: invokespecial #89
79: astore        7
81: aload         7
83: invokevirtual #402
86: astore        8
88: aload         7
90: invokevirtual #403
93: astore        9
95: aload         4
97: aload         9
99: invokevirtual #93
102: ldc           #25
104: ldc           #12
106: invokestatic  #26
109: astore        10
111: aload         10
113: invokevirtual #166
116: astore        11
118: aload         11
120: ldc           #109
122: invokevirtual #404
125: astore        12
127: aload         4
129: ldc           #109
131: invokevirtual #130
134: istore        13
136: ldc           #25
138: ldc           #12
140: invokestatic  #26
143: astore        14
145: ldc           #12
147: aload         14
149: ldc           #12
151: invokestatic  #27
154: astore        15
156: aload         15
158: invokeinterface #405,  1
163: astore        16
165: aload         4
167: aload         15
169: invokevirtual #406
172: istore        17
174: aload_1
175: aload         4
177: invokevirtual #95
180: invokestatic  #8
183: astore        18
185: ldc           #109
187: ldc           #110
189: aload         18
191: invokestatic  #94
194: astore        19
196: invokestatic  #8
199: astore        20
201: aload         20
203: iconst_1
204: invokevirtual #9
207: astore        21
209: aload         21
211: iconst_0
212: invokevirtual #9
215: astore        22
217: invokestatic  #118
220: astore        23
222: ldc           #43
224: aload         23
226: invokestatic  #81
229: astore        24
231: aload         23
233: ldc           #43
235: ldc           #12
237: ldc           #32
239: invokevirtual #11
242: astore        25
244: bipush        6
246: anewarray     #119
249: dup
250: iconst_0
251: ldc           #109
253: aastore
254: dup
255: iconst_1
256: ldc           #10
258: aastore
259: dup
260: iconst_2
261: ldc           #13
263: aastore
264: dup
265: iconst_3
266: ldc           #50
268: aastore
269: dup
270: iconst_4
271: ldc           #12
273: aastore
274: dup
275: iconst_5
276: ldc           #120
278: aastore
279: astore        26
281: aload         23
283: aload         26
285: invokevirtual #121
288: astore        27
290: aload         22
292: ldc           #38
294: ldc           #12
296: aload         26
298: invokevirtual #122
301: astore        28
303: aload         18
305: ldc           #50
307: aload         26
309: invokevirtual #127
312: astore        29
314: aload         4
316: aload         26
318: invokevirtual #90
321: istore        30
323: aload         4
325: invokevirtual #355
328: astore        31
330: new           #16
333: dup
334: invokespecial #17
337: ldc           #18
339: invokevirtual #19
342: iload_3
343: invokevirtual #134
346: ldc           #21
348: invokevirtual #19
351: iconst_m1
352: invokevirtual #134
355: ldc           #18
357: invokevirtual #19
360: invokevirtual #22
363: iload_3
364: iconst_m1
365: if_icmpne     372
368: iconst_1
369: goto          373
372: iconst_0
373: invokestatic  #23
376: new           #16
379: dup
380: invokespecial #17
383: ldc           #18
385: invokevirtual #19
388: iload         5
390: invokevirtual #20
393: ldc           #21
395: invokevirtual #19
398: iconst_0
399: invokevirtual #20
402: ldc           #18
404: invokevirtual #19
407: invokevirtual #22
410: iload         5
412: ifne          419
415: iconst_1
416: goto          420
419: iconst_0
420: invokestatic  #23
423: aload         6
425: invokestatic  #79
428: aload         8
430: invokestatic  #79
433: aload         9
435: invokestatic  #15
438: aload         10
440: invokestatic  #15
443: aload         11
445: invokestatic  #15
448: aload         12
450: invokestatic  #15
453: new           #16
456: dup
457: invokespecial #17
460: ldc           #18
462: invokevirtual #19
465: iload         13
467: invokevirtual #134
470: ldc           #21
472: invokevirtual #19
475: iconst_m1
476: invokevirtual #134
479: ldc           #18
481: invokevirtual #19
484: invokevirtual #22
487: iload         13
489: iconst_m1
490: if_icmpne     497
493: iconst_1
494: goto          498
497: iconst_0
498: invokestatic  #23
501: aload         14
503: invokestatic  #15
506: aload         15
508: invokestatic  #15
511: aload         16
513: invokestatic  #15
516: new           #16
519: dup
520: invokespecial #17
523: ldc           #18
525: invokevirtual #19
528: iload         17
530: invokevirtual #20
533: ldc           #21
535: invokevirtual #19
538: iconst_1
539: invokevirtual #20
542: ldc           #18
544: invokevirtual #19
547: invokevirtual #22
550: iload         17
552: iconst_1
553: if_icmpne     560
556: iconst_1
557: goto          561
560: iconst_0
561: invokestatic  #23
564: aload         18
566: invokestatic  #15
569: new           #16
572: dup
573: invokespecial #17
576: ldc           #18
578: invokevirtual #19
581: aload         19
583: invokevirtual #19
586: ldc           #111
588: invokevirtual #19
591: invokevirtual #22
594: aload         19
596: ldc           #65
598: invokestatic  #68
601: aload         20
603: invokestatic  #15
606: aload         21
608: invokestatic  #15
611: aload         22
613: invokestatic  #15
616: aload         23
618: invokestatic  #15
621: new           #16
624: dup
625: invokespecial #17
628: ldc           #18
630: invokevirtual #19
633: aload         24
635: invokevirtual #19
638: ldc           #128
640: invokevirtual #19
643: invokevirtual #22
646: aload         24
648: ldc           #43
650: invokestatic  #68
653: aload         25
655: invokestatic  #15
658: aload         26
660: invokestatic  #15
663: aload         27
665: invokestatic  #15
668: aload         28
670: invokestatic  #15
673: aload         29
675: invokestatic  #15
678: new           #16
681: dup
682: invokespecial #17
685: ldc           #18
687: invokevirtual #19
690: iload         30
692: invokevirtual #20
695: ldc           #21
697: invokevirtual #19
700: iconst_0
701: invokevirtual #20
704: ldc           #18
706: invokevirtual #19
709: invokevirtual #22
712: iload         30
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #23
725: aload         31
727: invokestatic  #15
730: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test258
Start line: 13805
End line: 13865
Method source code: 
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element29 = document26.empty();
        org.jsoup.nodes.Node node32 = element29.attr("[^hi!]", "#document");
        int int33 = objList0.lastIndexOf((java.lang.Object) node32);
        java.util.ListIterator<java.lang.Object> objItor35 = objList0.listIterator(0);
        org.jsoup.nodes.Document document39 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList41 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document39, "hi!");
        org.jsoup.nodes.Element element42 = document39.empty();
        org.jsoup.nodes.Element element44 = document39.removeClass("hi!");
        org.jsoup.nodes.Element element46 = element44.toggleClass("");
        boolean boolean47 = objList0.removeFirstOccurrence((java.lang.Object) element46);
        org.jsoup.safety.Whitelist whitelist50 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist52 = whitelist50.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist56 = whitelist50.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str57 = org.jsoup.Jsoup.clean("#comment", "*", whitelist56);
        int int58 = objList0.indexOf((java.lang.Object) "*");
        org.jsoup.helper.Validate.notNull((java.lang.Object) "*", "<html>\n <head></head>\n <body>\n  #comment \n </body>\n</html>");
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(objItor35);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#comment" + "'", str57, "#comment");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #834
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        12
132: ldc           #12
134: aload         12
136: ldc           #12
138: invokestatic  #27
141: astore        13
143: aload         12
145: invokevirtual #103
148: astore        14
150: aload         14
152: ldc           #50
154: ldc           #13
156: invokevirtual #791
159: astore        15
161: aload_1
162: aload         15
164: invokevirtual #130
167: istore        16
169: aload_1
170: iconst_0
171: invokevirtual #568
174: astore        17
176: ldc           #25
178: ldc           #12
180: invokestatic  #26
183: astore        18
185: ldc           #12
187: aload         18
189: ldc           #12
191: invokestatic  #27
194: astore        19
196: aload         18
198: invokevirtual #103
201: astore        20
203: aload         18
205: ldc           #12
207: invokevirtual #59
210: astore        21
212: aload         21
214: ldc           #25
216: invokevirtual #177
219: astore        22
221: aload_1
222: aload         22
224: invokevirtual #651
227: istore        23
229: invokestatic  #8
232: astore        24
234: aload         24
236: iconst_1
237: invokevirtual #9
240: astore        25
242: aload         24
244: ldc           #10
246: ldc           #10
248: ldc           #10
250: invokevirtual #11
253: astore        26
255: ldc           #114
257: ldc           #126
259: aload         26
261: invokestatic  #94
264: astore        27
266: aload_1
267: ldc           #126
269: invokevirtual #380
272: istore        28
274: ldc           #126
276: ldc_w         #507
279: invokestatic  #181
282: aload_2
283: invokestatic  #15
286: aload_3
287: invokestatic  #15
290: aload         4
292: invokestatic  #15
295: aload         5
297: invokestatic  #15
300: aload         6
302: invokestatic  #15
305: aload         7
307: invokestatic  #15
310: aload         8
312: invokestatic  #15
315: aload         9
317: invokestatic  #15
320: aload         10
322: invokestatic  #15
325: aload         11
327: invokestatic  #15
330: aload         12
332: invokestatic  #15
335: aload         13
337: invokestatic  #15
340: aload         14
342: invokestatic  #15
345: aload         15
347: invokestatic  #15
350: new           #16
353: dup
354: invokespecial #17
357: ldc           #18
359: invokevirtual #19
362: iload         16
364: invokevirtual #134
367: ldc           #21
369: invokevirtual #19
372: iconst_m1
373: invokevirtual #134
376: ldc           #18
378: invokevirtual #19
381: invokevirtual #22
384: iload         16
386: iconst_m1
387: if_icmpne     394
390: iconst_1
391: goto          395
394: iconst_0
395: invokestatic  #23
398: aload         17
400: invokestatic  #15
403: aload         18
405: invokestatic  #15
408: aload         19
410: invokestatic  #15
413: aload         20
415: invokestatic  #15
418: aload         21
420: invokestatic  #15
423: aload         22
425: invokestatic  #15
428: new           #16
431: dup
432: invokespecial #17
435: ldc           #18
437: invokevirtual #19
440: iload         23
442: invokevirtual #20
445: ldc           #21
447: invokevirtual #19
450: iconst_0
451: invokevirtual #20
454: ldc           #18
456: invokevirtual #19
459: invokevirtual #22
462: iload         23
464: ifne          471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #23
475: aload         24
477: invokestatic  #15
480: aload         25
482: invokestatic  #15
485: aload         26
487: invokestatic  #15
490: new           #16
493: dup
494: invokespecial #17
497: ldc           #18
499: invokevirtual #19
502: aload         27
504: invokevirtual #19
507: ldc           #212
509: invokevirtual #19
512: invokevirtual #22
515: aload         27
517: ldc           #114
519: invokestatic  #68
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: iload         28
536: invokevirtual #134
539: ldc           #21
541: invokevirtual #19
544: iconst_m1
545: invokevirtual #134
548: ldc           #18
550: invokevirtual #19
553: invokevirtual #22
556: iload         28
558: iconst_m1
559: if_icmpne     566
562: iconst_1
563: goto          567
566: iconst_0
567: invokestatic  #23
570: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test259
Start line: 13868
End line: 13941
Method source code: 
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str4 = org.jsoup.Jsoup.clean("", whitelist3);
        org.jsoup.safety.Whitelist whitelist8 = whitelist3.addEnforcedAttribute("#comment", "[:lt(10)!=[hi!=.<html>\n <head></head>\n <body></body>\n</html>]]", "[    =hi!]");
        java.lang.String str9 = org.jsoup.Jsoup.clean("", whitelist3);
        org.jsoup.safety.Whitelist whitelist12 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str13 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist12);
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str24 = org.jsoup.Jsoup.clean(":lt(32)", whitelist23);
        org.jsoup.safety.Whitelist whitelist28 = whitelist23.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray35 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist36 = whitelist23.addTags(strArray35);
        org.jsoup.safety.Whitelist whitelist37 = whitelist19.addProtocols(":matchesOwn(null", "hi!", strArray35);
        org.jsoup.safety.Whitelist whitelist38 = whitelist12.addAttributes("[^hi!]", strArray35);
        org.jsoup.safety.Whitelist whitelist42 = whitelist12.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.safety.Whitelist whitelist45 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist47 = whitelist45.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist49 = whitelist47.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist53 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str54 = org.jsoup.Jsoup.clean(":lt(32)", whitelist53);
        org.jsoup.safety.Whitelist whitelist58 = whitelist53.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray65 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist66 = whitelist53.addTags(strArray65);
        org.jsoup.safety.Whitelist whitelist67 = whitelist49.addProtocols(":matchesOwn(null", "hi!", strArray65);
        java.lang.String[] strArray76 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean77 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray76);
        org.jsoup.safety.Whitelist whitelist78 = whitelist67.addProtocols("\n<!--hi!-->", "#document", strArray76);
        org.jsoup.safety.Whitelist whitelist79 = whitelist12.addProtocols("<html>\n <head></head>\n <body>\n </body>\n</html>", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]", strArray76);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray76, "<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">");
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray76);
        org.jsoup.safety.Whitelist whitelist83 = whitelist3.addTags(strArray76);
        java.lang.String str84 = org.jsoup.Jsoup.clean("[:lt(32)]", whitelist83);
        java.lang.String[] strArray92 = new java.lang.String[] { "[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]", "<html>\n <head></head>\n <body> \n </body>\n</html>", "<<html>\n <head></head>\n <body></body>\n</html>></<html>\n <head></head>\n <body></body>\n</html>><html><head><title>hi&excl;</title></head><body></body></html>", "\n<!--hi!-->[:lt(32)]", ":containsOwn(:containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", "[:lt(32)*=]" };
        org.jsoup.safety.Whitelist whitelist93 = whitelist83.addAttributes("body", strArray92);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!$=   ]" + "'", str13, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":lt(32)" + "'", str24, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist42);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ":lt(32)" + "'", str54, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(whitelist78);
        org.junit.Assert.assertNotNull(whitelist79);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[:lt(32)]" + "'", str84, "[:lt(32)]");
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(whitelist93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #835
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #25
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #114
39: ldc_w         #450
42: ldc_w         #319
45: invokevirtual #11
48: astore_3
49: ldc           #25
51: aload_1
52: invokestatic  #81
55: astore        4
57: invokestatic  #8
60: astore        5
62: ldc           #109
64: ldc           #110
66: aload         5
68: invokestatic  #94
71: astore        6
73: invokestatic  #8
76: astore        7
78: aload         7
80: iconst_1
81: invokevirtual #9
84: astore        8
86: aload         8
88: iconst_0
89: invokevirtual #9
92: astore        9
94: invokestatic  #118
97: astore        10
99: ldc           #43
101: aload         10
103: invokestatic  #81
106: astore        11
108: aload         10
110: ldc           #43
112: ldc           #12
114: ldc           #32
116: invokevirtual #11
119: astore        12
121: bipush        6
123: anewarray     #119
126: dup
127: iconst_0
128: ldc           #109
130: aastore
131: dup
132: iconst_1
133: ldc           #10
135: aastore
136: dup
137: iconst_2
138: ldc           #13
140: aastore
141: dup
142: iconst_3
143: ldc           #50
145: aastore
146: dup
147: iconst_4
148: ldc           #12
150: aastore
151: dup
152: iconst_5
153: ldc           #120
155: aastore
156: astore        13
158: aload         10
160: aload         13
162: invokevirtual #121
165: astore        14
167: aload         9
169: ldc           #38
171: ldc           #12
173: aload         13
175: invokevirtual #122
178: astore        15
180: aload         5
182: ldc           #50
184: aload         13
186: invokevirtual #127
189: astore        16
191: aload         5
193: ldc           #126
195: ldc           #109
197: ldc           #120
199: invokevirtual #11
202: astore        17
204: invokestatic  #8
207: astore        18
209: aload         18
211: iconst_1
212: invokevirtual #9
215: astore        19
217: aload         19
219: iconst_0
220: invokevirtual #9
223: astore        20
225: invokestatic  #118
228: astore        21
230: ldc           #43
232: aload         21
234: invokestatic  #81
237: astore        22
239: aload         21
241: ldc           #43
243: ldc           #12
245: ldc           #32
247: invokevirtual #11
250: astore        23
252: bipush        6
254: anewarray     #119
257: dup
258: iconst_0
259: ldc           #109
261: aastore
262: dup
263: iconst_1
264: ldc           #10
266: aastore
267: dup
268: iconst_2
269: ldc           #13
271: aastore
272: dup
273: iconst_3
274: ldc           #50
276: aastore
277: dup
278: iconst_4
279: ldc           #12
281: aastore
282: dup
283: iconst_5
284: ldc           #120
286: aastore
287: astore        24
289: aload         21
291: aload         24
293: invokevirtual #121
296: astore        25
298: aload         20
300: ldc           #38
302: ldc           #12
304: aload         24
306: invokevirtual #122
309: astore        26
311: iconst_5
312: anewarray     #119
315: dup
316: iconst_0
317: ldc           #13
319: aastore
320: dup
321: iconst_1
322: ldc           #32
324: aastore
325: dup
326: iconst_2
327: ldc           #10
329: aastore
330: dup
331: iconst_3
332: ldc           #43
334: aastore
335: dup
336: iconst_4
337: ldc           #58
339: aastore
340: astore        27
342: ldc           #10
344: aload         27
346: invokestatic  #123
349: istore        28
351: aload         26
353: ldc           #84
355: ldc           #13
357: aload         27
359: invokevirtual #122
362: astore        29
364: aload         5
366: ldc           #157
368: ldc_w         #273
371: aload         27
373: invokevirtual #122
376: astore        30
378: aload         27
380: checkcast     #124
383: ldc_w         #274
386: invokestatic  #245
389: aload         27
391: checkcast     #124
394: invokestatic  #125
397: aload_1
398: aload         27
400: invokevirtual #121
403: astore        31
405: ldc           #58
407: aload         31
409: invokestatic  #81
412: astore        32
414: bipush        6
416: anewarray     #119
419: dup
420: iconst_0
421: ldc           #228
423: aastore
424: dup
425: iconst_1
426: ldc_w         #722
429: aastore
430: dup
431: iconst_2
432: ldc_w         #620
435: aastore
436: dup
437: iconst_3
438: ldc_w         #269
441: aastore
442: dup
443: iconst_4
444: ldc_w         #591
447: aastore
448: dup
449: iconst_5
450: ldc_w         #699
453: aastore
454: astore        33
456: aload         31
458: ldc_w         #746
461: aload         33
463: invokevirtual #127
466: astore        34
468: aload_1
469: invokestatic  #15
472: new           #16
475: dup
476: invokespecial #17
479: ldc           #18
481: invokevirtual #19
484: aload_2
485: invokevirtual #19
488: ldc           #67
490: invokevirtual #19
493: invokevirtual #22
496: aload_2
497: ldc           #25
499: invokestatic  #68
502: aload_3
503: invokestatic  #15
506: new           #16
509: dup
510: invokespecial #17
513: ldc           #18
515: invokevirtual #19
518: aload         4
520: invokevirtual #19
523: ldc           #67
525: invokevirtual #19
528: invokevirtual #22
531: aload         4
533: ldc           #25
535: invokestatic  #68
538: aload         5
540: invokestatic  #15
543: new           #16
546: dup
547: invokespecial #17
550: ldc           #18
552: invokevirtual #19
555: aload         6
557: invokevirtual #19
560: ldc           #111
562: invokevirtual #19
565: invokevirtual #22
568: aload         6
570: ldc           #65
572: invokestatic  #68
575: aload         7
577: invokestatic  #15
580: aload         8
582: invokestatic  #15
585: aload         9
587: invokestatic  #15
590: aload         10
592: invokestatic  #15
595: new           #16
598: dup
599: invokespecial #17
602: ldc           #18
604: invokevirtual #19
607: aload         11
609: invokevirtual #19
612: ldc           #128
614: invokevirtual #19
617: invokevirtual #22
620: aload         11
622: ldc           #43
624: invokestatic  #68
627: aload         12
629: invokestatic  #15
632: aload         13
634: invokestatic  #15
637: aload         14
639: invokestatic  #15
642: aload         15
644: invokestatic  #15
647: aload         16
649: invokestatic  #15
652: aload         17
654: invokestatic  #15
657: aload         18
659: invokestatic  #15
662: aload         19
664: invokestatic  #15
667: aload         20
669: invokestatic  #15
672: aload         21
674: invokestatic  #15
677: new           #16
680: dup
681: invokespecial #17
684: ldc           #18
686: invokevirtual #19
689: aload         22
691: invokevirtual #19
694: ldc           #128
696: invokevirtual #19
699: invokevirtual #22
702: aload         22
704: ldc           #43
706: invokestatic  #68
709: aload         23
711: invokestatic  #15
714: aload         24
716: invokestatic  #15
719: aload         25
721: invokestatic  #15
724: aload         26
726: invokestatic  #15
729: aload         27
731: invokestatic  #15
734: new           #16
737: dup
738: invokespecial #17
741: ldc           #18
743: invokevirtual #19
746: iload         28
748: invokevirtual #20
751: ldc           #21
753: invokevirtual #19
756: iconst_1
757: invokevirtual #20
760: ldc           #18
762: invokevirtual #19
765: invokevirtual #22
768: iload         28
770: iconst_1
771: if_icmpne     778
774: iconst_1
775: goto          779
778: iconst_0
779: invokestatic  #23
782: aload         29
784: invokestatic  #15
787: aload         30
789: invokestatic  #15
792: aload         31
794: invokestatic  #15
797: new           #16
800: dup
801: invokespecial #17
804: ldc           #18
806: invokevirtual #19
809: aload         32
811: invokevirtual #19
814: ldc           #184
816: invokevirtual #19
819: invokevirtual #22
822: aload         32
824: ldc           #58
826: invokestatic  #68
829: aload         33
831: invokestatic  #15
834: aload         34
836: invokestatic  #15
839: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test260
Start line: 13944
End line: 13989
Method source code: 
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist10 = whitelist4.addEnforcedAttribute(":eq(1)", "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]", ".\n<!---->");
        java.lang.String str11 = org.jsoup.Jsoup.clean(":matches(null", whitelist4);
        java.util.regex.Pattern pattern13 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching14 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern13);
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element22 = document18.tagName("hi!");
        org.jsoup.nodes.Element element24 = document18.append("");
        java.lang.String str25 = document18.toString();
        org.jsoup.nodes.Element element27 = document18.prependElement("\nhi!");
        org.jsoup.select.Elements elements29 = document18.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.tagName("hi!");
        org.jsoup.nodes.Element element39 = document33.append("");
        boolean boolean40 = attributeWithValueMatching14.matches((org.jsoup.nodes.Element) document18, (org.jsoup.nodes.Element) document33);
        org.jsoup.nodes.Document document41 = document33.normalise();
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = document41.outputSettings();
        java.lang.String str43 = org.jsoup.Jsoup.clean("#:lt(32)=\"\"", "#hi!", whitelist4, outputSettings42);
        java.lang.String str44 = org.jsoup.Jsoup.clean("<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">", whitelist4);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + ":matches(null" + "'", str11, ":matches(null");
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str25, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#:lt(32)=&quot;&quot;" + "'", str43, "#:lt(32)=&quot;&quot;");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "] PUBLIC &quot;:contains(:gt(100)&quot; &quot;:lt(32)=&quot;&quot;=&quot;.&quot;&quot;&gt;" + "'", str44, "] PUBLIC &quot;:contains(:gt(100)&quot; &quot;:lt(32)=&quot;&quot;=&quot;.&quot;&quot;&gt;");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #836
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc_w         #279
39: ldc           #82
41: ldc           #145
43: invokevirtual #11
46: astore_3
47: ldc_w         #414
50: aload_1
51: invokestatic  #81
54: astore        4
56: aconst_null
57: astore        5
59: new           #96
62: dup
63: ldc           #25
65: aload         5
67: invokespecial #97
70: astore        6
72: ldc           #25
74: ldc           #12
76: invokestatic  #26
79: astore        7
81: ldc           #12
83: aload         7
85: ldc           #12
87: invokestatic  #27
90: astore        8
92: aload         7
94: ldc           #12
96: invokevirtual #28
99: astore        9
101: aload         7
103: ldc           #25
105: invokevirtual #29
108: astore        10
110: aload         7
112: invokevirtual #72
115: astore        11
117: aload         7
119: ldc           #98
121: invokevirtual #99
124: astore        12
126: aload         7
128: ldc           #25
130: invokevirtual #100
133: astore        13
135: ldc           #25
137: ldc           #12
139: invokestatic  #26
142: astore        14
144: ldc           #12
146: aload         14
148: ldc           #12
150: invokestatic  #27
153: astore        15
155: aload         14
157: ldc           #12
159: invokevirtual #28
162: astore        16
164: aload         14
166: ldc           #25
168: invokevirtual #29
171: astore        17
173: aload         6
175: aload         7
177: aload         14
179: invokevirtual #101
182: istore        18
184: aload         14
186: invokevirtual #102
189: astore        19
191: aload         19
193: invokevirtual #30
196: astore        20
198: ldc_w         #416
201: ldc_w         #837
204: aload_1
205: aload         20
207: invokestatic  #33
210: astore        21
212: ldc_w         #274
215: aload_1
216: invokestatic  #81
219: astore        22
221: aload_1
222: invokestatic  #15
225: aload_2
226: invokestatic  #15
229: aload_3
230: invokestatic  #15
233: new           #16
236: dup
237: invokespecial #17
240: ldc           #18
242: invokevirtual #19
245: aload         4
247: invokevirtual #19
250: ldc_w         #417
253: invokevirtual #19
256: invokevirtual #22
259: aload         4
261: ldc_w         #414
264: invokestatic  #68
267: aload         7
269: invokestatic  #15
272: aload         8
274: invokestatic  #15
277: aload         9
279: invokestatic  #15
282: aload         10
284: invokestatic  #15
287: new           #16
290: dup
291: invokespecial #17
294: ldc           #18
296: invokevirtual #19
299: aload         11
301: invokevirtual #19
304: ldc           #78
306: invokevirtual #19
309: invokevirtual #22
312: aload         11
314: ldc           #10
316: invokestatic  #68
319: aload         12
321: invokestatic  #15
324: aload         13
326: invokestatic  #15
329: aload         14
331: invokestatic  #15
334: aload         15
336: invokestatic  #15
339: aload         16
341: invokestatic  #15
344: aload         17
346: invokestatic  #15
349: new           #16
352: dup
353: invokespecial #17
356: ldc           #18
358: invokevirtual #19
361: iload         18
363: invokevirtual #20
366: ldc           #21
368: invokevirtual #19
371: iconst_0
372: invokevirtual #20
375: ldc           #18
377: invokevirtual #19
380: invokevirtual #22
383: iload         18
385: ifne          392
388: iconst_1
389: goto          393
392: iconst_0
393: invokestatic  #23
396: aload         19
398: invokestatic  #15
401: aload         20
403: invokestatic  #15
406: new           #16
409: dup
410: invokespecial #17
413: ldc           #18
415: invokevirtual #19
418: aload         21
420: invokevirtual #19
423: ldc_w         #838
426: invokevirtual #19
429: invokevirtual #22
432: aload         21
434: ldc_w         #839
437: invokestatic  #68
440: new           #16
443: dup
444: invokespecial #17
447: ldc           #18
449: invokevirtual #19
452: aload         22
454: invokevirtual #19
457: ldc_w         #831
460: invokevirtual #19
463: invokevirtual #22
466: aload         22
468: ldc_w         #832
471: invokestatic  #68
474: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test261
Start line: 13992
End line: 14037
Method source code: 
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        boolean boolean37 = tag36.canContainBlock();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #840
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: aload         21
204: invokevirtual #841
207: istore        22
209: aload_1
210: invokestatic  #15
213: aload_2
214: invokestatic  #15
217: aload         5
219: invokestatic  #15
222: aload         6
224: invokestatic  #15
227: aload         7
229: invokestatic  #15
232: aload         8
234: invokestatic  #15
237: aload         9
239: invokestatic  #15
242: aload         10
244: invokestatic  #15
247: new           #16
250: dup
251: invokespecial #17
254: ldc           #18
256: invokevirtual #19
259: iload         11
261: invokevirtual #20
264: ldc           #21
266: invokevirtual #19
269: iconst_0
270: invokevirtual #20
273: ldc           #18
275: invokevirtual #19
278: invokevirtual #22
281: iload         11
283: ifne          290
286: iconst_1
287: goto          291
290: iconst_0
291: invokestatic  #23
294: aload         12
296: invokestatic  #15
299: aload         13
301: invokestatic  #15
304: aload         14
306: invokestatic  #15
309: aload         15
311: invokestatic  #15
314: aload         16
316: invokestatic  #15
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: aload         17
333: invokevirtual #19
336: ldc           #78
338: invokevirtual #19
341: invokevirtual #22
344: aload         17
346: ldc           #10
348: invokestatic  #68
351: new           #16
354: dup
355: invokespecial #17
358: ldc           #18
360: invokevirtual #19
363: aload         18
365: invokevirtual #19
368: ldc           #67
370: invokevirtual #19
373: invokevirtual #22
376: aload         18
378: ldc           #25
380: invokestatic  #68
383: aload         19
385: invokestatic  #79
388: aload         20
390: invokestatic  #15
393: aload         21
395: invokestatic  #15
398: new           #16
401: dup
402: invokespecial #17
405: ldc           #18
407: invokevirtual #19
410: iload         22
412: invokevirtual #20
415: ldc           #21
417: invokevirtual #19
420: iconst_1
421: invokevirtual #20
424: ldc           #18
426: invokevirtual #19
429: invokevirtual #22
432: iload         22
434: iconst_1
435: if_icmpne     442
438: iconst_1
439: goto          443
442: iconst_0
443: invokestatic  #23
446: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test262
Start line: 14040
End line: 14087
Method source code: 
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element28 = document25.empty();
        org.jsoup.nodes.Element element30 = document25.removeClass("hi!");
        org.jsoup.select.Elements elements33 = document25.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        org.jsoup.nodes.Element element34 = document25.empty();
        org.jsoup.nodes.Element element36 = document25.html("body");
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = document25.outputSettings();
        org.jsoup.select.Elements elements39 = document25.getElementsContainingText("<html>\n <head></head>\n <body></body>\n</html>\n<:lt(32)></:lt(32)>");
        org.jsoup.nodes.Document document40 = cleaner3.clean(document25);
        org.jsoup.nodes.Document document41 = document25.normalise();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(elements33);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(document41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #842
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: invokevirtual #103
153: astore        15
155: aload         13
157: ldc           #12
159: invokevirtual #59
162: astore        16
164: aload         13
166: ldc           #10
168: ldc           #58
170: invokevirtual #153
173: astore        17
175: aload         13
177: invokevirtual #103
180: astore        18
182: aload         13
184: ldc_w         #746
187: invokevirtual #115
190: astore        19
192: aload         13
194: invokevirtual #30
197: astore        20
199: aload         13
201: ldc_w         #794
204: invokevirtual #819
207: astore        21
209: aload_3
210: aload         13
212: invokevirtual #47
215: astore        22
217: aload         13
219: invokevirtual #102
222: astore        23
224: aload_1
225: invokestatic  #15
228: aload_2
229: invokestatic  #15
232: aload         5
234: invokestatic  #15
237: aload         6
239: invokestatic  #15
242: aload         7
244: invokestatic  #15
247: aload         8
249: invokestatic  #15
252: aload         9
254: invokestatic  #15
257: aload         10
259: invokestatic  #15
262: new           #16
265: dup
266: invokespecial #17
269: ldc           #18
271: invokevirtual #19
274: iload         11
276: invokevirtual #20
279: ldc           #21
281: invokevirtual #19
284: iconst_0
285: invokevirtual #20
288: ldc           #18
290: invokevirtual #19
293: invokevirtual #22
296: iload         11
298: ifne          305
301: iconst_1
302: goto          306
305: iconst_0
306: invokestatic  #23
309: aload         12
311: invokestatic  #15
314: aload         13
316: invokestatic  #15
319: aload         14
321: invokestatic  #15
324: aload         15
326: invokestatic  #15
329: aload         16
331: invokestatic  #15
334: aload         17
336: invokestatic  #15
339: aload         18
341: invokestatic  #15
344: aload         19
346: invokestatic  #15
349: aload         20
351: invokestatic  #15
354: aload         21
356: invokestatic  #15
359: aload         22
361: invokestatic  #15
364: aload         23
366: invokestatic  #15
369: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test263
Start line: 14090
End line: 14140
Method source code: 
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        java.util.regex.Pattern pattern0 = null;
        org.jsoup.select.Evaluator.MatchesOwn matchesOwn1 = new org.jsoup.select.Evaluator.MatchesOwn(pattern0);
        java.lang.String str2 = matchesOwn1.toString();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element10 = document6.tagName("hi!");
        org.jsoup.nodes.Element element12 = document6.append("");
        java.lang.String str13 = document6.toString();
        org.jsoup.nodes.Element element15 = document6.append("[hi!$=   ]");
        java.lang.String str16 = document6.data();
        org.jsoup.safety.Whitelist whitelist17 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner20 = new org.jsoup.safety.Cleaner(whitelist19);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining23 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document25 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList31 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document29, "hi!");
        org.jsoup.nodes.Element element33 = document29.tagName("hi!");
        org.jsoup.nodes.Element element35 = document29.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings36 = document29.outputSettings();
        boolean boolean37 = attributeWithValueContaining23.matches((org.jsoup.nodes.Element) document25, (org.jsoup.nodes.Element) document29);
        org.jsoup.nodes.Document document38 = cleaner20.clean(document29);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = matchesOwn1.matches((org.jsoup.nodes.Element) document6, (org.jsoup.nodes.Element) document29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":matchesOwn(null" + "'", str2, ":matchesOwn(null");
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str13, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(outputSettings36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(document38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #843
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #345
30: dup
31: aload_1
32: invokespecial #346
35: astore_2
36: aload_2
37: invokevirtual #347
40: astore_3
41: ldc           #25
43: ldc           #12
45: invokestatic  #26
48: astore        4
50: ldc           #12
52: aload         4
54: ldc           #12
56: invokestatic  #27
59: astore        5
61: aload         4
63: ldc           #12
65: invokevirtual #28
68: astore        6
70: aload         4
72: ldc           #25
74: invokevirtual #29
77: astore        7
79: aload         4
81: invokevirtual #72
84: astore        8
86: aload         4
88: ldc           #65
90: invokevirtual #29
93: astore        9
95: aload         4
97: invokevirtual #844
100: astore        10
102: invokestatic  #8
105: astore        11
107: aload         11
109: iconst_1
110: invokevirtual #9
113: astore        12
115: new           #40
118: dup
119: aload         12
121: invokespecial #41
124: astore        13
126: new           #42
129: dup
130: ldc           #43
132: ldc           #32
134: invokespecial #44
137: astore        14
139: ldc           #12
141: invokestatic  #45
144: astore        15
146: ldc           #25
148: ldc           #12
150: invokestatic  #26
153: astore        16
155: ldc           #12
157: aload         16
159: ldc           #12
161: invokestatic  #27
164: astore        17
166: aload         16
168: ldc           #12
170: invokevirtual #28
173: astore        18
175: aload         16
177: ldc           #25
179: invokevirtual #29
182: astore        19
184: aload         16
186: invokevirtual #30
189: astore        20
191: aload         14
193: aload         15
195: aload         16
197: invokevirtual #46
200: istore        21
202: aload         13
204: aload         16
206: invokevirtual #47
209: astore        22
211: aload_2
212: aload         4
214: aload         16
216: invokevirtual #351
219: istore        23
221: ldc           #76
223: invokestatic  #35
226: goto          231
229: astore        23
231: new           #16
234: dup
235: invokespecial #17
238: ldc           #18
240: invokevirtual #19
243: aload_3
244: invokevirtual #19
247: ldc_w         #352
250: invokevirtual #19
253: invokevirtual #22
256: aload_3
257: ldc           #38
259: invokestatic  #68
262: aload         4
264: invokestatic  #15
267: aload         5
269: invokestatic  #15
272: aload         6
274: invokestatic  #15
277: aload         7
279: invokestatic  #15
282: new           #16
285: dup
286: invokespecial #17
289: ldc           #18
291: invokevirtual #19
294: aload         8
296: invokevirtual #19
299: ldc           #78
301: invokevirtual #19
304: invokevirtual #22
307: aload         8
309: ldc           #10
311: invokestatic  #68
314: aload         9
316: invokestatic  #15
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: aload         10
333: invokevirtual #19
336: ldc           #67
338: invokevirtual #19
341: invokevirtual #22
344: aload         10
346: ldc           #25
348: invokestatic  #68
351: aload         11
353: invokestatic  #15
356: aload         12
358: invokestatic  #15
361: aload         15
363: invokestatic  #15
366: aload         16
368: invokestatic  #15
371: aload         17
373: invokestatic  #15
376: aload         18
378: invokestatic  #15
381: aload         19
383: invokestatic  #15
386: aload         20
388: invokestatic  #15
391: new           #16
394: dup
395: invokespecial #17
398: ldc           #18
400: invokevirtual #19
403: iload         21
405: invokevirtual #20
408: ldc           #21
410: invokevirtual #19
413: iconst_0
414: invokevirtual #20
417: ldc           #18
419: invokevirtual #19
422: invokevirtual #22
425: iload         21
427: ifne          434
430: iconst_1
431: goto          435
434: iconst_0
435: invokestatic  #23
438: aload         22
440: invokestatic  #15
443: return
Exception table:
from    to  target type
211   226   229   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test264
Start line: 14143
End line: 14184
Method source code: 
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parseBodyFragment("                                                                                                    ");
        org.jsoup.nodes.Document document29 = cleaner3.clean(document28);
        org.jsoup.nodes.Document document32 = org.jsoup.parser.Parser.parse(" text=\"hi!\" #document=\"#document\"", ":containsOwn(<html>\n <head></head>\n <body>\n </body>\n</html>");
        boolean boolean33 = cleaner3.isValid(document32);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #845
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: ldc_w         #613
160: invokestatic  #193
163: astore        17
165: aload_3
166: aload         17
168: invokevirtual #47
171: astore        18
173: ldc_w         #552
176: ldc_w         #846
179: invokestatic  #847
182: astore        19
184: aload_3
185: aload         19
187: invokevirtual #155
190: istore        20
192: aload_1
193: invokestatic  #15
196: aload_2
197: invokestatic  #15
200: aload         5
202: invokestatic  #15
205: aload         6
207: invokestatic  #15
210: aload         7
212: invokestatic  #15
215: aload         8
217: invokestatic  #15
220: aload         9
222: invokestatic  #15
225: aload         10
227: invokestatic  #15
230: new           #16
233: dup
234: invokespecial #17
237: ldc           #18
239: invokevirtual #19
242: iload         11
244: invokevirtual #20
247: ldc           #21
249: invokevirtual #19
252: iconst_0
253: invokevirtual #20
256: ldc           #18
258: invokevirtual #19
261: invokevirtual #22
264: iload         11
266: ifne          273
269: iconst_1
270: goto          274
273: iconst_0
274: invokestatic  #23
277: aload         12
279: invokestatic  #15
282: aload         13
284: invokestatic  #15
287: new           #16
290: dup
291: invokespecial #17
294: ldc           #18
296: invokevirtual #19
299: aload         14
301: invokevirtual #19
304: ldc           #197
306: invokevirtual #19
309: invokevirtual #22
312: aload         14
314: ldc           #151
316: invokestatic  #68
319: new           #16
322: dup
323: invokespecial #17
326: ldc           #18
328: invokevirtual #19
331: aload         15
333: invokevirtual #19
336: ldc           #67
338: invokevirtual #19
341: invokevirtual #22
344: aload         15
346: ldc           #25
348: invokestatic  #68
351: aload         16
353: invokestatic  #15
356: aload         17
358: invokestatic  #15
361: aload         18
363: invokestatic  #15
366: aload         19
368: invokestatic  #15
371: new           #16
374: dup
375: invokespecial #17
378: ldc           #18
380: invokevirtual #19
383: iload         20
385: invokevirtual #20
388: ldc           #21
390: invokevirtual #19
393: iconst_1
394: invokevirtual #20
397: ldc           #18
399: invokevirtual #19
402: invokevirtual #22
405: iload         20
407: iconst_1
408: if_icmpne     415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #23
419: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test265
Start line: 14187
End line: 14254
Method source code: 
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        org.jsoup.select.Evaluator.Tag tag1 = new org.jsoup.select.Evaluator.Tag("<html> <head></head> <body> </body> </html>");
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("\nhi!", "[hi!$=<html> <head></head> <body></body> </html>]");
        org.jsoup.select.Elements elements6 = document4.getElementsContainingOwnText("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.safety.Whitelist whitelist7 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist9 = whitelist7.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner10 = new org.jsoup.safety.Cleaner(whitelist9);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining13 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document15 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document19, "hi!");
        org.jsoup.nodes.Element element23 = document19.tagName("hi!");
        org.jsoup.nodes.Element element25 = document19.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = document19.outputSettings();
        boolean boolean27 = attributeWithValueContaining13.matches((org.jsoup.nodes.Element) document15, (org.jsoup.nodes.Element) document19);
        org.jsoup.nodes.Document document28 = cleaner10.clean(document19);
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str31 = document30.toString();
        java.lang.String str32 = document30.baseUri();
        org.jsoup.nodes.Document document33 = cleaner10.clean(document30);
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parseBodyFragment("                                                                                                    ");
        org.jsoup.nodes.Document document36 = cleaner10.clean(document35);
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList42 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document40, "hi!");
        org.jsoup.nodes.Element element43 = document40.empty();
        org.jsoup.nodes.Element element45 = document40.removeClass("hi!");
        org.jsoup.select.Elements elements48 = document40.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        org.jsoup.nodes.Element element49 = document40.empty();
        org.jsoup.nodes.Document document50 = document40.clone();
        org.jsoup.nodes.Document document51 = cleaner10.clean(document50);
        boolean boolean52 = tag1.matches((org.jsoup.nodes.Element) document4, (org.jsoup.nodes.Element) document51);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.select.Elements elements55 = document51.getElementsByAttributeValueStarting("[**=[:lt(32)]]", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(elements6);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str31, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(nodeList42);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(elements48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #848
20: aastore
21: invokevirtual #7
24: pop
25: new           #360
28: dup
29: ldc           #170
31: invokespecial #361
34: astore_1
35: ldc           #98
37: ldc           #183
39: invokestatic  #26
42: astore_2
43: aload_2
44: ldc           #109
46: invokevirtual #62
49: astore_3
50: invokestatic  #8
53: astore        4
55: aload         4
57: iconst_1
58: invokevirtual #9
61: astore        5
63: new           #40
66: dup
67: aload         5
69: invokespecial #41
72: astore        6
74: new           #42
77: dup
78: ldc           #43
80: ldc           #32
82: invokespecial #44
85: astore        7
87: ldc           #12
89: invokestatic  #45
92: astore        8
94: ldc           #25
96: ldc           #12
98: invokestatic  #26
101: astore        9
103: ldc           #12
105: aload         9
107: ldc           #12
109: invokestatic  #27
112: astore        10
114: aload         9
116: ldc           #12
118: invokevirtual #28
121: astore        11
123: aload         9
125: ldc           #25
127: invokevirtual #29
130: astore        12
132: aload         9
134: invokevirtual #30
137: astore        13
139: aload         7
141: aload         8
143: aload         9
145: invokevirtual #46
148: istore        14
150: aload         6
152: aload         9
154: invokevirtual #47
157: astore        15
159: ldc           #10
161: invokestatic  #193
164: astore        16
166: aload         16
168: invokevirtual #72
171: astore        17
173: aload         16
175: invokevirtual #194
178: astore        18
180: aload         6
182: aload         16
184: invokevirtual #47
187: astore        19
189: ldc_w         #613
192: invokestatic  #193
195: astore        20
197: aload         6
199: aload         20
201: invokevirtual #47
204: astore        21
206: ldc           #25
208: ldc           #12
210: invokestatic  #26
213: astore        22
215: ldc           #12
217: aload         22
219: ldc           #12
221: invokestatic  #27
224: astore        23
226: aload         22
228: invokevirtual #103
231: astore        24
233: aload         22
235: ldc           #12
237: invokevirtual #59
240: astore        25
242: aload         22
244: ldc           #10
246: ldc           #58
248: invokevirtual #153
251: astore        26
253: aload         22
255: invokevirtual #103
258: astore        27
260: aload         22
262: invokevirtual #154
265: astore        28
267: aload         6
269: aload         28
271: invokevirtual #47
274: astore        29
276: aload_1
277: aload_2
278: aload         29
280: invokevirtual #368
283: istore        30
285: aload         29
287: ldc_w         #849
290: ldc           #25
292: invokevirtual #436
295: astore        31
297: ldc           #141
299: invokestatic  #35
302: goto          307
305: astore        31
307: aload_2
308: invokestatic  #15
311: aload_3
312: invokestatic  #15
315: aload         4
317: invokestatic  #15
320: aload         5
322: invokestatic  #15
325: aload         8
327: invokestatic  #15
330: aload         9
332: invokestatic  #15
335: aload         10
337: invokestatic  #15
340: aload         11
342: invokestatic  #15
345: aload         12
347: invokestatic  #15
350: aload         13
352: invokestatic  #15
355: new           #16
358: dup
359: invokespecial #17
362: ldc           #18
364: invokevirtual #19
367: iload         14
369: invokevirtual #20
372: ldc           #21
374: invokevirtual #19
377: iconst_0
378: invokevirtual #20
381: ldc           #18
383: invokevirtual #19
386: invokevirtual #22
389: iload         14
391: ifne          398
394: iconst_1
395: goto          399
398: iconst_0
399: invokestatic  #23
402: aload         15
404: invokestatic  #15
407: aload         16
409: invokestatic  #15
412: new           #16
415: dup
416: invokespecial #17
419: ldc           #18
421: invokevirtual #19
424: aload         17
426: invokevirtual #19
429: ldc           #197
431: invokevirtual #19
434: invokevirtual #22
437: aload         17
439: ldc           #151
441: invokestatic  #68
444: new           #16
447: dup
448: invokespecial #17
451: ldc           #18
453: invokevirtual #19
456: aload         18
458: invokevirtual #19
461: ldc           #67
463: invokevirtual #19
466: invokevirtual #22
469: aload         18
471: ldc           #25
473: invokestatic  #68
476: aload         19
478: invokestatic  #15
481: aload         20
483: invokestatic  #15
486: aload         21
488: invokestatic  #15
491: aload         22
493: invokestatic  #15
496: aload         23
498: invokestatic  #15
501: aload         24
503: invokestatic  #15
506: aload         25
508: invokestatic  #15
511: aload         26
513: invokestatic  #15
516: aload         27
518: invokestatic  #15
521: aload         28
523: invokestatic  #15
526: aload         29
528: invokestatic  #15
531: new           #16
534: dup
535: invokespecial #17
538: ldc           #18
540: invokevirtual #19
543: iload         30
545: invokevirtual #20
548: ldc           #21
550: invokevirtual #19
553: iconst_0
554: invokevirtual #20
557: ldc           #18
559: invokevirtual #19
562: invokevirtual #22
565: iload         30
567: ifne          574
570: iconst_1
571: goto          575
574: iconst_0
575: invokestatic  #23
578: return
Exception table:
from    to  target type
285   302   305   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test266
Start line: 14257
End line: 14324
Method source code: 
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        org.jsoup.select.Evaluator.Attribute attribute1 = new org.jsoup.select.Evaluator.Attribute(":lt(32)");
        org.jsoup.nodes.Element element2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", ":lt(32)");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = document5.dataset();
        java.lang.String str7 = document5.outerHtml();
        boolean boolean8 = attribute1.matches(element2, (org.jsoup.nodes.Element) document5);
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist11 = whitelist9.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner12 = new org.jsoup.safety.Cleaner(whitelist11);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining15 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document17 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element25 = document21.tagName("hi!");
        org.jsoup.nodes.Element element27 = document21.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = document21.outputSettings();
        boolean boolean29 = attributeWithValueContaining15.matches((org.jsoup.nodes.Element) document17, (org.jsoup.nodes.Element) document21);
        org.jsoup.nodes.Document document30 = cleaner12.clean(document21);
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element38 = document34.tagName("hi!");
        org.jsoup.nodes.Element element40 = document34.append("");
        java.lang.String str41 = document34.toString();
        java.lang.String str42 = document34.id();
        org.jsoup.nodes.Node node43 = document34.parent();
        org.jsoup.nodes.Document document44 = cleaner12.clean(document34);
        org.jsoup.nodes.Document document48 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList50 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document48, "hi!");
        org.jsoup.nodes.Element element52 = document48.text("");
        boolean boolean53 = attribute1.matches((org.jsoup.nodes.Element) document34, (org.jsoup.nodes.Element) document48);
        org.jsoup.select.Elements elements55 = document48.getElementsByAttribute("[:lt(10)!=[hi!=.<html>\n <head></head>\n <body></body>\n</html>]]");
        org.jsoup.nodes.Attributes attributes56 = document48.attributes();
        java.util.Spliterator<org.jsoup.nodes.Attribute> attributeSpliterator57 = attributes56.spliterator();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = attributes56.dataset();
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str7, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str41, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(nodeList50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(elements55);
        org.junit.Assert.assertNotNull(attributes56);
        org.junit.Assert.assertNotNull(attributeSpliterator57);
        org.junit.Assert.assertNotNull(strMap58);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #850
20: aastore
21: invokevirtual #7
24: pop
25: new           #532
28: dup
29: ldc           #43
31: invokespecial #533
34: astore_1
35: aconst_null
36: astore_2
37: ldc           #25
39: ldc           #43
41: invokestatic  #26
44: astore_3
45: aload_3
46: invokevirtual #534
49: astore        4
51: aload_3
52: invokevirtual #535
55: astore        5
57: aload_1
58: aload_2
59: aload_3
60: invokevirtual #536
63: istore        6
65: invokestatic  #8
68: astore        7
70: aload         7
72: iconst_1
73: invokevirtual #9
76: astore        8
78: new           #40
81: dup
82: aload         8
84: invokespecial #41
87: astore        9
89: new           #42
92: dup
93: ldc           #43
95: ldc           #32
97: invokespecial #44
100: astore        10
102: ldc           #12
104: invokestatic  #45
107: astore        11
109: ldc           #25
111: ldc           #12
113: invokestatic  #26
116: astore        12
118: ldc           #12
120: aload         12
122: ldc           #12
124: invokestatic  #27
127: astore        13
129: aload         12
131: ldc           #12
133: invokevirtual #28
136: astore        14
138: aload         12
140: ldc           #25
142: invokevirtual #29
145: astore        15
147: aload         12
149: invokevirtual #30
152: astore        16
154: aload         10
156: aload         11
158: aload         12
160: invokevirtual #46
163: istore        17
165: aload         9
167: aload         12
169: invokevirtual #47
172: astore        18
174: ldc           #25
176: ldc           #12
178: invokestatic  #26
181: astore        19
183: ldc           #12
185: aload         19
187: ldc           #12
189: invokestatic  #27
192: astore        20
194: aload         19
196: ldc           #12
198: invokevirtual #28
201: astore        21
203: aload         19
205: ldc           #25
207: invokevirtual #29
210: astore        22
212: aload         19
214: invokevirtual #72
217: astore        23
219: aload         19
221: invokevirtual #73
224: astore        24
226: aload         19
228: invokevirtual #74
231: astore        25
233: aload         9
235: aload         19
237: invokevirtual #47
240: astore        26
242: ldc           #25
244: ldc           #12
246: invokestatic  #26
249: astore        27
251: ldc           #12
253: aload         27
255: ldc           #12
257: invokestatic  #27
260: astore        28
262: aload         27
264: ldc           #25
266: invokevirtual #64
269: astore        29
271: aload_1
272: aload         19
274: aload         27
276: invokevirtual #536
279: istore        30
281: aload         27
283: ldc_w         #450
286: invokevirtual #458
289: astore        31
291: aload         27
293: invokevirtual #164
296: astore        32
298: aload         32
300: invokevirtual #678
303: astore        33
305: aload         32
307: invokevirtual #471
310: astore        34
312: aload_3
313: invokestatic  #15
316: aload         4
318: invokestatic  #15
321: new           #16
324: dup
325: invokespecial #17
328: ldc           #18
330: invokevirtual #19
333: aload         5
335: invokevirtual #19
338: ldc           #78
340: invokevirtual #19
343: invokevirtual #22
346: aload         5
348: ldc           #10
350: invokestatic  #68
353: new           #16
356: dup
357: invokespecial #17
360: ldc           #18
362: invokevirtual #19
365: iload         6
367: invokevirtual #20
370: ldc           #21
372: invokevirtual #19
375: iconst_0
376: invokevirtual #20
379: ldc           #18
381: invokevirtual #19
384: invokevirtual #22
387: iload         6
389: ifne          396
392: iconst_1
393: goto          397
396: iconst_0
397: invokestatic  #23
400: aload         7
402: invokestatic  #15
405: aload         8
407: invokestatic  #15
410: aload         11
412: invokestatic  #15
415: aload         12
417: invokestatic  #15
420: aload         13
422: invokestatic  #15
425: aload         14
427: invokestatic  #15
430: aload         15
432: invokestatic  #15
435: aload         16
437: invokestatic  #15
440: new           #16
443: dup
444: invokespecial #17
447: ldc           #18
449: invokevirtual #19
452: iload         17
454: invokevirtual #20
457: ldc           #21
459: invokevirtual #19
462: iconst_0
463: invokevirtual #20
466: ldc           #18
468: invokevirtual #19
471: invokevirtual #22
474: iload         17
476: ifne          483
479: iconst_1
480: goto          484
483: iconst_0
484: invokestatic  #23
487: aload         18
489: invokestatic  #15
492: aload         19
494: invokestatic  #15
497: aload         20
499: invokestatic  #15
502: aload         21
504: invokestatic  #15
507: aload         22
509: invokestatic  #15
512: new           #16
515: dup
516: invokespecial #17
519: ldc           #18
521: invokevirtual #19
524: aload         23
526: invokevirtual #19
529: ldc           #78
531: invokevirtual #19
534: invokevirtual #22
537: aload         23
539: ldc           #10
541: invokestatic  #68
544: new           #16
547: dup
548: invokespecial #17
551: ldc           #18
553: invokevirtual #19
556: aload         24
558: invokevirtual #19
561: ldc           #67
563: invokevirtual #19
566: invokevirtual #22
569: aload         24
571: ldc           #25
573: invokestatic  #68
576: aload         25
578: invokestatic  #79
581: aload         26
583: invokestatic  #15
586: aload         27
588: invokestatic  #15
591: aload         28
593: invokestatic  #15
596: aload         29
598: invokestatic  #15
601: new           #16
604: dup
605: invokespecial #17
608: ldc           #18
610: invokevirtual #19
613: iload         30
615: invokevirtual #20
618: ldc           #21
620: invokevirtual #19
623: iconst_0
624: invokevirtual #20
627: ldc           #18
629: invokevirtual #19
632: invokevirtual #22
635: iload         30
637: ifne          644
640: iconst_1
641: goto          645
644: iconst_0
645: invokestatic  #23
648: aload         31
650: invokestatic  #15
653: aload         32
655: invokestatic  #15
658: aload         33
660: invokestatic  #15
663: aload         34
665: invokestatic  #15
668: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test267
Start line: 14327
End line: 14338
Method source code: 
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        org.jsoup.safety.Whitelist whitelist0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Cleaner cleaner1 = new org.jsoup.safety.Cleaner(whitelist0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #851
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #40
30: dup
31: aload_1
32: invokespecial #41
35: astore_2
36: ldc           #34
38: invokestatic  #35
41: goto          45
44: astore_2
45: return
Exception table:
from    to  target type
27    41    44   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test268
Start line: 14341
End line: 14363
Method source code: 
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj3 = objList0.peekFirst();
        objList0.addFirst((java.lang.Object) ":gt(100)");
        org.jsoup.safety.Whitelist whitelist8 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist10 = whitelist8.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist14 = whitelist8.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist18 = whitelist8.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str19 = org.jsoup.Jsoup.clean("#document", "<html>\n <head></head>\n <body></body>\n</html>", whitelist18);
        objList0.addLast((java.lang.Object) whitelist18);
        java.lang.Object obj21 = objList0.peekLast();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#document" + "'", str19, "#document");
        org.junit.Assert.assertNotNull(obj21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #852
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: aload_1
41: invokevirtual #91
44: astore_3
45: aload_1
46: ldc           #92
48: invokevirtual #93
51: invokestatic  #8
54: astore        4
56: aload         4
58: iconst_1
59: invokevirtual #9
62: astore        5
64: aload         4
66: ldc           #10
68: ldc           #10
70: ldc           #10
72: invokevirtual #11
75: astore        6
77: aload         4
79: ldc           #12
81: ldc           #13
83: ldc           #12
85: invokevirtual #11
88: astore        7
90: ldc           #13
92: ldc           #10
94: aload         7
96: invokestatic  #94
99: astore        8
101: aload_1
102: aload         7
104: invokevirtual #95
107: aload_1
108: invokevirtual #287
111: astore        9
113: new           #16
116: dup
117: invokespecial #17
120: ldc           #18
122: invokevirtual #19
125: iload_2
126: invokevirtual #20
129: ldc           #21
131: invokevirtual #19
134: iconst_0
135: invokevirtual #20
138: ldc           #18
140: invokevirtual #19
143: invokevirtual #22
146: iload_2
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #23
158: aload_3
159: invokestatic  #79
162: aload         4
164: invokestatic  #15
167: aload         5
169: invokestatic  #15
172: aload         6
174: invokestatic  #15
177: aload         7
179: invokestatic  #15
182: new           #16
185: dup
186: invokespecial #17
189: ldc           #18
191: invokevirtual #19
194: aload         8
196: invokevirtual #19
199: ldc           #107
201: invokevirtual #19
204: invokevirtual #22
207: aload         8
209: ldc           #13
211: invokestatic  #68
214: aload         9
216: invokestatic  #15
219: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test269
Start line: 14366
End line: 14422
Method source code: 
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parseBodyFragment("                                                                                                    ");
        org.jsoup.nodes.Document document29 = cleaner3.clean(document28);
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element36 = document33.empty();
        org.jsoup.nodes.Element element38 = document33.removeClass("hi!");
        org.jsoup.select.Elements elements41 = document33.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        org.jsoup.nodes.Element element42 = document33.empty();
        org.jsoup.nodes.Document document43 = document33.clone();
        org.jsoup.nodes.Document document44 = cleaner3.clean(document43);
        java.util.regex.Pattern pattern46 = null;
        org.jsoup.select.Elements elements47 = document44.getElementsByAttributeValueMatching("<html>\n <head></head>\n <body>\n  .&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;\n </body>\n</html>", pattern46);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(elements41);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(elements47);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #853
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: ldc_w         #613
160: invokestatic  #193
163: astore        17
165: aload_3
166: aload         17
168: invokevirtual #47
171: astore        18
173: ldc           #25
175: ldc           #12
177: invokestatic  #26
180: astore        19
182: ldc           #12
184: aload         19
186: ldc           #12
188: invokestatic  #27
191: astore        20
193: aload         19
195: invokevirtual #103
198: astore        21
200: aload         19
202: ldc           #12
204: invokevirtual #59
207: astore        22
209: aload         19
211: ldc           #10
213: ldc           #58
215: invokevirtual #153
218: astore        23
220: aload         19
222: invokevirtual #103
225: astore        24
227: aload         19
229: invokevirtual #154
232: astore        25
234: aload_3
235: aload         25
237: invokevirtual #47
240: astore        26
242: aconst_null
243: astore        27
245: aload         26
247: ldc_w         #467
250: aload         27
252: invokevirtual #294
255: astore        28
257: aload_1
258: invokestatic  #15
261: aload_2
262: invokestatic  #15
265: aload         5
267: invokestatic  #15
270: aload         6
272: invokestatic  #15
275: aload         7
277: invokestatic  #15
280: aload         8
282: invokestatic  #15
285: aload         9
287: invokestatic  #15
290: aload         10
292: invokestatic  #15
295: new           #16
298: dup
299: invokespecial #17
302: ldc           #18
304: invokevirtual #19
307: iload         11
309: invokevirtual #20
312: ldc           #21
314: invokevirtual #19
317: iconst_0
318: invokevirtual #20
321: ldc           #18
323: invokevirtual #19
326: invokevirtual #22
329: iload         11
331: ifne          338
334: iconst_1
335: goto          339
338: iconst_0
339: invokestatic  #23
342: aload         12
344: invokestatic  #15
347: aload         13
349: invokestatic  #15
352: new           #16
355: dup
356: invokespecial #17
359: ldc           #18
361: invokevirtual #19
364: aload         14
366: invokevirtual #19
369: ldc           #197
371: invokevirtual #19
374: invokevirtual #22
377: aload         14
379: ldc           #151
381: invokestatic  #68
384: new           #16
387: dup
388: invokespecial #17
391: ldc           #18
393: invokevirtual #19
396: aload         15
398: invokevirtual #19
401: ldc           #67
403: invokevirtual #19
406: invokevirtual #22
409: aload         15
411: ldc           #25
413: invokestatic  #68
416: aload         16
418: invokestatic  #15
421: aload         17
423: invokestatic  #15
426: aload         18
428: invokestatic  #15
431: aload         19
433: invokestatic  #15
436: aload         20
438: invokestatic  #15
441: aload         21
443: invokestatic  #15
446: aload         22
448: invokestatic  #15
451: aload         23
453: invokestatic  #15
456: aload         24
458: invokestatic  #15
461: aload         25
463: invokestatic  #15
466: aload         26
468: invokestatic  #15
471: aload         28
473: invokestatic  #15
476: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test270
Start line: 14425
End line: 14499
Method source code: 
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean2 = tag1.isBlock();
        boolean boolean3 = tag1.formatAsBlock();
        boolean boolean4 = tag1.preserveWhitespace();
        boolean boolean5 = tag1.canContainBlock();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList7 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document11 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList13 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document11, "hi!");
        org.jsoup.nodes.Element element15 = document11.text("");
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document19, "hi!");
        org.jsoup.nodes.Element element23 = document19.tagName("hi!");
        org.jsoup.nodes.Element element25 = document19.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = document19.outputSettings();
        org.jsoup.nodes.Document document27 = document11.outputSettings(outputSettings26);
        org.jsoup.nodes.Document document28 = document11.normalise();
        objList7.addLast((java.lang.Object) document28);
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element36 = document33.empty();
        org.jsoup.nodes.Element element38 = element36.toggleClass("#document");
        org.jsoup.select.Elements elements40 = element38.getElementsByAttributeStarting(":lt(32)");
        java.util.List<org.jsoup.nodes.Node> nodeList41 = element38.siblingNodes();
        boolean boolean42 = objList7.retainAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList41);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan44 = new org.jsoup.select.Evaluator.IndexLessThan((int) ' ');
        java.lang.String str45 = indexLessThan44.toString();
        boolean boolean46 = objList7.equals((java.lang.Object) str45);
        org.jsoup.select.Evaluator.AttributeWithValueEnding attributeWithValueEnding49 = new org.jsoup.select.Evaluator.AttributeWithValueEnding("\nhi!", "<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean50 = objList7.add((java.lang.Object) "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.Object obj51 = objList7.getFirst();
        org.jsoup.safety.Whitelist whitelist53 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes55 = whitelist53.getEnforcedAttributes("#text");
        boolean boolean56 = org.jsoup.Jsoup.isValid("[^[^hi!]]", whitelist53);
        java.lang.String[] strArray63 = new java.lang.String[] { "[:lt(32)]", " text=\"hi!\" .<html>\n <head></head>\n <body></body>\n</html>=\"\"", "[hi!=.<html>\n <head></head>\n <body></body>\n</html>]", ".", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "<hi!></hi!>:contains(:gt(100)<html>\n <head></head>\n <body></body>\n</html>" };
        org.jsoup.safety.Whitelist whitelist64 = whitelist53.addTags(strArray63);
        org.jsoup.nodes.Attributes attributes66 = whitelist53.getEnforcedAttributes("<!---->");
        boolean boolean67 = objList7.equals((java.lang.Object) attributes66);
        org.jsoup.nodes.Element element68 = new org.jsoup.nodes.Element(tag1, ":lt(32)=\":contains(&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  [:lt(32)]\n &lt;/body&gt;\n&lt;/html&gt;\"", attributes66);
        org.junit.Assert.assertNotNull(tag1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(elements40);
        org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":lt(32)" + "'", str45, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", obj51, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(whitelist53);
        org.junit.Assert.assertNotNull(attributes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(attributes66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #854
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #13
27: invokestatic  #424
30: astore_1
31: aload_1
32: invokevirtual #425
35: istore_2
36: aload_1
37: invokevirtual #456
40: istore_3
41: aload_1
42: invokevirtual #429
45: istore        4
47: aload_1
48: invokevirtual #841
51: istore        5
53: new           #88
56: dup
57: invokespecial #89
60: astore        6
62: ldc           #25
64: ldc           #12
66: invokestatic  #26
69: astore        7
71: ldc           #12
73: aload         7
75: ldc           #12
77: invokestatic  #27
80: astore        8
82: aload         7
84: ldc           #25
86: invokevirtual #64
89: astore        9
91: ldc           #25
93: ldc           #12
95: invokestatic  #26
98: astore        10
100: ldc           #12
102: aload         10
104: ldc           #12
106: invokestatic  #27
109: astore        11
111: aload         10
113: ldc           #12
115: invokevirtual #28
118: astore        12
120: aload         10
122: ldc           #25
124: invokevirtual #29
127: astore        13
129: aload         10
131: invokevirtual #30
134: astore        14
136: aload         7
138: aload         14
140: invokevirtual #175
143: astore        15
145: aload         7
147: invokevirtual #102
150: astore        16
152: aload         6
154: aload         16
156: invokevirtual #95
159: ldc           #25
161: ldc           #12
163: invokestatic  #26
166: astore        17
168: ldc           #12
170: aload         17
172: ldc           #12
174: invokestatic  #27
177: astore        18
179: aload         17
181: invokevirtual #103
184: astore        19
186: aload         19
188: ldc           #13
190: invokevirtual #177
193: astore        20
195: aload         20
197: ldc           #43
199: invokevirtual #426
202: astore        21
204: aload         20
206: invokevirtual #396
209: astore        22
211: aload         6
213: aload         22
215: invokevirtual #584
218: istore        23
220: new           #48
223: dup
224: bipush        32
226: invokespecial #49
229: astore        24
231: aload         24
233: invokevirtual #585
236: astore        25
238: aload         6
240: aload         25
242: invokevirtual #90
245: istore        26
247: new           #855
250: dup
251: ldc           #98
253: ldc           #10
255: invokespecial #856
258: astore        27
260: aload         6
262: ldc           #10
264: invokevirtual #857
267: istore        28
269: aload         6
271: invokevirtual #562
274: astore        29
276: invokestatic  #118
279: astore        30
281: aload         30
283: ldc           #51
285: invokevirtual #150
288: astore        31
290: ldc_w         #439
293: aload         30
295: invokestatic  #14
298: istore        32
300: bipush        6
302: anewarray     #119
305: dup
306: iconst_0
307: ldc           #58
309: aastore
310: dup
311: iconst_1
312: ldc_w         #830
315: aastore
316: dup
317: iconst_2
318: ldc_w         #858
321: aastore
322: dup
323: iconst_3
324: ldc           #86
326: aastore
327: dup
328: iconst_4
329: ldc           #158
331: aastore
332: dup
333: iconst_5
334: ldc_w         #859
337: aastore
338: astore        33
340: aload         30
342: aload         33
344: invokevirtual #121
347: astore        34
349: aload         30
351: ldc_w         #303
354: invokevirtual #150
357: astore        35
359: aload         6
361: aload         35
363: invokevirtual #90
366: istore        36
368: new           #430
371: dup
372: aload_1
373: ldc_w         #860
376: aload         35
378: invokespecial #431
381: astore        37
383: aload_1
384: invokestatic  #15
387: new           #16
390: dup
391: invokespecial #17
394: ldc           #18
396: invokevirtual #19
399: iload_2
400: invokevirtual #20
403: ldc           #21
405: invokevirtual #19
408: iconst_0
409: invokevirtual #20
412: ldc           #18
414: invokevirtual #19
417: invokevirtual #22
420: iload_2
421: ifne          428
424: iconst_1
425: goto          429
428: iconst_0
429: invokestatic  #23
432: new           #16
435: dup
436: invokespecial #17
439: ldc           #18
441: invokevirtual #19
444: iload_3
445: invokevirtual #20
448: ldc           #21
450: invokevirtual #19
453: iconst_1
454: invokevirtual #20
457: ldc           #18
459: invokevirtual #19
462: invokevirtual #22
465: iload_3
466: iconst_1
467: if_icmpne     474
470: iconst_1
471: goto          475
474: iconst_0
475: invokestatic  #23
478: new           #16
481: dup
482: invokespecial #17
485: ldc           #18
487: invokevirtual #19
490: iload         4
492: invokevirtual #20
495: ldc           #21
497: invokevirtual #19
500: iconst_0
501: invokevirtual #20
504: ldc           #18
506: invokevirtual #19
509: invokevirtual #22
512: iload         4
514: ifne          521
517: iconst_1
518: goto          522
521: iconst_0
522: invokestatic  #23
525: new           #16
528: dup
529: invokespecial #17
532: ldc           #18
534: invokevirtual #19
537: iload         5
539: invokevirtual #20
542: ldc           #21
544: invokevirtual #19
547: iconst_1
548: invokevirtual #20
551: ldc           #18
553: invokevirtual #19
556: invokevirtual #22
559: iload         5
561: iconst_1
562: if_icmpne     569
565: iconst_1
566: goto          570
569: iconst_0
570: invokestatic  #23
573: aload         7
575: invokestatic  #15
578: aload         8
580: invokestatic  #15
583: aload         9
585: invokestatic  #15
588: aload         10
590: invokestatic  #15
593: aload         11
595: invokestatic  #15
598: aload         12
600: invokestatic  #15
603: aload         13
605: invokestatic  #15
608: aload         14
610: invokestatic  #15
613: aload         15
615: invokestatic  #15
618: aload         16
620: invokestatic  #15
623: aload         17
625: invokestatic  #15
628: aload         18
630: invokestatic  #15
633: aload         19
635: invokestatic  #15
638: aload         20
640: invokestatic  #15
643: aload         21
645: invokestatic  #15
648: aload         22
650: invokestatic  #15
653: new           #16
656: dup
657: invokespecial #17
660: ldc           #18
662: invokevirtual #19
665: iload         23
667: invokevirtual #20
670: ldc           #21
672: invokevirtual #19
675: iconst_1
676: invokevirtual #20
679: ldc           #18
681: invokevirtual #19
684: invokevirtual #22
687: iload         23
689: iconst_1
690: if_icmpne     697
693: iconst_1
694: goto          698
697: iconst_0
698: invokestatic  #23
701: new           #16
704: dup
705: invokespecial #17
708: ldc           #18
710: invokevirtual #19
713: aload         25
715: invokevirtual #19
718: ldc           #128
720: invokevirtual #19
723: invokevirtual #22
726: aload         25
728: ldc           #43
730: invokestatic  #68
733: new           #16
736: dup
737: invokespecial #17
740: ldc           #18
742: invokevirtual #19
745: iload         26
747: invokevirtual #20
750: ldc           #21
752: invokevirtual #19
755: iconst_0
756: invokevirtual #20
759: ldc           #18
761: invokevirtual #19
764: invokevirtual #22
767: iload         26
769: ifne          776
772: iconst_1
773: goto          777
776: iconst_0
777: invokestatic  #23
780: new           #16
783: dup
784: invokespecial #17
787: ldc           #18
789: invokevirtual #19
792: iload         28
794: invokevirtual #20
797: ldc           #21
799: invokevirtual #19
802: iconst_1
803: invokevirtual #20
806: ldc           #18
808: invokevirtual #19
811: invokevirtual #22
814: iload         28
816: iconst_1
817: if_icmpne     824
820: iconst_1
821: goto          825
824: iconst_0
825: invokestatic  #23
828: new           #16
831: dup
832: invokespecial #17
835: ldc           #18
837: invokevirtual #19
840: aload         29
842: invokevirtual #223
845: ldc           #78
847: invokevirtual #19
850: invokevirtual #22
853: aload         29
855: ldc           #10
857: invokestatic  #68
860: aload         30
862: invokestatic  #15
865: aload         31
867: invokestatic  #15
870: new           #16
873: dup
874: invokespecial #17
877: ldc           #18
879: invokevirtual #19
882: iload         32
884: invokevirtual #20
887: ldc           #21
889: invokevirtual #19
892: iconst_1
893: invokevirtual #20
896: ldc           #18
898: invokevirtual #19
901: invokevirtual #22
904: iload         32
906: iconst_1
907: if_icmpne     914
910: iconst_1
911: goto          915
914: iconst_0
915: invokestatic  #23
918: aload         33
920: invokestatic  #15
923: aload         34
925: invokestatic  #15
928: aload         35
930: invokestatic  #15
933: new           #16
936: dup
937: invokespecial #17
940: ldc           #18
942: invokevirtual #19
945: iload         36
947: invokevirtual #20
950: ldc           #21
952: invokevirtual #19
955: iconst_0
956: invokevirtual #20
959: ldc           #18
961: invokevirtual #19
964: invokevirtual #22
967: iload         36
969: ifne          976
972: iconst_1
973: goto          977
976: iconst_0
977: invokestatic  #23
980: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test271
Start line: 14502
End line: 14559
Method source code: 
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean2 = tag1.isBlock();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = element9.toggleClass("#document");
        org.jsoup.select.Elements elements13 = element11.getElementsByAttributeStarting(":lt(32)");
        org.jsoup.select.Elements elements15 = element11.getElementsByClass("[:lt(32)]");
        boolean boolean16 = tag1.equals((java.lang.Object) elements15);
        boolean boolean17 = tag1.preserveWhitespace();
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str22 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist21);
        org.jsoup.safety.Whitelist whitelist24 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist32 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str33 = org.jsoup.Jsoup.clean(":lt(32)", whitelist32);
        org.jsoup.safety.Whitelist whitelist37 = whitelist32.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray44 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist45 = whitelist32.addTags(strArray44);
        org.jsoup.safety.Whitelist whitelist46 = whitelist28.addProtocols(":matchesOwn(null", "hi!", strArray44);
        org.jsoup.safety.Whitelist whitelist47 = whitelist21.addAttributes("[^hi!]", strArray44);
        org.jsoup.safety.Whitelist whitelist51 = whitelist21.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.nodes.Attributes attributes53 = whitelist21.getEnforcedAttributes("");
        org.jsoup.nodes.Element element54 = new org.jsoup.nodes.Element(tag1, " hi!", attributes53);
        org.jsoup.nodes.Attributes attributes55 = attributes53.clone();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = attributes55.dataset();
        attributes55.put("<!---->", "<html>\n <head></head>\n <body></body>\n</html>\n<[<!--[hi!$=<html> <head></head> <body></body> </html>]-->!=hi!]></[<!--[hi!$=<html> <head></head> <body></body> </html>]-->!=hi!]>");
        org.junit.Assert.assertNotNull(tag1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(elements13);
        org.junit.Assert.assertNotNull(elements15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!$=   ]" + "'", str22, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + ":lt(32)" + "'", str33, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(attributes53);
        org.junit.Assert.assertNotNull(attributes55);
        org.junit.Assert.assertNotNull(strMap56);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #861
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #13
27: invokestatic  #424
30: astore_1
31: aload_1
32: invokevirtual #425
35: istore_2
36: ldc           #25
38: ldc           #12
40: invokestatic  #26
43: astore_3
44: ldc           #12
46: aload_3
47: ldc           #12
49: invokestatic  #27
52: astore        4
54: aload_3
55: invokevirtual #103
58: astore        5
60: aload         5
62: ldc           #13
64: invokevirtual #177
67: astore        6
69: aload         6
71: ldc           #43
73: invokevirtual #426
76: astore        7
78: aload         6
80: ldc           #58
82: invokevirtual #427
85: astore        8
87: aload_1
88: aload         8
90: invokevirtual #428
93: istore        9
95: aload_1
96: invokevirtual #429
99: istore        10
101: invokestatic  #8
104: astore        11
106: ldc           #109
108: ldc           #110
110: aload         11
112: invokestatic  #94
115: astore        12
117: invokestatic  #8
120: astore        13
122: aload         13
124: iconst_1
125: invokevirtual #9
128: astore        14
130: aload         14
132: iconst_0
133: invokevirtual #9
136: astore        15
138: invokestatic  #118
141: astore        16
143: ldc           #43
145: aload         16
147: invokestatic  #81
150: astore        17
152: aload         16
154: ldc           #43
156: ldc           #12
158: ldc           #32
160: invokevirtual #11
163: astore        18
165: bipush        6
167: anewarray     #119
170: dup
171: iconst_0
172: ldc           #109
174: aastore
175: dup
176: iconst_1
177: ldc           #10
179: aastore
180: dup
181: iconst_2
182: ldc           #13
184: aastore
185: dup
186: iconst_3
187: ldc           #50
189: aastore
190: dup
191: iconst_4
192: ldc           #12
194: aastore
195: dup
196: iconst_5
197: ldc           #120
199: aastore
200: astore        19
202: aload         16
204: aload         19
206: invokevirtual #121
209: astore        20
211: aload         15
213: ldc           #38
215: ldc           #12
217: aload         19
219: invokevirtual #122
222: astore        21
224: aload         11
226: ldc           #50
228: aload         19
230: invokevirtual #127
233: astore        22
235: aload         11
237: ldc           #126
239: ldc           #109
241: ldc           #120
243: invokevirtual #11
246: astore        23
248: aload         11
250: ldc           #25
252: invokevirtual #150
255: astore        24
257: new           #430
260: dup
261: aload_1
262: ldc           #60
264: aload         24
266: invokespecial #431
269: astore        25
271: aload         24
273: invokevirtual #432
276: astore        26
278: aload         26
280: invokevirtual #471
283: astore        27
285: aload         26
287: ldc_w         #303
290: ldc_w         #486
293: invokevirtual #862
296: aload_1
297: invokestatic  #15
300: new           #16
303: dup
304: invokespecial #17
307: ldc           #18
309: invokevirtual #19
312: iload_2
313: invokevirtual #20
316: ldc           #21
318: invokevirtual #19
321: iconst_0
322: invokevirtual #20
325: ldc           #18
327: invokevirtual #19
330: invokevirtual #22
333: iload_2
334: ifne          341
337: iconst_1
338: goto          342
341: iconst_0
342: invokestatic  #23
345: aload_3
346: invokestatic  #15
349: aload         4
351: invokestatic  #15
354: aload         5
356: invokestatic  #15
359: aload         6
361: invokestatic  #15
364: aload         7
366: invokestatic  #15
369: aload         8
371: invokestatic  #15
374: new           #16
377: dup
378: invokespecial #17
381: ldc           #18
383: invokevirtual #19
386: iload         9
388: invokevirtual #20
391: ldc           #21
393: invokevirtual #19
396: iconst_0
397: invokevirtual #20
400: ldc           #18
402: invokevirtual #19
405: invokevirtual #22
408: iload         9
410: ifne          417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #23
421: new           #16
424: dup
425: invokespecial #17
428: ldc           #18
430: invokevirtual #19
433: iload         10
435: invokevirtual #20
438: ldc           #21
440: invokevirtual #19
443: iconst_0
444: invokevirtual #20
447: ldc           #18
449: invokevirtual #19
452: invokevirtual #22
455: iload         10
457: ifne          464
460: iconst_1
461: goto          465
464: iconst_0
465: invokestatic  #23
468: aload         11
470: invokestatic  #15
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: aload         12
487: invokevirtual #19
490: ldc           #111
492: invokevirtual #19
495: invokevirtual #22
498: aload         12
500: ldc           #65
502: invokestatic  #68
505: aload         13
507: invokestatic  #15
510: aload         14
512: invokestatic  #15
515: aload         15
517: invokestatic  #15
520: aload         16
522: invokestatic  #15
525: new           #16
528: dup
529: invokespecial #17
532: ldc           #18
534: invokevirtual #19
537: aload         17
539: invokevirtual #19
542: ldc           #128
544: invokevirtual #19
547: invokevirtual #22
550: aload         17
552: ldc           #43
554: invokestatic  #68
557: aload         18
559: invokestatic  #15
562: aload         19
564: invokestatic  #15
567: aload         20
569: invokestatic  #15
572: aload         21
574: invokestatic  #15
577: aload         22
579: invokestatic  #15
582: aload         23
584: invokestatic  #15
587: aload         24
589: invokestatic  #15
592: aload         26
594: invokestatic  #15
597: aload         27
599: invokestatic  #15
602: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test272
Start line: 14562
End line: 14620
Method source code: 
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        org.jsoup.nodes.Attribute attribute2 = new org.jsoup.nodes.Attribute(":lt(32)", "");
        java.lang.String str3 = attribute2.toString();
        java.lang.String str5 = attribute2.setValue("");
        org.jsoup.nodes.Document document7 = org.jsoup.Jsoup.parse("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document11 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList13 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document11, "hi!");
        org.jsoup.nodes.Element element15 = document11.tagName("hi!");
        org.jsoup.nodes.Element element17 = document11.append("");
        org.jsoup.nodes.Element element19 = document11.toggleClass("#document");
        java.lang.String str20 = document11.title();
        org.jsoup.nodes.Element element21 = document11.head();
        org.jsoup.nodes.Document.QuirksMode quirksMode22 = document11.quirksMode();
        org.jsoup.nodes.Document document23 = document7.quirksMode(quirksMode22);
        boolean boolean24 = attribute2.equals((java.lang.Object) quirksMode22);
        java.lang.String str25 = attribute2.html();
        org.jsoup.nodes.Document document29 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList31 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document29, "hi!");
        org.jsoup.nodes.Element element33 = document29.tagName("hi!");
        org.jsoup.nodes.Element element35 = document29.text("[:lt(32)]");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList36 = document29.dataNodes();
        org.jsoup.parser.Tag tag37 = document29.tag();
        java.lang.String str38 = tag37.toString();
        boolean boolean39 = tag37.formatAsBlock();
        org.jsoup.safety.Whitelist whitelist41 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str42 = org.jsoup.Jsoup.clean("", whitelist41);
        org.jsoup.safety.Whitelist whitelist46 = whitelist41.addEnforcedAttribute("#comment", "[:lt(10)!=[hi!=.<html>\n <head></head>\n <body></body>\n</html>]]", "[    =hi!]");
        boolean boolean47 = tag37.equals((java.lang.Object) whitelist46);
        boolean boolean48 = attribute2.equals((java.lang.Object) tag37);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + ":lt(32)=\"\"" + "'", str3, ":lt(32)=\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(document7);
        org.junit.Assert.assertNotNull(document11);
        org.junit.Assert.assertNotNull(nodeList13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertTrue("'" + quirksMode22 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode22.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":lt(32)=\"\"" + "'", str25, ":lt(32)=\"\"");
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(nodeList31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(dataNodeList36);
        org.junit.Assert.assertNotNull(tag37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #863
20: aastore
21: invokevirtual #7
24: pop
25: new           #263
28: dup
29: ldc           #43
31: ldc           #25
33: invokespecial #264
36: astore_1
37: aload_1
38: invokevirtual #515
41: astore_2
42: aload_1
43: ldc           #25
45: invokevirtual #514
48: astore_3
49: ldc           #10
51: invokestatic  #864
54: astore        4
56: ldc           #25
58: ldc           #12
60: invokestatic  #26
63: astore        5
65: ldc           #12
67: aload         5
69: ldc           #12
71: invokestatic  #27
74: astore        6
76: aload         5
78: ldc           #12
80: invokevirtual #28
83: astore        7
85: aload         5
87: ldc           #25
89: invokevirtual #29
92: astore        8
94: aload         5
96: ldc           #13
98: invokevirtual #199
101: astore        9
103: aload         5
105: invokevirtual #448
108: astore        10
110: aload         5
112: invokevirtual #200
115: astore        11
117: aload         5
119: invokevirtual #222
122: astore        12
124: aload         4
126: aload         12
128: invokevirtual #481
131: astore        13
133: aload_1
134: aload         12
136: invokevirtual #476
139: istore        14
141: aload_1
142: invokevirtual #321
145: astore        15
147: ldc           #25
149: ldc           #12
151: invokestatic  #26
154: astore        16
156: ldc           #12
158: aload         16
160: ldc           #12
162: invokestatic  #27
165: astore        17
167: aload         16
169: ldc           #12
171: invokevirtual #28
174: astore        18
176: aload         16
178: ldc           #58
180: invokevirtual #64
183: astore        19
185: aload         16
187: invokevirtual #348
190: astore        20
192: aload         16
194: invokevirtual #207
197: astore        21
199: aload         21
201: invokevirtual #817
204: astore        22
206: aload         21
208: invokevirtual #456
211: istore        23
213: invokestatic  #118
216: astore        24
218: ldc           #25
220: aload         24
222: invokestatic  #81
225: astore        25
227: aload         24
229: ldc           #114
231: ldc_w         #450
234: ldc_w         #319
237: invokevirtual #11
240: astore        26
242: aload         21
244: aload         26
246: invokevirtual #428
249: istore        27
251: aload_1
252: aload         21
254: invokevirtual #476
257: istore        28
259: new           #16
262: dup
263: invokespecial #17
266: ldc           #18
268: invokevirtual #19
271: aload_2
272: invokevirtual #19
275: ldc_w         #865
278: invokevirtual #19
281: invokevirtual #22
284: aload_2
285: ldc           #238
287: invokestatic  #68
290: new           #16
293: dup
294: invokespecial #17
297: ldc           #18
299: invokevirtual #19
302: aload_3
303: invokevirtual #19
306: ldc           #67
308: invokevirtual #19
311: invokevirtual #22
314: aload_3
315: ldc           #25
317: invokestatic  #68
320: aload         4
322: invokestatic  #15
325: aload         5
327: invokestatic  #15
330: aload         6
332: invokestatic  #15
335: aload         7
337: invokestatic  #15
340: aload         8
342: invokestatic  #15
345: aload         9
347: invokestatic  #15
350: new           #16
353: dup
354: invokespecial #17
357: ldc           #18
359: invokevirtual #19
362: aload         10
364: invokevirtual #19
367: ldc           #67
369: invokevirtual #19
372: invokevirtual #22
375: aload         10
377: ldc           #25
379: invokestatic  #68
382: aload         11
384: invokestatic  #15
387: new           #16
390: dup
391: invokespecial #17
394: ldc           #18
396: invokevirtual #19
399: aload         12
401: invokevirtual #223
404: ldc           #21
406: invokevirtual #19
409: getstatic     #224
412: invokevirtual #223
415: ldc           #18
417: invokevirtual #19
420: invokevirtual #22
423: aload         12
425: getstatic     #224
428: invokevirtual #225
431: invokestatic  #23
434: aload         13
436: invokestatic  #15
439: new           #16
442: dup
443: invokespecial #17
446: ldc           #18
448: invokevirtual #19
451: iload         14
453: invokevirtual #20
456: ldc           #21
458: invokevirtual #19
461: iconst_0
462: invokevirtual #20
465: ldc           #18
467: invokevirtual #19
470: invokevirtual #22
473: iload         14
475: ifne          482
478: iconst_1
479: goto          483
482: iconst_0
483: invokestatic  #23
486: new           #16
489: dup
490: invokespecial #17
493: ldc           #18
495: invokevirtual #19
498: aload         15
500: invokevirtual #19
503: ldc_w         #865
506: invokevirtual #19
509: invokevirtual #22
512: aload         15
514: ldc           #238
516: invokestatic  #68
519: aload         16
521: invokestatic  #15
524: aload         17
526: invokestatic  #15
529: aload         18
531: invokestatic  #15
534: aload         19
536: invokestatic  #15
539: aload         20
541: invokestatic  #15
544: aload         21
546: invokestatic  #15
549: new           #16
552: dup
553: invokespecial #17
556: ldc           #18
558: invokevirtual #19
561: aload         22
563: invokevirtual #19
566: ldc           #211
568: invokevirtual #19
571: invokevirtual #22
574: aload         22
576: ldc           #12
578: invokestatic  #68
581: new           #16
584: dup
585: invokespecial #17
588: ldc           #18
590: invokevirtual #19
593: iload         23
595: invokevirtual #20
598: ldc           #21
600: invokevirtual #19
603: iconst_1
604: invokevirtual #20
607: ldc           #18
609: invokevirtual #19
612: invokevirtual #22
615: iload         23
617: iconst_1
618: if_icmpne     625
621: iconst_1
622: goto          626
625: iconst_0
626: invokestatic  #23
629: aload         24
631: invokestatic  #15
634: new           #16
637: dup
638: invokespecial #17
641: ldc           #18
643: invokevirtual #19
646: aload         25
648: invokevirtual #19
651: ldc           #67
653: invokevirtual #19
656: invokevirtual #22
659: aload         25
661: ldc           #25
663: invokestatic  #68
666: aload         26
668: invokestatic  #15
671: new           #16
674: dup
675: invokespecial #17
678: ldc           #18
680: invokevirtual #19
683: iload         27
685: invokevirtual #20
688: ldc           #21
690: invokevirtual #19
693: iconst_0
694: invokevirtual #20
697: ldc           #18
699: invokevirtual #19
702: invokevirtual #22
705: iload         27
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #23
718: new           #16
721: dup
722: invokespecial #17
725: ldc           #18
727: invokevirtual #19
730: iload         28
732: invokevirtual #20
735: ldc           #21
737: invokevirtual #19
740: iconst_0
741: invokevirtual #20
744: ldc           #18
746: invokevirtual #19
749: invokevirtual #22
752: iload         28
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #23
765: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test273
Start line: 14623
End line: 14702
Method source code: 
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        java.lang.String[] strArray13 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean14 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist15 = whitelist4.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist17 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist23 = whitelist17.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = org.jsoup.Jsoup.clean("\nhi!", whitelist23);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str31 = org.jsoup.Jsoup.clean(":lt(32)", whitelist30);
        boolean boolean33 = whitelist30.isSafeTag("");
        org.jsoup.nodes.Document document37 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList39 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document37, "hi!");
        org.jsoup.nodes.Element element40 = document37.empty();
        org.jsoup.nodes.Element element42 = document37.removeClass("hi!");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element50 = document46.tagName("hi!");
        org.jsoup.nodes.Element element52 = document46.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = document46.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = outputSettings53.prettyPrint(false);
        org.jsoup.nodes.Document document56 = document37.outputSettings(outputSettings55);
        java.lang.String str57 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist30, outputSettings55);
        org.jsoup.safety.Whitelist whitelist59 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist61 = whitelist59.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist63 = whitelist61.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist67 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str68 = org.jsoup.Jsoup.clean(":lt(32)", whitelist67);
        org.jsoup.safety.Whitelist whitelist72 = whitelist67.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray79 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist80 = whitelist67.addTags(strArray79);
        org.jsoup.safety.Whitelist whitelist81 = whitelist63.addProtocols(":matchesOwn(null", "hi!", strArray79);
        org.jsoup.safety.Whitelist whitelist82 = whitelist30.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray79);
        org.jsoup.safety.Whitelist whitelist83 = whitelist23.addProtocols("#doctype", "[]", strArray79);
        org.jsoup.safety.Whitelist whitelist84 = whitelist4.addTags(strArray79);
        org.jsoup.safety.Whitelist whitelist86 = whitelist4.preserveRelativeLinks(true);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":lt(32)" + "'", str31, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(nodeList39);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(outputSettings55);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[:lt(32)]" + "'", str57, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ":lt(32)" + "'", str68, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(whitelist84);
        org.junit.Assert.assertNotNull(whitelist86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #866
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: invokestatic  #8
96: astore        7
98: aload         7
100: iconst_1
101: invokevirtual #9
104: astore        8
106: aload         7
108: ldc           #10
110: ldc           #10
112: ldc           #10
114: invokevirtual #11
117: astore        9
119: ldc           #98
121: aload         9
123: invokestatic  #81
126: astore        10
128: invokestatic  #118
131: astore        11
133: ldc           #43
135: aload         11
137: invokestatic  #81
140: astore        12
142: aload         11
144: ldc           #25
146: invokevirtual #83
149: istore        13
151: ldc           #25
153: ldc           #12
155: invokestatic  #26
158: astore        14
160: ldc           #12
162: aload         14
164: ldc           #12
166: invokestatic  #27
169: astore        15
171: aload         14
173: invokevirtual #103
176: astore        16
178: aload         14
180: ldc           #12
182: invokevirtual #59
185: astore        17
187: ldc           #25
189: ldc           #12
191: invokestatic  #26
194: astore        18
196: ldc           #12
198: aload         18
200: ldc           #12
202: invokestatic  #27
205: astore        19
207: aload         18
209: ldc           #12
211: invokevirtual #28
214: astore        20
216: aload         18
218: ldc           #25
220: invokevirtual #29
223: astore        21
225: aload         18
227: invokevirtual #30
230: astore        22
232: aload         22
234: iconst_0
235: invokevirtual #31
238: astore        23
240: aload         14
242: aload         23
244: invokevirtual #175
247: astore        24
249: ldc           #58
251: ldc           #126
253: aload         11
255: aload         23
257: invokestatic  #33
260: astore        25
262: invokestatic  #8
265: astore        26
267: aload         26
269: iconst_1
270: invokevirtual #9
273: astore        27
275: aload         27
277: iconst_0
278: invokevirtual #9
281: astore        28
283: invokestatic  #118
286: astore        29
288: ldc           #43
290: aload         29
292: invokestatic  #81
295: astore        30
297: aload         29
299: ldc           #43
301: ldc           #12
303: ldc           #32
305: invokevirtual #11
308: astore        31
310: bipush        6
312: anewarray     #119
315: dup
316: iconst_0
317: ldc           #109
319: aastore
320: dup
321: iconst_1
322: ldc           #10
324: aastore
325: dup
326: iconst_2
327: ldc           #13
329: aastore
330: dup
331: iconst_3
332: ldc           #50
334: aastore
335: dup
336: iconst_4
337: ldc           #12
339: aastore
340: dup
341: iconst_5
342: ldc           #120
344: aastore
345: astore        32
347: aload         29
349: aload         32
351: invokevirtual #121
354: astore        33
356: aload         28
358: ldc           #38
360: ldc           #12
362: aload         32
364: invokevirtual #122
367: astore        34
369: aload         11
371: ldc           #109
373: aload         32
375: invokevirtual #127
378: astore        35
380: aload         9
382: ldc           #187
384: ldc           #159
386: aload         32
388: invokevirtual #122
391: astore        36
393: aload_3
394: aload         32
396: invokevirtual #121
399: astore        37
401: aload_3
402: iconst_1
403: invokevirtual #9
406: astore        38
408: aload_1
409: invokestatic  #15
412: aload_2
413: invokestatic  #15
416: aload_3
417: invokestatic  #15
420: aload         4
422: invokestatic  #15
425: new           #16
428: dup
429: invokespecial #17
432: ldc           #18
434: invokevirtual #19
437: iload         5
439: invokevirtual #20
442: ldc           #21
444: invokevirtual #19
447: iconst_1
448: invokevirtual #20
451: ldc           #18
453: invokevirtual #19
456: invokevirtual #22
459: iload         5
461: iconst_1
462: if_icmpne     469
465: iconst_1
466: goto          470
469: iconst_0
470: invokestatic  #23
473: aload         6
475: invokestatic  #15
478: aload         7
480: invokestatic  #15
483: aload         8
485: invokestatic  #15
488: aload         9
490: invokestatic  #15
493: new           #16
496: dup
497: invokespecial #17
500: ldc           #18
502: invokevirtual #19
505: aload         10
507: invokevirtual #19
510: ldc           #211
512: invokevirtual #19
515: invokevirtual #22
518: aload         10
520: ldc           #12
522: invokestatic  #68
525: aload         11
527: invokestatic  #15
530: new           #16
533: dup
534: invokespecial #17
537: ldc           #18
539: invokevirtual #19
542: aload         12
544: invokevirtual #19
547: ldc           #128
549: invokevirtual #19
552: invokevirtual #22
555: aload         12
557: ldc           #43
559: invokestatic  #68
562: new           #16
565: dup
566: invokespecial #17
569: ldc           #18
571: invokevirtual #19
574: iload         13
576: invokevirtual #20
579: ldc           #21
581: invokevirtual #19
584: iconst_0
585: invokevirtual #20
588: ldc           #18
590: invokevirtual #19
593: invokevirtual #22
596: iload         13
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #23
609: aload         14
611: invokestatic  #15
614: aload         15
616: invokestatic  #15
619: aload         16
621: invokestatic  #15
624: aload         17
626: invokestatic  #15
629: aload         18
631: invokestatic  #15
634: aload         19
636: invokestatic  #15
639: aload         20
641: invokestatic  #15
644: aload         21
646: invokestatic  #15
649: aload         22
651: invokestatic  #15
654: aload         23
656: invokestatic  #15
659: aload         24
661: invokestatic  #15
664: new           #16
667: dup
668: invokespecial #17
671: ldc           #18
673: invokevirtual #19
676: aload         25
678: invokevirtual #19
681: ldc           #184
683: invokevirtual #19
686: invokevirtual #22
689: aload         25
691: ldc           #58
693: invokestatic  #68
696: aload         26
698: invokestatic  #15
701: aload         27
703: invokestatic  #15
706: aload         28
708: invokestatic  #15
711: aload         29
713: invokestatic  #15
716: new           #16
719: dup
720: invokespecial #17
723: ldc           #18
725: invokevirtual #19
728: aload         30
730: invokevirtual #19
733: ldc           #128
735: invokevirtual #19
738: invokevirtual #22
741: aload         30
743: ldc           #43
745: invokestatic  #68
748: aload         31
750: invokestatic  #15
753: aload         32
755: invokestatic  #15
758: aload         33
760: invokestatic  #15
763: aload         34
765: invokestatic  #15
768: aload         35
770: invokestatic  #15
773: aload         36
775: invokestatic  #15
778: aload         37
780: invokestatic  #15
783: aload         38
785: invokestatic  #15
788: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test274
Start line: 14705
End line: 14753
Method source code: 
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        boolean boolean37 = tag36.isInline();
        boolean boolean38 = tag36.isEmpty();
        org.jsoup.nodes.Element element40 = new org.jsoup.nodes.Element(tag36, ":matches(null");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #867
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: aload         21
204: invokevirtual #807
207: istore        22
209: aload         21
211: invokevirtual #773
214: istore        23
216: new           #430
219: dup
220: aload         21
222: ldc_w         #414
225: invokespecial #868
228: astore        24
230: aload_1
231: invokestatic  #15
234: aload_2
235: invokestatic  #15
238: aload         5
240: invokestatic  #15
243: aload         6
245: invokestatic  #15
248: aload         7
250: invokestatic  #15
253: aload         8
255: invokestatic  #15
258: aload         9
260: invokestatic  #15
263: aload         10
265: invokestatic  #15
268: new           #16
271: dup
272: invokespecial #17
275: ldc           #18
277: invokevirtual #19
280: iload         11
282: invokevirtual #20
285: ldc           #21
287: invokevirtual #19
290: iconst_0
291: invokevirtual #20
294: ldc           #18
296: invokevirtual #19
299: invokevirtual #22
302: iload         11
304: ifne          311
307: iconst_1
308: goto          312
311: iconst_0
312: invokestatic  #23
315: aload         12
317: invokestatic  #15
320: aload         13
322: invokestatic  #15
325: aload         14
327: invokestatic  #15
330: aload         15
332: invokestatic  #15
335: aload         16
337: invokestatic  #15
340: new           #16
343: dup
344: invokespecial #17
347: ldc           #18
349: invokevirtual #19
352: aload         17
354: invokevirtual #19
357: ldc           #78
359: invokevirtual #19
362: invokevirtual #22
365: aload         17
367: ldc           #10
369: invokestatic  #68
372: new           #16
375: dup
376: invokespecial #17
379: ldc           #18
381: invokevirtual #19
384: aload         18
386: invokevirtual #19
389: ldc           #67
391: invokevirtual #19
394: invokevirtual #22
397: aload         18
399: ldc           #25
401: invokestatic  #68
404: aload         19
406: invokestatic  #79
409: aload         20
411: invokestatic  #15
414: aload         21
416: invokestatic  #15
419: new           #16
422: dup
423: invokespecial #17
426: ldc           #18
428: invokevirtual #19
431: iload         22
433: invokevirtual #20
436: ldc           #21
438: invokevirtual #19
441: iconst_1
442: invokevirtual #20
445: ldc           #18
447: invokevirtual #19
450: invokevirtual #22
453: iload         22
455: iconst_1
456: if_icmpne     463
459: iconst_1
460: goto          464
463: iconst_0
464: invokestatic  #23
467: new           #16
470: dup
471: invokespecial #17
474: ldc           #18
476: invokevirtual #19
479: iload         23
481: invokevirtual #20
484: ldc           #21
486: invokevirtual #19
489: iconst_0
490: invokevirtual #20
493: ldc           #18
495: invokevirtual #19
498: invokevirtual #22
501: iload         23
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #23
514: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test275
Start line: 14756
End line: 14802
Method source code: 
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parse("", ":contains(:matchesown(null");
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)=\"\"=\".\"", whitelist6);
        org.jsoup.nodes.Document document13 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList15 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document13, "hi!");
        org.jsoup.nodes.Element element17 = document13.tagName("hi!");
        org.jsoup.nodes.Element element19 = document13.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings20 = document13.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = outputSettings20.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = outputSettings21.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = outputSettings21.indentAmount((int) (short) 0);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings21.indentAmount((int) (byte) 1);
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings21.prettyPrint(true);
        int int30 = outputSettings29.indentAmount();
        int int31 = outputSettings29.indentAmount();
        java.lang.String str32 = org.jsoup.Jsoup.clean("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", "[[:gt(100)]$=:gt(100)]", whitelist6, outputSettings29);
        org.jsoup.nodes.Document document33 = document2.outputSettings(outputSettings29);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Element element35 = document33.before(":lt(32)=\"#[:lt(32)*=.&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;]\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)=&quot;&quot;=&quot;.&quot;" + "'", str9, ":lt(32)=&quot;&quot;=&quot;.&quot;");
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(outputSettings20);
        org.junit.Assert.assertNotNull(outputSettings21);
        org.junit.Assert.assertNotNull(outputSettings23);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[!=hi!]" + "'", str32, "[!=hi!]");
        org.junit.Assert.assertNotNull(document33);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #869
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc_w         #527
30: invokestatic  #26
33: astore_1
34: invokestatic  #118
37: astore_2
38: aload_2
39: ldc           #51
41: invokevirtual #150
44: astore_3
45: ldc_w         #329
48: aload_2
49: invokestatic  #81
52: astore        4
54: ldc           #25
56: ldc           #12
58: invokestatic  #26
61: astore        5
63: ldc           #12
65: aload         5
67: ldc           #12
69: invokestatic  #27
72: astore        6
74: aload         5
76: ldc           #12
78: invokevirtual #28
81: astore        7
83: aload         5
85: ldc           #25
87: invokevirtual #29
90: astore        8
92: aload         5
94: invokevirtual #30
97: astore        9
99: aload         9
101: invokevirtual #205
104: astore        10
106: aload         10
108: iconst_0
109: invokevirtual #31
112: astore        11
114: aload         10
116: iconst_0
117: invokevirtual #189
120: astore        12
122: aload         10
124: iconst_1
125: invokevirtual #189
128: astore        13
130: aload         10
132: iconst_1
133: invokevirtual #31
136: astore        14
138: aload         14
140: invokevirtual #296
143: istore        15
145: aload         14
147: invokevirtual #296
150: istore        16
152: ldc           #136
154: ldc_w         #308
157: aload_2
158: aload         14
160: invokestatic  #33
163: astore        17
165: aload_1
166: aload         14
168: invokevirtual #175
171: astore        18
173: aload         18
175: ldc_w         #739
178: invokevirtual #171
181: astore        19
183: ldc           #34
185: invokestatic  #35
188: goto          193
191: astore        19
193: aload_1
194: invokestatic  #15
197: aload_2
198: invokestatic  #15
201: aload_3
202: invokestatic  #15
205: new           #16
208: dup
209: invokespecial #17
212: ldc           #18
214: invokevirtual #19
217: aload         4
219: invokevirtual #19
222: ldc_w         #299
225: invokevirtual #19
228: invokevirtual #22
231: aload         4
233: ldc_w         #300
236: invokestatic  #68
239: aload         5
241: invokestatic  #15
244: aload         6
246: invokestatic  #15
249: aload         7
251: invokestatic  #15
254: aload         8
256: invokestatic  #15
259: aload         9
261: invokestatic  #15
264: aload         10
266: invokestatic  #15
269: aload         11
271: invokestatic  #15
274: aload         12
276: invokestatic  #15
279: aload         13
281: invokestatic  #15
284: aload         14
286: invokestatic  #15
289: new           #16
292: dup
293: invokespecial #17
296: ldc           #18
298: invokevirtual #19
301: iload         15
303: invokevirtual #134
306: ldc           #21
308: invokevirtual #19
311: iconst_1
312: invokevirtual #134
315: ldc           #18
317: invokevirtual #19
320: invokevirtual #22
323: iload         15
325: iconst_1
326: if_icmpne     333
329: iconst_1
330: goto          334
333: iconst_0
334: invokestatic  #23
337: new           #16
340: dup
341: invokespecial #17
344: ldc           #18
346: invokevirtual #19
349: iload         16
351: invokevirtual #134
354: ldc           #21
356: invokevirtual #19
359: iconst_1
360: invokevirtual #134
363: ldc           #18
365: invokevirtual #19
368: invokevirtual #22
371: iload         16
373: iconst_1
374: if_icmpne     381
377: iconst_1
378: goto          382
381: iconst_0
382: invokestatic  #23
385: new           #16
388: dup
389: invokespecial #17
392: ldc           #18
394: invokevirtual #19
397: aload         17
399: invokevirtual #19
402: ldc_w         #523
405: invokevirtual #19
408: invokevirtual #22
411: aload         17
413: ldc           #241
415: invokestatic  #68
418: aload         18
420: invokestatic  #15
423: return
Exception table:
from    to  target type
173   188   191   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test276
Start line: 14805
End line: 14864
Method source code: 
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str7 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist6);
        boolean boolean9 = whitelist6.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist19 = whitelist13.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist23 = whitelist13.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str24 = org.jsoup.Jsoup.clean("hi!", whitelist13);
        org.jsoup.safety.Whitelist whitelist26 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist30 = whitelist28.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist34 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str35 = org.jsoup.Jsoup.clean(":lt(32)", whitelist34);
        org.jsoup.safety.Whitelist whitelist39 = whitelist34.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray46 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist47 = whitelist34.addTags(strArray46);
        org.jsoup.safety.Whitelist whitelist48 = whitelist30.addProtocols(":matchesOwn(null", "hi!", strArray46);
        java.lang.String[] strArray57 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean58 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray57);
        org.jsoup.safety.Whitelist whitelist59 = whitelist48.addProtocols("\n<!--hi!-->", "#document", strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray57);
        org.jsoup.safety.Whitelist whitelist62 = whitelist13.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray57);
        org.jsoup.safety.Whitelist whitelist63 = whitelist6.addTags(strArray57);
        org.jsoup.safety.Whitelist whitelist64 = whitelist2.addAttributes("[    ^=hi!]", strArray57);
        boolean boolean65 = org.jsoup.helper.StringUtil.in("[<html>\n <head></head>\n <body>\n </body>\n</html>]", strArray57);
        boolean boolean66 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html><hi!>\n [^hi!]\n</hi!><html>\n <head></head>\n <body></body>\n</html><hi!>\n [^hi!]\n</hi!><head></head><hi!>\n [^hi!]\n</hi!><body></body>", strArray57);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[hi!$=   ]" + "'", str7, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ":lt(32)" + "'", str35, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #870
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: invokestatic  #8
32: astore_2
33: ldc           #109
35: ldc           #110
37: aload_2
38: invokestatic  #94
41: astore_3
42: aload_2
43: ldc           #25
45: invokevirtual #83
48: istore        4
50: aload_2
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #8
60: astore        6
62: aload         6
64: iconst_1
65: invokevirtual #9
68: astore        7
70: aload         6
72: ldc           #10
74: ldc           #10
76: ldc           #10
78: invokevirtual #11
81: astore        8
83: aload         6
85: ldc           #12
87: ldc           #13
89: ldc           #12
91: invokevirtual #11
94: astore        9
96: ldc           #12
98: aload         6
100: invokestatic  #81
103: astore        10
105: invokestatic  #8
108: astore        11
110: aload         11
112: iconst_1
113: invokevirtual #9
116: astore        12
118: aload         12
120: iconst_0
121: invokevirtual #9
124: astore        13
126: invokestatic  #118
129: astore        14
131: ldc           #43
133: aload         14
135: invokestatic  #81
138: astore        15
140: aload         14
142: ldc           #43
144: ldc           #12
146: ldc           #32
148: invokevirtual #11
151: astore        16
153: bipush        6
155: anewarray     #119
158: dup
159: iconst_0
160: ldc           #109
162: aastore
163: dup
164: iconst_1
165: ldc           #10
167: aastore
168: dup
169: iconst_2
170: ldc           #13
172: aastore
173: dup
174: iconst_3
175: ldc           #50
177: aastore
178: dup
179: iconst_4
180: ldc           #12
182: aastore
183: dup
184: iconst_5
185: ldc           #120
187: aastore
188: astore        17
190: aload         14
192: aload         17
194: invokevirtual #121
197: astore        18
199: aload         13
201: ldc           #38
203: ldc           #12
205: aload         17
207: invokevirtual #122
210: astore        19
212: iconst_5
213: anewarray     #119
216: dup
217: iconst_0
218: ldc           #13
220: aastore
221: dup
222: iconst_1
223: ldc           #32
225: aastore
226: dup
227: iconst_2
228: ldc           #10
230: aastore
231: dup
232: iconst_3
233: ldc           #43
235: aastore
236: dup
237: iconst_4
238: ldc           #58
240: aastore
241: astore        20
243: ldc           #10
245: aload         20
247: invokestatic  #123
250: istore        21
252: aload         19
254: ldc           #84
256: ldc           #13
258: aload         20
260: invokevirtual #122
263: astore        22
265: aload         20
267: checkcast     #124
270: invokestatic  #125
273: aload         20
275: checkcast     #124
278: invokestatic  #125
281: aload         6
283: ldc           #249
285: aload         20
287: invokevirtual #127
290: astore        23
292: aload_2
293: aload         20
295: invokevirtual #121
298: astore        24
300: aload_1
301: ldc           #173
303: aload         20
305: invokevirtual #127
308: astore        25
310: ldc           #215
312: aload         20
314: invokestatic  #123
317: istore        26
319: ldc_w         #462
322: aload         20
324: invokestatic  #123
327: istore        27
329: aload_1
330: invokestatic  #15
333: aload_2
334: invokestatic  #15
337: new           #16
340: dup
341: invokespecial #17
344: ldc           #18
346: invokevirtual #19
349: aload_3
350: invokevirtual #19
353: ldc           #111
355: invokevirtual #19
358: invokevirtual #22
361: aload_3
362: ldc           #65
364: invokestatic  #68
367: new           #16
370: dup
371: invokespecial #17
374: ldc           #18
376: invokevirtual #19
379: iload         4
381: invokevirtual #20
384: ldc           #21
386: invokevirtual #19
389: iconst_0
390: invokevirtual #20
393: ldc           #18
395: invokevirtual #19
398: invokevirtual #22
401: iload         4
403: ifne          410
406: iconst_1
407: goto          411
410: iconst_0
411: invokestatic  #23
414: aload         5
416: invokestatic  #15
419: aload         6
421: invokestatic  #15
424: aload         7
426: invokestatic  #15
429: aload         8
431: invokestatic  #15
434: aload         9
436: invokestatic  #15
439: new           #16
442: dup
443: invokespecial #17
446: ldc           #18
448: invokevirtual #19
451: aload         10
453: invokevirtual #19
456: ldc           #211
458: invokevirtual #19
461: invokevirtual #22
464: aload         10
466: ldc           #12
468: invokestatic  #68
471: aload         11
473: invokestatic  #15
476: aload         12
478: invokestatic  #15
481: aload         13
483: invokestatic  #15
486: aload         14
488: invokestatic  #15
491: new           #16
494: dup
495: invokespecial #17
498: ldc           #18
500: invokevirtual #19
503: aload         15
505: invokevirtual #19
508: ldc           #128
510: invokevirtual #19
513: invokevirtual #22
516: aload         15
518: ldc           #43
520: invokestatic  #68
523: aload         16
525: invokestatic  #15
528: aload         17
530: invokestatic  #15
533: aload         18
535: invokestatic  #15
538: aload         19
540: invokestatic  #15
543: aload         20
545: invokestatic  #15
548: new           #16
551: dup
552: invokespecial #17
555: ldc           #18
557: invokevirtual #19
560: iload         21
562: invokevirtual #20
565: ldc           #21
567: invokevirtual #19
570: iconst_1
571: invokevirtual #20
574: ldc           #18
576: invokevirtual #19
579: invokevirtual #22
582: iload         21
584: iconst_1
585: if_icmpne     592
588: iconst_1
589: goto          593
592: iconst_0
593: invokestatic  #23
596: aload         22
598: invokestatic  #15
601: aload         23
603: invokestatic  #15
606: aload         24
608: invokestatic  #15
611: aload         25
613: invokestatic  #15
616: new           #16
619: dup
620: invokespecial #17
623: ldc           #18
625: invokevirtual #19
628: iload         26
630: invokevirtual #20
633: ldc           #21
635: invokevirtual #19
638: iconst_0
639: invokevirtual #20
642: ldc           #18
644: invokevirtual #19
647: invokevirtual #22
650: iload         26
652: ifne          659
655: iconst_1
656: goto          660
659: iconst_0
660: invokestatic  #23
663: new           #16
666: dup
667: invokespecial #17
670: ldc           #18
672: invokevirtual #19
675: iload         27
677: invokevirtual #20
680: ldc           #21
682: invokevirtual #19
685: iconst_0
686: invokevirtual #20
689: ldc           #18
691: invokevirtual #19
694: invokevirtual #22
697: iload         27
699: ifne          706
702: iconst_1
703: goto          707
706: iconst_0
707: invokestatic  #23
710: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test277
Start line: 14867
End line: 14919
Method source code: 
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        org.jsoup.parser.Tag tag36 = document25.tag();
        org.jsoup.nodes.Element element38 = document25.toggleClass("<!DOCTYPE [hi!=.<html> <head></head> <body></body> </html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">");
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.select.Elements elements40 = element38.select("&lt;   &gt;   &gt;hi!");
            org.junit.Assert.fail("Expected exception of type org.jsoup.select.Selector.SelectorParseException; message: Could not parse query '&lt;   &gt;   &gt;hi!': unexpected token at '&lt;   &gt;   &gt;hi!'");
        } catch (org.jsoup.select.Selector.SelectorParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(tag36);
        org.junit.Assert.assertNotNull(element38);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #871
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #207
200: astore        21
202: aload         13
204: ldc_w         #543
207: invokevirtual #199
210: astore        22
212: aload         22
214: ldc_w         #676
217: invokevirtual #872
220: astore        23
222: ldc_w         #873
225: invokestatic  #35
228: goto          233
231: astore        23
233: aload_1
234: invokestatic  #15
237: aload_2
238: invokestatic  #15
241: aload         5
243: invokestatic  #15
246: aload         6
248: invokestatic  #15
251: aload         7
253: invokestatic  #15
256: aload         8
258: invokestatic  #15
261: aload         9
263: invokestatic  #15
266: aload         10
268: invokestatic  #15
271: new           #16
274: dup
275: invokespecial #17
278: ldc           #18
280: invokevirtual #19
283: iload         11
285: invokevirtual #20
288: ldc           #21
290: invokevirtual #19
293: iconst_0
294: invokevirtual #20
297: ldc           #18
299: invokevirtual #19
302: invokevirtual #22
305: iload         11
307: ifne          314
310: iconst_1
311: goto          315
314: iconst_0
315: invokestatic  #23
318: aload         12
320: invokestatic  #15
323: aload         13
325: invokestatic  #15
328: aload         14
330: invokestatic  #15
333: aload         15
335: invokestatic  #15
338: aload         16
340: invokestatic  #15
343: new           #16
346: dup
347: invokespecial #17
350: ldc           #18
352: invokevirtual #19
355: aload         17
357: invokevirtual #19
360: ldc           #78
362: invokevirtual #19
365: invokevirtual #22
368: aload         17
370: ldc           #10
372: invokestatic  #68
375: new           #16
378: dup
379: invokespecial #17
382: ldc           #18
384: invokevirtual #19
387: aload         18
389: invokevirtual #19
392: ldc           #67
394: invokevirtual #19
397: invokevirtual #22
400: aload         18
402: ldc           #25
404: invokestatic  #68
407: aload         19
409: invokestatic  #79
412: aload         20
414: invokestatic  #15
417: aload         21
419: invokestatic  #15
422: aload         22
424: invokestatic  #15
427: return
Exception table:
from    to  target type
212   228   231   Class org/jsoup/select/Selector$SelectorParseException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test278
Start line: 14922
End line: 14977
Method source code: 
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes7 = whitelist5.getEnforcedAttributes("");
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist12 = whitelist10.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist16 = whitelist10.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist20 = whitelist10.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str21 = org.jsoup.Jsoup.clean("hi!", whitelist10);
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str32 = org.jsoup.Jsoup.clean(":lt(32)", whitelist31);
        org.jsoup.safety.Whitelist whitelist36 = whitelist31.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray43 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist44 = whitelist31.addTags(strArray43);
        org.jsoup.safety.Whitelist whitelist45 = whitelist27.addProtocols(":matchesOwn(null", "hi!", strArray43);
        java.lang.String[] strArray54 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean55 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray54);
        org.jsoup.safety.Whitelist whitelist56 = whitelist45.addProtocols("\n<!--hi!-->", "#document", strArray54);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray54);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray54);
        org.jsoup.safety.Whitelist whitelist59 = whitelist10.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray54);
        org.jsoup.safety.Whitelist whitelist60 = whitelist5.addAttributes("*", strArray54);
        boolean boolean62 = whitelist5.isSafeTag("[.]");
        boolean boolean63 = org.jsoup.Jsoup.isValid(":lt(32)=&quot;&quot;", whitelist5);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(attributes7);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ":lt(32)" + "'", str32, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #875
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: aload_3
42: ldc           #25
44: invokevirtual #150
47: astore        4
49: invokestatic  #8
52: astore        5
54: aload         5
56: iconst_1
57: invokevirtual #9
60: astore        6
62: aload         5
64: ldc           #10
66: ldc           #10
68: ldc           #10
70: invokevirtual #11
73: astore        7
75: aload         5
77: ldc           #12
79: ldc           #13
81: ldc           #12
83: invokevirtual #11
86: astore        8
88: ldc           #12
90: aload         5
92: invokestatic  #81
95: astore        9
97: invokestatic  #8
100: astore        10
102: aload         10
104: iconst_1
105: invokevirtual #9
108: astore        11
110: aload         11
112: iconst_0
113: invokevirtual #9
116: astore        12
118: invokestatic  #118
121: astore        13
123: ldc           #43
125: aload         13
127: invokestatic  #81
130: astore        14
132: aload         13
134: ldc           #43
136: ldc           #12
138: ldc           #32
140: invokevirtual #11
143: astore        15
145: bipush        6
147: anewarray     #119
150: dup
151: iconst_0
152: ldc           #109
154: aastore
155: dup
156: iconst_1
157: ldc           #10
159: aastore
160: dup
161: iconst_2
162: ldc           #13
164: aastore
165: dup
166: iconst_3
167: ldc           #50
169: aastore
170: dup
171: iconst_4
172: ldc           #12
174: aastore
175: dup
176: iconst_5
177: ldc           #120
179: aastore
180: astore        16
182: aload         13
184: aload         16
186: invokevirtual #121
189: astore        17
191: aload         12
193: ldc           #38
195: ldc           #12
197: aload         16
199: invokevirtual #122
202: astore        18
204: iconst_5
205: anewarray     #119
208: dup
209: iconst_0
210: ldc           #13
212: aastore
213: dup
214: iconst_1
215: ldc           #32
217: aastore
218: dup
219: iconst_2
220: ldc           #10
222: aastore
223: dup
224: iconst_3
225: ldc           #43
227: aastore
228: dup
229: iconst_4
230: ldc           #58
232: aastore
233: astore        19
235: ldc           #10
237: aload         19
239: invokestatic  #123
242: istore        20
244: aload         18
246: ldc           #84
248: ldc           #13
250: aload         19
252: invokevirtual #122
255: astore        21
257: aload         19
259: checkcast     #124
262: invokestatic  #125
265: aload         19
267: checkcast     #124
270: invokestatic  #125
273: aload         5
275: ldc           #249
277: aload         19
279: invokevirtual #127
282: astore        22
284: aload_3
285: ldc           #126
287: aload         19
289: invokevirtual #127
292: astore        23
294: aload_3
295: ldc_w         #421
298: invokevirtual #83
301: istore        24
303: ldc_w         #876
306: aload_3
307: invokestatic  #14
310: istore        25
312: aload_1
313: invokestatic  #15
316: aload_2
317: invokestatic  #15
320: aload_3
321: invokestatic  #15
324: aload         4
326: invokestatic  #15
329: aload         5
331: invokestatic  #15
334: aload         6
336: invokestatic  #15
339: aload         7
341: invokestatic  #15
344: aload         8
346: invokestatic  #15
349: new           #16
352: dup
353: invokespecial #17
356: ldc           #18
358: invokevirtual #19
361: aload         9
363: invokevirtual #19
366: ldc           #211
368: invokevirtual #19
371: invokevirtual #22
374: aload         9
376: ldc           #12
378: invokestatic  #68
381: aload         10
383: invokestatic  #15
386: aload         11
388: invokestatic  #15
391: aload         12
393: invokestatic  #15
396: aload         13
398: invokestatic  #15
401: new           #16
404: dup
405: invokespecial #17
408: ldc           #18
410: invokevirtual #19
413: aload         14
415: invokevirtual #19
418: ldc           #128
420: invokevirtual #19
423: invokevirtual #22
426: aload         14
428: ldc           #43
430: invokestatic  #68
433: aload         15
435: invokestatic  #15
438: aload         16
440: invokestatic  #15
443: aload         17
445: invokestatic  #15
448: aload         18
450: invokestatic  #15
453: aload         19
455: invokestatic  #15
458: new           #16
461: dup
462: invokespecial #17
465: ldc           #18
467: invokevirtual #19
470: iload         20
472: invokevirtual #20
475: ldc           #21
477: invokevirtual #19
480: iconst_1
481: invokevirtual #20
484: ldc           #18
486: invokevirtual #19
489: invokevirtual #22
492: iload         20
494: iconst_1
495: if_icmpne     502
498: iconst_1
499: goto          503
502: iconst_0
503: invokestatic  #23
506: aload         21
508: invokestatic  #15
511: aload         22
513: invokestatic  #15
516: aload         23
518: invokestatic  #15
521: new           #16
524: dup
525: invokespecial #17
528: ldc           #18
530: invokevirtual #19
533: iload         24
535: invokevirtual #20
538: ldc           #21
540: invokevirtual #19
543: iconst_0
544: invokevirtual #20
547: ldc           #18
549: invokevirtual #19
552: invokevirtual #22
555: iload         24
557: ifne          564
560: iconst_1
561: goto          565
564: iconst_0
565: invokestatic  #23
568: new           #16
571: dup
572: invokespecial #17
575: ldc           #18
577: invokevirtual #19
580: iload         25
582: invokevirtual #20
585: ldc           #21
587: invokevirtual #19
590: iconst_1
591: invokevirtual #20
594: ldc           #18
596: invokevirtual #19
599: invokevirtual #22
602: iload         25
604: iconst_1
605: if_icmpne     612
608: iconst_1
609: goto          613
612: iconst_0
613: invokestatic  #23
616: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test279
Start line: 14980
End line: 15027
Method source code: 
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parse("", ":contains(:matchesown(null");
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)=\"\"=\".\"", whitelist6);
        org.jsoup.nodes.Document document13 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList15 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document13, "hi!");
        org.jsoup.nodes.Element element17 = document13.tagName("hi!");
        org.jsoup.nodes.Element element19 = document13.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings20 = document13.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = outputSettings20.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = outputSettings21.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = outputSettings21.indentAmount((int) (short) 0);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings21.indentAmount((int) (byte) 1);
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings21.prettyPrint(true);
        int int30 = outputSettings29.indentAmount();
        int int31 = outputSettings29.indentAmount();
        java.lang.String str32 = org.jsoup.Jsoup.clean("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", "[[:gt(100)]$=:gt(100)]", whitelist6, outputSettings29);
        org.jsoup.nodes.Document document33 = document2.outputSettings(outputSettings29);
        java.util.regex.Pattern pattern34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.select.Elements elements35 = document33.getElementsMatchingOwnText(pattern34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)=&quot;&quot;=&quot;.&quot;" + "'", str9, ":lt(32)=&quot;&quot;=&quot;.&quot;");
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(outputSettings20);
        org.junit.Assert.assertNotNull(outputSettings21);
        org.junit.Assert.assertNotNull(outputSettings23);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[!=hi!]" + "'", str32, "[!=hi!]");
        org.junit.Assert.assertNotNull(document33);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #877
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc_w         #527
30: invokestatic  #26
33: astore_1
34: invokestatic  #118
37: astore_2
38: aload_2
39: ldc           #51
41: invokevirtual #150
44: astore_3
45: ldc_w         #329
48: aload_2
49: invokestatic  #81
52: astore        4
54: ldc           #25
56: ldc           #12
58: invokestatic  #26
61: astore        5
63: ldc           #12
65: aload         5
67: ldc           #12
69: invokestatic  #27
72: astore        6
74: aload         5
76: ldc           #12
78: invokevirtual #28
81: astore        7
83: aload         5
85: ldc           #25
87: invokevirtual #29
90: astore        8
92: aload         5
94: invokevirtual #30
97: astore        9
99: aload         9
101: invokevirtual #205
104: astore        10
106: aload         10
108: iconst_0
109: invokevirtual #31
112: astore        11
114: aload         10
116: iconst_0
117: invokevirtual #189
120: astore        12
122: aload         10
124: iconst_1
125: invokevirtual #189
128: astore        13
130: aload         10
132: iconst_1
133: invokevirtual #31
136: astore        14
138: aload         14
140: invokevirtual #296
143: istore        15
145: aload         14
147: invokevirtual #296
150: istore        16
152: ldc           #136
154: ldc_w         #308
157: aload_2
158: aload         14
160: invokestatic  #33
163: astore        17
165: aload_1
166: aload         14
168: invokevirtual #175
171: astore        18
173: aconst_null
174: astore        19
176: aload         18
178: aload         19
180: invokevirtual #306
183: astore        20
185: ldc           #76
187: invokestatic  #35
190: goto          195
193: astore        20
195: aload_1
196: invokestatic  #15
199: aload_2
200: invokestatic  #15
203: aload_3
204: invokestatic  #15
207: new           #16
210: dup
211: invokespecial #17
214: ldc           #18
216: invokevirtual #19
219: aload         4
221: invokevirtual #19
224: ldc_w         #299
227: invokevirtual #19
230: invokevirtual #22
233: aload         4
235: ldc_w         #300
238: invokestatic  #68
241: aload         5
243: invokestatic  #15
246: aload         6
248: invokestatic  #15
251: aload         7
253: invokestatic  #15
256: aload         8
258: invokestatic  #15
261: aload         9
263: invokestatic  #15
266: aload         10
268: invokestatic  #15
271: aload         11
273: invokestatic  #15
276: aload         12
278: invokestatic  #15
281: aload         13
283: invokestatic  #15
286: aload         14
288: invokestatic  #15
291: new           #16
294: dup
295: invokespecial #17
298: ldc           #18
300: invokevirtual #19
303: iload         15
305: invokevirtual #134
308: ldc           #21
310: invokevirtual #19
313: iconst_1
314: invokevirtual #134
317: ldc           #18
319: invokevirtual #19
322: invokevirtual #22
325: iload         15
327: iconst_1
328: if_icmpne     335
331: iconst_1
332: goto          336
335: iconst_0
336: invokestatic  #23
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: iload         16
353: invokevirtual #134
356: ldc           #21
358: invokevirtual #19
361: iconst_1
362: invokevirtual #134
365: ldc           #18
367: invokevirtual #19
370: invokevirtual #22
373: iload         16
375: iconst_1
376: if_icmpne     383
379: iconst_1
380: goto          384
383: iconst_0
384: invokestatic  #23
387: new           #16
390: dup
391: invokespecial #17
394: ldc           #18
396: invokevirtual #19
399: aload         17
401: invokevirtual #19
404: ldc_w         #523
407: invokevirtual #19
410: invokevirtual #22
413: aload         17
415: ldc           #241
417: invokestatic  #68
420: aload         18
422: invokestatic  #15
425: return
Exception table:
from    to  target type
176   190   193   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test280
Start line: 15030
End line: 15099
Method source code: 
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str6 = org.jsoup.Jsoup.clean(":lt(32)", whitelist5);
        boolean boolean8 = whitelist5.isSafeTag("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element15 = document12.empty();
        org.jsoup.nodes.Element element17 = document12.removeClass("hi!");
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element25 = document21.tagName("hi!");
        org.jsoup.nodes.Element element27 = document21.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = document21.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings30 = outputSettings28.prettyPrint(false);
        org.jsoup.nodes.Document document31 = document12.outputSettings(outputSettings30);
        java.lang.String str32 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist5, outputSettings30);
        org.jsoup.safety.Cleaner cleaner33 = new org.jsoup.safety.Cleaner(whitelist5);
        boolean boolean35 = whitelist5.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist37 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist39 = whitelist37.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist41 = whitelist39.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist45 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str46 = org.jsoup.Jsoup.clean(":lt(32)", whitelist45);
        org.jsoup.safety.Whitelist whitelist50 = whitelist45.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray57 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist58 = whitelist45.addTags(strArray57);
        org.jsoup.safety.Whitelist whitelist59 = whitelist41.addProtocols(":matchesOwn(null", "hi!", strArray57);
        java.lang.String[] strArray68 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean69 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray68);
        org.jsoup.safety.Whitelist whitelist70 = whitelist59.addProtocols("\n<!--hi!-->", "#document", strArray68);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray68);
        boolean boolean72 = org.jsoup.helper.StringUtil.in("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", strArray68);
        org.jsoup.safety.Whitelist whitelist73 = whitelist5.addTags(strArray68);
        boolean boolean74 = org.jsoup.helper.StringUtil.in("[^ ]", strArray68);
        boolean boolean75 = org.jsoup.helper.StringUtil.in("&lt;\n \n \n&gt;\n \n \n&gt;hi!", strArray68);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + ":lt(32)" + "'", str6, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(outputSettings30);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[:lt(32)]" + "'", str32, "[:lt(32)]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ":lt(32)" + "'", str46, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #878
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: new           #40
156: dup
157: aload_1
158: invokespecial #41
161: astore        16
163: aload_1
164: ldc           #25
166: invokevirtual #83
169: istore        17
171: invokestatic  #8
174: astore        18
176: aload         18
178: iconst_1
179: invokevirtual #9
182: astore        19
184: aload         19
186: iconst_0
187: invokevirtual #9
190: astore        20
192: invokestatic  #118
195: astore        21
197: ldc           #43
199: aload         21
201: invokestatic  #81
204: astore        22
206: aload         21
208: ldc           #43
210: ldc           #12
212: ldc           #32
214: invokevirtual #11
217: astore        23
219: bipush        6
221: anewarray     #119
224: dup
225: iconst_0
226: ldc           #109
228: aastore
229: dup
230: iconst_1
231: ldc           #10
233: aastore
234: dup
235: iconst_2
236: ldc           #13
238: aastore
239: dup
240: iconst_3
241: ldc           #50
243: aastore
244: dup
245: iconst_4
246: ldc           #12
248: aastore
249: dup
250: iconst_5
251: ldc           #120
253: aastore
254: astore        24
256: aload         21
258: aload         24
260: invokevirtual #121
263: astore        25
265: aload         20
267: ldc           #38
269: ldc           #12
271: aload         24
273: invokevirtual #122
276: astore        26
278: iconst_5
279: anewarray     #119
282: dup
283: iconst_0
284: ldc           #13
286: aastore
287: dup
288: iconst_1
289: ldc           #32
291: aastore
292: dup
293: iconst_2
294: ldc           #10
296: aastore
297: dup
298: iconst_3
299: ldc           #43
301: aastore
302: dup
303: iconst_4
304: ldc           #58
306: aastore
307: astore        27
309: ldc           #10
311: aload         27
313: invokestatic  #123
316: istore        28
318: aload         26
320: ldc           #84
322: ldc           #13
324: aload         27
326: invokevirtual #122
329: astore        29
331: aload         27
333: checkcast     #124
336: invokestatic  #125
339: ldc           #136
341: aload         27
343: invokestatic  #123
346: istore        30
348: aload_1
349: aload         27
351: invokevirtual #121
354: astore        31
356: ldc           #236
358: aload         27
360: invokestatic  #123
363: istore        32
365: ldc_w         #622
368: aload         27
370: invokestatic  #123
373: istore        33
375: aload_1
376: invokestatic  #15
379: new           #16
382: dup
383: invokespecial #17
386: ldc           #18
388: invokevirtual #19
391: aload_2
392: invokevirtual #19
395: ldc           #128
397: invokevirtual #19
400: invokevirtual #22
403: aload_2
404: ldc           #43
406: invokestatic  #68
409: new           #16
412: dup
413: invokespecial #17
416: ldc           #18
418: invokevirtual #19
421: iload_3
422: invokevirtual #20
425: ldc           #21
427: invokevirtual #19
430: iconst_0
431: invokevirtual #20
434: ldc           #18
436: invokevirtual #19
439: invokevirtual #22
442: iload_3
443: ifne          450
446: iconst_1
447: goto          451
450: iconst_0
451: invokestatic  #23
454: aload         4
456: invokestatic  #15
459: aload         5
461: invokestatic  #15
464: aload         6
466: invokestatic  #15
469: aload         7
471: invokestatic  #15
474: aload         8
476: invokestatic  #15
479: aload         9
481: invokestatic  #15
484: aload         10
486: invokestatic  #15
489: aload         11
491: invokestatic  #15
494: aload         12
496: invokestatic  #15
499: aload         13
501: invokestatic  #15
504: aload         14
506: invokestatic  #15
509: new           #16
512: dup
513: invokespecial #17
516: ldc           #18
518: invokevirtual #19
521: aload         15
523: invokevirtual #19
526: ldc           #184
528: invokevirtual #19
531: invokevirtual #22
534: aload         15
536: ldc           #58
538: invokestatic  #68
541: new           #16
544: dup
545: invokespecial #17
548: ldc           #18
550: invokevirtual #19
553: iload         17
555: invokevirtual #20
558: ldc           #21
560: invokevirtual #19
563: iconst_0
564: invokevirtual #20
567: ldc           #18
569: invokevirtual #19
572: invokevirtual #22
575: iload         17
577: ifne          584
580: iconst_1
581: goto          585
584: iconst_0
585: invokestatic  #23
588: aload         18
590: invokestatic  #15
593: aload         19
595: invokestatic  #15
598: aload         20
600: invokestatic  #15
603: aload         21
605: invokestatic  #15
608: new           #16
611: dup
612: invokespecial #17
615: ldc           #18
617: invokevirtual #19
620: aload         22
622: invokevirtual #19
625: ldc           #128
627: invokevirtual #19
630: invokevirtual #22
633: aload         22
635: ldc           #43
637: invokestatic  #68
640: aload         23
642: invokestatic  #15
645: aload         24
647: invokestatic  #15
650: aload         25
652: invokestatic  #15
655: aload         26
657: invokestatic  #15
660: aload         27
662: invokestatic  #15
665: new           #16
668: dup
669: invokespecial #17
672: ldc           #18
674: invokevirtual #19
677: iload         28
679: invokevirtual #20
682: ldc           #21
684: invokevirtual #19
687: iconst_1
688: invokevirtual #20
691: ldc           #18
693: invokevirtual #19
696: invokevirtual #22
699: iload         28
701: iconst_1
702: if_icmpne     709
705: iconst_1
706: goto          710
709: iconst_0
710: invokestatic  #23
713: aload         29
715: invokestatic  #15
718: new           #16
721: dup
722: invokespecial #17
725: ldc           #18
727: invokevirtual #19
730: iload         30
732: invokevirtual #20
735: ldc           #21
737: invokevirtual #19
740: iconst_0
741: invokevirtual #20
744: ldc           #18
746: invokevirtual #19
749: invokevirtual #22
752: iload         30
754: ifne          761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #23
765: aload         31
767: invokestatic  #15
770: new           #16
773: dup
774: invokespecial #17
777: ldc           #18
779: invokevirtual #19
782: iload         32
784: invokevirtual #20
787: ldc           #21
789: invokevirtual #19
792: iconst_0
793: invokevirtual #20
796: ldc           #18
798: invokevirtual #19
801: invokevirtual #22
804: iload         32
806: ifne          813
809: iconst_1
810: goto          814
813: iconst_0
814: invokestatic  #23
817: new           #16
820: dup
821: invokespecial #17
824: ldc           #18
826: invokevirtual #19
829: iload         33
831: invokevirtual #20
834: ldc           #21
836: invokevirtual #19
839: iconst_0
840: invokevirtual #20
843: ldc           #18
845: invokevirtual #19
848: invokevirtual #22
851: iload         33
853: ifne          860
856: iconst_1
857: goto          861
860: iconst_0
861: invokestatic  #23
864: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test281
Start line: 15102
End line: 15125
Method source code: 
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner4 = new org.jsoup.safety.Cleaner(whitelist3);
        org.jsoup.safety.Whitelist whitelist7 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str8 = org.jsoup.Jsoup.clean(":lt(32)", whitelist7);
        org.jsoup.safety.Whitelist whitelist12 = whitelist7.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray19 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist20 = whitelist7.addTags(strArray19);
        org.jsoup.safety.Whitelist whitelist21 = whitelist3.addAttributes(":gt(100)", strArray19);
        boolean boolean22 = org.jsoup.helper.StringUtil.in("\n<!--hi!-->", strArray19);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray19, ":eq(97)");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + ":lt(32)" + "'", str8, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #879
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #118
47: astore        4
49: ldc           #43
51: aload         4
53: invokestatic  #81
56: astore        5
58: aload         4
60: ldc           #43
62: ldc           #12
64: ldc           #32
66: invokevirtual #11
69: astore        6
71: bipush        6
73: anewarray     #119
76: dup
77: iconst_0
78: ldc           #109
80: aastore
81: dup
82: iconst_1
83: ldc           #10
85: aastore
86: dup
87: iconst_2
88: ldc           #13
90: aastore
91: dup
92: iconst_3
93: ldc           #50
95: aastore
96: dup
97: iconst_4
98: ldc           #12
100: aastore
101: dup
102: iconst_5
103: ldc           #120
105: aastore
106: astore        7
108: aload         4
110: aload         7
112: invokevirtual #121
115: astore        8
117: aload_2
118: ldc           #92
120: aload         7
122: invokevirtual #127
125: astore        9
127: ldc           #84
129: aload         7
131: invokestatic  #123
134: istore        10
136: aload         7
138: checkcast     #124
141: ldc_w         #880
144: invokestatic  #245
147: aload_1
148: invokestatic  #15
151: aload_2
152: invokestatic  #15
155: aload         4
157: invokestatic  #15
160: new           #16
163: dup
164: invokespecial #17
167: ldc           #18
169: invokevirtual #19
172: aload         5
174: invokevirtual #19
177: ldc           #128
179: invokevirtual #19
182: invokevirtual #22
185: aload         5
187: ldc           #43
189: invokestatic  #68
192: aload         6
194: invokestatic  #15
197: aload         7
199: invokestatic  #15
202: aload         8
204: invokestatic  #15
207: aload         9
209: invokestatic  #15
212: new           #16
215: dup
216: invokespecial #17
219: ldc           #18
221: invokevirtual #19
224: iload         10
226: invokevirtual #20
229: ldc           #21
231: invokevirtual #19
234: iconst_0
235: invokevirtual #20
238: ldc           #18
240: invokevirtual #19
243: invokevirtual #22
246: iload         10
248: ifne          255
251: iconst_1
252: goto          256
255: iconst_0
256: invokestatic  #23
259: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test282
Start line: 15128
End line: 15143
Method source code: 
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.nodes.Attributes attributes7 = whitelist2.getEnforcedAttributes("\n<!--hi!-->");
        org.jsoup.nodes.Attributes attributes9 = whitelist2.getEnforcedAttributes("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]");
        java.util.Spliterator<org.jsoup.nodes.Attribute> attributeSpliterator10 = attributes9.spliterator();
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(attributes7);
        org.junit.Assert.assertNotNull(attributes9);
        org.junit.Assert.assertNotNull(attributeSpliterator10);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #881
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: ldc           #84
48: invokevirtual #150
51: astore        4
53: aload_1
54: ldc           #136
56: invokevirtual #150
59: astore        5
61: aload         5
63: invokevirtual #678
66: astore        6
68: aload_1
69: invokestatic  #15
72: new           #16
75: dup
76: invokespecial #17
79: ldc           #18
81: invokevirtual #19
84: aload_2
85: invokevirtual #19
88: ldc           #111
90: invokevirtual #19
93: invokevirtual #22
96: aload_2
97: ldc           #65
99: invokestatic  #68
102: new           #16
105: dup
106: invokespecial #17
109: ldc           #18
111: invokevirtual #19
114: iload_3
115: invokevirtual #20
118: ldc           #21
120: invokevirtual #19
123: iconst_0
124: invokevirtual #20
127: ldc           #18
129: invokevirtual #19
132: invokevirtual #22
135: iload_3
136: ifne          143
139: iconst_1
140: goto          144
143: iconst_0
144: invokestatic  #23
147: aload         4
149: invokestatic  #15
152: aload         5
154: invokestatic  #15
157: aload         6
159: invokestatic  #15
162: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test283
Start line: 15146
End line: 15208
Method source code: 
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.jsoup.select.Evaluator.Attribute attribute1 = new org.jsoup.select.Evaluator.Attribute("");
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList7 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document5, "hi!");
        org.jsoup.nodes.Element element9 = document5.tagName("hi!");
        org.jsoup.nodes.Element element11 = document5.append("");
        java.lang.String str12 = document5.toString();
        org.jsoup.nodes.Element element14 = document5.append("[hi!$=   ]");
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner18 = new org.jsoup.safety.Cleaner(whitelist17);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining21 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document23 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document27 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList29 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document27, "hi!");
        org.jsoup.nodes.Element element31 = document27.tagName("hi!");
        org.jsoup.nodes.Element element33 = document27.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings34 = document27.outputSettings();
        boolean boolean35 = attributeWithValueContaining21.matches((org.jsoup.nodes.Element) document23, (org.jsoup.nodes.Element) document27);
        org.jsoup.nodes.Document document36 = cleaner18.clean(document27);
        org.jsoup.nodes.Document document40 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList42 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document40, "hi!");
        org.jsoup.nodes.Element element44 = document40.tagName("hi!");
        org.jsoup.nodes.Element element46 = document40.append("");
        java.lang.String str47 = document40.toString();
        java.lang.String str48 = document40.id();
        org.jsoup.nodes.Node node49 = document40.parent();
        org.jsoup.nodes.Document document50 = cleaner18.clean(document40);
        java.lang.String str51 = document40.title();
        boolean boolean52 = attribute1.matches((org.jsoup.nodes.Element) document5, (org.jsoup.nodes.Element) document40);
        java.util.List<org.jsoup.nodes.Node> nodeList53 = document40.siblingNodes();
        java.lang.String str54 = document40.nodeName();
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(nodeList7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str12, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(outputSettings34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(nodeList42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str47, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(nodeList53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "#document" + "'", str54, "#document");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #882
20: aastore
21: invokevirtual #7
24: pop
25: new           #532
28: dup
29: ldc           #25
31: invokespecial #533
34: astore_1
35: ldc           #25
37: ldc           #12
39: invokestatic  #26
42: astore_2
43: ldc           #12
45: aload_2
46: ldc           #12
48: invokestatic  #27
51: astore_3
52: aload_2
53: ldc           #12
55: invokevirtual #28
58: astore        4
60: aload_2
61: ldc           #25
63: invokevirtual #29
66: astore        5
68: aload_2
69: invokevirtual #72
72: astore        6
74: aload_2
75: ldc           #65
77: invokevirtual #29
80: astore        7
82: invokestatic  #8
85: astore        8
87: aload         8
89: iconst_1
90: invokevirtual #9
93: astore        9
95: new           #40
98: dup
99: aload         9
101: invokespecial #41
104: astore        10
106: new           #42
109: dup
110: ldc           #43
112: ldc           #32
114: invokespecial #44
117: astore        11
119: ldc           #12
121: invokestatic  #45
124: astore        12
126: ldc           #25
128: ldc           #12
130: invokestatic  #26
133: astore        13
135: ldc           #12
137: aload         13
139: ldc           #12
141: invokestatic  #27
144: astore        14
146: aload         13
148: ldc           #12
150: invokevirtual #28
153: astore        15
155: aload         13
157: ldc           #25
159: invokevirtual #29
162: astore        16
164: aload         13
166: invokevirtual #30
169: astore        17
171: aload         11
173: aload         12
175: aload         13
177: invokevirtual #46
180: istore        18
182: aload         10
184: aload         13
186: invokevirtual #47
189: astore        19
191: ldc           #25
193: ldc           #12
195: invokestatic  #26
198: astore        20
200: ldc           #12
202: aload         20
204: ldc           #12
206: invokestatic  #27
209: astore        21
211: aload         20
213: ldc           #12
215: invokevirtual #28
218: astore        22
220: aload         20
222: ldc           #25
224: invokevirtual #29
227: astore        23
229: aload         20
231: invokevirtual #72
234: astore        24
236: aload         20
238: invokevirtual #73
241: astore        25
243: aload         20
245: invokevirtual #74
248: astore        26
250: aload         10
252: aload         20
254: invokevirtual #47
257: astore        27
259: aload         20
261: invokevirtual #448
264: astore        28
266: aload_1
267: aload_2
268: aload         20
270: invokevirtual #536
273: istore        29
275: aload         20
277: invokevirtual #883
280: astore        30
282: aload         20
284: invokevirtual #220
287: astore        31
289: aload_2
290: invokestatic  #15
293: aload_3
294: invokestatic  #15
297: aload         4
299: invokestatic  #15
302: aload         5
304: invokestatic  #15
307: new           #16
310: dup
311: invokespecial #17
314: ldc           #18
316: invokevirtual #19
319: aload         6
321: invokevirtual #19
324: ldc           #78
326: invokevirtual #19
329: invokevirtual #22
332: aload         6
334: ldc           #10
336: invokestatic  #68
339: aload         7
341: invokestatic  #15
344: aload         8
346: invokestatic  #15
349: aload         9
351: invokestatic  #15
354: aload         12
356: invokestatic  #15
359: aload         13
361: invokestatic  #15
364: aload         14
366: invokestatic  #15
369: aload         15
371: invokestatic  #15
374: aload         16
376: invokestatic  #15
379: aload         17
381: invokestatic  #15
384: new           #16
387: dup
388: invokespecial #17
391: ldc           #18
393: invokevirtual #19
396: iload         18
398: invokevirtual #20
401: ldc           #21
403: invokevirtual #19
406: iconst_0
407: invokevirtual #20
410: ldc           #18
412: invokevirtual #19
415: invokevirtual #22
418: iload         18
420: ifne          427
423: iconst_1
424: goto          428
427: iconst_0
428: invokestatic  #23
431: aload         19
433: invokestatic  #15
436: aload         20
438: invokestatic  #15
441: aload         21
443: invokestatic  #15
446: aload         22
448: invokestatic  #15
451: aload         23
453: invokestatic  #15
456: new           #16
459: dup
460: invokespecial #17
463: ldc           #18
465: invokevirtual #19
468: aload         24
470: invokevirtual #19
473: ldc           #78
475: invokevirtual #19
478: invokevirtual #22
481: aload         24
483: ldc           #10
485: invokestatic  #68
488: new           #16
491: dup
492: invokespecial #17
495: ldc           #18
497: invokevirtual #19
500: aload         25
502: invokevirtual #19
505: ldc           #67
507: invokevirtual #19
510: invokevirtual #22
513: aload         25
515: ldc           #25
517: invokestatic  #68
520: aload         26
522: invokestatic  #79
525: aload         27
527: invokestatic  #15
530: new           #16
533: dup
534: invokespecial #17
537: ldc           #18
539: invokevirtual #19
542: aload         28
544: invokevirtual #19
547: ldc           #67
549: invokevirtual #19
552: invokevirtual #22
555: aload         28
557: ldc           #25
559: invokestatic  #68
562: new           #16
565: dup
566: invokespecial #17
569: ldc           #18
571: invokevirtual #19
574: iload         29
576: invokevirtual #20
579: ldc           #21
581: invokevirtual #19
584: iconst_0
585: invokevirtual #20
588: ldc           #18
590: invokevirtual #19
593: invokevirtual #22
596: iload         29
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #23
609: aload         30
611: invokestatic  #15
614: new           #16
617: dup
618: invokespecial #17
621: ldc           #18
623: invokevirtual #19
626: aload         31
628: invokevirtual #19
631: ldc           #107
633: invokevirtual #19
636: invokevirtual #22
639: aload         31
641: ldc           #13
643: invokestatic  #68
646: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test284
Start line: 15211
End line: 15250
Method source code: 
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)", whitelist1);
        org.jsoup.safety.Whitelist whitelist6 = whitelist1.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        org.jsoup.safety.Whitelist whitelist11 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str12 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist11);
        org.jsoup.safety.Whitelist whitelist14 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist16 = whitelist14.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist18 = whitelist16.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist22 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str23 = org.jsoup.Jsoup.clean(":lt(32)", whitelist22);
        org.jsoup.safety.Whitelist whitelist27 = whitelist22.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray34 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist35 = whitelist22.addTags(strArray34);
        org.jsoup.safety.Whitelist whitelist36 = whitelist18.addProtocols(":matchesOwn(null", "hi!", strArray34);
        org.jsoup.safety.Whitelist whitelist37 = whitelist11.addAttributes("[^hi!]", strArray34);
        org.jsoup.safety.Whitelist whitelist38 = whitelist6.addTags(strArray34);
        org.jsoup.nodes.Attributes attributes40 = whitelist38.getEnforcedAttributes("[hi!$= ]");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":lt(32)" + "'", str2, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!$=   ]" + "'", str12, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(whitelist22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":lt(32)" + "'", str23, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(attributes40);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #884
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #43
39: ldc           #12
41: ldc           #32
43: invokevirtual #11
46: astore_3
47: aload_3
48: ldc           #51
50: invokevirtual #150
53: astore        4
55: invokestatic  #8
58: astore        5
60: ldc           #109
62: ldc           #110
64: aload         5
66: invokestatic  #94
69: astore        6
71: invokestatic  #8
74: astore        7
76: aload         7
78: iconst_1
79: invokevirtual #9
82: astore        8
84: aload         8
86: iconst_0
87: invokevirtual #9
90: astore        9
92: invokestatic  #118
95: astore        10
97: ldc           #43
99: aload         10
101: invokestatic  #81
104: astore        11
106: aload         10
108: ldc           #43
110: ldc           #12
112: ldc           #32
114: invokevirtual #11
117: astore        12
119: bipush        6
121: anewarray     #119
124: dup
125: iconst_0
126: ldc           #109
128: aastore
129: dup
130: iconst_1
131: ldc           #10
133: aastore
134: dup
135: iconst_2
136: ldc           #13
138: aastore
139: dup
140: iconst_3
141: ldc           #50
143: aastore
144: dup
145: iconst_4
146: ldc           #12
148: aastore
149: dup
150: iconst_5
151: ldc           #120
153: aastore
154: astore        13
156: aload         10
158: aload         13
160: invokevirtual #121
163: astore        14
165: aload         9
167: ldc           #38
169: ldc           #12
171: aload         13
173: invokevirtual #122
176: astore        15
178: aload         5
180: ldc           #50
182: aload         13
184: invokevirtual #127
187: astore        16
189: aload_3
190: aload         13
192: invokevirtual #121
195: astore        17
197: aload         17
199: ldc_w         #885
202: invokevirtual #150
205: astore        18
207: aload_1
208: invokestatic  #15
211: new           #16
214: dup
215: invokespecial #17
218: ldc           #18
220: invokevirtual #19
223: aload_2
224: invokevirtual #19
227: ldc           #128
229: invokevirtual #19
232: invokevirtual #22
235: aload_2
236: ldc           #43
238: invokestatic  #68
241: aload_3
242: invokestatic  #15
245: aload         4
247: invokestatic  #15
250: aload         5
252: invokestatic  #15
255: new           #16
258: dup
259: invokespecial #17
262: ldc           #18
264: invokevirtual #19
267: aload         6
269: invokevirtual #19
272: ldc           #111
274: invokevirtual #19
277: invokevirtual #22
280: aload         6
282: ldc           #65
284: invokestatic  #68
287: aload         7
289: invokestatic  #15
292: aload         8
294: invokestatic  #15
297: aload         9
299: invokestatic  #15
302: aload         10
304: invokestatic  #15
307: new           #16
310: dup
311: invokespecial #17
314: ldc           #18
316: invokevirtual #19
319: aload         11
321: invokevirtual #19
324: ldc           #128
326: invokevirtual #19
329: invokevirtual #22
332: aload         11
334: ldc           #43
336: invokestatic  #68
339: aload         12
341: invokestatic  #15
344: aload         13
346: invokestatic  #15
349: aload         14
351: invokestatic  #15
354: aload         15
356: invokestatic  #15
359: aload         16
361: invokestatic  #15
364: aload         17
366: invokestatic  #15
369: aload         18
371: invokestatic  #15
374: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test285
Start line: 15253
End line: 15316
Method source code: 
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist6.preserveRelativeLinks(false);
        java.lang.String[] strArray17 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean18 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        org.jsoup.safety.Whitelist whitelist19 = whitelist8.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray17);
        org.jsoup.safety.Whitelist whitelist20 = whitelist2.addTags(strArray17);
        org.jsoup.safety.Whitelist whitelist24 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist30 = whitelist24.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist34 = whitelist24.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str35 = org.jsoup.Jsoup.clean("hi!", whitelist24);
        org.jsoup.safety.Whitelist whitelist37 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist39 = whitelist37.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist41 = whitelist39.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist45 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str46 = org.jsoup.Jsoup.clean(":lt(32)", whitelist45);
        org.jsoup.safety.Whitelist whitelist50 = whitelist45.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray57 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist58 = whitelist45.addTags(strArray57);
        org.jsoup.safety.Whitelist whitelist59 = whitelist41.addProtocols(":matchesOwn(null", "hi!", strArray57);
        java.lang.String[] strArray68 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean69 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray68);
        org.jsoup.safety.Whitelist whitelist70 = whitelist59.addProtocols("\n<!--hi!-->", "#document", strArray68);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray68);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray68);
        org.jsoup.safety.Whitelist whitelist73 = whitelist24.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray68);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray68);
        org.jsoup.safety.Whitelist whitelist75 = whitelist2.addProtocols("#:lt(32)=\"\"", ":contains(:matchesown(null", strArray68);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ":lt(32)" + "'", str46, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist50);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertNotNull(whitelist75);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #886
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #8
47: astore        4
49: aload         4
51: iconst_1
52: invokevirtual #9
55: astore        5
57: aload         5
59: iconst_0
60: invokevirtual #9
63: astore        6
65: iconst_5
66: anewarray     #119
69: dup
70: iconst_0
71: ldc           #13
73: aastore
74: dup
75: iconst_1
76: ldc           #32
78: aastore
79: dup
80: iconst_2
81: ldc           #10
83: aastore
84: dup
85: iconst_3
86: ldc           #43
88: aastore
89: dup
90: iconst_4
91: ldc           #58
93: aastore
94: astore        7
96: ldc           #10
98: aload         7
100: invokestatic  #123
103: istore        8
105: aload         6
107: ldc           #120
109: ldc           #55
111: aload         7
113: invokevirtual #122
116: astore        9
118: aload_2
119: aload         7
121: invokevirtual #121
124: astore        10
126: invokestatic  #8
129: astore        11
131: aload         11
133: iconst_1
134: invokevirtual #9
137: astore        12
139: aload         11
141: ldc           #10
143: ldc           #10
145: ldc           #10
147: invokevirtual #11
150: astore        13
152: aload         11
154: ldc           #12
156: ldc           #13
158: ldc           #12
160: invokevirtual #11
163: astore        14
165: ldc           #12
167: aload         11
169: invokestatic  #81
172: astore        15
174: invokestatic  #8
177: astore        16
179: aload         16
181: iconst_1
182: invokevirtual #9
185: astore        17
187: aload         17
189: iconst_0
190: invokevirtual #9
193: astore        18
195: invokestatic  #118
198: astore        19
200: ldc           #43
202: aload         19
204: invokestatic  #81
207: astore        20
209: aload         19
211: ldc           #43
213: ldc           #12
215: ldc           #32
217: invokevirtual #11
220: astore        21
222: bipush        6
224: anewarray     #119
227: dup
228: iconst_0
229: ldc           #109
231: aastore
232: dup
233: iconst_1
234: ldc           #10
236: aastore
237: dup
238: iconst_2
239: ldc           #13
241: aastore
242: dup
243: iconst_3
244: ldc           #50
246: aastore
247: dup
248: iconst_4
249: ldc           #12
251: aastore
252: dup
253: iconst_5
254: ldc           #120
256: aastore
257: astore        22
259: aload         19
261: aload         22
263: invokevirtual #121
266: astore        23
268: aload         18
270: ldc           #38
272: ldc           #12
274: aload         22
276: invokevirtual #122
279: astore        24
281: iconst_5
282: anewarray     #119
285: dup
286: iconst_0
287: ldc           #13
289: aastore
290: dup
291: iconst_1
292: ldc           #32
294: aastore
295: dup
296: iconst_2
297: ldc           #10
299: aastore
300: dup
301: iconst_3
302: ldc           #43
304: aastore
305: dup
306: iconst_4
307: ldc           #58
309: aastore
310: astore        25
312: ldc           #10
314: aload         25
316: invokestatic  #123
319: istore        26
321: aload         24
323: ldc           #84
325: ldc           #13
327: aload         25
329: invokevirtual #122
332: astore        27
334: aload         25
336: checkcast     #124
339: invokestatic  #125
342: aload         25
344: checkcast     #124
347: invokestatic  #125
350: aload         11
352: ldc           #249
354: aload         25
356: invokevirtual #127
359: astore        28
361: aload         25
363: checkcast     #124
366: invokestatic  #125
369: aload_2
370: ldc_w         #416
373: ldc_w         #527
376: aload         25
378: invokevirtual #122
381: astore        29
383: aload_1
384: invokestatic  #15
387: aload_2
388: invokestatic  #15
391: aload         4
393: invokestatic  #15
396: aload         5
398: invokestatic  #15
401: aload         6
403: invokestatic  #15
406: aload         7
408: invokestatic  #15
411: new           #16
414: dup
415: invokespecial #17
418: ldc           #18
420: invokevirtual #19
423: iload         8
425: invokevirtual #20
428: ldc           #21
430: invokevirtual #19
433: iconst_1
434: invokevirtual #20
437: ldc           #18
439: invokevirtual #19
442: invokevirtual #22
445: iload         8
447: iconst_1
448: if_icmpne     455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #23
459: aload         9
461: invokestatic  #15
464: aload         10
466: invokestatic  #15
469: aload         11
471: invokestatic  #15
474: aload         12
476: invokestatic  #15
479: aload         13
481: invokestatic  #15
484: aload         14
486: invokestatic  #15
489: new           #16
492: dup
493: invokespecial #17
496: ldc           #18
498: invokevirtual #19
501: aload         15
503: invokevirtual #19
506: ldc           #211
508: invokevirtual #19
511: invokevirtual #22
514: aload         15
516: ldc           #12
518: invokestatic  #68
521: aload         16
523: invokestatic  #15
526: aload         17
528: invokestatic  #15
531: aload         18
533: invokestatic  #15
536: aload         19
538: invokestatic  #15
541: new           #16
544: dup
545: invokespecial #17
548: ldc           #18
550: invokevirtual #19
553: aload         20
555: invokevirtual #19
558: ldc           #128
560: invokevirtual #19
563: invokevirtual #22
566: aload         20
568: ldc           #43
570: invokestatic  #68
573: aload         21
575: invokestatic  #15
578: aload         22
580: invokestatic  #15
583: aload         23
585: invokestatic  #15
588: aload         24
590: invokestatic  #15
593: aload         25
595: invokestatic  #15
598: new           #16
601: dup
602: invokespecial #17
605: ldc           #18
607: invokevirtual #19
610: iload         26
612: invokevirtual #20
615: ldc           #21
617: invokevirtual #19
620: iconst_1
621: invokevirtual #20
624: ldc           #18
626: invokevirtual #19
629: invokevirtual #22
632: iload         26
634: iconst_1
635: if_icmpne     642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #23
646: aload         27
648: invokestatic  #15
651: aload         28
653: invokestatic  #15
656: aload         29
658: invokestatic  #15
661: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test286
Start line: 15319
End line: 15427
Method source code: 
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        java.lang.String str19 = document12.toString();
        java.lang.Object[] objArray20 = new java.lang.Object[] { element8, str19 };
        org.jsoup.helper.Validate.noNullElements(objArray20, "");
        boolean boolean23 = objList0.offerLast((java.lang.Object) objArray20);
        java.lang.Object obj24 = objList0.peek();
        objList0.clear();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList26 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document30 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList32 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document30, "hi!");
        org.jsoup.nodes.Element element34 = document30.text("");
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList40 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document38, "hi!");
        org.jsoup.nodes.Element element42 = document38.tagName("hi!");
        org.jsoup.nodes.Element element44 = document38.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = document38.outputSettings();
        org.jsoup.nodes.Document document46 = document30.outputSettings(outputSettings45);
        org.jsoup.nodes.Document document47 = document30.normalise();
        objList26.addLast((java.lang.Object) document47);
        org.jsoup.nodes.Document document51 = org.jsoup.Jsoup.parse("", ":lt(32)");
        boolean boolean52 = objList26.offerFirst((java.lang.Object) "");
        boolean boolean53 = objList0.offerLast((java.lang.Object) boolean52);
        java.lang.Object obj54 = null;
        int int55 = objList0.indexOf(obj54);
        org.jsoup.nodes.Document document59 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList61 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document59, "hi!");
        org.jsoup.nodes.Element element63 = document59.tagName("hi!");
        org.jsoup.nodes.Element element65 = document59.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings66 = document59.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings67 = outputSettings66.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings69 = outputSettings67.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode70 = org.jsoup.nodes.Entities.EscapeMode.base;
        org.jsoup.nodes.Document.OutputSettings outputSettings71 = outputSettings69.escapeMode(escapeMode70);
        org.jsoup.nodes.Entities.EscapeMode escapeMode72 = outputSettings71.escapeMode();
        boolean boolean73 = objList0.contains((java.lang.Object) outputSettings71);
        java.util.Iterator<java.lang.Object> objItor74 = objList0.descendingIterator();
        java.lang.Object[] objArray75 = objList0.toArray();
        org.jsoup.safety.Whitelist whitelist77 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str78 = org.jsoup.Jsoup.clean(":lt(32)", whitelist77);
        org.jsoup.safety.Whitelist whitelist82 = whitelist77.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray89 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist90 = whitelist77.addTags(strArray89);
        org.jsoup.safety.Cleaner cleaner91 = new org.jsoup.safety.Cleaner(whitelist77);
        boolean boolean92 = objList0.offerLast((java.lang.Object) cleaner91);
        java.lang.Object obj93 = objList0.removeFirst();
        java.lang.Object obj94 = objList0.pollFirst();
        java.lang.Object obj95 = objList0.poll();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(nodeList32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(outputSettings45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(nodeList61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(element65);
        org.junit.Assert.assertNotNull(outputSettings66);
        org.junit.Assert.assertNotNull(outputSettings67);
        org.junit.Assert.assertNotNull(outputSettings69);
        org.junit.Assert.assertTrue("'" + escapeMode70 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode70.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings71);
        org.junit.Assert.assertTrue("'" + escapeMode72 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode72.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objItor74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[true]");
        org.junit.Assert.assertNotNull(whitelist77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ":lt(32)" + "'", str78, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist82);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(whitelist90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + true + "'", obj93, true);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNull(obj95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #887
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #72
101: astore        9
103: iconst_2
104: anewarray     #5
107: dup
108: iconst_0
109: aload         4
111: aastore
112: dup
113: iconst_1
114: aload         9
116: aastore
117: astore        10
119: aload         10
121: ldc           #25
123: invokestatic  #245
126: aload_1
127: aload         10
129: invokevirtual #282
132: istore        11
134: aload_1
135: invokevirtual #379
138: astore        12
140: aload_1
141: invokevirtual #131
144: new           #88
147: dup
148: invokespecial #89
151: astore        13
153: ldc           #25
155: ldc           #12
157: invokestatic  #26
160: astore        14
162: ldc           #12
164: aload         14
166: ldc           #12
168: invokestatic  #27
171: astore        15
173: aload         14
175: ldc           #25
177: invokevirtual #64
180: astore        16
182: ldc           #25
184: ldc           #12
186: invokestatic  #26
189: astore        17
191: ldc           #12
193: aload         17
195: ldc           #12
197: invokestatic  #27
200: astore        18
202: aload         17
204: ldc           #12
206: invokevirtual #28
209: astore        19
211: aload         17
213: ldc           #25
215: invokevirtual #29
218: astore        20
220: aload         17
222: invokevirtual #30
225: astore        21
227: aload         14
229: aload         21
231: invokevirtual #175
234: astore        22
236: aload         14
238: invokevirtual #102
241: astore        23
243: aload         13
245: aload         23
247: invokevirtual #95
250: ldc           #25
252: ldc           #43
254: invokestatic  #26
257: astore        24
259: aload         13
261: ldc           #25
263: invokevirtual #354
266: istore        25
268: aload_1
269: iload         25
271: invokestatic  #137
274: invokevirtual #282
277: istore        26
279: aconst_null
280: astore        27
282: aload_1
283: aload         27
285: invokevirtual #380
288: istore        28
290: ldc           #25
292: ldc           #12
294: invokestatic  #26
297: astore        29
299: ldc           #12
301: aload         29
303: ldc           #12
305: invokestatic  #27
308: astore        30
310: aload         29
312: ldc           #12
314: invokevirtual #28
317: astore        31
319: aload         29
321: ldc           #25
323: invokevirtual #29
326: astore        32
328: aload         29
330: invokevirtual #30
333: astore        33
335: aload         33
337: invokevirtual #205
340: astore        34
342: aload         34
344: iconst_0
345: invokevirtual #31
348: astore        35
350: getstatic     #381
353: astore        36
355: aload         35
357: aload         36
359: invokevirtual #190
362: astore        37
364: aload         37
366: invokevirtual #382
369: astore        38
371: aload_1
372: aload         37
374: invokevirtual #286
377: istore        39
379: aload_1
380: invokevirtual #383
383: astore        40
385: aload_1
386: invokevirtual #384
389: astore        41
391: invokestatic  #118
394: astore        42
396: ldc           #43
398: aload         42
400: invokestatic  #81
403: astore        43
405: aload         42
407: ldc           #43
409: ldc           #12
411: ldc           #32
413: invokevirtual #11
416: astore        44
418: bipush        6
420: anewarray     #119
423: dup
424: iconst_0
425: ldc           #109
427: aastore
428: dup
429: iconst_1
430: ldc           #10
432: aastore
433: dup
434: iconst_2
435: ldc           #13
437: aastore
438: dup
439: iconst_3
440: ldc           #50
442: aastore
443: dup
444: iconst_4
445: ldc           #12
447: aastore
448: dup
449: iconst_5
450: ldc           #120
452: aastore
453: astore        45
455: aload         42
457: aload         45
459: invokevirtual #121
462: astore        46
464: new           #40
467: dup
468: aload         42
470: invokespecial #41
473: astore        47
475: aload_1
476: aload         47
478: invokevirtual #282
481: istore        48
483: aload_1
484: invokevirtual #646
487: astore        49
489: aload_1
490: invokevirtual #660
493: astore        50
495: aload_1
496: invokevirtual #402
499: astore        51
501: aload_2
502: invokestatic  #15
505: aload_3
506: invokestatic  #15
509: aload         4
511: invokestatic  #15
514: aload         5
516: invokestatic  #15
519: aload         6
521: invokestatic  #15
524: aload         7
526: invokestatic  #15
529: aload         8
531: invokestatic  #15
534: new           #16
537: dup
538: invokespecial #17
541: ldc           #18
543: invokevirtual #19
546: aload         9
548: invokevirtual #19
551: ldc           #78
553: invokevirtual #19
556: invokevirtual #22
559: aload         9
561: ldc           #10
563: invokestatic  #68
566: aload         10
568: invokestatic  #15
571: aload         10
573: invokestatic  #288
576: ldc_w         #289
579: invokestatic  #290
582: aload         10
584: invokestatic  #291
587: ldc_w         #289
590: invokestatic  #290
593: new           #16
596: dup
597: invokespecial #17
600: ldc           #18
602: invokevirtual #19
605: iload         11
607: invokevirtual #20
610: ldc           #21
612: invokevirtual #19
615: iconst_1
616: invokevirtual #20
619: ldc           #18
621: invokevirtual #19
624: invokevirtual #22
627: iload         11
629: iconst_1
630: if_icmpne     637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #23
641: aload         12
643: invokestatic  #15
646: aload         14
648: invokestatic  #15
651: aload         15
653: invokestatic  #15
656: aload         16
658: invokestatic  #15
661: aload         17
663: invokestatic  #15
666: aload         18
668: invokestatic  #15
671: aload         19
673: invokestatic  #15
676: aload         20
678: invokestatic  #15
681: aload         21
683: invokestatic  #15
686: aload         22
688: invokestatic  #15
691: aload         23
693: invokestatic  #15
696: aload         24
698: invokestatic  #15
701: new           #16
704: dup
705: invokespecial #17
708: ldc           #18
710: invokevirtual #19
713: iload         25
715: invokevirtual #20
718: ldc           #21
720: invokevirtual #19
723: iconst_1
724: invokevirtual #20
727: ldc           #18
729: invokevirtual #19
732: invokevirtual #22
735: iload         25
737: iconst_1
738: if_icmpne     745
741: iconst_1
742: goto          746
745: iconst_0
746: invokestatic  #23
749: new           #16
752: dup
753: invokespecial #17
756: ldc           #18
758: invokevirtual #19
761: iload         26
763: invokevirtual #20
766: ldc           #21
768: invokevirtual #19
771: iconst_1
772: invokevirtual #20
775: ldc           #18
777: invokevirtual #19
780: invokevirtual #22
783: iload         26
785: iconst_1
786: if_icmpne     793
789: iconst_1
790: goto          794
793: iconst_0
794: invokestatic  #23
797: new           #16
800: dup
801: invokespecial #17
804: ldc           #18
806: invokevirtual #19
809: iload         28
811: invokevirtual #134
814: ldc           #21
816: invokevirtual #19
819: iconst_m1
820: invokevirtual #134
823: ldc           #18
825: invokevirtual #19
828: invokevirtual #22
831: iload         28
833: iconst_m1
834: if_icmpne     841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #23
845: aload         29
847: invokestatic  #15
850: aload         30
852: invokestatic  #15
855: aload         31
857: invokestatic  #15
860: aload         32
862: invokestatic  #15
865: aload         33
867: invokestatic  #15
870: aload         34
872: invokestatic  #15
875: aload         35
877: invokestatic  #15
880: new           #16
883: dup
884: invokespecial #17
887: ldc           #18
889: invokevirtual #19
892: aload         36
894: invokevirtual #223
897: ldc           #21
899: invokevirtual #19
902: getstatic     #381
905: invokevirtual #223
908: ldc           #18
910: invokevirtual #19
913: invokevirtual #22
916: aload         36
918: getstatic     #381
921: invokevirtual #385
924: invokestatic  #23
927: aload         37
929: invokestatic  #15
932: new           #16
935: dup
936: invokespecial #17
939: ldc           #18
941: invokevirtual #19
944: aload         38
946: invokevirtual #223
949: ldc           #21
951: invokevirtual #19
954: getstatic     #381
957: invokevirtual #223
960: ldc           #18
962: invokevirtual #19
965: invokevirtual #22
968: aload         38
970: getstatic     #381
973: invokevirtual #385
976: invokestatic  #23
979: new           #16
982: dup
983: invokespecial #17
986: ldc           #18
988: invokevirtual #19
991: iload         39
993: invokevirtual #20
996: ldc           #21
998: invokevirtual #19
1001: iconst_0
1002: invokevirtual #20
1005: ldc           #18
1007: invokevirtual #19
1010: invokevirtual #22
1013: iload         39
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #23
1026: aload         40
1028: invokestatic  #15
1031: aload         41
1033: invokestatic  #15
1036: aload         41
1038: invokestatic  #288
1041: ldc_w         #386
1044: invokestatic  #290
1047: aload         41
1049: invokestatic  #291
1052: ldc_w         #386
1055: invokestatic  #290
1058: aload         42
1060: invokestatic  #15
1063: new           #16
1066: dup
1067: invokespecial #17
1070: ldc           #18
1072: invokevirtual #19
1075: aload         43
1077: invokevirtual #19
1080: ldc           #128
1082: invokevirtual #19
1085: invokevirtual #22
1088: aload         43
1090: ldc           #43
1092: invokestatic  #68
1095: aload         44
1097: invokestatic  #15
1100: aload         45
1102: invokestatic  #15
1105: aload         46
1107: invokestatic  #15
1110: new           #16
1113: dup
1114: invokespecial #17
1117: ldc           #18
1119: invokevirtual #19
1122: iload         48
1124: invokevirtual #20
1127: ldc           #21
1129: invokevirtual #19
1132: iconst_1
1133: invokevirtual #20
1136: ldc           #18
1138: invokevirtual #19
1141: invokevirtual #22
1144: iload         48
1146: iconst_1
1147: if_icmpne     1154
1150: iconst_1
1151: goto          1155
1154: iconst_0
1155: invokestatic  #23
1158: new           #16
1161: dup
1162: invokespecial #17
1165: ldc           #18
1167: invokevirtual #19
1170: aload         49
1172: invokevirtual #223
1175: ldc           #21
1177: invokevirtual #19
1180: iconst_1
1181: invokevirtual #20
1184: ldc           #18
1186: invokevirtual #19
1189: invokevirtual #22
1192: aload         49
1194: iconst_1
1195: invokestatic  #137
1198: invokestatic  #68
1201: aload         50
1203: invokestatic  #15
1206: aload         51
1208: invokestatic  #79
1211: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test287
Start line: 15430
End line: 15461
Method source code: 
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.nodes.Document document9 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Document document10 = document9.normalise();
        java.lang.String str11 = document10.title();
        org.jsoup.nodes.Element element13 = document10.text(":matchesOwn(null");
        org.jsoup.nodes.Element element15 = document10.tagName(":eq(1)");
        org.jsoup.nodes.Attribute attribute18 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        java.lang.String str19 = attribute18.getKey();
        java.lang.String str20 = attribute18.getValue();
        java.lang.String str22 = attribute18.setValue("<hi!></hi!>:contains(:gt(100)<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean23 = whitelist2.isSafeAttribute(".<html>\n <head></head>\n <body></body>\n</html>", element15, attribute18);
        java.lang.String str24 = attribute18.getKey();
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(document9);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(attribute18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#comment" + "'", str19, "#comment");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#comment" + "'", str24, "#comment");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #888
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: ldc           #25
47: ldc           #12
49: invokestatic  #26
52: astore        4
54: aload         4
56: invokevirtual #102
59: astore        5
61: aload         5
63: invokevirtual #448
66: astore        6
68: aload         5
70: ldc           #38
72: invokevirtual #64
75: astore        7
77: aload         5
79: ldc_w         #279
82: invokevirtual #28
85: astore        8
87: ldc           #114
89: ldc           #25
91: invokestatic  #168
94: astore        9
96: aload         9
98: invokevirtual #210
101: astore        10
103: aload         9
105: invokevirtual #582
108: astore        11
110: aload         9
112: ldc_w         #859
115: invokevirtual #514
118: astore        12
120: aload_1
121: ldc           #32
123: aload         8
125: aload         9
127: invokevirtual #169
130: istore        13
132: aload         9
134: invokevirtual #210
137: astore        14
139: aload_1
140: invokestatic  #15
143: new           #16
146: dup
147: invokespecial #17
150: ldc           #18
152: invokevirtual #19
155: aload_2
156: invokevirtual #19
159: ldc           #111
161: invokevirtual #19
164: invokevirtual #22
167: aload_2
168: ldc           #65
170: invokestatic  #68
173: new           #16
176: dup
177: invokespecial #17
180: ldc           #18
182: invokevirtual #19
185: iload_3
186: invokevirtual #20
189: ldc           #21
191: invokevirtual #19
194: iconst_0
195: invokevirtual #20
198: ldc           #18
200: invokevirtual #19
203: invokevirtual #22
206: iload_3
207: ifne          214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #23
218: aload         4
220: invokestatic  #15
223: aload         5
225: invokestatic  #15
228: new           #16
231: dup
232: invokespecial #17
235: ldc           #18
237: invokevirtual #19
240: aload         6
242: invokevirtual #19
245: ldc           #67
247: invokevirtual #19
250: invokevirtual #22
253: aload         6
255: ldc           #25
257: invokestatic  #68
260: aload         7
262: invokestatic  #15
265: aload         8
267: invokestatic  #15
270: aload         9
272: invokestatic  #15
275: new           #16
278: dup
279: invokespecial #17
282: ldc           #18
284: invokevirtual #19
287: aload         10
289: invokevirtual #19
292: ldc           #212
294: invokevirtual #19
297: invokevirtual #22
300: aload         10
302: ldc           #114
304: invokestatic  #68
307: new           #16
310: dup
311: invokespecial #17
314: ldc           #18
316: invokevirtual #19
319: aload         11
321: invokevirtual #19
324: ldc           #67
326: invokevirtual #19
329: invokevirtual #22
332: aload         11
334: ldc           #25
336: invokestatic  #68
339: new           #16
342: dup
343: invokespecial #17
346: ldc           #18
348: invokevirtual #19
351: aload         12
353: invokevirtual #19
356: ldc           #67
358: invokevirtual #19
361: invokevirtual #22
364: aload         12
366: ldc           #25
368: invokestatic  #68
371: new           #16
374: dup
375: invokespecial #17
378: ldc           #18
380: invokevirtual #19
383: iload         13
385: invokevirtual #20
388: ldc           #21
390: invokevirtual #19
393: iconst_0
394: invokevirtual #20
397: ldc           #18
399: invokevirtual #19
402: invokevirtual #22
405: iload         13
407: ifne          414
410: iconst_1
411: goto          415
414: iconst_0
415: invokestatic  #23
418: new           #16
421: dup
422: invokespecial #17
425: ldc           #18
427: invokevirtual #19
430: aload         14
432: invokevirtual #19
435: ldc           #212
437: invokevirtual #19
440: invokevirtual #22
443: aload         14
445: ldc           #114
447: invokestatic  #68
450: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test288
Start line: 15464
End line: 15550
Method source code: 
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist0.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist10 = whitelist0.addEnforcedAttribute("hi!", "#document", "hi!");
        org.jsoup.safety.Whitelist whitelist15 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist21 = whitelist15.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str22 = org.jsoup.Jsoup.clean("\nhi!", whitelist21);
        org.jsoup.safety.Whitelist whitelist28 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str29 = org.jsoup.Jsoup.clean(":lt(32)", whitelist28);
        boolean boolean31 = whitelist28.isSafeTag("");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element38 = document35.empty();
        org.jsoup.nodes.Element element40 = document35.removeClass("hi!");
        org.jsoup.nodes.Document document44 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList46 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document44, "hi!");
        org.jsoup.nodes.Element element48 = document44.tagName("hi!");
        org.jsoup.nodes.Element element50 = document44.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document44.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings51.prettyPrint(false);
        org.jsoup.nodes.Document document54 = document35.outputSettings(outputSettings53);
        java.lang.String str55 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist28, outputSettings53);
        org.jsoup.safety.Whitelist whitelist57 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist59 = whitelist57.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist61 = whitelist59.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist65 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str66 = org.jsoup.Jsoup.clean(":lt(32)", whitelist65);
        org.jsoup.safety.Whitelist whitelist70 = whitelist65.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray77 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist78 = whitelist65.addTags(strArray77);
        org.jsoup.safety.Whitelist whitelist79 = whitelist61.addProtocols(":matchesOwn(null", "hi!", strArray77);
        org.jsoup.safety.Whitelist whitelist80 = whitelist28.addAttributes("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", strArray77);
        org.jsoup.safety.Whitelist whitelist81 = whitelist21.addProtocols("#doctype", "[]", strArray77);
        boolean boolean82 = org.jsoup.helper.StringUtil.in("[:lt(10)!=[hi!=.<html>\n <head></head>\n <body></body>\n</html>]]", strArray77);
        org.jsoup.safety.Whitelist whitelist83 = whitelist0.addProtocols("hi!", "[^\n<!--hi!-->]", strArray77);
        org.jsoup.safety.Cleaner cleaner84 = new org.jsoup.safety.Cleaner(whitelist0);
        org.jsoup.nodes.Document document87 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str88 = document87.ownText();
        org.jsoup.nodes.Element element90 = document87.createElement("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.select.Elements elements93 = document87.getElementsByAttributeValueNot("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", "[^hi!]");
        org.jsoup.nodes.Document document94 = cleaner84.clean(document87);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + ":lt(32)" + "'", str29, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(nodeList46);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(element50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(document54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[:lt(32)]" + "'", str55, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(whitelist59);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ":lt(32)" + "'", str66, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist70);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(whitelist78);
        org.junit.Assert.assertNotNull(whitelist79);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertNotNull(whitelist81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(whitelist83);
        org.junit.Assert.assertNotNull(document87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(element90);
        org.junit.Assert.assertNotNull(elements93);
        org.junit.Assert.assertNotNull(document94);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #889
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: ldc           #12
49: ldc           #13
51: ldc           #12
53: invokevirtual #11
56: astore        4
58: invokestatic  #8
61: astore        5
63: aload         5
65: iconst_1
66: invokevirtual #9
69: astore        6
71: aload         5
73: ldc           #10
75: ldc           #10
77: ldc           #10
79: invokevirtual #11
82: astore        7
84: ldc           #98
86: aload         7
88: invokestatic  #81
91: astore        8
93: invokestatic  #118
96: astore        9
98: ldc           #43
100: aload         9
102: invokestatic  #81
105: astore        10
107: aload         9
109: ldc           #25
111: invokevirtual #83
114: istore        11
116: ldc           #25
118: ldc           #12
120: invokestatic  #26
123: astore        12
125: ldc           #12
127: aload         12
129: ldc           #12
131: invokestatic  #27
134: astore        13
136: aload         12
138: invokevirtual #103
141: astore        14
143: aload         12
145: ldc           #12
147: invokevirtual #59
150: astore        15
152: ldc           #25
154: ldc           #12
156: invokestatic  #26
159: astore        16
161: ldc           #12
163: aload         16
165: ldc           #12
167: invokestatic  #27
170: astore        17
172: aload         16
174: ldc           #12
176: invokevirtual #28
179: astore        18
181: aload         16
183: ldc           #25
185: invokevirtual #29
188: astore        19
190: aload         16
192: invokevirtual #30
195: astore        20
197: aload         20
199: iconst_0
200: invokevirtual #31
203: astore        21
205: aload         12
207: aload         21
209: invokevirtual #175
212: astore        22
214: ldc           #58
216: ldc           #126
218: aload         9
220: aload         21
222: invokestatic  #33
225: astore        23
227: invokestatic  #8
230: astore        24
232: aload         24
234: iconst_1
235: invokevirtual #9
238: astore        25
240: aload         25
242: iconst_0
243: invokevirtual #9
246: astore        26
248: invokestatic  #118
251: astore        27
253: ldc           #43
255: aload         27
257: invokestatic  #81
260: astore        28
262: aload         27
264: ldc           #43
266: ldc           #12
268: ldc           #32
270: invokevirtual #11
273: astore        29
275: bipush        6
277: anewarray     #119
280: dup
281: iconst_0
282: ldc           #109
284: aastore
285: dup
286: iconst_1
287: ldc           #10
289: aastore
290: dup
291: iconst_2
292: ldc           #13
294: aastore
295: dup
296: iconst_3
297: ldc           #50
299: aastore
300: dup
301: iconst_4
302: ldc           #12
304: aastore
305: dup
306: iconst_5
307: ldc           #120
309: aastore
310: astore        30
312: aload         27
314: aload         30
316: invokevirtual #121
319: astore        31
321: aload         26
323: ldc           #38
325: ldc           #12
327: aload         30
329: invokevirtual #122
332: astore        32
334: aload         9
336: ldc           #109
338: aload         30
340: invokevirtual #127
343: astore        33
345: aload         7
347: ldc           #187
349: ldc           #159
351: aload         30
353: invokevirtual #122
356: astore        34
358: ldc_w         #450
361: aload         30
363: invokestatic  #123
366: istore        35
368: aload_1
369: ldc           #12
371: ldc_w         #890
374: aload         30
376: invokevirtual #122
379: astore        36
381: new           #40
384: dup
385: aload_1
386: invokespecial #41
389: astore        37
391: ldc           #50
393: ldc           #51
395: invokestatic  #52
398: astore        38
400: aload         38
402: invokevirtual #53
405: astore        39
407: aload         38
409: ldc           #10
411: invokevirtual #61
414: astore        40
416: aload         38
418: ldc           #249
420: ldc           #50
422: invokevirtual #682
425: astore        41
427: aload         37
429: aload         38
431: invokevirtual #47
434: astore        42
436: aload_1
437: invokestatic  #15
440: aload_2
441: invokestatic  #15
444: aload_3
445: invokestatic  #15
448: aload         4
450: invokestatic  #15
453: aload         5
455: invokestatic  #15
458: aload         6
460: invokestatic  #15
463: aload         7
465: invokestatic  #15
468: new           #16
471: dup
472: invokespecial #17
475: ldc           #18
477: invokevirtual #19
480: aload         8
482: invokevirtual #19
485: ldc           #211
487: invokevirtual #19
490: invokevirtual #22
493: aload         8
495: ldc           #12
497: invokestatic  #68
500: aload         9
502: invokestatic  #15
505: new           #16
508: dup
509: invokespecial #17
512: ldc           #18
514: invokevirtual #19
517: aload         10
519: invokevirtual #19
522: ldc           #128
524: invokevirtual #19
527: invokevirtual #22
530: aload         10
532: ldc           #43
534: invokestatic  #68
537: new           #16
540: dup
541: invokespecial #17
544: ldc           #18
546: invokevirtual #19
549: iload         11
551: invokevirtual #20
554: ldc           #21
556: invokevirtual #19
559: iconst_0
560: invokevirtual #20
563: ldc           #18
565: invokevirtual #19
568: invokevirtual #22
571: iload         11
573: ifne          580
576: iconst_1
577: goto          581
580: iconst_0
581: invokestatic  #23
584: aload         12
586: invokestatic  #15
589: aload         13
591: invokestatic  #15
594: aload         14
596: invokestatic  #15
599: aload         15
601: invokestatic  #15
604: aload         16
606: invokestatic  #15
609: aload         17
611: invokestatic  #15
614: aload         18
616: invokestatic  #15
619: aload         19
621: invokestatic  #15
624: aload         20
626: invokestatic  #15
629: aload         21
631: invokestatic  #15
634: aload         22
636: invokestatic  #15
639: new           #16
642: dup
643: invokespecial #17
646: ldc           #18
648: invokevirtual #19
651: aload         23
653: invokevirtual #19
656: ldc           #184
658: invokevirtual #19
661: invokevirtual #22
664: aload         23
666: ldc           #58
668: invokestatic  #68
671: aload         24
673: invokestatic  #15
676: aload         25
678: invokestatic  #15
681: aload         26
683: invokestatic  #15
686: aload         27
688: invokestatic  #15
691: new           #16
694: dup
695: invokespecial #17
698: ldc           #18
700: invokevirtual #19
703: aload         28
705: invokevirtual #19
708: ldc           #128
710: invokevirtual #19
713: invokevirtual #22
716: aload         28
718: ldc           #43
720: invokestatic  #68
723: aload         29
725: invokestatic  #15
728: aload         30
730: invokestatic  #15
733: aload         31
735: invokestatic  #15
738: aload         32
740: invokestatic  #15
743: aload         33
745: invokestatic  #15
748: aload         34
750: invokestatic  #15
753: new           #16
756: dup
757: invokespecial #17
760: ldc           #18
762: invokevirtual #19
765: iload         35
767: invokevirtual #20
770: ldc           #21
772: invokevirtual #19
775: iconst_0
776: invokevirtual #20
779: ldc           #18
781: invokevirtual #19
784: invokevirtual #22
787: iload         35
789: ifne          796
792: iconst_1
793: goto          797
796: iconst_0
797: invokestatic  #23
800: aload         36
802: invokestatic  #15
805: aload         38
807: invokestatic  #15
810: new           #16
813: dup
814: invokespecial #17
817: ldc           #18
819: invokevirtual #19
822: aload         39
824: invokevirtual #19
827: ldc           #67
829: invokevirtual #19
832: invokevirtual #22
835: aload         39
837: ldc           #25
839: invokestatic  #68
842: aload         40
844: invokestatic  #15
847: aload         41
849: invokestatic  #15
852: aload         42
854: invokestatic  #15
857: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test289
Start line: 15553
End line: 15628
Method source code: 
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        org.jsoup.nodes.Element element9 = document3.text("[:lt(32)]");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList10 = document3.dataNodes();
        org.jsoup.parser.Tag tag11 = document3.tag();
        boolean boolean12 = tag11.isEmpty();
        boolean boolean13 = tag11.isBlock();
        org.jsoup.parser.Tag tag16 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean17 = tag16.isBlock();
        org.jsoup.nodes.Document document21 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList23 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document21, "hi!");
        org.jsoup.nodes.Element element24 = document21.empty();
        org.jsoup.nodes.Element element26 = element24.toggleClass("#document");
        org.jsoup.select.Elements elements28 = element26.getElementsByAttributeStarting(":lt(32)");
        org.jsoup.select.Elements elements30 = element26.getElementsByClass("[:lt(32)]");
        boolean boolean31 = tag16.equals((java.lang.Object) elements30);
        boolean boolean32 = tag16.preserveWhitespace();
        org.jsoup.safety.Whitelist whitelist36 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str37 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist36);
        org.jsoup.safety.Whitelist whitelist39 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist41 = whitelist39.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist43 = whitelist41.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist47 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str48 = org.jsoup.Jsoup.clean(":lt(32)", whitelist47);
        org.jsoup.safety.Whitelist whitelist52 = whitelist47.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray59 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist60 = whitelist47.addTags(strArray59);
        org.jsoup.safety.Whitelist whitelist61 = whitelist43.addProtocols(":matchesOwn(null", "hi!", strArray59);
        org.jsoup.safety.Whitelist whitelist62 = whitelist36.addAttributes("[^hi!]", strArray59);
        org.jsoup.safety.Whitelist whitelist66 = whitelist36.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.nodes.Attributes attributes68 = whitelist36.getEnforcedAttributes("");
        org.jsoup.nodes.Element element69 = new org.jsoup.nodes.Element(tag16, " hi!", attributes68);
        org.jsoup.nodes.Attributes attributes70 = attributes68.clone();
        org.jsoup.nodes.Element element71 = new org.jsoup.nodes.Element(tag11, "<html>\n <head></head>\n <body>   \n </body>\n</html>", attributes68);
        boolean boolean72 = tag11.isBlock();
        boolean boolean73 = tag11.isBlock();
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(dataNodeList10);
        org.junit.Assert.assertNotNull(tag11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tag16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(nodeList23);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements28);
        org.junit.Assert.assertNotNull(elements30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!$=   ]" + "'", str37, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ":lt(32)" + "'", str48, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertNotNull(whitelist61);
        org.junit.Assert.assertNotNull(whitelist62);
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(attributes68);
        org.junit.Assert.assertNotNull(attributes70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #891
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #58
52: invokevirtual #64
55: astore        4
57: aload_1
58: invokevirtual #348
61: astore        5
63: aload_1
64: invokevirtual #207
67: astore        6
69: aload         6
71: invokevirtual #773
74: istore        7
76: aload         6
78: invokevirtual #425
81: istore        8
83: ldc           #13
85: invokestatic  #424
88: astore        9
90: aload         9
92: invokevirtual #425
95: istore        10
97: ldc           #25
99: ldc           #12
101: invokestatic  #26
104: astore        11
106: ldc           #12
108: aload         11
110: ldc           #12
112: invokestatic  #27
115: astore        12
117: aload         11
119: invokevirtual #103
122: astore        13
124: aload         13
126: ldc           #13
128: invokevirtual #177
131: astore        14
133: aload         14
135: ldc           #43
137: invokevirtual #426
140: astore        15
142: aload         14
144: ldc           #58
146: invokevirtual #427
149: astore        16
151: aload         9
153: aload         16
155: invokevirtual #428
158: istore        17
160: aload         9
162: invokevirtual #429
165: istore        18
167: invokestatic  #8
170: astore        19
172: ldc           #109
174: ldc           #110
176: aload         19
178: invokestatic  #94
181: astore        20
183: invokestatic  #8
186: astore        21
188: aload         21
190: iconst_1
191: invokevirtual #9
194: astore        22
196: aload         22
198: iconst_0
199: invokevirtual #9
202: astore        23
204: invokestatic  #118
207: astore        24
209: ldc           #43
211: aload         24
213: invokestatic  #81
216: astore        25
218: aload         24
220: ldc           #43
222: ldc           #12
224: ldc           #32
226: invokevirtual #11
229: astore        26
231: bipush        6
233: anewarray     #119
236: dup
237: iconst_0
238: ldc           #109
240: aastore
241: dup
242: iconst_1
243: ldc           #10
245: aastore
246: dup
247: iconst_2
248: ldc           #13
250: aastore
251: dup
252: iconst_3
253: ldc           #50
255: aastore
256: dup
257: iconst_4
258: ldc           #12
260: aastore
261: dup
262: iconst_5
263: ldc           #120
265: aastore
266: astore        27
268: aload         24
270: aload         27
272: invokevirtual #121
275: astore        28
277: aload         23
279: ldc           #38
281: ldc           #12
283: aload         27
285: invokevirtual #122
288: astore        29
290: aload         19
292: ldc           #50
294: aload         27
296: invokevirtual #127
299: astore        30
301: aload         19
303: ldc           #126
305: ldc           #109
307: ldc           #120
309: invokevirtual #11
312: astore        31
314: aload         19
316: ldc           #25
318: invokevirtual #150
321: astore        32
323: new           #430
326: dup
327: aload         9
329: ldc           #60
331: aload         32
333: invokespecial #431
336: astore        33
338: aload         32
340: invokevirtual #432
343: astore        34
345: new           #430
348: dup
349: aload         6
351: ldc           #151
353: aload         32
355: invokespecial #431
358: astore        35
360: aload         6
362: invokevirtual #425
365: istore        36
367: aload         6
369: invokevirtual #425
372: istore        37
374: aload_1
375: invokestatic  #15
378: aload_2
379: invokestatic  #15
382: aload_3
383: invokestatic  #15
386: aload         4
388: invokestatic  #15
391: aload         5
393: invokestatic  #15
396: aload         6
398: invokestatic  #15
401: new           #16
404: dup
405: invokespecial #17
408: ldc           #18
410: invokevirtual #19
413: iload         7
415: invokevirtual #20
418: ldc           #21
420: invokevirtual #19
423: iconst_0
424: invokevirtual #20
427: ldc           #18
429: invokevirtual #19
432: invokevirtual #22
435: iload         7
437: ifne          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #23
448: new           #16
451: dup
452: invokespecial #17
455: ldc           #18
457: invokevirtual #19
460: iload         8
462: invokevirtual #20
465: ldc           #21
467: invokevirtual #19
470: iconst_0
471: invokevirtual #20
474: ldc           #18
476: invokevirtual #19
479: invokevirtual #22
482: iload         8
484: ifne          491
487: iconst_1
488: goto          492
491: iconst_0
492: invokestatic  #23
495: aload         9
497: invokestatic  #15
500: new           #16
503: dup
504: invokespecial #17
507: ldc           #18
509: invokevirtual #19
512: iload         10
514: invokevirtual #20
517: ldc           #21
519: invokevirtual #19
522: iconst_0
523: invokevirtual #20
526: ldc           #18
528: invokevirtual #19
531: invokevirtual #22
534: iload         10
536: ifne          543
539: iconst_1
540: goto          544
543: iconst_0
544: invokestatic  #23
547: aload         11
549: invokestatic  #15
552: aload         12
554: invokestatic  #15
557: aload         13
559: invokestatic  #15
562: aload         14
564: invokestatic  #15
567: aload         15
569: invokestatic  #15
572: aload         16
574: invokestatic  #15
577: new           #16
580: dup
581: invokespecial #17
584: ldc           #18
586: invokevirtual #19
589: iload         17
591: invokevirtual #20
594: ldc           #21
596: invokevirtual #19
599: iconst_0
600: invokevirtual #20
603: ldc           #18
605: invokevirtual #19
608: invokevirtual #22
611: iload         17
613: ifne          620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #23
624: new           #16
627: dup
628: invokespecial #17
631: ldc           #18
633: invokevirtual #19
636: iload         18
638: invokevirtual #20
641: ldc           #21
643: invokevirtual #19
646: iconst_0
647: invokevirtual #20
650: ldc           #18
652: invokevirtual #19
655: invokevirtual #22
658: iload         18
660: ifne          667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #23
671: aload         19
673: invokestatic  #15
676: new           #16
679: dup
680: invokespecial #17
683: ldc           #18
685: invokevirtual #19
688: aload         20
690: invokevirtual #19
693: ldc           #111
695: invokevirtual #19
698: invokevirtual #22
701: aload         20
703: ldc           #65
705: invokestatic  #68
708: aload         21
710: invokestatic  #15
713: aload         22
715: invokestatic  #15
718: aload         23
720: invokestatic  #15
723: aload         24
725: invokestatic  #15
728: new           #16
731: dup
732: invokespecial #17
735: ldc           #18
737: invokevirtual #19
740: aload         25
742: invokevirtual #19
745: ldc           #128
747: invokevirtual #19
750: invokevirtual #22
753: aload         25
755: ldc           #43
757: invokestatic  #68
760: aload         26
762: invokestatic  #15
765: aload         27
767: invokestatic  #15
770: aload         28
772: invokestatic  #15
775: aload         29
777: invokestatic  #15
780: aload         30
782: invokestatic  #15
785: aload         31
787: invokestatic  #15
790: aload         32
792: invokestatic  #15
795: aload         34
797: invokestatic  #15
800: new           #16
803: dup
804: invokespecial #17
807: ldc           #18
809: invokevirtual #19
812: iload         36
814: invokevirtual #20
817: ldc           #21
819: invokevirtual #19
822: iconst_0
823: invokevirtual #20
826: ldc           #18
828: invokevirtual #19
831: invokevirtual #22
834: iload         36
836: ifne          843
839: iconst_1
840: goto          844
843: iconst_0
844: invokestatic  #23
847: new           #16
850: dup
851: invokespecial #17
854: ldc           #18
856: invokevirtual #19
859: iload         37
861: invokevirtual #20
864: ldc           #21
866: invokevirtual #19
869: iconst_0
870: invokevirtual #20
873: ldc           #18
875: invokevirtual #19
878: invokevirtual #22
881: iload         37
883: ifne          890
886: iconst_1
887: goto          891
890: iconst_0
891: invokestatic  #23
894: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test290
Start line: 15631
End line: 15704
Method source code: 
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist8 = whitelist6.preserveRelativeLinks(false);
        java.lang.String[] strArray17 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean18 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray17);
        org.jsoup.safety.Whitelist whitelist19 = whitelist8.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray17);
        org.jsoup.safety.Whitelist whitelist20 = whitelist2.addTags(strArray17);
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        java.lang.String str26 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist25);
        boolean boolean28 = whitelist25.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray38 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean39 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray38);
        boolean boolean40 = org.jsoup.helper.StringUtil.in(" hi!", strArray38);
        org.jsoup.safety.Whitelist whitelist41 = whitelist25.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray38);
        boolean boolean43 = whitelist41.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist47 = whitelist41.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        org.jsoup.safety.Whitelist whitelist49 = whitelist47.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist52 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist54 = whitelist52.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist56 = whitelist54.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist60 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str61 = org.jsoup.Jsoup.clean(":lt(32)", whitelist60);
        org.jsoup.safety.Whitelist whitelist65 = whitelist60.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray72 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist73 = whitelist60.addTags(strArray72);
        org.jsoup.safety.Whitelist whitelist74 = whitelist56.addProtocols(":matchesOwn(null", "hi!", strArray72);
        java.lang.String[] strArray83 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean84 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray83);
        org.jsoup.safety.Whitelist whitelist85 = whitelist74.addProtocols("\n<!--hi!-->", "#document", strArray83);
        org.jsoup.safety.Whitelist whitelist86 = whitelist49.addProtocols(".\n<!---->", "[:gt(100)]", strArray83);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray83);
        org.jsoup.safety.Whitelist whitelist88 = whitelist20.addAttributes("[<html>\n <head></head>\n <body></body>\n</html>]", strArray83);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "." + "'", str26, ".");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(whitelist54);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ":lt(32)" + "'", str61, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertNotNull(whitelist74);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(whitelist85);
        org.junit.Assert.assertNotNull(whitelist86);
        org.junit.Assert.assertNotNull(whitelist88);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #892
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #8
47: astore        4
49: aload         4
51: iconst_1
52: invokevirtual #9
55: astore        5
57: aload         5
59: iconst_0
60: invokevirtual #9
63: astore        6
65: iconst_5
66: anewarray     #119
69: dup
70: iconst_0
71: ldc           #13
73: aastore
74: dup
75: iconst_1
76: ldc           #32
78: aastore
79: dup
80: iconst_2
81: ldc           #10
83: aastore
84: dup
85: iconst_3
86: ldc           #43
88: aastore
89: dup
90: iconst_4
91: ldc           #58
93: aastore
94: astore        7
96: ldc           #10
98: aload         7
100: invokestatic  #123
103: istore        8
105: aload         6
107: ldc           #120
109: ldc           #55
111: aload         7
113: invokevirtual #122
116: astore        9
118: aload_2
119: aload         7
121: invokevirtual #121
124: astore        10
126: invokestatic  #8
129: astore        11
131: aload         11
133: iconst_1
134: invokevirtual #9
137: astore        12
139: ldc           #32
141: aload         12
143: invokestatic  #81
146: astore        13
148: aload         12
150: ldc           #82
152: invokevirtual #83
155: istore        14
157: iconst_5
158: anewarray     #119
161: dup
162: iconst_0
163: ldc           #13
165: aastore
166: dup
167: iconst_1
168: ldc           #32
170: aastore
171: dup
172: iconst_2
173: ldc           #10
175: aastore
176: dup
177: iconst_3
178: ldc           #43
180: aastore
181: dup
182: iconst_4
183: ldc           #58
185: aastore
186: astore        15
188: ldc           #10
190: aload         15
192: invokestatic  #123
195: istore        16
197: ldc           #60
199: aload         15
201: invokestatic  #123
204: istore        17
206: aload         12
208: ldc           #238
210: ldc           #32
212: aload         15
214: invokevirtual #122
217: astore        18
219: aload         18
221: ldc           #12
223: invokevirtual #83
226: istore        19
228: aload         18
230: ldc           #86
232: ldc           #239
234: ldc           #240
236: invokevirtual #11
239: astore        20
241: aload         20
243: iconst_0
244: invokevirtual #9
247: astore        21
249: invokestatic  #8
252: astore        22
254: aload         22
256: iconst_1
257: invokevirtual #9
260: astore        23
262: aload         23
264: iconst_0
265: invokevirtual #9
268: astore        24
270: invokestatic  #118
273: astore        25
275: ldc           #43
277: aload         25
279: invokestatic  #81
282: astore        26
284: aload         25
286: ldc           #43
288: ldc           #12
290: ldc           #32
292: invokevirtual #11
295: astore        27
297: bipush        6
299: anewarray     #119
302: dup
303: iconst_0
304: ldc           #109
306: aastore
307: dup
308: iconst_1
309: ldc           #10
311: aastore
312: dup
313: iconst_2
314: ldc           #13
316: aastore
317: dup
318: iconst_3
319: ldc           #50
321: aastore
322: dup
323: iconst_4
324: ldc           #12
326: aastore
327: dup
328: iconst_5
329: ldc           #120
331: aastore
332: astore        28
334: aload         25
336: aload         28
338: invokevirtual #121
341: astore        29
343: aload         24
345: ldc           #38
347: ldc           #12
349: aload         28
351: invokevirtual #122
354: astore        30
356: iconst_5
357: anewarray     #119
360: dup
361: iconst_0
362: ldc           #13
364: aastore
365: dup
366: iconst_1
367: ldc           #32
369: aastore
370: dup
371: iconst_2
372: ldc           #10
374: aastore
375: dup
376: iconst_3
377: ldc           #43
379: aastore
380: dup
381: iconst_4
382: ldc           #58
384: aastore
385: astore        31
387: ldc           #10
389: aload         31
391: invokestatic  #123
394: istore        32
396: aload         30
398: ldc           #84
400: ldc           #13
402: aload         31
404: invokevirtual #122
407: astore        33
409: aload         21
411: ldc           #145
413: ldc_w         #262
416: aload         31
418: invokevirtual #122
421: astore        34
423: aload         31
425: checkcast     #124
428: invokestatic  #125
431: aload         10
433: ldc_w         #575
436: aload         31
438: invokevirtual #127
441: astore        35
443: aload_1
444: invokestatic  #15
447: aload_2
448: invokestatic  #15
451: aload         4
453: invokestatic  #15
456: aload         5
458: invokestatic  #15
461: aload         6
463: invokestatic  #15
466: aload         7
468: invokestatic  #15
471: new           #16
474: dup
475: invokespecial #17
478: ldc           #18
480: invokevirtual #19
483: iload         8
485: invokevirtual #20
488: ldc           #21
490: invokevirtual #19
493: iconst_1
494: invokevirtual #20
497: ldc           #18
499: invokevirtual #19
502: invokevirtual #22
505: iload         8
507: iconst_1
508: if_icmpne     515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #23
519: aload         9
521: invokestatic  #15
524: aload         10
526: invokestatic  #15
529: aload         11
531: invokestatic  #15
534: aload         12
536: invokestatic  #15
539: new           #16
542: dup
543: invokespecial #17
546: ldc           #18
548: invokevirtual #19
551: aload         13
553: invokevirtual #19
556: ldc           #85
558: invokevirtual #19
561: invokevirtual #22
564: aload         13
566: ldc           #86
568: invokestatic  #68
571: new           #16
574: dup
575: invokespecial #17
578: ldc           #18
580: invokevirtual #19
583: iload         14
585: invokevirtual #20
588: ldc           #21
590: invokevirtual #19
593: iconst_0
594: invokevirtual #20
597: ldc           #18
599: invokevirtual #19
602: invokevirtual #22
605: iload         14
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #23
618: aload         15
620: invokestatic  #15
623: new           #16
626: dup
627: invokespecial #17
630: ldc           #18
632: invokevirtual #19
635: iload         16
637: invokevirtual #20
640: ldc           #21
642: invokevirtual #19
645: iconst_1
646: invokevirtual #20
649: ldc           #18
651: invokevirtual #19
654: invokevirtual #22
657: iload         16
659: iconst_1
660: if_icmpne     667
663: iconst_1
664: goto          668
667: iconst_0
668: invokestatic  #23
671: new           #16
674: dup
675: invokespecial #17
678: ldc           #18
680: invokevirtual #19
683: iload         17
685: invokevirtual #20
688: ldc           #21
690: invokevirtual #19
693: iconst_0
694: invokevirtual #20
697: ldc           #18
699: invokevirtual #19
702: invokevirtual #22
705: iload         17
707: ifne          714
710: iconst_1
711: goto          715
714: iconst_0
715: invokestatic  #23
718: aload         18
720: invokestatic  #15
723: new           #16
726: dup
727: invokespecial #17
730: ldc           #18
732: invokevirtual #19
735: iload         19
737: invokevirtual #20
740: ldc           #21
742: invokevirtual #19
745: iconst_0
746: invokevirtual #20
749: ldc           #18
751: invokevirtual #19
754: invokevirtual #22
757: iload         19
759: ifne          766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #23
770: aload         20
772: invokestatic  #15
775: aload         21
777: invokestatic  #15
780: aload         22
782: invokestatic  #15
785: aload         23
787: invokestatic  #15
790: aload         24
792: invokestatic  #15
795: aload         25
797: invokestatic  #15
800: new           #16
803: dup
804: invokespecial #17
807: ldc           #18
809: invokevirtual #19
812: aload         26
814: invokevirtual #19
817: ldc           #128
819: invokevirtual #19
822: invokevirtual #22
825: aload         26
827: ldc           #43
829: invokestatic  #68
832: aload         27
834: invokestatic  #15
837: aload         28
839: invokestatic  #15
842: aload         29
844: invokestatic  #15
847: aload         30
849: invokestatic  #15
852: aload         31
854: invokestatic  #15
857: new           #16
860: dup
861: invokespecial #17
864: ldc           #18
866: invokevirtual #19
869: iload         32
871: invokevirtual #20
874: ldc           #21
876: invokevirtual #19
879: iconst_1
880: invokevirtual #20
883: ldc           #18
885: invokevirtual #19
888: invokevirtual #22
891: iload         32
893: iconst_1
894: if_icmpne     901
897: iconst_1
898: goto          902
901: iconst_0
902: invokestatic  #23
905: aload         33
907: invokestatic  #15
910: aload         34
912: invokestatic  #15
915: aload         35
917: invokestatic  #15
920: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test291
Start line: 15707
End line: 15772
Method source code: 
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basic();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        java.lang.String str5 = org.jsoup.Jsoup.clean("\n<!--[hi!$=   ]-->", "[:gt(100)]=\"\"", whitelist4);
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str11 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist10);
        boolean boolean13 = whitelist10.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist15 = whitelist10.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist17 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist19 = whitelist17.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist23 = whitelist17.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist27 = whitelist17.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str28 = org.jsoup.Jsoup.clean("hi!", whitelist17);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist32 = whitelist30.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist34 = whitelist32.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist38 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str39 = org.jsoup.Jsoup.clean(":lt(32)", whitelist38);
        org.jsoup.safety.Whitelist whitelist43 = whitelist38.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray50 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist51 = whitelist38.addTags(strArray50);
        org.jsoup.safety.Whitelist whitelist52 = whitelist34.addProtocols(":matchesOwn(null", "hi!", strArray50);
        java.lang.String[] strArray61 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean62 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray61);
        org.jsoup.safety.Whitelist whitelist63 = whitelist52.addProtocols("\n<!--hi!-->", "#document", strArray61);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray61);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray61);
        org.jsoup.safety.Whitelist whitelist66 = whitelist17.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray61);
        org.jsoup.safety.Whitelist whitelist67 = whitelist10.addTags(strArray61);
        org.jsoup.safety.Whitelist whitelist68 = whitelist6.addAttributes("[    ^=hi!]", strArray61);
        org.jsoup.safety.Whitelist whitelist69 = whitelist4.addTags(strArray61);
        org.jsoup.nodes.Attributes attributes71 = whitelist4.getEnforcedAttributes(":containsOwn(:containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!$=   ]" + "'", str11, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + ":lt(32)" + "'", str39, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist66);
        org.junit.Assert.assertNotNull(whitelist67);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(attributes71);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #893
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #313
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc_w         #477
38: ldc_w         #323
41: aload_2
42: invokestatic  #94
45: astore_3
46: invokestatic  #8
49: astore        4
51: invokestatic  #8
54: astore        5
56: ldc           #109
58: ldc           #110
60: aload         5
62: invokestatic  #94
65: astore        6
67: aload         5
69: ldc           #25
71: invokevirtual #83
74: istore        7
76: aload         5
78: iconst_0
79: invokevirtual #9
82: astore        8
84: invokestatic  #8
87: astore        9
89: aload         9
91: iconst_1
92: invokevirtual #9
95: astore        10
97: aload         9
99: ldc           #10
101: ldc           #10
103: ldc           #10
105: invokevirtual #11
108: astore        11
110: aload         9
112: ldc           #12
114: ldc           #13
116: ldc           #12
118: invokevirtual #11
121: astore        12
123: ldc           #12
125: aload         9
127: invokestatic  #81
130: astore        13
132: invokestatic  #8
135: astore        14
137: aload         14
139: iconst_1
140: invokevirtual #9
143: astore        15
145: aload         15
147: iconst_0
148: invokevirtual #9
151: astore        16
153: invokestatic  #118
156: astore        17
158: ldc           #43
160: aload         17
162: invokestatic  #81
165: astore        18
167: aload         17
169: ldc           #43
171: ldc           #12
173: ldc           #32
175: invokevirtual #11
178: astore        19
180: bipush        6
182: anewarray     #119
185: dup
186: iconst_0
187: ldc           #109
189: aastore
190: dup
191: iconst_1
192: ldc           #10
194: aastore
195: dup
196: iconst_2
197: ldc           #13
199: aastore
200: dup
201: iconst_3
202: ldc           #50
204: aastore
205: dup
206: iconst_4
207: ldc           #12
209: aastore
210: dup
211: iconst_5
212: ldc           #120
214: aastore
215: astore        20
217: aload         17
219: aload         20
221: invokevirtual #121
224: astore        21
226: aload         16
228: ldc           #38
230: ldc           #12
232: aload         20
234: invokevirtual #122
237: astore        22
239: iconst_5
240: anewarray     #119
243: dup
244: iconst_0
245: ldc           #13
247: aastore
248: dup
249: iconst_1
250: ldc           #32
252: aastore
253: dup
254: iconst_2
255: ldc           #10
257: aastore
258: dup
259: iconst_3
260: ldc           #43
262: aastore
263: dup
264: iconst_4
265: ldc           #58
267: aastore
268: astore        23
270: ldc           #10
272: aload         23
274: invokestatic  #123
277: istore        24
279: aload         22
281: ldc           #84
283: ldc           #13
285: aload         23
287: invokevirtual #122
290: astore        25
292: aload         23
294: checkcast     #124
297: invokestatic  #125
300: aload         23
302: checkcast     #124
305: invokestatic  #125
308: aload         9
310: ldc           #249
312: aload         23
314: invokevirtual #127
317: astore        26
319: aload         5
321: aload         23
323: invokevirtual #121
326: astore        27
328: aload         4
330: ldc           #173
332: aload         23
334: invokevirtual #127
337: astore        28
339: aload_2
340: aload         23
342: invokevirtual #121
345: astore        29
347: aload_2
348: ldc_w         #591
351: invokevirtual #150
354: astore        30
356: aload_1
357: invokestatic  #15
360: aload_2
361: invokestatic  #15
364: new           #16
367: dup
368: invokespecial #17
371: ldc           #18
373: invokevirtual #19
376: aload_3
377: invokevirtual #19
380: ldc           #67
382: invokevirtual #19
385: invokevirtual #22
388: aload_3
389: ldc           #25
391: invokestatic  #68
394: aload         4
396: invokestatic  #15
399: aload         5
401: invokestatic  #15
404: new           #16
407: dup
408: invokespecial #17
411: ldc           #18
413: invokevirtual #19
416: aload         6
418: invokevirtual #19
421: ldc           #111
423: invokevirtual #19
426: invokevirtual #22
429: aload         6
431: ldc           #65
433: invokestatic  #68
436: new           #16
439: dup
440: invokespecial #17
443: ldc           #18
445: invokevirtual #19
448: iload         7
450: invokevirtual #20
453: ldc           #21
455: invokevirtual #19
458: iconst_0
459: invokevirtual #20
462: ldc           #18
464: invokevirtual #19
467: invokevirtual #22
470: iload         7
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #23
483: aload         8
485: invokestatic  #15
488: aload         9
490: invokestatic  #15
493: aload         10
495: invokestatic  #15
498: aload         11
500: invokestatic  #15
503: aload         12
505: invokestatic  #15
508: new           #16
511: dup
512: invokespecial #17
515: ldc           #18
517: invokevirtual #19
520: aload         13
522: invokevirtual #19
525: ldc           #211
527: invokevirtual #19
530: invokevirtual #22
533: aload         13
535: ldc           #12
537: invokestatic  #68
540: aload         14
542: invokestatic  #15
545: aload         15
547: invokestatic  #15
550: aload         16
552: invokestatic  #15
555: aload         17
557: invokestatic  #15
560: new           #16
563: dup
564: invokespecial #17
567: ldc           #18
569: invokevirtual #19
572: aload         18
574: invokevirtual #19
577: ldc           #128
579: invokevirtual #19
582: invokevirtual #22
585: aload         18
587: ldc           #43
589: invokestatic  #68
592: aload         19
594: invokestatic  #15
597: aload         20
599: invokestatic  #15
602: aload         21
604: invokestatic  #15
607: aload         22
609: invokestatic  #15
612: aload         23
614: invokestatic  #15
617: new           #16
620: dup
621: invokespecial #17
624: ldc           #18
626: invokevirtual #19
629: iload         24
631: invokevirtual #20
634: ldc           #21
636: invokevirtual #19
639: iconst_1
640: invokevirtual #20
643: ldc           #18
645: invokevirtual #19
648: invokevirtual #22
651: iload         24
653: iconst_1
654: if_icmpne     661
657: iconst_1
658: goto          662
661: iconst_0
662: invokestatic  #23
665: aload         25
667: invokestatic  #15
670: aload         26
672: invokestatic  #15
675: aload         27
677: invokestatic  #15
680: aload         28
682: invokestatic  #15
685: aload         29
687: invokestatic  #15
690: aload         30
692: invokestatic  #15
695: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test292
Start line: 15775
End line: 15812
Method source code: 
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist7 = whitelist2.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str11 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist10);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist17 = whitelist15.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str22 = org.jsoup.Jsoup.clean(":lt(32)", whitelist21);
        org.jsoup.safety.Whitelist whitelist26 = whitelist21.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray33 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist34 = whitelist21.addTags(strArray33);
        org.jsoup.safety.Whitelist whitelist35 = whitelist17.addProtocols(":matchesOwn(null", "hi!", strArray33);
        org.jsoup.safety.Whitelist whitelist36 = whitelist10.addAttributes("[^hi!]", strArray33);
        org.jsoup.safety.Whitelist whitelist37 = whitelist2.addTags(strArray33);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!$=   ]" + "'", str11, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist17);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + ":lt(32)" + "'", str22, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist37);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #894
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: invokestatic  #8
55: astore        5
57: ldc           #109
59: ldc           #110
61: aload         5
63: invokestatic  #94
66: astore        6
68: invokestatic  #8
71: astore        7
73: aload         7
75: iconst_1
76: invokevirtual #9
79: astore        8
81: aload         8
83: iconst_0
84: invokevirtual #9
87: astore        9
89: invokestatic  #118
92: astore        10
94: ldc           #43
96: aload         10
98: invokestatic  #81
101: astore        11
103: aload         10
105: ldc           #43
107: ldc           #12
109: ldc           #32
111: invokevirtual #11
114: astore        12
116: bipush        6
118: anewarray     #119
121: dup
122: iconst_0
123: ldc           #109
125: aastore
126: dup
127: iconst_1
128: ldc           #10
130: aastore
131: dup
132: iconst_2
133: ldc           #13
135: aastore
136: dup
137: iconst_3
138: ldc           #50
140: aastore
141: dup
142: iconst_4
143: ldc           #12
145: aastore
146: dup
147: iconst_5
148: ldc           #120
150: aastore
151: astore        13
153: aload         10
155: aload         13
157: invokevirtual #121
160: astore        14
162: aload         9
164: ldc           #38
166: ldc           #12
168: aload         13
170: invokevirtual #122
173: astore        15
175: aload         5
177: ldc           #50
179: aload         13
181: invokevirtual #127
184: astore        16
186: aload_1
187: aload         13
189: invokevirtual #121
192: astore        17
194: aload_1
195: invokestatic  #15
198: new           #16
201: dup
202: invokespecial #17
205: ldc           #18
207: invokevirtual #19
210: aload_2
211: invokevirtual #19
214: ldc           #111
216: invokevirtual #19
219: invokevirtual #22
222: aload_2
223: ldc           #65
225: invokestatic  #68
228: new           #16
231: dup
232: invokespecial #17
235: ldc           #18
237: invokevirtual #19
240: iload_3
241: invokevirtual #20
244: ldc           #21
246: invokevirtual #19
249: iconst_0
250: invokevirtual #20
253: ldc           #18
255: invokevirtual #19
258: invokevirtual #22
261: iload_3
262: ifne          269
265: iconst_1
266: goto          270
269: iconst_0
270: invokestatic  #23
273: aload         4
275: invokestatic  #15
278: aload         5
280: invokestatic  #15
283: new           #16
286: dup
287: invokespecial #17
290: ldc           #18
292: invokevirtual #19
295: aload         6
297: invokevirtual #19
300: ldc           #111
302: invokevirtual #19
305: invokevirtual #22
308: aload         6
310: ldc           #65
312: invokestatic  #68
315: aload         7
317: invokestatic  #15
320: aload         8
322: invokestatic  #15
325: aload         9
327: invokestatic  #15
330: aload         10
332: invokestatic  #15
335: new           #16
338: dup
339: invokespecial #17
342: ldc           #18
344: invokevirtual #19
347: aload         11
349: invokevirtual #19
352: ldc           #128
354: invokevirtual #19
357: invokevirtual #22
360: aload         11
362: ldc           #43
364: invokestatic  #68
367: aload         12
369: invokestatic  #15
372: aload         13
374: invokestatic  #15
377: aload         14
379: invokestatic  #15
382: aload         15
384: invokestatic  #15
387: aload         16
389: invokestatic  #15
392: aload         17
394: invokestatic  #15
397: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test293
Start line: 15815
End line: 15864
Method source code: 
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parse("", ":contains(:matchesown(null");
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes8 = whitelist6.getEnforcedAttributes("#text");
        java.lang.String str9 = org.jsoup.Jsoup.clean(":lt(32)=\"\"=\".\"", whitelist6);
        org.jsoup.nodes.Document document13 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList15 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document13, "hi!");
        org.jsoup.nodes.Element element17 = document13.tagName("hi!");
        org.jsoup.nodes.Element element19 = document13.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings20 = document13.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings21 = outputSettings20.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = outputSettings21.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = outputSettings21.indentAmount((int) (short) 0);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings21.indentAmount((int) (byte) 1);
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings21.prettyPrint(true);
        int int30 = outputSettings29.indentAmount();
        int int31 = outputSettings29.indentAmount();
        java.lang.String str32 = org.jsoup.Jsoup.clean("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", "[[:gt(100)]$=:gt(100)]", whitelist6, outputSettings29);
        org.jsoup.nodes.Document document33 = document2.outputSettings(outputSettings29);
        org.jsoup.parser.Parser parser34 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.nodes.Document document37 = parser34.parseInput("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        java.util.Set<java.lang.String> strSet38 = document37.classNames();
        org.jsoup.nodes.Element element39 = document33.classNames(strSet38);
        java.lang.String str40 = element39.text();
        org.junit.Assert.assertNotNull(document2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(attributes8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ":lt(32)=&quot;&quot;=&quot;.&quot;" + "'", str9, ":lt(32)=&quot;&quot;=&quot;.&quot;");
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(nodeList15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(outputSettings20);
        org.junit.Assert.assertNotNull(outputSettings21);
        org.junit.Assert.assertNotNull(outputSettings23);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[!=hi!]" + "'", str32, "[!=hi!]");
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(parser34);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #895
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc_w         #527
30: invokestatic  #26
33: astore_1
34: invokestatic  #118
37: astore_2
38: aload_2
39: ldc           #51
41: invokevirtual #150
44: astore_3
45: ldc_w         #329
48: aload_2
49: invokestatic  #81
52: astore        4
54: ldc           #25
56: ldc           #12
58: invokestatic  #26
61: astore        5
63: ldc           #12
65: aload         5
67: ldc           #12
69: invokestatic  #27
72: astore        6
74: aload         5
76: ldc           #12
78: invokevirtual #28
81: astore        7
83: aload         5
85: ldc           #25
87: invokevirtual #29
90: astore        8
92: aload         5
94: invokevirtual #30
97: astore        9
99: aload         9
101: invokevirtual #205
104: astore        10
106: aload         10
108: iconst_0
109: invokevirtual #31
112: astore        11
114: aload         10
116: iconst_0
117: invokevirtual #189
120: astore        12
122: aload         10
124: iconst_1
125: invokevirtual #189
128: astore        13
130: aload         10
132: iconst_1
133: invokevirtual #31
136: astore        14
138: aload         14
140: invokevirtual #296
143: istore        15
145: aload         14
147: invokevirtual #296
150: istore        16
152: ldc           #136
154: ldc_w         #308
157: aload_2
158: aload         14
160: invokestatic  #33
163: astore        17
165: aload_1
166: aload         14
168: invokevirtual #175
171: astore        18
173: invokestatic  #419
176: astore        19
178: aload         19
180: ldc           #151
182: ldc           #110
184: invokevirtual #420
187: astore        20
189: aload         20
191: invokevirtual #896
194: astore        21
196: aload         18
198: aload         21
200: invokevirtual #744
203: astore        22
205: aload         22
207: invokevirtual #897
210: astore        23
212: aload_1
213: invokestatic  #15
216: aload_2
217: invokestatic  #15
220: aload_3
221: invokestatic  #15
224: new           #16
227: dup
228: invokespecial #17
231: ldc           #18
233: invokevirtual #19
236: aload         4
238: invokevirtual #19
241: ldc_w         #299
244: invokevirtual #19
247: invokevirtual #22
250: aload         4
252: ldc_w         #300
255: invokestatic  #68
258: aload         5
260: invokestatic  #15
263: aload         6
265: invokestatic  #15
268: aload         7
270: invokestatic  #15
273: aload         8
275: invokestatic  #15
278: aload         9
280: invokestatic  #15
283: aload         10
285: invokestatic  #15
288: aload         11
290: invokestatic  #15
293: aload         12
295: invokestatic  #15
298: aload         13
300: invokestatic  #15
303: aload         14
305: invokestatic  #15
308: new           #16
311: dup
312: invokespecial #17
315: ldc           #18
317: invokevirtual #19
320: iload         15
322: invokevirtual #134
325: ldc           #21
327: invokevirtual #19
330: iconst_1
331: invokevirtual #134
334: ldc           #18
336: invokevirtual #19
339: invokevirtual #22
342: iload         15
344: iconst_1
345: if_icmpne     352
348: iconst_1
349: goto          353
352: iconst_0
353: invokestatic  #23
356: new           #16
359: dup
360: invokespecial #17
363: ldc           #18
365: invokevirtual #19
368: iload         16
370: invokevirtual #134
373: ldc           #21
375: invokevirtual #19
378: iconst_1
379: invokevirtual #134
382: ldc           #18
384: invokevirtual #19
387: invokevirtual #22
390: iload         16
392: iconst_1
393: if_icmpne     400
396: iconst_1
397: goto          401
400: iconst_0
401: invokestatic  #23
404: new           #16
407: dup
408: invokespecial #17
411: ldc           #18
413: invokevirtual #19
416: aload         17
418: invokevirtual #19
421: ldc_w         #523
424: invokevirtual #19
427: invokevirtual #22
430: aload         17
432: ldc           #241
434: invokestatic  #68
437: aload         18
439: invokestatic  #15
442: aload         19
444: invokestatic  #15
447: aload         20
449: invokestatic  #15
452: aload         21
454: invokestatic  #15
457: aload         22
459: invokestatic  #15
462: new           #16
465: dup
466: invokespecial #17
469: ldc           #18
471: invokevirtual #19
474: aload         23
476: invokevirtual #19
479: ldc           #67
481: invokevirtual #19
484: invokevirtual #22
487: aload         23
489: ldc           #25
491: invokestatic  #68
494: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test294
Start line: 15867
End line: 15920
Method source code: 
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        java.lang.String str4 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray16 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean17 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean18 = org.jsoup.helper.StringUtil.in(" hi!", strArray16);
        org.jsoup.safety.Whitelist whitelist19 = whitelist3.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray16);
        boolean boolean21 = whitelist19.isSafeTag("hi!");
        org.jsoup.safety.Whitelist whitelist25 = whitelist19.addEnforcedAttribute(".", "          ", ":lt(32)=\"\nhi!\"");
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist32 = whitelist30.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist34 = whitelist32.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist38 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str39 = org.jsoup.Jsoup.clean(":lt(32)", whitelist38);
        org.jsoup.safety.Whitelist whitelist43 = whitelist38.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray50 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist51 = whitelist38.addTags(strArray50);
        org.jsoup.safety.Whitelist whitelist52 = whitelist34.addProtocols(":matchesOwn(null", "hi!", strArray50);
        java.lang.String[] strArray61 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean62 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray61);
        org.jsoup.safety.Whitelist whitelist63 = whitelist52.addProtocols("\n<!--hi!-->", "#document", strArray61);
        org.jsoup.safety.Whitelist whitelist64 = whitelist27.addProtocols(".\n<!---->", "[:gt(100)]", strArray61);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray61);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray61, "#root");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "." + "'", str4, ".");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(whitelist34);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + ":lt(32)" + "'", str39, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(whitelist52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist64);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #898
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: ldc           #12
115: invokevirtual #83
118: istore        9
120: aload         8
122: ldc           #86
124: ldc           #239
126: ldc           #240
128: invokevirtual #11
131: astore        10
133: aload         10
135: iconst_0
136: invokevirtual #9
139: astore        11
141: invokestatic  #8
144: astore        12
146: aload         12
148: iconst_1
149: invokevirtual #9
152: astore        13
154: aload         13
156: iconst_0
157: invokevirtual #9
160: astore        14
162: invokestatic  #118
165: astore        15
167: ldc           #43
169: aload         15
171: invokestatic  #81
174: astore        16
176: aload         15
178: ldc           #43
180: ldc           #12
182: ldc           #32
184: invokevirtual #11
187: astore        17
189: bipush        6
191: anewarray     #119
194: dup
195: iconst_0
196: ldc           #109
198: aastore
199: dup
200: iconst_1
201: ldc           #10
203: aastore
204: dup
205: iconst_2
206: ldc           #13
208: aastore
209: dup
210: iconst_3
211: ldc           #50
213: aastore
214: dup
215: iconst_4
216: ldc           #12
218: aastore
219: dup
220: iconst_5
221: ldc           #120
223: aastore
224: astore        18
226: aload         15
228: aload         18
230: invokevirtual #121
233: astore        19
235: aload         14
237: ldc           #38
239: ldc           #12
241: aload         18
243: invokevirtual #122
246: astore        20
248: iconst_5
249: anewarray     #119
252: dup
253: iconst_0
254: ldc           #13
256: aastore
257: dup
258: iconst_1
259: ldc           #32
261: aastore
262: dup
263: iconst_2
264: ldc           #10
266: aastore
267: dup
268: iconst_3
269: ldc           #43
271: aastore
272: dup
273: iconst_4
274: ldc           #58
276: aastore
277: astore        21
279: ldc           #10
281: aload         21
283: invokestatic  #123
286: istore        22
288: aload         20
290: ldc           #84
292: ldc           #13
294: aload         21
296: invokevirtual #122
299: astore        23
301: aload         11
303: ldc           #145
305: ldc_w         #262
308: aload         21
310: invokevirtual #122
313: astore        24
315: aload         21
317: checkcast     #124
320: invokestatic  #125
323: aload         21
325: checkcast     #124
328: ldc_w         #331
331: invokestatic  #245
334: aload_1
335: invokestatic  #15
338: aload_2
339: invokestatic  #15
342: new           #16
345: dup
346: invokespecial #17
349: ldc           #18
351: invokevirtual #19
354: aload_3
355: invokevirtual #19
358: ldc           #85
360: invokevirtual #19
363: invokevirtual #22
366: aload_3
367: ldc           #86
369: invokestatic  #68
372: new           #16
375: dup
376: invokespecial #17
379: ldc           #18
381: invokevirtual #19
384: iload         4
386: invokevirtual #20
389: ldc           #21
391: invokevirtual #19
394: iconst_0
395: invokevirtual #20
398: ldc           #18
400: invokevirtual #19
403: invokevirtual #22
406: iload         4
408: ifne          415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #23
419: aload         5
421: invokestatic  #15
424: new           #16
427: dup
428: invokespecial #17
431: ldc           #18
433: invokevirtual #19
436: iload         6
438: invokevirtual #20
441: ldc           #21
443: invokevirtual #19
446: iconst_1
447: invokevirtual #20
450: ldc           #18
452: invokevirtual #19
455: invokevirtual #22
458: iload         6
460: iconst_1
461: if_icmpne     468
464: iconst_1
465: goto          469
468: iconst_0
469: invokestatic  #23
472: new           #16
475: dup
476: invokespecial #17
479: ldc           #18
481: invokevirtual #19
484: iload         7
486: invokevirtual #20
489: ldc           #21
491: invokevirtual #19
494: iconst_0
495: invokevirtual #20
498: ldc           #18
500: invokevirtual #19
503: invokevirtual #22
506: iload         7
508: ifne          515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #23
519: aload         8
521: invokestatic  #15
524: new           #16
527: dup
528: invokespecial #17
531: ldc           #18
533: invokevirtual #19
536: iload         9
538: invokevirtual #20
541: ldc           #21
543: invokevirtual #19
546: iconst_0
547: invokevirtual #20
550: ldc           #18
552: invokevirtual #19
555: invokevirtual #22
558: iload         9
560: ifne          567
563: iconst_1
564: goto          568
567: iconst_0
568: invokestatic  #23
571: aload         10
573: invokestatic  #15
576: aload         11
578: invokestatic  #15
581: aload         12
583: invokestatic  #15
586: aload         13
588: invokestatic  #15
591: aload         14
593: invokestatic  #15
596: aload         15
598: invokestatic  #15
601: new           #16
604: dup
605: invokespecial #17
608: ldc           #18
610: invokevirtual #19
613: aload         16
615: invokevirtual #19
618: ldc           #128
620: invokevirtual #19
623: invokevirtual #22
626: aload         16
628: ldc           #43
630: invokestatic  #68
633: aload         17
635: invokestatic  #15
638: aload         18
640: invokestatic  #15
643: aload         19
645: invokestatic  #15
648: aload         20
650: invokestatic  #15
653: aload         21
655: invokestatic  #15
658: new           #16
661: dup
662: invokespecial #17
665: ldc           #18
667: invokevirtual #19
670: iload         22
672: invokevirtual #20
675: ldc           #21
677: invokevirtual #19
680: iconst_1
681: invokevirtual #20
684: ldc           #18
686: invokevirtual #19
689: invokevirtual #22
692: iload         22
694: iconst_1
695: if_icmpne     702
698: iconst_1
699: goto          703
702: iconst_0
703: invokestatic  #23
706: aload         23
708: invokestatic  #15
711: aload         24
713: invokestatic  #15
716: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test295
Start line: 15923
End line: 16008
Method source code: 
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        org.jsoup.select.Evaluator.AttributeWithValueStarting attributeWithValueStarting2 = new org.jsoup.select.Evaluator.AttributeWithValueStarting("<html>\n <head></head>\n <body></body>\n</html>", "<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = element9.toggleClass("#document");
        org.jsoup.nodes.Element element13 = element11.tagName("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parseBodyFragment("");
        boolean boolean16 = attributeWithValueStarting2.matches(element11, (org.jsoup.nodes.Element) document15);
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes23 = whitelist21.getEnforcedAttributes("#text");
        java.lang.String str24 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist21);
        java.lang.String str25 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist21);
        org.jsoup.select.Evaluator.Class class28 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        org.jsoup.select.Elements elements41 = document32.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element43 = document32.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes44 = document32.attributes();
        org.jsoup.nodes.Element element46 = document32.prepend("[^hi!]");
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList52 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document50, "hi!");
        org.jsoup.nodes.Element element54 = document50.tagName("hi!");
        org.jsoup.nodes.Element element56 = document50.append("");
        org.jsoup.nodes.Element element59 = document50.attr("#document", "#document");
        org.jsoup.nodes.Element element60 = document50.body();
        boolean boolean61 = class28.matches((org.jsoup.nodes.Element) document32, (org.jsoup.nodes.Element) document50);
        org.jsoup.nodes.Attribute attribute64 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean65 = whitelist21.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document32, attribute64);
        org.jsoup.nodes.Document document68 = org.jsoup.parser.Parser.parseBodyFragment(":gt(100)", "");
        org.jsoup.nodes.Document document72 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document72, "hi!");
        org.jsoup.nodes.Element element76 = document72.tagName("hi!");
        org.jsoup.nodes.Element element78 = document72.append("");
        org.jsoup.nodes.Element element80 = document72.toggleClass("#document");
        java.lang.String str81 = document72.title();
        org.jsoup.nodes.Element element82 = document72.head();
        org.jsoup.nodes.Element element83 = document68.appendChild((org.jsoup.nodes.Node) element82);
        boolean boolean84 = attributeWithValueStarting2.matches((org.jsoup.nodes.Element) document32, element82);
        org.jsoup.nodes.Element element86 = element82.removeClass("                                                                                                 ");
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(attributes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[    ^=hi!]" + "'", str25, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(elements41);
        org.junit.Assert.assertNull(element43);
        org.junit.Assert.assertNotNull(attributes44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(attribute64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(document68);
        org.junit.Assert.assertNotNull(document72);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNotNull(element78);
        org.junit.Assert.assertNotNull(element80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertNotNull(element83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(element86);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #899
20: aastore
21: invokevirtual #7
24: pop
25: new           #253
28: dup
29: ldc           #10
31: ldc           #254
33: invokespecial #255
36: astore_1
37: ldc           #25
39: ldc           #12
41: invokestatic  #26
44: astore_2
45: ldc           #12
47: aload_2
48: ldc           #12
50: invokestatic  #27
53: astore_3
54: aload_2
55: invokevirtual #103
58: astore        4
60: aload         4
62: ldc           #13
64: invokevirtual #177
67: astore        5
69: aload         5
71: ldc           #249
73: invokevirtual #256
76: astore        6
78: ldc           #25
80: invokestatic  #193
83: astore        7
85: aload_1
86: aload         5
88: aload         7
90: invokevirtual #257
93: istore        8
95: invokestatic  #118
98: astore        9
100: aload         9
102: ldc           #51
104: invokevirtual #150
107: astore        10
109: ldc           #25
111: ldc           #157
113: aload         9
115: invokestatic  #94
118: astore        11
120: ldc           #158
122: ldc           #159
124: aload         9
126: invokestatic  #94
129: astore        12
131: new           #160
134: dup
135: ldc           #10
137: invokespecial #161
140: astore        13
142: ldc           #25
144: ldc           #12
146: invokestatic  #26
149: astore        14
151: ldc           #12
153: aload         14
155: ldc           #12
157: invokestatic  #27
160: astore        15
162: aload         14
164: ldc           #12
166: invokevirtual #28
169: astore        16
171: aload         14
173: ldc           #25
175: invokevirtual #29
178: astore        17
180: aload         14
182: invokevirtual #30
185: astore        18
187: aload         14
189: iconst_m1
190: invokevirtual #162
193: astore        19
195: aload         14
197: ldc           #10
199: invokevirtual #163
202: astore        20
204: aload         14
206: invokevirtual #164
209: astore        21
211: aload         14
213: ldc           #50
215: invokevirtual #165
218: astore        22
220: ldc           #25
222: ldc           #12
224: invokestatic  #26
227: astore        23
229: ldc           #12
231: aload         23
233: ldc           #12
235: invokestatic  #27
238: astore        24
240: aload         23
242: ldc           #12
244: invokevirtual #28
247: astore        25
249: aload         23
251: ldc           #25
253: invokevirtual #29
256: astore        26
258: aload         23
260: ldc           #13
262: ldc           #13
264: invokevirtual #56
267: astore        27
269: aload         23
271: invokevirtual #166
274: astore        28
276: aload         13
278: aload         14
280: aload         23
282: invokevirtual #167
285: istore        29
287: ldc           #114
289: ldc           #25
291: invokestatic  #168
294: astore        30
296: aload         9
298: ldc           #110
300: aload         14
302: aload         30
304: invokevirtual #169
307: istore        31
309: ldc           #92
311: ldc           #25
313: invokestatic  #52
316: astore        32
318: ldc           #25
320: ldc           #12
322: invokestatic  #26
325: astore        33
327: ldc           #12
329: aload         33
331: ldc           #12
333: invokestatic  #27
336: astore        34
338: aload         33
340: ldc           #12
342: invokevirtual #28
345: astore        35
347: aload         33
349: ldc           #25
351: invokevirtual #29
354: astore        36
356: aload         33
358: ldc           #13
360: invokevirtual #199
363: astore        37
365: aload         33
367: invokevirtual #448
370: astore        38
372: aload         33
374: invokevirtual #200
377: astore        39
379: aload         32
381: aload         39
383: invokevirtual #666
386: astore        40
388: aload_1
389: aload         14
391: aload         39
393: invokevirtual #257
396: istore        41
398: aload         39
400: ldc_w         #900
403: invokevirtual #390
406: astore        42
408: aload_2
409: invokestatic  #15
412: aload_3
413: invokestatic  #15
416: aload         4
418: invokestatic  #15
421: aload         5
423: invokestatic  #15
426: aload         6
428: invokestatic  #15
431: aload         7
433: invokestatic  #15
436: new           #16
439: dup
440: invokespecial #17
443: ldc           #18
445: invokevirtual #19
448: iload         8
450: invokevirtual #20
453: ldc           #21
455: invokevirtual #19
458: iconst_0
459: invokevirtual #20
462: ldc           #18
464: invokevirtual #19
467: invokevirtual #22
470: iload         8
472: ifne          479
475: iconst_1
476: goto          480
479: iconst_0
480: invokestatic  #23
483: aload         9
485: invokestatic  #15
488: aload         10
490: invokestatic  #15
493: new           #16
496: dup
497: invokespecial #17
500: ldc           #18
502: invokevirtual #19
505: aload         11
507: invokevirtual #19
510: ldc           #67
512: invokevirtual #19
515: invokevirtual #22
518: aload         11
520: ldc           #25
522: invokestatic  #68
525: new           #16
528: dup
529: invokespecial #17
532: ldc           #18
534: invokevirtual #19
537: aload         12
539: invokevirtual #19
542: ldc           #172
544: invokevirtual #19
547: invokevirtual #22
550: aload         12
552: ldc           #173
554: invokestatic  #68
557: aload         14
559: invokestatic  #15
562: aload         15
564: invokestatic  #15
567: aload         16
569: invokestatic  #15
572: aload         17
574: invokestatic  #15
577: aload         18
579: invokestatic  #15
582: aload         19
584: invokestatic  #15
587: aload         20
589: invokestatic  #79
592: aload         21
594: invokestatic  #15
597: aload         22
599: invokestatic  #15
602: aload         23
604: invokestatic  #15
607: aload         24
609: invokestatic  #15
612: aload         25
614: invokestatic  #15
617: aload         26
619: invokestatic  #15
622: aload         27
624: invokestatic  #15
627: aload         28
629: invokestatic  #15
632: new           #16
635: dup
636: invokespecial #17
639: ldc           #18
641: invokevirtual #19
644: iload         29
646: invokevirtual #20
649: ldc           #21
651: invokevirtual #19
654: iconst_0
655: invokevirtual #20
658: ldc           #18
660: invokevirtual #19
663: invokevirtual #22
666: iload         29
668: ifne          675
671: iconst_1
672: goto          676
675: iconst_0
676: invokestatic  #23
679: aload         30
681: invokestatic  #15
684: new           #16
687: dup
688: invokespecial #17
691: ldc           #18
693: invokevirtual #19
696: iload         31
698: invokevirtual #20
701: ldc           #21
703: invokevirtual #19
706: iconst_0
707: invokevirtual #20
710: ldc           #18
712: invokevirtual #19
715: invokevirtual #22
718: iload         31
720: ifne          727
723: iconst_1
724: goto          728
727: iconst_0
728: invokestatic  #23
731: aload         32
733: invokestatic  #15
736: aload         33
738: invokestatic  #15
741: aload         34
743: invokestatic  #15
746: aload         35
748: invokestatic  #15
751: aload         36
753: invokestatic  #15
756: aload         37
758: invokestatic  #15
761: new           #16
764: dup
765: invokespecial #17
768: ldc           #18
770: invokevirtual #19
773: aload         38
775: invokevirtual #19
778: ldc           #67
780: invokevirtual #19
783: invokevirtual #22
786: aload         38
788: ldc           #25
790: invokestatic  #68
793: aload         39
795: invokestatic  #15
798: aload         40
800: invokestatic  #15
803: new           #16
806: dup
807: invokespecial #17
810: ldc           #18
812: invokevirtual #19
815: iload         41
817: invokevirtual #20
820: ldc           #21
822: invokevirtual #19
825: iconst_0
826: invokevirtual #20
829: ldc           #18
831: invokevirtual #19
834: invokevirtual #22
837: iload         41
839: ifne          846
842: iconst_1
843: goto          847
846: iconst_0
847: invokestatic  #23
850: aload         42
852: invokestatic  #15
855: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test296
Start line: 16011
End line: 16083
Method source code: 
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan23 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document26 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str27 = document26.ownText();
        org.jsoup.nodes.Node node30 = document26.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList36 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document34, "hi!");
        org.jsoup.nodes.Element element38 = document34.tagName("hi!");
        org.jsoup.nodes.Element element40 = document34.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings41 = document34.outputSettings();
        org.jsoup.select.Elements elements43 = document34.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element45 = document34.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element47 = document34.createElement(" hi!");
        org.jsoup.select.Elements elements49 = document34.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean50 = indexLessThan23.matches((org.jsoup.nodes.Element) document26, (org.jsoup.nodes.Element) document34);
        org.jsoup.nodes.Document document51 = cleaner3.clean(document34);
        org.jsoup.nodes.Document document55 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList57 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document55, "hi!");
        org.jsoup.nodes.Element element58 = document55.empty();
        org.jsoup.nodes.Element element60 = document55.removeClass("hi!");
        org.jsoup.select.Elements elements63 = document55.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        org.jsoup.nodes.Element element64 = document55.empty();
        org.jsoup.nodes.Document document65 = document55.clone();
        org.jsoup.nodes.Document document66 = cleaner3.clean(document65);
        java.lang.String str67 = document66.id();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(nodeList36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(outputSettings41);
        org.junit.Assert.assertNotNull(elements43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(elements49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(nodeList57);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertNotNull(elements63);
        org.junit.Assert.assertNotNull(element64);
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #901
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: new           #48
131: dup
132: iconst_m1
133: invokespecial #49
136: astore        13
138: ldc           #50
140: ldc           #51
142: invokestatic  #52
145: astore        14
147: aload         14
149: invokevirtual #53
152: astore        15
154: aload         14
156: ldc           #54
158: ldc           #55
160: invokevirtual #56
163: astore        16
165: ldc           #25
167: ldc           #12
169: invokestatic  #26
172: astore        17
174: ldc           #12
176: aload         17
178: ldc           #12
180: invokestatic  #27
183: astore        18
185: aload         17
187: ldc           #12
189: invokevirtual #28
192: astore        19
194: aload         17
196: ldc           #25
198: invokevirtual #29
201: astore        20
203: aload         17
205: invokevirtual #30
208: astore        21
210: aload         17
212: ldc           #12
214: invokevirtual #57
217: astore        22
219: aload         17
221: ldc           #58
223: invokevirtual #59
226: astore        23
228: aload         17
230: ldc           #60
232: invokevirtual #61
235: astore        24
237: aload         17
239: ldc           #38
241: invokevirtual #62
244: astore        25
246: aload         13
248: aload         14
250: aload         17
252: invokevirtual #63
255: istore        26
257: aload_3
258: aload         17
260: invokevirtual #47
263: astore        27
265: ldc           #25
267: ldc           #12
269: invokestatic  #26
272: astore        28
274: ldc           #12
276: aload         28
278: ldc           #12
280: invokestatic  #27
283: astore        29
285: aload         28
287: invokevirtual #103
290: astore        30
292: aload         28
294: ldc           #12
296: invokevirtual #59
299: astore        31
301: aload         28
303: ldc           #10
305: ldc           #58
307: invokevirtual #153
310: astore        32
312: aload         28
314: invokevirtual #103
317: astore        33
319: aload         28
321: invokevirtual #154
324: astore        34
326: aload_3
327: aload         34
329: invokevirtual #47
332: astore        35
334: aload         35
336: invokevirtual #73
339: astore        36
341: aload_1
342: invokestatic  #15
345: aload_2
346: invokestatic  #15
349: aload         5
351: invokestatic  #15
354: aload         6
356: invokestatic  #15
359: aload         7
361: invokestatic  #15
364: aload         8
366: invokestatic  #15
369: aload         9
371: invokestatic  #15
374: aload         10
376: invokestatic  #15
379: new           #16
382: dup
383: invokespecial #17
386: ldc           #18
388: invokevirtual #19
391: iload         11
393: invokevirtual #20
396: ldc           #21
398: invokevirtual #19
401: iconst_0
402: invokevirtual #20
405: ldc           #18
407: invokevirtual #19
410: invokevirtual #22
413: iload         11
415: ifne          422
418: iconst_1
419: goto          423
422: iconst_0
423: invokestatic  #23
426: aload         12
428: invokestatic  #15
431: aload         14
433: invokestatic  #15
436: new           #16
439: dup
440: invokespecial #17
443: ldc           #18
445: invokevirtual #19
448: aload         15
450: invokevirtual #19
453: ldc           #67
455: invokevirtual #19
458: invokevirtual #22
461: aload         15
463: ldc           #25
465: invokestatic  #68
468: aload         16
470: invokestatic  #15
473: aload         17
475: invokestatic  #15
478: aload         18
480: invokestatic  #15
483: aload         19
485: invokestatic  #15
488: aload         20
490: invokestatic  #15
493: aload         21
495: invokestatic  #15
498: aload         22
500: invokestatic  #15
503: aload         23
505: invokestatic  #15
508: aload         24
510: invokestatic  #15
513: aload         25
515: invokestatic  #15
518: new           #16
521: dup
522: invokespecial #17
525: ldc           #18
527: invokevirtual #19
530: iload         26
532: invokevirtual #20
535: ldc           #21
537: invokevirtual #19
540: iconst_0
541: invokevirtual #20
544: ldc           #18
546: invokevirtual #19
549: invokevirtual #22
552: iload         26
554: ifne          561
557: iconst_1
558: goto          562
561: iconst_0
562: invokestatic  #23
565: aload         27
567: invokestatic  #15
570: aload         28
572: invokestatic  #15
575: aload         29
577: invokestatic  #15
580: aload         30
582: invokestatic  #15
585: aload         31
587: invokestatic  #15
590: aload         32
592: invokestatic  #15
595: aload         33
597: invokestatic  #15
600: aload         34
602: invokestatic  #15
605: aload         35
607: invokestatic  #15
610: new           #16
613: dup
614: invokespecial #17
617: ldc           #18
619: invokevirtual #19
622: aload         36
624: invokevirtual #19
627: ldc           #67
629: invokevirtual #19
632: invokevirtual #22
635: aload         36
637: ldc           #25
639: invokestatic  #68
642: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test297
Start line: 16086
End line: 16140
Method source code: 
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        org.jsoup.parser.Tag tag1 = org.jsoup.parser.Tag.valueOf("#document");
        boolean boolean2 = tag1.isBlock();
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = element9.toggleClass("#document");
        org.jsoup.select.Elements elements13 = element11.getElementsByAttributeStarting(":lt(32)");
        org.jsoup.select.Elements elements15 = element11.getElementsByClass("[:lt(32)]");
        boolean boolean16 = tag1.equals((java.lang.Object) elements15);
        boolean boolean17 = tag1.preserveWhitespace();
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str22 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist21);
        org.jsoup.safety.Whitelist whitelist24 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist26 = whitelist24.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist28 = whitelist26.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist32 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str33 = org.jsoup.Jsoup.clean(":lt(32)", whitelist32);
        org.jsoup.safety.Whitelist whitelist37 = whitelist32.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray44 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist45 = whitelist32.addTags(strArray44);
        org.jsoup.safety.Whitelist whitelist46 = whitelist28.addProtocols(":matchesOwn(null", "hi!", strArray44);
        org.jsoup.safety.Whitelist whitelist47 = whitelist21.addAttributes("[^hi!]", strArray44);
        org.jsoup.safety.Whitelist whitelist51 = whitelist21.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.nodes.Attributes attributes53 = whitelist21.getEnforcedAttributes("");
        org.jsoup.nodes.Element element54 = new org.jsoup.nodes.Element(tag1, " hi!", attributes53);
        java.util.List<org.jsoup.nodes.TextNode> textNodeList55 = element54.textNodes();
        org.junit.Assert.assertNotNull(tag1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(elements13);
        org.junit.Assert.assertNotNull(elements15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!$=   ]" + "'", str22, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + ":lt(32)" + "'", str33, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist46);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertNotNull(attributes53);
        org.junit.Assert.assertNotNull(textNodeList55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #902
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #13
27: invokestatic  #424
30: astore_1
31: aload_1
32: invokevirtual #425
35: istore_2
36: ldc           #25
38: ldc           #12
40: invokestatic  #26
43: astore_3
44: ldc           #12
46: aload_3
47: ldc           #12
49: invokestatic  #27
52: astore        4
54: aload_3
55: invokevirtual #103
58: astore        5
60: aload         5
62: ldc           #13
64: invokevirtual #177
67: astore        6
69: aload         6
71: ldc           #43
73: invokevirtual #426
76: astore        7
78: aload         6
80: ldc           #58
82: invokevirtual #427
85: astore        8
87: aload_1
88: aload         8
90: invokevirtual #428
93: istore        9
95: aload_1
96: invokevirtual #429
99: istore        10
101: invokestatic  #8
104: astore        11
106: ldc           #109
108: ldc           #110
110: aload         11
112: invokestatic  #94
115: astore        12
117: invokestatic  #8
120: astore        13
122: aload         13
124: iconst_1
125: invokevirtual #9
128: astore        14
130: aload         14
132: iconst_0
133: invokevirtual #9
136: astore        15
138: invokestatic  #118
141: astore        16
143: ldc           #43
145: aload         16
147: invokestatic  #81
150: astore        17
152: aload         16
154: ldc           #43
156: ldc           #12
158: ldc           #32
160: invokevirtual #11
163: astore        18
165: bipush        6
167: anewarray     #119
170: dup
171: iconst_0
172: ldc           #109
174: aastore
175: dup
176: iconst_1
177: ldc           #10
179: aastore
180: dup
181: iconst_2
182: ldc           #13
184: aastore
185: dup
186: iconst_3
187: ldc           #50
189: aastore
190: dup
191: iconst_4
192: ldc           #12
194: aastore
195: dup
196: iconst_5
197: ldc           #120
199: aastore
200: astore        19
202: aload         16
204: aload         19
206: invokevirtual #121
209: astore        20
211: aload         15
213: ldc           #38
215: ldc           #12
217: aload         19
219: invokevirtual #122
222: astore        21
224: aload         11
226: ldc           #50
228: aload         19
230: invokevirtual #127
233: astore        22
235: aload         11
237: ldc           #126
239: ldc           #109
241: ldc           #120
243: invokevirtual #11
246: astore        23
248: aload         11
250: ldc           #25
252: invokevirtual #150
255: astore        24
257: new           #430
260: dup
261: aload_1
262: ldc           #60
264: aload         24
266: invokespecial #431
269: astore        25
271: aload         25
273: invokevirtual #903
276: astore        26
278: aload_1
279: invokestatic  #15
282: new           #16
285: dup
286: invokespecial #17
289: ldc           #18
291: invokevirtual #19
294: iload_2
295: invokevirtual #20
298: ldc           #21
300: invokevirtual #19
303: iconst_0
304: invokevirtual #20
307: ldc           #18
309: invokevirtual #19
312: invokevirtual #22
315: iload_2
316: ifne          323
319: iconst_1
320: goto          324
323: iconst_0
324: invokestatic  #23
327: aload_3
328: invokestatic  #15
331: aload         4
333: invokestatic  #15
336: aload         5
338: invokestatic  #15
341: aload         6
343: invokestatic  #15
346: aload         7
348: invokestatic  #15
351: aload         8
353: invokestatic  #15
356: new           #16
359: dup
360: invokespecial #17
363: ldc           #18
365: invokevirtual #19
368: iload         9
370: invokevirtual #20
373: ldc           #21
375: invokevirtual #19
378: iconst_0
379: invokevirtual #20
382: ldc           #18
384: invokevirtual #19
387: invokevirtual #22
390: iload         9
392: ifne          399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #23
403: new           #16
406: dup
407: invokespecial #17
410: ldc           #18
412: invokevirtual #19
415: iload         10
417: invokevirtual #20
420: ldc           #21
422: invokevirtual #19
425: iconst_0
426: invokevirtual #20
429: ldc           #18
431: invokevirtual #19
434: invokevirtual #22
437: iload         10
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #23
450: aload         11
452: invokestatic  #15
455: new           #16
458: dup
459: invokespecial #17
462: ldc           #18
464: invokevirtual #19
467: aload         12
469: invokevirtual #19
472: ldc           #111
474: invokevirtual #19
477: invokevirtual #22
480: aload         12
482: ldc           #65
484: invokestatic  #68
487: aload         13
489: invokestatic  #15
492: aload         14
494: invokestatic  #15
497: aload         15
499: invokestatic  #15
502: aload         16
504: invokestatic  #15
507: new           #16
510: dup
511: invokespecial #17
514: ldc           #18
516: invokevirtual #19
519: aload         17
521: invokevirtual #19
524: ldc           #128
526: invokevirtual #19
529: invokevirtual #22
532: aload         17
534: ldc           #43
536: invokestatic  #68
539: aload         18
541: invokestatic  #15
544: aload         19
546: invokestatic  #15
549: aload         20
551: invokestatic  #15
554: aload         21
556: invokestatic  #15
559: aload         22
561: invokestatic  #15
564: aload         23
566: invokestatic  #15
569: aload         24
571: invokestatic  #15
574: aload         26
576: invokestatic  #15
579: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test298
Start line: 16143
End line: 16247
Method source code: 
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        java.lang.String str24 = org.jsoup.helper.StringUtil.join((java.util.Collection) objList0, "[hi!=.<html>\n <head></head>\n <body></body>\n</html>]");
        objList0.clear();
        java.lang.String str26 = objList0.toString();
        java.util.ListIterator<java.lang.Object> objItor28 = objList0.listIterator((int) (byte) 0);
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList29 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document33 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList35 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document33, "hi!");
        org.jsoup.nodes.Element element37 = document33.text("");
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList43 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document41, "hi!");
        org.jsoup.nodes.Element element45 = document41.tagName("hi!");
        org.jsoup.nodes.Element element47 = document41.append("");
        java.lang.String str48 = document41.toString();
        java.lang.Object[] objArray49 = new java.lang.Object[] { element37, str48 };
        org.jsoup.helper.Validate.noNullElements(objArray49, "");
        boolean boolean52 = objList29.offerLast((java.lang.Object) objArray49);
        java.util.Spliterator<java.lang.Object> objSpliterator53 = objList29.spliterator();
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        java.lang.String str61 = org.jsoup.helper.StringUtil.join((java.util.Collection) nodeList59, "#document");
        boolean boolean62 = objList29.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList59);
        org.jsoup.safety.Whitelist whitelist63 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist65 = whitelist63.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner66 = new org.jsoup.safety.Cleaner(whitelist65);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining69 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document71 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document75 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList77 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document75, "hi!");
        org.jsoup.nodes.Element element79 = document75.tagName("hi!");
        org.jsoup.nodes.Element element81 = document75.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings82 = document75.outputSettings();
        boolean boolean83 = attributeWithValueContaining69.matches((org.jsoup.nodes.Element) document71, (org.jsoup.nodes.Element) document75);
        org.jsoup.nodes.Document document84 = cleaner66.clean(document75);
        boolean boolean85 = objList29.contains((java.lang.Object) document75);
        java.lang.Object obj86 = objList29.element();
        org.jsoup.nodes.Document document90 = org.jsoup.parser.Parser.parseBodyFragment("hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Element element92 = document90.text("");
        java.util.List<org.jsoup.nodes.Node> nodeList94 = org.jsoup.parser.Parser.parseFragment("", element92, "[^[^hi!]]");
        java.util.stream.Stream<org.jsoup.nodes.Node> nodeStream95 = nodeList94.parallelStream();
        boolean boolean96 = objList29.containsAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList94);
        boolean boolean97 = objList0.retainAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList94);
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>\n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>\n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertNotNull(objItor28);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertNotNull(nodeList35);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(nodeList43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str48, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[<html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSpliterator53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\nhi!" + "'", str61, "\nhi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(whitelist63);
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertNotNull(document75);
        org.junit.Assert.assertNotNull(nodeList77);
        org.junit.Assert.assertNotNull(element79);
        org.junit.Assert.assertNotNull(element81);
        org.junit.Assert.assertNotNull(outputSettings82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(document84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(document90);
        org.junit.Assert.assertNotNull(element92);
        org.junit.Assert.assertNotNull(nodeList94);
        org.junit.Assert.assertNotNull(nodeStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #904
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: aload_1
124: ldc_w         #858
127: invokestatic  #284
130: astore        12
132: aload_1
133: invokevirtual #131
136: aload_1
137: invokevirtual #570
140: astore        13
142: aload_1
143: iconst_0
144: invokevirtual #568
147: astore        14
149: new           #88
152: dup
153: invokespecial #89
156: astore        15
158: ldc           #25
160: ldc           #12
162: invokestatic  #26
165: astore        16
167: ldc           #12
169: aload         16
171: ldc           #12
173: invokestatic  #27
176: astore        17
178: aload         16
180: ldc           #25
182: invokevirtual #64
185: astore        18
187: ldc           #25
189: ldc           #12
191: invokestatic  #26
194: astore        19
196: ldc           #12
198: aload         19
200: ldc           #12
202: invokestatic  #27
205: astore        20
207: aload         19
209: ldc           #12
211: invokevirtual #28
214: astore        21
216: aload         19
218: ldc           #25
220: invokevirtual #29
223: astore        22
225: aload         19
227: invokevirtual #72
230: astore        23
232: iconst_2
233: anewarray     #5
236: dup
237: iconst_0
238: aload         18
240: aastore
241: dup
242: iconst_1
243: aload         23
245: aastore
246: astore        24
248: aload         24
250: ldc           #25
252: invokestatic  #245
255: aload         15
257: aload         24
259: invokevirtual #282
262: istore        25
264: aload         15
266: invokevirtual #283
269: astore        26
271: ldc           #25
273: ldc           #12
275: invokestatic  #26
278: astore        27
280: ldc           #12
282: aload         27
284: ldc           #12
286: invokestatic  #27
289: astore        28
291: aload         28
293: ldc           #13
295: invokestatic  #284
298: astore        29
300: aload         15
302: aload         28
304: invokevirtual #285
307: istore        30
309: invokestatic  #8
312: astore        31
314: aload         31
316: iconst_1
317: invokevirtual #9
320: astore        32
322: new           #40
325: dup
326: aload         32
328: invokespecial #41
331: astore        33
333: new           #42
336: dup
337: ldc           #43
339: ldc           #32
341: invokespecial #44
344: astore        34
346: ldc           #12
348: invokestatic  #45
351: astore        35
353: ldc           #25
355: ldc           #12
357: invokestatic  #26
360: astore        36
362: ldc           #12
364: aload         36
366: ldc           #12
368: invokestatic  #27
371: astore        37
373: aload         36
375: ldc           #12
377: invokevirtual #28
380: astore        38
382: aload         36
384: ldc           #25
386: invokevirtual #29
389: astore        39
391: aload         36
393: invokevirtual #30
396: astore        40
398: aload         34
400: aload         35
402: aload         36
404: invokevirtual #46
407: istore        41
409: aload         33
411: aload         36
413: invokevirtual #47
416: astore        42
418: aload         15
420: aload         36
422: invokevirtual #286
425: istore        43
427: aload         15
429: invokevirtual #438
432: astore        44
434: ldc           #12
436: ldc           #32
438: invokestatic  #52
441: astore        45
443: aload         45
445: ldc           #25
447: invokevirtual #64
450: astore        46
452: ldc           #25
454: aload         46
456: ldc_w         #439
459: invokestatic  #27
462: astore        47
464: aload         47
466: invokeinterface #440,  1
471: astore        48
473: aload         15
475: aload         47
477: invokevirtual #285
480: istore        49
482: aload_1
483: aload         47
485: invokevirtual #584
488: istore        50
490: aload_2
491: invokestatic  #15
494: aload_3
495: invokestatic  #15
498: aload         4
500: invokestatic  #15
503: aload         5
505: invokestatic  #15
508: aload         6
510: invokestatic  #15
513: aload         7
515: invokestatic  #15
518: aload         8
520: invokestatic  #15
523: aload         9
525: invokestatic  #15
528: aload         10
530: invokestatic  #15
533: aload         11
535: invokestatic  #15
538: new           #16
541: dup
542: invokespecial #17
545: ldc           #18
547: invokevirtual #19
550: aload         12
552: invokevirtual #19
555: ldc_w         #905
558: invokevirtual #19
561: invokevirtual #22
564: aload         12
566: ldc           #157
568: invokestatic  #68
571: new           #16
574: dup
575: invokespecial #17
578: ldc           #18
580: invokevirtual #19
583: aload         13
585: invokevirtual #19
588: ldc_w         #906
591: invokevirtual #19
594: invokevirtual #22
597: aload         13
599: ldc           #159
601: invokestatic  #68
604: aload         14
606: invokestatic  #15
609: aload         16
611: invokestatic  #15
614: aload         17
616: invokestatic  #15
619: aload         18
621: invokestatic  #15
624: aload         19
626: invokestatic  #15
629: aload         20
631: invokestatic  #15
634: aload         21
636: invokestatic  #15
639: aload         22
641: invokestatic  #15
644: new           #16
647: dup
648: invokespecial #17
651: ldc           #18
653: invokevirtual #19
656: aload         23
658: invokevirtual #19
661: ldc           #78
663: invokevirtual #19
666: invokevirtual #22
669: aload         23
671: ldc           #10
673: invokestatic  #68
676: aload         24
678: invokestatic  #15
681: aload         24
683: invokestatic  #288
686: ldc_w         #289
689: invokestatic  #290
692: aload         24
694: invokestatic  #291
697: ldc_w         #289
700: invokestatic  #290
703: new           #16
706: dup
707: invokespecial #17
710: ldc           #18
712: invokevirtual #19
715: iload         25
717: invokevirtual #20
720: ldc           #21
722: invokevirtual #19
725: iconst_1
726: invokevirtual #20
729: ldc           #18
731: invokevirtual #19
734: invokevirtual #22
737: iload         25
739: iconst_1
740: if_icmpne     747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #23
751: aload         26
753: invokestatic  #15
756: aload         27
758: invokestatic  #15
761: aload         28
763: invokestatic  #15
766: new           #16
769: dup
770: invokespecial #17
773: ldc           #18
775: invokevirtual #19
778: aload         29
780: invokevirtual #19
783: ldc_w         #292
786: invokevirtual #19
789: invokevirtual #22
792: aload         29
794: ldc           #98
796: invokestatic  #68
799: new           #16
802: dup
803: invokespecial #17
806: ldc           #18
808: invokevirtual #19
811: iload         30
813: invokevirtual #20
816: ldc           #21
818: invokevirtual #19
821: iconst_0
822: invokevirtual #20
825: ldc           #18
827: invokevirtual #19
830: invokevirtual #22
833: iload         30
835: ifne          842
838: iconst_1
839: goto          843
842: iconst_0
843: invokestatic  #23
846: aload         31
848: invokestatic  #15
851: aload         32
853: invokestatic  #15
856: aload         35
858: invokestatic  #15
861: aload         36
863: invokestatic  #15
866: aload         37
868: invokestatic  #15
871: aload         38
873: invokestatic  #15
876: aload         39
878: invokestatic  #15
881: aload         40
883: invokestatic  #15
886: new           #16
889: dup
890: invokespecial #17
893: ldc           #18
895: invokevirtual #19
898: iload         41
900: invokevirtual #20
903: ldc           #21
905: invokevirtual #19
908: iconst_0
909: invokevirtual #20
912: ldc           #18
914: invokevirtual #19
917: invokevirtual #22
920: iload         41
922: ifne          929
925: iconst_1
926: goto          930
929: iconst_0
930: invokestatic  #23
933: aload         42
935: invokestatic  #15
938: new           #16
941: dup
942: invokespecial #17
945: ldc           #18
947: invokevirtual #19
950: iload         43
952: invokevirtual #20
955: ldc           #21
957: invokevirtual #19
960: iconst_0
961: invokevirtual #20
964: ldc           #18
966: invokevirtual #19
969: invokevirtual #22
972: iload         43
974: ifne          981
977: iconst_1
978: goto          982
981: iconst_0
982: invokestatic  #23
985: aload         44
987: invokestatic  #15
990: aload         45
992: invokestatic  #15
995: aload         46
997: invokestatic  #15
1000: aload         47
1002: invokestatic  #15
1005: aload         48
1007: invokestatic  #15
1010: new           #16
1013: dup
1014: invokespecial #17
1017: ldc           #18
1019: invokevirtual #19
1022: iload         49
1024: invokevirtual #20
1027: ldc           #21
1029: invokevirtual #19
1032: iconst_1
1033: invokevirtual #20
1036: ldc           #18
1038: invokevirtual #19
1041: invokevirtual #22
1044: iload         49
1046: iconst_1
1047: if_icmpne     1054
1050: iconst_1
1051: goto          1055
1054: iconst_0
1055: invokestatic  #23
1058: new           #16
1061: dup
1062: invokespecial #17
1065: ldc           #18
1067: invokevirtual #19
1070: iload         50
1072: invokevirtual #20
1075: ldc           #21
1077: invokevirtual #19
1080: iconst_0
1081: invokevirtual #20
1084: ldc           #18
1086: invokevirtual #19
1089: invokevirtual #22
1092: iload         50
1094: ifne          1101
1097: iconst_1
1098: goto          1102
1101: iconst_0
1102: invokestatic  #23
1105: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test299
Start line: 16250
End line: 16263
Method source code: 
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist6 = whitelist4.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist8 = whitelist4.preserveRelativeLinks(false);
        java.lang.String str9 = org.jsoup.Jsoup.clean(".[[:lt(32)*=]*=hi!]", "[.hi!=<!---->]", whitelist4);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ".[[:lt(32)*=]*=hi!]" + "'", str9, ".[[:lt(32)*=]*=hi!]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #907
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: aload_2
42: iconst_0
43: invokevirtual #9
46: astore        4
48: ldc_w         #908
51: ldc_w         #758
54: aload_2
55: invokestatic  #94
58: astore        5
60: aload_1
61: invokestatic  #15
64: aload_2
65: invokestatic  #15
68: aload_3
69: invokestatic  #15
72: aload         4
74: invokestatic  #15
77: new           #16
80: dup
81: invokespecial #17
84: ldc           #18
86: invokevirtual #19
89: aload         5
91: invokevirtual #19
94: ldc_w         #909
97: invokevirtual #19
100: invokevirtual #22
103: aload         5
105: ldc_w         #908
108: invokestatic  #68
111: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test300
Start line: 16266
End line: 16314
Method source code: 
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str7 = org.jsoup.Jsoup.clean(":lt(32)", whitelist6);
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray18 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist19 = whitelist6.addTags(strArray18);
        org.jsoup.safety.Whitelist whitelist20 = whitelist2.addAttributes(":gt(100)", strArray18);
        org.jsoup.safety.Whitelist whitelist25 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist27 = whitelist25.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner28 = new org.jsoup.safety.Cleaner(whitelist27);
        org.jsoup.safety.Whitelist whitelist31 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str32 = org.jsoup.Jsoup.clean(":lt(32)", whitelist31);
        org.jsoup.safety.Whitelist whitelist36 = whitelist31.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray43 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist44 = whitelist31.addTags(strArray43);
        org.jsoup.safety.Whitelist whitelist45 = whitelist27.addAttributes(":gt(100)", strArray43);
        boolean boolean46 = org.jsoup.helper.StringUtil.in("\n<!--hi!-->", strArray43);
        boolean boolean47 = org.jsoup.helper.StringUtil.in("[^[^hi!]]", strArray43);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist48 = whitelist20.addProtocols("", ". <!---->", strArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + ":lt(32)" + "'", str7, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ":lt(32)" + "'", str32, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #910
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #118
47: astore        4
49: ldc           #43
51: aload         4
53: invokestatic  #81
56: astore        5
58: aload         4
60: ldc           #43
62: ldc           #12
64: ldc           #32
66: invokevirtual #11
69: astore        6
71: bipush        6
73: anewarray     #119
76: dup
77: iconst_0
78: ldc           #109
80: aastore
81: dup
82: iconst_1
83: ldc           #10
85: aastore
86: dup
87: iconst_2
88: ldc           #13
90: aastore
91: dup
92: iconst_3
93: ldc           #50
95: aastore
96: dup
97: iconst_4
98: ldc           #12
100: aastore
101: dup
102: iconst_5
103: ldc           #120
105: aastore
106: astore        7
108: aload         4
110: aload         7
112: invokevirtual #121
115: astore        8
117: aload_2
118: ldc           #92
120: aload         7
122: invokevirtual #127
125: astore        9
127: invokestatic  #8
130: astore        10
132: aload         10
134: iconst_1
135: invokevirtual #9
138: astore        11
140: new           #40
143: dup
144: aload         11
146: invokespecial #41
149: astore        12
151: invokestatic  #118
154: astore        13
156: ldc           #43
158: aload         13
160: invokestatic  #81
163: astore        14
165: aload         13
167: ldc           #43
169: ldc           #12
171: ldc           #32
173: invokevirtual #11
176: astore        15
178: bipush        6
180: anewarray     #119
183: dup
184: iconst_0
185: ldc           #109
187: aastore
188: dup
189: iconst_1
190: ldc           #10
192: aastore
193: dup
194: iconst_2
195: ldc           #13
197: aastore
198: dup
199: iconst_3
200: ldc           #50
202: aastore
203: dup
204: iconst_4
205: ldc           #12
207: aastore
208: dup
209: iconst_5
210: ldc           #120
212: aastore
213: astore        16
215: aload         13
217: aload         16
219: invokevirtual #121
222: astore        17
224: aload         11
226: ldc           #92
228: aload         16
230: invokevirtual #127
233: astore        18
235: ldc           #84
237: aload         16
239: invokestatic  #123
242: istore        19
244: ldc_w         #439
247: aload         16
249: invokestatic  #123
252: istore        20
254: aload         9
256: ldc           #25
258: ldc_w         #590
261: aload         16
263: invokevirtual #122
266: astore        21
268: ldc           #141
270: invokestatic  #35
273: goto          278
276: astore        21
278: aload_1
279: invokestatic  #15
282: aload_2
283: invokestatic  #15
286: aload         4
288: invokestatic  #15
291: new           #16
294: dup
295: invokespecial #17
298: ldc           #18
300: invokevirtual #19
303: aload         5
305: invokevirtual #19
308: ldc           #128
310: invokevirtual #19
313: invokevirtual #22
316: aload         5
318: ldc           #43
320: invokestatic  #68
323: aload         6
325: invokestatic  #15
328: aload         7
330: invokestatic  #15
333: aload         8
335: invokestatic  #15
338: aload         9
340: invokestatic  #15
343: aload         10
345: invokestatic  #15
348: aload         11
350: invokestatic  #15
353: aload         13
355: invokestatic  #15
358: new           #16
361: dup
362: invokespecial #17
365: ldc           #18
367: invokevirtual #19
370: aload         14
372: invokevirtual #19
375: ldc           #128
377: invokevirtual #19
380: invokevirtual #22
383: aload         14
385: ldc           #43
387: invokestatic  #68
390: aload         15
392: invokestatic  #15
395: aload         16
397: invokestatic  #15
400: aload         17
402: invokestatic  #15
405: aload         18
407: invokestatic  #15
410: new           #16
413: dup
414: invokespecial #17
417: ldc           #18
419: invokevirtual #19
422: iload         19
424: invokevirtual #20
427: ldc           #21
429: invokevirtual #19
432: iconst_0
433: invokevirtual #20
436: ldc           #18
438: invokevirtual #19
441: invokevirtual #22
444: iload         19
446: ifne          453
449: iconst_1
450: goto          454
453: iconst_0
454: invokestatic  #23
457: new           #16
460: dup
461: invokespecial #17
464: ldc           #18
466: invokevirtual #19
469: iload         20
471: invokevirtual #20
474: ldc           #21
476: invokevirtual #19
479: iconst_0
480: invokevirtual #20
483: ldc           #18
485: invokevirtual #19
488: invokevirtual #22
491: iload         20
493: ifne          500
496: iconst_1
497: goto          501
500: iconst_0
501: invokestatic  #23
504: return
Exception table:
from    to  target type
254   273   276   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test301
Start line: 16317
End line: 16358
Method source code: 
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist3 = whitelist1.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist7 = whitelist1.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist9 = whitelist1.preserveRelativeLinks(false);
        java.lang.String str10 = org.jsoup.Jsoup.clean("[hi!$=<html> <head></head> <body></body> </html>]", whitelist9);
        org.jsoup.safety.Whitelist whitelist11 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist13 = whitelist11.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist15 = whitelist13.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist19 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str20 = org.jsoup.Jsoup.clean(":lt(32)", whitelist19);
        org.jsoup.safety.Whitelist whitelist24 = whitelist19.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray31 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist32 = whitelist19.addTags(strArray31);
        org.jsoup.safety.Whitelist whitelist33 = whitelist15.addProtocols(":matchesOwn(null", "hi!", strArray31);
        java.lang.String[] strArray42 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean43 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray42);
        org.jsoup.safety.Whitelist whitelist44 = whitelist33.addProtocols("\n<!--hi!-->", "#document", strArray42);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray42);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray42);
        org.jsoup.safety.Whitelist whitelist47 = whitelist9.addTags(strArray42);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!$=   ]" + "'", str10, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + ":lt(32)" + "'", str20, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertNotNull(whitelist47);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #911
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_1
36: ldc           #10
38: ldc           #10
40: ldc           #10
42: invokevirtual #11
45: astore_3
46: aload_1
47: iconst_0
48: invokevirtual #9
51: astore        4
53: ldc           #183
55: aload         4
57: invokestatic  #81
60: astore        5
62: invokestatic  #8
65: astore        6
67: aload         6
69: iconst_1
70: invokevirtual #9
73: astore        7
75: aload         7
77: iconst_0
78: invokevirtual #9
81: astore        8
83: invokestatic  #118
86: astore        9
88: ldc           #43
90: aload         9
92: invokestatic  #81
95: astore        10
97: aload         9
99: ldc           #43
101: ldc           #12
103: ldc           #32
105: invokevirtual #11
108: astore        11
110: bipush        6
112: anewarray     #119
115: dup
116: iconst_0
117: ldc           #109
119: aastore
120: dup
121: iconst_1
122: ldc           #10
124: aastore
125: dup
126: iconst_2
127: ldc           #13
129: aastore
130: dup
131: iconst_3
132: ldc           #50
134: aastore
135: dup
136: iconst_4
137: ldc           #12
139: aastore
140: dup
141: iconst_5
142: ldc           #120
144: aastore
145: astore        12
147: aload         9
149: aload         12
151: invokevirtual #121
154: astore        13
156: aload         8
158: ldc           #38
160: ldc           #12
162: aload         12
164: invokevirtual #122
167: astore        14
169: iconst_5
170: anewarray     #119
173: dup
174: iconst_0
175: ldc           #13
177: aastore
178: dup
179: iconst_1
180: ldc           #32
182: aastore
183: dup
184: iconst_2
185: ldc           #10
187: aastore
188: dup
189: iconst_3
190: ldc           #43
192: aastore
193: dup
194: iconst_4
195: ldc           #58
197: aastore
198: astore        15
200: ldc           #10
202: aload         15
204: invokestatic  #123
207: istore        16
209: aload         14
211: ldc           #84
213: ldc           #13
215: aload         15
217: invokevirtual #122
220: astore        17
222: aload         15
224: checkcast     #124
227: invokestatic  #125
230: aload         15
232: checkcast     #124
235: invokestatic  #125
238: aload         4
240: aload         15
242: invokevirtual #121
245: astore        18
247: aload_1
248: invokestatic  #15
251: aload_2
252: invokestatic  #15
255: aload_3
256: invokestatic  #15
259: aload         4
261: invokestatic  #15
264: new           #16
267: dup
268: invokespecial #17
271: ldc           #18
273: invokevirtual #19
276: aload         5
278: invokevirtual #19
281: ldc           #111
283: invokevirtual #19
286: invokevirtual #22
289: aload         5
291: ldc           #65
293: invokestatic  #68
296: aload         6
298: invokestatic  #15
301: aload         7
303: invokestatic  #15
306: aload         8
308: invokestatic  #15
311: aload         9
313: invokestatic  #15
316: new           #16
319: dup
320: invokespecial #17
323: ldc           #18
325: invokevirtual #19
328: aload         10
330: invokevirtual #19
333: ldc           #128
335: invokevirtual #19
338: invokevirtual #22
341: aload         10
343: ldc           #43
345: invokestatic  #68
348: aload         11
350: invokestatic  #15
353: aload         12
355: invokestatic  #15
358: aload         13
360: invokestatic  #15
363: aload         14
365: invokestatic  #15
368: aload         15
370: invokestatic  #15
373: new           #16
376: dup
377: invokespecial #17
380: ldc           #18
382: invokevirtual #19
385: iload         16
387: invokevirtual #20
390: ldc           #21
392: invokevirtual #19
395: iconst_1
396: invokevirtual #20
399: ldc           #18
401: invokevirtual #19
404: invokevirtual #22
407: iload         16
409: iconst_1
410: if_icmpne     417
413: iconst_1
414: goto          418
417: iconst_0
418: invokestatic  #23
421: aload         17
423: invokestatic  #15
426: aload         18
428: invokestatic  #15
431: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test302
Start line: 16361
End line: 16396
Method source code: 
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes3 = whitelist1.getEnforcedAttributes("#text");
        boolean boolean4 = org.jsoup.Jsoup.isValid("[^[^hi!]]", whitelist1);
        java.lang.String[] strArray11 = new java.lang.String[] { "[:lt(32)]", " text=\"hi!\" .<html>\n <head></head>\n <body></body>\n</html>=\"\"", "[hi!=.<html>\n <head></head>\n <body></body>\n</html>]", ".", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "<hi!></hi!>:contains(:gt(100)<html>\n <head></head>\n <body></body>\n</html>" };
        org.jsoup.safety.Whitelist whitelist12 = whitelist1.addTags(strArray11);
        org.jsoup.nodes.Attributes attributes14 = whitelist1.getEnforcedAttributes("<!---->");
        org.jsoup.safety.Whitelist whitelist18 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist20 = whitelist18.preserveRelativeLinks(true);
        java.lang.String str21 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist20);
        boolean boolean23 = whitelist20.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray33 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean34 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray33);
        boolean boolean35 = org.jsoup.helper.StringUtil.in(" hi!", strArray33);
        org.jsoup.safety.Whitelist whitelist36 = whitelist20.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray33);
        org.jsoup.safety.Whitelist whitelist37 = whitelist1.addProtocols("#data", ".[[:lt(32)*=]*=hi!]", strArray33);
        org.jsoup.safety.Whitelist whitelist41 = whitelist37.addEnforcedAttribute("<html>\n <head></head>\n <body>\n </body>\n</html>\n<hi! class=\" #document\">\n <html>\n  <head></head>\n  <body></body>\n </html>\n</hi!>", ":lt(32)=\"\"", "[hi!$=<html> <head></head> <body></body> </html>]");
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(attributes3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(attributes14);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(whitelist20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "." + "'", str21, ".");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist41);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #912
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc_w         #439
39: aload_1
40: invokestatic  #14
43: istore_3
44: bipush        6
46: anewarray     #119
49: dup
50: iconst_0
51: ldc           #58
53: aastore
54: dup
55: iconst_1
56: ldc_w         #830
59: aastore
60: dup
61: iconst_2
62: ldc_w         #858
65: aastore
66: dup
67: iconst_3
68: ldc           #86
70: aastore
71: dup
72: iconst_4
73: ldc           #158
75: aastore
76: dup
77: iconst_5
78: ldc_w         #859
81: aastore
82: astore        4
84: aload_1
85: aload         4
87: invokevirtual #121
90: astore        5
92: aload_1
93: ldc_w         #303
96: invokevirtual #150
99: astore        6
101: invokestatic  #8
104: astore        7
106: aload         7
108: iconst_1
109: invokevirtual #9
112: astore        8
114: ldc           #32
116: aload         8
118: invokestatic  #81
121: astore        9
123: aload         8
125: ldc           #82
127: invokevirtual #83
130: istore        10
132: iconst_5
133: anewarray     #119
136: dup
137: iconst_0
138: ldc           #13
140: aastore
141: dup
142: iconst_1
143: ldc           #32
145: aastore
146: dup
147: iconst_2
148: ldc           #10
150: aastore
151: dup
152: iconst_3
153: ldc           #43
155: aastore
156: dup
157: iconst_4
158: ldc           #58
160: aastore
161: astore        11
163: ldc           #10
165: aload         11
167: invokestatic  #123
170: istore        12
172: ldc           #60
174: aload         11
176: invokestatic  #123
179: istore        13
181: aload         8
183: ldc           #238
185: ldc           #32
187: aload         11
189: invokevirtual #122
192: astore        14
194: aload_1
195: ldc_w         #267
198: ldc_w         #908
201: aload         11
203: invokevirtual #122
206: astore        15
208: aload         15
210: ldc_w         #637
213: ldc           #238
215: ldc           #183
217: invokevirtual #11
220: astore        16
222: aload_1
223: invokestatic  #15
226: aload_2
227: invokestatic  #15
230: new           #16
233: dup
234: invokespecial #17
237: ldc           #18
239: invokevirtual #19
242: iload_3
243: invokevirtual #20
246: ldc           #21
248: invokevirtual #19
251: iconst_1
252: invokevirtual #20
255: ldc           #18
257: invokevirtual #19
260: invokevirtual #22
263: iload_3
264: iconst_1
265: if_icmpne     272
268: iconst_1
269: goto          273
272: iconst_0
273: invokestatic  #23
276: aload         4
278: invokestatic  #15
281: aload         5
283: invokestatic  #15
286: aload         6
288: invokestatic  #15
291: aload         7
293: invokestatic  #15
296: aload         8
298: invokestatic  #15
301: new           #16
304: dup
305: invokespecial #17
308: ldc           #18
310: invokevirtual #19
313: aload         9
315: invokevirtual #19
318: ldc           #85
320: invokevirtual #19
323: invokevirtual #22
326: aload         9
328: ldc           #86
330: invokestatic  #68
333: new           #16
336: dup
337: invokespecial #17
340: ldc           #18
342: invokevirtual #19
345: iload         10
347: invokevirtual #20
350: ldc           #21
352: invokevirtual #19
355: iconst_0
356: invokevirtual #20
359: ldc           #18
361: invokevirtual #19
364: invokevirtual #22
367: iload         10
369: ifne          376
372: iconst_1
373: goto          377
376: iconst_0
377: invokestatic  #23
380: aload         11
382: invokestatic  #15
385: new           #16
388: dup
389: invokespecial #17
392: ldc           #18
394: invokevirtual #19
397: iload         12
399: invokevirtual #20
402: ldc           #21
404: invokevirtual #19
407: iconst_1
408: invokevirtual #20
411: ldc           #18
413: invokevirtual #19
416: invokevirtual #22
419: iload         12
421: iconst_1
422: if_icmpne     429
425: iconst_1
426: goto          430
429: iconst_0
430: invokestatic  #23
433: new           #16
436: dup
437: invokespecial #17
440: ldc           #18
442: invokevirtual #19
445: iload         13
447: invokevirtual #20
450: ldc           #21
452: invokevirtual #19
455: iconst_0
456: invokevirtual #20
459: ldc           #18
461: invokevirtual #19
464: invokevirtual #22
467: iload         13
469: ifne          476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #23
480: aload         14
482: invokestatic  #15
485: aload         15
487: invokestatic  #15
490: aload         16
492: invokestatic  #15
495: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test303
Start line: 16399
End line: 16446
Method source code: 
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        java.lang.String str32 = document25.toString();
        java.lang.String str33 = document25.id();
        org.jsoup.nodes.Node node34 = document25.parent();
        org.jsoup.nodes.Document document35 = cleaner3.clean(document25);
        java.lang.String str36 = document25.title();
        org.jsoup.nodes.Element element38 = document25.removeClass(":eq(1)");
        org.jsoup.parser.Tag tag39 = element38.tag();
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str32, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(tag39);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #913
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #25
130: ldc           #12
132: invokestatic  #26
135: astore        13
137: ldc           #12
139: aload         13
141: ldc           #12
143: invokestatic  #27
146: astore        14
148: aload         13
150: ldc           #12
152: invokevirtual #28
155: astore        15
157: aload         13
159: ldc           #25
161: invokevirtual #29
164: astore        16
166: aload         13
168: invokevirtual #72
171: astore        17
173: aload         13
175: invokevirtual #73
178: astore        18
180: aload         13
182: invokevirtual #74
185: astore        19
187: aload_3
188: aload         13
190: invokevirtual #47
193: astore        20
195: aload         13
197: invokevirtual #448
200: astore        21
202: aload         13
204: ldc_w         #279
207: invokevirtual #59
210: astore        22
212: aload         22
214: invokevirtual #650
217: astore        23
219: aload_1
220: invokestatic  #15
223: aload_2
224: invokestatic  #15
227: aload         5
229: invokestatic  #15
232: aload         6
234: invokestatic  #15
237: aload         7
239: invokestatic  #15
242: aload         8
244: invokestatic  #15
247: aload         9
249: invokestatic  #15
252: aload         10
254: invokestatic  #15
257: new           #16
260: dup
261: invokespecial #17
264: ldc           #18
266: invokevirtual #19
269: iload         11
271: invokevirtual #20
274: ldc           #21
276: invokevirtual #19
279: iconst_0
280: invokevirtual #20
283: ldc           #18
285: invokevirtual #19
288: invokevirtual #22
291: iload         11
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #23
304: aload         12
306: invokestatic  #15
309: aload         13
311: invokestatic  #15
314: aload         14
316: invokestatic  #15
319: aload         15
321: invokestatic  #15
324: aload         16
326: invokestatic  #15
329: new           #16
332: dup
333: invokespecial #17
336: ldc           #18
338: invokevirtual #19
341: aload         17
343: invokevirtual #19
346: ldc           #78
348: invokevirtual #19
351: invokevirtual #22
354: aload         17
356: ldc           #10
358: invokestatic  #68
361: new           #16
364: dup
365: invokespecial #17
368: ldc           #18
370: invokevirtual #19
373: aload         18
375: invokevirtual #19
378: ldc           #67
380: invokevirtual #19
383: invokevirtual #22
386: aload         18
388: ldc           #25
390: invokestatic  #68
393: aload         19
395: invokestatic  #79
398: aload         20
400: invokestatic  #15
403: new           #16
406: dup
407: invokespecial #17
410: ldc           #18
412: invokevirtual #19
415: aload         21
417: invokevirtual #19
420: ldc           #67
422: invokevirtual #19
425: invokevirtual #22
428: aload         21
430: ldc           #25
432: invokestatic  #68
435: aload         22
437: invokestatic  #15
440: aload         23
442: invokestatic  #15
445: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test304
Start line: 16449
End line: 16471
Method source code: 
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj3 = objList0.peekFirst();
        objList0.addFirst((java.lang.Object) ":gt(100)");
        org.jsoup.safety.Whitelist whitelist8 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist10 = whitelist8.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist14 = whitelist8.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist18 = whitelist8.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str19 = org.jsoup.Jsoup.clean("#document", "<html>\n <head></head>\n <body></body>\n</html>", whitelist18);
        objList0.addLast((java.lang.Object) whitelist18);
        java.lang.Object obj21 = objList0.removeLast();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(whitelist8);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#document" + "'", str19, "#document");
        org.junit.Assert.assertNotNull(obj21);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #914
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: aload_1
41: invokevirtual #91
44: astore_3
45: aload_1
46: ldc           #92
48: invokevirtual #93
51: invokestatic  #8
54: astore        4
56: aload         4
58: iconst_1
59: invokevirtual #9
62: astore        5
64: aload         4
66: ldc           #10
68: ldc           #10
70: ldc           #10
72: invokevirtual #11
75: astore        6
77: aload         4
79: ldc           #12
81: ldc           #13
83: ldc           #12
85: invokevirtual #11
88: astore        7
90: ldc           #13
92: ldc           #10
94: aload         7
96: invokestatic  #94
99: astore        8
101: aload_1
102: aload         7
104: invokevirtual #95
107: aload_1
108: invokevirtual #701
111: astore        9
113: new           #16
116: dup
117: invokespecial #17
120: ldc           #18
122: invokevirtual #19
125: iload_2
126: invokevirtual #20
129: ldc           #21
131: invokevirtual #19
134: iconst_0
135: invokevirtual #20
138: ldc           #18
140: invokevirtual #19
143: invokevirtual #22
146: iload_2
147: ifne          154
150: iconst_1
151: goto          155
154: iconst_0
155: invokestatic  #23
158: aload_3
159: invokestatic  #79
162: aload         4
164: invokestatic  #15
167: aload         5
169: invokestatic  #15
172: aload         6
174: invokestatic  #15
177: aload         7
179: invokestatic  #15
182: new           #16
185: dup
186: invokespecial #17
189: ldc           #18
191: invokevirtual #19
194: aload         8
196: invokevirtual #19
199: ldc           #107
201: invokevirtual #19
204: invokevirtual #22
207: aload         8
209: ldc           #13
211: invokestatic  #68
214: aload         9
216: invokestatic  #15
219: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test305
Start line: 16474
End line: 16489
Method source code: 
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes4 = whitelist2.getEnforcedAttributes("#text");
        boolean boolean5 = org.jsoup.Jsoup.isValid("[^[^hi!]]", whitelist2);
        java.lang.String[] strArray12 = new java.lang.String[] { "[:lt(32)]", " text=\"hi!\" .<html>\n <head></head>\n <body></body>\n</html>=\"\"", "[hi!=.<html>\n <head></head>\n <body></body>\n</html>]", ".", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "<hi!></hi!>:contains(:gt(100)<html>\n <head></head>\n <body></body>\n</html>" };
        org.jsoup.safety.Whitelist whitelist13 = whitelist2.addTags(strArray12);
        boolean boolean14 = org.jsoup.Jsoup.isValid(".", whitelist13);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(attributes4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #915
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc_w         #439
39: aload_1
40: invokestatic  #14
43: istore_3
44: bipush        6
46: anewarray     #119
49: dup
50: iconst_0
51: ldc           #58
53: aastore
54: dup
55: iconst_1
56: ldc_w         #830
59: aastore
60: dup
61: iconst_2
62: ldc_w         #858
65: aastore
66: dup
67: iconst_3
68: ldc           #86
70: aastore
71: dup
72: iconst_4
73: ldc           #158
75: aastore
76: dup
77: iconst_5
78: ldc_w         #859
81: aastore
82: astore        4
84: aload_1
85: aload         4
87: invokevirtual #121
90: astore        5
92: ldc           #86
94: aload         5
96: invokestatic  #14
99: istore        6
101: aload_1
102: invokestatic  #15
105: aload_2
106: invokestatic  #15
109: new           #16
112: dup
113: invokespecial #17
116: ldc           #18
118: invokevirtual #19
121: iload_3
122: invokevirtual #20
125: ldc           #21
127: invokevirtual #19
130: iconst_1
131: invokevirtual #20
134: ldc           #18
136: invokevirtual #19
139: invokevirtual #22
142: iload_3
143: iconst_1
144: if_icmpne     151
147: iconst_1
148: goto          152
151: iconst_0
152: invokestatic  #23
155: aload         4
157: invokestatic  #15
160: aload         5
162: invokestatic  #15
165: new           #16
168: dup
169: invokespecial #17
172: ldc           #18
174: invokevirtual #19
177: iload         6
179: invokevirtual #20
182: ldc           #21
184: invokevirtual #19
187: iconst_1
188: invokevirtual #20
191: ldc           #18
193: invokevirtual #19
196: invokevirtual #22
199: iload         6
201: iconst_1
202: if_icmpne     209
205: iconst_1
206: goto          210
209: iconst_0
210: invokestatic  #23
213: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test306
Start line: 16492
End line: 16594
Method source code: 
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes3 = whitelist1.getEnforcedAttributes("#text");
        boolean boolean4 = org.jsoup.Jsoup.isValid("[^[^hi!]]", whitelist1);
        java.lang.String[] strArray11 = new java.lang.String[] { "[:lt(32)]", " text=\"hi!\" .<html>\n <head></head>\n <body></body>\n</html>=\"\"", "[hi!=.<html>\n <head></head>\n <body></body>\n</html>]", ".", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "<hi!></hi!>:contains(:gt(100)<html>\n <head></head>\n <body></body>\n</html>" };
        org.jsoup.safety.Whitelist whitelist12 = whitelist1.addTags(strArray11);
        org.jsoup.safety.Whitelist whitelist14 = whitelist12.preserveRelativeLinks(false);
        org.jsoup.nodes.Attributes attributes16 = whitelist14.getEnforcedAttributes(".<html>\n <head></head>\n <body></body>\n</html>");
        attributes16.remove("[[:lt(32)*=]*=hi!]");
        org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList24 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document22, "hi!");
        org.jsoup.nodes.Element element26 = document22.tagName("hi!");
        org.jsoup.nodes.Element element28 = document22.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = document22.outputSettings();
        org.jsoup.select.Elements elements31 = document22.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element33 = document22.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes34 = document22.attributes();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = attributes34.dataset();
        org.jsoup.nodes.Document document39 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList41 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document39, "hi!");
        org.jsoup.nodes.Element element43 = document39.tagName("hi!");
        org.jsoup.nodes.Element element45 = document39.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings46 = document39.outputSettings();
        org.jsoup.select.Elements elements48 = document39.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element50 = document39.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes51 = document39.attributes();
        attributes34.addAll(attributes51);
        org.jsoup.nodes.Attribute attribute55 = new org.jsoup.nodes.Attribute(":lt(32)", "");
        attributes51.put(attribute55);
        org.jsoup.nodes.Document document58 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Element element60 = document58.appendElement("#document");
        org.jsoup.nodes.Element element61 = element60.lastElementSibling();
        org.jsoup.nodes.Element element62 = element61.lastElementSibling();
        boolean boolean63 = attribute55.equals((java.lang.Object) element62);
        java.lang.String str65 = attribute55.setValue("\nhi!");
        java.lang.String str66 = attribute55.toString();
        java.lang.String str68 = attribute55.setValue("[.]");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList69 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document73 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList75 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document73, "hi!");
        org.jsoup.nodes.Element element77 = document73.text("");
        org.jsoup.nodes.Document document81 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList83 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document81, "hi!");
        org.jsoup.nodes.Element element85 = document81.tagName("hi!");
        org.jsoup.nodes.Element element87 = document81.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings88 = document81.outputSettings();
        org.jsoup.nodes.Document document89 = document73.outputSettings(outputSettings88);
        org.jsoup.nodes.Document document90 = document73.normalise();
        objList69.addLast((java.lang.Object) document90);
        org.jsoup.nodes.Element element93 = document90.prepend("[^hi!]");
        boolean boolean94 = attribute55.equals((java.lang.Object) element93);
        java.lang.String str95 = attribute55.html();
        java.lang.String str96 = attribute55.getKey();
        attributes16.put(attribute55);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertNotNull(attributes3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(attributes16);
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(elements31);
        org.junit.Assert.assertNull(element33);
        org.junit.Assert.assertNotNull(attributes34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(outputSettings46);
        org.junit.Assert.assertNotNull(elements48);
        org.junit.Assert.assertNull(element50);
        org.junit.Assert.assertNotNull(attributes51);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ":lt(32)=\"\nhi!\"" + "'", str66, ":lt(32)=\"\nhi!\"");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\nhi!" + "'", str68, "\nhi!");
        org.junit.Assert.assertNotNull(document73);
        org.junit.Assert.assertNotNull(nodeList75);
        org.junit.Assert.assertNotNull(element77);
        org.junit.Assert.assertNotNull(document81);
        org.junit.Assert.assertNotNull(nodeList83);
        org.junit.Assert.assertNotNull(element85);
        org.junit.Assert.assertNotNull(element87);
        org.junit.Assert.assertNotNull(outputSettings88);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertNotNull(document90);
        org.junit.Assert.assertNotNull(element93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ":lt(32)=\"[.]\"" + "'", str95, ":lt(32)=\"[.]\"");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ":lt(32)" + "'", str96, ":lt(32)");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #916
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc_w         #439
39: aload_1
40: invokestatic  #14
43: istore_3
44: bipush        6
46: anewarray     #119
49: dup
50: iconst_0
51: ldc           #58
53: aastore
54: dup
55: iconst_1
56: ldc_w         #830
59: aastore
60: dup
61: iconst_2
62: ldc_w         #858
65: aastore
66: dup
67: iconst_3
68: ldc           #86
70: aastore
71: dup
72: iconst_4
73: ldc           #158
75: aastore
76: dup
77: iconst_5
78: ldc_w         #859
81: aastore
82: astore        4
84: aload_1
85: aload         4
87: invokevirtual #121
90: astore        5
92: aload         5
94: iconst_0
95: invokevirtual #9
98: astore        6
100: aload         6
102: ldc           #32
104: invokevirtual #150
107: astore        7
109: aload         7
111: ldc_w         #518
114: invokevirtual #340
117: ldc           #25
119: ldc           #12
121: invokestatic  #26
124: astore        8
126: ldc           #12
128: aload         8
130: ldc           #12
132: invokestatic  #27
135: astore        9
137: aload         8
139: ldc           #12
141: invokevirtual #28
144: astore        10
146: aload         8
148: ldc           #25
150: invokevirtual #29
153: astore        11
155: aload         8
157: invokevirtual #30
160: astore        12
162: aload         8
164: iconst_m1
165: invokevirtual #162
168: astore        13
170: aload         8
172: ldc           #10
174: invokevirtual #163
177: astore        14
179: aload         8
181: invokevirtual #164
184: astore        15
186: aload         15
188: invokevirtual #471
191: astore        16
193: ldc           #25
195: ldc           #12
197: invokestatic  #26
200: astore        17
202: ldc           #12
204: aload         17
206: ldc           #12
208: invokestatic  #27
211: astore        18
213: aload         17
215: ldc           #12
217: invokevirtual #28
220: astore        19
222: aload         17
224: ldc           #25
226: invokevirtual #29
229: astore        20
231: aload         17
233: invokevirtual #30
236: astore        21
238: aload         17
240: iconst_m1
241: invokevirtual #162
244: astore        22
246: aload         17
248: ldc           #10
250: invokevirtual #163
253: astore        23
255: aload         17
257: invokevirtual #164
260: astore        24
262: aload         15
264: aload         24
266: invokevirtual #472
269: new           #263
272: dup
273: ldc           #43
275: ldc           #25
277: invokespecial #264
280: astore        25
282: aload         24
284: aload         25
286: invokevirtual #473
289: ldc           #12
291: invokestatic  #45
294: astore        26
296: aload         26
298: ldc           #13
300: invokevirtual #474
303: astore        27
305: aload         27
307: invokevirtual #475
310: astore        28
312: aload         28
314: invokevirtual #475
317: astore        29
319: aload         25
321: aload         29
323: invokevirtual #476
326: istore        30
328: aload         25
330: ldc           #98
332: invokevirtual #514
335: astore        31
337: aload         25
339: invokevirtual #515
342: astore        32
344: aload         25
346: ldc_w         #421
349: invokevirtual #514
352: astore        33
354: new           #88
357: dup
358: invokespecial #89
361: astore        34
363: ldc           #25
365: ldc           #12
367: invokestatic  #26
370: astore        35
372: ldc           #12
374: aload         35
376: ldc           #12
378: invokestatic  #27
381: astore        36
383: aload         35
385: ldc           #25
387: invokevirtual #64
390: astore        37
392: ldc           #25
394: ldc           #12
396: invokestatic  #26
399: astore        38
401: ldc           #12
403: aload         38
405: ldc           #12
407: invokestatic  #27
410: astore        39
412: aload         38
414: ldc           #12
416: invokevirtual #28
419: astore        40
421: aload         38
423: ldc           #25
425: invokevirtual #29
428: astore        41
430: aload         38
432: invokevirtual #30
435: astore        42
437: aload         35
439: aload         42
441: invokevirtual #175
444: astore        43
446: aload         35
448: invokevirtual #102
451: astore        44
453: aload         34
455: aload         44
457: invokevirtual #95
460: aload         44
462: ldc           #50
464: invokevirtual #165
467: astore        45
469: aload         25
471: aload         45
473: invokevirtual #476
476: istore        46
478: aload         25
480: invokevirtual #321
483: astore        47
485: aload         25
487: invokevirtual #210
490: astore        48
492: aload         7
494: aload         25
496: invokevirtual #473
499: aload_1
500: invokestatic  #15
503: aload_2
504: invokestatic  #15
507: new           #16
510: dup
511: invokespecial #17
514: ldc           #18
516: invokevirtual #19
519: iload_3
520: invokevirtual #20
523: ldc           #21
525: invokevirtual #19
528: iconst_1
529: invokevirtual #20
532: ldc           #18
534: invokevirtual #19
537: invokevirtual #22
540: iload_3
541: iconst_1
542: if_icmpne     549
545: iconst_1
546: goto          550
549: iconst_0
550: invokestatic  #23
553: aload         4
555: invokestatic  #15
558: aload         5
560: invokestatic  #15
563: aload         6
565: invokestatic  #15
568: aload         7
570: invokestatic  #15
573: aload         8
575: invokestatic  #15
578: aload         9
580: invokestatic  #15
583: aload         10
585: invokestatic  #15
588: aload         11
590: invokestatic  #15
593: aload         12
595: invokestatic  #15
598: aload         13
600: invokestatic  #15
603: aload         14
605: invokestatic  #79
608: aload         15
610: invokestatic  #15
613: aload         16
615: invokestatic  #15
618: aload         17
620: invokestatic  #15
623: aload         18
625: invokestatic  #15
628: aload         19
630: invokestatic  #15
633: aload         20
635: invokestatic  #15
638: aload         21
640: invokestatic  #15
643: aload         22
645: invokestatic  #15
648: aload         23
650: invokestatic  #79
653: aload         24
655: invokestatic  #15
658: aload         26
660: invokestatic  #15
663: aload         27
665: invokestatic  #15
668: aload         28
670: invokestatic  #15
673: aload         29
675: invokestatic  #15
678: new           #16
681: dup
682: invokespecial #17
685: ldc           #18
687: invokevirtual #19
690: iload         30
692: invokevirtual #20
695: ldc           #21
697: invokevirtual #19
700: iconst_0
701: invokevirtual #20
704: ldc           #18
706: invokevirtual #19
709: invokevirtual #22
712: iload         30
714: ifne          721
717: iconst_1
718: goto          722
721: iconst_0
722: invokestatic  #23
725: new           #16
728: dup
729: invokespecial #17
732: ldc           #18
734: invokevirtual #19
737: aload         31
739: invokevirtual #19
742: ldc           #67
744: invokevirtual #19
747: invokevirtual #22
750: aload         31
752: ldc           #25
754: invokestatic  #68
757: new           #16
760: dup
761: invokespecial #17
764: ldc           #18
766: invokevirtual #19
769: aload         32
771: invokevirtual #19
774: ldc_w         #516
777: invokevirtual #19
780: invokevirtual #22
783: aload         32
785: ldc           #240
787: invokestatic  #68
790: new           #16
793: dup
794: invokespecial #17
797: ldc           #18
799: invokevirtual #19
802: aload         33
804: invokevirtual #19
807: ldc_w         #292
810: invokevirtual #19
813: invokevirtual #22
816: aload         33
818: ldc           #98
820: invokestatic  #68
823: aload         35
825: invokestatic  #15
828: aload         36
830: invokestatic  #15
833: aload         37
835: invokestatic  #15
838: aload         38
840: invokestatic  #15
843: aload         39
845: invokestatic  #15
848: aload         40
850: invokestatic  #15
853: aload         41
855: invokestatic  #15
858: aload         42
860: invokestatic  #15
863: aload         43
865: invokestatic  #15
868: aload         44
870: invokestatic  #15
873: aload         45
875: invokestatic  #15
878: new           #16
881: dup
882: invokespecial #17
885: ldc           #18
887: invokevirtual #19
890: iload         46
892: invokevirtual #20
895: ldc           #21
897: invokevirtual #19
900: iconst_0
901: invokevirtual #20
904: ldc           #18
906: invokevirtual #19
909: invokevirtual #22
912: iload         46
914: ifne          921
917: iconst_1
918: goto          922
921: iconst_0
922: invokestatic  #23
925: new           #16
928: dup
929: invokespecial #17
932: ldc           #18
934: invokevirtual #19
937: aload         47
939: invokevirtual #19
942: ldc_w         #917
945: invokevirtual #19
948: invokevirtual #22
951: aload         47
953: ldc           #230
955: invokestatic  #68
958: new           #16
961: dup
962: invokespecial #17
965: ldc           #18
967: invokevirtual #19
970: aload         48
972: invokevirtual #19
975: ldc           #128
977: invokevirtual #19
980: invokevirtual #22
983: aload         48
985: ldc           #43
987: invokestatic  #68
990: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test307
Start line: 16597
End line: 16612
Method source code: 
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean(":lt(32)", whitelist1);
        org.jsoup.safety.Whitelist whitelist6 = whitelist1.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray13 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist14 = whitelist1.addTags(strArray13);
        org.jsoup.safety.Whitelist whitelist16 = whitelist1.preserveRelativeLinks(true);
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":lt(32)" + "'", str2, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(whitelist14);
        org.junit.Assert.assertNotNull(whitelist16);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #918
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #43
39: ldc           #12
41: ldc           #32
43: invokevirtual #11
46: astore_3
47: bipush        6
49: anewarray     #119
52: dup
53: iconst_0
54: ldc           #109
56: aastore
57: dup
58: iconst_1
59: ldc           #10
61: aastore
62: dup
63: iconst_2
64: ldc           #13
66: aastore
67: dup
68: iconst_3
69: ldc           #50
71: aastore
72: dup
73: iconst_4
74: ldc           #12
76: aastore
77: dup
78: iconst_5
79: ldc           #120
81: aastore
82: astore        4
84: aload_1
85: aload         4
87: invokevirtual #121
90: astore        5
92: aload_1
93: iconst_1
94: invokevirtual #9
97: astore        6
99: aload_1
100: invokestatic  #15
103: new           #16
106: dup
107: invokespecial #17
110: ldc           #18
112: invokevirtual #19
115: aload_2
116: invokevirtual #19
119: ldc           #128
121: invokevirtual #19
124: invokevirtual #22
127: aload_2
128: ldc           #43
130: invokestatic  #68
133: aload_3
134: invokestatic  #15
137: aload         4
139: invokestatic  #15
142: aload         5
144: invokestatic  #15
147: aload         6
149: invokestatic  #15
152: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test308
Start line: 16615
End line: 16674
Method source code: 
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        org.jsoup.nodes.Element element9 = document3.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings10 = document3.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings12 = outputSettings10.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings14 = outputSettings10.prettyPrint(true);
        org.jsoup.safety.Whitelist whitelist19 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str20 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist19);
        boolean boolean22 = whitelist19.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist24 = whitelist19.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist28 = whitelist24.addEnforcedAttribute("[^hi!]", "<html>\n <head></head>\n <body>   \n </body>\n</html>", "#comment");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings40 = outputSettings39.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = outputSettings40.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode43 = org.jsoup.nodes.Entities.EscapeMode.base;
        org.jsoup.nodes.Document.OutputSettings outputSettings44 = outputSettings42.escapeMode(escapeMode43);
        org.jsoup.nodes.Entities.EscapeMode escapeMode45 = org.jsoup.nodes.Entities.EscapeMode.extended;
        org.jsoup.nodes.Document.OutputSettings outputSettings46 = outputSettings44.escapeMode(escapeMode45);
        boolean boolean47 = outputSettings44.prettyPrint();
        java.lang.String str48 = org.jsoup.Jsoup.clean(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", "[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]", whitelist24, outputSettings44);
        java.nio.charset.Charset charset49 = outputSettings44.charset();
        org.jsoup.nodes.Document.OutputSettings outputSettings50 = outputSettings10.charset(charset49);
        org.jsoup.nodes.Document.OutputSettings outputSettings52 = outputSettings50.prettyPrint(false);
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(outputSettings10);
        org.junit.Assert.assertNotNull(outputSettings12);
        org.junit.Assert.assertNotNull(outputSettings14);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!$=   ]" + "'", str20, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(outputSettings40);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + escapeMode43 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode43.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings44);
        org.junit.Assert.assertTrue("'" + escapeMode45 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.extended + "'", escapeMode45.equals(org.jsoup.nodes.Entities.EscapeMode.extended));
        org.junit.Assert.assertNotNull(outputSettings46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "&colon;containsOwn&lpar;&lsqb;&colon;lt&lpar;32&rpar;&ast;&equals;&period;&NewLine; &NewLine; &NewLine;&rbrack;" + "'", str48, "&colon;containsOwn&lpar;&lsqb;&colon;lt&lpar;32&rpar;&ast;&equals;&period;&NewLine; &NewLine; &NewLine;&rbrack;");
        org.junit.Assert.assertNotNull(charset49);
        org.junit.Assert.assertNotNull(outputSettings50);
        org.junit.Assert.assertNotNull(outputSettings52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #919
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #25
52: invokevirtual #29
55: astore        4
57: aload_1
58: invokevirtual #30
61: astore        5
63: aload         5
65: iconst_0
66: invokevirtual #31
69: astore        6
71: aload         5
73: iconst_1
74: invokevirtual #31
77: astore        7
79: invokestatic  #8
82: astore        8
84: ldc           #109
86: ldc           #110
88: aload         8
90: invokestatic  #94
93: astore        9
95: aload         8
97: ldc           #25
99: invokevirtual #83
102: istore        10
104: aload         8
106: iconst_0
107: invokevirtual #9
110: astore        11
112: aload         11
114: ldc           #50
116: ldc           #151
118: ldc           #114
120: invokevirtual #11
123: astore        12
125: ldc           #25
127: ldc           #12
129: invokestatic  #26
132: astore        13
134: ldc           #12
136: aload         13
138: ldc           #12
140: invokestatic  #27
143: astore        14
145: aload         13
147: ldc           #12
149: invokevirtual #28
152: astore        15
154: aload         13
156: ldc           #25
158: invokevirtual #29
161: astore        16
163: aload         13
165: invokevirtual #30
168: astore        17
170: aload         17
172: invokevirtual #205
175: astore        18
177: aload         18
179: iconst_0
180: invokevirtual #31
183: astore        19
185: getstatic     #381
188: astore        20
190: aload         19
192: aload         20
194: invokevirtual #190
197: astore        21
199: getstatic     #528
202: astore        22
204: aload         21
206: aload         22
208: invokevirtual #190
211: astore        23
213: aload         21
215: invokevirtual #461
218: istore        24
220: ldc           #110
222: ldc           #228
224: aload         11
226: aload         21
228: invokestatic  #33
231: astore        25
233: aload         21
235: invokevirtual #460
238: astore        26
240: aload         5
242: aload         26
244: invokevirtual #718
247: astore        27
249: aload         27
251: iconst_0
252: invokevirtual #31
255: astore        28
257: aload_1
258: invokestatic  #15
261: aload_2
262: invokestatic  #15
265: aload_3
266: invokestatic  #15
269: aload         4
271: invokestatic  #15
274: aload         5
276: invokestatic  #15
279: aload         6
281: invokestatic  #15
284: aload         7
286: invokestatic  #15
289: aload         8
291: invokestatic  #15
294: new           #16
297: dup
298: invokespecial #17
301: ldc           #18
303: invokevirtual #19
306: aload         9
308: invokevirtual #19
311: ldc           #111
313: invokevirtual #19
316: invokevirtual #22
319: aload         9
321: ldc           #65
323: invokestatic  #68
326: new           #16
329: dup
330: invokespecial #17
333: ldc           #18
335: invokevirtual #19
338: iload         10
340: invokevirtual #20
343: ldc           #21
345: invokevirtual #19
348: iconst_0
349: invokevirtual #20
352: ldc           #18
354: invokevirtual #19
357: invokevirtual #22
360: iload         10
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #23
373: aload         11
375: invokestatic  #15
378: aload         12
380: invokestatic  #15
383: aload         13
385: invokestatic  #15
388: aload         14
390: invokestatic  #15
393: aload         15
395: invokestatic  #15
398: aload         16
400: invokestatic  #15
403: aload         17
405: invokestatic  #15
408: aload         18
410: invokestatic  #15
413: aload         19
415: invokestatic  #15
418: new           #16
421: dup
422: invokespecial #17
425: ldc           #18
427: invokevirtual #19
430: aload         20
432: invokevirtual #223
435: ldc           #21
437: invokevirtual #19
440: getstatic     #381
443: invokevirtual #223
446: ldc           #18
448: invokevirtual #19
451: invokevirtual #22
454: aload         20
456: getstatic     #381
459: invokevirtual #385
462: invokestatic  #23
465: aload         21
467: invokestatic  #15
470: new           #16
473: dup
474: invokespecial #17
477: ldc           #18
479: invokevirtual #19
482: aload         22
484: invokevirtual #223
487: ldc           #21
489: invokevirtual #19
492: getstatic     #528
495: invokevirtual #223
498: ldc           #18
500: invokevirtual #19
503: invokevirtual #22
506: aload         22
508: getstatic     #528
511: invokevirtual #385
514: invokestatic  #23
517: aload         23
519: invokestatic  #15
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: iload         24
536: invokevirtual #20
539: ldc           #21
541: invokevirtual #19
544: iconst_0
545: invokevirtual #20
548: ldc           #18
550: invokevirtual #19
553: invokevirtual #22
556: iload         24
558: ifne          565
561: iconst_1
562: goto          566
565: iconst_0
566: invokestatic  #23
569: new           #16
572: dup
573: invokespecial #17
576: ldc           #18
578: invokevirtual #19
581: aload         25
583: invokevirtual #19
586: ldc_w         #719
589: invokevirtual #19
592: invokevirtual #22
595: aload         25
597: ldc_w         #720
600: invokestatic  #68
603: aload         26
605: invokestatic  #15
608: aload         27
610: invokestatic  #15
613: aload         28
615: invokestatic  #15
618: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test309
Start line: 16677
End line: 16778
Method source code: 
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        org.jsoup.nodes.Document document4 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList6 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document4, "hi!");
        org.jsoup.nodes.Element element8 = document4.text("");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        org.jsoup.nodes.Document document20 = document4.outputSettings(outputSettings19);
        org.jsoup.nodes.Document document21 = document4.normalise();
        objList0.addLast((java.lang.Object) document21);
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element29 = document26.empty();
        org.jsoup.nodes.Element element31 = document26.removeClass("hi!");
        org.jsoup.select.Elements elements34 = document26.getElementsByAttributeValueEnding("<html>\n <head></head>\n <body></body>\n</html>", "[:lt(32)]");
        objList0.push((java.lang.Object) "[:lt(32)]");
        org.jsoup.select.Evaluator.Attribute attribute37 = new org.jsoup.select.Evaluator.Attribute(":lt(32)");
        org.jsoup.nodes.Element element38 = null;
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parse("", ":lt(32)");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = document41.dataset();
        java.lang.String str43 = document41.outerHtml();
        boolean boolean44 = attribute37.matches(element38, (org.jsoup.nodes.Element) document41);
        org.jsoup.safety.Whitelist whitelist45 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist47 = whitelist45.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner48 = new org.jsoup.safety.Cleaner(whitelist47);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining51 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document53 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        boolean boolean65 = attributeWithValueContaining51.matches((org.jsoup.nodes.Element) document53, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document66 = cleaner48.clean(document57);
        org.jsoup.nodes.Document document70 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList72 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document70, "hi!");
        org.jsoup.nodes.Element element74 = document70.tagName("hi!");
        org.jsoup.nodes.Element element76 = document70.append("");
        java.lang.String str77 = document70.toString();
        java.lang.String str78 = document70.id();
        org.jsoup.nodes.Node node79 = document70.parent();
        org.jsoup.nodes.Document document80 = cleaner48.clean(document70);
        org.jsoup.nodes.Document document84 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList86 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document84, "hi!");
        org.jsoup.nodes.Element element88 = document84.text("");
        boolean boolean89 = attribute37.matches((org.jsoup.nodes.Element) document70, (org.jsoup.nodes.Element) document84);
        boolean boolean90 = objList0.offerLast((java.lang.Object) document70);
        org.jsoup.safety.Whitelist.AttributeKey attributeKey92 = new org.jsoup.safety.Whitelist.AttributeKey(":lt(1)");
        boolean boolean93 = objList0.offerLast((java.lang.Object) attributeKey92);
        int int94 = objList0.size();
        java.lang.String str95 = objList0.toString();
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(nodeList6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(elements34);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str43, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(nodeList72);
        org.junit.Assert.assertNotNull(element74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str77, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNotNull(document80);
        org.junit.Assert.assertNotNull(document84);
        org.junit.Assert.assertNotNull(nodeList86);
        org.junit.Assert.assertNotNull(element88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 4 + "'", int94 == 4);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[[:lt(32)], <html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>, :lt(1)]" + "'", str95, "[[:lt(32)], <html>\n <head></head>\n <body>\n </body>\n</html>, <html>\n <head></head>\n <body></body>\n</html>, :lt(1)]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #920
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: ldc           #25
35: ldc           #12
37: invokestatic  #26
40: astore_2
41: ldc           #12
43: aload_2
44: ldc           #12
46: invokestatic  #27
49: astore_3
50: aload_2
51: ldc           #25
53: invokevirtual #64
56: astore        4
58: ldc           #25
60: ldc           #12
62: invokestatic  #26
65: astore        5
67: ldc           #12
69: aload         5
71: ldc           #12
73: invokestatic  #27
76: astore        6
78: aload         5
80: ldc           #12
82: invokevirtual #28
85: astore        7
87: aload         5
89: ldc           #25
91: invokevirtual #29
94: astore        8
96: aload         5
98: invokevirtual #30
101: astore        9
103: aload_2
104: aload         9
106: invokevirtual #175
109: astore        10
111: aload_2
112: invokevirtual #102
115: astore        11
117: aload_1
118: aload         11
120: invokevirtual #95
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        12
132: ldc           #12
134: aload         12
136: ldc           #12
138: invokestatic  #27
141: astore        13
143: aload         12
145: invokevirtual #103
148: astore        14
150: aload         12
152: ldc           #12
154: invokevirtual #59
157: astore        15
159: aload         12
161: ldc           #10
163: ldc           #58
165: invokevirtual #153
168: astore        16
170: aload_1
171: ldc           #58
173: invokevirtual #401
176: new           #532
179: dup
180: ldc           #43
182: invokespecial #533
185: astore        17
187: aconst_null
188: astore        18
190: ldc           #25
192: ldc           #43
194: invokestatic  #26
197: astore        19
199: aload         19
201: invokevirtual #534
204: astore        20
206: aload         19
208: invokevirtual #535
211: astore        21
213: aload         17
215: aload         18
217: aload         19
219: invokevirtual #536
222: istore        22
224: invokestatic  #8
227: astore        23
229: aload         23
231: iconst_1
232: invokevirtual #9
235: astore        24
237: new           #40
240: dup
241: aload         24
243: invokespecial #41
246: astore        25
248: new           #42
251: dup
252: ldc           #43
254: ldc           #32
256: invokespecial #44
259: astore        26
261: ldc           #12
263: invokestatic  #45
266: astore        27
268: ldc           #25
270: ldc           #12
272: invokestatic  #26
275: astore        28
277: ldc           #12
279: aload         28
281: ldc           #12
283: invokestatic  #27
286: astore        29
288: aload         28
290: ldc           #12
292: invokevirtual #28
295: astore        30
297: aload         28
299: ldc           #25
301: invokevirtual #29
304: astore        31
306: aload         28
308: invokevirtual #30
311: astore        32
313: aload         26
315: aload         27
317: aload         28
319: invokevirtual #46
322: istore        33
324: aload         25
326: aload         28
328: invokevirtual #47
331: astore        34
333: ldc           #25
335: ldc           #12
337: invokestatic  #26
340: astore        35
342: ldc           #12
344: aload         35
346: ldc           #12
348: invokestatic  #27
351: astore        36
353: aload         35
355: ldc           #12
357: invokevirtual #28
360: astore        37
362: aload         35
364: ldc           #25
366: invokevirtual #29
369: astore        38
371: aload         35
373: invokevirtual #72
376: astore        39
378: aload         35
380: invokevirtual #73
383: astore        40
385: aload         35
387: invokevirtual #74
390: astore        41
392: aload         25
394: aload         35
396: invokevirtual #47
399: astore        42
401: ldc           #25
403: ldc           #12
405: invokestatic  #26
408: astore        43
410: ldc           #12
412: aload         43
414: ldc           #12
416: invokestatic  #27
419: astore        44
421: aload         43
423: ldc           #25
425: invokevirtual #64
428: astore        45
430: aload         17
432: aload         35
434: aload         43
436: invokevirtual #536
439: istore        46
441: aload_1
442: aload         35
444: invokevirtual #282
447: istore        47
449: new           #537
452: dup
453: ldc_w         #366
456: invokespecial #538
459: astore        48
461: aload_1
462: aload         48
464: invokevirtual #282
467: istore        49
469: aload_1
470: invokevirtual #921
473: istore        50
475: aload_1
476: invokevirtual #570
479: astore        51
481: aload_2
482: invokestatic  #15
485: aload_3
486: invokestatic  #15
489: aload         4
491: invokestatic  #15
494: aload         5
496: invokestatic  #15
499: aload         6
501: invokestatic  #15
504: aload         7
506: invokestatic  #15
509: aload         8
511: invokestatic  #15
514: aload         9
516: invokestatic  #15
519: aload         10
521: invokestatic  #15
524: aload         11
526: invokestatic  #15
529: aload         12
531: invokestatic  #15
534: aload         13
536: invokestatic  #15
539: aload         14
541: invokestatic  #15
544: aload         15
546: invokestatic  #15
549: aload         16
551: invokestatic  #15
554: aload         19
556: invokestatic  #15
559: aload         20
561: invokestatic  #15
564: new           #16
567: dup
568: invokespecial #17
571: ldc           #18
573: invokevirtual #19
576: aload         21
578: invokevirtual #19
581: ldc           #78
583: invokevirtual #19
586: invokevirtual #22
589: aload         21
591: ldc           #10
593: invokestatic  #68
596: new           #16
599: dup
600: invokespecial #17
603: ldc           #18
605: invokevirtual #19
608: iload         22
610: invokevirtual #20
613: ldc           #21
615: invokevirtual #19
618: iconst_0
619: invokevirtual #20
622: ldc           #18
624: invokevirtual #19
627: invokevirtual #22
630: iload         22
632: ifne          639
635: iconst_1
636: goto          640
639: iconst_0
640: invokestatic  #23
643: aload         23
645: invokestatic  #15
648: aload         24
650: invokestatic  #15
653: aload         27
655: invokestatic  #15
658: aload         28
660: invokestatic  #15
663: aload         29
665: invokestatic  #15
668: aload         30
670: invokestatic  #15
673: aload         31
675: invokestatic  #15
678: aload         32
680: invokestatic  #15
683: new           #16
686: dup
687: invokespecial #17
690: ldc           #18
692: invokevirtual #19
695: iload         33
697: invokevirtual #20
700: ldc           #21
702: invokevirtual #19
705: iconst_0
706: invokevirtual #20
709: ldc           #18
711: invokevirtual #19
714: invokevirtual #22
717: iload         33
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #23
730: aload         34
732: invokestatic  #15
735: aload         35
737: invokestatic  #15
740: aload         36
742: invokestatic  #15
745: aload         37
747: invokestatic  #15
750: aload         38
752: invokestatic  #15
755: new           #16
758: dup
759: invokespecial #17
762: ldc           #18
764: invokevirtual #19
767: aload         39
769: invokevirtual #19
772: ldc           #78
774: invokevirtual #19
777: invokevirtual #22
780: aload         39
782: ldc           #10
784: invokestatic  #68
787: new           #16
790: dup
791: invokespecial #17
794: ldc           #18
796: invokevirtual #19
799: aload         40
801: invokevirtual #19
804: ldc           #67
806: invokevirtual #19
809: invokevirtual #22
812: aload         40
814: ldc           #25
816: invokestatic  #68
819: aload         41
821: invokestatic  #79
824: aload         42
826: invokestatic  #15
829: aload         43
831: invokestatic  #15
834: aload         44
836: invokestatic  #15
839: aload         45
841: invokestatic  #15
844: new           #16
847: dup
848: invokespecial #17
851: ldc           #18
853: invokevirtual #19
856: iload         46
858: invokevirtual #20
861: ldc           #21
863: invokevirtual #19
866: iconst_0
867: invokevirtual #20
870: ldc           #18
872: invokevirtual #19
875: invokevirtual #22
878: iload         46
880: ifne          887
883: iconst_1
884: goto          888
887: iconst_0
888: invokestatic  #23
891: new           #16
894: dup
895: invokespecial #17
898: ldc           #18
900: invokevirtual #19
903: iload         47
905: invokevirtual #20
908: ldc           #21
910: invokevirtual #19
913: iconst_1
914: invokevirtual #20
917: ldc           #18
919: invokevirtual #19
922: invokevirtual #22
925: iload         47
927: iconst_1
928: if_icmpne     935
931: iconst_1
932: goto          936
935: iconst_0
936: invokestatic  #23
939: new           #16
942: dup
943: invokespecial #17
946: ldc           #18
948: invokevirtual #19
951: iload         49
953: invokevirtual #20
956: ldc           #21
958: invokevirtual #19
961: iconst_1
962: invokevirtual #20
965: ldc           #18
967: invokevirtual #19
970: invokevirtual #22
973: iload         49
975: iconst_1
976: if_icmpne     983
979: iconst_1
980: goto          984
983: iconst_0
984: invokestatic  #23
987: new           #16
990: dup
991: invokespecial #17
994: ldc           #18
996: invokevirtual #19
999: iload         50
1001: invokevirtual #134
1004: ldc           #21
1006: invokevirtual #19
1009: iconst_4
1010: invokevirtual #134
1013: ldc           #18
1015: invokevirtual #19
1018: invokevirtual #22
1021: iload         50
1023: iconst_4
1024: if_icmpne     1031
1027: iconst_1
1028: goto          1032
1031: iconst_0
1032: invokestatic  #23
1035: new           #16
1038: dup
1039: invokespecial #17
1042: ldc           #18
1044: invokevirtual #19
1047: aload         51
1049: invokevirtual #19
1052: ldc_w         #922
1055: invokevirtual #19
1058: invokevirtual #22
1061: aload         51
1063: ldc_w         #923
1066: invokestatic  #68
1069: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test310
Start line: 16781
End line: 16826
Method source code: 
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        org.jsoup.safety.Whitelist whitelist4 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str5 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist4);
        boolean boolean7 = whitelist4.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist9 = whitelist4.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = whitelist9.addEnforcedAttribute("[^hi!]", "<html>\n <head></head>\n <body>   \n </body>\n</html>", "#comment");
        org.jsoup.nodes.Document document17 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList19 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document17, "hi!");
        org.jsoup.nodes.Element element21 = document17.tagName("hi!");
        org.jsoup.nodes.Element element23 = document17.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document17.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = outputSettings24.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings25.prettyPrint(false);
        org.jsoup.nodes.Entities.EscapeMode escapeMode28 = org.jsoup.nodes.Entities.EscapeMode.base;
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings27.escapeMode(escapeMode28);
        org.jsoup.nodes.Entities.EscapeMode escapeMode30 = org.jsoup.nodes.Entities.EscapeMode.extended;
        org.jsoup.nodes.Document.OutputSettings outputSettings31 = outputSettings29.escapeMode(escapeMode30);
        boolean boolean32 = outputSettings29.prettyPrint();
        java.lang.String str33 = org.jsoup.Jsoup.clean(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", "[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]", whitelist9, outputSettings29);
        java.nio.charset.Charset charset34 = outputSettings29.charset();
        java.nio.charset.Charset charset35 = outputSettings29.charset();
        org.jsoup.nodes.Document.OutputSettings outputSettings36 = outputSettings29.clone();
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[hi!$=   ]" + "'", str5, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(nodeList19);
        org.junit.Assert.assertNotNull(element21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertTrue("'" + escapeMode28 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode28.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertTrue("'" + escapeMode30 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.extended + "'", escapeMode30.equals(org.jsoup.nodes.Entities.EscapeMode.extended));
        org.junit.Assert.assertNotNull(outputSettings31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "&colon;containsOwn&lpar;&lsqb;&colon;lt&lpar;32&rpar;&ast;&equals;&period;&NewLine; &NewLine; &NewLine;&rbrack;" + "'", str33, "&colon;containsOwn&lpar;&lsqb;&colon;lt&lpar;32&rpar;&ast;&equals;&period;&NewLine; &NewLine; &NewLine;&rbrack;");
        org.junit.Assert.assertNotNull(charset34);
        org.junit.Assert.assertNotNull(charset35);
        org.junit.Assert.assertNotNull(outputSettings36);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #924
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: aload_1
46: iconst_0
47: invokevirtual #9
50: astore        4
52: aload         4
54: ldc           #50
56: ldc           #151
58: ldc           #114
60: invokevirtual #11
63: astore        5
65: ldc           #25
67: ldc           #12
69: invokestatic  #26
72: astore        6
74: ldc           #12
76: aload         6
78: ldc           #12
80: invokestatic  #27
83: astore        7
85: aload         6
87: ldc           #12
89: invokevirtual #28
92: astore        8
94: aload         6
96: ldc           #25
98: invokevirtual #29
101: astore        9
103: aload         6
105: invokevirtual #30
108: astore        10
110: aload         10
112: invokevirtual #205
115: astore        11
117: aload         11
119: iconst_0
120: invokevirtual #31
123: astore        12
125: getstatic     #381
128: astore        13
130: aload         12
132: aload         13
134: invokevirtual #190
137: astore        14
139: getstatic     #528
142: astore        15
144: aload         14
146: aload         15
148: invokevirtual #190
151: astore        16
153: aload         14
155: invokevirtual #461
158: istore        17
160: ldc           #110
162: ldc           #228
164: aload         4
166: aload         14
168: invokestatic  #33
171: astore        18
173: aload         14
175: invokevirtual #460
178: astore        19
180: aload         14
182: invokevirtual #460
185: astore        20
187: aload         14
189: invokevirtual #205
192: astore        21
194: aload_1
195: invokestatic  #15
198: new           #16
201: dup
202: invokespecial #17
205: ldc           #18
207: invokevirtual #19
210: aload_2
211: invokevirtual #19
214: ldc           #111
216: invokevirtual #19
219: invokevirtual #22
222: aload_2
223: ldc           #65
225: invokestatic  #68
228: new           #16
231: dup
232: invokespecial #17
235: ldc           #18
237: invokevirtual #19
240: iload_3
241: invokevirtual #20
244: ldc           #21
246: invokevirtual #19
249: iconst_0
250: invokevirtual #20
253: ldc           #18
255: invokevirtual #19
258: invokevirtual #22
261: iload_3
262: ifne          269
265: iconst_1
266: goto          270
269: iconst_0
270: invokestatic  #23
273: aload         4
275: invokestatic  #15
278: aload         5
280: invokestatic  #15
283: aload         6
285: invokestatic  #15
288: aload         7
290: invokestatic  #15
293: aload         8
295: invokestatic  #15
298: aload         9
300: invokestatic  #15
303: aload         10
305: invokestatic  #15
308: aload         11
310: invokestatic  #15
313: aload         12
315: invokestatic  #15
318: new           #16
321: dup
322: invokespecial #17
325: ldc           #18
327: invokevirtual #19
330: aload         13
332: invokevirtual #223
335: ldc           #21
337: invokevirtual #19
340: getstatic     #381
343: invokevirtual #223
346: ldc           #18
348: invokevirtual #19
351: invokevirtual #22
354: aload         13
356: getstatic     #381
359: invokevirtual #385
362: invokestatic  #23
365: aload         14
367: invokestatic  #15
370: new           #16
373: dup
374: invokespecial #17
377: ldc           #18
379: invokevirtual #19
382: aload         15
384: invokevirtual #223
387: ldc           #21
389: invokevirtual #19
392: getstatic     #528
395: invokevirtual #223
398: ldc           #18
400: invokevirtual #19
403: invokevirtual #22
406: aload         15
408: getstatic     #528
411: invokevirtual #385
414: invokestatic  #23
417: aload         16
419: invokestatic  #15
422: new           #16
425: dup
426: invokespecial #17
429: ldc           #18
431: invokevirtual #19
434: iload         17
436: invokevirtual #20
439: ldc           #21
441: invokevirtual #19
444: iconst_0
445: invokevirtual #20
448: ldc           #18
450: invokevirtual #19
453: invokevirtual #22
456: iload         17
458: ifne          465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #23
469: new           #16
472: dup
473: invokespecial #17
476: ldc           #18
478: invokevirtual #19
481: aload         18
483: invokevirtual #19
486: ldc_w         #719
489: invokevirtual #19
492: invokevirtual #22
495: aload         18
497: ldc_w         #720
500: invokestatic  #68
503: aload         19
505: invokestatic  #15
508: aload         20
510: invokestatic  #15
513: aload         21
515: invokestatic  #15
518: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test311
Start line: 16829
End line: 16845
Method source code: 
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        org.jsoup.safety.Whitelist whitelist1 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str2 = org.jsoup.Jsoup.clean("", whitelist1);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist1);
        org.jsoup.nodes.Document document4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Document document5 = cleaner3.clean(document4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #925
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #25
31: aload_1
32: invokestatic  #81
35: astore_2
36: new           #40
39: dup
40: aload_1
41: invokespecial #41
44: astore_3
45: aconst_null
46: astore        4
48: aload_3
49: aload         4
51: invokevirtual #47
54: astore        5
56: ldc           #34
58: invokestatic  #35
61: goto          66
64: astore        5
66: aload_1
67: invokestatic  #15
70: new           #16
73: dup
74: invokespecial #17
77: ldc           #18
79: invokevirtual #19
82: aload_2
83: invokevirtual #19
86: ldc           #67
88: invokevirtual #19
91: invokevirtual #22
94: aload_2
95: ldc           #25
97: invokestatic  #68
100: return
Exception table:
from    to  target type
48    61    64   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test312
Start line: 16848
End line: 16918
Method source code: 
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        java.util.regex.Pattern pattern1 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching2 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("[:lt(32)]", pattern1);
        org.jsoup.select.Evaluator.Class class4 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        org.jsoup.select.Elements elements17 = document8.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element19 = document8.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes20 = document8.attributes();
        org.jsoup.nodes.Element element22 = document8.prepend("[^hi!]");
        org.jsoup.nodes.Document document26 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList28 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document26, "hi!");
        org.jsoup.nodes.Element element30 = document26.tagName("hi!");
        org.jsoup.nodes.Element element32 = document26.append("");
        org.jsoup.nodes.Element element35 = document26.attr("#document", "#document");
        org.jsoup.nodes.Element element36 = document26.body();
        boolean boolean37 = class4.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document26);
        org.jsoup.safety.Whitelist whitelist38 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist40 = whitelist38.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner41 = new org.jsoup.safety.Cleaner(whitelist40);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining44 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document46 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList52 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document50, "hi!");
        org.jsoup.nodes.Element element54 = document50.tagName("hi!");
        org.jsoup.nodes.Element element56 = document50.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings57 = document50.outputSettings();
        boolean boolean58 = attributeWithValueContaining44.matches((org.jsoup.nodes.Element) document46, (org.jsoup.nodes.Element) document50);
        org.jsoup.nodes.Document document59 = cleaner41.clean(document50);
        org.jsoup.nodes.Element element61 = document59.html("#comment");
        org.jsoup.nodes.Document document62 = document59.normalise();
        java.lang.String str63 = document62.toString();
        org.jsoup.select.Elements elements65 = document62.getElementsByIndexEquals(4);
        boolean boolean66 = attributeWithValueMatching2.matches((org.jsoup.nodes.Element) document26, (org.jsoup.nodes.Element) document62);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertNotNull(elements17);
        org.junit.Assert.assertNull(element19);
        org.junit.Assert.assertNotNull(attributes20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(nodeList28);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(outputSettings57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "<html>\n <head></head>\n <body>\n  #comment \n </body>\n</html>" + "'", str63, "<html>\n <head></head>\n <body>\n  #comment \n </body>\n</html>");
        org.junit.Assert.assertNotNull(elements65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #926
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #96
30: dup
31: ldc           #58
33: aload_1
34: invokespecial #97
37: astore_2
38: new           #160
41: dup
42: ldc           #10
44: invokespecial #161
47: astore_3
48: ldc           #25
50: ldc           #12
52: invokestatic  #26
55: astore        4
57: ldc           #12
59: aload         4
61: ldc           #12
63: invokestatic  #27
66: astore        5
68: aload         4
70: ldc           #12
72: invokevirtual #28
75: astore        6
77: aload         4
79: ldc           #25
81: invokevirtual #29
84: astore        7
86: aload         4
88: invokevirtual #30
91: astore        8
93: aload         4
95: iconst_m1
96: invokevirtual #162
99: astore        9
101: aload         4
103: ldc           #10
105: invokevirtual #163
108: astore        10
110: aload         4
112: invokevirtual #164
115: astore        11
117: aload         4
119: ldc           #50
121: invokevirtual #165
124: astore        12
126: ldc           #25
128: ldc           #12
130: invokestatic  #26
133: astore        13
135: ldc           #12
137: aload         13
139: ldc           #12
141: invokestatic  #27
144: astore        14
146: aload         13
148: ldc           #12
150: invokevirtual #28
153: astore        15
155: aload         13
157: ldc           #25
159: invokevirtual #29
162: astore        16
164: aload         13
166: ldc           #13
168: ldc           #13
170: invokevirtual #56
173: astore        17
175: aload         13
177: invokevirtual #166
180: astore        18
182: aload_3
183: aload         4
185: aload         13
187: invokevirtual #167
190: istore        19
192: invokestatic  #8
195: astore        20
197: aload         20
199: iconst_1
200: invokevirtual #9
203: astore        21
205: new           #40
208: dup
209: aload         21
211: invokespecial #41
214: astore        22
216: new           #42
219: dup
220: ldc           #43
222: ldc           #32
224: invokespecial #44
227: astore        23
229: ldc           #12
231: invokestatic  #45
234: astore        24
236: ldc           #25
238: ldc           #12
240: invokestatic  #26
243: astore        25
245: ldc           #12
247: aload         25
249: ldc           #12
251: invokestatic  #27
254: astore        26
256: aload         25
258: ldc           #12
260: invokevirtual #28
263: astore        27
265: aload         25
267: ldc           #25
269: invokevirtual #29
272: astore        28
274: aload         25
276: invokevirtual #30
279: astore        29
281: aload         23
283: aload         24
285: aload         25
287: invokevirtual #46
290: istore        30
292: aload         22
294: aload         25
296: invokevirtual #47
299: astore        31
301: aload         31
303: ldc           #114
305: invokevirtual #115
308: astore        32
310: aload         31
312: invokevirtual #102
315: astore        33
317: aload         33
319: invokevirtual #72
322: astore        34
324: aload         33
326: iconst_4
327: invokevirtual #162
330: astore        35
332: aload_2
333: aload         13
335: aload         33
337: invokevirtual #101
340: istore        36
342: aload         4
344: invokestatic  #15
347: aload         5
349: invokestatic  #15
352: aload         6
354: invokestatic  #15
357: aload         7
359: invokestatic  #15
362: aload         8
364: invokestatic  #15
367: aload         9
369: invokestatic  #15
372: aload         10
374: invokestatic  #79
377: aload         11
379: invokestatic  #15
382: aload         12
384: invokestatic  #15
387: aload         13
389: invokestatic  #15
392: aload         14
394: invokestatic  #15
397: aload         15
399: invokestatic  #15
402: aload         16
404: invokestatic  #15
407: aload         17
409: invokestatic  #15
412: aload         18
414: invokestatic  #15
417: new           #16
420: dup
421: invokespecial #17
424: ldc           #18
426: invokevirtual #19
429: iload         19
431: invokevirtual #20
434: ldc           #21
436: invokevirtual #19
439: iconst_0
440: invokevirtual #20
443: ldc           #18
445: invokevirtual #19
448: invokevirtual #22
451: iload         19
453: ifne          460
456: iconst_1
457: goto          461
460: iconst_0
461: invokestatic  #23
464: aload         20
466: invokestatic  #15
469: aload         21
471: invokestatic  #15
474: aload         24
476: invokestatic  #15
479: aload         25
481: invokestatic  #15
484: aload         26
486: invokestatic  #15
489: aload         27
491: invokestatic  #15
494: aload         28
496: invokestatic  #15
499: aload         29
501: invokestatic  #15
504: new           #16
507: dup
508: invokespecial #17
511: ldc           #18
513: invokevirtual #19
516: iload         30
518: invokevirtual #20
521: ldc           #21
523: invokevirtual #19
526: iconst_0
527: invokevirtual #20
530: ldc           #18
532: invokevirtual #19
535: invokevirtual #22
538: iload         30
540: ifne          547
543: iconst_1
544: goto          548
547: iconst_0
548: invokestatic  #23
551: aload         31
553: invokestatic  #15
556: aload         32
558: invokestatic  #15
561: aload         33
563: invokestatic  #15
566: new           #16
569: dup
570: invokespecial #17
573: ldc           #18
575: invokevirtual #19
578: aload         34
580: invokevirtual #19
583: ldc_w         #506
586: invokevirtual #19
589: invokevirtual #22
592: aload         34
594: ldc_w         #507
597: invokestatic  #68
600: aload         35
602: invokestatic  #15
605: new           #16
608: dup
609: invokespecial #17
612: ldc           #18
614: invokevirtual #19
617: iload         36
619: invokevirtual #20
622: ldc           #21
624: invokevirtual #19
627: iconst_0
628: invokevirtual #20
631: ldc           #18
633: invokevirtual #19
636: invokevirtual #22
639: iload         36
641: ifne          648
644: iconst_1
645: goto          649
648: iconst_0
649: invokestatic  #23
652: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test313
Start line: 16921
End line: 17043
Method source code: 
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        java.util.regex.Pattern pattern0 = null;
        org.jsoup.select.Evaluator.Matches matches1 = new org.jsoup.select.Evaluator.Matches(pattern0);
        java.lang.String str2 = matches1.toString();
        java.lang.String str3 = matches1.toString();
        java.lang.String str4 = matches1.toString();
        java.lang.String str5 = matches1.toString();
        org.jsoup.select.Evaluator.AttributeWithValue attributeWithValue8 = new org.jsoup.select.Evaluator.AttributeWithValue("#data", "[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]");
        java.lang.String str9 = attributeWithValue8.toString();
        java.lang.String str10 = attributeWithValue8.toString();
        org.jsoup.safety.Whitelist whitelist11 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist13 = whitelist11.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner14 = new org.jsoup.safety.Cleaner(whitelist13);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining17 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document19 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList25 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document23, "hi!");
        org.jsoup.nodes.Element element27 = document23.tagName("hi!");
        org.jsoup.nodes.Element element29 = document23.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings30 = document23.outputSettings();
        boolean boolean31 = attributeWithValueContaining17.matches((org.jsoup.nodes.Element) document19, (org.jsoup.nodes.Element) document23);
        org.jsoup.nodes.Document document32 = cleaner14.clean(document23);
        org.jsoup.nodes.Document document34 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str35 = document34.toString();
        java.lang.String str36 = document34.baseUri();
        org.jsoup.nodes.Document document37 = cleaner14.clean(document34);
        org.jsoup.nodes.Document document39 = org.jsoup.Jsoup.parseBodyFragment("                                                                                                    ");
        org.jsoup.nodes.Document document40 = cleaner14.clean(document39);
        org.jsoup.nodes.Document document42 = new org.jsoup.nodes.Document("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document46 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList48 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document46, "hi!");
        org.jsoup.nodes.Element element49 = document46.empty();
        org.jsoup.nodes.Element element51 = document46.removeClass("hi!");
        java.lang.String str52 = document46.id();
        org.jsoup.nodes.Document document56 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList58 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document56, "hi!");
        org.jsoup.nodes.Element element59 = document56.empty();
        org.jsoup.nodes.Element element61 = document56.removeClass("hi!");
        java.lang.String str62 = document56.nodeName();
        org.jsoup.nodes.Document.QuirksMode quirksMode63 = document56.quirksMode();
        org.jsoup.nodes.Document document64 = document46.quirksMode(quirksMode63);
        java.lang.String str65 = document64.id();
        org.jsoup.nodes.Document document69 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList71 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document69, "hi!");
        org.jsoup.nodes.Element element73 = document69.tagName("hi!");
        org.jsoup.nodes.Element element75 = document69.append("");
        java.lang.String str76 = document69.toString();
        org.jsoup.nodes.Element element78 = document69.prependElement("\nhi!");
        org.jsoup.select.Elements elements80 = document69.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document.QuirksMode quirksMode81 = org.jsoup.nodes.Document.QuirksMode.quirks;
        org.jsoup.nodes.Document document82 = document69.quirksMode(quirksMode81);
        org.jsoup.nodes.Document document83 = document64.quirksMode(quirksMode81);
        org.jsoup.nodes.Document document84 = document42.quirksMode(quirksMode81);
        org.jsoup.select.Elements elements86 = document42.getElementsMatchingOwnText("[    =hi!]");
        boolean boolean87 = attributeWithValue8.matches((org.jsoup.nodes.Element) document40, (org.jsoup.nodes.Element) document42);
        org.jsoup.nodes.Document document88 = document42.normalise();
        org.jsoup.nodes.Document document91 = org.jsoup.parser.Parser.parseBodyFragment(":gt(100)", "");
        org.jsoup.select.Elements elements93 = document91.getElementsByTag("\n<!--hi!-->");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList94 = document91.dataNodes();
        org.jsoup.nodes.Document document95 = document91.clone();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = matches1.matches((org.jsoup.nodes.Element) document88, (org.jsoup.nodes.Element) document95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + ":matches(null" + "'", str2, ":matches(null");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + ":matches(null" + "'", str3, ":matches(null");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":matches(null" + "'", str4, ":matches(null");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + ":matches(null" + "'", str5, ":matches(null");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]" + "'", str9, "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]" + "'", str10, "[#data=[<html>\n <head></head>\n <body>   \n </body>\n</html>=hi!]]");
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertNotNull(nodeList25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(outputSettings30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str35, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(nodeList48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(nodeList58);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "#document" + "'", str62, "#document");
        org.junit.Assert.assertTrue("'" + quirksMode63 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode63.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertNotNull(document64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(document69);
        org.junit.Assert.assertNotNull(nodeList71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(element75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str76, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element78);
        org.junit.Assert.assertNotNull(elements80);
        org.junit.Assert.assertTrue("'" + quirksMode81 + "' != '" + org.jsoup.nodes.Document.QuirksMode.quirks + "'", quirksMode81.equals(org.jsoup.nodes.Document.QuirksMode.quirks));
        org.junit.Assert.assertNotNull(document82);
        org.junit.Assert.assertNotNull(document83);
        org.junit.Assert.assertNotNull(document84);
        org.junit.Assert.assertNotNull(elements86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(document88);
        org.junit.Assert.assertNotNull(document91);
        org.junit.Assert.assertNotNull(elements93);
        org.junit.Assert.assertNotNull(dataNodeList94);
        org.junit.Assert.assertNotNull(document95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #927
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #70
30: dup
31: aload_1
32: invokespecial #71
35: astore_2
36: aload_2
37: invokevirtual #928
40: astore_3
41: aload_2
42: invokevirtual #928
45: astore        4
47: aload_2
48: invokevirtual #928
51: astore        5
53: aload_2
54: invokevirtual #928
57: astore        6
59: new           #724
62: dup
63: ldc_w         #267
66: ldc_w         #317
69: invokespecial #725
72: astore        7
74: aload         7
76: invokevirtual #726
79: astore        8
81: aload         7
83: invokevirtual #726
86: astore        9
88: invokestatic  #8
91: astore        10
93: aload         10
95: iconst_1
96: invokevirtual #9
99: astore        11
101: new           #40
104: dup
105: aload         11
107: invokespecial #41
110: astore        12
112: new           #42
115: dup
116: ldc           #43
118: ldc           #32
120: invokespecial #44
123: astore        13
125: ldc           #12
127: invokestatic  #45
130: astore        14
132: ldc           #25
134: ldc           #12
136: invokestatic  #26
139: astore        15
141: ldc           #12
143: aload         15
145: ldc           #12
147: invokestatic  #27
150: astore        16
152: aload         15
154: ldc           #12
156: invokevirtual #28
159: astore        17
161: aload         15
163: ldc           #25
165: invokevirtual #29
168: astore        18
170: aload         15
172: invokevirtual #30
175: astore        19
177: aload         13
179: aload         14
181: aload         15
183: invokevirtual #46
186: istore        20
188: aload         12
190: aload         15
192: invokevirtual #47
195: astore        21
197: ldc           #10
199: invokestatic  #193
202: astore        22
204: aload         22
206: invokevirtual #72
209: astore        23
211: aload         22
213: invokevirtual #194
216: astore        24
218: aload         12
220: aload         22
222: invokevirtual #47
225: astore        25
227: ldc_w         #613
230: invokestatic  #193
233: astore        26
235: aload         12
237: aload         26
239: invokevirtual #47
242: astore        27
244: new           #624
247: dup
248: ldc           #249
250: invokespecial #625
253: astore        28
255: ldc           #25
257: ldc           #12
259: invokestatic  #26
262: astore        29
264: ldc           #12
266: aload         29
268: ldc           #12
270: invokestatic  #27
273: astore        30
275: aload         29
277: invokevirtual #103
280: astore        31
282: aload         29
284: ldc           #12
286: invokevirtual #59
289: astore        32
291: aload         29
293: invokevirtual #73
296: astore        33
298: ldc           #25
300: ldc           #12
302: invokestatic  #26
305: astore        34
307: ldc           #12
309: aload         34
311: ldc           #12
313: invokestatic  #27
316: astore        35
318: aload         34
320: invokevirtual #103
323: astore        36
325: aload         34
327: ldc           #12
329: invokevirtual #59
332: astore        37
334: aload         34
336: invokevirtual #220
339: astore        38
341: aload         34
343: invokevirtual #222
346: astore        39
348: aload         29
350: aload         39
352: invokevirtual #481
355: astore        40
357: aload         40
359: invokevirtual #73
362: astore        41
364: ldc           #25
366: ldc           #12
368: invokestatic  #26
371: astore        42
373: ldc           #12
375: aload         42
377: ldc           #12
379: invokestatic  #27
382: astore        43
384: aload         42
386: ldc           #12
388: invokevirtual #28
391: astore        44
393: aload         42
395: ldc           #25
397: invokevirtual #29
400: astore        45
402: aload         42
404: invokevirtual #72
407: astore        46
409: aload         42
411: ldc           #98
413: invokevirtual #99
416: astore        47
418: aload         42
420: ldc           #25
422: invokevirtual #100
425: astore        48
427: getstatic     #626
430: astore        49
432: aload         42
434: aload         49
436: invokevirtual #481
439: astore        50
441: aload         40
443: aload         49
445: invokevirtual #481
448: astore        51
450: aload         28
452: aload         49
454: invokevirtual #481
457: astore        52
459: aload         28
461: ldc_w         #319
464: invokevirtual #100
467: astore        53
469: aload         7
471: aload         27
473: aload         28
475: invokevirtual #727
478: istore        54
480: aload         28
482: invokevirtual #102
485: astore        55
487: ldc           #92
489: ldc           #25
491: invokestatic  #52
494: astore        56
496: aload         56
498: ldc           #84
500: invokevirtual #929
503: astore        57
505: aload         56
507: invokevirtual #348
510: astore        58
512: aload         56
514: invokevirtual #154
517: astore        59
519: aload_2
520: aload         55
522: aload         59
524: invokevirtual #75
527: istore        60
529: ldc           #76
531: invokestatic  #35
534: goto          539
537: astore        60
539: new           #16
542: dup
543: invokespecial #17
546: ldc           #18
548: invokevirtual #19
551: aload_3
552: invokevirtual #19
555: ldc_w         #417
558: invokevirtual #19
561: invokevirtual #22
564: aload_3
565: ldc_w         #414
568: invokestatic  #68
571: new           #16
574: dup
575: invokespecial #17
578: ldc           #18
580: invokevirtual #19
583: aload         4
585: invokevirtual #19
588: ldc_w         #417
591: invokevirtual #19
594: invokevirtual #22
597: aload         4
599: ldc_w         #414
602: invokestatic  #68
605: new           #16
608: dup
609: invokespecial #17
612: ldc           #18
614: invokevirtual #19
617: aload         5
619: invokevirtual #19
622: ldc_w         #417
625: invokevirtual #19
628: invokevirtual #22
631: aload         5
633: ldc_w         #414
636: invokestatic  #68
639: new           #16
642: dup
643: invokespecial #17
646: ldc           #18
648: invokevirtual #19
651: aload         6
653: invokevirtual #19
656: ldc_w         #417
659: invokevirtual #19
662: invokevirtual #22
665: aload         6
667: ldc_w         #414
670: invokestatic  #68
673: new           #16
676: dup
677: invokespecial #17
680: ldc           #18
682: invokevirtual #19
685: aload         8
687: invokevirtual #19
690: ldc_w         #728
693: invokevirtual #19
696: invokevirtual #22
699: aload         8
701: ldc_w         #443
704: invokestatic  #68
707: new           #16
710: dup
711: invokespecial #17
714: ldc           #18
716: invokevirtual #19
719: aload         9
721: invokevirtual #19
724: ldc_w         #728
727: invokevirtual #19
730: invokevirtual #22
733: aload         9
735: ldc_w         #443
738: invokestatic  #68
741: aload         10
743: invokestatic  #15
746: aload         11
748: invokestatic  #15
751: aload         14
753: invokestatic  #15
756: aload         15
758: invokestatic  #15
761: aload         16
763: invokestatic  #15
766: aload         17
768: invokestatic  #15
771: aload         18
773: invokestatic  #15
776: aload         19
778: invokestatic  #15
781: new           #16
784: dup
785: invokespecial #17
788: ldc           #18
790: invokevirtual #19
793: iload         20
795: invokevirtual #20
798: ldc           #21
800: invokevirtual #19
803: iconst_0
804: invokevirtual #20
807: ldc           #18
809: invokevirtual #19
812: invokevirtual #22
815: iload         20
817: ifne          824
820: iconst_1
821: goto          825
824: iconst_0
825: invokestatic  #23
828: aload         21
830: invokestatic  #15
833: aload         22
835: invokestatic  #15
838: new           #16
841: dup
842: invokespecial #17
845: ldc           #18
847: invokevirtual #19
850: aload         23
852: invokevirtual #19
855: ldc           #197
857: invokevirtual #19
860: invokevirtual #22
863: aload         23
865: ldc           #151
867: invokestatic  #68
870: new           #16
873: dup
874: invokespecial #17
877: ldc           #18
879: invokevirtual #19
882: aload         24
884: invokevirtual #19
887: ldc           #67
889: invokevirtual #19
892: invokevirtual #22
895: aload         24
897: ldc           #25
899: invokestatic  #68
902: aload         25
904: invokestatic  #15
907: aload         26
909: invokestatic  #15
912: aload         27
914: invokestatic  #15
917: aload         29
919: invokestatic  #15
922: aload         30
924: invokestatic  #15
927: aload         31
929: invokestatic  #15
932: aload         32
934: invokestatic  #15
937: new           #16
940: dup
941: invokespecial #17
944: ldc           #18
946: invokevirtual #19
949: aload         33
951: invokevirtual #19
954: ldc           #67
956: invokevirtual #19
959: invokevirtual #22
962: aload         33
964: ldc           #25
966: invokestatic  #68
969: aload         34
971: invokestatic  #15
974: aload         35
976: invokestatic  #15
979: aload         36
981: invokestatic  #15
984: aload         37
986: invokestatic  #15
989: new           #16
992: dup
993: invokespecial #17
996: ldc           #18
998: invokevirtual #19
1001: aload         38
1003: invokevirtual #19
1006: ldc           #107
1008: invokevirtual #19
1011: invokevirtual #22
1014: aload         38
1016: ldc           #13
1018: invokestatic  #68
1021: new           #16
1024: dup
1025: invokespecial #17
1028: ldc           #18
1030: invokevirtual #19
1033: aload         39
1035: invokevirtual #223
1038: ldc           #21
1040: invokevirtual #19
1043: getstatic     #224
1046: invokevirtual #223
1049: ldc           #18
1051: invokevirtual #19
1054: invokevirtual #22
1057: aload         39
1059: getstatic     #224
1062: invokevirtual #225
1065: invokestatic  #23
1068: aload         40
1070: invokestatic  #15
1073: new           #16
1076: dup
1077: invokespecial #17
1080: ldc           #18
1082: invokevirtual #19
1085: aload         41
1087: invokevirtual #19
1090: ldc           #67
1092: invokevirtual #19
1095: invokevirtual #22
1098: aload         41
1100: ldc           #25
1102: invokestatic  #68
1105: aload         42
1107: invokestatic  #15
1110: aload         43
1112: invokestatic  #15
1115: aload         44
1117: invokestatic  #15
1120: aload         45
1122: invokestatic  #15
1125: new           #16
1128: dup
1129: invokespecial #17
1132: ldc           #18
1134: invokevirtual #19
1137: aload         46
1139: invokevirtual #19
1142: ldc           #78
1144: invokevirtual #19
1147: invokevirtual #22
1150: aload         46
1152: ldc           #10
1154: invokestatic  #68
1157: aload         47
1159: invokestatic  #15
1162: aload         48
1164: invokestatic  #15
1167: new           #16
1170: dup
1171: invokespecial #17
1174: ldc           #18
1176: invokevirtual #19
1179: aload         49
1181: invokevirtual #223
1184: ldc           #21
1186: invokevirtual #19
1189: getstatic     #626
1192: invokevirtual #223
1195: ldc           #18
1197: invokevirtual #19
1200: invokevirtual #22
1203: aload         49
1205: getstatic     #626
1208: invokevirtual #225
1211: invokestatic  #23
1214: aload         50
1216: invokestatic  #15
1219: aload         51
1221: invokestatic  #15
1224: aload         52
1226: invokestatic  #15
1229: aload         53
1231: invokestatic  #15
1234: new           #16
1237: dup
1238: invokespecial #17
1241: ldc           #18
1243: invokevirtual #19
1246: iload         54
1248: invokevirtual #20
1251: ldc           #21
1253: invokevirtual #19
1256: iconst_0
1257: invokevirtual #20
1260: ldc           #18
1262: invokevirtual #19
1265: invokevirtual #22
1268: iload         54
1270: ifne          1277
1273: iconst_1
1274: goto          1278
1277: iconst_0
1278: invokestatic  #23
1281: aload         55
1283: invokestatic  #15
1286: aload         56
1288: invokestatic  #15
1291: aload         57
1293: invokestatic  #15
1296: aload         58
1298: invokestatic  #15
1301: aload         59
1303: invokestatic  #15
1306: return
Exception table:
from    to  target type
519   534   537   Class java/lang/NullPointerException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test314
Start line: 17046
End line: 17128
Method source code: 
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList0 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        boolean boolean2 = objList0.equals((java.lang.Object) ":lt(32)");
        java.lang.Object obj3 = objList0.peekFirst();
        org.jsoup.helper.DescendableLinkedList<java.lang.Object> objList4 = new org.jsoup.helper.DescendableLinkedList<java.lang.Object>();
        java.lang.Object obj5 = objList4.poll();
        java.util.ListIterator<java.lang.Object> objItor6 = objList4.listIterator();
        objList0.addFirst((java.lang.Object) objItor6);
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element11 = document10.body();
        org.jsoup.nodes.Element element13 = element11.append("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        int int14 = objList0.lastIndexOf((java.lang.Object) "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        java.util.stream.Stream<org.jsoup.nodes.Node> nodeStream21 = nodeList20.stream();
        boolean boolean22 = objList0.addAll((java.util.Collection<org.jsoup.nodes.Node>) nodeList20);
        java.util.ListIterator<java.lang.Object> objItor23 = objList0.listIterator();
        objList0.addFirst((java.lang.Object) "[    ^=hi!]");
        java.lang.Object obj26 = objList0.getLast();
        org.jsoup.safety.Whitelist whitelist27 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist29 = whitelist27.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner30 = new org.jsoup.safety.Cleaner(whitelist29);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining33 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document35 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document39 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList41 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document39, "hi!");
        org.jsoup.nodes.Element element43 = document39.tagName("hi!");
        org.jsoup.nodes.Element element45 = document39.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings46 = document39.outputSettings();
        boolean boolean47 = attributeWithValueContaining33.matches((org.jsoup.nodes.Element) document35, (org.jsoup.nodes.Element) document39);
        org.jsoup.nodes.Document document48 = cleaner30.clean(document39);
        org.jsoup.nodes.Document document52 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList54 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document52, "hi!");
        org.jsoup.nodes.Element element56 = document52.tagName("hi!");
        org.jsoup.nodes.Element element58 = document52.append("");
        java.lang.String str59 = document52.toString();
        java.lang.String str60 = document52.id();
        org.jsoup.nodes.Node node61 = document52.parent();
        org.jsoup.nodes.Document document62 = cleaner30.clean(document52);
        java.lang.String str63 = document52.title();
        org.jsoup.nodes.Element element66 = document52.attr(":lt(32)=\"\nhi!\"", "[<html>\n <head></head>\n <body>   \n </body>\n</html>*=:lt(32)]");
        boolean boolean67 = objList0.add((java.lang.Object) element66);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objItor6);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(nodeStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objItor23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "\nhi!");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "\nhi!");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "\nhi!");
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist29);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(nodeList41);
        org.junit.Assert.assertNotNull(element43);
        org.junit.Assert.assertNotNull(element45);
        org.junit.Assert.assertNotNull(outputSettings46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(nodeList54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str59, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #930
20: aastore
21: invokevirtual #7
24: pop
25: new           #88
28: dup
29: invokespecial #89
32: astore_1
33: aload_1
34: ldc           #43
36: invokevirtual #90
39: istore_2
40: aload_1
41: invokevirtual #91
44: astore_3
45: new           #88
48: dup
49: invokespecial #89
52: astore        4
54: aload         4
56: invokevirtual #402
59: astore        5
61: aload         4
63: invokevirtual #403
66: astore        6
68: aload_1
69: aload         6
71: invokevirtual #93
74: ldc           #25
76: ldc           #12
78: invokestatic  #26
81: astore        7
83: aload         7
85: invokevirtual #166
88: astore        8
90: aload         8
92: ldc           #109
94: invokevirtual #404
97: astore        9
99: aload_1
100: ldc           #109
102: invokevirtual #130
105: istore        10
107: ldc           #25
109: ldc           #12
111: invokestatic  #26
114: astore        11
116: ldc           #12
118: aload         11
120: ldc           #12
122: invokestatic  #27
125: astore        12
127: aload         12
129: invokeinterface #405,  1
134: astore        13
136: aload_1
137: aload         12
139: invokevirtual #406
142: istore        14
144: aload_1
145: invokevirtual #403
148: astore        15
150: aload_1
151: ldc           #173
153: invokevirtual #93
156: aload_1
157: invokevirtual #569
160: astore        16
162: invokestatic  #8
165: astore        17
167: aload         17
169: iconst_1
170: invokevirtual #9
173: astore        18
175: new           #40
178: dup
179: aload         18
181: invokespecial #41
184: astore        19
186: new           #42
189: dup
190: ldc           #43
192: ldc           #32
194: invokespecial #44
197: astore        20
199: ldc           #12
201: invokestatic  #45
204: astore        21
206: ldc           #25
208: ldc           #12
210: invokestatic  #26
213: astore        22
215: ldc           #12
217: aload         22
219: ldc           #12
221: invokestatic  #27
224: astore        23
226: aload         22
228: ldc           #12
230: invokevirtual #28
233: astore        24
235: aload         22
237: ldc           #25
239: invokevirtual #29
242: astore        25
244: aload         22
246: invokevirtual #30
249: astore        26
251: aload         20
253: aload         21
255: aload         22
257: invokevirtual #46
260: istore        27
262: aload         19
264: aload         22
266: invokevirtual #47
269: astore        28
271: ldc           #25
273: ldc           #12
275: invokestatic  #26
278: astore        29
280: ldc           #12
282: aload         29
284: ldc           #12
286: invokestatic  #27
289: astore        30
291: aload         29
293: ldc           #12
295: invokevirtual #28
298: astore        31
300: aload         29
302: ldc           #25
304: invokevirtual #29
307: astore        32
309: aload         29
311: invokevirtual #72
314: astore        33
316: aload         29
318: invokevirtual #73
321: astore        34
323: aload         29
325: invokevirtual #74
328: astore        35
330: aload         19
332: aload         29
334: invokevirtual #47
337: astore        36
339: aload         29
341: invokevirtual #448
344: astore        37
346: aload         29
348: ldc           #240
350: ldc           #228
352: invokevirtual #56
355: astore        38
357: aload_1
358: aload         38
360: invokevirtual #857
363: istore        39
365: new           #16
368: dup
369: invokespecial #17
372: ldc           #18
374: invokevirtual #19
377: iload_2
378: invokevirtual #20
381: ldc           #21
383: invokevirtual #19
386: iconst_0
387: invokevirtual #20
390: ldc           #18
392: invokevirtual #19
395: invokevirtual #22
398: iload_2
399: ifne          406
402: iconst_1
403: goto          407
406: iconst_0
407: invokestatic  #23
410: aload_3
411: invokestatic  #79
414: aload         5
416: invokestatic  #79
419: aload         6
421: invokestatic  #15
424: aload         7
426: invokestatic  #15
429: aload         8
431: invokestatic  #15
434: aload         9
436: invokestatic  #15
439: new           #16
442: dup
443: invokespecial #17
446: ldc           #18
448: invokevirtual #19
451: iload         10
453: invokevirtual #134
456: ldc           #21
458: invokevirtual #19
461: iconst_m1
462: invokevirtual #134
465: ldc           #18
467: invokevirtual #19
470: invokevirtual #22
473: iload         10
475: iconst_m1
476: if_icmpne     483
479: iconst_1
480: goto          484
483: iconst_0
484: invokestatic  #23
487: aload         11
489: invokestatic  #15
492: aload         12
494: invokestatic  #15
497: aload         13
499: invokestatic  #15
502: new           #16
505: dup
506: invokespecial #17
509: ldc           #18
511: invokevirtual #19
514: iload         14
516: invokevirtual #20
519: ldc           #21
521: invokevirtual #19
524: iconst_1
525: invokevirtual #20
528: ldc           #18
530: invokevirtual #19
533: invokevirtual #22
536: iload         14
538: iconst_1
539: if_icmpne     546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #23
550: aload         15
552: invokestatic  #15
555: aload         16
557: invokestatic  #15
560: aload         16
562: invokevirtual #571
565: ldc           #98
567: invokestatic  #290
570: aload         16
572: invokestatic  #572
575: ldc           #98
577: invokestatic  #290
580: aload         16
582: invokestatic  #573
585: ldc           #98
587: invokestatic  #290
590: aload         17
592: invokestatic  #15
595: aload         18
597: invokestatic  #15
600: aload         21
602: invokestatic  #15
605: aload         22
607: invokestatic  #15
610: aload         23
612: invokestatic  #15
615: aload         24
617: invokestatic  #15
620: aload         25
622: invokestatic  #15
625: aload         26
627: invokestatic  #15
630: new           #16
633: dup
634: invokespecial #17
637: ldc           #18
639: invokevirtual #19
642: iload         27
644: invokevirtual #20
647: ldc           #21
649: invokevirtual #19
652: iconst_0
653: invokevirtual #20
656: ldc           #18
658: invokevirtual #19
661: invokevirtual #22
664: iload         27
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #23
677: aload         28
679: invokestatic  #15
682: aload         29
684: invokestatic  #15
687: aload         30
689: invokestatic  #15
692: aload         31
694: invokestatic  #15
697: aload         32
699: invokestatic  #15
702: new           #16
705: dup
706: invokespecial #17
709: ldc           #18
711: invokevirtual #19
714: aload         33
716: invokevirtual #19
719: ldc           #78
721: invokevirtual #19
724: invokevirtual #22
727: aload         33
729: ldc           #10
731: invokestatic  #68
734: new           #16
737: dup
738: invokespecial #17
741: ldc           #18
743: invokevirtual #19
746: aload         34
748: invokevirtual #19
751: ldc           #67
753: invokevirtual #19
756: invokevirtual #22
759: aload         34
761: ldc           #25
763: invokestatic  #68
766: aload         35
768: invokestatic  #79
771: aload         36
773: invokestatic  #15
776: new           #16
779: dup
780: invokespecial #17
783: ldc           #18
785: invokevirtual #19
788: aload         37
790: invokevirtual #19
793: ldc           #67
795: invokevirtual #19
798: invokevirtual #22
801: aload         37
803: ldc           #25
805: invokestatic  #68
808: aload         38
810: invokestatic  #15
813: new           #16
816: dup
817: invokespecial #17
820: ldc           #18
822: invokevirtual #19
825: iload         39
827: invokevirtual #20
830: ldc           #21
832: invokevirtual #19
835: iconst_1
836: invokevirtual #20
839: ldc           #18
841: invokevirtual #19
844: invokevirtual #22
847: iload         39
849: iconst_1
850: if_icmpne     857
853: iconst_1
854: goto          858
857: iconst_0
858: invokestatic  #23
861: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test315
Start line: 17131
End line: 17191
Method source code: 
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        org.jsoup.safety.Whitelist whitelist5 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist7 = whitelist5.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist9 = whitelist7.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist13 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str14 = org.jsoup.Jsoup.clean(":lt(32)", whitelist13);
        org.jsoup.safety.Whitelist whitelist18 = whitelist13.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray25 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist26 = whitelist13.addTags(strArray25);
        org.jsoup.safety.Whitelist whitelist27 = whitelist9.addProtocols(":matchesOwn(null", "hi!", strArray25);
        org.jsoup.safety.Whitelist whitelist28 = whitelist2.addAttributes("[^hi!]", strArray25);
        org.jsoup.safety.Whitelist whitelist32 = whitelist2.addEnforcedAttribute("*", "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "\n<!---->");
        org.jsoup.safety.Whitelist whitelist35 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist39 = whitelist37.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist43 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str44 = org.jsoup.Jsoup.clean(":lt(32)", whitelist43);
        org.jsoup.safety.Whitelist whitelist48 = whitelist43.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray55 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist56 = whitelist43.addTags(strArray55);
        org.jsoup.safety.Whitelist whitelist57 = whitelist39.addProtocols(":matchesOwn(null", "hi!", strArray55);
        java.lang.String[] strArray66 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean67 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray66);
        org.jsoup.safety.Whitelist whitelist68 = whitelist57.addProtocols("\n<!--hi!-->", "#document", strArray66);
        org.jsoup.safety.Whitelist whitelist69 = whitelist2.addProtocols("<html>\n <head></head>\n <body>\n </body>\n</html>", "[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]", strArray66);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray66, "<!DOCTYPE [hi!=.<html>\n <head></head>\n <body></body>\n</html>] PUBLIC \":contains(:gt(100)\" \":lt(32)=\"\"=\".\"\">");
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray66);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray66);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray66);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray66, ":contains(:matchesown(null");
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertNotNull(whitelist7);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + ":lt(32)" + "'", str14, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(whitelist26);
        org.junit.Assert.assertNotNull(whitelist27);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(whitelist39);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + ":lt(32)" + "'", str44, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist48);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(whitelist68);
        org.junit.Assert.assertNotNull(whitelist69);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #931
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: invokestatic  #8
41: astore_3
42: aload_3
43: iconst_1
44: invokevirtual #9
47: astore        4
49: aload         4
51: iconst_0
52: invokevirtual #9
55: astore        5
57: invokestatic  #118
60: astore        6
62: ldc           #43
64: aload         6
66: invokestatic  #81
69: astore        7
71: aload         6
73: ldc           #43
75: ldc           #12
77: ldc           #32
79: invokevirtual #11
82: astore        8
84: bipush        6
86: anewarray     #119
89: dup
90: iconst_0
91: ldc           #109
93: aastore
94: dup
95: iconst_1
96: ldc           #10
98: aastore
99: dup
100: iconst_2
101: ldc           #13
103: aastore
104: dup
105: iconst_3
106: ldc           #50
108: aastore
109: dup
110: iconst_4
111: ldc           #12
113: aastore
114: dup
115: iconst_5
116: ldc           #120
118: aastore
119: astore        9
121: aload         6
123: aload         9
125: invokevirtual #121
128: astore        10
130: aload         5
132: ldc           #38
134: ldc           #12
136: aload         9
138: invokevirtual #122
141: astore        11
143: aload_1
144: ldc           #50
146: aload         9
148: invokevirtual #127
151: astore        12
153: aload_1
154: ldc           #126
156: ldc           #109
158: ldc           #120
160: invokevirtual #11
163: astore        13
165: invokestatic  #8
168: astore        14
170: aload         14
172: iconst_1
173: invokevirtual #9
176: astore        15
178: aload         15
180: iconst_0
181: invokevirtual #9
184: astore        16
186: invokestatic  #118
189: astore        17
191: ldc           #43
193: aload         17
195: invokestatic  #81
198: astore        18
200: aload         17
202: ldc           #43
204: ldc           #12
206: ldc           #32
208: invokevirtual #11
211: astore        19
213: bipush        6
215: anewarray     #119
218: dup
219: iconst_0
220: ldc           #109
222: aastore
223: dup
224: iconst_1
225: ldc           #10
227: aastore
228: dup
229: iconst_2
230: ldc           #13
232: aastore
233: dup
234: iconst_3
235: ldc           #50
237: aastore
238: dup
239: iconst_4
240: ldc           #12
242: aastore
243: dup
244: iconst_5
245: ldc           #120
247: aastore
248: astore        20
250: aload         17
252: aload         20
254: invokevirtual #121
257: astore        21
259: aload         16
261: ldc           #38
263: ldc           #12
265: aload         20
267: invokevirtual #122
270: astore        22
272: iconst_5
273: anewarray     #119
276: dup
277: iconst_0
278: ldc           #13
280: aastore
281: dup
282: iconst_1
283: ldc           #32
285: aastore
286: dup
287: iconst_2
288: ldc           #10
290: aastore
291: dup
292: iconst_3
293: ldc           #43
295: aastore
296: dup
297: iconst_4
298: ldc           #58
300: aastore
301: astore        23
303: ldc           #10
305: aload         23
307: invokestatic  #123
310: istore        24
312: aload         22
314: ldc           #84
316: ldc           #13
318: aload         23
320: invokevirtual #122
323: astore        25
325: aload_1
326: ldc           #157
328: ldc_w         #273
331: aload         23
333: invokevirtual #122
336: astore        26
338: aload         23
340: checkcast     #124
343: ldc_w         #274
346: invokestatic  #245
349: aload         23
351: checkcast     #124
354: invokestatic  #125
357: aload         23
359: checkcast     #124
362: invokestatic  #125
365: aload         23
367: checkcast     #124
370: invokestatic  #125
373: aload         23
375: checkcast     #124
378: ldc_w         #527
381: invokestatic  #245
384: aload_1
385: invokestatic  #15
388: new           #16
391: dup
392: invokespecial #17
395: ldc           #18
397: invokevirtual #19
400: aload_2
401: invokevirtual #19
404: ldc           #111
406: invokevirtual #19
409: invokevirtual #22
412: aload_2
413: ldc           #65
415: invokestatic  #68
418: aload_3
419: invokestatic  #15
422: aload         4
424: invokestatic  #15
427: aload         5
429: invokestatic  #15
432: aload         6
434: invokestatic  #15
437: new           #16
440: dup
441: invokespecial #17
444: ldc           #18
446: invokevirtual #19
449: aload         7
451: invokevirtual #19
454: ldc           #128
456: invokevirtual #19
459: invokevirtual #22
462: aload         7
464: ldc           #43
466: invokestatic  #68
469: aload         8
471: invokestatic  #15
474: aload         9
476: invokestatic  #15
479: aload         10
481: invokestatic  #15
484: aload         11
486: invokestatic  #15
489: aload         12
491: invokestatic  #15
494: aload         13
496: invokestatic  #15
499: aload         14
501: invokestatic  #15
504: aload         15
506: invokestatic  #15
509: aload         16
511: invokestatic  #15
514: aload         17
516: invokestatic  #15
519: new           #16
522: dup
523: invokespecial #17
526: ldc           #18
528: invokevirtual #19
531: aload         18
533: invokevirtual #19
536: ldc           #128
538: invokevirtual #19
541: invokevirtual #22
544: aload         18
546: ldc           #43
548: invokestatic  #68
551: aload         19
553: invokestatic  #15
556: aload         20
558: invokestatic  #15
561: aload         21
563: invokestatic  #15
566: aload         22
568: invokestatic  #15
571: aload         23
573: invokestatic  #15
576: new           #16
579: dup
580: invokespecial #17
583: ldc           #18
585: invokevirtual #19
588: iload         24
590: invokevirtual #20
593: ldc           #21
595: invokevirtual #19
598: iconst_1
599: invokevirtual #20
602: ldc           #18
604: invokevirtual #19
607: invokevirtual #22
610: iload         24
612: iconst_1
613: if_icmpne     620
616: iconst_1
617: goto          621
620: iconst_0
621: invokestatic  #23
624: aload         25
626: invokestatic  #15
629: aload         26
631: invokestatic  #15
634: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test316
Start line: 17194
End line: 17290
Method source code: 
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        org.jsoup.select.Evaluator.AttributeWithValueStarting attributeWithValueStarting2 = new org.jsoup.select.Evaluator.AttributeWithValueStarting("<html>\n <head></head>\n <body></body>\n</html>", "<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = element9.toggleClass("#document");
        org.jsoup.nodes.Element element13 = element11.tagName("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document15 = org.jsoup.Jsoup.parseBodyFragment("");
        boolean boolean16 = attributeWithValueStarting2.matches(element11, (org.jsoup.nodes.Element) document15);
        org.jsoup.safety.Whitelist whitelist21 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes23 = whitelist21.getEnforcedAttributes("#text");
        java.lang.String str24 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist21);
        java.lang.String str25 = org.jsoup.Jsoup.clean("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>^=hi!]", "[]", whitelist21);
        org.jsoup.select.Evaluator.Class class28 = new org.jsoup.select.Evaluator.Class("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document32 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList34 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document32, "hi!");
        org.jsoup.nodes.Element element36 = document32.tagName("hi!");
        org.jsoup.nodes.Element element38 = document32.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings39 = document32.outputSettings();
        org.jsoup.select.Elements elements41 = document32.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Element element43 = document32.getElementById("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Attributes attributes44 = document32.attributes();
        org.jsoup.nodes.Element element46 = document32.prepend("[^hi!]");
        org.jsoup.nodes.Document document50 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList52 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document50, "hi!");
        org.jsoup.nodes.Element element54 = document50.tagName("hi!");
        org.jsoup.nodes.Element element56 = document50.append("");
        org.jsoup.nodes.Element element59 = document50.attr("#document", "#document");
        org.jsoup.nodes.Element element60 = document50.body();
        boolean boolean61 = class28.matches((org.jsoup.nodes.Element) document32, (org.jsoup.nodes.Element) document50);
        org.jsoup.nodes.Attribute attribute64 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        boolean boolean65 = whitelist21.isSafeAttribute(":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", (org.jsoup.nodes.Element) document32, attribute64);
        org.jsoup.nodes.Document document69 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList71 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document69, "hi!");
        org.jsoup.nodes.Element element73 = document69.text("");
        org.jsoup.select.Elements elements76 = document69.getElementsByAttributeValueEnding("[^hi!]", "#document");
        org.jsoup.nodes.Element element78 = document69.prependText("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        java.util.Map<java.lang.String, java.lang.String> strMap79 = element78.dataset();
        boolean boolean80 = attributeWithValueStarting2.matches((org.jsoup.nodes.Element) document32, element78);
        org.jsoup.nodes.Element element81 = null;
        org.jsoup.nodes.Document document84 = org.jsoup.parser.Parser.parseBodyFragment("", ":contains(:matchesown(null");
        boolean boolean85 = attributeWithValueStarting2.matches(element81, (org.jsoup.nodes.Element) document84);
        org.jsoup.nodes.Document document89 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList91 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document89, "hi!");
        org.jsoup.select.Elements elements93 = document89.getElementsByAttribute("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document96 = org.jsoup.Jsoup.parseBodyFragment(":contains(:gt(100)", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        boolean boolean97 = document96.hasText();
        boolean boolean98 = attributeWithValueStarting2.matches((org.jsoup.nodes.Element) document89, (org.jsoup.nodes.Element) document96);
        java.lang.String str99 = attributeWithValueStarting2.toString();
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(attributes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[    ^=hi!]" + "'", str25, "[    ^=hi!]");
        org.junit.Assert.assertNotNull(document32);
        org.junit.Assert.assertNotNull(nodeList34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(outputSettings39);
        org.junit.Assert.assertNotNull(elements41);
        org.junit.Assert.assertNull(element43);
        org.junit.Assert.assertNotNull(attributes44);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(nodeList52);
        org.junit.Assert.assertNotNull(element54);
        org.junit.Assert.assertNotNull(element56);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(element60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(attribute64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(document69);
        org.junit.Assert.assertNotNull(nodeList71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(elements76);
        org.junit.Assert.assertNotNull(element78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(document84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertNotNull(nodeList91);
        org.junit.Assert.assertNotNull(elements93);
        org.junit.Assert.assertNotNull(document96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]" + "'", str99, "[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #932
20: aastore
21: invokevirtual #7
24: pop
25: new           #253
28: dup
29: ldc           #10
31: ldc           #254
33: invokespecial #255
36: astore_1
37: ldc           #25
39: ldc           #12
41: invokestatic  #26
44: astore_2
45: ldc           #12
47: aload_2
48: ldc           #12
50: invokestatic  #27
53: astore_3
54: aload_2
55: invokevirtual #103
58: astore        4
60: aload         4
62: ldc           #13
64: invokevirtual #177
67: astore        5
69: aload         5
71: ldc           #249
73: invokevirtual #256
76: astore        6
78: ldc           #25
80: invokestatic  #193
83: astore        7
85: aload_1
86: aload         5
88: aload         7
90: invokevirtual #257
93: istore        8
95: invokestatic  #118
98: astore        9
100: aload         9
102: ldc           #51
104: invokevirtual #150
107: astore        10
109: ldc           #25
111: ldc           #157
113: aload         9
115: invokestatic  #94
118: astore        11
120: ldc           #158
122: ldc           #159
124: aload         9
126: invokestatic  #94
129: astore        12
131: new           #160
134: dup
135: ldc           #10
137: invokespecial #161
140: astore        13
142: ldc           #25
144: ldc           #12
146: invokestatic  #26
149: astore        14
151: ldc           #12
153: aload         14
155: ldc           #12
157: invokestatic  #27
160: astore        15
162: aload         14
164: ldc           #12
166: invokevirtual #28
169: astore        16
171: aload         14
173: ldc           #25
175: invokevirtual #29
178: astore        17
180: aload         14
182: invokevirtual #30
185: astore        18
187: aload         14
189: iconst_m1
190: invokevirtual #162
193: astore        19
195: aload         14
197: ldc           #10
199: invokevirtual #163
202: astore        20
204: aload         14
206: invokevirtual #164
209: astore        21
211: aload         14
213: ldc           #50
215: invokevirtual #165
218: astore        22
220: ldc           #25
222: ldc           #12
224: invokestatic  #26
227: astore        23
229: ldc           #12
231: aload         23
233: ldc           #12
235: invokestatic  #27
238: astore        24
240: aload         23
242: ldc           #12
244: invokevirtual #28
247: astore        25
249: aload         23
251: ldc           #25
253: invokevirtual #29
256: astore        26
258: aload         23
260: ldc           #13
262: ldc           #13
264: invokevirtual #56
267: astore        27
269: aload         23
271: invokevirtual #166
274: astore        28
276: aload         13
278: aload         14
280: aload         23
282: invokevirtual #167
285: istore        29
287: ldc           #114
289: ldc           #25
291: invokestatic  #168
294: astore        30
296: aload         9
298: ldc           #110
300: aload         14
302: aload         30
304: invokevirtual #169
307: istore        31
309: ldc           #25
311: ldc           #12
313: invokestatic  #26
316: astore        32
318: ldc           #12
320: aload         32
322: ldc           #12
324: invokestatic  #27
327: astore        33
329: aload         32
331: ldc           #25
333: invokevirtual #64
336: astore        34
338: aload         32
340: ldc           #50
342: ldc           #13
344: invokevirtual #153
347: astore        35
349: aload         32
351: ldc           #109
353: invokevirtual #258
356: astore        36
358: aload         36
360: invokevirtual #259
363: astore        37
365: aload_1
366: aload         14
368: aload         36
370: invokevirtual #257
373: istore        38
375: aconst_null
376: astore        39
378: ldc           #25
380: ldc_w         #527
383: invokestatic  #52
386: astore        40
388: aload_1
389: aload         39
391: aload         40
393: invokevirtual #257
396: istore        41
398: ldc           #25
400: ldc           #12
402: invokestatic  #26
405: astore        42
407: ldc           #12
409: aload         42
411: ldc           #12
413: invokestatic  #27
416: astore        43
418: aload         42
420: ldc           #109
422: invokevirtual #458
425: astore        44
427: ldc           #214
429: ldc           #55
431: invokestatic  #933
434: astore        45
436: aload         45
438: invokevirtual #731
441: istore        46
443: aload_1
444: aload         42
446: aload         45
448: invokevirtual #257
451: istore        47
453: aload_1
454: invokevirtual #687
457: astore        48
459: aload_2
460: invokestatic  #15
463: aload_3
464: invokestatic  #15
467: aload         4
469: invokestatic  #15
472: aload         5
474: invokestatic  #15
477: aload         6
479: invokestatic  #15
482: aload         7
484: invokestatic  #15
487: new           #16
490: dup
491: invokespecial #17
494: ldc           #18
496: invokevirtual #19
499: iload         8
501: invokevirtual #20
504: ldc           #21
506: invokevirtual #19
509: iconst_0
510: invokevirtual #20
513: ldc           #18
515: invokevirtual #19
518: invokevirtual #22
521: iload         8
523: ifne          530
526: iconst_1
527: goto          531
530: iconst_0
531: invokestatic  #23
534: aload         9
536: invokestatic  #15
539: aload         10
541: invokestatic  #15
544: new           #16
547: dup
548: invokespecial #17
551: ldc           #18
553: invokevirtual #19
556: aload         11
558: invokevirtual #19
561: ldc           #67
563: invokevirtual #19
566: invokevirtual #22
569: aload         11
571: ldc           #25
573: invokestatic  #68
576: new           #16
579: dup
580: invokespecial #17
583: ldc           #18
585: invokevirtual #19
588: aload         12
590: invokevirtual #19
593: ldc           #172
595: invokevirtual #19
598: invokevirtual #22
601: aload         12
603: ldc           #173
605: invokestatic  #68
608: aload         14
610: invokestatic  #15
613: aload         15
615: invokestatic  #15
618: aload         16
620: invokestatic  #15
623: aload         17
625: invokestatic  #15
628: aload         18
630: invokestatic  #15
633: aload         19
635: invokestatic  #15
638: aload         20
640: invokestatic  #79
643: aload         21
645: invokestatic  #15
648: aload         22
650: invokestatic  #15
653: aload         23
655: invokestatic  #15
658: aload         24
660: invokestatic  #15
663: aload         25
665: invokestatic  #15
668: aload         26
670: invokestatic  #15
673: aload         27
675: invokestatic  #15
678: aload         28
680: invokestatic  #15
683: new           #16
686: dup
687: invokespecial #17
690: ldc           #18
692: invokevirtual #19
695: iload         29
697: invokevirtual #20
700: ldc           #21
702: invokevirtual #19
705: iconst_0
706: invokevirtual #20
709: ldc           #18
711: invokevirtual #19
714: invokevirtual #22
717: iload         29
719: ifne          726
722: iconst_1
723: goto          727
726: iconst_0
727: invokestatic  #23
730: aload         30
732: invokestatic  #15
735: new           #16
738: dup
739: invokespecial #17
742: ldc           #18
744: invokevirtual #19
747: iload         31
749: invokevirtual #20
752: ldc           #21
754: invokevirtual #19
757: iconst_0
758: invokevirtual #20
761: ldc           #18
763: invokevirtual #19
766: invokevirtual #22
769: iload         31
771: ifne          778
774: iconst_1
775: goto          779
778: iconst_0
779: invokestatic  #23
782: aload         32
784: invokestatic  #15
787: aload         33
789: invokestatic  #15
792: aload         34
794: invokestatic  #15
797: aload         35
799: invokestatic  #15
802: aload         36
804: invokestatic  #15
807: aload         37
809: invokestatic  #15
812: new           #16
815: dup
816: invokespecial #17
819: ldc           #18
821: invokevirtual #19
824: iload         38
826: invokevirtual #20
829: ldc           #21
831: invokevirtual #19
834: iconst_0
835: invokevirtual #20
838: ldc           #18
840: invokevirtual #19
843: invokevirtual #22
846: iload         38
848: ifne          855
851: iconst_1
852: goto          856
855: iconst_0
856: invokestatic  #23
859: aload         40
861: invokestatic  #15
864: new           #16
867: dup
868: invokespecial #17
871: ldc           #18
873: invokevirtual #19
876: iload         41
878: invokevirtual #20
881: ldc           #21
883: invokevirtual #19
886: iconst_0
887: invokevirtual #20
890: ldc           #18
892: invokevirtual #19
895: invokevirtual #22
898: iload         41
900: ifne          907
903: iconst_1
904: goto          908
907: iconst_0
908: invokestatic  #23
911: aload         42
913: invokestatic  #15
916: aload         43
918: invokestatic  #15
921: aload         44
923: invokestatic  #15
926: aload         45
928: invokestatic  #15
931: new           #16
934: dup
935: invokespecial #17
938: ldc           #18
940: invokevirtual #19
943: iload         46
945: invokevirtual #20
948: ldc           #21
950: invokevirtual #19
953: iconst_1
954: invokevirtual #20
957: ldc           #18
959: invokevirtual #19
962: invokevirtual #22
965: iload         46
967: iconst_1
968: if_icmpne     975
971: iconst_1
972: goto          976
975: iconst_0
976: invokestatic  #23
979: new           #16
982: dup
983: invokespecial #17
986: ldc           #18
988: invokevirtual #19
991: iload         47
993: invokevirtual #20
996: ldc           #21
998: invokevirtual #19
1001: iconst_0
1002: invokevirtual #20
1005: ldc           #18
1007: invokevirtual #19
1010: invokevirtual #22
1013: iload         47
1015: ifne          1022
1018: iconst_1
1019: goto          1023
1022: iconst_0
1023: invokestatic  #23
1026: new           #16
1029: dup
1030: invokespecial #17
1033: ldc           #18
1035: invokevirtual #19
1038: aload         48
1040: invokevirtual #19
1043: ldc_w         #689
1046: invokevirtual #19
1049: invokevirtual #22
1052: aload         48
1054: ldc           #82
1056: invokestatic  #68
1059: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test317
Start line: 17293
End line: 17363
Method source code: 
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str4 = org.jsoup.Jsoup.clean(":lt(32)", whitelist3);
        boolean boolean6 = whitelist3.isSafeTag("");
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList12 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document10, "hi!");
        org.jsoup.nodes.Element element13 = document10.empty();
        org.jsoup.nodes.Element element15 = document10.removeClass("hi!");
        org.jsoup.nodes.Document document19 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList21 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document19, "hi!");
        org.jsoup.nodes.Element element23 = document19.tagName("hi!");
        org.jsoup.nodes.Element element25 = document19.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = document19.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings26.prettyPrint(false);
        org.jsoup.nodes.Document document29 = document10.outputSettings(outputSettings28);
        java.lang.String str30 = org.jsoup.Jsoup.clean("[:lt(32)]", "*", whitelist3, outputSettings28);
        org.jsoup.safety.Whitelist whitelist33 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str34 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist33);
        org.jsoup.safety.Whitelist whitelist36 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist38 = whitelist36.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist40 = whitelist38.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist44 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str45 = org.jsoup.Jsoup.clean(":lt(32)", whitelist44);
        org.jsoup.safety.Whitelist whitelist49 = whitelist44.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray56 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist57 = whitelist44.addTags(strArray56);
        org.jsoup.safety.Whitelist whitelist58 = whitelist40.addProtocols(":matchesOwn(null", "hi!", strArray56);
        java.lang.String[] strArray67 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean68 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray67);
        org.jsoup.safety.Whitelist whitelist69 = whitelist58.addProtocols("\n<!--hi!-->", "#document", strArray67);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray67);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray67);
        org.jsoup.safety.Whitelist whitelist72 = whitelist33.addAttributes("*", strArray67);
        org.jsoup.safety.Whitelist whitelist73 = whitelist3.addTags(strArray67);
        org.jsoup.safety.Cleaner cleaner74 = new org.jsoup.safety.Cleaner(whitelist3);
        org.jsoup.safety.Whitelist whitelist78 = whitelist3.addEnforcedAttribute(":matches(null", "html", "[    *=:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":lt(32)" + "'", str4, ":lt(32)");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(nodeList21);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[:lt(32)]" + "'", str30, "[:lt(32)]");
        org.junit.Assert.assertNotNull(whitelist33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!$=   ]" + "'", str34, "[hi!$=   ]");
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist38);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertNotNull(whitelist44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":lt(32)" + "'", str45, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist49);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(whitelist57);
        org.junit.Assert.assertNotNull(whitelist58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(whitelist69);
        org.junit.Assert.assertNotNull(whitelist72);
        org.junit.Assert.assertNotNull(whitelist73);
        org.junit.Assert.assertNotNull(whitelist78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #934
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: ldc           #43
31: aload_1
32: invokestatic  #81
35: astore_2
36: aload_1
37: ldc           #25
39: invokevirtual #83
42: istore_3
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore        4
52: ldc           #12
54: aload         4
56: ldc           #12
58: invokestatic  #27
61: astore        5
63: aload         4
65: invokevirtual #103
68: astore        6
70: aload         4
72: ldc           #12
74: invokevirtual #59
77: astore        7
79: ldc           #25
81: ldc           #12
83: invokestatic  #26
86: astore        8
88: ldc           #12
90: aload         8
92: ldc           #12
94: invokestatic  #27
97: astore        9
99: aload         8
101: ldc           #12
103: invokevirtual #28
106: astore        10
108: aload         8
110: ldc           #25
112: invokevirtual #29
115: astore        11
117: aload         8
119: invokevirtual #30
122: astore        12
124: aload         12
126: iconst_0
127: invokevirtual #31
130: astore        13
132: aload         4
134: aload         13
136: invokevirtual #175
139: astore        14
141: ldc           #58
143: ldc           #126
145: aload_1
146: aload         13
148: invokestatic  #33
151: astore        15
153: invokestatic  #8
156: astore        16
158: ldc           #109
160: ldc           #110
162: aload         16
164: invokestatic  #94
167: astore        17
169: invokestatic  #8
172: astore        18
174: aload         18
176: iconst_1
177: invokevirtual #9
180: astore        19
182: aload         19
184: iconst_0
185: invokevirtual #9
188: astore        20
190: invokestatic  #118
193: astore        21
195: ldc           #43
197: aload         21
199: invokestatic  #81
202: astore        22
204: aload         21
206: ldc           #43
208: ldc           #12
210: ldc           #32
212: invokevirtual #11
215: astore        23
217: bipush        6
219: anewarray     #119
222: dup
223: iconst_0
224: ldc           #109
226: aastore
227: dup
228: iconst_1
229: ldc           #10
231: aastore
232: dup
233: iconst_2
234: ldc           #13
236: aastore
237: dup
238: iconst_3
239: ldc           #50
241: aastore
242: dup
243: iconst_4
244: ldc           #12
246: aastore
247: dup
248: iconst_5
249: ldc           #120
251: aastore
252: astore        24
254: aload         21
256: aload         24
258: invokevirtual #121
261: astore        25
263: aload         20
265: ldc           #38
267: ldc           #12
269: aload         24
271: invokevirtual #122
274: astore        26
276: iconst_5
277: anewarray     #119
280: dup
281: iconst_0
282: ldc           #13
284: aastore
285: dup
286: iconst_1
287: ldc           #32
289: aastore
290: dup
291: iconst_2
292: ldc           #10
294: aastore
295: dup
296: iconst_3
297: ldc           #43
299: aastore
300: dup
301: iconst_4
302: ldc           #58
304: aastore
305: astore        27
307: ldc           #10
309: aload         27
311: invokestatic  #123
314: istore        28
316: aload         26
318: ldc           #84
320: ldc           #13
322: aload         27
324: invokevirtual #122
327: astore        29
329: aload         27
331: checkcast     #124
334: invokestatic  #125
337: aload         27
339: checkcast     #124
342: invokestatic  #125
345: aload         16
347: ldc           #126
349: aload         27
351: invokevirtual #127
354: astore        30
356: aload_1
357: aload         27
359: invokevirtual #121
362: astore        31
364: new           #40
367: dup
368: aload_1
369: invokespecial #41
372: astore        32
374: aload_1
375: ldc_w         #414
378: ldc_w         #376
381: ldc_w         #315
384: invokevirtual #11
387: astore        33
389: aload_1
390: invokestatic  #15
393: new           #16
396: dup
397: invokespecial #17
400: ldc           #18
402: invokevirtual #19
405: aload_2
406: invokevirtual #19
409: ldc           #128
411: invokevirtual #19
414: invokevirtual #22
417: aload_2
418: ldc           #43
420: invokestatic  #68
423: new           #16
426: dup
427: invokespecial #17
430: ldc           #18
432: invokevirtual #19
435: iload_3
436: invokevirtual #20
439: ldc           #21
441: invokevirtual #19
444: iconst_0
445: invokevirtual #20
448: ldc           #18
450: invokevirtual #19
453: invokevirtual #22
456: iload_3
457: ifne          464
460: iconst_1
461: goto          465
464: iconst_0
465: invokestatic  #23
468: aload         4
470: invokestatic  #15
473: aload         5
475: invokestatic  #15
478: aload         6
480: invokestatic  #15
483: aload         7
485: invokestatic  #15
488: aload         8
490: invokestatic  #15
493: aload         9
495: invokestatic  #15
498: aload         10
500: invokestatic  #15
503: aload         11
505: invokestatic  #15
508: aload         12
510: invokestatic  #15
513: aload         13
515: invokestatic  #15
518: aload         14
520: invokestatic  #15
523: new           #16
526: dup
527: invokespecial #17
530: ldc           #18
532: invokevirtual #19
535: aload         15
537: invokevirtual #19
540: ldc           #184
542: invokevirtual #19
545: invokevirtual #22
548: aload         15
550: ldc           #58
552: invokestatic  #68
555: aload         16
557: invokestatic  #15
560: new           #16
563: dup
564: invokespecial #17
567: ldc           #18
569: invokevirtual #19
572: aload         17
574: invokevirtual #19
577: ldc           #111
579: invokevirtual #19
582: invokevirtual #22
585: aload         17
587: ldc           #65
589: invokestatic  #68
592: aload         18
594: invokestatic  #15
597: aload         19
599: invokestatic  #15
602: aload         20
604: invokestatic  #15
607: aload         21
609: invokestatic  #15
612: new           #16
615: dup
616: invokespecial #17
619: ldc           #18
621: invokevirtual #19
624: aload         22
626: invokevirtual #19
629: ldc           #128
631: invokevirtual #19
634: invokevirtual #22
637: aload         22
639: ldc           #43
641: invokestatic  #68
644: aload         23
646: invokestatic  #15
649: aload         24
651: invokestatic  #15
654: aload         25
656: invokestatic  #15
659: aload         26
661: invokestatic  #15
664: aload         27
666: invokestatic  #15
669: new           #16
672: dup
673: invokespecial #17
676: ldc           #18
678: invokevirtual #19
681: iload         28
683: invokevirtual #20
686: ldc           #21
688: invokevirtual #19
691: iconst_1
692: invokevirtual #20
695: ldc           #18
697: invokevirtual #19
700: invokevirtual #22
703: iload         28
705: iconst_1
706: if_icmpne     713
709: iconst_1
710: goto          714
713: iconst_0
714: invokestatic  #23
717: aload         29
719: invokestatic  #15
722: aload         30
724: invokestatic  #15
727: aload         31
729: invokestatic  #15
732: aload         33
734: invokestatic  #15
737: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test318
Start line: 17366
End line: 17389
Method source code: 
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.safety.Whitelist whitelist6 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str7 = org.jsoup.Jsoup.clean(":lt(32)", whitelist6);
        org.jsoup.safety.Whitelist whitelist11 = whitelist6.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray18 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist19 = whitelist6.addTags(strArray18);
        org.jsoup.safety.Whitelist whitelist20 = whitelist2.addAttributes(":gt(100)", strArray18);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray18);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray18);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray18, "[    =hi!]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + ":lt(32)" + "'", str7, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist20);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #935
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: invokestatic  #118
47: astore        4
49: ldc           #43
51: aload         4
53: invokestatic  #81
56: astore        5
58: aload         4
60: ldc           #43
62: ldc           #12
64: ldc           #32
66: invokevirtual #11
69: astore        6
71: bipush        6
73: anewarray     #119
76: dup
77: iconst_0
78: ldc           #109
80: aastore
81: dup
82: iconst_1
83: ldc           #10
85: aastore
86: dup
87: iconst_2
88: ldc           #13
90: aastore
91: dup
92: iconst_3
93: ldc           #50
95: aastore
96: dup
97: iconst_4
98: ldc           #12
100: aastore
101: dup
102: iconst_5
103: ldc           #120
105: aastore
106: astore        7
108: aload         4
110: aload         7
112: invokevirtual #121
115: astore        8
117: aload_2
118: ldc           #92
120: aload         7
122: invokevirtual #127
125: astore        9
127: aload         7
129: checkcast     #124
132: invokestatic  #125
135: aload         7
137: checkcast     #124
140: invokestatic  #125
143: aload         7
145: checkcast     #124
148: ldc_w         #319
151: invokestatic  #245
154: aload_1
155: invokestatic  #15
158: aload_2
159: invokestatic  #15
162: aload         4
164: invokestatic  #15
167: new           #16
170: dup
171: invokespecial #17
174: ldc           #18
176: invokevirtual #19
179: aload         5
181: invokevirtual #19
184: ldc           #128
186: invokevirtual #19
189: invokevirtual #22
192: aload         5
194: ldc           #43
196: invokestatic  #68
199: aload         6
201: invokestatic  #15
204: aload         7
206: invokestatic  #15
209: aload         8
211: invokestatic  #15
214: aload         9
216: invokestatic  #15
219: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test319
Start line: 17392
End line: 17425
Method source code: 
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str3 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist2);
        boolean boolean5 = whitelist2.isSafeTag("");
        org.jsoup.nodes.Document document9 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Document document10 = document9.normalise();
        java.lang.String str11 = document10.title();
        org.jsoup.nodes.Element element13 = document10.text(":matchesOwn(null");
        org.jsoup.nodes.Element element15 = document10.tagName(":eq(1)");
        org.jsoup.nodes.Attribute attribute18 = org.jsoup.nodes.Attribute.createFromEncoded("#comment", "");
        java.lang.String str19 = attribute18.getKey();
        java.lang.String str20 = attribute18.getValue();
        java.lang.String str22 = attribute18.setValue("<hi!></hi!>:contains(:gt(100)<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean23 = whitelist2.isSafeAttribute(".<html>\n <head></head>\n <body></body>\n</html>", element15, attribute18);
        java.lang.String str24 = attribute18.html();
        java.lang.String str25 = attribute18.getKey();
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[hi!$=   ]" + "'", str3, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(document9);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(attribute18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#comment" + "'", str19, "#comment");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#comment=\"&lt;hi!&gt;&lt;/hi!&gt;:contains(:gt(100)&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\"" + "'", str24, "#comment=\"&lt;hi!&gt;&lt;/hi!&gt;:contains(:gt(100)&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#comment" + "'", str25, "#comment");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #936
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: ldc           #109
31: ldc           #110
33: aload_1
34: invokestatic  #94
37: astore_2
38: aload_1
39: ldc           #25
41: invokevirtual #83
44: istore_3
45: ldc           #25
47: ldc           #12
49: invokestatic  #26
52: astore        4
54: aload         4
56: invokevirtual #102
59: astore        5
61: aload         5
63: invokevirtual #448
66: astore        6
68: aload         5
70: ldc           #38
72: invokevirtual #64
75: astore        7
77: aload         5
79: ldc_w         #279
82: invokevirtual #28
85: astore        8
87: ldc           #114
89: ldc           #25
91: invokestatic  #168
94: astore        9
96: aload         9
98: invokevirtual #210
101: astore        10
103: aload         9
105: invokevirtual #582
108: astore        11
110: aload         9
112: ldc_w         #859
115: invokevirtual #514
118: astore        12
120: aload_1
121: ldc           #32
123: aload         8
125: aload         9
127: invokevirtual #169
130: istore        13
132: aload         9
134: invokevirtual #321
137: astore        14
139: aload         9
141: invokevirtual #210
144: astore        15
146: aload_1
147: invokestatic  #15
150: new           #16
153: dup
154: invokespecial #17
157: ldc           #18
159: invokevirtual #19
162: aload_2
163: invokevirtual #19
166: ldc           #111
168: invokevirtual #19
171: invokevirtual #22
174: aload_2
175: ldc           #65
177: invokestatic  #68
180: new           #16
183: dup
184: invokespecial #17
187: ldc           #18
189: invokevirtual #19
192: iload_3
193: invokevirtual #20
196: ldc           #21
198: invokevirtual #19
201: iconst_0
202: invokevirtual #20
205: ldc           #18
207: invokevirtual #19
210: invokevirtual #22
213: iload_3
214: ifne          221
217: iconst_1
218: goto          222
221: iconst_0
222: invokestatic  #23
225: aload         4
227: invokestatic  #15
230: aload         5
232: invokestatic  #15
235: new           #16
238: dup
239: invokespecial #17
242: ldc           #18
244: invokevirtual #19
247: aload         6
249: invokevirtual #19
252: ldc           #67
254: invokevirtual #19
257: invokevirtual #22
260: aload         6
262: ldc           #25
264: invokestatic  #68
267: aload         7
269: invokestatic  #15
272: aload         8
274: invokestatic  #15
277: aload         9
279: invokestatic  #15
282: new           #16
285: dup
286: invokespecial #17
289: ldc           #18
291: invokevirtual #19
294: aload         10
296: invokevirtual #19
299: ldc           #212
301: invokevirtual #19
304: invokevirtual #22
307: aload         10
309: ldc           #114
311: invokestatic  #68
314: new           #16
317: dup
318: invokespecial #17
321: ldc           #18
323: invokevirtual #19
326: aload         11
328: invokevirtual #19
331: ldc           #67
333: invokevirtual #19
336: invokevirtual #22
339: aload         11
341: ldc           #25
343: invokestatic  #68
346: new           #16
349: dup
350: invokespecial #17
353: ldc           #18
355: invokevirtual #19
358: aload         12
360: invokevirtual #19
363: ldc           #67
365: invokevirtual #19
368: invokevirtual #22
371: aload         12
373: ldc           #25
375: invokestatic  #68
378: new           #16
381: dup
382: invokespecial #17
385: ldc           #18
387: invokevirtual #19
390: iload         13
392: invokevirtual #20
395: ldc           #21
397: invokevirtual #19
400: iconst_0
401: invokevirtual #20
404: ldc           #18
406: invokevirtual #19
409: invokevirtual #22
412: iload         13
414: ifne          421
417: iconst_1
418: goto          422
421: iconst_0
422: invokestatic  #23
425: new           #16
428: dup
429: invokespecial #17
432: ldc           #18
434: invokevirtual #19
437: aload         14
439: invokevirtual #19
442: ldc_w         #937
445: invokevirtual #19
448: invokevirtual #22
451: aload         14
453: ldc_w         #938
456: invokestatic  #68
459: new           #16
462: dup
463: invokespecial #17
466: ldc           #18
468: invokevirtual #19
471: aload         15
473: invokevirtual #19
476: ldc           #212
478: invokevirtual #19
481: invokevirtual #22
484: aload         15
486: ldc           #114
488: invokestatic  #68
491: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test320
Start line: 17428
End line: 17535
Method source code: 
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        org.jsoup.select.Evaluator.Id id1 = new org.jsoup.select.Evaluator.Id("hi!");
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList7 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document5, "hi!");
        org.jsoup.nodes.Element element9 = document5.tagName("hi!");
        org.jsoup.nodes.Element element11 = document5.append("");
        java.lang.String str12 = element11.toString();
        boolean boolean14 = element11.hasAttr("");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element22 = document18.tagName("hi!");
        org.jsoup.nodes.Element element24 = document18.append("");
        org.jsoup.nodes.Element element26 = element24.removeClass("hi!");
        org.jsoup.select.Elements elements29 = element24.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Element element31 = element24.prependElement("hi!");
        boolean boolean32 = element31.hasText();
        element31.remove();
        boolean boolean34 = id1.matches(element11, element31);
        org.jsoup.safety.Whitelist whitelist35 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner38 = new org.jsoup.safety.Cleaner(whitelist37);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining41 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document43 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList49 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document47, "hi!");
        org.jsoup.nodes.Element element51 = document47.tagName("hi!");
        org.jsoup.nodes.Element element53 = document47.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = document47.outputSettings();
        boolean boolean55 = attributeWithValueContaining41.matches((org.jsoup.nodes.Element) document43, (org.jsoup.nodes.Element) document47);
        org.jsoup.nodes.Document document56 = cleaner38.clean(document47);
        org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str59 = document58.toString();
        java.lang.String str60 = document58.baseUri();
        org.jsoup.nodes.Document document61 = cleaner38.clean(document58);
        org.jsoup.nodes.Document document62 = document61.clone();
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList68 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document66, "hi!");
        org.jsoup.nodes.Element element69 = document66.empty();
        org.jsoup.nodes.Element element71 = document66.removeClass("hi!");
        org.jsoup.nodes.Element element73 = element71.toggleClass("");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = element73.siblingNodes();
        org.jsoup.nodes.Element element76 = element73.addClass(":gt(100)");
        org.jsoup.nodes.Node node77 = element73.parent();
        java.lang.String str79 = element73.absUrl("[^hi!]");
        org.jsoup.select.Elements elements81 = element73.getElementsByIndexGreaterThan((int) 'a');
        boolean boolean82 = id1.matches((org.jsoup.nodes.Element) document62, element73);
        org.jsoup.parser.Parser parser83 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.nodes.Document document86 = parser83.parseInput("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document89 = parser83.parseInput("hi!", "#comment");
        org.jsoup.nodes.Document document91 = org.jsoup.nodes.Document.createShell("hi!");
        java.util.regex.Pattern pattern92 = null;
        org.jsoup.select.Evaluator.MatchesOwn matchesOwn93 = new org.jsoup.select.Evaluator.MatchesOwn(pattern92);
        boolean boolean94 = document91.equals((java.lang.Object) pattern92);
        org.jsoup.nodes.Element element97 = document91.attr("[.]", ".<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean98 = id1.matches((org.jsoup.nodes.Element) document89, element97);
        java.lang.String str99 = id1.toString();
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(nodeList7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str12, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(outputSettings54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str59, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(elements81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parser83);
        org.junit.Assert.assertNotNull(document86);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertNotNull(document91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(element97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "#hi!" + "'", str99, "#hi!");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #939
20: aastore
21: invokevirtual #7
24: pop
25: new           #388
28: dup
29: ldc           #12
31: invokespecial #389
34: astore_1
35: ldc           #25
37: ldc           #12
39: invokestatic  #26
42: astore_2
43: ldc           #12
45: aload_2
46: ldc           #12
48: invokestatic  #27
51: astore_3
52: aload_2
53: ldc           #12
55: invokevirtual #28
58: astore        4
60: aload_2
61: ldc           #25
63: invokevirtual #29
66: astore        5
68: aload         5
70: invokevirtual #363
73: astore        6
75: aload         5
77: ldc           #25
79: invokevirtual #364
82: istore        7
84: ldc           #25
86: ldc           #12
88: invokestatic  #26
91: astore        8
93: ldc           #12
95: aload         8
97: ldc           #12
99: invokestatic  #27
102: astore        9
104: aload         8
106: ldc           #12
108: invokevirtual #28
111: astore        10
113: aload         8
115: ldc           #25
117: invokevirtual #29
120: astore        11
122: aload         11
124: ldc           #12
126: invokevirtual #390
129: astore        12
131: aload         11
133: ldc           #51
135: ldc           #98
137: invokevirtual #391
140: astore        13
142: aload         11
144: ldc           #12
146: invokevirtual #392
149: astore        14
151: aload         14
153: invokevirtual #393
156: istore        15
158: aload         14
160: invokevirtual #394
163: aload_1
164: aload         5
166: aload         14
168: invokevirtual #395
171: istore        16
173: invokestatic  #8
176: astore        17
178: aload         17
180: iconst_1
181: invokevirtual #9
184: astore        18
186: new           #40
189: dup
190: aload         18
192: invokespecial #41
195: astore        19
197: new           #42
200: dup
201: ldc           #43
203: ldc           #32
205: invokespecial #44
208: astore        20
210: ldc           #12
212: invokestatic  #45
215: astore        21
217: ldc           #25
219: ldc           #12
221: invokestatic  #26
224: astore        22
226: ldc           #12
228: aload         22
230: ldc           #12
232: invokestatic  #27
235: astore        23
237: aload         22
239: ldc           #12
241: invokevirtual #28
244: astore        24
246: aload         22
248: ldc           #25
250: invokevirtual #29
253: astore        25
255: aload         22
257: invokevirtual #30
260: astore        26
262: aload         20
264: aload         21
266: aload         22
268: invokevirtual #46
271: istore        27
273: aload         19
275: aload         22
277: invokevirtual #47
280: astore        28
282: ldc           #10
284: invokestatic  #193
287: astore        29
289: aload         29
291: invokevirtual #72
294: astore        30
296: aload         29
298: invokevirtual #194
301: astore        31
303: aload         19
305: aload         29
307: invokevirtual #47
310: astore        32
312: aload         32
314: invokevirtual #154
317: astore        33
319: ldc           #25
321: ldc           #12
323: invokestatic  #26
326: astore        34
328: ldc           #12
330: aload         34
332: ldc           #12
334: invokestatic  #27
337: astore        35
339: aload         34
341: invokevirtual #103
344: astore        36
346: aload         34
348: ldc           #12
350: invokevirtual #59
353: astore        37
355: aload         37
357: ldc           #25
359: invokevirtual #177
362: astore        38
364: aload         38
366: invokevirtual #396
369: astore        39
371: aload         38
373: ldc           #92
375: invokevirtual #397
378: astore        40
380: aload         38
382: invokevirtual #252
385: astore        41
387: aload         38
389: ldc           #50
391: invokevirtual #398
394: astore        42
396: aload         38
398: bipush        97
400: invokevirtual #399
403: astore        43
405: aload_1
406: aload         33
408: aload         38
410: invokevirtual #395
413: istore        44
415: invokestatic  #419
418: astore        45
420: aload         45
422: ldc           #151
424: ldc           #110
426: invokevirtual #420
429: astore        46
431: aload         45
433: ldc           #12
435: ldc           #114
437: invokevirtual #420
440: astore        47
442: ldc           #12
444: invokestatic  #45
447: astore        48
449: aconst_null
450: astore        49
452: new           #345
455: dup
456: aload         49
458: invokespecial #346
461: astore        50
463: aload         48
465: aload         49
467: invokevirtual #202
470: istore        51
472: aload         48
474: ldc_w         #421
477: ldc           #32
479: invokevirtual #56
482: astore        52
484: aload_1
485: aload         47
487: aload         52
489: invokevirtual #395
492: istore        53
494: aload_1
495: invokevirtual #940
498: astore        54
500: aload_2
501: invokestatic  #15
504: aload_3
505: invokestatic  #15
508: aload         4
510: invokestatic  #15
513: aload         5
515: invokestatic  #15
518: new           #16
521: dup
522: invokespecial #17
525: ldc           #18
527: invokevirtual #19
530: aload         6
532: invokevirtual #19
535: ldc           #78
537: invokevirtual #19
540: invokevirtual #22
543: aload         6
545: ldc           #10
547: invokestatic  #68
550: new           #16
553: dup
554: invokespecial #17
557: ldc           #18
559: invokevirtual #19
562: iload         7
564: invokevirtual #20
567: ldc           #21
569: invokevirtual #19
572: iconst_0
573: invokevirtual #20
576: ldc           #18
578: invokevirtual #19
581: invokevirtual #22
584: iload         7
586: ifne          593
589: iconst_1
590: goto          594
593: iconst_0
594: invokestatic  #23
597: aload         8
599: invokestatic  #15
602: aload         9
604: invokestatic  #15
607: aload         10
609: invokestatic  #15
612: aload         11
614: invokestatic  #15
617: aload         12
619: invokestatic  #15
622: aload         13
624: invokestatic  #15
627: aload         14
629: invokestatic  #15
632: new           #16
635: dup
636: invokespecial #17
639: ldc           #18
641: invokevirtual #19
644: iload         15
646: invokevirtual #20
649: ldc           #21
651: invokevirtual #19
654: iconst_0
655: invokevirtual #20
658: ldc           #18
660: invokevirtual #19
663: invokevirtual #22
666: iload         15
668: ifne          675
671: iconst_1
672: goto          676
675: iconst_0
676: invokestatic  #23
679: new           #16
682: dup
683: invokespecial #17
686: ldc           #18
688: invokevirtual #19
691: iload         16
693: invokevirtual #20
696: ldc           #21
698: invokevirtual #19
701: iconst_0
702: invokevirtual #20
705: ldc           #18
707: invokevirtual #19
710: invokevirtual #22
713: iload         16
715: ifne          722
718: iconst_1
719: goto          723
722: iconst_0
723: invokestatic  #23
726: aload         17
728: invokestatic  #15
731: aload         18
733: invokestatic  #15
736: aload         21
738: invokestatic  #15
741: aload         22
743: invokestatic  #15
746: aload         23
748: invokestatic  #15
751: aload         24
753: invokestatic  #15
756: aload         25
758: invokestatic  #15
761: aload         26
763: invokestatic  #15
766: new           #16
769: dup
770: invokespecial #17
773: ldc           #18
775: invokevirtual #19
778: iload         27
780: invokevirtual #20
783: ldc           #21
785: invokevirtual #19
788: iconst_0
789: invokevirtual #20
792: ldc           #18
794: invokevirtual #19
797: invokevirtual #22
800: iload         27
802: ifne          809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #23
813: aload         28
815: invokestatic  #15
818: aload         29
820: invokestatic  #15
823: new           #16
826: dup
827: invokespecial #17
830: ldc           #18
832: invokevirtual #19
835: aload         30
837: invokevirtual #19
840: ldc           #197
842: invokevirtual #19
845: invokevirtual #22
848: aload         30
850: ldc           #151
852: invokestatic  #68
855: new           #16
858: dup
859: invokespecial #17
862: ldc           #18
864: invokevirtual #19
867: aload         31
869: invokevirtual #19
872: ldc           #67
874: invokevirtual #19
877: invokevirtual #22
880: aload         31
882: ldc           #25
884: invokestatic  #68
887: aload         32
889: invokestatic  #15
892: aload         33
894: invokestatic  #15
897: aload         34
899: invokestatic  #15
902: aload         35
904: invokestatic  #15
907: aload         36
909: invokestatic  #15
912: aload         37
914: invokestatic  #15
917: aload         38
919: invokestatic  #15
922: aload         39
924: invokestatic  #15
927: aload         40
929: invokestatic  #15
932: aload         41
934: invokestatic  #79
937: new           #16
940: dup
941: invokespecial #17
944: ldc           #18
946: invokevirtual #19
949: aload         42
951: invokevirtual #19
954: ldc           #67
956: invokevirtual #19
959: invokevirtual #22
962: aload         42
964: ldc           #25
966: invokestatic  #68
969: aload         43
971: invokestatic  #15
974: new           #16
977: dup
978: invokespecial #17
981: ldc           #18
983: invokevirtual #19
986: iload         44
988: invokevirtual #20
991: ldc           #21
993: invokevirtual #19
996: iconst_0
997: invokevirtual #20
1000: ldc           #18
1002: invokevirtual #19
1005: invokevirtual #22
1008: iload         44
1010: ifne          1017
1013: iconst_1
1014: goto          1018
1017: iconst_0
1018: invokestatic  #23
1021: aload         45
1023: invokestatic  #15
1026: aload         46
1028: invokestatic  #15
1031: aload         47
1033: invokestatic  #15
1036: aload         48
1038: invokestatic  #15
1041: new           #16
1044: dup
1045: invokespecial #17
1048: ldc           #18
1050: invokevirtual #19
1053: iload         51
1055: invokevirtual #20
1058: ldc           #21
1060: invokevirtual #19
1063: iconst_0
1064: invokevirtual #20
1067: ldc           #18
1069: invokevirtual #19
1072: invokevirtual #22
1075: iload         51
1077: ifne          1084
1080: iconst_1
1081: goto          1085
1084: iconst_0
1085: invokestatic  #23
1088: aload         52
1090: invokestatic  #15
1093: new           #16
1096: dup
1097: invokespecial #17
1100: ldc           #18
1102: invokevirtual #19
1105: iload         53
1107: invokevirtual #20
1110: ldc           #21
1112: invokevirtual #19
1115: iconst_0
1116: invokevirtual #20
1119: ldc           #18
1121: invokevirtual #19
1124: invokevirtual #22
1127: iload         53
1129: ifne          1136
1132: iconst_1
1133: goto          1137
1136: iconst_0
1137: invokestatic  #23
1140: new           #16
1143: dup
1144: invokespecial #17
1147: ldc           #18
1149: invokevirtual #19
1152: aload         54
1154: invokevirtual #19
1157: ldc_w         #941
1160: invokevirtual #19
1163: invokevirtual #22
1166: aload         54
1168: ldc_w         #837
1171: invokestatic  #68
1174: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test321
Start line: 17538
End line: 17623
Method source code: 
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining2 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document4 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document8 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList10 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document8, "hi!");
        org.jsoup.nodes.Element element12 = document8.tagName("hi!");
        org.jsoup.nodes.Element element14 = document8.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings15 = document8.outputSettings();
        boolean boolean16 = attributeWithValueContaining2.matches((org.jsoup.nodes.Element) document4, (org.jsoup.nodes.Element) document8);
        org.jsoup.nodes.Element element18 = document8.toggleClass("#doctype");
        org.jsoup.nodes.Element element19 = document8.head();
        org.jsoup.select.Elements elements21 = document8.getElementsByAttributeStarting(":gt(100)");
        int int22 = document8.siblingIndex();
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist25 = whitelist23.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner26 = new org.jsoup.safety.Cleaner(whitelist25);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining29 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document31 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings42 = document35.outputSettings();
        boolean boolean43 = attributeWithValueContaining29.matches((org.jsoup.nodes.Element) document31, (org.jsoup.nodes.Element) document35);
        org.jsoup.nodes.Document document44 = cleaner26.clean(document35);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan46 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document49 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str50 = document49.ownText();
        org.jsoup.nodes.Node node53 = document49.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document57 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList59 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document57, "hi!");
        org.jsoup.nodes.Element element61 = document57.tagName("hi!");
        org.jsoup.nodes.Element element63 = document57.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = document57.outputSettings();
        org.jsoup.select.Elements elements66 = document57.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element68 = document57.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element70 = document57.createElement(" hi!");
        org.jsoup.select.Elements elements72 = document57.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean73 = indexLessThan46.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document57);
        org.jsoup.nodes.Document document74 = cleaner26.clean(document57);
        boolean boolean75 = document8.equals((java.lang.Object) document74);
        org.jsoup.nodes.Element element76 = document8.nextElementSibling();
        java.lang.String str77 = document8.html();
        org.jsoup.select.Elements elements79 = document8.getElementsByIndexEquals((int) '#');
        org.junit.Assert.assertNotNull(document4);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(nodeList10);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(outputSettings15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(elements21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(whitelist25);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(outputSettings42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(document57);
        org.junit.Assert.assertNotNull(nodeList59);
        org.junit.Assert.assertNotNull(element61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(elements66);
        org.junit.Assert.assertNotNull(element68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(elements72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(document74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(element76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str77, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #942
20: aastore
21: invokevirtual #7
24: pop
25: new           #42
28: dup
29: ldc           #43
31: ldc           #32
33: invokespecial #44
36: astore_1
37: ldc           #12
39: invokestatic  #45
42: astore_2
43: ldc           #25
45: ldc           #12
47: invokestatic  #26
50: astore_3
51: ldc           #12
53: aload_3
54: ldc           #12
56: invokestatic  #27
59: astore        4
61: aload_3
62: ldc           #12
64: invokevirtual #28
67: astore        5
69: aload_3
70: ldc           #25
72: invokevirtual #29
75: astore        6
77: aload_3
78: invokevirtual #30
81: astore        7
83: aload_1
84: aload_2
85: aload_3
86: invokevirtual #46
89: istore        8
91: aload_3
92: ldc           #187
94: invokevirtual #199
97: astore        9
99: aload_3
100: invokevirtual #200
103: astore        10
105: aload_3
106: ldc           #92
108: invokevirtual #140
111: astore        11
113: aload_3
114: invokevirtual #201
117: istore        12
119: invokestatic  #8
122: astore        13
124: aload         13
126: iconst_1
127: invokevirtual #9
130: astore        14
132: new           #40
135: dup
136: aload         14
138: invokespecial #41
141: astore        15
143: new           #42
146: dup
147: ldc           #43
149: ldc           #32
151: invokespecial #44
154: astore        16
156: ldc           #12
158: invokestatic  #45
161: astore        17
163: ldc           #25
165: ldc           #12
167: invokestatic  #26
170: astore        18
172: ldc           #12
174: aload         18
176: ldc           #12
178: invokestatic  #27
181: astore        19
183: aload         18
185: ldc           #12
187: invokevirtual #28
190: astore        20
192: aload         18
194: ldc           #25
196: invokevirtual #29
199: astore        21
201: aload         18
203: invokevirtual #30
206: astore        22
208: aload         16
210: aload         17
212: aload         18
214: invokevirtual #46
217: istore        23
219: aload         15
221: aload         18
223: invokevirtual #47
226: astore        24
228: new           #48
231: dup
232: iconst_m1
233: invokespecial #49
236: astore        25
238: ldc           #50
240: ldc           #51
242: invokestatic  #52
245: astore        26
247: aload         26
249: invokevirtual #53
252: astore        27
254: aload         26
256: ldc           #54
258: ldc           #55
260: invokevirtual #56
263: astore        28
265: ldc           #25
267: ldc           #12
269: invokestatic  #26
272: astore        29
274: ldc           #12
276: aload         29
278: ldc           #12
280: invokestatic  #27
283: astore        30
285: aload         29
287: ldc           #12
289: invokevirtual #28
292: astore        31
294: aload         29
296: ldc           #25
298: invokevirtual #29
301: astore        32
303: aload         29
305: invokevirtual #30
308: astore        33
310: aload         29
312: ldc           #12
314: invokevirtual #57
317: astore        34
319: aload         29
321: ldc           #58
323: invokevirtual #59
326: astore        35
328: aload         29
330: ldc           #60
332: invokevirtual #61
335: astore        36
337: aload         29
339: ldc           #38
341: invokevirtual #62
344: astore        37
346: aload         25
348: aload         26
350: aload         29
352: invokevirtual #63
355: istore        38
357: aload         15
359: aload         29
361: invokevirtual #47
364: astore        39
366: aload_3
367: aload         39
369: invokevirtual #202
372: istore        40
374: aload_3
375: invokevirtual #628
378: astore        41
380: aload_3
381: invokevirtual #658
384: astore        42
386: aload_3
387: bipush        35
389: invokevirtual #162
392: astore        43
394: aload_2
395: invokestatic  #15
398: aload_3
399: invokestatic  #15
402: aload         4
404: invokestatic  #15
407: aload         5
409: invokestatic  #15
412: aload         6
414: invokestatic  #15
417: aload         7
419: invokestatic  #15
422: new           #16
425: dup
426: invokespecial #17
429: ldc           #18
431: invokevirtual #19
434: iload         8
436: invokevirtual #20
439: ldc           #21
441: invokevirtual #19
444: iconst_0
445: invokevirtual #20
448: ldc           #18
450: invokevirtual #19
453: invokevirtual #22
456: iload         8
458: ifne          465
461: iconst_1
462: goto          466
465: iconst_0
466: invokestatic  #23
469: aload         9
471: invokestatic  #15
474: aload         10
476: invokestatic  #15
479: aload         11
481: invokestatic  #15
484: new           #16
487: dup
488: invokespecial #17
491: ldc           #18
493: invokevirtual #19
496: iload         12
498: invokevirtual #134
501: ldc           #21
503: invokevirtual #19
506: iconst_0
507: invokevirtual #134
510: ldc           #18
512: invokevirtual #19
515: invokevirtual #22
518: iload         12
520: ifne          527
523: iconst_1
524: goto          528
527: iconst_0
528: invokestatic  #23
531: aload         13
533: invokestatic  #15
536: aload         14
538: invokestatic  #15
541: aload         17
543: invokestatic  #15
546: aload         18
548: invokestatic  #15
551: aload         19
553: invokestatic  #15
556: aload         20
558: invokestatic  #15
561: aload         21
563: invokestatic  #15
566: aload         22
568: invokestatic  #15
571: new           #16
574: dup
575: invokespecial #17
578: ldc           #18
580: invokevirtual #19
583: iload         23
585: invokevirtual #20
588: ldc           #21
590: invokevirtual #19
593: iconst_0
594: invokevirtual #20
597: ldc           #18
599: invokevirtual #19
602: invokevirtual #22
605: iload         23
607: ifne          614
610: iconst_1
611: goto          615
614: iconst_0
615: invokestatic  #23
618: aload         24
620: invokestatic  #15
623: aload         26
625: invokestatic  #15
628: new           #16
631: dup
632: invokespecial #17
635: ldc           #18
637: invokevirtual #19
640: aload         27
642: invokevirtual #19
645: ldc           #67
647: invokevirtual #19
650: invokevirtual #22
653: aload         27
655: ldc           #25
657: invokestatic  #68
660: aload         28
662: invokestatic  #15
665: aload         29
667: invokestatic  #15
670: aload         30
672: invokestatic  #15
675: aload         31
677: invokestatic  #15
680: aload         32
682: invokestatic  #15
685: aload         33
687: invokestatic  #15
690: aload         34
692: invokestatic  #15
695: aload         35
697: invokestatic  #15
700: aload         36
702: invokestatic  #15
705: aload         37
707: invokestatic  #15
710: new           #16
713: dup
714: invokespecial #17
717: ldc           #18
719: invokevirtual #19
722: iload         38
724: invokevirtual #20
727: ldc           #21
729: invokevirtual #19
732: iconst_0
733: invokevirtual #20
736: ldc           #18
738: invokevirtual #19
741: invokevirtual #22
744: iload         38
746: ifne          753
749: iconst_1
750: goto          754
753: iconst_0
754: invokestatic  #23
757: aload         39
759: invokestatic  #15
762: new           #16
765: dup
766: invokespecial #17
769: ldc           #18
771: invokevirtual #19
774: iload         40
776: invokevirtual #20
779: ldc           #21
781: invokevirtual #19
784: iconst_0
785: invokevirtual #20
788: ldc           #18
790: invokevirtual #19
793: invokevirtual #22
796: iload         40
798: ifne          805
801: iconst_1
802: goto          806
805: iconst_0
806: invokestatic  #23
809: aload         41
811: invokestatic  #79
814: new           #16
817: dup
818: invokespecial #17
821: ldc           #18
823: invokevirtual #19
826: aload         42
828: invokevirtual #19
831: ldc           #78
833: invokevirtual #19
836: invokevirtual #22
839: aload         42
841: ldc           #10
843: invokestatic  #68
846: aload         43
848: invokestatic  #15
851: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test322
Start line: 17626
End line: 17677
Method source code: 
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        org.jsoup.nodes.Document document2 = org.jsoup.Jsoup.parse("#comment", "<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", ":contains(:matchesown(null");
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes11 = whitelist9.getEnforcedAttributes("#text");
        java.lang.String str12 = org.jsoup.Jsoup.clean(":lt(32)=\"\"=\".\"", whitelist9);
        org.jsoup.nodes.Document document16 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList18 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document16, "hi!");
        org.jsoup.nodes.Element element20 = document16.tagName("hi!");
        org.jsoup.nodes.Element element22 = document16.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings23 = document16.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = outputSettings23.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings26 = outputSettings24.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings24.indentAmount((int) (short) 0);
        org.jsoup.nodes.Document.OutputSettings outputSettings30 = outputSettings24.indentAmount((int) (byte) 1);
        org.jsoup.nodes.Document.OutputSettings outputSettings32 = outputSettings24.prettyPrint(true);
        int int33 = outputSettings32.indentAmount();
        int int34 = outputSettings32.indentAmount();
        java.lang.String str35 = org.jsoup.Jsoup.clean("[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]", "[[:gt(100)]$=:gt(100)]", whitelist9, outputSettings32);
        org.jsoup.nodes.Document document36 = document5.outputSettings(outputSettings32);
        org.jsoup.parser.Parser parser37 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.nodes.Document document40 = parser37.parseInput("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        java.util.Set<java.lang.String> strSet41 = document40.classNames();
        org.jsoup.nodes.Element element42 = document36.classNames(strSet41);
        boolean boolean43 = document2.equals((java.lang.Object) document36);
        org.junit.Assert.assertNotNull(document2);
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(attributes11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ":lt(32)=&quot;&quot;=&quot;.&quot;" + "'", str12, ":lt(32)=&quot;&quot;=&quot;.&quot;");
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(nodeList18);
        org.junit.Assert.assertNotNull(element20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(outputSettings23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(outputSettings26);
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(outputSettings30);
        org.junit.Assert.assertNotNull(outputSettings32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[!=hi!]" + "'", str35, "[!=hi!]");
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(parser37);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #943
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #114
27: ldc           #254
29: invokestatic  #26
32: astore_1
33: ldc           #25
35: ldc_w         #527
38: invokestatic  #26
41: astore_2
42: invokestatic  #118
45: astore_3
46: aload_3
47: ldc           #51
49: invokevirtual #150
52: astore        4
54: ldc_w         #329
57: aload_3
58: invokestatic  #81
61: astore        5
63: ldc           #25
65: ldc           #12
67: invokestatic  #26
70: astore        6
72: ldc           #12
74: aload         6
76: ldc           #12
78: invokestatic  #27
81: astore        7
83: aload         6
85: ldc           #12
87: invokevirtual #28
90: astore        8
92: aload         6
94: ldc           #25
96: invokevirtual #29
99: astore        9
101: aload         6
103: invokevirtual #30
106: astore        10
108: aload         10
110: invokevirtual #205
113: astore        11
115: aload         11
117: iconst_0
118: invokevirtual #31
121: astore        12
123: aload         11
125: iconst_0
126: invokevirtual #189
129: astore        13
131: aload         11
133: iconst_1
134: invokevirtual #189
137: astore        14
139: aload         11
141: iconst_1
142: invokevirtual #31
145: astore        15
147: aload         15
149: invokevirtual #296
152: istore        16
154: aload         15
156: invokevirtual #296
159: istore        17
161: ldc           #136
163: ldc_w         #308
166: aload_3
167: aload         15
169: invokestatic  #33
172: astore        18
174: aload_2
175: aload         15
177: invokevirtual #175
180: astore        19
182: invokestatic  #419
185: astore        20
187: aload         20
189: ldc           #151
191: ldc           #110
193: invokevirtual #420
196: astore        21
198: aload         21
200: invokevirtual #896
203: astore        22
205: aload         19
207: aload         22
209: invokevirtual #744
212: astore        23
214: aload_1
215: aload         19
217: invokevirtual #202
220: istore        24
222: aload_1
223: invokestatic  #15
226: aload_2
227: invokestatic  #15
230: aload_3
231: invokestatic  #15
234: aload         4
236: invokestatic  #15
239: new           #16
242: dup
243: invokespecial #17
246: ldc           #18
248: invokevirtual #19
251: aload         5
253: invokevirtual #19
256: ldc_w         #299
259: invokevirtual #19
262: invokevirtual #22
265: aload         5
267: ldc_w         #300
270: invokestatic  #68
273: aload         6
275: invokestatic  #15
278: aload         7
280: invokestatic  #15
283: aload         8
285: invokestatic  #15
288: aload         9
290: invokestatic  #15
293: aload         10
295: invokestatic  #15
298: aload         11
300: invokestatic  #15
303: aload         12
305: invokestatic  #15
308: aload         13
310: invokestatic  #15
313: aload         14
315: invokestatic  #15
318: aload         15
320: invokestatic  #15
323: new           #16
326: dup
327: invokespecial #17
330: ldc           #18
332: invokevirtual #19
335: iload         16
337: invokevirtual #134
340: ldc           #21
342: invokevirtual #19
345: iconst_1
346: invokevirtual #134
349: ldc           #18
351: invokevirtual #19
354: invokevirtual #22
357: iload         16
359: iconst_1
360: if_icmpne     367
363: iconst_1
364: goto          368
367: iconst_0
368: invokestatic  #23
371: new           #16
374: dup
375: invokespecial #17
378: ldc           #18
380: invokevirtual #19
383: iload         17
385: invokevirtual #134
388: ldc           #21
390: invokevirtual #19
393: iconst_1
394: invokevirtual #134
397: ldc           #18
399: invokevirtual #19
402: invokevirtual #22
405: iload         17
407: iconst_1
408: if_icmpne     415
411: iconst_1
412: goto          416
415: iconst_0
416: invokestatic  #23
419: new           #16
422: dup
423: invokespecial #17
426: ldc           #18
428: invokevirtual #19
431: aload         18
433: invokevirtual #19
436: ldc_w         #523
439: invokevirtual #19
442: invokevirtual #22
445: aload         18
447: ldc           #241
449: invokestatic  #68
452: aload         19
454: invokestatic  #15
457: aload         20
459: invokestatic  #15
462: aload         21
464: invokestatic  #15
467: aload         22
469: invokestatic  #15
472: aload         23
474: invokestatic  #15
477: new           #16
480: dup
481: invokespecial #17
484: ldc           #18
486: invokevirtual #19
489: iload         24
491: invokevirtual #20
494: ldc           #21
496: invokevirtual #19
499: iconst_0
500: invokevirtual #20
503: ldc           #18
505: invokevirtual #19
508: invokevirtual #22
511: iload         24
513: ifne          520
516: iconst_1
517: goto          521
520: iconst_0
521: invokestatic  #23
524: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test323
Start line: 17680
End line: 17780
Method source code: 
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        java.util.regex.Pattern pattern1 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching2 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("\nhi!", pattern1);
        org.jsoup.nodes.Document document6 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList8 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document6, "hi!");
        org.jsoup.nodes.Element element9 = document6.empty();
        org.jsoup.nodes.Element element11 = document6.removeClass("hi!");
        java.lang.String str12 = document6.id();
        org.jsoup.nodes.Node node13 = document6.previousSibling();
        org.jsoup.nodes.Node node14 = document6.clone();
        java.lang.String str15 = document6.id();
        org.jsoup.safety.Whitelist whitelist16 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist18 = whitelist16.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner19 = new org.jsoup.safety.Cleaner(whitelist18);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining22 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document24 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList30 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document28, "hi!");
        org.jsoup.nodes.Element element32 = document28.tagName("hi!");
        org.jsoup.nodes.Element element34 = document28.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = document28.outputSettings();
        boolean boolean36 = attributeWithValueContaining22.matches((org.jsoup.nodes.Element) document24, (org.jsoup.nodes.Element) document28);
        org.jsoup.nodes.Document document37 = cleaner19.clean(document28);
        org.jsoup.helper.Validate.notNull((java.lang.Object) document28, "");
        boolean boolean40 = attributeWithValueMatching2.matches((org.jsoup.nodes.Element) document6, (org.jsoup.nodes.Element) document28);
        org.jsoup.select.Evaluator.IndexLessThan indexLessThan42 = new org.jsoup.select.Evaluator.IndexLessThan((-1));
        org.jsoup.nodes.Document document45 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        java.lang.String str46 = document45.ownText();
        org.jsoup.nodes.Node node49 = document45.attr("<hi!>\n [^hi!]\n</hi!>", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>");
        org.jsoup.nodes.Document document53 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList55 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document53, "hi!");
        org.jsoup.nodes.Element element57 = document53.tagName("hi!");
        org.jsoup.nodes.Element element59 = document53.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = document53.outputSettings();
        org.jsoup.select.Elements elements62 = document53.getElementsMatchingText("hi!");
        org.jsoup.nodes.Element element64 = document53.removeClass("[:lt(32)]");
        org.jsoup.nodes.Element element66 = document53.createElement(" hi!");
        org.jsoup.select.Elements elements68 = document53.getElementsContainingOwnText(":matchesOwn(null");
        boolean boolean69 = indexLessThan42.matches((org.jsoup.nodes.Element) document45, (org.jsoup.nodes.Element) document53);
        org.jsoup.nodes.Element element71 = document45.getElementById("<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining74 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document76 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document80 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList82 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document80, "hi!");
        org.jsoup.nodes.Element element84 = document80.tagName("hi!");
        org.jsoup.nodes.Element element86 = document80.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings87 = document80.outputSettings();
        boolean boolean88 = attributeWithValueContaining74.matches((org.jsoup.nodes.Element) document76, (org.jsoup.nodes.Element) document80);
        org.jsoup.nodes.Element element90 = document80.toggleClass("#doctype");
        org.jsoup.nodes.Element element91 = document80.head();
        org.jsoup.nodes.Element element93 = element91.after("#:lt(32)=\"\"");
        org.jsoup.nodes.Element element95 = element91.prepend("[^    ]");
        boolean boolean96 = attributeWithValueMatching2.matches(element71, element91);
        org.junit.Assert.assertNotNull(document6);
        org.junit.Assert.assertNotNull(nodeList8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(whitelist16);
        org.junit.Assert.assertNotNull(whitelist18);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(nodeList30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(outputSettings35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(outputSettings60);
        org.junit.Assert.assertNotNull(elements62);
        org.junit.Assert.assertNotNull(element64);
        org.junit.Assert.assertNotNull(element66);
        org.junit.Assert.assertNotNull(elements68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(element71);
        org.junit.Assert.assertNotNull(document76);
        org.junit.Assert.assertNotNull(document80);
        org.junit.Assert.assertNotNull(nodeList82);
        org.junit.Assert.assertNotNull(element84);
        org.junit.Assert.assertNotNull(element86);
        org.junit.Assert.assertNotNull(outputSettings87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(element90);
        org.junit.Assert.assertNotNull(element91);
        org.junit.Assert.assertNotNull(element93);
        org.junit.Assert.assertNotNull(element95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #944
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #96
30: dup
31: ldc           #98
33: aload_1
34: invokespecial #97
37: astore_2
38: ldc           #25
40: ldc           #12
42: invokestatic  #26
45: astore_3
46: ldc           #12
48: aload_3
49: ldc           #12
51: invokestatic  #27
54: astore        4
56: aload_3
57: invokevirtual #103
60: astore        5
62: aload_3
63: ldc           #12
65: invokevirtual #59
68: astore        6
70: aload_3
71: invokevirtual #73
74: astore        7
76: aload_3
77: invokevirtual #349
80: astore        8
82: aload_3
83: invokevirtual #154
86: astore        9
88: aload_3
89: invokevirtual #73
92: astore        10
94: invokestatic  #8
97: astore        11
99: aload         11
101: iconst_1
102: invokevirtual #9
105: astore        12
107: new           #40
110: dup
111: aload         12
113: invokespecial #41
116: astore        13
118: new           #42
121: dup
122: ldc           #43
124: ldc           #32
126: invokespecial #44
129: astore        14
131: ldc           #12
133: invokestatic  #45
136: astore        15
138: ldc           #25
140: ldc           #12
142: invokestatic  #26
145: astore        16
147: ldc           #12
149: aload         16
151: ldc           #12
153: invokestatic  #27
156: astore        17
158: aload         16
160: ldc           #12
162: invokevirtual #28
165: astore        18
167: aload         16
169: ldc           #25
171: invokevirtual #29
174: astore        19
176: aload         16
178: invokevirtual #30
181: astore        20
183: aload         14
185: aload         15
187: aload         16
189: invokevirtual #46
192: istore        21
194: aload         13
196: aload         16
198: invokevirtual #47
201: astore        22
203: aload         16
205: ldc           #25
207: invokestatic  #181
210: aload_2
211: aload_3
212: aload         16
214: invokevirtual #101
217: istore        23
219: new           #48
222: dup
223: iconst_m1
224: invokespecial #49
227: astore        24
229: ldc           #50
231: ldc           #51
233: invokestatic  #52
236: astore        25
238: aload         25
240: invokevirtual #53
243: astore        26
245: aload         25
247: ldc           #54
249: ldc           #55
251: invokevirtual #56
254: astore        27
256: ldc           #25
258: ldc           #12
260: invokestatic  #26
263: astore        28
265: ldc           #12
267: aload         28
269: ldc           #12
271: invokestatic  #27
274: astore        29
276: aload         28
278: ldc           #12
280: invokevirtual #28
283: astore        30
285: aload         28
287: ldc           #25
289: invokevirtual #29
292: astore        31
294: aload         28
296: invokevirtual #30
299: astore        32
301: aload         28
303: ldc           #12
305: invokevirtual #57
308: astore        33
310: aload         28
312: ldc           #58
314: invokevirtual #59
317: astore        34
319: aload         28
321: ldc           #60
323: invokevirtual #61
326: astore        35
328: aload         28
330: ldc           #38
332: invokevirtual #62
335: astore        36
337: aload         24
339: aload         25
341: aload         28
343: invokevirtual #63
346: istore        37
348: aload         25
350: ldc           #254
352: invokevirtual #163
355: astore        38
357: new           #42
360: dup
361: ldc           #43
363: ldc           #32
365: invokespecial #44
368: astore        39
370: ldc           #12
372: invokestatic  #45
375: astore        40
377: ldc           #25
379: ldc           #12
381: invokestatic  #26
384: astore        41
386: ldc           #12
388: aload         41
390: ldc           #12
392: invokestatic  #27
395: astore        42
397: aload         41
399: ldc           #12
401: invokevirtual #28
404: astore        43
406: aload         41
408: ldc           #25
410: invokevirtual #29
413: astore        44
415: aload         41
417: invokevirtual #30
420: astore        45
422: aload         39
424: aload         40
426: aload         41
428: invokevirtual #46
431: istore        46
433: aload         41
435: ldc           #187
437: invokevirtual #199
440: astore        47
442: aload         41
444: invokevirtual #200
447: astore        48
449: aload         48
451: ldc_w         #416
454: invokevirtual #116
457: astore        49
459: aload         48
461: ldc_w         #479
464: invokevirtual #945
467: astore        50
469: aload_2
470: aload         38
472: aload         48
474: invokevirtual #101
477: istore        51
479: aload_3
480: invokestatic  #15
483: aload         4
485: invokestatic  #15
488: aload         5
490: invokestatic  #15
493: aload         6
495: invokestatic  #15
498: new           #16
501: dup
502: invokespecial #17
505: ldc           #18
507: invokevirtual #19
510: aload         7
512: invokevirtual #19
515: ldc           #67
517: invokevirtual #19
520: invokevirtual #22
523: aload         7
525: ldc           #25
527: invokestatic  #68
530: aload         8
532: invokestatic  #79
535: aload         9
537: invokestatic  #15
540: new           #16
543: dup
544: invokespecial #17
547: ldc           #18
549: invokevirtual #19
552: aload         10
554: invokevirtual #19
557: ldc           #67
559: invokevirtual #19
562: invokevirtual #22
565: aload         10
567: ldc           #25
569: invokestatic  #68
572: aload         11
574: invokestatic  #15
577: aload         12
579: invokestatic  #15
582: aload         15
584: invokestatic  #15
587: aload         16
589: invokestatic  #15
592: aload         17
594: invokestatic  #15
597: aload         18
599: invokestatic  #15
602: aload         19
604: invokestatic  #15
607: aload         20
609: invokestatic  #15
612: new           #16
615: dup
616: invokespecial #17
619: ldc           #18
621: invokevirtual #19
624: iload         21
626: invokevirtual #20
629: ldc           #21
631: invokevirtual #19
634: iconst_0
635: invokevirtual #20
638: ldc           #18
640: invokevirtual #19
643: invokevirtual #22
646: iload         21
648: ifne          655
651: iconst_1
652: goto          656
655: iconst_0
656: invokestatic  #23
659: aload         22
661: invokestatic  #15
664: new           #16
667: dup
668: invokespecial #17
671: ldc           #18
673: invokevirtual #19
676: iload         23
678: invokevirtual #20
681: ldc           #21
683: invokevirtual #19
686: iconst_0
687: invokevirtual #20
690: ldc           #18
692: invokevirtual #19
695: invokevirtual #22
698: iload         23
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #23
711: aload         25
713: invokestatic  #15
716: new           #16
719: dup
720: invokespecial #17
723: ldc           #18
725: invokevirtual #19
728: aload         26
730: invokevirtual #19
733: ldc           #67
735: invokevirtual #19
738: invokevirtual #22
741: aload         26
743: ldc           #25
745: invokestatic  #68
748: aload         27
750: invokestatic  #15
753: aload         28
755: invokestatic  #15
758: aload         29
760: invokestatic  #15
763: aload         30
765: invokestatic  #15
768: aload         31
770: invokestatic  #15
773: aload         32
775: invokestatic  #15
778: aload         33
780: invokestatic  #15
783: aload         34
785: invokestatic  #15
788: aload         35
790: invokestatic  #15
793: aload         36
795: invokestatic  #15
798: new           #16
801: dup
802: invokespecial #17
805: ldc           #18
807: invokevirtual #19
810: iload         37
812: invokevirtual #20
815: ldc           #21
817: invokevirtual #19
820: iconst_0
821: invokevirtual #20
824: ldc           #18
826: invokevirtual #19
829: invokevirtual #22
832: iload         37
834: ifne          841
837: iconst_1
838: goto          842
841: iconst_0
842: invokestatic  #23
845: aload         38
847: invokestatic  #79
850: aload         40
852: invokestatic  #15
855: aload         41
857: invokestatic  #15
860: aload         42
862: invokestatic  #15
865: aload         43
867: invokestatic  #15
870: aload         44
872: invokestatic  #15
875: aload         45
877: invokestatic  #15
880: new           #16
883: dup
884: invokespecial #17
887: ldc           #18
889: invokevirtual #19
892: iload         46
894: invokevirtual #20
897: ldc           #21
899: invokevirtual #19
902: iconst_0
903: invokevirtual #20
906: ldc           #18
908: invokevirtual #19
911: invokevirtual #22
914: iload         46
916: ifne          923
919: iconst_1
920: goto          924
923: iconst_0
924: invokestatic  #23
927: aload         47
929: invokestatic  #15
932: aload         48
934: invokestatic  #15
937: aload         49
939: invokestatic  #15
942: aload         50
944: invokestatic  #15
947: new           #16
950: dup
951: invokespecial #17
954: ldc           #18
956: invokevirtual #19
959: iload         51
961: invokevirtual #20
964: ldc           #21
966: invokevirtual #19
969: iconst_0
970: invokevirtual #20
973: ldc           #18
975: invokevirtual #19
978: invokevirtual #22
981: iload         51
983: ifne          990
986: iconst_1
987: goto          991
990: iconst_0
991: invokestatic  #23
994: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test324
Start line: 17783
End line: 17890
Method source code: 
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        org.jsoup.select.Evaluator.Id id1 = new org.jsoup.select.Evaluator.Id("hi!");
        org.jsoup.nodes.Document document5 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList7 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document5, "hi!");
        org.jsoup.nodes.Element element9 = document5.tagName("hi!");
        org.jsoup.nodes.Element element11 = document5.append("");
        java.lang.String str12 = element11.toString();
        boolean boolean14 = element11.hasAttr("");
        org.jsoup.nodes.Document document18 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList20 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document18, "hi!");
        org.jsoup.nodes.Element element22 = document18.tagName("hi!");
        org.jsoup.nodes.Element element24 = document18.append("");
        org.jsoup.nodes.Element element26 = element24.removeClass("hi!");
        org.jsoup.select.Elements elements29 = element24.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.nodes.Element element31 = element24.prependElement("hi!");
        boolean boolean32 = element31.hasText();
        element31.remove();
        boolean boolean34 = id1.matches(element11, element31);
        org.jsoup.safety.Whitelist whitelist35 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist37 = whitelist35.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner38 = new org.jsoup.safety.Cleaner(whitelist37);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining41 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document43 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document47 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList49 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document47, "hi!");
        org.jsoup.nodes.Element element51 = document47.tagName("hi!");
        org.jsoup.nodes.Element element53 = document47.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = document47.outputSettings();
        boolean boolean55 = attributeWithValueContaining41.matches((org.jsoup.nodes.Element) document43, (org.jsoup.nodes.Element) document47);
        org.jsoup.nodes.Document document56 = cleaner38.clean(document47);
        org.jsoup.nodes.Document document58 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str59 = document58.toString();
        java.lang.String str60 = document58.baseUri();
        org.jsoup.nodes.Document document61 = cleaner38.clean(document58);
        org.jsoup.nodes.Document document62 = document61.clone();
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList68 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document66, "hi!");
        org.jsoup.nodes.Element element69 = document66.empty();
        org.jsoup.nodes.Element element71 = document66.removeClass("hi!");
        org.jsoup.nodes.Element element73 = element71.toggleClass("");
        java.util.List<org.jsoup.nodes.Node> nodeList74 = element73.siblingNodes();
        org.jsoup.nodes.Element element76 = element73.addClass(":gt(100)");
        org.jsoup.nodes.Node node77 = element73.parent();
        java.lang.String str79 = element73.absUrl("[^hi!]");
        org.jsoup.select.Elements elements81 = element73.getElementsByIndexGreaterThan((int) 'a');
        boolean boolean82 = id1.matches((org.jsoup.nodes.Element) document62, element73);
        org.jsoup.parser.Parser parser83 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.nodes.Document document86 = parser83.parseInput("<html>\n <head></head>\n <body>   \n </body>\n</html>", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        org.jsoup.nodes.Document document89 = parser83.parseInput("hi!", "#comment");
        org.jsoup.nodes.Document document91 = org.jsoup.nodes.Document.createShell("hi!");
        java.util.regex.Pattern pattern92 = null;
        org.jsoup.select.Evaluator.MatchesOwn matchesOwn93 = new org.jsoup.select.Evaluator.MatchesOwn(pattern92);
        boolean boolean94 = document91.equals((java.lang.Object) pattern92);
        org.jsoup.nodes.Element element97 = document91.attr("[.]", ".<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean98 = id1.matches((org.jsoup.nodes.Element) document89, element97);
        org.jsoup.nodes.Element element99 = element97.previousElementSibling();
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(nodeList7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str12, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(nodeList20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(element24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(elements29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(whitelist35);
        org.junit.Assert.assertNotNull(whitelist37);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document47);
        org.junit.Assert.assertNotNull(nodeList49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(outputSettings54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(document58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str59, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(element71);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertNotNull(nodeList74);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(elements81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parser83);
        org.junit.Assert.assertNotNull(document86);
        org.junit.Assert.assertNotNull(document89);
        org.junit.Assert.assertNotNull(document91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(element97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNull(element99);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #946
20: aastore
21: invokevirtual #7
24: pop
25: new           #388
28: dup
29: ldc           #12
31: invokespecial #389
34: astore_1
35: ldc           #25
37: ldc           #12
39: invokestatic  #26
42: astore_2
43: ldc           #12
45: aload_2
46: ldc           #12
48: invokestatic  #27
51: astore_3
52: aload_2
53: ldc           #12
55: invokevirtual #28
58: astore        4
60: aload_2
61: ldc           #25
63: invokevirtual #29
66: astore        5
68: aload         5
70: invokevirtual #363
73: astore        6
75: aload         5
77: ldc           #25
79: invokevirtual #364
82: istore        7
84: ldc           #25
86: ldc           #12
88: invokestatic  #26
91: astore        8
93: ldc           #12
95: aload         8
97: ldc           #12
99: invokestatic  #27
102: astore        9
104: aload         8
106: ldc           #12
108: invokevirtual #28
111: astore        10
113: aload         8
115: ldc           #25
117: invokevirtual #29
120: astore        11
122: aload         11
124: ldc           #12
126: invokevirtual #390
129: astore        12
131: aload         11
133: ldc           #51
135: ldc           #98
137: invokevirtual #391
140: astore        13
142: aload         11
144: ldc           #12
146: invokevirtual #392
149: astore        14
151: aload         14
153: invokevirtual #393
156: istore        15
158: aload         14
160: invokevirtual #394
163: aload_1
164: aload         5
166: aload         14
168: invokevirtual #395
171: istore        16
173: invokestatic  #8
176: astore        17
178: aload         17
180: iconst_1
181: invokevirtual #9
184: astore        18
186: new           #40
189: dup
190: aload         18
192: invokespecial #41
195: astore        19
197: new           #42
200: dup
201: ldc           #43
203: ldc           #32
205: invokespecial #44
208: astore        20
210: ldc           #12
212: invokestatic  #45
215: astore        21
217: ldc           #25
219: ldc           #12
221: invokestatic  #26
224: astore        22
226: ldc           #12
228: aload         22
230: ldc           #12
232: invokestatic  #27
235: astore        23
237: aload         22
239: ldc           #12
241: invokevirtual #28
244: astore        24
246: aload         22
248: ldc           #25
250: invokevirtual #29
253: astore        25
255: aload         22
257: invokevirtual #30
260: astore        26
262: aload         20
264: aload         21
266: aload         22
268: invokevirtual #46
271: istore        27
273: aload         19
275: aload         22
277: invokevirtual #47
280: astore        28
282: ldc           #10
284: invokestatic  #193
287: astore        29
289: aload         29
291: invokevirtual #72
294: astore        30
296: aload         29
298: invokevirtual #194
301: astore        31
303: aload         19
305: aload         29
307: invokevirtual #47
310: astore        32
312: aload         32
314: invokevirtual #154
317: astore        33
319: ldc           #25
321: ldc           #12
323: invokestatic  #26
326: astore        34
328: ldc           #12
330: aload         34
332: ldc           #12
334: invokestatic  #27
337: astore        35
339: aload         34
341: invokevirtual #103
344: astore        36
346: aload         34
348: ldc           #12
350: invokevirtual #59
353: astore        37
355: aload         37
357: ldc           #25
359: invokevirtual #177
362: astore        38
364: aload         38
366: invokevirtual #396
369: astore        39
371: aload         38
373: ldc           #92
375: invokevirtual #397
378: astore        40
380: aload         38
382: invokevirtual #252
385: astore        41
387: aload         38
389: ldc           #50
391: invokevirtual #398
394: astore        42
396: aload         38
398: bipush        97
400: invokevirtual #399
403: astore        43
405: aload_1
406: aload         33
408: aload         38
410: invokevirtual #395
413: istore        44
415: invokestatic  #419
418: astore        45
420: aload         45
422: ldc           #151
424: ldc           #110
426: invokevirtual #420
429: astore        46
431: aload         45
433: ldc           #12
435: ldc           #114
437: invokevirtual #420
440: astore        47
442: ldc           #12
444: invokestatic  #45
447: astore        48
449: aconst_null
450: astore        49
452: new           #345
455: dup
456: aload         49
458: invokespecial #346
461: astore        50
463: aload         48
465: aload         49
467: invokevirtual #202
470: istore        51
472: aload         48
474: ldc_w         #421
477: ldc           #32
479: invokevirtual #56
482: astore        52
484: aload_1
485: aload         47
487: aload         52
489: invokevirtual #395
492: istore        53
494: aload         52
496: invokevirtual #947
499: astore        54
501: aload_2
502: invokestatic  #15
505: aload_3
506: invokestatic  #15
509: aload         4
511: invokestatic  #15
514: aload         5
516: invokestatic  #15
519: new           #16
522: dup
523: invokespecial #17
526: ldc           #18
528: invokevirtual #19
531: aload         6
533: invokevirtual #19
536: ldc           #78
538: invokevirtual #19
541: invokevirtual #22
544: aload         6
546: ldc           #10
548: invokestatic  #68
551: new           #16
554: dup
555: invokespecial #17
558: ldc           #18
560: invokevirtual #19
563: iload         7
565: invokevirtual #20
568: ldc           #21
570: invokevirtual #19
573: iconst_0
574: invokevirtual #20
577: ldc           #18
579: invokevirtual #19
582: invokevirtual #22
585: iload         7
587: ifne          594
590: iconst_1
591: goto          595
594: iconst_0
595: invokestatic  #23
598: aload         8
600: invokestatic  #15
603: aload         9
605: invokestatic  #15
608: aload         10
610: invokestatic  #15
613: aload         11
615: invokestatic  #15
618: aload         12
620: invokestatic  #15
623: aload         13
625: invokestatic  #15
628: aload         14
630: invokestatic  #15
633: new           #16
636: dup
637: invokespecial #17
640: ldc           #18
642: invokevirtual #19
645: iload         15
647: invokevirtual #20
650: ldc           #21
652: invokevirtual #19
655: iconst_0
656: invokevirtual #20
659: ldc           #18
661: invokevirtual #19
664: invokevirtual #22
667: iload         15
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #23
680: new           #16
683: dup
684: invokespecial #17
687: ldc           #18
689: invokevirtual #19
692: iload         16
694: invokevirtual #20
697: ldc           #21
699: invokevirtual #19
702: iconst_0
703: invokevirtual #20
706: ldc           #18
708: invokevirtual #19
711: invokevirtual #22
714: iload         16
716: ifne          723
719: iconst_1
720: goto          724
723: iconst_0
724: invokestatic  #23
727: aload         17
729: invokestatic  #15
732: aload         18
734: invokestatic  #15
737: aload         21
739: invokestatic  #15
742: aload         22
744: invokestatic  #15
747: aload         23
749: invokestatic  #15
752: aload         24
754: invokestatic  #15
757: aload         25
759: invokestatic  #15
762: aload         26
764: invokestatic  #15
767: new           #16
770: dup
771: invokespecial #17
774: ldc           #18
776: invokevirtual #19
779: iload         27
781: invokevirtual #20
784: ldc           #21
786: invokevirtual #19
789: iconst_0
790: invokevirtual #20
793: ldc           #18
795: invokevirtual #19
798: invokevirtual #22
801: iload         27
803: ifne          810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #23
814: aload         28
816: invokestatic  #15
819: aload         29
821: invokestatic  #15
824: new           #16
827: dup
828: invokespecial #17
831: ldc           #18
833: invokevirtual #19
836: aload         30
838: invokevirtual #19
841: ldc           #197
843: invokevirtual #19
846: invokevirtual #22
849: aload         30
851: ldc           #151
853: invokestatic  #68
856: new           #16
859: dup
860: invokespecial #17
863: ldc           #18
865: invokevirtual #19
868: aload         31
870: invokevirtual #19
873: ldc           #67
875: invokevirtual #19
878: invokevirtual #22
881: aload         31
883: ldc           #25
885: invokestatic  #68
888: aload         32
890: invokestatic  #15
893: aload         33
895: invokestatic  #15
898: aload         34
900: invokestatic  #15
903: aload         35
905: invokestatic  #15
908: aload         36
910: invokestatic  #15
913: aload         37
915: invokestatic  #15
918: aload         38
920: invokestatic  #15
923: aload         39
925: invokestatic  #15
928: aload         40
930: invokestatic  #15
933: aload         41
935: invokestatic  #79
938: new           #16
941: dup
942: invokespecial #17
945: ldc           #18
947: invokevirtual #19
950: aload         42
952: invokevirtual #19
955: ldc           #67
957: invokevirtual #19
960: invokevirtual #22
963: aload         42
965: ldc           #25
967: invokestatic  #68
970: aload         43
972: invokestatic  #15
975: new           #16
978: dup
979: invokespecial #17
982: ldc           #18
984: invokevirtual #19
987: iload         44
989: invokevirtual #20
992: ldc           #21
994: invokevirtual #19
997: iconst_0
998: invokevirtual #20
1001: ldc           #18
1003: invokevirtual #19
1006: invokevirtual #22
1009: iload         44
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #23
1022: aload         45
1024: invokestatic  #15
1027: aload         46
1029: invokestatic  #15
1032: aload         47
1034: invokestatic  #15
1037: aload         48
1039: invokestatic  #15
1042: new           #16
1045: dup
1046: invokespecial #17
1049: ldc           #18
1051: invokevirtual #19
1054: iload         51
1056: invokevirtual #20
1059: ldc           #21
1061: invokevirtual #19
1064: iconst_0
1065: invokevirtual #20
1068: ldc           #18
1070: invokevirtual #19
1073: invokevirtual #22
1076: iload         51
1078: ifne          1085
1081: iconst_1
1082: goto          1086
1085: iconst_0
1086: invokestatic  #23
1089: aload         52
1091: invokestatic  #15
1094: new           #16
1097: dup
1098: invokespecial #17
1101: ldc           #18
1103: invokevirtual #19
1106: iload         53
1108: invokevirtual #20
1111: ldc           #21
1113: invokevirtual #19
1116: iconst_0
1117: invokevirtual #20
1120: ldc           #18
1122: invokevirtual #19
1125: invokevirtual #22
1128: iload         53
1130: ifne          1137
1133: iconst_1
1134: goto          1138
1137: iconst_0
1138: invokestatic  #23
1141: aload         54
1143: invokestatic  #79
1146: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test325
Start line: 17893
End line: 17974
Method source code: 
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        org.jsoup.nodes.Document document3 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList5 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document3, "hi!");
        org.jsoup.nodes.Element element7 = document3.tagName("hi!");
        org.jsoup.nodes.Element element9 = document3.append("");
        org.jsoup.nodes.Element element11 = element9.removeClass("hi!");
        org.jsoup.select.Elements elements14 = element9.getElementsByAttributeValue("#text", "\nhi!");
        org.jsoup.helper.Validate.notNull((java.lang.Object) element9, ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document20 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList22 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document20, "hi!");
        org.jsoup.nodes.Element element23 = document20.empty();
        org.jsoup.nodes.Element element25 = element23.toggleClass("#document");
        org.jsoup.nodes.Element element27 = element25.tagName("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray31 = new java.lang.String[] { "\n<!--hi!-->", "", "[:lt(32)]" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        org.jsoup.nodes.Element element34 = element25.classNames((java.util.Set<java.lang.String>) strSet32);
        org.jsoup.nodes.Element element35 = element9.classNames((java.util.Set<java.lang.String>) strSet32);
        org.jsoup.select.Elements elements37 = element35.getElementsContainingText("#text");
        java.util.regex.Pattern pattern39 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching40 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("#.\n<!---->", pattern39);
        org.jsoup.safety.Whitelist whitelist41 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist43 = whitelist41.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner44 = new org.jsoup.safety.Cleaner(whitelist43);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining47 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document49 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document53 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList55 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document53, "hi!");
        org.jsoup.nodes.Element element57 = document53.tagName("hi!");
        org.jsoup.nodes.Element element59 = document53.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = document53.outputSettings();
        boolean boolean61 = attributeWithValueContaining47.matches((org.jsoup.nodes.Element) document49, (org.jsoup.nodes.Element) document53);
        org.jsoup.nodes.Document document62 = cleaner44.clean(document53);
        org.jsoup.nodes.Document document66 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList68 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document66, "hi!");
        org.jsoup.nodes.Element element70 = document66.tagName("hi!");
        document66.title("hi!");
        org.jsoup.select.Elements elements74 = document66.getElementsByAttributeStarting("[<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>!=[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]]");
        boolean boolean75 = attributeWithValueMatching40.matches((org.jsoup.nodes.Element) document53, (org.jsoup.nodes.Element) document66);
        org.jsoup.nodes.Element element76 = element35.appendChild((org.jsoup.nodes.Node) document66);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.nodes.Element element78 = element76.prependElement("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document3);
        org.junit.Assert.assertNotNull(nodeList5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(elements14);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertNotNull(nodeList22);
        org.junit.Assert.assertNotNull(element23);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(element34);
        org.junit.Assert.assertNotNull(element35);
        org.junit.Assert.assertNotNull(elements37);
        org.junit.Assert.assertNotNull(whitelist41);
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertNotNull(nodeList55);
        org.junit.Assert.assertNotNull(element57);
        org.junit.Assert.assertNotNull(element59);
        org.junit.Assert.assertNotNull(outputSettings60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(document62);
        org.junit.Assert.assertNotNull(document66);
        org.junit.Assert.assertNotNull(nodeList68);
        org.junit.Assert.assertNotNull(element70);
        org.junit.Assert.assertNotNull(elements74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(element76);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #948
20: aastore
21: invokevirtual #7
24: pop
25: ldc           #25
27: ldc           #12
29: invokestatic  #26
32: astore_1
33: ldc           #12
35: aload_1
36: ldc           #12
38: invokestatic  #27
41: astore_2
42: aload_1
43: ldc           #12
45: invokevirtual #28
48: astore_3
49: aload_1
50: ldc           #25
52: invokevirtual #29
55: astore        4
57: aload         4
59: ldc           #12
61: invokevirtual #390
64: astore        5
66: aload         4
68: ldc           #51
70: ldc           #98
72: invokevirtual #391
75: astore        6
77: aload         4
79: ldc           #32
81: invokestatic  #181
84: ldc           #25
86: ldc           #12
88: invokestatic  #26
91: astore        7
93: ldc           #12
95: aload         7
97: ldc           #12
99: invokestatic  #27
102: astore        8
104: aload         7
106: invokevirtual #103
109: astore        9
111: aload         9
113: ldc           #13
115: invokevirtual #177
118: astore        10
120: aload         10
122: ldc           #249
124: invokevirtual #256
127: astore        11
129: iconst_3
130: anewarray     #119
133: dup
134: iconst_0
135: ldc           #84
137: aastore
138: dup
139: iconst_1
140: ldc           #25
142: aastore
143: dup
144: iconst_2
145: ldc           #58
147: aastore
148: astore        12
150: new           #949
153: dup
154: invokespecial #950
157: astore        13
159: aload         13
161: aload         12
163: invokestatic  #951
166: istore        14
168: aload         10
170: aload         13
172: invokevirtual #952
175: astore        15
177: aload         4
179: aload         13
181: invokevirtual #952
184: astore        16
186: aload         16
188: ldc           #51
190: invokevirtual #953
193: astore        17
195: aconst_null
196: astore        18
198: new           #96
201: dup
202: ldc_w         #520
205: aload         18
207: invokespecial #97
210: astore        19
212: invokestatic  #8
215: astore        20
217: aload         20
219: iconst_1
220: invokevirtual #9
223: astore        21
225: new           #40
228: dup
229: aload         21
231: invokespecial #41
234: astore        22
236: new           #42
239: dup
240: ldc           #43
242: ldc           #32
244: invokespecial #44
247: astore        23
249: ldc           #12
251: invokestatic  #45
254: astore        24
256: ldc           #25
258: ldc           #12
260: invokestatic  #26
263: astore        25
265: ldc           #12
267: aload         25
269: ldc           #12
271: invokestatic  #27
274: astore        26
276: aload         25
278: ldc           #12
280: invokevirtual #28
283: astore        27
285: aload         25
287: ldc           #25
289: invokevirtual #29
292: astore        28
294: aload         25
296: invokevirtual #30
299: astore        29
301: aload         23
303: aload         24
305: aload         25
307: invokevirtual #46
310: istore        30
312: aload         22
314: aload         25
316: invokevirtual #47
319: astore        31
321: ldc           #25
323: ldc           #12
325: invokestatic  #26
328: astore        32
330: ldc           #12
332: aload         32
334: ldc           #12
336: invokestatic  #27
339: astore        33
341: aload         32
343: ldc           #12
345: invokevirtual #28
348: astore        34
350: aload         32
352: ldc           #12
354: invokevirtual #451
357: aload         32
359: ldc_w         #273
362: invokevirtual #140
365: astore        35
367: aload         19
369: aload         25
371: aload         32
373: invokevirtual #101
376: istore        36
378: aload         16
380: aload         32
382: invokevirtual #954
385: astore        37
387: aload         37
389: ldc           #25
391: invokevirtual #392
394: astore        38
396: ldc           #141
398: invokestatic  #35
401: goto          406
404: astore        38
406: aload_1
407: invokestatic  #15
410: aload_2
411: invokestatic  #15
414: aload_3
415: invokestatic  #15
418: aload         4
420: invokestatic  #15
423: aload         5
425: invokestatic  #15
428: aload         6
430: invokestatic  #15
433: aload         7
435: invokestatic  #15
438: aload         8
440: invokestatic  #15
443: aload         9
445: invokestatic  #15
448: aload         10
450: invokestatic  #15
453: aload         11
455: invokestatic  #15
458: aload         12
460: invokestatic  #15
463: new           #16
466: dup
467: invokespecial #17
470: ldc           #18
472: invokevirtual #19
475: iload         14
477: invokevirtual #20
480: ldc           #21
482: invokevirtual #19
485: iconst_1
486: invokevirtual #20
489: ldc           #18
491: invokevirtual #19
494: invokevirtual #22
497: iload         14
499: iconst_1
500: if_icmpne     507
503: iconst_1
504: goto          508
507: iconst_0
508: invokestatic  #23
511: aload         15
513: invokestatic  #15
516: aload         16
518: invokestatic  #15
521: aload         17
523: invokestatic  #15
526: aload         20
528: invokestatic  #15
531: aload         21
533: invokestatic  #15
536: aload         24
538: invokestatic  #15
541: aload         25
543: invokestatic  #15
546: aload         26
548: invokestatic  #15
551: aload         27
553: invokestatic  #15
556: aload         28
558: invokestatic  #15
561: aload         29
563: invokestatic  #15
566: new           #16
569: dup
570: invokespecial #17
573: ldc           #18
575: invokevirtual #19
578: iload         30
580: invokevirtual #20
583: ldc           #21
585: invokevirtual #19
588: iconst_0
589: invokevirtual #20
592: ldc           #18
594: invokevirtual #19
597: invokevirtual #22
600: iload         30
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #23
613: aload         31
615: invokestatic  #15
618: aload         32
620: invokestatic  #15
623: aload         33
625: invokestatic  #15
628: aload         34
630: invokestatic  #15
633: aload         35
635: invokestatic  #15
638: new           #16
641: dup
642: invokespecial #17
645: ldc           #18
647: invokevirtual #19
650: iload         36
652: invokevirtual #20
655: ldc           #21
657: invokevirtual #19
660: iconst_0
661: invokevirtual #20
664: ldc           #18
666: invokevirtual #19
669: invokevirtual #22
672: iload         36
674: ifne          681
677: iconst_1
678: goto          682
681: iconst_0
682: invokestatic  #23
685: aload         37
687: invokestatic  #15
690: return
Exception table:
from    to  target type
387   401   404   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test326
Start line: 17977
End line: 18011
Method source code: 
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        org.jsoup.safety.Whitelist whitelist2 = org.jsoup.safety.Whitelist.relaxed();
        org.jsoup.nodes.Attributes attributes4 = whitelist2.getEnforcedAttributes("#text");
        java.lang.String str5 = org.jsoup.Jsoup.clean("", "<html>\n <head></head>\n <body>\n </body>\n</html>", whitelist2);
        org.jsoup.safety.Whitelist whitelist9 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist11 = whitelist9.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist13 = whitelist11.preserveRelativeLinks(false);
        java.lang.String[] strArray22 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean23 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray22);
        org.jsoup.safety.Whitelist whitelist24 = whitelist13.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray22);
        boolean boolean25 = org.jsoup.helper.StringUtil.in("#text", strArray22);
        boolean boolean26 = org.jsoup.helper.StringUtil.in("\n<!---->", strArray22);
        org.jsoup.safety.Whitelist whitelist27 = whitelist2.addAttributes("[:lt(32)]", strArray22);
        // The following exception was thrown during execution in test generation
        try {
            org.jsoup.safety.Whitelist whitelist31 = whitelist27.addEnforcedAttribute("[<html>\n <head></head> \n <body>  \n </body>\n</html>]", "", "[[<!---->!=:contains(:matchesown(null]^=:lt(32)=\"\"=\".\"]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: String must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(attributes4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(whitelist9);
        org.junit.Assert.assertNotNull(whitelist11);
        org.junit.Assert.assertNotNull(whitelist13);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(whitelist24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(whitelist27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #955
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #118
28: astore_1
29: aload_1
30: ldc           #51
32: invokevirtual #150
35: astore_2
36: ldc           #25
38: ldc           #157
40: aload_1
41: invokestatic  #94
44: astore_3
45: invokestatic  #8
48: astore        4
50: aload         4
52: iconst_1
53: invokevirtual #9
56: astore        5
58: aload         5
60: iconst_0
61: invokevirtual #9
64: astore        6
66: iconst_5
67: anewarray     #119
70: dup
71: iconst_0
72: ldc           #13
74: aastore
75: dup
76: iconst_1
77: ldc           #32
79: aastore
80: dup
81: iconst_2
82: ldc           #10
84: aastore
85: dup
86: iconst_3
87: ldc           #43
89: aastore
90: dup
91: iconst_4
92: ldc           #58
94: aastore
95: astore        7
97: ldc           #10
99: aload         7
101: invokestatic  #123
104: istore        8
106: aload         6
108: ldc           #120
110: ldc           #55
112: aload         7
114: invokevirtual #122
117: astore        9
119: ldc           #51
121: aload         7
123: invokestatic  #123
126: istore        10
128: ldc           #120
130: aload         7
132: invokestatic  #123
135: istore        11
137: aload_1
138: ldc           #58
140: aload         7
142: invokevirtual #127
145: astore        12
147: aload         12
149: ldc_w         #956
152: ldc           #25
154: ldc_w         #957
157: invokevirtual #11
160: astore        13
162: ldc           #141
164: invokestatic  #35
167: goto          172
170: astore        13
172: aload_1
173: invokestatic  #15
176: aload_2
177: invokestatic  #15
180: new           #16
183: dup
184: invokespecial #17
187: ldc           #18
189: invokevirtual #19
192: aload_3
193: invokevirtual #19
196: ldc           #67
198: invokevirtual #19
201: invokevirtual #22
204: aload_3
205: ldc           #25
207: invokestatic  #68
210: aload         4
212: invokestatic  #15
215: aload         5
217: invokestatic  #15
220: aload         6
222: invokestatic  #15
225: aload         7
227: invokestatic  #15
230: new           #16
233: dup
234: invokespecial #17
237: ldc           #18
239: invokevirtual #19
242: iload         8
244: invokevirtual #20
247: ldc           #21
249: invokevirtual #19
252: iconst_1
253: invokevirtual #20
256: ldc           #18
258: invokevirtual #19
261: invokevirtual #22
264: iload         8
266: iconst_1
267: if_icmpne     274
270: iconst_1
271: goto          275
274: iconst_0
275: invokestatic  #23
278: aload         9
280: invokestatic  #15
283: new           #16
286: dup
287: invokespecial #17
290: ldc           #18
292: invokevirtual #19
295: iload         10
297: invokevirtual #20
300: ldc           #21
302: invokevirtual #19
305: iconst_0
306: invokevirtual #20
309: ldc           #18
311: invokevirtual #19
314: invokevirtual #22
317: iload         10
319: ifne          326
322: iconst_1
323: goto          327
326: iconst_0
327: invokestatic  #23
330: new           #16
333: dup
334: invokespecial #17
337: ldc           #18
339: invokevirtual #19
342: iload         11
344: invokevirtual #20
347: ldc           #21
349: invokevirtual #19
352: iconst_0
353: invokevirtual #20
356: ldc           #18
358: invokevirtual #19
361: invokevirtual #22
364: iload         11
366: ifne          373
369: iconst_1
370: goto          374
373: iconst_0
374: invokestatic  #23
377: aload         12
379: invokestatic  #15
382: return
Exception table:
from    to  target type
147   167   170   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test327
Start line: 18014
End line: 18084
Method source code: 
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist4 = whitelist2.preserveRelativeLinks(false);
        java.lang.String[] strArray13 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean14 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist15 = whitelist4.addProtocols("\n<!---->", "<html>\n <head></head>\n <body>\n  [^hi!]\n </body>\n</html>", strArray13);
        org.jsoup.safety.Whitelist whitelist19 = whitelist4.addEnforcedAttribute(":lt(100)", "[text=\"hi!\" #document=\"#document\"!=:eq(1)]", ". <!---->");
        org.jsoup.safety.Whitelist whitelist23 = org.jsoup.safety.Whitelist.basicWithImages();
        java.lang.String str24 = org.jsoup.Jsoup.clean("[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", ":containsOwn([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", whitelist23);
        boolean boolean26 = whitelist23.isSafeTag("");
        org.jsoup.safety.Whitelist whitelist28 = whitelist23.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist30 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist32 = whitelist30.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist36 = whitelist30.addEnforcedAttribute("<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.safety.Whitelist whitelist40 = whitelist30.addEnforcedAttribute("hi!", "#document", "hi!");
        java.lang.String str41 = org.jsoup.Jsoup.clean("hi!", whitelist30);
        org.jsoup.safety.Whitelist whitelist43 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist45 = whitelist43.preserveRelativeLinks(true);
        org.jsoup.safety.Whitelist whitelist47 = whitelist45.preserveRelativeLinks(false);
        org.jsoup.safety.Whitelist whitelist51 = org.jsoup.safety.Whitelist.relaxed();
        java.lang.String str52 = org.jsoup.Jsoup.clean(":lt(32)", whitelist51);
        org.jsoup.safety.Whitelist whitelist56 = whitelist51.addEnforcedAttribute(":lt(32)", "hi!", ".<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String[] strArray63 = new java.lang.String[] { "[hi!$=<html>\n <head></head>\n <body></body>\n</html>]", "<html>\n <head></head>\n <body></body>\n</html>", "#document", "[^hi!]", "hi!", "\n<!---->" };
        org.jsoup.safety.Whitelist whitelist64 = whitelist51.addTags(strArray63);
        org.jsoup.safety.Whitelist whitelist65 = whitelist47.addProtocols(":matchesOwn(null", "hi!", strArray63);
        java.lang.String[] strArray74 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean75 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray74);
        org.jsoup.safety.Whitelist whitelist76 = whitelist65.addProtocols("\n<!--hi!-->", "#document", strArray74);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray74);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray74);
        org.jsoup.safety.Whitelist whitelist79 = whitelist30.addAttributes("[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]", strArray74);
        org.jsoup.safety.Whitelist whitelist80 = whitelist23.addTags(strArray74);
        boolean boolean81 = org.jsoup.helper.StringUtil.in(":lt(32)=\"[.]\"", strArray74);
        org.jsoup.helper.Validate.noNullElements((java.lang.Object[]) strArray74);
        org.jsoup.safety.Whitelist whitelist83 = whitelist4.addTags(strArray74);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(whitelist4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(whitelist15);
        org.junit.Assert.assertNotNull(whitelist19);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!$=   ]" + "'", str24, "[hi!$=   ]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(whitelist28);
        org.junit.Assert.assertNotNull(whitelist30);
        org.junit.Assert.assertNotNull(whitelist32);
        org.junit.Assert.assertNotNull(whitelist36);
        org.junit.Assert.assertNotNull(whitelist40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(whitelist43);
        org.junit.Assert.assertNotNull(whitelist45);
        org.junit.Assert.assertNotNull(whitelist47);
        org.junit.Assert.assertNotNull(whitelist51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":lt(32)" + "'", str52, ":lt(32)");
        org.junit.Assert.assertNotNull(whitelist56);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(whitelist64);
        org.junit.Assert.assertNotNull(whitelist65);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(whitelist76);
        org.junit.Assert.assertNotNull(whitelist79);
        org.junit.Assert.assertNotNull(whitelist80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(whitelist83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #958
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: aload_2
36: iconst_0
37: invokevirtual #9
40: astore_3
41: iconst_5
42: anewarray     #119
45: dup
46: iconst_0
47: ldc           #13
49: aastore
50: dup
51: iconst_1
52: ldc           #32
54: aastore
55: dup
56: iconst_2
57: ldc           #10
59: aastore
60: dup
61: iconst_3
62: ldc           #43
64: aastore
65: dup
66: iconst_4
67: ldc           #58
69: aastore
70: astore        4
72: ldc           #10
74: aload         4
76: invokestatic  #123
79: istore        5
81: aload_3
82: ldc           #120
84: ldc           #55
86: aload         4
88: invokevirtual #122
91: astore        6
93: aload_3
94: ldc_w         #959
97: ldc_w         #617
100: ldc_w         #590
103: invokevirtual #11
106: astore        7
108: invokestatic  #8
111: astore        8
113: ldc           #109
115: ldc           #110
117: aload         8
119: invokestatic  #94
122: astore        9
124: aload         8
126: ldc           #25
128: invokevirtual #83
131: istore        10
133: aload         8
135: iconst_0
136: invokevirtual #9
139: astore        11
141: invokestatic  #8
144: astore        12
146: aload         12
148: iconst_1
149: invokevirtual #9
152: astore        13
154: aload         12
156: ldc           #10
158: ldc           #10
160: ldc           #10
162: invokevirtual #11
165: astore        14
167: aload         12
169: ldc           #12
171: ldc           #13
173: ldc           #12
175: invokevirtual #11
178: astore        15
180: ldc           #12
182: aload         12
184: invokestatic  #81
187: astore        16
189: invokestatic  #8
192: astore        17
194: aload         17
196: iconst_1
197: invokevirtual #9
200: astore        18
202: aload         18
204: iconst_0
205: invokevirtual #9
208: astore        19
210: invokestatic  #118
213: astore        20
215: ldc           #43
217: aload         20
219: invokestatic  #81
222: astore        21
224: aload         20
226: ldc           #43
228: ldc           #12
230: ldc           #32
232: invokevirtual #11
235: astore        22
237: bipush        6
239: anewarray     #119
242: dup
243: iconst_0
244: ldc           #109
246: aastore
247: dup
248: iconst_1
249: ldc           #10
251: aastore
252: dup
253: iconst_2
254: ldc           #13
256: aastore
257: dup
258: iconst_3
259: ldc           #50
261: aastore
262: dup
263: iconst_4
264: ldc           #12
266: aastore
267: dup
268: iconst_5
269: ldc           #120
271: aastore
272: astore        23
274: aload         20
276: aload         23
278: invokevirtual #121
281: astore        24
283: aload         19
285: ldc           #38
287: ldc           #12
289: aload         23
291: invokevirtual #122
294: astore        25
296: iconst_5
297: anewarray     #119
300: dup
301: iconst_0
302: ldc           #13
304: aastore
305: dup
306: iconst_1
307: ldc           #32
309: aastore
310: dup
311: iconst_2
312: ldc           #10
314: aastore
315: dup
316: iconst_3
317: ldc           #43
319: aastore
320: dup
321: iconst_4
322: ldc           #58
324: aastore
325: astore        26
327: ldc           #10
329: aload         26
331: invokestatic  #123
334: istore        27
336: aload         25
338: ldc           #84
340: ldc           #13
342: aload         26
344: invokevirtual #122
347: astore        28
349: aload         26
351: checkcast     #124
354: invokestatic  #125
357: aload         26
359: checkcast     #124
362: invokestatic  #125
365: aload         12
367: ldc           #249
369: aload         26
371: invokevirtual #127
374: astore        29
376: aload         8
378: aload         26
380: invokevirtual #121
383: astore        30
385: ldc           #230
387: aload         26
389: invokestatic  #123
392: istore        31
394: aload         26
396: checkcast     #124
399: invokestatic  #125
402: aload_3
403: aload         26
405: invokevirtual #121
408: astore        32
410: aload_1
411: invokestatic  #15
414: aload_2
415: invokestatic  #15
418: aload_3
419: invokestatic  #15
422: aload         4
424: invokestatic  #15
427: new           #16
430: dup
431: invokespecial #17
434: ldc           #18
436: invokevirtual #19
439: iload         5
441: invokevirtual #20
444: ldc           #21
446: invokevirtual #19
449: iconst_1
450: invokevirtual #20
453: ldc           #18
455: invokevirtual #19
458: invokevirtual #22
461: iload         5
463: iconst_1
464: if_icmpne     471
467: iconst_1
468: goto          472
471: iconst_0
472: invokestatic  #23
475: aload         6
477: invokestatic  #15
480: aload         7
482: invokestatic  #15
485: aload         8
487: invokestatic  #15
490: new           #16
493: dup
494: invokespecial #17
497: ldc           #18
499: invokevirtual #19
502: aload         9
504: invokevirtual #19
507: ldc           #111
509: invokevirtual #19
512: invokevirtual #22
515: aload         9
517: ldc           #65
519: invokestatic  #68
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: iload         10
536: invokevirtual #20
539: ldc           #21
541: invokevirtual #19
544: iconst_0
545: invokevirtual #20
548: ldc           #18
550: invokevirtual #19
553: invokevirtual #22
556: iload         10
558: ifne          565
561: iconst_1
562: goto          566
565: iconst_0
566: invokestatic  #23
569: aload         11
571: invokestatic  #15
574: aload         12
576: invokestatic  #15
579: aload         13
581: invokestatic  #15
584: aload         14
586: invokestatic  #15
589: aload         15
591: invokestatic  #15
594: new           #16
597: dup
598: invokespecial #17
601: ldc           #18
603: invokevirtual #19
606: aload         16
608: invokevirtual #19
611: ldc           #211
613: invokevirtual #19
616: invokevirtual #22
619: aload         16
621: ldc           #12
623: invokestatic  #68
626: aload         17
628: invokestatic  #15
631: aload         18
633: invokestatic  #15
636: aload         19
638: invokestatic  #15
641: aload         20
643: invokestatic  #15
646: new           #16
649: dup
650: invokespecial #17
653: ldc           #18
655: invokevirtual #19
658: aload         21
660: invokevirtual #19
663: ldc           #128
665: invokevirtual #19
668: invokevirtual #22
671: aload         21
673: ldc           #43
675: invokestatic  #68
678: aload         22
680: invokestatic  #15
683: aload         23
685: invokestatic  #15
688: aload         24
690: invokestatic  #15
693: aload         25
695: invokestatic  #15
698: aload         26
700: invokestatic  #15
703: new           #16
706: dup
707: invokespecial #17
710: ldc           #18
712: invokevirtual #19
715: iload         27
717: invokevirtual #20
720: ldc           #21
722: invokevirtual #19
725: iconst_1
726: invokevirtual #20
729: ldc           #18
731: invokevirtual #19
734: invokevirtual #22
737: iload         27
739: iconst_1
740: if_icmpne     747
743: iconst_1
744: goto          748
747: iconst_0
748: invokestatic  #23
751: aload         28
753: invokestatic  #15
756: aload         29
758: invokestatic  #15
761: aload         30
763: invokestatic  #15
766: new           #16
769: dup
770: invokespecial #17
773: ldc           #18
775: invokevirtual #19
778: iload         31
780: invokevirtual #20
783: ldc           #21
785: invokevirtual #19
788: iconst_0
789: invokevirtual #20
792: ldc           #18
794: invokevirtual #19
797: invokevirtual #22
800: iload         31
802: ifne          809
805: iconst_1
806: goto          810
809: iconst_0
810: invokestatic  #23
813: aload         32
815: invokestatic  #15
818: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test328
Start line: 18087
End line: 18152
Method source code: 
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        org.jsoup.parser.Parser parser0 = org.jsoup.parser.Parser.htmlParser();
        org.jsoup.parser.Parser parser2 = parser0.setTrackErrors(0);
        boolean boolean3 = parser0.isTrackErrors();
        org.jsoup.parser.Parser parser5 = parser0.setTrackErrors((int) (byte) 0);
        org.jsoup.nodes.Document document8 = parser0.parseInput(":lt(10)", ":eq(1)");
        org.jsoup.nodes.Element element9 = document8.clone();
        org.jsoup.safety.Whitelist whitelist10 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist12 = whitelist10.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner13 = new org.jsoup.safety.Cleaner(whitelist12);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining16 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document18 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document22 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList24 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document22, "hi!");
        org.jsoup.nodes.Element element26 = document22.tagName("hi!");
        org.jsoup.nodes.Element element28 = document22.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = document22.outputSettings();
        boolean boolean30 = attributeWithValueContaining16.matches((org.jsoup.nodes.Element) document18, (org.jsoup.nodes.Element) document22);
        org.jsoup.nodes.Document document31 = cleaner13.clean(document22);
        org.jsoup.nodes.Document document35 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList37 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document35, "hi!");
        org.jsoup.nodes.Element element39 = document35.tagName("hi!");
        org.jsoup.nodes.Element element41 = document35.append("");
        java.lang.String str42 = document35.toString();
        java.lang.String str43 = document35.id();
        org.jsoup.nodes.Node node44 = document35.parent();
        org.jsoup.nodes.Document document45 = cleaner13.clean(document35);
        java.lang.String str46 = document35.title();
        org.jsoup.nodes.Element element48 = document35.removeClass(":eq(1)");
        org.jsoup.nodes.Element element49 = document35.clone();
        org.jsoup.nodes.Element element51 = document35.prependText("<html>\n <head></head>\n <body></body>\n</html>:containsown([:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]<html>\n <head></head>\n <body></body>\n</html>");
        boolean boolean52 = document8.equals((java.lang.Object) document35);
        java.lang.String str53 = document35.outerHtml();
        org.junit.Assert.assertNotNull(parser0);
        org.junit.Assert.assertNotNull(parser2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(parser5);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(whitelist10);
        org.junit.Assert.assertNotNull(whitelist12);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document22);
        org.junit.Assert.assertNotNull(nodeList24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(nodeList37);
        org.junit.Assert.assertNotNull(element39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str42, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(element51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;:containsown([:lt(32)*=.&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;]&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;\n<html>\n <head></head>\n <body></body>\n</html>" + "'", str53, "&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;:containsown([:lt(32)*=.&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;]&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;\n<html>\n <head></head>\n <body></body>\n</html>");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #960
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #419
28: astore_1
29: aload_1
30: iconst_0
31: invokevirtual #696
34: astore_2
35: aload_1
36: invokevirtual #697
39: istore_3
40: aload_1
41: iconst_0
42: invokevirtual #696
45: astore        4
47: aload_1
48: ldc_w         #669
51: ldc_w         #279
54: invokevirtual #420
57: astore        5
59: aload         5
61: invokevirtual #154
64: astore        6
66: invokestatic  #8
69: astore        7
71: aload         7
73: iconst_1
74: invokevirtual #9
77: astore        8
79: new           #40
82: dup
83: aload         8
85: invokespecial #41
88: astore        9
90: new           #42
93: dup
94: ldc           #43
96: ldc           #32
98: invokespecial #44
101: astore        10
103: ldc           #12
105: invokestatic  #45
108: astore        11
110: ldc           #25
112: ldc           #12
114: invokestatic  #26
117: astore        12
119: ldc           #12
121: aload         12
123: ldc           #12
125: invokestatic  #27
128: astore        13
130: aload         12
132: ldc           #12
134: invokevirtual #28
137: astore        14
139: aload         12
141: ldc           #25
143: invokevirtual #29
146: astore        15
148: aload         12
150: invokevirtual #30
153: astore        16
155: aload         10
157: aload         11
159: aload         12
161: invokevirtual #46
164: istore        17
166: aload         9
168: aload         12
170: invokevirtual #47
173: astore        18
175: ldc           #25
177: ldc           #12
179: invokestatic  #26
182: astore        19
184: ldc           #12
186: aload         19
188: ldc           #12
190: invokestatic  #27
193: astore        20
195: aload         19
197: ldc           #12
199: invokevirtual #28
202: astore        21
204: aload         19
206: ldc           #25
208: invokevirtual #29
211: astore        22
213: aload         19
215: invokevirtual #72
218: astore        23
220: aload         19
222: invokevirtual #73
225: astore        24
227: aload         19
229: invokevirtual #74
232: astore        25
234: aload         9
236: aload         19
238: invokevirtual #47
241: astore        26
243: aload         19
245: invokevirtual #448
248: astore        27
250: aload         19
252: ldc_w         #279
255: invokevirtual #59
258: astore        28
260: aload         19
262: invokevirtual #154
265: astore        29
267: aload         19
269: ldc_w         #449
272: invokevirtual #258
275: astore        30
277: aload         5
279: aload         19
281: invokevirtual #202
284: istore        31
286: aload         19
288: invokevirtual #535
291: astore        32
293: aload_1
294: invokestatic  #15
297: aload_2
298: invokestatic  #15
301: new           #16
304: dup
305: invokespecial #17
308: ldc           #18
310: invokevirtual #19
313: iload_3
314: invokevirtual #20
317: ldc           #21
319: invokevirtual #19
322: iconst_0
323: invokevirtual #20
326: ldc           #18
328: invokevirtual #19
331: invokevirtual #22
334: iload_3
335: ifne          342
338: iconst_1
339: goto          343
342: iconst_0
343: invokestatic  #23
346: aload         4
348: invokestatic  #15
351: aload         5
353: invokestatic  #15
356: aload         6
358: invokestatic  #15
361: aload         7
363: invokestatic  #15
366: aload         8
368: invokestatic  #15
371: aload         11
373: invokestatic  #15
376: aload         12
378: invokestatic  #15
381: aload         13
383: invokestatic  #15
386: aload         14
388: invokestatic  #15
391: aload         15
393: invokestatic  #15
396: aload         16
398: invokestatic  #15
401: new           #16
404: dup
405: invokespecial #17
408: ldc           #18
410: invokevirtual #19
413: iload         17
415: invokevirtual #20
418: ldc           #21
420: invokevirtual #19
423: iconst_0
424: invokevirtual #20
427: ldc           #18
429: invokevirtual #19
432: invokevirtual #22
435: iload         17
437: ifne          444
440: iconst_1
441: goto          445
444: iconst_0
445: invokestatic  #23
448: aload         18
450: invokestatic  #15
453: aload         19
455: invokestatic  #15
458: aload         20
460: invokestatic  #15
463: aload         21
465: invokestatic  #15
468: aload         22
470: invokestatic  #15
473: new           #16
476: dup
477: invokespecial #17
480: ldc           #18
482: invokevirtual #19
485: aload         23
487: invokevirtual #19
490: ldc           #78
492: invokevirtual #19
495: invokevirtual #22
498: aload         23
500: ldc           #10
502: invokestatic  #68
505: new           #16
508: dup
509: invokespecial #17
512: ldc           #18
514: invokevirtual #19
517: aload         24
519: invokevirtual #19
522: ldc           #67
524: invokevirtual #19
527: invokevirtual #22
530: aload         24
532: ldc           #25
534: invokestatic  #68
537: aload         25
539: invokestatic  #79
542: aload         26
544: invokestatic  #15
547: new           #16
550: dup
551: invokespecial #17
554: ldc           #18
556: invokevirtual #19
559: aload         27
561: invokevirtual #19
564: ldc           #67
566: invokevirtual #19
569: invokevirtual #22
572: aload         27
574: ldc           #25
576: invokestatic  #68
579: aload         28
581: invokestatic  #15
584: aload         29
586: invokestatic  #15
589: aload         30
591: invokestatic  #15
594: new           #16
597: dup
598: invokespecial #17
601: ldc           #18
603: invokevirtual #19
606: iload         31
608: invokevirtual #20
611: ldc           #21
613: invokevirtual #19
616: iconst_0
617: invokevirtual #20
620: ldc           #18
622: invokevirtual #19
625: invokevirtual #22
628: iload         31
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #23
641: new           #16
644: dup
645: invokespecial #17
648: ldc           #18
650: invokevirtual #19
653: aload         32
655: invokevirtual #19
658: ldc_w         #961
661: invokevirtual #19
664: invokevirtual #22
667: aload         32
669: ldc_w         #962
672: invokestatic  #68
675: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test329
Start line: 18155
End line: 18204
Method source code: 
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        org.jsoup.select.Evaluator.AttributeWithValueContaining attributeWithValueContaining6 = new org.jsoup.select.Evaluator.AttributeWithValueContaining(":lt(32)", ".<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document8 = org.jsoup.nodes.Document.createShell("hi!");
        org.jsoup.nodes.Document document12 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList14 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document12, "hi!");
        org.jsoup.nodes.Element element16 = document12.tagName("hi!");
        org.jsoup.nodes.Element element18 = document12.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings19 = document12.outputSettings();
        boolean boolean20 = attributeWithValueContaining6.matches((org.jsoup.nodes.Element) document8, (org.jsoup.nodes.Element) document12);
        org.jsoup.nodes.Document document21 = cleaner3.clean(document12);
        org.jsoup.nodes.Document document23 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str24 = document23.toString();
        java.lang.String str25 = document23.baseUri();
        org.jsoup.nodes.Document document26 = cleaner3.clean(document23);
        org.jsoup.nodes.Document document28 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        java.lang.String str29 = document28.toString();
        java.lang.String str30 = document28.baseUri();
        org.jsoup.nodes.Document.QuirksMode quirksMode31 = document28.quirksMode();
        boolean boolean33 = document28.hasClass(":lt(32)=\"[.]\"");
        boolean boolean34 = cleaner3.isValid(document28);
        org.jsoup.nodes.Document document35 = document28.ownerDocument();
        org.jsoup.nodes.Element element37 = document28.toggleClass("[[hi!$=<html> <head></head> <body></body> </html>]^=]");
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document12);
        org.junit.Assert.assertNotNull(nodeList14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(outputSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(document21);
        org.junit.Assert.assertNotNull(document23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str24, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<html>\n <head></head>\n <body>   \n </body>\n</html>" + "'", str29, "<html>\n <head></head>\n <body>   \n </body>\n</html>");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + quirksMode31 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode31.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertNotNull(element37);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #963
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: new           #42
47: dup
48: ldc           #43
50: ldc           #32
52: invokespecial #44
55: astore        4
57: ldc           #12
59: invokestatic  #45
62: astore        5
64: ldc           #25
66: ldc           #12
68: invokestatic  #26
71: astore        6
73: ldc           #12
75: aload         6
77: ldc           #12
79: invokestatic  #27
82: astore        7
84: aload         6
86: ldc           #12
88: invokevirtual #28
91: astore        8
93: aload         6
95: ldc           #25
97: invokevirtual #29
100: astore        9
102: aload         6
104: invokevirtual #30
107: astore        10
109: aload         4
111: aload         5
113: aload         6
115: invokevirtual #46
118: istore        11
120: aload_3
121: aload         6
123: invokevirtual #47
126: astore        12
128: ldc           #10
130: invokestatic  #193
133: astore        13
135: aload         13
137: invokevirtual #72
140: astore        14
142: aload         13
144: invokevirtual #194
147: astore        15
149: aload_3
150: aload         13
152: invokevirtual #47
155: astore        16
157: ldc           #10
159: invokestatic  #193
162: astore        17
164: aload         17
166: invokevirtual #72
169: astore        18
171: aload         17
173: invokevirtual #194
176: astore        19
178: aload         17
180: invokevirtual #222
183: astore        20
185: aload         17
187: ldc           #230
189: invokevirtual #305
192: istore        21
194: aload_3
195: aload         17
197: invokevirtual #155
200: istore        22
202: aload         17
204: invokevirtual #664
207: astore        23
209: aload         17
211: ldc_w         #964
214: invokevirtual #199
217: astore        24
219: aload_1
220: invokestatic  #15
223: aload_2
224: invokestatic  #15
227: aload         5
229: invokestatic  #15
232: aload         6
234: invokestatic  #15
237: aload         7
239: invokestatic  #15
242: aload         8
244: invokestatic  #15
247: aload         9
249: invokestatic  #15
252: aload         10
254: invokestatic  #15
257: new           #16
260: dup
261: invokespecial #17
264: ldc           #18
266: invokevirtual #19
269: iload         11
271: invokevirtual #20
274: ldc           #21
276: invokevirtual #19
279: iconst_0
280: invokevirtual #20
283: ldc           #18
285: invokevirtual #19
288: invokevirtual #22
291: iload         11
293: ifne          300
296: iconst_1
297: goto          301
300: iconst_0
301: invokestatic  #23
304: aload         12
306: invokestatic  #15
309: aload         13
311: invokestatic  #15
314: new           #16
317: dup
318: invokespecial #17
321: ldc           #18
323: invokevirtual #19
326: aload         14
328: invokevirtual #19
331: ldc           #197
333: invokevirtual #19
336: invokevirtual #22
339: aload         14
341: ldc           #151
343: invokestatic  #68
346: new           #16
349: dup
350: invokespecial #17
353: ldc           #18
355: invokevirtual #19
358: aload         15
360: invokevirtual #19
363: ldc           #67
365: invokevirtual #19
368: invokevirtual #22
371: aload         15
373: ldc           #25
375: invokestatic  #68
378: aload         16
380: invokestatic  #15
383: aload         17
385: invokestatic  #15
388: new           #16
391: dup
392: invokespecial #17
395: ldc           #18
397: invokevirtual #19
400: aload         18
402: invokevirtual #19
405: ldc           #197
407: invokevirtual #19
410: invokevirtual #22
413: aload         18
415: ldc           #151
417: invokestatic  #68
420: new           #16
423: dup
424: invokespecial #17
427: ldc           #18
429: invokevirtual #19
432: aload         19
434: invokevirtual #19
437: ldc           #67
439: invokevirtual #19
442: invokevirtual #22
445: aload         19
447: ldc           #25
449: invokestatic  #68
452: new           #16
455: dup
456: invokespecial #17
459: ldc           #18
461: invokevirtual #19
464: aload         20
466: invokevirtual #223
469: ldc           #21
471: invokevirtual #19
474: getstatic     #224
477: invokevirtual #223
480: ldc           #18
482: invokevirtual #19
485: invokevirtual #22
488: aload         20
490: getstatic     #224
493: invokevirtual #225
496: invokestatic  #23
499: new           #16
502: dup
503: invokespecial #17
506: ldc           #18
508: invokevirtual #19
511: iload         21
513: invokevirtual #20
516: ldc           #21
518: invokevirtual #19
521: iconst_0
522: invokevirtual #20
525: ldc           #18
527: invokevirtual #19
530: invokevirtual #22
533: iload         21
535: ifne          542
538: iconst_1
539: goto          543
542: iconst_0
543: invokestatic  #23
546: new           #16
549: dup
550: invokespecial #17
553: ldc           #18
555: invokevirtual #19
558: iload         22
560: invokevirtual #20
563: ldc           #21
565: invokevirtual #19
568: iconst_1
569: invokevirtual #20
572: ldc           #18
574: invokevirtual #19
577: invokevirtual #22
580: iload         22
582: iconst_1
583: if_icmpne     590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #23
594: aload         23
596: invokestatic  #15
599: aload         24
601: invokestatic  #15
604: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test330
Start line: 18207
End line: 18262
Method source code: 
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        org.jsoup.safety.Whitelist whitelist3 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist5 = whitelist3.preserveRelativeLinks(true);
        java.lang.String str6 = org.jsoup.Jsoup.clean(".<html>\n <head></head>\n <body></body>\n</html>", whitelist5);
        boolean boolean8 = whitelist5.isSafeTag("[<html>\n <head></head>\n <body></body>\n</html>^=<hi!></hi!>\n<html>\n <head></head>\n <body></body>\n</html>]");
        java.lang.String[] strArray18 = new java.lang.String[] { "#document", ".<html>\n <head></head>\n <body></body>\n</html>", "<html>\n <head></head>\n <body></body>\n</html>", ":lt(32)", "[:lt(32)]" };
        boolean boolean19 = org.jsoup.helper.StringUtil.in("<html>\n <head></head>\n <body></body>\n</html>", strArray18);
        boolean boolean20 = org.jsoup.helper.StringUtil.in(" hi!", strArray18);
        org.jsoup.safety.Whitelist whitelist21 = whitelist5.addProtocols(":lt(32)=\"\"", ".<html>\n <head></head>\n <body></body>\n</html>", strArray18);
        org.jsoup.safety.Whitelist whitelist23 = whitelist21.preserveRelativeLinks(true);
        org.jsoup.nodes.Document document27 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList29 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document27, "hi!");
        org.jsoup.nodes.Element element30 = document27.empty();
        org.jsoup.nodes.Element element32 = document27.removeClass("hi!");
        java.lang.String str33 = document27.id();
        org.jsoup.nodes.Node node34 = document27.previousSibling();
        org.jsoup.nodes.Document document38 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList40 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document38, "hi!");
        org.jsoup.nodes.Element element42 = document38.tagName("hi!");
        org.jsoup.nodes.Element element44 = document38.append("");
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = document38.outputSettings();
        org.jsoup.nodes.Document.OutputSettings outputSettings47 = outputSettings45.prettyPrint(false);
        boolean boolean48 = outputSettings47.prettyPrint();
        boolean boolean49 = outputSettings47.prettyPrint();
        org.jsoup.nodes.Document document50 = document27.outputSettings(outputSettings47);
        java.lang.String str51 = org.jsoup.Jsoup.clean("[[:lt(32)*=.<html>\n <head></head>\n <body></body>\n</html>]$=[<!--[hi!$=<html>\n <head></head>\n <body></body>\n</html>]-->!=hi!]]", "", whitelist23, outputSettings47);
        java.nio.charset.Charset charset52 = outputSettings47.charset();
        org.junit.Assert.assertNotNull(whitelist3);
        org.junit.Assert.assertNotNull(whitelist5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "." + "'", str6, ".");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(whitelist21);
        org.junit.Assert.assertNotNull(whitelist23);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(nodeList29);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(document38);
        org.junit.Assert.assertNotNull(nodeList40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(outputSettings45);
        org.junit.Assert.assertNotNull(outputSettings47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[[:lt(32)*=.\n \n \n]$=[!=hi!]]" + "'", str51, "[[:lt(32)*=.\n \n \n]$=[!=hi!]]");
        org.junit.Assert.assertNotNull(charset52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #965
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: ldc           #32
37: aload_2
38: invokestatic  #81
41: astore_3
42: aload_2
43: ldc           #82
45: invokevirtual #83
48: istore        4
50: iconst_5
51: anewarray     #119
54: dup
55: iconst_0
56: ldc           #13
58: aastore
59: dup
60: iconst_1
61: ldc           #32
63: aastore
64: dup
65: iconst_2
66: ldc           #10
68: aastore
69: dup
70: iconst_3
71: ldc           #43
73: aastore
74: dup
75: iconst_4
76: ldc           #58
78: aastore
79: astore        5
81: ldc           #10
83: aload         5
85: invokestatic  #123
88: istore        6
90: ldc           #60
92: aload         5
94: invokestatic  #123
97: istore        7
99: aload_2
100: ldc           #238
102: ldc           #32
104: aload         5
106: invokevirtual #122
109: astore        8
111: aload         8
113: iconst_1
114: invokevirtual #9
117: astore        9
119: ldc           #25
121: ldc           #12
123: invokestatic  #26
126: astore        10
128: ldc           #12
130: aload         10
132: ldc           #12
134: invokestatic  #27
137: astore        11
139: aload         10
141: invokevirtual #103
144: astore        12
146: aload         10
148: ldc           #12
150: invokevirtual #59
153: astore        13
155: aload         10
157: invokevirtual #73
160: astore        14
162: aload         10
164: invokevirtual #349
167: astore        15
169: ldc           #25
171: ldc           #12
173: invokestatic  #26
176: astore        16
178: ldc           #12
180: aload         16
182: ldc           #12
184: invokestatic  #27
187: astore        17
189: aload         16
191: ldc           #12
193: invokevirtual #28
196: astore        18
198: aload         16
200: ldc           #25
202: invokevirtual #29
205: astore        19
207: aload         16
209: invokevirtual #30
212: astore        20
214: aload         20
216: iconst_0
217: invokevirtual #31
220: astore        21
222: aload         21
224: invokevirtual #461
227: istore        22
229: aload         21
231: invokevirtual #461
234: istore        23
236: aload         10
238: aload         21
240: invokevirtual #175
243: astore        24
245: ldc           #195
247: ldc           #25
249: aload         9
251: aload         21
253: invokestatic  #33
256: astore        25
258: aload         21
260: invokevirtual #460
263: astore        26
265: aload_1
266: invokestatic  #15
269: aload_2
270: invokestatic  #15
273: new           #16
276: dup
277: invokespecial #17
280: ldc           #18
282: invokevirtual #19
285: aload_3
286: invokevirtual #19
289: ldc           #85
291: invokevirtual #19
294: invokevirtual #22
297: aload_3
298: ldc           #86
300: invokestatic  #68
303: new           #16
306: dup
307: invokespecial #17
310: ldc           #18
312: invokevirtual #19
315: iload         4
317: invokevirtual #20
320: ldc           #21
322: invokevirtual #19
325: iconst_0
326: invokevirtual #20
329: ldc           #18
331: invokevirtual #19
334: invokevirtual #22
337: iload         4
339: ifne          346
342: iconst_1
343: goto          347
346: iconst_0
347: invokestatic  #23
350: aload         5
352: invokestatic  #15
355: new           #16
358: dup
359: invokespecial #17
362: ldc           #18
364: invokevirtual #19
367: iload         6
369: invokevirtual #20
372: ldc           #21
374: invokevirtual #19
377: iconst_1
378: invokevirtual #20
381: ldc           #18
383: invokevirtual #19
386: invokevirtual #22
389: iload         6
391: iconst_1
392: if_icmpne     399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #23
403: new           #16
406: dup
407: invokespecial #17
410: ldc           #18
412: invokevirtual #19
415: iload         7
417: invokevirtual #20
420: ldc           #21
422: invokevirtual #19
425: iconst_0
426: invokevirtual #20
429: ldc           #18
431: invokevirtual #19
434: invokevirtual #22
437: iload         7
439: ifne          446
442: iconst_1
443: goto          447
446: iconst_0
447: invokestatic  #23
450: aload         8
452: invokestatic  #15
455: aload         9
457: invokestatic  #15
460: aload         10
462: invokestatic  #15
465: aload         11
467: invokestatic  #15
470: aload         12
472: invokestatic  #15
475: aload         13
477: invokestatic  #15
480: new           #16
483: dup
484: invokespecial #17
487: ldc           #18
489: invokevirtual #19
492: aload         14
494: invokevirtual #19
497: ldc           #67
499: invokevirtual #19
502: invokevirtual #22
505: aload         14
507: ldc           #25
509: invokestatic  #68
512: aload         15
514: invokestatic  #79
517: aload         16
519: invokestatic  #15
522: aload         17
524: invokestatic  #15
527: aload         18
529: invokestatic  #15
532: aload         19
534: invokestatic  #15
537: aload         20
539: invokestatic  #15
542: aload         21
544: invokestatic  #15
547: new           #16
550: dup
551: invokespecial #17
554: ldc           #18
556: invokevirtual #19
559: iload         22
561: invokevirtual #20
564: ldc           #21
566: invokevirtual #19
569: iconst_0
570: invokevirtual #20
573: ldc           #18
575: invokevirtual #19
578: invokevirtual #22
581: iload         22
583: ifne          590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #23
594: new           #16
597: dup
598: invokespecial #17
601: ldc           #18
603: invokevirtual #19
606: iload         23
608: invokevirtual #20
611: ldc           #21
613: invokevirtual #19
616: iconst_0
617: invokevirtual #20
620: ldc           #18
622: invokevirtual #19
625: invokevirtual #22
628: iload         23
630: ifne          637
633: iconst_1
634: goto          638
637: iconst_0
638: invokestatic  #23
641: aload         24
643: invokestatic  #15
646: new           #16
649: dup
650: invokespecial #17
653: ldc           #18
655: invokevirtual #19
658: aload         25
660: invokevirtual #19
663: ldc_w         #966
666: invokevirtual #19
669: invokevirtual #22
672: aload         25
674: ldc_w         #967
677: invokestatic  #68
680: aload         26
682: invokestatic  #15
685: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test331
Start line: 18265
End line: 18316
Method source code: 
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        org.jsoup.safety.Whitelist whitelist0 = org.jsoup.safety.Whitelist.basicWithImages();
        org.jsoup.safety.Whitelist whitelist2 = whitelist0.preserveRelativeLinks(true);
        org.jsoup.safety.Cleaner cleaner3 = new org.jsoup.safety.Cleaner(whitelist2);
        java.util.regex.Pattern pattern5 = null;
        org.jsoup.select.Evaluator.AttributeWithValueMatching attributeWithValueMatching6 = new org.jsoup.select.Evaluator.AttributeWithValueMatching("", pattern5);
        org.jsoup.nodes.Document document10 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList12 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document10, "hi!");
        org.jsoup.nodes.Element element14 = document10.tagName("hi!");
        org.jsoup.nodes.Element element16 = document10.append("");
        java.lang.String str17 = document10.toString();
        org.jsoup.nodes.Element element19 = document10.prependElement("\nhi!");
        org.jsoup.select.Elements elements21 = document10.getElementsMatchingOwnText("");
        org.jsoup.nodes.Document document25 = org.jsoup.Jsoup.parse("", "hi!");
        java.util.List<org.jsoup.nodes.Node> nodeList27 = org.jsoup.parser.Parser.parseFragment("hi!", (org.jsoup.nodes.Element) document25, "hi!");
        org.jsoup.nodes.Element element29 = document25.tagName("hi!");
        org.jsoup.nodes.Element element31 = document25.append("");
        boolean boolean32 = attributeWithValueMatching6.matches((org.jsoup.nodes.Element) document10, (org.jsoup.nodes.Element) document25);
        org.jsoup.nodes.Element element33 = null;
        org.jsoup.nodes.Document document36 = org.jsoup.Jsoup.parse("", "hi!");
        org.jsoup.nodes.Element element37 = document36.body();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = document36.dataset();
        boolean boolean39 = attributeWithValueMatching6.matches(element33, (org.jsoup.nodes.Element) document36);
        org.jsoup.nodes.Document document41 = org.jsoup.Jsoup.parseBodyFragment("<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document44 = org.jsoup.parser.Parser.parseBodyFragment("[^hi!]", "#text");
        boolean boolean45 = attributeWithValueMatching6.matches((org.jsoup.nodes.Element) document41, (org.jsoup.nodes.Element) document44);
        org.jsoup.nodes.Document document46 = cleaner3.clean(document44);
        org.junit.Assert.assertNotNull(whitelist0);
        org.junit.Assert.assertNotNull(whitelist2);
        org.junit.Assert.assertNotNull(document10);
        org.junit.Assert.assertNotNull(nodeList12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str17, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(elements21);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(nodeList27);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(element37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(document41);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(document46);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #968
20: aastore
21: invokevirtual #7
24: pop
25: invokestatic  #8
28: astore_1
29: aload_1
30: iconst_1
31: invokevirtual #9
34: astore_2
35: new           #40
38: dup
39: aload_2
40: invokespecial #41
43: astore_3
44: aconst_null
45: astore        4
47: new           #96
50: dup
51: ldc           #25
53: aload         4
55: invokespecial #97
58: astore        5
60: ldc           #25
62: ldc           #12
64: invokestatic  #26
67: astore        6
69: ldc           #12
71: aload         6
73: ldc           #12
75: invokestatic  #27
78: astore        7
80: aload         6
82: ldc           #12
84: invokevirtual #28
87: astore        8
89: aload         6
91: ldc           #25
93: invokevirtual #29
96: astore        9
98: aload         6
100: invokevirtual #72
103: astore        10
105: aload         6
107: ldc           #98
109: invokevirtual #99
112: astore        11
114: aload         6
116: ldc           #25
118: invokevirtual #100
121: astore        12
123: ldc           #25
125: ldc           #12
127: invokestatic  #26
130: astore        13
132: ldc           #12
134: aload         13
136: ldc           #12
138: invokestatic  #27
141: astore        14
143: aload         13
145: ldc           #12
147: invokevirtual #28
150: astore        15
152: aload         13
154: ldc           #25
156: invokevirtual #29
159: astore        16
161: aload         5
163: aload         6
165: aload         13
167: invokevirtual #101
170: istore        17
172: aconst_null
173: astore        18
175: ldc           #25
177: ldc           #12
179: invokestatic  #26
182: astore        19
184: aload         19
186: invokevirtual #166
189: astore        20
191: aload         19
193: invokevirtual #534
196: astore        21
198: aload         5
200: aload         18
202: aload         19
204: invokevirtual #101
207: istore        22
209: ldc           #10
211: invokestatic  #193
214: astore        23
216: ldc           #50
218: ldc           #51
220: invokestatic  #52
223: astore        24
225: aload         5
227: aload         23
229: aload         24
231: invokevirtual #101
234: istore        25
236: aload_3
237: aload         24
239: invokevirtual #47
242: astore        26
244: aload_1
245: invokestatic  #15
248: aload_2
249: invokestatic  #15
252: aload         6
254: invokestatic  #15
257: aload         7
259: invokestatic  #15
262: aload         8
264: invokestatic  #15
267: aload         9
269: invokestatic  #15
272: new           #16
275: dup
276: invokespecial #17
279: ldc           #18
281: invokevirtual #19
284: aload         10
286: invokevirtual #19
289: ldc           #78
291: invokevirtual #19
294: invokevirtual #22
297: aload         10
299: ldc           #10
301: invokestatic  #68
304: aload         11
306: invokestatic  #15
309: aload         12
311: invokestatic  #15
314: aload         13
316: invokestatic  #15
319: aload         14
321: invokestatic  #15
324: aload         15
326: invokestatic  #15
329: aload         16
331: invokestatic  #15
334: new           #16
337: dup
338: invokespecial #17
341: ldc           #18
343: invokevirtual #19
346: iload         17
348: invokevirtual #20
351: ldc           #21
353: invokevirtual #19
356: iconst_0
357: invokevirtual #20
360: ldc           #18
362: invokevirtual #19
365: invokevirtual #22
368: iload         17
370: ifne          377
373: iconst_1
374: goto          378
377: iconst_0
378: invokestatic  #23
381: aload         19
383: invokestatic  #15
386: aload         20
388: invokestatic  #15
391: aload         21
393: invokestatic  #15
396: new           #16
399: dup
400: invokespecial #17
403: ldc           #18
405: invokevirtual #19
408: iload         22
410: invokevirtual #20
413: ldc           #21
415: invokevirtual #19
418: iconst_0
419: invokevirtual #20
422: ldc           #18
424: invokevirtual #19
427: invokevirtual #22
430: iload         22
432: ifne          439
435: iconst_1
436: goto          440
439: iconst_0
440: invokestatic  #23
443: aload         23
445: invokestatic  #15
448: aload         24
450: invokestatic  #15
453: new           #16
456: dup
457: invokespecial #17
460: ldc           #18
462: invokevirtual #19
465: iload         25
467: invokevirtual #20
470: ldc           #21
472: invokevirtual #19
475: iconst_0
476: invokevirtual #20
479: ldc           #18
481: invokevirtual #19
484: invokevirtual #22
487: iload         25
489: ifne          496
492: iconst_1
493: goto          497
496: iconst_0
497: invokestatic  #23
500: aload         26
502: invokestatic  #15
505: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test332
Start line: 18319
End line: 18330
Method source code: 
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #969
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: aload_1
30: invokestatic  #81
33: astore_2
34: ldc           #34
36: invokestatic  #35
39: goto          43
42: astore_2
43: return
Exception table:
from    to  target type
27    39    42   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test333
Start line: 18333
End line: 18345
Method source code: 
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = org.jsoup.Jsoup.clean("", " data=\"\"", whitelist2, outputSettings3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #970
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: ldc           #25
31: ldc_w         #971
34: aload_1
35: aload_2
36: invokestatic  #33
39: astore_3
40: ldc           #34
42: invokestatic  #35
45: goto          49
48: astore_3
49: return
Exception table:
from    to  target type
29    45    48   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test334
Start line: 18348
End line: 18359
Method source code: 
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("data=\"\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #972
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #973
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test335
Start line: 18362
End line: 18373
Method source code: 
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("[data=\"\"=[hi!]]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #974
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #975
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test336
Start line: 18376
End line: 18417
Method source code: 
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = org.jsoup.Jsoup.clean("[data=\"\"=[hi!]]", "", whitelist2, outputSettings24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #976
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: ldc_w         #975
146: ldc           #25
148: aload_1
149: aload         15
151: invokestatic  #33
154: astore        17
156: ldc           #34
158: invokestatic  #35
161: goto          166
164: astore        17
166: aload_2
167: invokestatic  #15
170: aload_3
171: invokestatic  #15
174: aload         4
176: invokestatic  #15
179: new           #16
182: dup
183: invokespecial #17
186: ldc           #18
188: invokevirtual #19
191: aload         5
193: invokevirtual #19
196: ldc           #67
198: invokevirtual #19
201: invokevirtual #22
204: aload         5
206: ldc           #25
208: invokestatic  #68
211: new           #16
214: dup
215: invokespecial #17
218: ldc           #18
220: invokevirtual #19
223: aload         6
225: invokevirtual #19
228: ldc           #67
230: invokevirtual #19
233: invokevirtual #22
236: aload         6
238: ldc           #25
240: invokestatic  #68
243: aload         7
245: invokestatic  #15
248: aload         8
250: invokestatic  #15
253: aload         9
255: invokestatic  #15
258: aload         10
260: invokestatic  #15
263: aload         11
265: invokestatic  #15
268: new           #16
271: dup
272: invokespecial #17
275: ldc           #18
277: invokevirtual #19
280: aload         12
282: invokevirtual #19
285: ldc           #107
287: invokevirtual #19
290: invokevirtual #22
293: aload         12
295: ldc           #13
297: invokestatic  #68
300: new           #16
303: dup
304: invokespecial #17
307: ldc           #18
309: invokevirtual #19
312: aload         13
314: invokevirtual #19
317: ldc           #67
319: invokevirtual #19
322: invokevirtual #22
325: aload         13
327: ldc           #25
329: invokestatic  #68
332: aload         14
334: invokestatic  #15
337: aload         15
339: invokestatic  #15
342: aload         16
344: invokestatic  #15
347: return
Exception table:
from    to  target type
143   161   164   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test337
Start line: 18420
End line: 18431
Method source code: 
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("data=\"\"=\"\"", "hi!\n&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #979
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #980
30: ldc_w         #981
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test338
Start line: 18434
End line: 18445
Method source code: 
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid(" text=\"\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #982
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #983
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test339
Start line: 18448
End line: 18459
Method source code: 
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("data=\"\"=\"[hi!]\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #984
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #985
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test340
Start line: 18462
End line: 18473
Method source code: 
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #986
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #987
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test341
Start line: 18476
End line: 18488
Method source code: 
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document.OutputSettings outputSettings3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = org.jsoup.Jsoup.clean("[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]", ":containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>", whitelist2, outputSettings3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #988
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: aconst_null
28: astore_2
29: ldc_w         #989
32: ldc_w         #990
35: aload_1
36: aload_2
37: invokestatic  #33
40: astore_3
41: ldc           #34
43: invokestatic  #35
46: goto          50
49: astore_3
50: return
Exception table:
from    to  target type
29    46    49   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test342
Start line: 18491
End line: 18502
Method source code: 
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #991
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #989
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test343
Start line: 18505
End line: 18516
Method source code: 
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean(":eq(10)", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #992
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #993
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test344
Start line: 18519
End line: 18530
Method source code: 
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("[data=\"\"=[hi!]]", " text=\"\"", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #994
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #975
30: ldc_w         #983
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test345
Start line: 18533
End line: 18544
Method source code: 
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("[^hi!\n<html>\n <head></head>\n <body></body>\n</html>]", ":gt(52)", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #995
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #996
30: ldc_w         #997
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test346
Start line: 18547
End line: 18666
Method source code: 
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings24.prettyPrint(true);
        org.jsoup.nodes.Document document31 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element33 = document31.val("hi!");
        org.jsoup.nodes.Document document34 = document31.clone();
        org.jsoup.select.Elements elements36 = document31.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str37 = document31.toString();
        org.jsoup.select.Elements elements38 = document31.children();
        org.jsoup.nodes.Element element39 = document31.parent();
        org.jsoup.nodes.Document document42 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element44 = document42.val("hi!");
        org.jsoup.nodes.Document document45 = document42.clone();
        org.jsoup.nodes.Document document46 = document42.clone();
        java.lang.String str47 = document42.nodeName();
        java.lang.String str49 = document42.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList50 = document42.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document42.outputSettings();
        org.jsoup.nodes.Document document52 = document31.outputSettings(outputSettings51);
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings51.clone();
        org.jsoup.nodes.Document document56 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element58 = document56.val("hi!");
        org.jsoup.nodes.Document document59 = document56.clone();
        org.jsoup.select.Elements elements61 = document56.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str62 = document56.toString();
        org.jsoup.select.Elements elements63 = document56.children();
        org.jsoup.nodes.Element element64 = document56.parent();
        org.jsoup.nodes.Document document67 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element69 = document67.val("hi!");
        org.jsoup.nodes.Document document70 = document67.clone();
        org.jsoup.nodes.Document document71 = document67.clone();
        java.lang.String str72 = document67.nodeName();
        java.lang.String str74 = document67.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList75 = document67.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = document67.outputSettings();
        org.jsoup.nodes.Document document77 = document56.outputSettings(outputSettings76);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings76.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode79 = outputSettings76.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings51.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings81 = outputSettings24.escapeMode(escapeMode79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = org.jsoup.Jsoup.clean("hi!\n<html>\n <head>\n  <title> data=&quot;&quot;</title>\n </head>\n <body></body>\n</html>", "hi! <html> <head></head> <body></body> </html>", whitelist2, outputSettings24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str37, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertNull(element39);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#document" + "'", str47, "#document");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(dataNodeList50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(elements61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str62, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements63);
        org.junit.Assert.assertNull(element64);
        org.junit.Assert.assertNotNull(document67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#document" + "'", str72, "#document");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(dataNodeList75);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(outputSettings78);
        org.junit.Assert.assertTrue("'" + escapeMode79 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode79.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertNotNull(outputSettings81);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #998
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: aload         15
152: iconst_1
153: invokevirtual #31
156: astore        18
158: ldc           #25
160: ldc           #25
162: invokestatic  #847
165: astore        19
167: aload         19
169: ldc           #12
171: invokevirtual #977
174: astore        20
176: aload         19
178: invokevirtual #154
181: astore        21
183: aload         19
185: iconst_m1
186: invokevirtual #162
189: astore        22
191: aload         19
193: invokevirtual #72
196: astore        23
198: aload         19
200: invokevirtual #999
203: astore        24
205: aload         19
207: invokevirtual #74
210: astore        25
212: ldc           #25
214: ldc           #25
216: invokestatic  #847
219: astore        26
221: aload         26
223: ldc           #12
225: invokevirtual #977
228: astore        27
230: aload         26
232: invokevirtual #154
235: astore        28
237: aload         26
239: invokevirtual #154
242: astore        29
244: aload         26
246: invokevirtual #220
249: astore        30
251: aload         26
253: ldc           #25
255: invokevirtual #176
258: astore        31
260: aload         26
262: invokevirtual #348
265: astore        32
267: aload         26
269: invokevirtual #30
272: astore        33
274: aload         19
276: aload         33
278: invokevirtual #175
281: astore        34
283: aload         33
285: invokevirtual #205
288: astore        35
290: ldc           #25
292: ldc           #25
294: invokestatic  #847
297: astore        36
299: aload         36
301: ldc           #12
303: invokevirtual #977
306: astore        37
308: aload         36
310: invokevirtual #154
313: astore        38
315: aload         36
317: iconst_m1
318: invokevirtual #162
321: astore        39
323: aload         36
325: invokevirtual #72
328: astore        40
330: aload         36
332: invokevirtual #999
335: astore        41
337: aload         36
339: invokevirtual #74
342: astore        42
344: ldc           #25
346: ldc           #25
348: invokestatic  #847
351: astore        43
353: aload         43
355: ldc           #12
357: invokevirtual #977
360: astore        44
362: aload         43
364: invokevirtual #154
367: astore        45
369: aload         43
371: invokevirtual #154
374: astore        46
376: aload         43
378: invokevirtual #220
381: astore        47
383: aload         43
385: ldc           #25
387: invokevirtual #176
390: astore        48
392: aload         43
394: invokevirtual #348
397: astore        49
399: aload         43
401: invokevirtual #30
404: astore        50
406: aload         36
408: aload         50
410: invokevirtual #175
413: astore        51
415: aload         50
417: invokevirtual #205
420: astore        52
422: aload         50
424: invokevirtual #382
427: astore        53
429: aload         33
431: aload         53
433: invokevirtual #190
436: astore        54
438: aload         15
440: aload         53
442: invokevirtual #190
445: astore        55
447: ldc_w         #1000
450: ldc_w         #1001
453: aload_1
454: aload         15
456: invokestatic  #33
459: astore        56
461: ldc           #34
463: invokestatic  #35
466: goto          471
469: astore        56
471: aload_2
472: invokestatic  #15
475: aload_3
476: invokestatic  #15
479: aload         4
481: invokestatic  #15
484: new           #16
487: dup
488: invokespecial #17
491: ldc           #18
493: invokevirtual #19
496: aload         5
498: invokevirtual #19
501: ldc           #67
503: invokevirtual #19
506: invokevirtual #22
509: aload         5
511: ldc           #25
513: invokestatic  #68
516: new           #16
519: dup
520: invokespecial #17
523: ldc           #18
525: invokevirtual #19
528: aload         6
530: invokevirtual #19
533: ldc           #67
535: invokevirtual #19
538: invokevirtual #22
541: aload         6
543: ldc           #25
545: invokestatic  #68
548: aload         7
550: invokestatic  #15
553: aload         8
555: invokestatic  #15
558: aload         9
560: invokestatic  #15
563: aload         10
565: invokestatic  #15
568: aload         11
570: invokestatic  #15
573: new           #16
576: dup
577: invokespecial #17
580: ldc           #18
582: invokevirtual #19
585: aload         12
587: invokevirtual #19
590: ldc           #107
592: invokevirtual #19
595: invokevirtual #22
598: aload         12
600: ldc           #13
602: invokestatic  #68
605: new           #16
608: dup
609: invokespecial #17
612: ldc           #18
614: invokevirtual #19
617: aload         13
619: invokevirtual #19
622: ldc           #67
624: invokevirtual #19
627: invokevirtual #22
630: aload         13
632: ldc           #25
634: invokestatic  #68
637: aload         14
639: invokestatic  #15
642: aload         15
644: invokestatic  #15
647: aload         16
649: invokestatic  #15
652: new           #16
655: dup
656: invokespecial #17
659: ldc           #18
661: invokevirtual #19
664: aload         17
666: invokevirtual #223
669: ldc           #21
671: invokevirtual #19
674: getstatic     #381
677: invokevirtual #223
680: ldc           #18
682: invokevirtual #19
685: invokevirtual #22
688: aload         17
690: getstatic     #381
693: invokevirtual #385
696: invokestatic  #23
699: aload         18
701: invokestatic  #15
704: aload         19
706: invokestatic  #15
709: aload         20
711: invokestatic  #15
714: aload         21
716: invokestatic  #15
719: aload         22
721: invokestatic  #15
724: new           #16
727: dup
728: invokespecial #17
731: ldc           #18
733: invokevirtual #19
736: aload         23
738: invokevirtual #19
741: ldc           #78
743: invokevirtual #19
746: invokevirtual #22
749: aload         23
751: ldc           #10
753: invokestatic  #68
756: aload         24
758: invokestatic  #15
761: aload         25
763: invokestatic  #79
766: aload         26
768: invokestatic  #15
771: aload         27
773: invokestatic  #15
776: aload         28
778: invokestatic  #15
781: aload         29
783: invokestatic  #15
786: new           #16
789: dup
790: invokespecial #17
793: ldc           #18
795: invokevirtual #19
798: aload         30
800: invokevirtual #19
803: ldc           #107
805: invokevirtual #19
808: invokevirtual #22
811: aload         30
813: ldc           #13
815: invokestatic  #68
818: new           #16
821: dup
822: invokespecial #17
825: ldc           #18
827: invokevirtual #19
830: aload         31
832: invokevirtual #19
835: ldc           #67
837: invokevirtual #19
840: invokevirtual #22
843: aload         31
845: ldc           #25
847: invokestatic  #68
850: aload         32
852: invokestatic  #15
855: aload         33
857: invokestatic  #15
860: aload         34
862: invokestatic  #15
865: aload         35
867: invokestatic  #15
870: aload         36
872: invokestatic  #15
875: aload         37
877: invokestatic  #15
880: aload         38
882: invokestatic  #15
885: aload         39
887: invokestatic  #15
890: new           #16
893: dup
894: invokespecial #17
897: ldc           #18
899: invokevirtual #19
902: aload         40
904: invokevirtual #19
907: ldc           #78
909: invokevirtual #19
912: invokevirtual #22
915: aload         40
917: ldc           #10
919: invokestatic  #68
922: aload         41
924: invokestatic  #15
927: aload         42
929: invokestatic  #79
932: aload         43
934: invokestatic  #15
937: aload         44
939: invokestatic  #15
942: aload         45
944: invokestatic  #15
947: aload         46
949: invokestatic  #15
952: new           #16
955: dup
956: invokespecial #17
959: ldc           #18
961: invokevirtual #19
964: aload         47
966: invokevirtual #19
969: ldc           #107
971: invokevirtual #19
974: invokevirtual #22
977: aload         47
979: ldc           #13
981: invokestatic  #68
984: new           #16
987: dup
988: invokespecial #17
991: ldc           #18
993: invokevirtual #19
996: aload         48
998: invokevirtual #19
1001: ldc           #67
1003: invokevirtual #19
1006: invokevirtual #22
1009: aload         48
1011: ldc           #25
1013: invokestatic  #68
1016: aload         49
1018: invokestatic  #15
1021: aload         50
1023: invokestatic  #15
1026: aload         51
1028: invokestatic  #15
1031: aload         52
1033: invokestatic  #15
1036: new           #16
1039: dup
1040: invokespecial #17
1043: ldc           #18
1045: invokevirtual #19
1048: aload         53
1050: invokevirtual #223
1053: ldc           #21
1055: invokevirtual #19
1058: getstatic     #381
1061: invokevirtual #223
1064: ldc           #18
1066: invokevirtual #19
1069: invokevirtual #22
1072: aload         53
1074: getstatic     #381
1077: invokevirtual #385
1080: invokestatic  #23
1083: aload         54
1085: invokestatic  #15
1088: aload         55
1090: invokestatic  #15
1093: return
Exception table:
from    to  target type
447   466   469   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test347
Start line: 18669
End line: 18680
Method source code: 
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid(".data=\"\"=\"[hi!]\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1002
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1003
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test348
Start line: 18683
End line: 18728
Method source code: 
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.select.Elements elements10 = document5.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str11 = document5.toString();
        org.jsoup.select.Elements elements12 = document5.children();
        org.jsoup.nodes.Element element13 = document5.parent();
        org.jsoup.nodes.Document document16 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element18 = document16.val("hi!");
        org.jsoup.nodes.Document document19 = document16.clone();
        org.jsoup.nodes.Document document20 = document16.clone();
        java.lang.String str21 = document16.nodeName();
        java.lang.String str23 = document16.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList24 = document16.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = document16.outputSettings();
        org.jsoup.nodes.Document document26 = document5.outputSettings(outputSettings25);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings25.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = org.jsoup.Jsoup.clean("[hi!]", "[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]", whitelist2, outputSettings27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str11, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNull(element13);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#document" + "'", str21, "#document");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(dataNodeList24);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(outputSettings27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1004
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload_2
49: iconst_m1
50: invokevirtual #162
53: astore        5
55: aload_2
56: invokevirtual #72
59: astore        6
61: aload_2
62: invokevirtual #999
65: astore        7
67: aload_2
68: invokevirtual #74
71: astore        8
73: ldc           #25
75: ldc           #25
77: invokestatic  #847
80: astore        9
82: aload         9
84: ldc           #12
86: invokevirtual #977
89: astore        10
91: aload         9
93: invokevirtual #154
96: astore        11
98: aload         9
100: invokevirtual #154
103: astore        12
105: aload         9
107: invokevirtual #220
110: astore        13
112: aload         9
114: ldc           #25
116: invokevirtual #176
119: astore        14
121: aload         9
123: invokevirtual #348
126: astore        15
128: aload         9
130: invokevirtual #30
133: astore        16
135: aload_2
136: aload         16
138: invokevirtual #175
141: astore        17
143: aload         16
145: invokevirtual #205
148: astore        18
150: ldc_w         #1005
153: ldc_w         #989
156: aload_1
157: aload         18
159: invokestatic  #33
162: astore        19
164: ldc           #34
166: invokestatic  #35
169: goto          174
172: astore        19
174: aload_2
175: invokestatic  #15
178: aload_3
179: invokestatic  #15
182: aload         4
184: invokestatic  #15
187: aload         5
189: invokestatic  #15
192: new           #16
195: dup
196: invokespecial #17
199: ldc           #18
201: invokevirtual #19
204: aload         6
206: invokevirtual #19
209: ldc           #78
211: invokevirtual #19
214: invokevirtual #22
217: aload         6
219: ldc           #10
221: invokestatic  #68
224: aload         7
226: invokestatic  #15
229: aload         8
231: invokestatic  #79
234: aload         9
236: invokestatic  #15
239: aload         10
241: invokestatic  #15
244: aload         11
246: invokestatic  #15
249: aload         12
251: invokestatic  #15
254: new           #16
257: dup
258: invokespecial #17
261: ldc           #18
263: invokevirtual #19
266: aload         13
268: invokevirtual #19
271: ldc           #107
273: invokevirtual #19
276: invokevirtual #22
279: aload         13
281: ldc           #13
283: invokestatic  #68
286: new           #16
289: dup
290: invokespecial #17
293: ldc           #18
295: invokevirtual #19
298: aload         14
300: invokevirtual #19
303: ldc           #67
305: invokevirtual #19
308: invokevirtual #22
311: aload         14
313: ldc           #25
315: invokestatic  #68
318: aload         15
320: invokestatic  #15
323: aload         16
325: invokestatic  #15
328: aload         17
330: invokestatic  #15
333: aload         18
335: invokestatic  #15
338: return
Exception table:
from    to  target type
150   169   172   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test349
Start line: 18731
End line: 18742
Method source code: 
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean(" data=\"\" hi!=\"\" text=\"\"=\"data=&quot;&quot;=&quot;&quot;\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1006
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1007
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test350
Start line: 18745
End line: 18756
Method source code: 
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid(".hi!\n<html>\n <head></head>\n <body></body>\n</html>", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1008
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1009
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test351
Start line: 18759
End line: 18770
Method source code: 
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("<10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"></10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\">\n<html>\n <head></head>\n <body></body>\n</html>", "data=\"\"=\"\"", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1010
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1011
30: ldc_w         #980
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test352
Start line: 18773
End line: 18886
Method source code: 
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.nodes.Document document9 = document5.clone();
        org.jsoup.nodes.Document.QuirksMode quirksMode10 = document9.quirksMode();
        java.lang.String str11 = document9.title();
        org.jsoup.nodes.Document document14 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element16 = document14.val("hi!");
        org.jsoup.nodes.Document document17 = document14.clone();
        org.jsoup.select.Elements elements19 = document14.getElementsByIndexEquals((int) (byte) -1);
        org.jsoup.nodes.Attributes attributes20 = document14.attributes();
        org.jsoup.nodes.Element element22 = document14.text("hi!\n<html>\n <head></head>\n <body></body>\n</html>");
        org.jsoup.nodes.Document document25 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element27 = document25.val("hi!");
        org.jsoup.nodes.Document document28 = document25.clone();
        org.jsoup.select.Elements elements30 = document25.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str31 = document25.toString();
        org.jsoup.select.Elements elements32 = document25.children();
        org.jsoup.nodes.Element element33 = document25.parent();
        org.jsoup.nodes.Document document36 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element38 = document36.val("hi!");
        org.jsoup.nodes.Document document39 = document36.clone();
        org.jsoup.nodes.Document document40 = document36.clone();
        java.lang.String str41 = document36.nodeName();
        java.lang.String str43 = document36.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList44 = document36.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings45 = document36.outputSettings();
        org.jsoup.nodes.Document document46 = document25.outputSettings(outputSettings45);
        org.jsoup.nodes.Document.OutputSettings outputSettings47 = outputSettings45.clone();
        org.jsoup.nodes.Document document50 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element52 = document50.val("hi!");
        org.jsoup.nodes.Document document53 = document50.clone();
        org.jsoup.select.Elements elements55 = document50.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str56 = document50.toString();
        org.jsoup.select.Elements elements57 = document50.children();
        org.jsoup.nodes.Element element58 = document50.parent();
        org.jsoup.nodes.Document document61 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element63 = document61.val("hi!");
        org.jsoup.nodes.Document document64 = document61.clone();
        org.jsoup.nodes.Document document65 = document61.clone();
        java.lang.String str66 = document61.nodeName();
        java.lang.String str68 = document61.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList69 = document61.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings70 = document61.outputSettings();
        org.jsoup.nodes.Document document71 = document50.outputSettings(outputSettings70);
        org.jsoup.nodes.Document.OutputSettings outputSettings72 = outputSettings70.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode73 = outputSettings70.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings74 = outputSettings45.escapeMode(escapeMode73);
        java.nio.charset.Charset charset75 = outputSettings45.charset();
        org.jsoup.nodes.Document document76 = document14.outputSettings(outputSettings45);
        org.jsoup.nodes.Document document77 = document9.outputSettings(outputSettings45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = org.jsoup.Jsoup.clean("", "[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]", whitelist2, outputSettings45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document9);
        org.junit.Assert.assertTrue("'" + quirksMode10 + "' != '" + org.jsoup.nodes.Document.QuirksMode.noQuirks + "'", quirksMode10.equals(org.jsoup.nodes.Document.QuirksMode.noQuirks));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(document14);
        org.junit.Assert.assertNotNull(element16);
        org.junit.Assert.assertNotNull(document17);
        org.junit.Assert.assertNotNull(elements19);
        org.junit.Assert.assertNotNull(attributes20);
        org.junit.Assert.assertNotNull(element22);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(elements30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str31, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements32);
        org.junit.Assert.assertNull(element33);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(element38);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#document" + "'", str41, "#document");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(dataNodeList44);
        org.junit.Assert.assertNotNull(outputSettings45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertNotNull(outputSettings47);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertNotNull(element52);
        org.junit.Assert.assertNotNull(document53);
        org.junit.Assert.assertNotNull(elements55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str56, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements57);
        org.junit.Assert.assertNull(element58);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(element63);
        org.junit.Assert.assertNotNull(document64);
        org.junit.Assert.assertNotNull(document65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#document" + "'", str66, "#document");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(dataNodeList69);
        org.junit.Assert.assertNotNull(outputSettings70);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertNotNull(outputSettings72);
        org.junit.Assert.assertTrue("'" + escapeMode73 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode73.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings74);
        org.junit.Assert.assertNotNull(charset75);
        org.junit.Assert.assertNotNull(document76);
        org.junit.Assert.assertNotNull(document77);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1012
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload_2
49: invokevirtual #154
52: astore        5
54: aload         5
56: invokevirtual #222
59: astore        6
61: aload         5
63: invokevirtual #448
66: astore        7
68: ldc           #25
70: ldc           #25
72: invokestatic  #847
75: astore        8
77: aload         8
79: ldc           #12
81: invokevirtual #977
84: astore        9
86: aload         8
88: invokevirtual #154
91: astore        10
93: aload         8
95: iconst_m1
96: invokevirtual #162
99: astore        11
101: aload         8
103: invokevirtual #164
106: astore        12
108: aload         8
110: ldc_w         #1013
113: invokevirtual #64
116: astore        13
118: ldc           #25
120: ldc           #25
122: invokestatic  #847
125: astore        14
127: aload         14
129: ldc           #12
131: invokevirtual #977
134: astore        15
136: aload         14
138: invokevirtual #154
141: astore        16
143: aload         14
145: iconst_m1
146: invokevirtual #162
149: astore        17
151: aload         14
153: invokevirtual #72
156: astore        18
158: aload         14
160: invokevirtual #999
163: astore        19
165: aload         14
167: invokevirtual #74
170: astore        20
172: ldc           #25
174: ldc           #25
176: invokestatic  #847
179: astore        21
181: aload         21
183: ldc           #12
185: invokevirtual #977
188: astore        22
190: aload         21
192: invokevirtual #154
195: astore        23
197: aload         21
199: invokevirtual #154
202: astore        24
204: aload         21
206: invokevirtual #220
209: astore        25
211: aload         21
213: ldc           #25
215: invokevirtual #176
218: astore        26
220: aload         21
222: invokevirtual #348
225: astore        27
227: aload         21
229: invokevirtual #30
232: astore        28
234: aload         14
236: aload         28
238: invokevirtual #175
241: astore        29
243: aload         28
245: invokevirtual #205
248: astore        30
250: ldc           #25
252: ldc           #25
254: invokestatic  #847
257: astore        31
259: aload         31
261: ldc           #12
263: invokevirtual #977
266: astore        32
268: aload         31
270: invokevirtual #154
273: astore        33
275: aload         31
277: iconst_m1
278: invokevirtual #162
281: astore        34
283: aload         31
285: invokevirtual #72
288: astore        35
290: aload         31
292: invokevirtual #999
295: astore        36
297: aload         31
299: invokevirtual #74
302: astore        37
304: ldc           #25
306: ldc           #25
308: invokestatic  #847
311: astore        38
313: aload         38
315: ldc           #12
317: invokevirtual #977
320: astore        39
322: aload         38
324: invokevirtual #154
327: astore        40
329: aload         38
331: invokevirtual #154
334: astore        41
336: aload         38
338: invokevirtual #220
341: astore        42
343: aload         38
345: ldc           #25
347: invokevirtual #176
350: astore        43
352: aload         38
354: invokevirtual #348
357: astore        44
359: aload         38
361: invokevirtual #30
364: astore        45
366: aload         31
368: aload         45
370: invokevirtual #175
373: astore        46
375: aload         45
377: invokevirtual #205
380: astore        47
382: aload         45
384: invokevirtual #382
387: astore        48
389: aload         28
391: aload         48
393: invokevirtual #190
396: astore        49
398: aload         28
400: invokevirtual #460
403: astore        50
405: aload         8
407: aload         28
409: invokevirtual #175
412: astore        51
414: aload         5
416: aload         28
418: invokevirtual #175
421: astore        52
423: ldc           #25
425: ldc_w         #989
428: aload_1
429: aload         28
431: invokestatic  #33
434: astore        53
436: ldc           #34
438: invokestatic  #35
441: goto          446
444: astore        53
446: aload_2
447: invokestatic  #15
450: aload_3
451: invokestatic  #15
454: aload         4
456: invokestatic  #15
459: aload         5
461: invokestatic  #15
464: new           #16
467: dup
468: invokespecial #17
471: ldc           #18
473: invokevirtual #19
476: aload         6
478: invokevirtual #223
481: ldc           #21
483: invokevirtual #19
486: getstatic     #224
489: invokevirtual #223
492: ldc           #18
494: invokevirtual #19
497: invokevirtual #22
500: aload         6
502: getstatic     #224
505: invokevirtual #225
508: invokestatic  #23
511: new           #16
514: dup
515: invokespecial #17
518: ldc           #18
520: invokevirtual #19
523: aload         7
525: invokevirtual #19
528: ldc           #67
530: invokevirtual #19
533: invokevirtual #22
536: aload         7
538: ldc           #25
540: invokestatic  #68
543: aload         8
545: invokestatic  #15
548: aload         9
550: invokestatic  #15
553: aload         10
555: invokestatic  #15
558: aload         11
560: invokestatic  #15
563: aload         12
565: invokestatic  #15
568: aload         13
570: invokestatic  #15
573: aload         14
575: invokestatic  #15
578: aload         15
580: invokestatic  #15
583: aload         16
585: invokestatic  #15
588: aload         17
590: invokestatic  #15
593: new           #16
596: dup
597: invokespecial #17
600: ldc           #18
602: invokevirtual #19
605: aload         18
607: invokevirtual #19
610: ldc           #78
612: invokevirtual #19
615: invokevirtual #22
618: aload         18
620: ldc           #10
622: invokestatic  #68
625: aload         19
627: invokestatic  #15
630: aload         20
632: invokestatic  #79
635: aload         21
637: invokestatic  #15
640: aload         22
642: invokestatic  #15
645: aload         23
647: invokestatic  #15
650: aload         24
652: invokestatic  #15
655: new           #16
658: dup
659: invokespecial #17
662: ldc           #18
664: invokevirtual #19
667: aload         25
669: invokevirtual #19
672: ldc           #107
674: invokevirtual #19
677: invokevirtual #22
680: aload         25
682: ldc           #13
684: invokestatic  #68
687: new           #16
690: dup
691: invokespecial #17
694: ldc           #18
696: invokevirtual #19
699: aload         26
701: invokevirtual #19
704: ldc           #67
706: invokevirtual #19
709: invokevirtual #22
712: aload         26
714: ldc           #25
716: invokestatic  #68
719: aload         27
721: invokestatic  #15
724: aload         28
726: invokestatic  #15
729: aload         29
731: invokestatic  #15
734: aload         30
736: invokestatic  #15
739: aload         31
741: invokestatic  #15
744: aload         32
746: invokestatic  #15
749: aload         33
751: invokestatic  #15
754: aload         34
756: invokestatic  #15
759: new           #16
762: dup
763: invokespecial #17
766: ldc           #18
768: invokevirtual #19
771: aload         35
773: invokevirtual #19
776: ldc           #78
778: invokevirtual #19
781: invokevirtual #22
784: aload         35
786: ldc           #10
788: invokestatic  #68
791: aload         36
793: invokestatic  #15
796: aload         37
798: invokestatic  #79
801: aload         38
803: invokestatic  #15
806: aload         39
808: invokestatic  #15
811: aload         40
813: invokestatic  #15
816: aload         41
818: invokestatic  #15
821: new           #16
824: dup
825: invokespecial #17
828: ldc           #18
830: invokevirtual #19
833: aload         42
835: invokevirtual #19
838: ldc           #107
840: invokevirtual #19
843: invokevirtual #22
846: aload         42
848: ldc           #13
850: invokestatic  #68
853: new           #16
856: dup
857: invokespecial #17
860: ldc           #18
862: invokevirtual #19
865: aload         43
867: invokevirtual #19
870: ldc           #67
872: invokevirtual #19
875: invokevirtual #22
878: aload         43
880: ldc           #25
882: invokestatic  #68
885: aload         44
887: invokestatic  #15
890: aload         45
892: invokestatic  #15
895: aload         46
897: invokestatic  #15
900: aload         47
902: invokestatic  #15
905: new           #16
908: dup
909: invokespecial #17
912: ldc           #18
914: invokevirtual #19
917: aload         48
919: invokevirtual #223
922: ldc           #21
924: invokevirtual #19
927: getstatic     #381
930: invokevirtual #223
933: ldc           #18
935: invokevirtual #19
938: invokevirtual #22
941: aload         48
943: getstatic     #381
946: invokevirtual #385
949: invokestatic  #23
952: aload         49
954: invokestatic  #15
957: aload         50
959: invokestatic  #15
962: aload         51
964: invokestatic  #15
967: aload         52
969: invokestatic  #15
972: return
Exception table:
from    to  target type
423   441   444   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test353
Start line: 18889
End line: 18900
Method source code: 
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("[[[1.0, 10,  , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]]^=data=\"\" hi!=\"\" text=\"\"=\"data=&quot;&quot;=&quot;&quot;\"]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1014
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1015
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test354
Start line: 18903
End line: 18946
Method source code: 
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = org.jsoup.Jsoup.clean("hi!:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>10:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1.0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>10:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html> :containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>#:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html> :containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>false:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>100.0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html> :containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>10.0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>100:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>0.0", "                       ", whitelist2, outputSettings24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1016
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: ldc_w         #1017
153: ldc_w         #1018
156: aload_1
157: aload         15
159: invokestatic  #33
162: astore        18
164: ldc           #34
166: invokestatic  #35
169: goto          174
172: astore        18
174: aload_2
175: invokestatic  #15
178: aload_3
179: invokestatic  #15
182: aload         4
184: invokestatic  #15
187: new           #16
190: dup
191: invokespecial #17
194: ldc           #18
196: invokevirtual #19
199: aload         5
201: invokevirtual #19
204: ldc           #67
206: invokevirtual #19
209: invokevirtual #22
212: aload         5
214: ldc           #25
216: invokestatic  #68
219: new           #16
222: dup
223: invokespecial #17
226: ldc           #18
228: invokevirtual #19
231: aload         6
233: invokevirtual #19
236: ldc           #67
238: invokevirtual #19
241: invokevirtual #22
244: aload         6
246: ldc           #25
248: invokestatic  #68
251: aload         7
253: invokestatic  #15
256: aload         8
258: invokestatic  #15
261: aload         9
263: invokestatic  #15
266: aload         10
268: invokestatic  #15
271: aload         11
273: invokestatic  #15
276: new           #16
279: dup
280: invokespecial #17
283: ldc           #18
285: invokevirtual #19
288: aload         12
290: invokevirtual #19
293: ldc           #107
295: invokevirtual #19
298: invokevirtual #22
301: aload         12
303: ldc           #13
305: invokestatic  #68
308: new           #16
311: dup
312: invokespecial #17
315: ldc           #18
317: invokevirtual #19
320: aload         13
322: invokevirtual #19
325: ldc           #67
327: invokevirtual #19
330: invokevirtual #22
333: aload         13
335: ldc           #25
337: invokestatic  #68
340: aload         14
342: invokestatic  #15
345: aload         15
347: invokestatic  #15
350: aload         16
352: invokestatic  #15
355: new           #16
358: dup
359: invokespecial #17
362: ldc           #18
364: invokevirtual #19
367: aload         17
369: invokevirtual #223
372: ldc           #21
374: invokevirtual #19
377: getstatic     #381
380: invokevirtual #223
383: ldc           #18
385: invokevirtual #19
388: invokevirtual #22
391: aload         17
393: getstatic     #381
396: invokevirtual #385
399: invokestatic  #23
402: return
Exception table:
from    to  target type
150   169   172   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test355
Start line: 18949
End line: 18960
Method source code: 
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("", "[[data=\"\"=[hi!]]^=hi!]", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1019
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc_w         #1020
32: aload_1
33: invokestatic  #94
36: astore_2
37: ldc           #34
39: invokestatic  #35
42: goto          46
45: astore_2
46: return
Exception table:
from    to  target type
27    42    45   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test356
Start line: 18963
End line: 18974
Method source code: 
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("text=\"\"=\"[[1.0, 10,  , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]]\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1021
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1022
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test357
Start line: 18977
End line: 18988
Method source code: 
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("[1.0, 10,  , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1023
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1024
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test358
Start line: 18991
End line: 19046
Method source code: 
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.select.Elements elements10 = document8.getElementsByIndexLessThan((int) (byte) -1);
        org.jsoup.nodes.Document document13 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element15 = document13.val("hi!");
        org.jsoup.nodes.Document document16 = document13.clone();
        org.jsoup.select.Elements elements18 = document13.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str19 = document13.toString();
        org.jsoup.select.Elements elements20 = document13.children();
        org.jsoup.nodes.Element element21 = document13.parent();
        org.jsoup.nodes.Document document24 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element26 = document24.val("hi!");
        org.jsoup.nodes.Document document27 = document24.clone();
        org.jsoup.nodes.Document document28 = document24.clone();
        java.lang.String str29 = document24.nodeName();
        java.lang.String str31 = document24.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList32 = document24.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings33 = document24.outputSettings();
        org.jsoup.nodes.Document document34 = document13.outputSettings(outputSettings33);
        org.jsoup.nodes.Document document35 = document8.outputSettings(outputSettings33);
        boolean boolean36 = outputSettings33.prettyPrint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = org.jsoup.Jsoup.clean("[[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]*=:containsown(hi!]", "text=\"\"", whitelist2, outputSettings33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertNotNull(document13);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(elements18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str19, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements20);
        org.junit.Assert.assertNull(element21);
        org.junit.Assert.assertNotNull(document24);
        org.junit.Assert.assertNotNull(element26);
        org.junit.Assert.assertNotNull(document27);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#document" + "'", str29, "#document");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(dataNodeList32);
        org.junit.Assert.assertNotNull(outputSettings33);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(document35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1025
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: iconst_m1
51: invokevirtual #1026
54: astore        5
56: ldc           #25
58: ldc           #25
60: invokestatic  #847
63: astore        6
65: aload         6
67: ldc           #12
69: invokevirtual #977
72: astore        7
74: aload         6
76: invokevirtual #154
79: astore        8
81: aload         6
83: iconst_m1
84: invokevirtual #162
87: astore        9
89: aload         6
91: invokevirtual #72
94: astore        10
96: aload         6
98: invokevirtual #999
101: astore        11
103: aload         6
105: invokevirtual #74
108: astore        12
110: ldc           #25
112: ldc           #25
114: invokestatic  #847
117: astore        13
119: aload         13
121: ldc           #12
123: invokevirtual #977
126: astore        14
128: aload         13
130: invokevirtual #154
133: astore        15
135: aload         13
137: invokevirtual #154
140: astore        16
142: aload         13
144: invokevirtual #220
147: astore        17
149: aload         13
151: ldc           #25
153: invokevirtual #176
156: astore        18
158: aload         13
160: invokevirtual #348
163: astore        19
165: aload         13
167: invokevirtual #30
170: astore        20
172: aload         6
174: aload         20
176: invokevirtual #175
179: astore        21
181: aload         4
183: aload         20
185: invokevirtual #175
188: astore        22
190: aload         20
192: invokevirtual #461
195: istore        23
197: ldc_w         #1027
200: ldc_w         #1028
203: aload_1
204: aload         20
206: invokestatic  #33
209: astore        24
211: ldc           #34
213: invokestatic  #35
216: goto          221
219: astore        24
221: aload_2
222: invokestatic  #15
225: aload_3
226: invokestatic  #15
229: aload         4
231: invokestatic  #15
234: aload         5
236: invokestatic  #15
239: aload         6
241: invokestatic  #15
244: aload         7
246: invokestatic  #15
249: aload         8
251: invokestatic  #15
254: aload         9
256: invokestatic  #15
259: new           #16
262: dup
263: invokespecial #17
266: ldc           #18
268: invokevirtual #19
271: aload         10
273: invokevirtual #19
276: ldc           #78
278: invokevirtual #19
281: invokevirtual #22
284: aload         10
286: ldc           #10
288: invokestatic  #68
291: aload         11
293: invokestatic  #15
296: aload         12
298: invokestatic  #79
301: aload         13
303: invokestatic  #15
306: aload         14
308: invokestatic  #15
311: aload         15
313: invokestatic  #15
316: aload         16
318: invokestatic  #15
321: new           #16
324: dup
325: invokespecial #17
328: ldc           #18
330: invokevirtual #19
333: aload         17
335: invokevirtual #19
338: ldc           #107
340: invokevirtual #19
343: invokevirtual #22
346: aload         17
348: ldc           #13
350: invokestatic  #68
353: new           #16
356: dup
357: invokespecial #17
360: ldc           #18
362: invokevirtual #19
365: aload         18
367: invokevirtual #19
370: ldc           #67
372: invokevirtual #19
375: invokevirtual #22
378: aload         18
380: ldc           #25
382: invokestatic  #68
385: aload         19
387: invokestatic  #15
390: aload         20
392: invokestatic  #15
395: aload         21
397: invokestatic  #15
400: aload         22
402: invokestatic  #15
405: new           #16
408: dup
409: invokespecial #17
412: ldc           #18
414: invokevirtual #19
417: iload         23
419: invokevirtual #20
422: ldc           #21
424: invokevirtual #19
427: iconst_1
428: invokevirtual #20
431: ldc           #18
433: invokevirtual #19
436: invokevirtual #22
439: iload         23
441: iconst_1
442: if_icmpne     449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #23
453: return
Exception table:
from    to  target type
197   216   219   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test359
Start line: 19049
End line: 19060
Method source code: 
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("[^hi!\n<html>\n <head></head>\n <body></body>\n</html>]", "hi!\n<html>\n <head></head>\n <body></body>\n</html>", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1029
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #996
30: ldc_w         #1013
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test360
Start line: 19063
End line: 19074
Method source code: 
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("hi!", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1030
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #12
29: aload_1
30: invokestatic  #81
33: astore_2
34: ldc           #34
36: invokestatic  #35
39: goto          43
42: astore_2
43: return
Exception table:
from    to  target type
27    39    42   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test361
Start line: 19077
End line: 19088
Method source code: 
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("hi!\n&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1031
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #981
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test362
Start line: 19091
End line: 19134
Method source code: 
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = org.jsoup.Jsoup.clean("[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]", "[", whitelist2, outputSettings24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1032
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: ldc_w         #987
153: ldc_w         #1033
156: aload_1
157: aload         15
159: invokestatic  #33
162: astore        18
164: ldc           #34
166: invokestatic  #35
169: goto          174
172: astore        18
174: aload_2
175: invokestatic  #15
178: aload_3
179: invokestatic  #15
182: aload         4
184: invokestatic  #15
187: new           #16
190: dup
191: invokespecial #17
194: ldc           #18
196: invokevirtual #19
199: aload         5
201: invokevirtual #19
204: ldc           #67
206: invokevirtual #19
209: invokevirtual #22
212: aload         5
214: ldc           #25
216: invokestatic  #68
219: new           #16
222: dup
223: invokespecial #17
226: ldc           #18
228: invokevirtual #19
231: aload         6
233: invokevirtual #19
236: ldc           #67
238: invokevirtual #19
241: invokevirtual #22
244: aload         6
246: ldc           #25
248: invokestatic  #68
251: aload         7
253: invokestatic  #15
256: aload         8
258: invokestatic  #15
261: aload         9
263: invokestatic  #15
266: aload         10
268: invokestatic  #15
271: aload         11
273: invokestatic  #15
276: new           #16
279: dup
280: invokespecial #17
283: ldc           #18
285: invokevirtual #19
288: aload         12
290: invokevirtual #19
293: ldc           #107
295: invokevirtual #19
298: invokevirtual #22
301: aload         12
303: ldc           #13
305: invokestatic  #68
308: new           #16
311: dup
312: invokespecial #17
315: ldc           #18
317: invokevirtual #19
320: aload         13
322: invokevirtual #19
325: ldc           #67
327: invokevirtual #19
330: invokevirtual #22
333: aload         13
335: ldc           #25
337: invokestatic  #68
340: aload         14
342: invokestatic  #15
345: aload         15
347: invokestatic  #15
350: aload         16
352: invokestatic  #15
355: new           #16
358: dup
359: invokespecial #17
362: ldc           #18
364: invokevirtual #19
367: aload         17
369: invokevirtual #223
372: ldc           #21
374: invokevirtual #19
377: getstatic     #381
380: invokevirtual #223
383: ldc           #18
385: invokevirtual #19
388: invokevirtual #22
391: aload         17
393: getstatic     #381
396: invokevirtual #385
399: invokestatic  #23
402: return
Exception table:
from    to  target type
150   169   172   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test363
Start line: 19137
End line: 19182
Method source code: 
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.select.Elements elements10 = document5.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str11 = document5.toString();
        org.jsoup.select.Elements elements12 = document5.children();
        org.jsoup.nodes.Element element13 = document5.parent();
        org.jsoup.nodes.Document document16 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element18 = document16.val("hi!");
        org.jsoup.nodes.Document document19 = document16.clone();
        org.jsoup.nodes.Document document20 = document16.clone();
        java.lang.String str21 = document16.nodeName();
        java.lang.String str23 = document16.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList24 = document16.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = document16.outputSettings();
        org.jsoup.nodes.Document document26 = document5.outputSettings(outputSettings25);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings25.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = org.jsoup.Jsoup.clean("hi!\n&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;", " data=\"\" data=\"\"=\"\"", whitelist2, outputSettings25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str11, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNull(element13);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#document" + "'", str21, "#document");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(dataNodeList24);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(outputSettings27);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1034
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload_2
49: iconst_m1
50: invokevirtual #162
53: astore        5
55: aload_2
56: invokevirtual #72
59: astore        6
61: aload_2
62: invokevirtual #999
65: astore        7
67: aload_2
68: invokevirtual #74
71: astore        8
73: ldc           #25
75: ldc           #25
77: invokestatic  #847
80: astore        9
82: aload         9
84: ldc           #12
86: invokevirtual #977
89: astore        10
91: aload         9
93: invokevirtual #154
96: astore        11
98: aload         9
100: invokevirtual #154
103: astore        12
105: aload         9
107: invokevirtual #220
110: astore        13
112: aload         9
114: ldc           #25
116: invokevirtual #176
119: astore        14
121: aload         9
123: invokevirtual #348
126: astore        15
128: aload         9
130: invokevirtual #30
133: astore        16
135: aload_2
136: aload         16
138: invokevirtual #175
141: astore        17
143: aload         16
145: invokevirtual #205
148: astore        18
150: ldc_w         #981
153: ldc_w         #1035
156: aload_1
157: aload         16
159: invokestatic  #33
162: astore        19
164: ldc           #34
166: invokestatic  #35
169: goto          174
172: astore        19
174: aload_2
175: invokestatic  #15
178: aload_3
179: invokestatic  #15
182: aload         4
184: invokestatic  #15
187: aload         5
189: invokestatic  #15
192: new           #16
195: dup
196: invokespecial #17
199: ldc           #18
201: invokevirtual #19
204: aload         6
206: invokevirtual #19
209: ldc           #78
211: invokevirtual #19
214: invokevirtual #22
217: aload         6
219: ldc           #10
221: invokestatic  #68
224: aload         7
226: invokestatic  #15
229: aload         8
231: invokestatic  #79
234: aload         9
236: invokestatic  #15
239: aload         10
241: invokestatic  #15
244: aload         11
246: invokestatic  #15
249: aload         12
251: invokestatic  #15
254: new           #16
257: dup
258: invokespecial #17
261: ldc           #18
263: invokevirtual #19
266: aload         13
268: invokevirtual #19
271: ldc           #107
273: invokevirtual #19
276: invokevirtual #22
279: aload         13
281: ldc           #13
283: invokestatic  #68
286: new           #16
289: dup
290: invokespecial #17
293: ldc           #18
295: invokevirtual #19
298: aload         14
300: invokevirtual #19
303: ldc           #67
305: invokevirtual #19
308: invokevirtual #22
311: aload         14
313: ldc           #25
315: invokestatic  #68
318: aload         15
320: invokestatic  #15
323: aload         16
325: invokestatic  #15
328: aload         17
330: invokestatic  #15
333: aload         18
335: invokestatic  #15
338: return
Exception table:
from    to  target type
150   169   172   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test364
Start line: 19185
End line: 19196
Method source code: 
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("[^hi!\n<html>\n <head></head>\n <body></body>\n</html>]", "<10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"></10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\">\n<html>\n <head></head>\n <body></body>\n</html>", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1036
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #996
30: ldc_w         #1011
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test365
Start line: 19199
End line: 19210
Method source code: 
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("<html>\n <head></head>\n <body>\n  [hi!]\n </body>\n</html>", ":gt(52)", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1037
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1038
30: ldc_w         #997
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test366
Start line: 19213
End line: 19262
Method source code: 
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.select.Elements elements10 = document5.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str11 = document5.toString();
        org.jsoup.select.Elements elements12 = document5.children();
        org.jsoup.nodes.Element element13 = document5.parent();
        org.jsoup.nodes.Document document16 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element18 = document16.val("hi!");
        org.jsoup.nodes.Document document19 = document16.clone();
        org.jsoup.nodes.Document document20 = document16.clone();
        java.lang.String str21 = document16.nodeName();
        java.lang.String str23 = document16.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList24 = document16.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = document16.outputSettings();
        org.jsoup.nodes.Document document26 = document5.outputSettings(outputSettings25);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings25.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode28 = outputSettings25.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings25.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = org.jsoup.Jsoup.clean("[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10, , , -1, #, , false, 100.0, , 1, 10.0, 100, 0.0]!=data=&quot;&quot;]\n<html>\n <head></head>\n <body></body>\n</html>", ".10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"", whitelist2, outputSettings29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str11, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNull(element13);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#document" + "'", str21, "#document");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(dataNodeList24);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertTrue("'" + escapeMode28 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode28.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings29);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1039
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload_2
49: iconst_m1
50: invokevirtual #162
53: astore        5
55: aload_2
56: invokevirtual #72
59: astore        6
61: aload_2
62: invokevirtual #999
65: astore        7
67: aload_2
68: invokevirtual #74
71: astore        8
73: ldc           #25
75: ldc           #25
77: invokestatic  #847
80: astore        9
82: aload         9
84: ldc           #12
86: invokevirtual #977
89: astore        10
91: aload         9
93: invokevirtual #154
96: astore        11
98: aload         9
100: invokevirtual #154
103: astore        12
105: aload         9
107: invokevirtual #220
110: astore        13
112: aload         9
114: ldc           #25
116: invokevirtual #176
119: astore        14
121: aload         9
123: invokevirtual #348
126: astore        15
128: aload         9
130: invokevirtual #30
133: astore        16
135: aload_2
136: aload         16
138: invokevirtual #175
141: astore        17
143: aload         16
145: invokevirtual #205
148: astore        18
150: aload         16
152: invokevirtual #382
155: astore        19
157: aload         16
159: invokevirtual #205
162: astore        20
164: ldc_w         #1040
167: ldc_w         #1041
170: aload_1
171: aload         20
173: invokestatic  #33
176: astore        21
178: ldc           #34
180: invokestatic  #35
183: goto          188
186: astore        21
188: aload_2
189: invokestatic  #15
192: aload_3
193: invokestatic  #15
196: aload         4
198: invokestatic  #15
201: aload         5
203: invokestatic  #15
206: new           #16
209: dup
210: invokespecial #17
213: ldc           #18
215: invokevirtual #19
218: aload         6
220: invokevirtual #19
223: ldc           #78
225: invokevirtual #19
228: invokevirtual #22
231: aload         6
233: ldc           #10
235: invokestatic  #68
238: aload         7
240: invokestatic  #15
243: aload         8
245: invokestatic  #79
248: aload         9
250: invokestatic  #15
253: aload         10
255: invokestatic  #15
258: aload         11
260: invokestatic  #15
263: aload         12
265: invokestatic  #15
268: new           #16
271: dup
272: invokespecial #17
275: ldc           #18
277: invokevirtual #19
280: aload         13
282: invokevirtual #19
285: ldc           #107
287: invokevirtual #19
290: invokevirtual #22
293: aload         13
295: ldc           #13
297: invokestatic  #68
300: new           #16
303: dup
304: invokespecial #17
307: ldc           #18
309: invokevirtual #19
312: aload         14
314: invokevirtual #19
317: ldc           #67
319: invokevirtual #19
322: invokevirtual #22
325: aload         14
327: ldc           #25
329: invokestatic  #68
332: aload         15
334: invokestatic  #15
337: aload         16
339: invokestatic  #15
342: aload         17
344: invokestatic  #15
347: aload         18
349: invokestatic  #15
352: new           #16
355: dup
356: invokespecial #17
359: ldc           #18
361: invokevirtual #19
364: aload         19
366: invokevirtual #223
369: ldc           #21
371: invokevirtual #19
374: getstatic     #381
377: invokevirtual #223
380: ldc           #18
382: invokevirtual #19
385: invokevirtual #22
388: aload         19
390: getstatic     #381
393: invokevirtual #385
396: invokestatic  #23
399: aload         20
401: invokestatic  #15
404: return
Exception table:
from    to  target type
164   183   186   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test367
Start line: 19265
End line: 19276
Method source code: 
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid(" data=\"\" hi!=\"\" [10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]=\"[hi!]\"=\"[hi!]\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1042
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1043
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test368
Start line: 19279
End line: 19330
Method source code: 
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.select.Elements elements10 = document5.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str11 = document5.toString();
        org.jsoup.select.Elements elements12 = document5.children();
        org.jsoup.nodes.Element element13 = document5.parent();
        org.jsoup.nodes.Document document16 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element18 = document16.val("hi!");
        org.jsoup.nodes.Document document19 = document16.clone();
        org.jsoup.nodes.Document document20 = document16.clone();
        java.lang.String str21 = document16.nodeName();
        java.lang.String str23 = document16.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList24 = document16.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = document16.outputSettings();
        org.jsoup.nodes.Document document26 = document5.outputSettings(outputSettings25);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings25.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings25.prettyPrint(true);
        org.jsoup.nodes.Document.OutputSettings outputSettings31 = outputSettings25.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings33 = outputSettings31.indentAmount((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = org.jsoup.Jsoup.clean("[10.0, 0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]", "1.010 -10.010010.010.01001.01001.0400100true-1100100.00110.010.0-10.0null", whitelist2, outputSettings33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str11, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNull(element13);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#document" + "'", str21, "#document");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(dataNodeList24);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(outputSettings31);
        org.junit.Assert.assertNotNull(outputSettings33);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1044
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload_2
49: iconst_m1
50: invokevirtual #162
53: astore        5
55: aload_2
56: invokevirtual #72
59: astore        6
61: aload_2
62: invokevirtual #999
65: astore        7
67: aload_2
68: invokevirtual #74
71: astore        8
73: ldc           #25
75: ldc           #25
77: invokestatic  #847
80: astore        9
82: aload         9
84: ldc           #12
86: invokevirtual #977
89: astore        10
91: aload         9
93: invokevirtual #154
96: astore        11
98: aload         9
100: invokevirtual #154
103: astore        12
105: aload         9
107: invokevirtual #220
110: astore        13
112: aload         9
114: ldc           #25
116: invokevirtual #176
119: astore        14
121: aload         9
123: invokevirtual #348
126: astore        15
128: aload         9
130: invokevirtual #30
133: astore        16
135: aload_2
136: aload         16
138: invokevirtual #175
141: astore        17
143: aload         16
145: invokevirtual #205
148: astore        18
150: aload         16
152: iconst_1
153: invokevirtual #31
156: astore        19
158: aload         16
160: iconst_0
161: invokevirtual #31
164: astore        20
166: aload         20
168: iconst_1
169: invokevirtual #189
172: astore        21
174: ldc_w         #1045
177: ldc_w         #1046
180: aload_1
181: aload         21
183: invokestatic  #33
186: astore        22
188: ldc           #34
190: invokestatic  #35
193: goto          198
196: astore        22
198: aload_2
199: invokestatic  #15
202: aload_3
203: invokestatic  #15
206: aload         4
208: invokestatic  #15
211: aload         5
213: invokestatic  #15
216: new           #16
219: dup
220: invokespecial #17
223: ldc           #18
225: invokevirtual #19
228: aload         6
230: invokevirtual #19
233: ldc           #78
235: invokevirtual #19
238: invokevirtual #22
241: aload         6
243: ldc           #10
245: invokestatic  #68
248: aload         7
250: invokestatic  #15
253: aload         8
255: invokestatic  #79
258: aload         9
260: invokestatic  #15
263: aload         10
265: invokestatic  #15
268: aload         11
270: invokestatic  #15
273: aload         12
275: invokestatic  #15
278: new           #16
281: dup
282: invokespecial #17
285: ldc           #18
287: invokevirtual #19
290: aload         13
292: invokevirtual #19
295: ldc           #107
297: invokevirtual #19
300: invokevirtual #22
303: aload         13
305: ldc           #13
307: invokestatic  #68
310: new           #16
313: dup
314: invokespecial #17
317: ldc           #18
319: invokevirtual #19
322: aload         14
324: invokevirtual #19
327: ldc           #67
329: invokevirtual #19
332: invokevirtual #22
335: aload         14
337: ldc           #25
339: invokestatic  #68
342: aload         15
344: invokestatic  #15
347: aload         16
349: invokestatic  #15
352: aload         17
354: invokestatic  #15
357: aload         18
359: invokestatic  #15
362: aload         19
364: invokestatic  #15
367: aload         20
369: invokestatic  #15
372: aload         21
374: invokestatic  #15
377: return
Exception table:
from    to  target type
174   193   196   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test369
Start line: 19333
End line: 19452
Method source code: 
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings24.prettyPrint(true);
        org.jsoup.nodes.Document document31 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element33 = document31.val("hi!");
        org.jsoup.nodes.Document document34 = document31.clone();
        org.jsoup.select.Elements elements36 = document31.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str37 = document31.toString();
        org.jsoup.select.Elements elements38 = document31.children();
        org.jsoup.nodes.Element element39 = document31.parent();
        org.jsoup.nodes.Document document42 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element44 = document42.val("hi!");
        org.jsoup.nodes.Document document45 = document42.clone();
        org.jsoup.nodes.Document document46 = document42.clone();
        java.lang.String str47 = document42.nodeName();
        java.lang.String str49 = document42.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList50 = document42.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document42.outputSettings();
        org.jsoup.nodes.Document document52 = document31.outputSettings(outputSettings51);
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings51.clone();
        org.jsoup.nodes.Document document56 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element58 = document56.val("hi!");
        org.jsoup.nodes.Document document59 = document56.clone();
        org.jsoup.select.Elements elements61 = document56.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str62 = document56.toString();
        org.jsoup.select.Elements elements63 = document56.children();
        org.jsoup.nodes.Element element64 = document56.parent();
        org.jsoup.nodes.Document document67 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element69 = document67.val("hi!");
        org.jsoup.nodes.Document document70 = document67.clone();
        org.jsoup.nodes.Document document71 = document67.clone();
        java.lang.String str72 = document67.nodeName();
        java.lang.String str74 = document67.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList75 = document67.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = document67.outputSettings();
        org.jsoup.nodes.Document document77 = document56.outputSettings(outputSettings76);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings76.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode79 = outputSettings76.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings51.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings81 = outputSettings24.escapeMode(escapeMode79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = org.jsoup.Jsoup.clean(".hi! <html> <head></head> <body></body> </html>", "[[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]*=:containsown(hi!]", whitelist2, outputSettings81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str37, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertNull(element39);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#document" + "'", str47, "#document");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(dataNodeList50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(elements61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str62, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements63);
        org.junit.Assert.assertNull(element64);
        org.junit.Assert.assertNotNull(document67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#document" + "'", str72, "#document");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(dataNodeList75);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(outputSettings78);
        org.junit.Assert.assertTrue("'" + escapeMode79 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode79.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertNotNull(outputSettings81);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1047
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: aload         15
152: iconst_1
153: invokevirtual #31
156: astore        18
158: ldc           #25
160: ldc           #25
162: invokestatic  #847
165: astore        19
167: aload         19
169: ldc           #12
171: invokevirtual #977
174: astore        20
176: aload         19
178: invokevirtual #154
181: astore        21
183: aload         19
185: iconst_m1
186: invokevirtual #162
189: astore        22
191: aload         19
193: invokevirtual #72
196: astore        23
198: aload         19
200: invokevirtual #999
203: astore        24
205: aload         19
207: invokevirtual #74
210: astore        25
212: ldc           #25
214: ldc           #25
216: invokestatic  #847
219: astore        26
221: aload         26
223: ldc           #12
225: invokevirtual #977
228: astore        27
230: aload         26
232: invokevirtual #154
235: astore        28
237: aload         26
239: invokevirtual #154
242: astore        29
244: aload         26
246: invokevirtual #220
249: astore        30
251: aload         26
253: ldc           #25
255: invokevirtual #176
258: astore        31
260: aload         26
262: invokevirtual #348
265: astore        32
267: aload         26
269: invokevirtual #30
272: astore        33
274: aload         19
276: aload         33
278: invokevirtual #175
281: astore        34
283: aload         33
285: invokevirtual #205
288: astore        35
290: ldc           #25
292: ldc           #25
294: invokestatic  #847
297: astore        36
299: aload         36
301: ldc           #12
303: invokevirtual #977
306: astore        37
308: aload         36
310: invokevirtual #154
313: astore        38
315: aload         36
317: iconst_m1
318: invokevirtual #162
321: astore        39
323: aload         36
325: invokevirtual #72
328: astore        40
330: aload         36
332: invokevirtual #999
335: astore        41
337: aload         36
339: invokevirtual #74
342: astore        42
344: ldc           #25
346: ldc           #25
348: invokestatic  #847
351: astore        43
353: aload         43
355: ldc           #12
357: invokevirtual #977
360: astore        44
362: aload         43
364: invokevirtual #154
367: astore        45
369: aload         43
371: invokevirtual #154
374: astore        46
376: aload         43
378: invokevirtual #220
381: astore        47
383: aload         43
385: ldc           #25
387: invokevirtual #176
390: astore        48
392: aload         43
394: invokevirtual #348
397: astore        49
399: aload         43
401: invokevirtual #30
404: astore        50
406: aload         36
408: aload         50
410: invokevirtual #175
413: astore        51
415: aload         50
417: invokevirtual #205
420: astore        52
422: aload         50
424: invokevirtual #382
427: astore        53
429: aload         33
431: aload         53
433: invokevirtual #190
436: astore        54
438: aload         15
440: aload         53
442: invokevirtual #190
445: astore        55
447: ldc_w         #1048
450: ldc_w         #1027
453: aload_1
454: aload         55
456: invokestatic  #33
459: astore        56
461: ldc           #34
463: invokestatic  #35
466: goto          471
469: astore        56
471: aload_2
472: invokestatic  #15
475: aload_3
476: invokestatic  #15
479: aload         4
481: invokestatic  #15
484: new           #16
487: dup
488: invokespecial #17
491: ldc           #18
493: invokevirtual #19
496: aload         5
498: invokevirtual #19
501: ldc           #67
503: invokevirtual #19
506: invokevirtual #22
509: aload         5
511: ldc           #25
513: invokestatic  #68
516: new           #16
519: dup
520: invokespecial #17
523: ldc           #18
525: invokevirtual #19
528: aload         6
530: invokevirtual #19
533: ldc           #67
535: invokevirtual #19
538: invokevirtual #22
541: aload         6
543: ldc           #25
545: invokestatic  #68
548: aload         7
550: invokestatic  #15
553: aload         8
555: invokestatic  #15
558: aload         9
560: invokestatic  #15
563: aload         10
565: invokestatic  #15
568: aload         11
570: invokestatic  #15
573: new           #16
576: dup
577: invokespecial #17
580: ldc           #18
582: invokevirtual #19
585: aload         12
587: invokevirtual #19
590: ldc           #107
592: invokevirtual #19
595: invokevirtual #22
598: aload         12
600: ldc           #13
602: invokestatic  #68
605: new           #16
608: dup
609: invokespecial #17
612: ldc           #18
614: invokevirtual #19
617: aload         13
619: invokevirtual #19
622: ldc           #67
624: invokevirtual #19
627: invokevirtual #22
630: aload         13
632: ldc           #25
634: invokestatic  #68
637: aload         14
639: invokestatic  #15
642: aload         15
644: invokestatic  #15
647: aload         16
649: invokestatic  #15
652: new           #16
655: dup
656: invokespecial #17
659: ldc           #18
661: invokevirtual #19
664: aload         17
666: invokevirtual #223
669: ldc           #21
671: invokevirtual #19
674: getstatic     #381
677: invokevirtual #223
680: ldc           #18
682: invokevirtual #19
685: invokevirtual #22
688: aload         17
690: getstatic     #381
693: invokevirtual #385
696: invokestatic  #23
699: aload         18
701: invokestatic  #15
704: aload         19
706: invokestatic  #15
709: aload         20
711: invokestatic  #15
714: aload         21
716: invokestatic  #15
719: aload         22
721: invokestatic  #15
724: new           #16
727: dup
728: invokespecial #17
731: ldc           #18
733: invokevirtual #19
736: aload         23
738: invokevirtual #19
741: ldc           #78
743: invokevirtual #19
746: invokevirtual #22
749: aload         23
751: ldc           #10
753: invokestatic  #68
756: aload         24
758: invokestatic  #15
761: aload         25
763: invokestatic  #79
766: aload         26
768: invokestatic  #15
771: aload         27
773: invokestatic  #15
776: aload         28
778: invokestatic  #15
781: aload         29
783: invokestatic  #15
786: new           #16
789: dup
790: invokespecial #17
793: ldc           #18
795: invokevirtual #19
798: aload         30
800: invokevirtual #19
803: ldc           #107
805: invokevirtual #19
808: invokevirtual #22
811: aload         30
813: ldc           #13
815: invokestatic  #68
818: new           #16
821: dup
822: invokespecial #17
825: ldc           #18
827: invokevirtual #19
830: aload         31
832: invokevirtual #19
835: ldc           #67
837: invokevirtual #19
840: invokevirtual #22
843: aload         31
845: ldc           #25
847: invokestatic  #68
850: aload         32
852: invokestatic  #15
855: aload         33
857: invokestatic  #15
860: aload         34
862: invokestatic  #15
865: aload         35
867: invokestatic  #15
870: aload         36
872: invokestatic  #15
875: aload         37
877: invokestatic  #15
880: aload         38
882: invokestatic  #15
885: aload         39
887: invokestatic  #15
890: new           #16
893: dup
894: invokespecial #17
897: ldc           #18
899: invokevirtual #19
902: aload         40
904: invokevirtual #19
907: ldc           #78
909: invokevirtual #19
912: invokevirtual #22
915: aload         40
917: ldc           #10
919: invokestatic  #68
922: aload         41
924: invokestatic  #15
927: aload         42
929: invokestatic  #79
932: aload         43
934: invokestatic  #15
937: aload         44
939: invokestatic  #15
942: aload         45
944: invokestatic  #15
947: aload         46
949: invokestatic  #15
952: new           #16
955: dup
956: invokespecial #17
959: ldc           #18
961: invokevirtual #19
964: aload         47
966: invokevirtual #19
969: ldc           #107
971: invokevirtual #19
974: invokevirtual #22
977: aload         47
979: ldc           #13
981: invokestatic  #68
984: new           #16
987: dup
988: invokespecial #17
991: ldc           #18
993: invokevirtual #19
996: aload         48
998: invokevirtual #19
1001: ldc           #67
1003: invokevirtual #19
1006: invokevirtual #22
1009: aload         48
1011: ldc           #25
1013: invokestatic  #68
1016: aload         49
1018: invokestatic  #15
1021: aload         50
1023: invokestatic  #15
1026: aload         51
1028: invokestatic  #15
1031: aload         52
1033: invokestatic  #15
1036: new           #16
1039: dup
1040: invokespecial #17
1043: ldc           #18
1045: invokevirtual #19
1048: aload         53
1050: invokevirtual #223
1053: ldc           #21
1055: invokevirtual #19
1058: getstatic     #381
1061: invokevirtual #223
1064: ldc           #18
1066: invokevirtual #19
1069: invokevirtual #22
1072: aload         53
1074: getstatic     #381
1077: invokevirtual #385
1080: invokestatic  #23
1083: aload         54
1085: invokestatic  #15
1088: aload         55
1090: invokestatic  #15
1093: return
Exception table:
from    to  target type
447   466   469   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test370
Start line: 19455
End line: 19466
Method source code: 
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("hi!:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>10:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1.0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>10:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html> :containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>-1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>#:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html> :containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>false:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>100.0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html> :containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>1:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>10.0:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>100:containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>0.0", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1049
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1017
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test371
Start line: 19469
End line: 19518
Method source code: 
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.select.Elements elements10 = document5.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str11 = document5.toString();
        org.jsoup.select.Elements elements12 = document5.children();
        org.jsoup.nodes.Element element13 = document5.parent();
        org.jsoup.nodes.Document document16 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element18 = document16.val("hi!");
        org.jsoup.nodes.Document document19 = document16.clone();
        org.jsoup.nodes.Document document20 = document16.clone();
        java.lang.String str21 = document16.nodeName();
        java.lang.String str23 = document16.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList24 = document16.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = document16.outputSettings();
        org.jsoup.nodes.Document document26 = document5.outputSettings(outputSettings25);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings25.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings25.prettyPrint(true);
        org.jsoup.nodes.Document.OutputSettings outputSettings31 = outputSettings25.prettyPrint(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = org.jsoup.Jsoup.clean("hi! <html> <head></head> <body></body> </html>", "[[1.0, 10,  , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]$=10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"]", whitelist2, outputSettings31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str11, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNull(element13);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#document" + "'", str21, "#document");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(dataNodeList24);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(outputSettings31);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1050
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload_2
49: iconst_m1
50: invokevirtual #162
53: astore        5
55: aload_2
56: invokevirtual #72
59: astore        6
61: aload_2
62: invokevirtual #999
65: astore        7
67: aload_2
68: invokevirtual #74
71: astore        8
73: ldc           #25
75: ldc           #25
77: invokestatic  #847
80: astore        9
82: aload         9
84: ldc           #12
86: invokevirtual #977
89: astore        10
91: aload         9
93: invokevirtual #154
96: astore        11
98: aload         9
100: invokevirtual #154
103: astore        12
105: aload         9
107: invokevirtual #220
110: astore        13
112: aload         9
114: ldc           #25
116: invokevirtual #176
119: astore        14
121: aload         9
123: invokevirtual #348
126: astore        15
128: aload         9
130: invokevirtual #30
133: astore        16
135: aload_2
136: aload         16
138: invokevirtual #175
141: astore        17
143: aload         16
145: invokevirtual #205
148: astore        18
150: aload         16
152: iconst_1
153: invokevirtual #31
156: astore        19
158: aload         16
160: iconst_0
161: invokevirtual #31
164: astore        20
166: ldc_w         #1001
169: ldc_w         #1051
172: aload_1
173: aload         20
175: invokestatic  #33
178: astore        21
180: ldc           #34
182: invokestatic  #35
185: goto          190
188: astore        21
190: aload_2
191: invokestatic  #15
194: aload_3
195: invokestatic  #15
198: aload         4
200: invokestatic  #15
203: aload         5
205: invokestatic  #15
208: new           #16
211: dup
212: invokespecial #17
215: ldc           #18
217: invokevirtual #19
220: aload         6
222: invokevirtual #19
225: ldc           #78
227: invokevirtual #19
230: invokevirtual #22
233: aload         6
235: ldc           #10
237: invokestatic  #68
240: aload         7
242: invokestatic  #15
245: aload         8
247: invokestatic  #79
250: aload         9
252: invokestatic  #15
255: aload         10
257: invokestatic  #15
260: aload         11
262: invokestatic  #15
265: aload         12
267: invokestatic  #15
270: new           #16
273: dup
274: invokespecial #17
277: ldc           #18
279: invokevirtual #19
282: aload         13
284: invokevirtual #19
287: ldc           #107
289: invokevirtual #19
292: invokevirtual #22
295: aload         13
297: ldc           #13
299: invokestatic  #68
302: new           #16
305: dup
306: invokespecial #17
309: ldc           #18
311: invokevirtual #19
314: aload         14
316: invokevirtual #19
319: ldc           #67
321: invokevirtual #19
324: invokevirtual #22
327: aload         14
329: ldc           #25
331: invokestatic  #68
334: aload         15
336: invokestatic  #15
339: aload         16
341: invokestatic  #15
344: aload         17
346: invokestatic  #15
349: aload         18
351: invokestatic  #15
354: aload         19
356: invokestatic  #15
359: aload         20
361: invokestatic  #15
364: return
Exception table:
from    to  target type
166   185   188   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test372
Start line: 19521
End line: 19608
Method source code: 
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.select.Elements elements10 = document5.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str11 = document5.toString();
        org.jsoup.select.Elements elements12 = document5.children();
        org.jsoup.nodes.Element element13 = document5.parent();
        org.jsoup.nodes.Document document16 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element18 = document16.val("hi!");
        org.jsoup.nodes.Document document19 = document16.clone();
        org.jsoup.nodes.Document document20 = document16.clone();
        java.lang.String str21 = document16.nodeName();
        java.lang.String str23 = document16.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList24 = document16.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings25 = document16.outputSettings();
        org.jsoup.nodes.Document document26 = document5.outputSettings(outputSettings25);
        org.jsoup.nodes.Document.OutputSettings outputSettings27 = outputSettings25.clone();
        org.jsoup.nodes.Document.OutputSettings outputSettings29 = outputSettings25.prettyPrint(true);
        org.jsoup.nodes.Document.OutputSettings outputSettings31 = outputSettings25.prettyPrint(false);
        org.jsoup.nodes.Document document34 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element36 = document34.val("hi!");
        org.jsoup.nodes.Document document37 = document34.clone();
        org.jsoup.select.Elements elements39 = document34.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str40 = document34.toString();
        org.jsoup.select.Elements elements41 = document34.children();
        org.jsoup.nodes.Element element42 = document34.parent();
        org.jsoup.nodes.Document document45 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element47 = document45.val("hi!");
        org.jsoup.nodes.Document document48 = document45.clone();
        org.jsoup.nodes.Document document49 = document45.clone();
        java.lang.String str50 = document45.nodeName();
        java.lang.String str52 = document45.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList53 = document45.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings54 = document45.outputSettings();
        org.jsoup.nodes.Document document55 = document34.outputSettings(outputSettings54);
        org.jsoup.nodes.Document.OutputSettings outputSettings56 = outputSettings54.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode57 = outputSettings54.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings58 = outputSettings25.escapeMode(escapeMode57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = org.jsoup.Jsoup.clean("[1.0, 10, , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]\n<html>\n <head></head>\n <body></body>\n</html>", "[[1.0, 10,  , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]]", whitelist2, outputSettings25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(elements10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str11, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNull(element13);
        org.junit.Assert.assertNotNull(document16);
        org.junit.Assert.assertNotNull(element18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertNotNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#document" + "'", str21, "#document");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(dataNodeList24);
        org.junit.Assert.assertNotNull(outputSettings25);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(outputSettings27);
        org.junit.Assert.assertNotNull(outputSettings29);
        org.junit.Assert.assertNotNull(outputSettings31);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(element36);
        org.junit.Assert.assertNotNull(document37);
        org.junit.Assert.assertNotNull(elements39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str40, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements41);
        org.junit.Assert.assertNull(element42);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(element47);
        org.junit.Assert.assertNotNull(document48);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#document" + "'", str50, "#document");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(dataNodeList53);
        org.junit.Assert.assertNotNull(outputSettings54);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertNotNull(outputSettings56);
        org.junit.Assert.assertTrue("'" + escapeMode57 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode57.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings58);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1052
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload_2
49: iconst_m1
50: invokevirtual #162
53: astore        5
55: aload_2
56: invokevirtual #72
59: astore        6
61: aload_2
62: invokevirtual #999
65: astore        7
67: aload_2
68: invokevirtual #74
71: astore        8
73: ldc           #25
75: ldc           #25
77: invokestatic  #847
80: astore        9
82: aload         9
84: ldc           #12
86: invokevirtual #977
89: astore        10
91: aload         9
93: invokevirtual #154
96: astore        11
98: aload         9
100: invokevirtual #154
103: astore        12
105: aload         9
107: invokevirtual #220
110: astore        13
112: aload         9
114: ldc           #25
116: invokevirtual #176
119: astore        14
121: aload         9
123: invokevirtual #348
126: astore        15
128: aload         9
130: invokevirtual #30
133: astore        16
135: aload_2
136: aload         16
138: invokevirtual #175
141: astore        17
143: aload         16
145: invokevirtual #205
148: astore        18
150: aload         16
152: iconst_1
153: invokevirtual #31
156: astore        19
158: aload         16
160: iconst_0
161: invokevirtual #31
164: astore        20
166: ldc           #25
168: ldc           #25
170: invokestatic  #847
173: astore        21
175: aload         21
177: ldc           #12
179: invokevirtual #977
182: astore        22
184: aload         21
186: invokevirtual #154
189: astore        23
191: aload         21
193: iconst_m1
194: invokevirtual #162
197: astore        24
199: aload         21
201: invokevirtual #72
204: astore        25
206: aload         21
208: invokevirtual #999
211: astore        26
213: aload         21
215: invokevirtual #74
218: astore        27
220: ldc           #25
222: ldc           #25
224: invokestatic  #847
227: astore        28
229: aload         28
231: ldc           #12
233: invokevirtual #977
236: astore        29
238: aload         28
240: invokevirtual #154
243: astore        30
245: aload         28
247: invokevirtual #154
250: astore        31
252: aload         28
254: invokevirtual #220
257: astore        32
259: aload         28
261: ldc           #25
263: invokevirtual #176
266: astore        33
268: aload         28
270: invokevirtual #348
273: astore        34
275: aload         28
277: invokevirtual #30
280: astore        35
282: aload         21
284: aload         35
286: invokevirtual #175
289: astore        36
291: aload         35
293: invokevirtual #205
296: astore        37
298: aload         35
300: invokevirtual #382
303: astore        38
305: aload         16
307: aload         38
309: invokevirtual #190
312: astore        39
314: ldc_w         #1053
317: ldc_w         #1054
320: aload_1
321: aload         16
323: invokestatic  #33
326: astore        40
328: ldc           #34
330: invokestatic  #35
333: goto          338
336: astore        40
338: aload_2
339: invokestatic  #15
342: aload_3
343: invokestatic  #15
346: aload         4
348: invokestatic  #15
351: aload         5
353: invokestatic  #15
356: new           #16
359: dup
360: invokespecial #17
363: ldc           #18
365: invokevirtual #19
368: aload         6
370: invokevirtual #19
373: ldc           #78
375: invokevirtual #19
378: invokevirtual #22
381: aload         6
383: ldc           #10
385: invokestatic  #68
388: aload         7
390: invokestatic  #15
393: aload         8
395: invokestatic  #79
398: aload         9
400: invokestatic  #15
403: aload         10
405: invokestatic  #15
408: aload         11
410: invokestatic  #15
413: aload         12
415: invokestatic  #15
418: new           #16
421: dup
422: invokespecial #17
425: ldc           #18
427: invokevirtual #19
430: aload         13
432: invokevirtual #19
435: ldc           #107
437: invokevirtual #19
440: invokevirtual #22
443: aload         13
445: ldc           #13
447: invokestatic  #68
450: new           #16
453: dup
454: invokespecial #17
457: ldc           #18
459: invokevirtual #19
462: aload         14
464: invokevirtual #19
467: ldc           #67
469: invokevirtual #19
472: invokevirtual #22
475: aload         14
477: ldc           #25
479: invokestatic  #68
482: aload         15
484: invokestatic  #15
487: aload         16
489: invokestatic  #15
492: aload         17
494: invokestatic  #15
497: aload         18
499: invokestatic  #15
502: aload         19
504: invokestatic  #15
507: aload         20
509: invokestatic  #15
512: aload         21
514: invokestatic  #15
517: aload         22
519: invokestatic  #15
522: aload         23
524: invokestatic  #15
527: aload         24
529: invokestatic  #15
532: new           #16
535: dup
536: invokespecial #17
539: ldc           #18
541: invokevirtual #19
544: aload         25
546: invokevirtual #19
549: ldc           #78
551: invokevirtual #19
554: invokevirtual #22
557: aload         25
559: ldc           #10
561: invokestatic  #68
564: aload         26
566: invokestatic  #15
569: aload         27
571: invokestatic  #79
574: aload         28
576: invokestatic  #15
579: aload         29
581: invokestatic  #15
584: aload         30
586: invokestatic  #15
589: aload         31
591: invokestatic  #15
594: new           #16
597: dup
598: invokespecial #17
601: ldc           #18
603: invokevirtual #19
606: aload         32
608: invokevirtual #19
611: ldc           #107
613: invokevirtual #19
616: invokevirtual #22
619: aload         32
621: ldc           #13
623: invokestatic  #68
626: new           #16
629: dup
630: invokespecial #17
633: ldc           #18
635: invokevirtual #19
638: aload         33
640: invokevirtual #19
643: ldc           #67
645: invokevirtual #19
648: invokevirtual #22
651: aload         33
653: ldc           #25
655: invokestatic  #68
658: aload         34
660: invokestatic  #15
663: aload         35
665: invokestatic  #15
668: aload         36
670: invokestatic  #15
673: aload         37
675: invokestatic  #15
678: new           #16
681: dup
682: invokespecial #17
685: ldc           #18
687: invokevirtual #19
690: aload         38
692: invokevirtual #223
695: ldc           #21
697: invokevirtual #19
700: getstatic     #381
703: invokevirtual #223
706: ldc           #18
708: invokevirtual #19
711: invokevirtual #22
714: aload         38
716: getstatic     #381
719: invokevirtual #385
722: invokestatic  #23
725: aload         39
727: invokestatic  #15
730: return
Exception table:
from    to  target type
314   333   336   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test373
Start line: 19611
End line: 19622
Method source code: 
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean(" data=\"\"", "data=\"\"=\"\"", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1055
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #971
30: ldc_w         #980
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test374
Start line: 19625
End line: 19636
Method source code: 
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean(":containsOwn(hi!\n<html>\n <head></head>\n <body></body>\n</html>", ":contains([hi!]", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1056
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #990
30: ldc_w         #1057
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test375
Start line: 19639
End line: 19650
Method source code: 
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("                       ", "[0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1058
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1018
30: ldc_w         #1059
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test376
Start line: 19653
End line: 19664
Method source code: 
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("<data=\"\" data=\"\">\n [10.0, 0, , -1, -1, -1, 10, -1.0, 1, 0, 10, , , -1, #, , false, 100.0, , 1, 10.0, 100, 0.0]\n</data=\"\">", ":gt(52)", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1060
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1061
30: ldc_w         #997
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test377
Start line: 19667
End line: 19678
Method source code: 
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("[10.0, 0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]", "[", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1062
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1045
30: ldc_w         #1033
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test378
Start line: 19681
End line: 19692
Method source code: 
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("1.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"10 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"  data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"-1 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"0.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"100 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\" data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"10.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"10.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"100 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"1.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"100 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"1.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"4 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"100 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"true data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"-1 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"100 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"100.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"1 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"10.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"10.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"-1 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"0.0 data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"null", ":containsOwn( text=\"\"", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1063
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1064
30: ldc_w         #1065
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test379
Start line: 19695
End line: 19706
Method source code: 
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("[[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]*=:containsown(hi!]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1066
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1027
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test380
Start line: 19709
End line: 19830
Method source code: 
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings24.prettyPrint(true);
        org.jsoup.nodes.Document document31 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element33 = document31.val("hi!");
        org.jsoup.nodes.Document document34 = document31.clone();
        org.jsoup.select.Elements elements36 = document31.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str37 = document31.toString();
        org.jsoup.select.Elements elements38 = document31.children();
        org.jsoup.nodes.Element element39 = document31.parent();
        org.jsoup.nodes.Document document42 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element44 = document42.val("hi!");
        org.jsoup.nodes.Document document45 = document42.clone();
        org.jsoup.nodes.Document document46 = document42.clone();
        java.lang.String str47 = document42.nodeName();
        java.lang.String str49 = document42.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList50 = document42.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document42.outputSettings();
        org.jsoup.nodes.Document document52 = document31.outputSettings(outputSettings51);
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings51.clone();
        org.jsoup.nodes.Document document56 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element58 = document56.val("hi!");
        org.jsoup.nodes.Document document59 = document56.clone();
        org.jsoup.select.Elements elements61 = document56.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str62 = document56.toString();
        org.jsoup.select.Elements elements63 = document56.children();
        org.jsoup.nodes.Element element64 = document56.parent();
        org.jsoup.nodes.Document document67 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element69 = document67.val("hi!");
        org.jsoup.nodes.Document document70 = document67.clone();
        org.jsoup.nodes.Document document71 = document67.clone();
        java.lang.String str72 = document67.nodeName();
        java.lang.String str74 = document67.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList75 = document67.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = document67.outputSettings();
        org.jsoup.nodes.Document document77 = document56.outputSettings(outputSettings76);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings76.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode79 = outputSettings76.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings51.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings81 = outputSettings24.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings82 = outputSettings81.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = org.jsoup.Jsoup.clean("", "[", whitelist2, outputSettings81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str37, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertNull(element39);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#document" + "'", str47, "#document");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(dataNodeList50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(elements61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str62, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements63);
        org.junit.Assert.assertNull(element64);
        org.junit.Assert.assertNotNull(document67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#document" + "'", str72, "#document");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(dataNodeList75);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(outputSettings78);
        org.junit.Assert.assertTrue("'" + escapeMode79 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode79.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertNotNull(outputSettings81);
        org.junit.Assert.assertNotNull(outputSettings82);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1067
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: aload         15
152: iconst_1
153: invokevirtual #31
156: astore        18
158: ldc           #25
160: ldc           #25
162: invokestatic  #847
165: astore        19
167: aload         19
169: ldc           #12
171: invokevirtual #977
174: astore        20
176: aload         19
178: invokevirtual #154
181: astore        21
183: aload         19
185: iconst_m1
186: invokevirtual #162
189: astore        22
191: aload         19
193: invokevirtual #72
196: astore        23
198: aload         19
200: invokevirtual #999
203: astore        24
205: aload         19
207: invokevirtual #74
210: astore        25
212: ldc           #25
214: ldc           #25
216: invokestatic  #847
219: astore        26
221: aload         26
223: ldc           #12
225: invokevirtual #977
228: astore        27
230: aload         26
232: invokevirtual #154
235: astore        28
237: aload         26
239: invokevirtual #154
242: astore        29
244: aload         26
246: invokevirtual #220
249: astore        30
251: aload         26
253: ldc           #25
255: invokevirtual #176
258: astore        31
260: aload         26
262: invokevirtual #348
265: astore        32
267: aload         26
269: invokevirtual #30
272: astore        33
274: aload         19
276: aload         33
278: invokevirtual #175
281: astore        34
283: aload         33
285: invokevirtual #205
288: astore        35
290: ldc           #25
292: ldc           #25
294: invokestatic  #847
297: astore        36
299: aload         36
301: ldc           #12
303: invokevirtual #977
306: astore        37
308: aload         36
310: invokevirtual #154
313: astore        38
315: aload         36
317: iconst_m1
318: invokevirtual #162
321: astore        39
323: aload         36
325: invokevirtual #72
328: astore        40
330: aload         36
332: invokevirtual #999
335: astore        41
337: aload         36
339: invokevirtual #74
342: astore        42
344: ldc           #25
346: ldc           #25
348: invokestatic  #847
351: astore        43
353: aload         43
355: ldc           #12
357: invokevirtual #977
360: astore        44
362: aload         43
364: invokevirtual #154
367: astore        45
369: aload         43
371: invokevirtual #154
374: astore        46
376: aload         43
378: invokevirtual #220
381: astore        47
383: aload         43
385: ldc           #25
387: invokevirtual #176
390: astore        48
392: aload         43
394: invokevirtual #348
397: astore        49
399: aload         43
401: invokevirtual #30
404: astore        50
406: aload         36
408: aload         50
410: invokevirtual #175
413: astore        51
415: aload         50
417: invokevirtual #205
420: astore        52
422: aload         50
424: invokevirtual #382
427: astore        53
429: aload         33
431: aload         53
433: invokevirtual #190
436: astore        54
438: aload         15
440: aload         53
442: invokevirtual #190
445: astore        55
447: aload         55
449: invokevirtual #205
452: astore        56
454: ldc           #25
456: ldc_w         #1033
459: aload_1
460: aload         55
462: invokestatic  #33
465: astore        57
467: ldc           #34
469: invokestatic  #35
472: goto          477
475: astore        57
477: aload_2
478: invokestatic  #15
481: aload_3
482: invokestatic  #15
485: aload         4
487: invokestatic  #15
490: new           #16
493: dup
494: invokespecial #17
497: ldc           #18
499: invokevirtual #19
502: aload         5
504: invokevirtual #19
507: ldc           #67
509: invokevirtual #19
512: invokevirtual #22
515: aload         5
517: ldc           #25
519: invokestatic  #68
522: new           #16
525: dup
526: invokespecial #17
529: ldc           #18
531: invokevirtual #19
534: aload         6
536: invokevirtual #19
539: ldc           #67
541: invokevirtual #19
544: invokevirtual #22
547: aload         6
549: ldc           #25
551: invokestatic  #68
554: aload         7
556: invokestatic  #15
559: aload         8
561: invokestatic  #15
564: aload         9
566: invokestatic  #15
569: aload         10
571: invokestatic  #15
574: aload         11
576: invokestatic  #15
579: new           #16
582: dup
583: invokespecial #17
586: ldc           #18
588: invokevirtual #19
591: aload         12
593: invokevirtual #19
596: ldc           #107
598: invokevirtual #19
601: invokevirtual #22
604: aload         12
606: ldc           #13
608: invokestatic  #68
611: new           #16
614: dup
615: invokespecial #17
618: ldc           #18
620: invokevirtual #19
623: aload         13
625: invokevirtual #19
628: ldc           #67
630: invokevirtual #19
633: invokevirtual #22
636: aload         13
638: ldc           #25
640: invokestatic  #68
643: aload         14
645: invokestatic  #15
648: aload         15
650: invokestatic  #15
653: aload         16
655: invokestatic  #15
658: new           #16
661: dup
662: invokespecial #17
665: ldc           #18
667: invokevirtual #19
670: aload         17
672: invokevirtual #223
675: ldc           #21
677: invokevirtual #19
680: getstatic     #381
683: invokevirtual #223
686: ldc           #18
688: invokevirtual #19
691: invokevirtual #22
694: aload         17
696: getstatic     #381
699: invokevirtual #385
702: invokestatic  #23
705: aload         18
707: invokestatic  #15
710: aload         19
712: invokestatic  #15
715: aload         20
717: invokestatic  #15
720: aload         21
722: invokestatic  #15
725: aload         22
727: invokestatic  #15
730: new           #16
733: dup
734: invokespecial #17
737: ldc           #18
739: invokevirtual #19
742: aload         23
744: invokevirtual #19
747: ldc           #78
749: invokevirtual #19
752: invokevirtual #22
755: aload         23
757: ldc           #10
759: invokestatic  #68
762: aload         24
764: invokestatic  #15
767: aload         25
769: invokestatic  #79
772: aload         26
774: invokestatic  #15
777: aload         27
779: invokestatic  #15
782: aload         28
784: invokestatic  #15
787: aload         29
789: invokestatic  #15
792: new           #16
795: dup
796: invokespecial #17
799: ldc           #18
801: invokevirtual #19
804: aload         30
806: invokevirtual #19
809: ldc           #107
811: invokevirtual #19
814: invokevirtual #22
817: aload         30
819: ldc           #13
821: invokestatic  #68
824: new           #16
827: dup
828: invokespecial #17
831: ldc           #18
833: invokevirtual #19
836: aload         31
838: invokevirtual #19
841: ldc           #67
843: invokevirtual #19
846: invokevirtual #22
849: aload         31
851: ldc           #25
853: invokestatic  #68
856: aload         32
858: invokestatic  #15
861: aload         33
863: invokestatic  #15
866: aload         34
868: invokestatic  #15
871: aload         35
873: invokestatic  #15
876: aload         36
878: invokestatic  #15
881: aload         37
883: invokestatic  #15
886: aload         38
888: invokestatic  #15
891: aload         39
893: invokestatic  #15
896: new           #16
899: dup
900: invokespecial #17
903: ldc           #18
905: invokevirtual #19
908: aload         40
910: invokevirtual #19
913: ldc           #78
915: invokevirtual #19
918: invokevirtual #22
921: aload         40
923: ldc           #10
925: invokestatic  #68
928: aload         41
930: invokestatic  #15
933: aload         42
935: invokestatic  #79
938: aload         43
940: invokestatic  #15
943: aload         44
945: invokestatic  #15
948: aload         45
950: invokestatic  #15
953: aload         46
955: invokestatic  #15
958: new           #16
961: dup
962: invokespecial #17
965: ldc           #18
967: invokevirtual #19
970: aload         47
972: invokevirtual #19
975: ldc           #107
977: invokevirtual #19
980: invokevirtual #22
983: aload         47
985: ldc           #13
987: invokestatic  #68
990: new           #16
993: dup
994: invokespecial #17
997: ldc           #18
999: invokevirtual #19
1002: aload         48
1004: invokevirtual #19
1007: ldc           #67
1009: invokevirtual #19
1012: invokevirtual #22
1015: aload         48
1017: ldc           #25
1019: invokestatic  #68
1022: aload         49
1024: invokestatic  #15
1027: aload         50
1029: invokestatic  #15
1032: aload         51
1034: invokestatic  #15
1037: aload         52
1039: invokestatic  #15
1042: new           #16
1045: dup
1046: invokespecial #17
1049: ldc           #18
1051: invokevirtual #19
1054: aload         53
1056: invokevirtual #223
1059: ldc           #21
1061: invokevirtual #19
1064: getstatic     #381
1067: invokevirtual #223
1070: ldc           #18
1072: invokevirtual #19
1075: invokevirtual #22
1078: aload         53
1080: getstatic     #381
1083: invokevirtual #385
1086: invokestatic  #23
1089: aload         54
1091: invokestatic  #15
1094: aload         55
1096: invokestatic  #15
1099: aload         56
1101: invokestatic  #15
1104: return
Exception table:
from    to  target type
454   472   475   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test381
Start line: 19833
End line: 19844
Method source code: 
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid(".hi! <html> <head></head> <body></body> </html>", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1068
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1048
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test382
Start line: 19847
End line: 19970
Method source code: 
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings24.prettyPrint(true);
        org.jsoup.nodes.Document document31 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element33 = document31.val("hi!");
        org.jsoup.nodes.Document document34 = document31.clone();
        org.jsoup.select.Elements elements36 = document31.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str37 = document31.toString();
        org.jsoup.select.Elements elements38 = document31.children();
        org.jsoup.nodes.Element element39 = document31.parent();
        org.jsoup.nodes.Document document42 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element44 = document42.val("hi!");
        org.jsoup.nodes.Document document45 = document42.clone();
        org.jsoup.nodes.Document document46 = document42.clone();
        java.lang.String str47 = document42.nodeName();
        java.lang.String str49 = document42.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList50 = document42.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document42.outputSettings();
        org.jsoup.nodes.Document document52 = document31.outputSettings(outputSettings51);
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings51.clone();
        org.jsoup.nodes.Document document56 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element58 = document56.val("hi!");
        org.jsoup.nodes.Document document59 = document56.clone();
        org.jsoup.select.Elements elements61 = document56.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str62 = document56.toString();
        org.jsoup.select.Elements elements63 = document56.children();
        org.jsoup.nodes.Element element64 = document56.parent();
        org.jsoup.nodes.Document document67 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element69 = document67.val("hi!");
        org.jsoup.nodes.Document document70 = document67.clone();
        org.jsoup.nodes.Document document71 = document67.clone();
        java.lang.String str72 = document67.nodeName();
        java.lang.String str74 = document67.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList75 = document67.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = document67.outputSettings();
        org.jsoup.nodes.Document document77 = document56.outputSettings(outputSettings76);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings76.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode79 = outputSettings76.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings51.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings81 = outputSettings24.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings83 = outputSettings81.indentAmount((int) (byte) 0);
        org.jsoup.nodes.Entities.EscapeMode escapeMode84 = outputSettings81.escapeMode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = org.jsoup.Jsoup.clean(":containsOwn( text=\"\"", "hi!\n&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;", whitelist2, outputSettings81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str37, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertNull(element39);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#document" + "'", str47, "#document");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(dataNodeList50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(elements61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str62, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements63);
        org.junit.Assert.assertNull(element64);
        org.junit.Assert.assertNotNull(document67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#document" + "'", str72, "#document");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(dataNodeList75);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(outputSettings78);
        org.junit.Assert.assertTrue("'" + escapeMode79 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode79.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertNotNull(outputSettings81);
        org.junit.Assert.assertNotNull(outputSettings83);
        org.junit.Assert.assertTrue("'" + escapeMode84 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode84.equals(org.jsoup.nodes.Entities.EscapeMode.base));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1069
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: aload         15
152: iconst_1
153: invokevirtual #31
156: astore        18
158: ldc           #25
160: ldc           #25
162: invokestatic  #847
165: astore        19
167: aload         19
169: ldc           #12
171: invokevirtual #977
174: astore        20
176: aload         19
178: invokevirtual #154
181: astore        21
183: aload         19
185: iconst_m1
186: invokevirtual #162
189: astore        22
191: aload         19
193: invokevirtual #72
196: astore        23
198: aload         19
200: invokevirtual #999
203: astore        24
205: aload         19
207: invokevirtual #74
210: astore        25
212: ldc           #25
214: ldc           #25
216: invokestatic  #847
219: astore        26
221: aload         26
223: ldc           #12
225: invokevirtual #977
228: astore        27
230: aload         26
232: invokevirtual #154
235: astore        28
237: aload         26
239: invokevirtual #154
242: astore        29
244: aload         26
246: invokevirtual #220
249: astore        30
251: aload         26
253: ldc           #25
255: invokevirtual #176
258: astore        31
260: aload         26
262: invokevirtual #348
265: astore        32
267: aload         26
269: invokevirtual #30
272: astore        33
274: aload         19
276: aload         33
278: invokevirtual #175
281: astore        34
283: aload         33
285: invokevirtual #205
288: astore        35
290: ldc           #25
292: ldc           #25
294: invokestatic  #847
297: astore        36
299: aload         36
301: ldc           #12
303: invokevirtual #977
306: astore        37
308: aload         36
310: invokevirtual #154
313: astore        38
315: aload         36
317: iconst_m1
318: invokevirtual #162
321: astore        39
323: aload         36
325: invokevirtual #72
328: astore        40
330: aload         36
332: invokevirtual #999
335: astore        41
337: aload         36
339: invokevirtual #74
342: astore        42
344: ldc           #25
346: ldc           #25
348: invokestatic  #847
351: astore        43
353: aload         43
355: ldc           #12
357: invokevirtual #977
360: astore        44
362: aload         43
364: invokevirtual #154
367: astore        45
369: aload         43
371: invokevirtual #154
374: astore        46
376: aload         43
378: invokevirtual #220
381: astore        47
383: aload         43
385: ldc           #25
387: invokevirtual #176
390: astore        48
392: aload         43
394: invokevirtual #348
397: astore        49
399: aload         43
401: invokevirtual #30
404: astore        50
406: aload         36
408: aload         50
410: invokevirtual #175
413: astore        51
415: aload         50
417: invokevirtual #205
420: astore        52
422: aload         50
424: invokevirtual #382
427: astore        53
429: aload         33
431: aload         53
433: invokevirtual #190
436: astore        54
438: aload         15
440: aload         53
442: invokevirtual #190
445: astore        55
447: aload         55
449: iconst_0
450: invokevirtual #189
453: astore        56
455: aload         55
457: invokevirtual #382
460: astore        57
462: ldc_w         #1065
465: ldc_w         #981
468: aload_1
469: aload         55
471: invokestatic  #33
474: astore        58
476: ldc           #34
478: invokestatic  #35
481: goto          486
484: astore        58
486: aload_2
487: invokestatic  #15
490: aload_3
491: invokestatic  #15
494: aload         4
496: invokestatic  #15
499: new           #16
502: dup
503: invokespecial #17
506: ldc           #18
508: invokevirtual #19
511: aload         5
513: invokevirtual #19
516: ldc           #67
518: invokevirtual #19
521: invokevirtual #22
524: aload         5
526: ldc           #25
528: invokestatic  #68
531: new           #16
534: dup
535: invokespecial #17
538: ldc           #18
540: invokevirtual #19
543: aload         6
545: invokevirtual #19
548: ldc           #67
550: invokevirtual #19
553: invokevirtual #22
556: aload         6
558: ldc           #25
560: invokestatic  #68
563: aload         7
565: invokestatic  #15
568: aload         8
570: invokestatic  #15
573: aload         9
575: invokestatic  #15
578: aload         10
580: invokestatic  #15
583: aload         11
585: invokestatic  #15
588: new           #16
591: dup
592: invokespecial #17
595: ldc           #18
597: invokevirtual #19
600: aload         12
602: invokevirtual #19
605: ldc           #107
607: invokevirtual #19
610: invokevirtual #22
613: aload         12
615: ldc           #13
617: invokestatic  #68
620: new           #16
623: dup
624: invokespecial #17
627: ldc           #18
629: invokevirtual #19
632: aload         13
634: invokevirtual #19
637: ldc           #67
639: invokevirtual #19
642: invokevirtual #22
645: aload         13
647: ldc           #25
649: invokestatic  #68
652: aload         14
654: invokestatic  #15
657: aload         15
659: invokestatic  #15
662: aload         16
664: invokestatic  #15
667: new           #16
670: dup
671: invokespecial #17
674: ldc           #18
676: invokevirtual #19
679: aload         17
681: invokevirtual #223
684: ldc           #21
686: invokevirtual #19
689: getstatic     #381
692: invokevirtual #223
695: ldc           #18
697: invokevirtual #19
700: invokevirtual #22
703: aload         17
705: getstatic     #381
708: invokevirtual #385
711: invokestatic  #23
714: aload         18
716: invokestatic  #15
719: aload         19
721: invokestatic  #15
724: aload         20
726: invokestatic  #15
729: aload         21
731: invokestatic  #15
734: aload         22
736: invokestatic  #15
739: new           #16
742: dup
743: invokespecial #17
746: ldc           #18
748: invokevirtual #19
751: aload         23
753: invokevirtual #19
756: ldc           #78
758: invokevirtual #19
761: invokevirtual #22
764: aload         23
766: ldc           #10
768: invokestatic  #68
771: aload         24
773: invokestatic  #15
776: aload         25
778: invokestatic  #79
781: aload         26
783: invokestatic  #15
786: aload         27
788: invokestatic  #15
791: aload         28
793: invokestatic  #15
796: aload         29
798: invokestatic  #15
801: new           #16
804: dup
805: invokespecial #17
808: ldc           #18
810: invokevirtual #19
813: aload         30
815: invokevirtual #19
818: ldc           #107
820: invokevirtual #19
823: invokevirtual #22
826: aload         30
828: ldc           #13
830: invokestatic  #68
833: new           #16
836: dup
837: invokespecial #17
840: ldc           #18
842: invokevirtual #19
845: aload         31
847: invokevirtual #19
850: ldc           #67
852: invokevirtual #19
855: invokevirtual #22
858: aload         31
860: ldc           #25
862: invokestatic  #68
865: aload         32
867: invokestatic  #15
870: aload         33
872: invokestatic  #15
875: aload         34
877: invokestatic  #15
880: aload         35
882: invokestatic  #15
885: aload         36
887: invokestatic  #15
890: aload         37
892: invokestatic  #15
895: aload         38
897: invokestatic  #15
900: aload         39
902: invokestatic  #15
905: new           #16
908: dup
909: invokespecial #17
912: ldc           #18
914: invokevirtual #19
917: aload         40
919: invokevirtual #19
922: ldc           #78
924: invokevirtual #19
927: invokevirtual #22
930: aload         40
932: ldc           #10
934: invokestatic  #68
937: aload         41
939: invokestatic  #15
942: aload         42
944: invokestatic  #79
947: aload         43
949: invokestatic  #15
952: aload         44
954: invokestatic  #15
957: aload         45
959: invokestatic  #15
962: aload         46
964: invokestatic  #15
967: new           #16
970: dup
971: invokespecial #17
974: ldc           #18
976: invokevirtual #19
979: aload         47
981: invokevirtual #19
984: ldc           #107
986: invokevirtual #19
989: invokevirtual #22
992: aload         47
994: ldc           #13
996: invokestatic  #68
999: new           #16
1002: dup
1003: invokespecial #17
1006: ldc           #18
1008: invokevirtual #19
1011: aload         48
1013: invokevirtual #19
1016: ldc           #67
1018: invokevirtual #19
1021: invokevirtual #22
1024: aload         48
1026: ldc           #25
1028: invokestatic  #68
1031: aload         49
1033: invokestatic  #15
1036: aload         50
1038: invokestatic  #15
1041: aload         51
1043: invokestatic  #15
1046: aload         52
1048: invokestatic  #15
1051: new           #16
1054: dup
1055: invokespecial #17
1058: ldc           #18
1060: invokevirtual #19
1063: aload         53
1065: invokevirtual #223
1068: ldc           #21
1070: invokevirtual #19
1073: getstatic     #381
1076: invokevirtual #223
1079: ldc           #18
1081: invokevirtual #19
1084: invokevirtual #22
1087: aload         53
1089: getstatic     #381
1092: invokevirtual #385
1095: invokestatic  #23
1098: aload         54
1100: invokestatic  #15
1103: aload         55
1105: invokestatic  #15
1108: aload         56
1110: invokestatic  #15
1113: new           #16
1116: dup
1117: invokespecial #17
1120: ldc           #18
1122: invokevirtual #19
1125: aload         57
1127: invokevirtual #223
1130: ldc           #21
1132: invokevirtual #19
1135: getstatic     #381
1138: invokevirtual #223
1141: ldc           #18
1143: invokevirtual #19
1146: invokevirtual #22
1149: aload         57
1151: getstatic     #381
1154: invokevirtual #385
1157: invokestatic  #23
1160: return
Exception table:
from    to  target type
462   481   484   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test383
Start line: 19973
End line: 20058
Method source code: 
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        org.jsoup.nodes.Entities.EscapeMode escapeMode27 = outputSettings24.escapeMode();
        org.jsoup.nodes.Document document30 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element32 = document30.val("hi!");
        org.jsoup.nodes.Document document33 = document30.clone();
        java.lang.String str34 = document33.ownText();
        java.lang.String str35 = document33.className();
        org.jsoup.select.Elements elements37 = document33.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document40 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element42 = document40.val("hi!");
        org.jsoup.nodes.Document document43 = document40.clone();
        org.jsoup.nodes.Document document44 = document40.clone();
        java.lang.String str45 = document40.nodeName();
        java.lang.String str47 = document40.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList48 = document40.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings49 = document40.outputSettings();
        org.jsoup.nodes.Document document50 = document33.outputSettings(outputSettings49);
        org.jsoup.nodes.Entities.EscapeMode escapeMode51 = outputSettings49.escapeMode();
        org.jsoup.nodes.Entities.EscapeMode escapeMode52 = outputSettings49.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings24.escapeMode(escapeMode52);
        int int54 = outputSettings24.indentAmount();
        boolean boolean55 = outputSettings24.prettyPrint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = org.jsoup.Jsoup.clean("[[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]]=\"[hi!]\"", "10.0[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"][[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]-1[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]-1[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]-1[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]10[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]-1.0[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]1[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]0[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]10[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"] [[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"][[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]-1[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]#[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"] [[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]false[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]100.0[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"] [[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]1[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]10.0[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]100[[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]!=data=\"\"]0.0", whitelist2, outputSettings24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + escapeMode27 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode27.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertNotNull(element32);
        org.junit.Assert.assertNotNull(document33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(elements37);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(document44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "#document" + "'", str45, "#document");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(dataNodeList48);
        org.junit.Assert.assertNotNull(outputSettings49);
        org.junit.Assert.assertNotNull(document50);
        org.junit.Assert.assertTrue("'" + escapeMode51 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode51.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertTrue("'" + escapeMode52 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode52.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1070
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: aload         15
152: invokevirtual #382
155: astore        18
157: ldc           #25
159: ldc           #25
161: invokestatic  #847
164: astore        19
166: aload         19
168: ldc           #12
170: invokevirtual #977
173: astore        20
175: aload         19
177: invokevirtual #154
180: astore        21
182: aload         21
184: invokevirtual #53
187: astore        22
189: aload         21
191: invokevirtual #978
194: astore        23
196: aload         21
198: ldc_w         #971
201: invokevirtual #62
204: astore        24
206: ldc           #25
208: ldc           #25
210: invokestatic  #847
213: astore        25
215: aload         25
217: ldc           #12
219: invokevirtual #977
222: astore        26
224: aload         25
226: invokevirtual #154
229: astore        27
231: aload         25
233: invokevirtual #154
236: astore        28
238: aload         25
240: invokevirtual #220
243: astore        29
245: aload         25
247: ldc           #25
249: invokevirtual #176
252: astore        30
254: aload         25
256: invokevirtual #348
259: astore        31
261: aload         25
263: invokevirtual #30
266: astore        32
268: aload         21
270: aload         32
272: invokevirtual #175
275: astore        33
277: aload         32
279: invokevirtual #382
282: astore        34
284: aload         32
286: invokevirtual #382
289: astore        35
291: aload         15
293: aload         35
295: invokevirtual #190
298: astore        36
300: aload         15
302: invokevirtual #296
305: istore        37
307: aload         15
309: invokevirtual #461
312: istore        38
314: ldc_w         #1071
317: ldc_w         #1072
320: aload_1
321: aload         15
323: invokestatic  #33
326: astore        39
328: ldc           #34
330: invokestatic  #35
333: goto          338
336: astore        39
338: aload_2
339: invokestatic  #15
342: aload_3
343: invokestatic  #15
346: aload         4
348: invokestatic  #15
351: new           #16
354: dup
355: invokespecial #17
358: ldc           #18
360: invokevirtual #19
363: aload         5
365: invokevirtual #19
368: ldc           #67
370: invokevirtual #19
373: invokevirtual #22
376: aload         5
378: ldc           #25
380: invokestatic  #68
383: new           #16
386: dup
387: invokespecial #17
390: ldc           #18
392: invokevirtual #19
395: aload         6
397: invokevirtual #19
400: ldc           #67
402: invokevirtual #19
405: invokevirtual #22
408: aload         6
410: ldc           #25
412: invokestatic  #68
415: aload         7
417: invokestatic  #15
420: aload         8
422: invokestatic  #15
425: aload         9
427: invokestatic  #15
430: aload         10
432: invokestatic  #15
435: aload         11
437: invokestatic  #15
440: new           #16
443: dup
444: invokespecial #17
447: ldc           #18
449: invokevirtual #19
452: aload         12
454: invokevirtual #19
457: ldc           #107
459: invokevirtual #19
462: invokevirtual #22
465: aload         12
467: ldc           #13
469: invokestatic  #68
472: new           #16
475: dup
476: invokespecial #17
479: ldc           #18
481: invokevirtual #19
484: aload         13
486: invokevirtual #19
489: ldc           #67
491: invokevirtual #19
494: invokevirtual #22
497: aload         13
499: ldc           #25
501: invokestatic  #68
504: aload         14
506: invokestatic  #15
509: aload         15
511: invokestatic  #15
514: aload         16
516: invokestatic  #15
519: new           #16
522: dup
523: invokespecial #17
526: ldc           #18
528: invokevirtual #19
531: aload         17
533: invokevirtual #223
536: ldc           #21
538: invokevirtual #19
541: getstatic     #381
544: invokevirtual #223
547: ldc           #18
549: invokevirtual #19
552: invokevirtual #22
555: aload         17
557: getstatic     #381
560: invokevirtual #385
563: invokestatic  #23
566: new           #16
569: dup
570: invokespecial #17
573: ldc           #18
575: invokevirtual #19
578: aload         18
580: invokevirtual #223
583: ldc           #21
585: invokevirtual #19
588: getstatic     #381
591: invokevirtual #223
594: ldc           #18
596: invokevirtual #19
599: invokevirtual #22
602: aload         18
604: getstatic     #381
607: invokevirtual #385
610: invokestatic  #23
613: aload         19
615: invokestatic  #15
618: aload         20
620: invokestatic  #15
623: aload         21
625: invokestatic  #15
628: new           #16
631: dup
632: invokespecial #17
635: ldc           #18
637: invokevirtual #19
640: aload         22
642: invokevirtual #19
645: ldc           #67
647: invokevirtual #19
650: invokevirtual #22
653: aload         22
655: ldc           #25
657: invokestatic  #68
660: new           #16
663: dup
664: invokespecial #17
667: ldc           #18
669: invokevirtual #19
672: aload         23
674: invokevirtual #19
677: ldc           #67
679: invokevirtual #19
682: invokevirtual #22
685: aload         23
687: ldc           #25
689: invokestatic  #68
692: aload         24
694: invokestatic  #15
697: aload         25
699: invokestatic  #15
702: aload         26
704: invokestatic  #15
707: aload         27
709: invokestatic  #15
712: aload         28
714: invokestatic  #15
717: new           #16
720: dup
721: invokespecial #17
724: ldc           #18
726: invokevirtual #19
729: aload         29
731: invokevirtual #19
734: ldc           #107
736: invokevirtual #19
739: invokevirtual #22
742: aload         29
744: ldc           #13
746: invokestatic  #68
749: new           #16
752: dup
753: invokespecial #17
756: ldc           #18
758: invokevirtual #19
761: aload         30
763: invokevirtual #19
766: ldc           #67
768: invokevirtual #19
771: invokevirtual #22
774: aload         30
776: ldc           #25
778: invokestatic  #68
781: aload         31
783: invokestatic  #15
786: aload         32
788: invokestatic  #15
791: aload         33
793: invokestatic  #15
796: new           #16
799: dup
800: invokespecial #17
803: ldc           #18
805: invokevirtual #19
808: aload         34
810: invokevirtual #223
813: ldc           #21
815: invokevirtual #19
818: getstatic     #381
821: invokevirtual #223
824: ldc           #18
826: invokevirtual #19
829: invokevirtual #22
832: aload         34
834: getstatic     #381
837: invokevirtual #385
840: invokestatic  #23
843: new           #16
846: dup
847: invokespecial #17
850: ldc           #18
852: invokevirtual #19
855: aload         35
857: invokevirtual #223
860: ldc           #21
862: invokevirtual #19
865: getstatic     #381
868: invokevirtual #223
871: ldc           #18
873: invokevirtual #19
876: invokevirtual #22
879: aload         35
881: getstatic     #381
884: invokevirtual #385
887: invokestatic  #23
890: aload         36
892: invokestatic  #15
895: new           #16
898: dup
899: invokespecial #17
902: ldc           #18
904: invokevirtual #19
907: iload         37
909: invokevirtual #134
912: ldc           #21
914: invokevirtual #19
917: iconst_1
918: invokevirtual #134
921: ldc           #18
923: invokevirtual #19
926: invokevirtual #22
929: iload         37
931: iconst_1
932: if_icmpne     939
935: iconst_1
936: goto          940
939: iconst_0
940: invokestatic  #23
943: new           #16
946: dup
947: invokespecial #17
950: ldc           #18
952: invokevirtual #19
955: iload         38
957: invokevirtual #20
960: ldc           #21
962: invokevirtual #19
965: iconst_1
966: invokevirtual #20
969: ldc           #18
971: invokevirtual #19
974: invokevirtual #22
977: iload         38
979: iconst_1
980: if_icmpne     987
983: iconst_1
984: goto          988
987: iconst_0
988: invokestatic  #23
991: return
Exception table:
from    to  target type
314   333   336   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test384
Start line: 20061
End line: 20160
Method source code: 
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        org.jsoup.nodes.Document document9 = document5.clone();
        java.util.List<org.jsoup.nodes.TextNode> textNodeList10 = document9.textNodes();
        org.jsoup.nodes.Element element12 = document9.getElementById(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.select.Elements elements20 = document15.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str21 = document15.toString();
        org.jsoup.select.Elements elements22 = document15.children();
        org.jsoup.nodes.Element element23 = document15.parent();
        org.jsoup.nodes.Document document26 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element28 = document26.val("hi!");
        org.jsoup.nodes.Document document29 = document26.clone();
        org.jsoup.nodes.Document document30 = document26.clone();
        java.lang.String str31 = document26.nodeName();
        java.lang.String str33 = document26.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList34 = document26.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings35 = document26.outputSettings();
        org.jsoup.nodes.Document document36 = document15.outputSettings(outputSettings35);
        org.jsoup.nodes.Document.OutputSettings outputSettings37 = outputSettings35.clone();
        org.jsoup.nodes.Document document40 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element42 = document40.val("hi!");
        org.jsoup.nodes.Document document43 = document40.clone();
        org.jsoup.select.Elements elements45 = document40.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str46 = document40.toString();
        org.jsoup.select.Elements elements47 = document40.children();
        org.jsoup.nodes.Element element48 = document40.parent();
        org.jsoup.nodes.Document document51 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element53 = document51.val("hi!");
        org.jsoup.nodes.Document document54 = document51.clone();
        org.jsoup.nodes.Document document55 = document51.clone();
        java.lang.String str56 = document51.nodeName();
        java.lang.String str58 = document51.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList59 = document51.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings60 = document51.outputSettings();
        org.jsoup.nodes.Document document61 = document40.outputSettings(outputSettings60);
        org.jsoup.nodes.Document.OutputSettings outputSettings62 = outputSettings60.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode63 = outputSettings60.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings64 = outputSettings35.escapeMode(escapeMode63);
        java.nio.charset.Charset charset65 = outputSettings35.charset();
        org.jsoup.nodes.Document document66 = document9.outputSettings(outputSettings35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = org.jsoup.Jsoup.clean("[hi!]10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"", ":eq(10)\n<html>\n <head></head>\n <body></body>\n</html>", whitelist2, outputSettings35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertNotNull(document9);
        org.junit.Assert.assertNotNull(textNodeList10);
        org.junit.Assert.assertNull(element12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(elements20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str21, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements22);
        org.junit.Assert.assertNull(element23);
        org.junit.Assert.assertNotNull(document26);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(document29);
        org.junit.Assert.assertNotNull(document30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#document" + "'", str31, "#document");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(dataNodeList34);
        org.junit.Assert.assertNotNull(outputSettings35);
        org.junit.Assert.assertNotNull(document36);
        org.junit.Assert.assertNotNull(outputSettings37);
        org.junit.Assert.assertNotNull(document40);
        org.junit.Assert.assertNotNull(element42);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertNotNull(elements45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str46, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements47);
        org.junit.Assert.assertNull(element48);
        org.junit.Assert.assertNotNull(document51);
        org.junit.Assert.assertNotNull(element53);
        org.junit.Assert.assertNotNull(document54);
        org.junit.Assert.assertNotNull(document55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "#document" + "'", str56, "#document");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(dataNodeList59);
        org.junit.Assert.assertNotNull(outputSettings60);
        org.junit.Assert.assertNotNull(document61);
        org.junit.Assert.assertNotNull(outputSettings62);
        org.junit.Assert.assertTrue("'" + escapeMode63 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode63.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings64);
        org.junit.Assert.assertNotNull(charset65);
        org.junit.Assert.assertNotNull(document66);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1073
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload_2
49: invokevirtual #154
52: astore        5
54: aload         5
56: invokevirtual #1074
59: astore        6
61: aload         5
63: ldc_w         #971
66: invokevirtual #163
69: astore        7
71: ldc           #25
73: ldc           #25
75: invokestatic  #847
78: astore        8
80: aload         8
82: ldc           #12
84: invokevirtual #977
87: astore        9
89: aload         8
91: invokevirtual #154
94: astore        10
96: aload         8
98: iconst_m1
99: invokevirtual #162
102: astore        11
104: aload         8
106: invokevirtual #72
109: astore        12
111: aload         8
113: invokevirtual #999
116: astore        13
118: aload         8
120: invokevirtual #74
123: astore        14
125: ldc           #25
127: ldc           #25
129: invokestatic  #847
132: astore        15
134: aload         15
136: ldc           #12
138: invokevirtual #977
141: astore        16
143: aload         15
145: invokevirtual #154
148: astore        17
150: aload         15
152: invokevirtual #154
155: astore        18
157: aload         15
159: invokevirtual #220
162: astore        19
164: aload         15
166: ldc           #25
168: invokevirtual #176
171: astore        20
173: aload         15
175: invokevirtual #348
178: astore        21
180: aload         15
182: invokevirtual #30
185: astore        22
187: aload         8
189: aload         22
191: invokevirtual #175
194: astore        23
196: aload         22
198: invokevirtual #205
201: astore        24
203: ldc           #25
205: ldc           #25
207: invokestatic  #847
210: astore        25
212: aload         25
214: ldc           #12
216: invokevirtual #977
219: astore        26
221: aload         25
223: invokevirtual #154
226: astore        27
228: aload         25
230: iconst_m1
231: invokevirtual #162
234: astore        28
236: aload         25
238: invokevirtual #72
241: astore        29
243: aload         25
245: invokevirtual #999
248: astore        30
250: aload         25
252: invokevirtual #74
255: astore        31
257: ldc           #25
259: ldc           #25
261: invokestatic  #847
264: astore        32
266: aload         32
268: ldc           #12
270: invokevirtual #977
273: astore        33
275: aload         32
277: invokevirtual #154
280: astore        34
282: aload         32
284: invokevirtual #154
287: astore        35
289: aload         32
291: invokevirtual #220
294: astore        36
296: aload         32
298: ldc           #25
300: invokevirtual #176
303: astore        37
305: aload         32
307: invokevirtual #348
310: astore        38
312: aload         32
314: invokevirtual #30
317: astore        39
319: aload         25
321: aload         39
323: invokevirtual #175
326: astore        40
328: aload         39
330: invokevirtual #205
333: astore        41
335: aload         39
337: invokevirtual #382
340: astore        42
342: aload         22
344: aload         42
346: invokevirtual #190
349: astore        43
351: aload         22
353: invokevirtual #460
356: astore        44
358: aload         5
360: aload         22
362: invokevirtual #175
365: astore        45
367: ldc_w         #1075
370: ldc_w         #1076
373: aload_1
374: aload         22
376: invokestatic  #33
379: astore        46
381: ldc           #34
383: invokestatic  #35
386: goto          391
389: astore        46
391: aload_2
392: invokestatic  #15
395: aload_3
396: invokestatic  #15
399: aload         4
401: invokestatic  #15
404: aload         5
406: invokestatic  #15
409: aload         6
411: invokestatic  #15
414: aload         7
416: invokestatic  #79
419: aload         8
421: invokestatic  #15
424: aload         9
426: invokestatic  #15
429: aload         10
431: invokestatic  #15
434: aload         11
436: invokestatic  #15
439: new           #16
442: dup
443: invokespecial #17
446: ldc           #18
448: invokevirtual #19
451: aload         12
453: invokevirtual #19
456: ldc           #78
458: invokevirtual #19
461: invokevirtual #22
464: aload         12
466: ldc           #10
468: invokestatic  #68
471: aload         13
473: invokestatic  #15
476: aload         14
478: invokestatic  #79
481: aload         15
483: invokestatic  #15
486: aload         16
488: invokestatic  #15
491: aload         17
493: invokestatic  #15
496: aload         18
498: invokestatic  #15
501: new           #16
504: dup
505: invokespecial #17
508: ldc           #18
510: invokevirtual #19
513: aload         19
515: invokevirtual #19
518: ldc           #107
520: invokevirtual #19
523: invokevirtual #22
526: aload         19
528: ldc           #13
530: invokestatic  #68
533: new           #16
536: dup
537: invokespecial #17
540: ldc           #18
542: invokevirtual #19
545: aload         20
547: invokevirtual #19
550: ldc           #67
552: invokevirtual #19
555: invokevirtual #22
558: aload         20
560: ldc           #25
562: invokestatic  #68
565: aload         21
567: invokestatic  #15
570: aload         22
572: invokestatic  #15
575: aload         23
577: invokestatic  #15
580: aload         24
582: invokestatic  #15
585: aload         25
587: invokestatic  #15
590: aload         26
592: invokestatic  #15
595: aload         27
597: invokestatic  #15
600: aload         28
602: invokestatic  #15
605: new           #16
608: dup
609: invokespecial #17
612: ldc           #18
614: invokevirtual #19
617: aload         29
619: invokevirtual #19
622: ldc           #78
624: invokevirtual #19
627: invokevirtual #22
630: aload         29
632: ldc           #10
634: invokestatic  #68
637: aload         30
639: invokestatic  #15
642: aload         31
644: invokestatic  #79
647: aload         32
649: invokestatic  #15
652: aload         33
654: invokestatic  #15
657: aload         34
659: invokestatic  #15
662: aload         35
664: invokestatic  #15
667: new           #16
670: dup
671: invokespecial #17
674: ldc           #18
676: invokevirtual #19
679: aload         36
681: invokevirtual #19
684: ldc           #107
686: invokevirtual #19
689: invokevirtual #22
692: aload         36
694: ldc           #13
696: invokestatic  #68
699: new           #16
702: dup
703: invokespecial #17
706: ldc           #18
708: invokevirtual #19
711: aload         37
713: invokevirtual #19
716: ldc           #67
718: invokevirtual #19
721: invokevirtual #22
724: aload         37
726: ldc           #25
728: invokestatic  #68
731: aload         38
733: invokestatic  #15
736: aload         39
738: invokestatic  #15
741: aload         40
743: invokestatic  #15
746: aload         41
748: invokestatic  #15
751: new           #16
754: dup
755: invokespecial #17
758: ldc           #18
760: invokevirtual #19
763: aload         42
765: invokevirtual #223
768: ldc           #21
770: invokevirtual #19
773: getstatic     #381
776: invokevirtual #223
779: ldc           #18
781: invokevirtual #19
784: invokevirtual #22
787: aload         42
789: getstatic     #381
792: invokevirtual #385
795: invokestatic  #23
798: aload         43
800: invokestatic  #15
803: aload         44
805: invokestatic  #15
808: aload         45
810: invokestatic  #15
813: return
Exception table:
from    to  target type
367   386   389   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test385
Start line: 20163
End line: 20174
Method source code: 
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("<[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]></[10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]>\n<html>\n <head></head>\n <body></body>\n</html>", "text=\"\"", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1077
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1078
30: ldc_w         #1028
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test386
Start line: 20177
End line: 20188
Method source code: 
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean(":eq(26)", "hi! data=&quot;&quot;", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1079
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1080
30: ldc_w         #1081
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test387
Start line: 20191
End line: 20202
Method source code: 
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("<html>\n <head></head>\n <body>\n   text=&quot;&quot;\n </body>\n</html>", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1082
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1083
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test388
Start line: 20205
End line: 20216
Method source code: 
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("1.010 -10.010010.010.01001.01001.0400100true-1100100.00110.010.0-10.0null", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1084
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1046
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test389
Start line: 20219
End line: 20230
Method source code: 
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("[data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"$=data=\"\" data=\"\"=\"\"]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1085
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1086
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test390
Start line: 20233
End line: 20244
Method source code: 
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean(".10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1087
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1041
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test391
Start line: 20247
End line: 20258
Method source code: 
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("[10.0, 0, , -1, -1, -1, 10, -1.0, 1, 0, 10, , , -1, #, , false, 100.0, , 1, 10.0, 100, 0.0]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1088
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1089
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test392
Start line: 20261
End line: 20272
Method source code: 
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("text=\"\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1090
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1028
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test393
Start line: 20275
End line: 20286
Method source code: 
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("[[[data=\"\"=[hi!]]^=hi!]!=hi!\n<html>\n <head></head>\n <body></body>\n</html>]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1091
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1092
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test394
Start line: 20289
End line: 20372
Method source code: 
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Document document28 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element30 = document28.val("hi!");
        org.jsoup.nodes.Document document31 = document28.clone();
        org.jsoup.select.Elements elements33 = document28.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str34 = document28.toString();
        org.jsoup.select.Elements elements35 = document28.children();
        org.jsoup.nodes.Element element36 = document28.parent();
        org.jsoup.nodes.Document document39 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element41 = document39.val("hi!");
        org.jsoup.nodes.Document document42 = document39.clone();
        org.jsoup.nodes.Document document43 = document39.clone();
        java.lang.String str44 = document39.nodeName();
        java.lang.String str46 = document39.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList47 = document39.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings48 = document39.outputSettings();
        org.jsoup.nodes.Document document49 = document28.outputSettings(outputSettings48);
        org.jsoup.nodes.Document.OutputSettings outputSettings50 = outputSettings48.clone();
        java.nio.charset.Charset charset51 = outputSettings48.charset();
        java.nio.charset.Charset charset52 = outputSettings48.charset();
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings24.charset(charset52);
        boolean boolean54 = outputSettings24.prettyPrint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = org.jsoup.Jsoup.clean("[data=\"\"=[hi!]]", "<!-- data=\"\"-->=\"[data=&quot;&quot;=[hi!]]\"", whitelist2, outputSettings24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertNotNull(document28);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(elements33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str34, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements35);
        org.junit.Assert.assertNull(element36);
        org.junit.Assert.assertNotNull(document39);
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(document43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#document" + "'", str44, "#document");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(dataNodeList47);
        org.junit.Assert.assertNotNull(outputSettings48);
        org.junit.Assert.assertNotNull(document49);
        org.junit.Assert.assertNotNull(outputSettings50);
        org.junit.Assert.assertNotNull(charset51);
        org.junit.Assert.assertNotNull(charset52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1093
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: ldc           #25
145: ldc           #25
147: invokestatic  #847
150: astore        17
152: aload         17
154: ldc           #12
156: invokevirtual #977
159: astore        18
161: aload         17
163: invokevirtual #154
166: astore        19
168: aload         17
170: iconst_m1
171: invokevirtual #162
174: astore        20
176: aload         17
178: invokevirtual #72
181: astore        21
183: aload         17
185: invokevirtual #999
188: astore        22
190: aload         17
192: invokevirtual #74
195: astore        23
197: ldc           #25
199: ldc           #25
201: invokestatic  #847
204: astore        24
206: aload         24
208: ldc           #12
210: invokevirtual #977
213: astore        25
215: aload         24
217: invokevirtual #154
220: astore        26
222: aload         24
224: invokevirtual #154
227: astore        27
229: aload         24
231: invokevirtual #220
234: astore        28
236: aload         24
238: ldc           #25
240: invokevirtual #176
243: astore        29
245: aload         24
247: invokevirtual #348
250: astore        30
252: aload         24
254: invokevirtual #30
257: astore        31
259: aload         17
261: aload         31
263: invokevirtual #175
266: astore        32
268: aload         31
270: invokevirtual #205
273: astore        33
275: aload         31
277: invokevirtual #460
280: astore        34
282: aload         31
284: invokevirtual #460
287: astore        35
289: aload         15
291: aload         35
293: invokevirtual #718
296: astore        36
298: aload         15
300: invokevirtual #461
303: istore        37
305: ldc_w         #975
308: ldc_w         #1094
311: aload_1
312: aload         15
314: invokestatic  #33
317: astore        38
319: ldc           #34
321: invokestatic  #35
324: goto          329
327: astore        38
329: aload_2
330: invokestatic  #15
333: aload_3
334: invokestatic  #15
337: aload         4
339: invokestatic  #15
342: new           #16
345: dup
346: invokespecial #17
349: ldc           #18
351: invokevirtual #19
354: aload         5
356: invokevirtual #19
359: ldc           #67
361: invokevirtual #19
364: invokevirtual #22
367: aload         5
369: ldc           #25
371: invokestatic  #68
374: new           #16
377: dup
378: invokespecial #17
381: ldc           #18
383: invokevirtual #19
386: aload         6
388: invokevirtual #19
391: ldc           #67
393: invokevirtual #19
396: invokevirtual #22
399: aload         6
401: ldc           #25
403: invokestatic  #68
406: aload         7
408: invokestatic  #15
411: aload         8
413: invokestatic  #15
416: aload         9
418: invokestatic  #15
421: aload         10
423: invokestatic  #15
426: aload         11
428: invokestatic  #15
431: new           #16
434: dup
435: invokespecial #17
438: ldc           #18
440: invokevirtual #19
443: aload         12
445: invokevirtual #19
448: ldc           #107
450: invokevirtual #19
453: invokevirtual #22
456: aload         12
458: ldc           #13
460: invokestatic  #68
463: new           #16
466: dup
467: invokespecial #17
470: ldc           #18
472: invokevirtual #19
475: aload         13
477: invokevirtual #19
480: ldc           #67
482: invokevirtual #19
485: invokevirtual #22
488: aload         13
490: ldc           #25
492: invokestatic  #68
495: aload         14
497: invokestatic  #15
500: aload         15
502: invokestatic  #15
505: aload         16
507: invokestatic  #15
510: aload         17
512: invokestatic  #15
515: aload         18
517: invokestatic  #15
520: aload         19
522: invokestatic  #15
525: aload         20
527: invokestatic  #15
530: new           #16
533: dup
534: invokespecial #17
537: ldc           #18
539: invokevirtual #19
542: aload         21
544: invokevirtual #19
547: ldc           #78
549: invokevirtual #19
552: invokevirtual #22
555: aload         21
557: ldc           #10
559: invokestatic  #68
562: aload         22
564: invokestatic  #15
567: aload         23
569: invokestatic  #79
572: aload         24
574: invokestatic  #15
577: aload         25
579: invokestatic  #15
582: aload         26
584: invokestatic  #15
587: aload         27
589: invokestatic  #15
592: new           #16
595: dup
596: invokespecial #17
599: ldc           #18
601: invokevirtual #19
604: aload         28
606: invokevirtual #19
609: ldc           #107
611: invokevirtual #19
614: invokevirtual #22
617: aload         28
619: ldc           #13
621: invokestatic  #68
624: new           #16
627: dup
628: invokespecial #17
631: ldc           #18
633: invokevirtual #19
636: aload         29
638: invokevirtual #19
641: ldc           #67
643: invokevirtual #19
646: invokevirtual #22
649: aload         29
651: ldc           #25
653: invokestatic  #68
656: aload         30
658: invokestatic  #15
661: aload         31
663: invokestatic  #15
666: aload         32
668: invokestatic  #15
671: aload         33
673: invokestatic  #15
676: aload         34
678: invokestatic  #15
681: aload         35
683: invokestatic  #15
686: aload         36
688: invokestatic  #15
691: new           #16
694: dup
695: invokespecial #17
698: ldc           #18
700: invokevirtual #19
703: iload         37
705: invokevirtual #20
708: ldc           #21
710: invokevirtual #19
713: iconst_1
714: invokevirtual #20
717: ldc           #18
719: invokevirtual #19
722: invokevirtual #22
725: iload         37
727: iconst_1
728: if_icmpne     735
731: iconst_1
732: goto          736
735: iconst_0
736: invokestatic  #23
739: return
Exception table:
from    to  target type
305   324   327   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test395
Start line: 20375
End line: 20386
Method source code: 
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("text=\"\"", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1095
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1028
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test396
Start line: 20389
End line: 20400
Method source code: 
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean(".data=\"\"=\"[hi!]\"", " data=\"\" hi!=\"\" text=\"\"=\"data=\"\"=\"\"\"", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1096
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1003
30: ldc_w         #1097
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test397
Start line: 20403
End line: 20414
Method source code: 
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid("<10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"></10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\">\n<html>\n <head></head>\n <body></body>\n</html>", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1098
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1011
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test398
Start line: 20417
End line: 20542
Method source code: 
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings24.prettyPrint(true);
        org.jsoup.nodes.Document document31 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element33 = document31.val("hi!");
        org.jsoup.nodes.Document document34 = document31.clone();
        org.jsoup.select.Elements elements36 = document31.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str37 = document31.toString();
        org.jsoup.select.Elements elements38 = document31.children();
        org.jsoup.nodes.Element element39 = document31.parent();
        org.jsoup.nodes.Document document42 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element44 = document42.val("hi!");
        org.jsoup.nodes.Document document45 = document42.clone();
        org.jsoup.nodes.Document document46 = document42.clone();
        java.lang.String str47 = document42.nodeName();
        java.lang.String str49 = document42.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList50 = document42.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document42.outputSettings();
        org.jsoup.nodes.Document document52 = document31.outputSettings(outputSettings51);
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings51.clone();
        org.jsoup.nodes.Document document56 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element58 = document56.val("hi!");
        org.jsoup.nodes.Document document59 = document56.clone();
        org.jsoup.select.Elements elements61 = document56.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str62 = document56.toString();
        org.jsoup.select.Elements elements63 = document56.children();
        org.jsoup.nodes.Element element64 = document56.parent();
        org.jsoup.nodes.Document document67 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element69 = document67.val("hi!");
        org.jsoup.nodes.Document document70 = document67.clone();
        org.jsoup.nodes.Document document71 = document67.clone();
        java.lang.String str72 = document67.nodeName();
        java.lang.String str74 = document67.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList75 = document67.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings76 = document67.outputSettings();
        org.jsoup.nodes.Document document77 = document56.outputSettings(outputSettings76);
        org.jsoup.nodes.Document.OutputSettings outputSettings78 = outputSettings76.clone();
        org.jsoup.nodes.Entities.EscapeMode escapeMode79 = outputSettings76.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings80 = outputSettings51.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings81 = outputSettings24.escapeMode(escapeMode79);
        org.jsoup.nodes.Document.OutputSettings outputSettings83 = outputSettings81.indentAmount((int) (byte) 0);
        org.jsoup.nodes.Document.OutputSettings outputSettings85 = outputSettings83.prettyPrint(false);
        org.jsoup.nodes.Document.OutputSettings outputSettings87 = outputSettings83.indentAmount((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = org.jsoup.Jsoup.clean("[[[1.0, 10,  , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]]^=data=\"\" hi!=\"\" text=\"\"=\"data=&quot;&quot;=&quot;&quot;\"]", ":contains([hi!]10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"", whitelist2, outputSettings87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str37, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertNull(element39);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#document" + "'", str47, "#document");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(dataNodeList50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(document56);
        org.junit.Assert.assertNotNull(element58);
        org.junit.Assert.assertNotNull(document59);
        org.junit.Assert.assertNotNull(elements61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str62, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements63);
        org.junit.Assert.assertNull(element64);
        org.junit.Assert.assertNotNull(document67);
        org.junit.Assert.assertNotNull(element69);
        org.junit.Assert.assertNotNull(document70);
        org.junit.Assert.assertNotNull(document71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "#document" + "'", str72, "#document");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(dataNodeList75);
        org.junit.Assert.assertNotNull(outputSettings76);
        org.junit.Assert.assertNotNull(document77);
        org.junit.Assert.assertNotNull(outputSettings78);
        org.junit.Assert.assertTrue("'" + escapeMode79 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode79.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings80);
        org.junit.Assert.assertNotNull(outputSettings81);
        org.junit.Assert.assertNotNull(outputSettings83);
        org.junit.Assert.assertNotNull(outputSettings85);
        org.junit.Assert.assertNotNull(outputSettings87);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1099
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: aload         15
152: iconst_1
153: invokevirtual #31
156: astore        18
158: ldc           #25
160: ldc           #25
162: invokestatic  #847
165: astore        19
167: aload         19
169: ldc           #12
171: invokevirtual #977
174: astore        20
176: aload         19
178: invokevirtual #154
181: astore        21
183: aload         19
185: iconst_m1
186: invokevirtual #162
189: astore        22
191: aload         19
193: invokevirtual #72
196: astore        23
198: aload         19
200: invokevirtual #999
203: astore        24
205: aload         19
207: invokevirtual #74
210: astore        25
212: ldc           #25
214: ldc           #25
216: invokestatic  #847
219: astore        26
221: aload         26
223: ldc           #12
225: invokevirtual #977
228: astore        27
230: aload         26
232: invokevirtual #154
235: astore        28
237: aload         26
239: invokevirtual #154
242: astore        29
244: aload         26
246: invokevirtual #220
249: astore        30
251: aload         26
253: ldc           #25
255: invokevirtual #176
258: astore        31
260: aload         26
262: invokevirtual #348
265: astore        32
267: aload         26
269: invokevirtual #30
272: astore        33
274: aload         19
276: aload         33
278: invokevirtual #175
281: astore        34
283: aload         33
285: invokevirtual #205
288: astore        35
290: ldc           #25
292: ldc           #25
294: invokestatic  #847
297: astore        36
299: aload         36
301: ldc           #12
303: invokevirtual #977
306: astore        37
308: aload         36
310: invokevirtual #154
313: astore        38
315: aload         36
317: iconst_m1
318: invokevirtual #162
321: astore        39
323: aload         36
325: invokevirtual #72
328: astore        40
330: aload         36
332: invokevirtual #999
335: astore        41
337: aload         36
339: invokevirtual #74
342: astore        42
344: ldc           #25
346: ldc           #25
348: invokestatic  #847
351: astore        43
353: aload         43
355: ldc           #12
357: invokevirtual #977
360: astore        44
362: aload         43
364: invokevirtual #154
367: astore        45
369: aload         43
371: invokevirtual #154
374: astore        46
376: aload         43
378: invokevirtual #220
381: astore        47
383: aload         43
385: ldc           #25
387: invokevirtual #176
390: astore        48
392: aload         43
394: invokevirtual #348
397: astore        49
399: aload         43
401: invokevirtual #30
404: astore        50
406: aload         36
408: aload         50
410: invokevirtual #175
413: astore        51
415: aload         50
417: invokevirtual #205
420: astore        52
422: aload         50
424: invokevirtual #382
427: astore        53
429: aload         33
431: aload         53
433: invokevirtual #190
436: astore        54
438: aload         15
440: aload         53
442: invokevirtual #190
445: astore        55
447: aload         55
449: iconst_0
450: invokevirtual #189
453: astore        56
455: aload         56
457: iconst_0
458: invokevirtual #31
461: astore        57
463: aload         56
465: bipush        97
467: invokevirtual #189
470: astore        58
472: ldc_w         #1015
475: ldc_w         #1100
478: aload_1
479: aload         58
481: invokestatic  #33
484: astore        59
486: ldc           #34
488: invokestatic  #35
491: goto          496
494: astore        59
496: aload_2
497: invokestatic  #15
500: aload_3
501: invokestatic  #15
504: aload         4
506: invokestatic  #15
509: new           #16
512: dup
513: invokespecial #17
516: ldc           #18
518: invokevirtual #19
521: aload         5
523: invokevirtual #19
526: ldc           #67
528: invokevirtual #19
531: invokevirtual #22
534: aload         5
536: ldc           #25
538: invokestatic  #68
541: new           #16
544: dup
545: invokespecial #17
548: ldc           #18
550: invokevirtual #19
553: aload         6
555: invokevirtual #19
558: ldc           #67
560: invokevirtual #19
563: invokevirtual #22
566: aload         6
568: ldc           #25
570: invokestatic  #68
573: aload         7
575: invokestatic  #15
578: aload         8
580: invokestatic  #15
583: aload         9
585: invokestatic  #15
588: aload         10
590: invokestatic  #15
593: aload         11
595: invokestatic  #15
598: new           #16
601: dup
602: invokespecial #17
605: ldc           #18
607: invokevirtual #19
610: aload         12
612: invokevirtual #19
615: ldc           #107
617: invokevirtual #19
620: invokevirtual #22
623: aload         12
625: ldc           #13
627: invokestatic  #68
630: new           #16
633: dup
634: invokespecial #17
637: ldc           #18
639: invokevirtual #19
642: aload         13
644: invokevirtual #19
647: ldc           #67
649: invokevirtual #19
652: invokevirtual #22
655: aload         13
657: ldc           #25
659: invokestatic  #68
662: aload         14
664: invokestatic  #15
667: aload         15
669: invokestatic  #15
672: aload         16
674: invokestatic  #15
677: new           #16
680: dup
681: invokespecial #17
684: ldc           #18
686: invokevirtual #19
689: aload         17
691: invokevirtual #223
694: ldc           #21
696: invokevirtual #19
699: getstatic     #381
702: invokevirtual #223
705: ldc           #18
707: invokevirtual #19
710: invokevirtual #22
713: aload         17
715: getstatic     #381
718: invokevirtual #385
721: invokestatic  #23
724: aload         18
726: invokestatic  #15
729: aload         19
731: invokestatic  #15
734: aload         20
736: invokestatic  #15
739: aload         21
741: invokestatic  #15
744: aload         22
746: invokestatic  #15
749: new           #16
752: dup
753: invokespecial #17
756: ldc           #18
758: invokevirtual #19
761: aload         23
763: invokevirtual #19
766: ldc           #78
768: invokevirtual #19
771: invokevirtual #22
774: aload         23
776: ldc           #10
778: invokestatic  #68
781: aload         24
783: invokestatic  #15
786: aload         25
788: invokestatic  #79
791: aload         26
793: invokestatic  #15
796: aload         27
798: invokestatic  #15
801: aload         28
803: invokestatic  #15
806: aload         29
808: invokestatic  #15
811: new           #16
814: dup
815: invokespecial #17
818: ldc           #18
820: invokevirtual #19
823: aload         30
825: invokevirtual #19
828: ldc           #107
830: invokevirtual #19
833: invokevirtual #22
836: aload         30
838: ldc           #13
840: invokestatic  #68
843: new           #16
846: dup
847: invokespecial #17
850: ldc           #18
852: invokevirtual #19
855: aload         31
857: invokevirtual #19
860: ldc           #67
862: invokevirtual #19
865: invokevirtual #22
868: aload         31
870: ldc           #25
872: invokestatic  #68
875: aload         32
877: invokestatic  #15
880: aload         33
882: invokestatic  #15
885: aload         34
887: invokestatic  #15
890: aload         35
892: invokestatic  #15
895: aload         36
897: invokestatic  #15
900: aload         37
902: invokestatic  #15
905: aload         38
907: invokestatic  #15
910: aload         39
912: invokestatic  #15
915: new           #16
918: dup
919: invokespecial #17
922: ldc           #18
924: invokevirtual #19
927: aload         40
929: invokevirtual #19
932: ldc           #78
934: invokevirtual #19
937: invokevirtual #22
940: aload         40
942: ldc           #10
944: invokestatic  #68
947: aload         41
949: invokestatic  #15
952: aload         42
954: invokestatic  #79
957: aload         43
959: invokestatic  #15
962: aload         44
964: invokestatic  #15
967: aload         45
969: invokestatic  #15
972: aload         46
974: invokestatic  #15
977: new           #16
980: dup
981: invokespecial #17
984: ldc           #18
986: invokevirtual #19
989: aload         47
991: invokevirtual #19
994: ldc           #107
996: invokevirtual #19
999: invokevirtual #22
1002: aload         47
1004: ldc           #13
1006: invokestatic  #68
1009: new           #16
1012: dup
1013: invokespecial #17
1016: ldc           #18
1018: invokevirtual #19
1021: aload         48
1023: invokevirtual #19
1026: ldc           #67
1028: invokevirtual #19
1031: invokevirtual #22
1034: aload         48
1036: ldc           #25
1038: invokestatic  #68
1041: aload         49
1043: invokestatic  #15
1046: aload         50
1048: invokestatic  #15
1051: aload         51
1053: invokestatic  #15
1056: aload         52
1058: invokestatic  #15
1061: new           #16
1064: dup
1065: invokespecial #17
1068: ldc           #18
1070: invokevirtual #19
1073: aload         53
1075: invokevirtual #223
1078: ldc           #21
1080: invokevirtual #19
1083: getstatic     #381
1086: invokevirtual #223
1089: ldc           #18
1091: invokevirtual #19
1094: invokevirtual #22
1097: aload         53
1099: getstatic     #381
1102: invokevirtual #385
1105: invokestatic  #23
1108: aload         54
1110: invokestatic  #15
1113: aload         55
1115: invokestatic  #15
1118: aload         56
1120: invokestatic  #15
1123: aload         57
1125: invokestatic  #15
1128: aload         58
1130: invokestatic  #15
1133: return
Exception table:
from    to  target type
472   491   494   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test399
Start line: 20545
End line: 20556
Method source code: 
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean(".10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"", "text=\"\"", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1101
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1041
30: ldc_w         #1028
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test400
Start line: 20559
End line: 20570
Method source code: 
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("[[=text=\"\"=\"[[1.0, 10,  , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]]\"]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1102
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1103
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test401
Start line: 20573
End line: 20584
Method source code: 
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("<head></head>", "[[1.0, 10,  , -1, 0.0, 100, , 10.0, 10.0, 100, 1.0, 100, 1.0, 4, 0, 0, 100, true, 100, 100.0, 0, 1, 10.0, 10.0, -1, 0.0]$=10.0data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\"-1.0data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"0data=\"\"=\"[hi!]\"10data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"data=\"\"=\"[hi!]\"-1data=\"\"=\"[hi!]\"#data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"falsedata=\"\"=\"[hi!]\"100.0data=\"\"=\"[hi!]\" data=\"\"=\"[hi!]\"1data=\"\"=\"[hi!]\"10.0data=\"\"=\"[hi!]\"100data=\"\"=\"[hi!]\"0.0data=\"\"=\"[hi!]\"]", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1104
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1105
30: ldc_w         #1051
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test402
Start line: 20587
End line: 20598
Method source code: 
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        org.jsoup.safety.Whitelist whitelist2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.jsoup.Jsoup.clean("1.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10:eq(10)\n<html>\n <head></head>\n <body></body>\n</html> :eq(10)\n<html>\n <head></head>\n <body></body>\n</html>-1:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>1.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>1.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>4:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>true:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>1:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>-1:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>hi!", " data=\"\" [hi!]=\"[hi!]\"", whitelist2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1106
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1107
30: ldc_w         #1108
33: aload_1
34: invokestatic  #94
37: astore_2
38: ldc           #34
40: invokestatic  #35
43: goto          47
46: astore_2
47: return
Exception table:
from    to  target type
27    43    46   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test403
Start line: 20601
End line: 20612
Method source code: 
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = org.jsoup.Jsoup.isValid(":eq(3)", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1109
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1110
30: aload_1
31: invokestatic  #14
34: istore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test404
Start line: 20615
End line: 20626
Method source code: 
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("1.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10:eq(10)\n<html>\n <head></head>\n <body></body>\n</html> :eq(10)\n<html>\n <head></head>\n <body></body>\n</html>-1:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>1.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>1.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>4:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>true:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>100.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>1:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>10.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>-1:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>0.0:eq(10)\n<html>\n <head></head>\n <body></body>\n</html>hi!", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1111
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1107
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test405
Start line: 20629
End line: 20640
Method source code: 
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        org.jsoup.safety.Whitelist whitelist1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.jsoup.Jsoup.clean("#[0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]", whitelist1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1112
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc_w         #1113
30: aload_1
31: invokestatic  #81
34: astore_2
35: ldc           #34
37: invokestatic  #35
40: goto          44
43: astore_2
44: return
Exception table:
from    to  target type
27    40    43   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/RegressionTest0.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/RegressionTest0.class
Class name: RegressionTest0
Method name: test406
Start line: 20643
End line: 20726
Method source code: 
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        org.jsoup.safety.Whitelist whitelist2 = null;
        org.jsoup.nodes.Document document5 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element7 = document5.val("hi!");
        org.jsoup.nodes.Document document8 = document5.clone();
        java.lang.String str9 = document8.ownText();
        java.lang.String str10 = document8.className();
        org.jsoup.select.Elements elements12 = document8.getElementsContainingOwnText(" data=\"\"");
        org.jsoup.nodes.Document document15 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element17 = document15.val("hi!");
        org.jsoup.nodes.Document document18 = document15.clone();
        org.jsoup.nodes.Document document19 = document15.clone();
        java.lang.String str20 = document15.nodeName();
        java.lang.String str22 = document15.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList23 = document15.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings24 = document15.outputSettings();
        org.jsoup.nodes.Document document25 = document8.outputSettings(outputSettings24);
        org.jsoup.nodes.Entities.EscapeMode escapeMode26 = outputSettings24.escapeMode();
        org.jsoup.nodes.Document.OutputSettings outputSettings28 = outputSettings24.prettyPrint(true);
        org.jsoup.nodes.Document document31 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element33 = document31.val("hi!");
        org.jsoup.nodes.Document document34 = document31.clone();
        org.jsoup.select.Elements elements36 = document31.getElementsByIndexEquals((int) (byte) -1);
        java.lang.String str37 = document31.toString();
        org.jsoup.select.Elements elements38 = document31.children();
        org.jsoup.nodes.Element element39 = document31.parent();
        org.jsoup.nodes.Document document42 = org.jsoup.parser.Parser.parse("", "");
        org.jsoup.nodes.Element element44 = document42.val("hi!");
        org.jsoup.nodes.Document document45 = document42.clone();
        org.jsoup.nodes.Document document46 = document42.clone();
        java.lang.String str47 = document42.nodeName();
        java.lang.String str49 = document42.attr("");
        java.util.List<org.jsoup.nodes.DataNode> dataNodeList50 = document42.dataNodes();
        org.jsoup.nodes.Document.OutputSettings outputSettings51 = document42.outputSettings();
        org.jsoup.nodes.Document document52 = document31.outputSettings(outputSettings51);
        org.jsoup.nodes.Document.OutputSettings outputSettings53 = outputSettings51.clone();
        java.nio.charset.Charset charset54 = outputSettings51.charset();
        org.jsoup.nodes.Document.OutputSettings outputSettings55 = outputSettings24.charset(charset54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = org.jsoup.Jsoup.clean("[#hi!\n&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;$=data=\"\" hi!=\"\" [10.0, , -1, -1, -1, 10, -1.0, 1, 0, 10,  , , -1, #,  , false, 100.0,  , 1, 10.0, 100, 0.0]=\"[hi!]\"=\"[hi!]\"]", "[^ text=\"\"]", whitelist2, outputSettings55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Object must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(document5);
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(document8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(elements12);
        org.junit.Assert.assertNotNull(document15);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertNotNull(document18);
        org.junit.Assert.assertNotNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#document" + "'", str20, "#document");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(dataNodeList23);
        org.junit.Assert.assertNotNull(outputSettings24);
        org.junit.Assert.assertNotNull(document25);
        org.junit.Assert.assertTrue("'" + escapeMode26 + "' != '" + org.jsoup.nodes.Entities.EscapeMode.base + "'", escapeMode26.equals(org.jsoup.nodes.Entities.EscapeMode.base));
        org.junit.Assert.assertNotNull(outputSettings28);
        org.junit.Assert.assertNotNull(document31);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(document34);
        org.junit.Assert.assertNotNull(elements36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "<html>\n <head></head>\n <body></body>\n</html>" + "'", str37, "<html>\n <head></head>\n <body></body>\n</html>");
        org.junit.Assert.assertNotNull(elements38);
        org.junit.Assert.assertNull(element39);
        org.junit.Assert.assertNotNull(document42);
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertNotNull(document45);
        org.junit.Assert.assertNotNull(document46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#document" + "'", str47, "#document");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(dataNodeList50);
        org.junit.Assert.assertNotNull(outputSettings51);
        org.junit.Assert.assertNotNull(document52);
        org.junit.Assert.assertNotNull(outputSettings53);
        org.junit.Assert.assertNotNull(charset54);
        org.junit.Assert.assertNotNull(outputSettings55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #1114
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: ldc           #25
29: ldc           #25
31: invokestatic  #847
34: astore_2
35: aload_2
36: ldc           #12
38: invokevirtual #977
41: astore_3
42: aload_2
43: invokevirtual #154
46: astore        4
48: aload         4
50: invokevirtual #53
53: astore        5
55: aload         4
57: invokevirtual #978
60: astore        6
62: aload         4
64: ldc_w         #971
67: invokevirtual #62
70: astore        7
72: ldc           #25
74: ldc           #25
76: invokestatic  #847
79: astore        8
81: aload         8
83: ldc           #12
85: invokevirtual #977
88: astore        9
90: aload         8
92: invokevirtual #154
95: astore        10
97: aload         8
99: invokevirtual #154
102: astore        11
104: aload         8
106: invokevirtual #220
109: astore        12
111: aload         8
113: ldc           #25
115: invokevirtual #176
118: astore        13
120: aload         8
122: invokevirtual #348
125: astore        14
127: aload         8
129: invokevirtual #30
132: astore        15
134: aload         4
136: aload         15
138: invokevirtual #175
141: astore        16
143: aload         15
145: invokevirtual #382
148: astore        17
150: aload         15
152: iconst_1
153: invokevirtual #31
156: astore        18
158: ldc           #25
160: ldc           #25
162: invokestatic  #847
165: astore        19
167: aload         19
169: ldc           #12
171: invokevirtual #977
174: astore        20
176: aload         19
178: invokevirtual #154
181: astore        21
183: aload         19
185: iconst_m1
186: invokevirtual #162
189: astore        22
191: aload         19
193: invokevirtual #72
196: astore        23
198: aload         19
200: invokevirtual #999
203: astore        24
205: aload         19
207: invokevirtual #74
210: astore        25
212: ldc           #25
214: ldc           #25
216: invokestatic  #847
219: astore        26
221: aload         26
223: ldc           #12
225: invokevirtual #977
228: astore        27
230: aload         26
232: invokevirtual #154
235: astore        28
237: aload         26
239: invokevirtual #154
242: astore        29
244: aload         26
246: invokevirtual #220
249: astore        30
251: aload         26
253: ldc           #25
255: invokevirtual #176
258: astore        31
260: aload         26
262: invokevirtual #348
265: astore        32
267: aload         26
269: invokevirtual #30
272: astore        33
274: aload         19
276: aload         33
278: invokevirtual #175
281: astore        34
283: aload         33
285: invokevirtual #205
288: astore        35
290: aload         33
292: invokevirtual #460
295: astore        36
297: aload         15
299: aload         36
301: invokevirtual #718
304: astore        37
306: ldc_w         #1115
309: ldc_w         #1116
312: aload_1
313: aload         37
315: invokestatic  #33
318: astore        38
320: ldc           #34
322: invokestatic  #35
325: goto          330
328: astore        38
330: aload_2
331: invokestatic  #15
334: aload_3
335: invokestatic  #15
338: aload         4
340: invokestatic  #15
343: new           #16
346: dup
347: invokespecial #17
350: ldc           #18
352: invokevirtual #19
355: aload         5
357: invokevirtual #19
360: ldc           #67
362: invokevirtual #19
365: invokevirtual #22
368: aload         5
370: ldc           #25
372: invokestatic  #68
375: new           #16
378: dup
379: invokespecial #17
382: ldc           #18
384: invokevirtual #19
387: aload         6
389: invokevirtual #19
392: ldc           #67
394: invokevirtual #19
397: invokevirtual #22
400: aload         6
402: ldc           #25
404: invokestatic  #68
407: aload         7
409: invokestatic  #15
412: aload         8
414: invokestatic  #15
417: aload         9
419: invokestatic  #15
422: aload         10
424: invokestatic  #15
427: aload         11
429: invokestatic  #15
432: new           #16
435: dup
436: invokespecial #17
439: ldc           #18
441: invokevirtual #19
444: aload         12
446: invokevirtual #19
449: ldc           #107
451: invokevirtual #19
454: invokevirtual #22
457: aload         12
459: ldc           #13
461: invokestatic  #68
464: new           #16
467: dup
468: invokespecial #17
471: ldc           #18
473: invokevirtual #19
476: aload         13
478: invokevirtual #19
481: ldc           #67
483: invokevirtual #19
486: invokevirtual #22
489: aload         13
491: ldc           #25
493: invokestatic  #68
496: aload         14
498: invokestatic  #15
501: aload         15
503: invokestatic  #15
506: aload         16
508: invokestatic  #15
511: new           #16
514: dup
515: invokespecial #17
518: ldc           #18
520: invokevirtual #19
523: aload         17
525: invokevirtual #223
528: ldc           #21
530: invokevirtual #19
533: getstatic     #381
536: invokevirtual #223
539: ldc           #18
541: invokevirtual #19
544: invokevirtual #22
547: aload         17
549: getstatic     #381
552: invokevirtual #385
555: invokestatic  #23
558: aload         18
560: invokestatic  #15
563: aload         19
565: invokestatic  #15
568: aload         20
570: invokestatic  #15
573: aload         21
575: invokestatic  #15
578: aload         22
580: invokestatic  #15
583: new           #16
586: dup
587: invokespecial #17
590: ldc           #18
592: invokevirtual #19
595: aload         23
597: invokevirtual #19
600: ldc           #78
602: invokevirtual #19
605: invokevirtual #22
608: aload         23
610: ldc           #10
612: invokestatic  #68
615: aload         24
617: invokestatic  #15
620: aload         25
622: invokestatic  #79
625: aload         26
627: invokestatic  #15
630: aload         27
632: invokestatic  #15
635: aload         28
637: invokestatic  #15
640: aload         29
642: invokestatic  #15
645: new           #16
648: dup
649: invokespecial #17
652: ldc           #18
654: invokevirtual #19
657: aload         30
659: invokevirtual #19
662: ldc           #107
664: invokevirtual #19
667: invokevirtual #22
670: aload         30
672: ldc           #13
674: invokestatic  #68
677: new           #16
680: dup
681: invokespecial #17
684: ldc           #18
686: invokevirtual #19
689: aload         31
691: invokevirtual #19
694: ldc           #67
696: invokevirtual #19
699: invokevirtual #22
702: aload         31
704: ldc           #25
706: invokestatic  #68
709: aload         32
711: invokestatic  #15
714: aload         33
716: invokestatic  #15
719: aload         34
721: invokestatic  #15
724: aload         35
726: invokestatic  #15
729: aload         36
731: invokestatic  #15
734: aload         37
736: invokestatic  #15
739: return
Exception table:
from    to  target type
306   325   328   Class java/lang/IllegalArgumentException
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: simpleBehaviourTest
Start line: 14
End line: 19
Method source code: 
    @Test public void simpleBehaviourTest() {
        String h = "<div><p class=foo><a href='http://evil.com'>Hello <b id=bar>there</b>!</a></div>";
        String cleanHtml = Jsoup.clean(h, Whitelist.simpleText());

        assertEquals("Hello <b>there</b>!", TextUtil.stripNewlines(cleanHtml));
    }
Method byte code: 
0: ldc           #2
2: astore_1
3: aload_1
4: invokestatic  #3
7: invokestatic  #4
10: astore_2
11: ldc           #5
13: aload_2
14: invokestatic  #6
17: invokestatic  #7
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: simpleBehaviourTest2
Start line: 21
End line: 26
Method source code: 
    @Test public void simpleBehaviourTest2() {
        String h = "Hello <b>there</b>!";
        String cleanHtml = Jsoup.clean(h, Whitelist.simpleText());

        assertEquals("Hello <b>there</b>!", TextUtil.stripNewlines(cleanHtml));
    }
Method byte code: 
0: ldc           #5
2: astore_1
3: aload_1
4: invokestatic  #3
7: invokestatic  #4
10: astore_2
11: ldc           #5
13: aload_2
14: invokestatic  #6
17: invokestatic  #7
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: basicBehaviourTest
Start line: 28
End line: 34
Method source code: 
    @Test public void basicBehaviourTest() {
        String h = "<div><p><a href='javascript:sendAllMoney()'>Dodgy</a> <A HREF='HTTP://nice.com'>Nice</a></p><blockquote>Hello</blockquote>";
        String cleanHtml = Jsoup.clean(h, Whitelist.basic());

        assertEquals("<p><a rel=\"nofollow\">Dodgy</a> <a href=\"http://nice.com\" rel=\"nofollow\">Nice</a></p><blockquote>Hello</blockquote>",
                TextUtil.stripNewlines(cleanHtml));
    }
Method byte code: 
0: ldc           #8
2: astore_1
3: aload_1
4: invokestatic  #9
7: invokestatic  #4
10: astore_2
11: ldc           #10
13: aload_2
14: invokestatic  #6
17: invokestatic  #7
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: basicWithImagesTest
Start line: 36
End line: 40
Method source code: 
    @Test public void basicWithImagesTest() {
        String h = "<div><p><img src='http://example.com/' alt=Image></p><p><img src='ftp://ftp.example.com'></p></div>";
        String cleanHtml = Jsoup.clean(h, Whitelist.basicWithImages());
        assertEquals("<p><img src=\"http://example.com/\" alt=\"Image\" /></p><p><img /></p>", TextUtil.stripNewlines(cleanHtml));
    }
Method byte code: 
0: ldc           #11
2: astore_1
3: aload_1
4: invokestatic  #12
7: invokestatic  #4
10: astore_2
11: ldc           #13
13: aload_2
14: invokestatic  #6
17: invokestatic  #7
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testRelaxed
Start line: 42
End line: 46
Method source code: 
    @Test public void testRelaxed() {
        String h = "<h1>Head</h1><table><tr><td>One<td>Two</td></tr></table>";
        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());
        assertEquals("<h1>Head</h1><table><tbody><tr><td>One</td><td>Two</td></tr></tbody></table>", TextUtil.stripNewlines(cleanHtml));
    }
Method byte code: 
0: ldc           #14
2: astore_1
3: aload_1
4: invokestatic  #15
7: invokestatic  #4
10: astore_2
11: ldc           #16
13: aload_2
14: invokestatic  #6
17: invokestatic  #7
20: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testDropComments
Start line: 48
End line: 52
Method source code: 
    @Test public void testDropComments() {
        String h = "<p>Hello<!-- no --></p>";
        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());
        assertEquals("<p>Hello</p>", cleanHtml);
    }
Method byte code: 
0: ldc           #17
2: astore_1
3: aload_1
4: invokestatic  #15
7: invokestatic  #4
10: astore_2
11: ldc           #18
13: aload_2
14: invokestatic  #7
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testDropXmlProc
Start line: 54
End line: 58
Method source code: 
    @Test public void testDropXmlProc() {
        String h = "<?import namespace=\"xss\"><p>Hello</p>";
        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());
        assertEquals("<p>Hello</p>", cleanHtml);
    }
Method byte code: 
0: ldc           #19
2: astore_1
3: aload_1
4: invokestatic  #15
7: invokestatic  #4
10: astore_2
11: ldc           #18
13: aload_2
14: invokestatic  #7
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testDropScript
Start line: 60
End line: 64
Method source code: 
    @Test public void testDropScript() {
        String h = "<SCRIPT SRC=//ha.ckers.org/.j><SCRIPT>alert(/XSS/.source)</SCRIPT>";
        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());
        assertEquals("", cleanHtml);
    }
Method byte code: 
0: ldc           #20
2: astore_1
3: aload_1
4: invokestatic  #15
7: invokestatic  #4
10: astore_2
11: ldc           #21
13: aload_2
14: invokestatic  #7
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testDropImageScript
Start line: 66
End line: 70
Method source code: 
    @Test public void testDropImageScript() {
        String h = "<IMG SRC=\"javascript:alert('XSS')\">";
        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());
        assertEquals("<img />", cleanHtml);
    }
Method byte code: 
0: ldc           #22
2: astore_1
3: aload_1
4: invokestatic  #15
7: invokestatic  #4
10: astore_2
11: ldc           #23
13: aload_2
14: invokestatic  #7
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testCleanJavascriptHref
Start line: 72
End line: 76
Method source code: 
    @Test public void testCleanJavascriptHref() {
        String h = "<A HREF=\"javascript:document.location='http://www.google.com/'\">XSS</A>";
        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());
        assertEquals("<a>XSS</a>", cleanHtml);
    }
Method byte code: 
0: ldc           #24
2: astore_1
3: aload_1
4: invokestatic  #15
7: invokestatic  #4
10: astore_2
11: ldc           #25
13: aload_2
14: invokestatic  #7
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testDropsUnknownTags
Start line: 78
End line: 82
Method source code: 
    @Test public void testDropsUnknownTags() {
        String h = "<p><custom foo=true>Test</custom></p>";
        String cleanHtml = Jsoup.clean(h, Whitelist.relaxed());
        assertEquals("<p>Test</p>", cleanHtml);
    }
Method byte code: 
0: ldc           #26
2: astore_1
3: aload_1
4: invokestatic  #15
7: invokestatic  #4
10: astore_2
11: ldc           #27
13: aload_2
14: invokestatic  #7
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testHandlesEmptyAttributes
Start line: 84
End line: 88
Method source code: 
    @Test public void testHandlesEmptyAttributes() {
        String h = "<img alt=\"\" src= unknown=''>";
        String cleanHtml = Jsoup.clean(h, Whitelist.basicWithImages());
        assertEquals("<img alt=\"\" />", cleanHtml);
    }
Method byte code: 
0: ldc           #28
2: astore_1
3: aload_1
4: invokestatic  #12
7: invokestatic  #4
10: astore_2
11: ldc           #29
13: aload_2
14: invokestatic  #7
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: testIsValid
Start line: 90
End line: 99
Method source code: 
    @Test public void testIsValid() {
        String ok = "<p>Test <b><a href='http://example.com/'>OK</a></b></p>";
        String nok1 = "<p><script></script>Not <b>OK</b></p>";
        String nok2 = "<p align=right>Test Not <b>OK</b></p>";
        String nok3 = "<!-- comment --><p>Not OK</p>"; // comments and the like will be cleaned
        assertTrue(Jsoup.isValid(ok, Whitelist.basic()));
        assertFalse(Jsoup.isValid(nok1, Whitelist.basic()));
        assertFalse(Jsoup.isValid(nok2, Whitelist.basic()));
        assertFalse(Jsoup.isValid(nok3, Whitelist.basic()));
    }
Method byte code: 
0: ldc           #30
2: astore_1
3: ldc           #31
5: astore_2
6: ldc           #32
8: astore_3
9: ldc           #33
11: astore        4
13: aload_1
14: invokestatic  #9
17: invokestatic  #34
20: invokestatic  #35
23: aload_2
24: invokestatic  #9
27: invokestatic  #34
30: invokestatic  #36
33: aload_3
34: invokestatic  #9
37: invokestatic  #34
40: invokestatic  #36
43: aload         4
45: invokestatic  #9
48: invokestatic  #34
51: invokestatic  #36
54: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: resolvesRelativeLinks
Start line: 101
End line: 105
Method source code: 
    @Test public void resolvesRelativeLinks() {
        String html = "<a href='/foo'>Link</a><img src='/bar'>";
        String clean = Jsoup.clean(html, "http://example.com/", Whitelist.basicWithImages());
        assertEquals("<a href=\"http://example.com/foo\" rel=\"nofollow\">Link</a>\n<img src=\"http://example.com/bar\" />", clean);
    }
Method byte code: 
0: ldc           #37
2: astore_1
3: aload_1
4: ldc           #38
6: invokestatic  #12
9: invokestatic  #39
12: astore_2
13: ldc           #40
15: aload_2
16: invokestatic  #7
19: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: preservesRelativeLinksIfConfigured
Start line: 107
End line: 111
Method source code: 
    @Test public void preservesRelativeLinksIfConfigured() {
        String html = "<a href='/foo'>Link</a><img src='/bar'> <img src='javascript:alert()'>";
        String clean = Jsoup.clean(html, "http://example.com/", Whitelist.basicWithImages().preserveRelativeLinks(true));
        assertEquals("<a href=\"/foo\" rel=\"nofollow\">Link</a>\n<img src=\"/bar\" /> \n<img />", clean);
    }
Method byte code: 
0: ldc           #41
2: astore_1
3: aload_1
4: ldc           #38
6: invokestatic  #12
9: iconst_1
10: invokevirtual #42
13: invokestatic  #39
16: astore_2
17: ldc           #43
19: aload_2
20: invokestatic  #7
23: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: dropsUnresolvableRelativeLinks
Start line: 113
End line: 117
Method source code: 
    @Test public void dropsUnresolvableRelativeLinks() {
        String html = "<a href='/foo'>Link</a>";
        String clean = Jsoup.clean(html, Whitelist.basic());
        assertEquals("<a rel=\"nofollow\">Link</a>", clean);
    }
Method byte code: 
0: ldc           #44
2: astore_1
3: aload_1
4: invokestatic  #9
7: invokestatic  #4
10: astore_2
11: ldc           #45
13: aload_2
14: invokestatic  #7
17: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: handlesCustomProtocols
Start line: 119
End line: 126
Method source code: 
    @Test public void handlesCustomProtocols() {
        String html = "<img src='cid:12345' /> <img src='data:gzzt' />";
        String dropped = Jsoup.clean(html, Whitelist.basicWithImages());
        assertEquals("<img /> \n<img />", dropped);

        String preserved = Jsoup.clean(html, Whitelist.basicWithImages().addProtocols("img", "src", "cid", "data"));
        assertEquals("<img src=\"cid:12345\" /> \n<img src=\"data:gzzt\" />", preserved);
    }
Method byte code: 
0: ldc           #46
2: astore_1
3: aload_1
4: invokestatic  #12
7: invokestatic  #4
10: astore_2
11: ldc           #47
13: aload_2
14: invokestatic  #7
17: aload_1
18: invokestatic  #12
21: ldc           #48
23: ldc           #49
25: iconst_2
26: anewarray     #50
29: dup
30: iconst_0
31: ldc           #51
33: aastore
34: dup
35: iconst_1
36: ldc           #52
38: aastore
39: invokevirtual #53
42: invokestatic  #4
45: astore_3
46: ldc           #54
48: aload_3
49: invokestatic  #7
52: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: handlesAllPseudoTag
Start line: 128
End line: 137
Method source code: 
    @Test public void handlesAllPseudoTag() {
        String html = "<p class='foo' src='bar'><a class='qux'>link</a></p>";
        Whitelist whitelist = new Whitelist()
                .addAttributes(":all", "class")
                .addAttributes("p", "style")
                .addTags("p", "a");

        String clean = Jsoup.clean(html, whitelist);
        assertEquals("<p class=\"foo\"><a class=\"qux\">link</a></p>", clean);
    }
Method byte code: 
0: ldc           #55
2: astore_1
3: new           #56
6: dup
7: invokespecial #57
10: ldc           #58
12: iconst_1
13: anewarray     #50
16: dup
17: iconst_0
18: ldc           #59
20: aastore
21: invokevirtual #60
24: ldc           #61
26: iconst_1
27: anewarray     #50
30: dup
31: iconst_0
32: ldc           #62
34: aastore
35: invokevirtual #60
38: iconst_2
39: anewarray     #50
42: dup
43: iconst_0
44: ldc           #61
46: aastore
47: dup
48: iconst_1
49: ldc           #63
51: aastore
52: invokevirtual #64
55: astore_2
56: aload_1
57: aload_2
58: invokestatic  #4
61: astore_3
62: ldc           #65
64: aload_3
65: invokestatic  #7
68: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: addsTagOnAttributesIfNotSet
Start line: 139
End line: 146
Method source code: 
    @Test public void addsTagOnAttributesIfNotSet() {
        String html = "<p class='foo' src='bar'>One</p>";
        Whitelist whitelist = new Whitelist()
            .addAttributes("p", "class");
        // ^^ whitelist does not have explicit tag add for p, inferred from add attributes.
        String clean = Jsoup.clean(html, whitelist);
        assertEquals("<p class=\"foo\">One</p>", clean);
    }
Method byte code: 
0: ldc           #66
2: astore_1
3: new           #56
6: dup
7: invokespecial #57
10: ldc           #61
12: iconst_1
13: anewarray     #50
16: dup
17: iconst_0
18: ldc           #59
20: aastore
21: invokevirtual #60
24: astore_2
25: aload_1
26: aload_2
27: invokestatic  #4
30: astore_3
31: ldc           #67
33: aload_3
34: invokestatic  #7
37: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: supplyOutputSettings
Start line: 148
End line: 168
Method source code: 
    @Test public void supplyOutputSettings() {
        // test that one can override the default document output settings
        Document.OutputSettings os = new Document.OutputSettings();
        os.prettyPrint(false);
        os.escapeMode(Entities.EscapeMode.extended);

        String html = "<div><p>&bernou;</p></div>";
        String customOut = Jsoup.clean(html, "http://foo.com/", Whitelist.relaxed(), os);
        String defaultOut = Jsoup.clean(html, "http://foo.com/", Whitelist.relaxed());
        assertNotSame(defaultOut, customOut);

        assertEquals("<div><p>&bernou;</p></div>", customOut);
        assertEquals("<div>\n" +
            " <p>ℬ</p>\n" +
            "</div>", defaultOut);

        os.charset("ASCII");
        os.escapeMode(Entities.EscapeMode.base);
        String customOut2 = Jsoup.clean(html, "http://foo.com/", Whitelist.relaxed(), os);
        assertEquals("<div><p>&#8492;</p></div>", customOut2);
    }
Method byte code: 
0: new           #68
3: dup
4: invokespecial #69
7: astore_1
8: aload_1
9: iconst_0
10: invokevirtual #70
13: pop
14: aload_1
15: getstatic     #71
18: invokevirtual #72
21: pop
22: ldc           #73
24: astore_2
25: aload_2
26: ldc           #74
28: invokestatic  #15
31: aload_1
32: invokestatic  #75
35: astore_3
36: aload_2
37: ldc           #74
39: invokestatic  #15
42: invokestatic  #39
45: astore        4
47: aload         4
49: aload_3
50: invokestatic  #76
53: ldc           #73
55: aload_3
56: invokestatic  #7
59: ldc           #77
61: aload         4
63: invokestatic  #7
66: aload_1
67: ldc           #78
69: invokevirtual #79
72: pop
73: aload_1
74: getstatic     #80
77: invokevirtual #72
80: pop
81: aload_2
82: ldc           #74
84: invokestatic  #15
87: aload_1
88: invokestatic  #75
91: astore        5
93: ldc           #81
95: aload         5
97: invokestatic  #7
100: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: handlesFramesets
Start line: 170
End line: 179
Method source code: 
    @Test public void handlesFramesets() {
        String dirty = "<html><head><script></script><noscript></noscript></head><frameset><frame src=\"foo\" /><frame src=\"foo\" /></frameset></html>";
        String clean = Jsoup.clean(dirty, Whitelist.basic());
        assertEquals("", clean); // nothing good can come out of that

        Document dirtyDoc = Jsoup.parse(dirty);
        Document cleanDoc = new Cleaner(Whitelist.basic()).clean(dirtyDoc);
        assertFalse(cleanDoc == null);
        assertEquals(0, cleanDoc.body().childNodes().size());
    }
Method byte code: 
0: ldc           #82
2: astore_1
3: aload_1
4: invokestatic  #9
7: invokestatic  #4
10: astore_2
11: ldc           #21
13: aload_2
14: invokestatic  #7
17: aload_1
18: invokestatic  #83
21: astore_3
22: new           #84
25: dup
26: invokestatic  #9
29: invokespecial #85
32: aload_3
33: invokevirtual #86
36: astore        4
38: aload         4
40: ifnonnull     47
43: iconst_1
44: goto          48
47: iconst_0
48: invokestatic  #36
51: lconst_0
52: aload         4
54: invokevirtual #87
57: invokevirtual #88
60: invokeinterface #89,  1
65: i2l
66: invokestatic  #90
69: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/CleanerTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/CleanerTest.class
Class name: CleanerTest
Method name: cleansInternationalText
Start line: 181
End line: 183
Method source code: 
    @Test public void cleansInternationalText() {
        assertEquals("привет", Jsoup.clean("привет", Whitelist.none()));
    }
Method byte code: 
0: ldc           #91
2: ldc           #91
4: invokestatic  #92
7: invokestatic  #4
10: invokestatic  #7
13: return
}
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/Cleaner_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/Cleaner_ESTest.class
Class name: Cleaner_ESTest
Method name: test0
Start line: 18
End line: 26
Method source code: 
  public void test0()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.simpleText();
      Whitelist whitelist1 = whitelist0.addEnforcedAttribute("body", "body", "body");
      Cleaner cleaner0 = new Cleaner(whitelist1);
      Document document0 = Document.createShell("body");
      Document document1 = cleaner0.clean(document0);
      boolean boolean0 = cleaner0.isValid(document1);
      assertFalse(boolean0);
  }
Method byte code: 
0: invokestatic  #2
3: astore_1
4: aload_1
5: ldc           #3
7: ldc           #3
9: ldc           #3
11: invokevirtual #4
14: astore_2
15: new           #5
18: dup
19: aload_2
20: invokespecial #6
23: astore_3
24: ldc           #3
26: invokestatic  #7
29: astore        4
31: aload_3
32: aload         4
34: invokevirtual #8
37: astore        5
39: aload_3
40: aload         5
42: invokevirtual #9
45: istore        6
47: iload         6
49: invokestatic  #10
52: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/Cleaner_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/Cleaner_ESTest.class
Class name: Cleaner_ESTest
Method name: test1
Start line: 29
End line: 35
Method source code: 
  public void test1()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.simpleText();
      Document document0 = new Document("sN6$F\"-5h_]DS");
      Cleaner cleaner0 = new Cleaner(whitelist0);
      Document document1 = cleaner0.clean(document0);
      assertNotSame(document1, document0);
  }
Method byte code: 
0: invokestatic  #2
3: astore_1
4: new           #11
7: dup
8: ldc           #12
10: invokespecial #13
13: astore_2
14: new           #5
17: dup
18: aload_1
19: invokespecial #6
22: astore_3
23: aload_3
24: aload_2
25: invokevirtual #8
28: astore        4
30: aload         4
32: aload_2
33: invokestatic  #14
36: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/Cleaner_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/Cleaner_ESTest.class
Class name: Cleaner_ESTest
Method name: test2
Start line: 38
End line: 45
Method source code: 
  public void test2()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.basicWithImages();
      Document document0 = Document.createShell("sN6$F\"-5h_]DS");
      document0.text("sN6$F\"-5h_]DS");
      Cleaner cleaner0 = new Cleaner(whitelist0);
      boolean boolean0 = cleaner0.isValid(document0);
      assertTrue(boolean0);
  }
Method byte code: 
0: invokestatic  #15
3: astore_1
4: ldc           #12
6: invokestatic  #7
9: astore_2
10: aload_2
11: ldc           #12
13: invokevirtual #16
16: pop
17: new           #5
20: dup
21: aload_1
22: invokespecial #6
25: astore_3
26: aload_3
27: aload_2
28: invokevirtual #9
31: istore        4
33: iload         4
35: invokestatic  #17
38: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/Cleaner_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/Cleaner_ESTest.class
Class name: Cleaner_ESTest
Method name: test3
Start line: 48
End line: 58
Method source code: 
  public void test3()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.simpleText();
      Whitelist whitelist1 = Whitelist.relaxed();
      Whitelist whitelist2 = whitelist1.addEnforcedAttribute("body", "body", "body");
      Cleaner cleaner0 = new Cleaner(whitelist2);
      Document document0 = Document.createShell("body");
      Document document1 = cleaner0.clean(document0);
      Cleaner cleaner1 = new Cleaner(whitelist0);
      boolean boolean0 = cleaner1.isValid(document1);
      assertFalse(boolean0);
  }
Method byte code: 
0: invokestatic  #2
3: astore_1
4: invokestatic  #18
7: astore_2
8: aload_2
9: ldc           #3
11: ldc           #3
13: ldc           #3
15: invokevirtual #4
18: astore_3
19: new           #5
22: dup
23: aload_3
24: invokespecial #6
27: astore        4
29: ldc           #3
31: invokestatic  #7
34: astore        5
36: aload         4
38: aload         5
40: invokevirtual #8
43: astore        6
45: new           #5
48: dup
49: aload_1
50: invokespecial #6
53: astore        7
55: aload         7
57: aload         6
59: invokevirtual #9
62: istore        8
64: iload         8
66: invokestatic  #10
69: return
Source File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/src/test/java/org/jsoup/safety/Cleaner_ESTest.java
Bytecode File: /data/islam/DBT-workbench/resources/subjects/fixed/jsoup/30/target/test-classes/org/jsoup/safety/Cleaner_ESTest.class
Class name: Cleaner_ESTest
Method name: test4
Start line: 61
End line: 76
Method source code: 
  public void test4()  throws Throwable  {
      Whitelist whitelist0 = Whitelist.simpleText();
      Whitelist whitelist1 = whitelist0.addEnforcedAttribute("body", "body", "body");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "body";
      stringArray0[1] = "body";
      stringArray0[2] = "body";
      stringArray0[3] = "body";
      whitelist0.addAttributes("body", stringArray0);
      Cleaner cleaner0 = new Cleaner(whitelist1);
      Document document0 = Document.createShell("body");
      Document document1 = cleaner0.clean(document0);
      boolean boolean0 = cleaner0.isValid(document1);
      assertNotSame(document1, document0);
      assertTrue(boolean0);
  }
Method byte code: 
0: invokestatic  #2
3: astore_1
4: aload_1
5: ldc           #3
7: ldc           #3
9: ldc           #3
11: invokevirtual #4
14: astore_2
15: iconst_4
16: anewarray     #19
19: astore_3
20: aload_3
21: iconst_0
22: ldc           #3
24: aastore
25: aload_3
26: iconst_1
27: ldc           #3
29: aastore
30: aload_3
31: iconst_2
32: ldc           #3
34: aastore
35: aload_3
36: iconst_3
37: ldc           #3
39: aastore
40: aload_1
41: ldc           #3
43: aload_3
44: invokevirtual #20
47: pop
48: new           #5
51: dup
52: aload_2
53: invokespecial #6
56: astore        4
58: ldc           #3
60: invokestatic  #7
63: astore        5
65: aload         4
67: aload         5
69: invokevirtual #8
72: astore        6
74: aload         4
76: aload         6
78: invokevirtual #9
81: istore        7
83: aload         6
85: aload         5
87: invokestatic  #14
90: iload         7
92: invokestatic  #17
95: return
}
